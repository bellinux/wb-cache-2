364|2921|Public
25|$|Outside of {{the desktop}} arena, however, the ARM {{architecture}} (RISC) is in widespread use in smartphones, tablets and {{many forms of}} <b>embedded</b> <b>device.</b> It {{is also the case}} that since the Pentium Pro (P6) Intel has been using an internal RISC processor core for its processors.|$|E
500|$|Embedded {{devices and}} <b>embedded</b> <b>device</b> {{operating}} systems based on FreeBSD include: ...|$|E
500|$|FreeBSD is {{released}} under {{a variety of}} open source licenses. The kernel code and most newly created code {{is released}} under the two-clause BSD license which allows everyone to use and redistribute FreeBSD as they wish. This license was approved by Free Software Foundation and Open Source Initiative as a Free Software and Open Source license respectively. Free Software Foundation described this license as [...] "a lax, permissive non-copyleft free software license, compatible with the GNU GPL". There are parts released under three- and four-clause BSD licenses, as well as Beerware license. Some device drivers include a binary blob, such as the Atheros HAL of FreeBSD versions before 7.2. Some of the code contributed by other projects is licensed under GPL, LGPL, CDDL and ISC. All the code licensed under GPL and CDDL is clearly separated from the code under liberal licenses, to make it easy for users such as <b>embedded</b> <b>device</b> manufacturers to use only permissive free software licenses. ClangBSD aims to replace some GPL dependencies in the FreeBSD base system by replacing the GNU compiler collection with the BSD-licensed LLVM/Clang compiler. ClangBSD became self-hosting on 16 April 2010.|$|E
30|$|Here, k is {{the active}} {{biological}} response scale of sample points, u is <b>embedded</b> <b>devices</b> activated sample points, and v is the biological response data buffer factor for <b>embedded</b> <b>devices.</b>|$|R
40|$|In {{this paper}} we {{describe}} an interesting context to study formal methods for component systems: <b>embedded</b> <b>devices.</b> The context of <b>embedded</b> <b>devices</b> is highly {{constrained by the}} physical requirements the devices have to adhere to. As a result, component models for <b>embedded</b> <b>devices</b> are not general purpose but geared towards these constrained contexts. In this paper we give the concrete setting of the Pecos project (a project with as goal component engineering for <b>embedded</b> <b>devices).</b> We describe the Pecos component model, and show possibilities where we think formal verification could be useful. We would like to {{use this as a}} very concrete example to discuss formal verification techniques...|$|R
50|$|Two {{additional}} {{editions of}} Windows Vista {{have been released}} for use by developers of <b>embedded</b> <b>devices.</b> Microsoft lists the system requirements for these editions as being {{the same as their}} desktop variants. These editions are licensed exclusively for the development of <b>embedded</b> <b>devices.</b>|$|R
5000|$|... #Subtitle level 2: <b>Embedded</b> <b>Device</b> Configuration API from E-S-R {{consortium}} ...|$|E
5000|$|Embedded {{devices and}} <b>embedded</b> <b>device</b> {{operating}} systems based on FreeBSD include: ...|$|E
5000|$|For {{development}} on a mobile or <b>embedded</b> <b>device</b> that supports SSH.|$|E
40|$|Abstract — In this paper, {{a problem}} of audio source {{localization}} is solved, using a network of <b>embedded</b> <b>devices.</b> The intensive computing procedures (such as the crosscorrelation functions) are performed by the <b>embedded</b> <b>devices,</b> which have enough speed and memory for this task. A central computer computes the position in a fast procedure, using the data transmitted by the network nodes, and {{plays the role of}} operator interface. The paper also contains the description of the <b>embedded</b> <b>devices,</b> which are designed and manufactured by the authors. They prove to be suited for this kind of application, as they perform fast computation and require low power and small space for installing. Index Terms — audio source, direction of arrival (DoA), <b>embedded</b> <b>devices,</b> position measurement, sensor network. I...|$|R
30|$|Additionally, {{random number}} {{generators}} {{are required to}} generate high-quality random numbers regardless of environmental changes. That is because <b>embedded</b> <b>devices</b> are often exposed to environmental changes. Attackers could intentionally reduce the quality of random numbers by freezing <b>embedded</b> <b>devices</b> or by supplying a lower voltage than rated.|$|R
5000|$|Contiki, an {{operating}} system for small-memory <b>embedded</b> <b>devices</b> ...|$|R
5000|$|... 2Wire {{acquired}} Kenati Technologies, an <b>embedded</b> <b>device</b> software company, in October 2007.|$|E
50|$|USBAccess: It is a USB-host {{software}} {{targeted for}} consumer electronics and <b>embedded</b> <b>device</b> manufacturers.|$|E
5000|$|... 2003 First {{company in}} the world to cross-compile GTK for an <b>embedded</b> <b>device</b> with touch screen.|$|E
30|$|As a result, our TRNGs on ASICs {{were able}} to {{generate}} high-quality random numbers even if the environment changed. Thus, our TRNGs are considered to improve the security of <b>embedded</b> <b>devices.</b> In addition, they {{were found to be}} small and low-power enough to be implemented in <b>embedded</b> <b>devices.</b>|$|R
40|$|Abstract — This paper {{proposes a}} novel {{approach}} for the efficient implementation of solvers for linear MPC on <b>embedded</b> <b>devices.</b> The main focus is to explain in detail the approach used to optimize the linear algebra for selected low-power <b>embedded</b> <b>devices,</b> and {{to show how the}} high-performance implementation of a single routine (the matrix-matrix multiplication gemm) can speed-up an interior-point method for linear MPC. The results show that the high-performance MPC obtained using the proposed approach is several times faster than the current state-of-the-art IP method for linear MPC on <b>embedded</b> <b>devices.</b> I...|$|R
5000|$|New and {{emerging}} cryptographic algorithms and protocols targeting <b>embedded</b> <b>devices</b> ...|$|R
50|$|XPe adds a USB boot {{option to}} Windows. An XPe <b>embedded</b> <b>device</b> can be {{configured}} to boot from a USB drive.|$|E
5000|$|OpenWrt {{supports}} any hardware {{that has}} Linux support; devices {{that can be}} connected (e.g. over USB) to an <b>embedded</b> <b>device</b> include ...|$|E
5000|$|The <b>Embedded</b> <b>Device</b> Configuration {{specification}} {{defines the}} minimal embedded standard runtime environment for embedded Java devices.It defines all the default CORE API packages (138 classes/interfaces): ...|$|E
40|$|Abstract—The {{increasing}} {{deployment of}} networked mobile <b>embedded</b> <b>devices</b> leads to unique challenges communications security. This {{is especially true}} for <b>embedded</b> biomedical <b>devices</b> and robotic materials handling, in which subversion or denial of service could result in loss of human life and other catastrophic outcomes. In this paper we present the Learning Intrusion Detection System (L-IDS), a network security service for protecting <b>embedded</b> mobile <b>devices</b> within institutional boundaries, which can be deployed alongside existing security systems with no modifications to the <b>embedded</b> <b>devices.</b> L-IDS utilizes the OpenFlow Software-Defined Networking architecture, which allows it to both detect and respond to attacks as they happen. I...|$|R
40|$|File Allocation Table (FAT) {{file system}} {{is the most common}} file system used in <b>embedded</b> <b>devices</b> such as smart phones, digital cameras, smart TVs, tablets, etc. Typically these <b>embedded</b> <b>devices</b> use Solid State Drives (SSD) as storage devices. The ExFAT file system is future file system for <b>embedded</b> <b>devices</b> and it is optimal for SSDs. This paper discourses the methodologies for Geotagging as a file system {{metadata}} instead of file data in FAT and ExFAT file systems. The designed methodologies of this paper adheresthe compatibility with the FAT file system specification and existing ExFAT file system implementations...|$|R
5000|$|OpenWrt: Unix {{operation}} system running the Linux kernel on <b>embedded</b> <b>devices</b> ...|$|R
50|$|The {{encapsulation}} of ATA {{provided by}} AoE {{is simple and}} low-level, allowing the translation to happen either at high performance or inside a small, <b>embedded</b> <b>device,</b> or both.|$|E
50|$|It is {{also used}} as the Wire {{protocol}} for the AllJoyn protocol for home automation, to this end AllJoyn adds discovery, session management, security, header compression, <b>embedded</b> <b>device</b> support and makes it transport agnostic.|$|E
5000|$|Windows CE {{supports}} UART, USB, SDIO, and BCSP connections. Third party stacks {{can also}} be installed on Windows CE devices, including Widcomm, BlueSoleil and Toshiba, depending on the <b>embedded</b> <b>device</b> and which version of the OS is installed.|$|E
40|$|As {{the cost}} of both {{networking}} and producing powerful <b>embedded</b> <b>devices</b> drops, collections of these highly specialized and heterogeneous platforms will proliferate. These networks will face security threats and suffer traditional hardware failure. Failure of <b>embedded</b> <b>devices</b> is undesirable because these devices often perform critical functions and are difficult to take offline and upgrade. Networks of <b>embedded</b> <b>devices</b> require a method to accomplish functional survivability of essential computations in a hostile or volatile environment. This paper presents a protocol and describes an implementation for migrating essential computations from failed devices. An essential computation is a device's primary algorithmic functionality. This migration is accomplished by specifying both an Area Controller (AC), which contains definitions for every essential computation, {{and a number of}} proxy agents, which periodically send the AC update statements. The AC and proxy agents negotiate the specifics of process migration when the AC has determined that a device has failed. The implementation of this protocol in a network of <b>embedded</b> <b>devices</b> is a crucial step toward fault tolerance and survivability in networks of <b>embedded</b> <b>devices.</b> The protocol can also be applied to networks that do not involve embedded systems...|$|R
25|$|OpenWrt – is {{primarily}} used on <b>embedded</b> <b>devices</b> to route network traffic.|$|R
5000|$|CCI = Controlled Cryptographic Item - {{equipment}} {{which contains}} COMSEC <b>embedded</b> <b>devices</b> ...|$|R
5000|$|ClarinoxSoftFrame - {{middleware}} {{which provides}} OS abstraction targeting wireless <b>embedded</b> <b>device</b> and system development. It comprises wireless protocol stacks, development tools and memory management techniques {{in addition to}} the support of desktop and a range of real-time operating systems ...|$|E
50|$|Three {{years after}} Spam Cube {{released}} its technology, Cisco Systems {{teamed up with}} Trend Micro to manufacture the Linksys Home Network Defender. Linksys and Trend Micro now compete directly with Spam Cube for market share in the <b>embedded</b> <b>device</b> SaaS market.|$|E
50|$|Certification OfferingsTwo COTS product {{certifications}} {{are available}} under the ISASecure® brand: ISASecure-EDSA (<b>Embedded</b> <b>Device</b> Security Assurance) certifying IACS {{products to the}} IEC 62443-4-2 IACS cybersecurity standard and ISASecure-SSA (System Security Assurance), certifying IACS systems to the IEC 62443-3-3 IACS cybersecurity standard.|$|E
5000|$|HID over I²C - Used for <b>embedded</b> <b>devices</b> in Microsoft Windows 8 ...|$|R
5000|$|OpenEmbedded a {{software}} framework for creating Linux distributions tailored for <b>embedded</b> <b>devices</b> ...|$|R
5000|$|OpenWrt - is {{primarily}} used on <b>embedded</b> <b>devices</b> to route network traffic.|$|R
