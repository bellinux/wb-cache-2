2895|2302|Public
5|$|This {{led to the}} {{division}} of McKinsey, Wellington & Company in 1939. The accounting practice returned to Scovell, Wellington & Company, while the management <b>engineering</b> <b>practice</b> was split into McKinsey & Company and McKinsey, Kearney & Company. Bower had partnered with Guy Crockett from Scovell Wellington, who invested in the new McKinsey & Company and became managing partner, while Marvin Bower is credited with founding the firm's principles and strategy as his deputy. The New York office purchased exclusive rights to the McKinsey name in 1946.|$|E
5|$|Abraham Henthorn Stott, {{the son of}} a stonemason, {{was born}} in nearby Shaw and Crompton in 1822. He served a seven-year {{apprenticeship}} with Sir Charles Barry, before starting a structural <b>engineering</b> <b>practice</b> in Oldham in 1847 that {{went on to become the}} pre-eminent mill architect firm in Lancashire. Philip Sydney Stott, third son of Abraham and later titled as Sir Philip Stott, 1st Baronet, was the most prominent and famous of the Stott mill architects. He established his own practice in 1883 and designed over a hundred mills in several countries. His factories, which improved upon his father's fireproof mills, accounted for a 40% increase in Oldham's spindles between 1887 and 1914.|$|E
25|$|In 1995, Landau {{established}} a new chair at MIT, the Ralph Landau Professor of Chemical <b>Engineering</b> <b>Practice</b> and Director of the Practice School.|$|E
50|$|Professional {{standards}} for <b>engineering</b> <b>practices.</b>|$|R
5000|$|Web2py {{encourages}} sound software <b>engineering</b> <b>practices</b> such as ...|$|R
40|$|Abstract- The Scrum {{methodology}} is an agile {{software development}} process that {{works as a}} project management wrapper around existing <b>engineering</b> <b>practices</b> to iteratively and incrementally develop software. With Scrum, for a developer to receive credit {{for his or her}} work, he or she must demonstrate the new functionality provided by a feature {{at the end of each}} short iteration during an iteration review session. Such a short-term focus without the checks and balances of sound <b>engineering</b> <b>practices</b> may lead a team to neglect quality. In this paper we present the experiences of three teams at Microsoft using Scrum with an additional nine sound <b>engineering</b> <b>practices.</b> Our results indicate that these teams were able to improve quality, productivity, and estimation accuracy through the combination of Scrum and nine <b>engineering</b> <b>practices...</b>|$|R
25|$|Engineering geology is the {{application}} of the geologic principles to <b>engineering</b> <b>practice</b> for the purpose of assuring that the geologic factors affecting the location, design, construction, operation, and maintenance of engineering works are properly addressed.|$|E
25|$|From its beginnings, {{software}} engineering has helped shape modern systems <b>engineering</b> <b>practice.</b> The techniques {{used in the}} handling of the complexities of large software-intensive systems have had a major effect on the shaping and reshaping of the tools, methods and processes of Software Engineering.|$|E
25|$|The VA and var are non-SI units mathematically {{identical}} to the watt, but are used in <b>engineering</b> <b>practice</b> instead of the watt in order to state what quantity is being expressed. The SI explicitly disallows using units for this purpose or as {{the only source of}} information about a physical quantity as used.|$|E
50|$|Faculty of <b>Engineering</b> <b>Practices</b> and Sciences, Electrical and Mechanical.|$|R
40|$|Component-based {{software}} engineering (CBSE) spans {{a range of}} technologies and <b>engineering</b> <b>practices.</b> <b>Engineering</b> <b>practices</b> for component-based systems (e. g., design, integrate, test, deploy and sustain) are emerging, but in isolated settings rather than at a community level. The goal of this workshop {{is to provide a}} baseline understanding of the broad aspects of CBSE processes. ...|$|R
40|$|Context: Understanding {{the types}} of {{software}} <b>engineering</b> <b>practices</b> and techniques used in the industry is important. There is a wide spectrum {{in terms of the}} types and maturity of software <b>engineering</b> <b>practices</b> conducted in each software team and company. To characterize the type of software <b>engineering</b> <b>practices</b> conducted in software firms, a variety of surveys have been conducted in different countries and regions. Turkey has a vibrant software industry and it is important to characterize and understand the state of software <b>engineering</b> <b>practices</b> in this industry. Objective: Our objective is to characterize and grasp a high-level view on type of software <b>engineering</b> <b>practices</b> in the Turkish software industry. Among the software <b>engineering</b> <b>practices</b> that we have surveyed in this study are the followings: software requirements, design, development, testing, maintenance, configuration management, release planning and support practices. The current survey is the most comprehensive of its type ever conducted in the context of Turkish software industry. Method: To achieve the above objective, we systematically designed an online survey with 46 questions based on our past experience in the Canadian and Turkish contexts and using the Software Engineering Body of Knowledge (SWEBOK). 202 practicing software engineers from the Turkish software industry participated in the survey. We analyze and report in this paper the results of the questions. Whenever possible, we also compare the trends and results of our survey with the results of a similar 2010 survey conducted in the Canadian software industry...|$|R
25|$|Among Alan Pritsker’s diverse {{contributions}} to <b>engineering</b> <b>practice,</b> {{perhaps the most}} prominent was his {{development and use of}} large-scale simulation models to support policy analysis for organ transplantation by the United Network for Organ Sharing. In particular, his work was used to formulate more effective and equitable protocols for assigning liver transplants to waiting patients. This is a remarkable example of the definitive practice of system simulation in addressing ultimate questions of life and death.|$|E
25|$|Information {{theory is}} closely {{associated}} {{with a collection of}} pure and applied disciplines that have been investigated and reduced to <b>engineering</b> <b>practice</b> under a variety of rubrics throughout the world over the past half century or more: adaptive systems, anticipatory systems, artificial intelligence, complex systems, complexity science, cybernetics, informatics, machine learning, along with systems sciences of many descriptions. Information theory is a broad and deep mathematical theory, with equally broad and deep applications, amongst which is the vital field of coding theory.|$|E
25|$|Abraham Henthorn Stott, {{the son of}} a stonemason, {{was born}} in nearby Shaw and Crompton in 1822. He served a seven-year {{apprenticeship}} with Sir Charles Barry, before starting a structural <b>engineering</b> <b>practice</b> in Oldham in 1847 that {{went on to become the}} pre-eminent mill architect firm in Lancashire. Philip Sydney Stott, third son of Abraham and later titled as Sir Philip Stott, 1st Baronet, was the most prominent and famous of the Stott mill architects. He established his own practice in 1883 and designed over a hundred mills in several countries. His factories, which improved upon his father's fireproof mills, accounted for a 40% increase in the spindles of Oldham between 1887 and 1914.|$|E
50|$|Sound {{software}} <b>engineering</b> <b>practices</b> {{and documentation}} {{are used in}} the development of the software.|$|R
40|$|Survivability is the {{capability}} of an information system to support critical enterprise missions in adverse environments of attacks, failures, and accidents [Ellison et al 1999]. A research program in survivability must therefore address both systems and the environments within which they operate. Survivability {{is a combination of}} quality attributes, including security, reliability, safety, fault tolerance, dependability, and others [Mead et al 2000]. The SEI CERT Coordination Center, in cooperation with other researchers, has embarked on a multi-year, dual-thread research program, one thread to create <b>engineering</b> <b>practices</b> for survivable system design and development, the other to create <b>engineering</b> <b>practices</b> for analysis and definition of adverse environments. We believe that lack of theoretical foundations in both areas has been a serious impediment to survivable system development. In essence, we seek to move beyond natural language descriptions of survivability to a computational capability for engineering analysis of survivability properties. Accordingly, our agenda is to progress from theoretical foundations, to formal language representations, to <b>engineering</b> <b>practices.</b> We take it as an article of faith that to be effective, <b>engineering</b> <b>practices</b> must be based on rigorous foundations. At the same time, it is important to target foundations and <b>engineering</b> <b>practices</b> to the present reality and future evolution of information system architectures and technologies. Today’s large-scale infrastructur...|$|R
5000|$|... "Good {{engineering}} practice" [...] or [...] "GEP" [...] is {{engineering and}} technical activities that {{ensure that a}} company manufactures products of the required quality as expected (e.g., by the relevant regulatory authorities). Good <b>engineering</b> <b>practices</b> are {{to ensure that the}} development and/or manufacturing effort consistently generates deliverables that support the requirements for qualification or validation. Good <b>engineering</b> <b>practices</b> are applied to all industries that require engineering.|$|R
25|$|On 8 April 1891, Monash married Hannah Victoria Moss (1871–1920), {{and their}} only child, Bertha, {{was born in}} 1893. Monash had {{previously}} engaged in an affair with Annie Gabriel, the wife {{of one of his}} colleagues, which ended as an active matter after his conscious choice of 'Vic' for marriage (though communication continued many years afterwards). He worked as a civil engineer, and {{played a major role in}} introducing reinforced concrete to Australian <b>engineering</b> <b>practice.</b> He initially worked for private contractors on bridge and railway construction, and as their advocate in contract arbitrations. Following a period with the Melbourne Harbour Trust, in 1894 he entered into partnership with J. T. N. Anderson as consultants and contractors. When the partnership was dissolved in 1905 he joined with the builder David Mitchell and industrial chemist John Gibson to form the Reinforced Concrete & Monier Pipe Construction Co, and in 1906 with them and businessmen from South Australia, to form the S. A. Reinforced Concrete Co. He took a leading part in his profession and became president of the Victorian Institute of Engineers and a member of the Institution of Civil Engineers, London.|$|E
500|$|Engelbart took a {{position}} at SRI International (known then as Stanford Research Institute) in Menlo Park, California in 1957. He worked for Hewitt Crane on magnetic devices and miniaturization of electronics; Engelbart and Crane became close friends. At SRI, Engelbart soon obtained a dozen patents, and by 1962 produced a report about his vision and proposed research agenda titled Augmenting Human Intellect: A Conceptual Framework. [...] Among other highlights, this paper introduced [...] "Building Information Modelling", which architectural and <b>engineering</b> <b>practice</b> eventually adopted (first as [...] "parametric design") in the 1990s and after.|$|E
500|$|In 1857, Barlow {{left the}} Midland Railway to form his own {{consultant}} <b>engineering</b> <b>practice</b> in London, with the Midland Railway {{as a significant}} client. Following the death of Isambard Kingdom Brunel in 1859, Barlow was commissioned with John Hawkshaw to complete the Clifton Suspension Bridge, Bristol, construction {{of which had been}} stalled since 1843 due to insufficient funds to finish it. Reusing the chains from Brunel's earlier Hungerford Suspension Bridge in London, demolished in 1860, Barlow and Hawkshaw completed the bridge in 1864 with a more robust deck than Brunel had planned and other variations caused by the reuse of the existing chains. Its [...] span was the longest in Britain at the time.|$|E
50|$|Requirement management, {{which is}} a {{sub-function}} of Systems <b>Engineering</b> <b>practices,</b> is also indexed in the INCOSE (International Council on Systems Engineering) manuals.|$|R
5000|$|Informative {{material}} was improved, including revising the <b>engineering</b> <b>practices</b> to reflect industry best practice and adding guidance for organizations that use Agile methods.|$|R
50|$|The episode {{has been}} {{referenced}} {{in both the}} scientific and popular media {{as a case study}} motivating improved software <b>engineering</b> <b>practices</b> in computational biology.|$|R
2500|$|Fredlund, D. G., H. Rahardjo, M. D. Fredlund (2014). Unsaturated Soil Mechanics in <b>Engineering</b> <b>Practice.</b> Wiley-Interscience.|$|E
2500|$|Terzaghi, Karl; Peck, Ralph B.; Mesri, Gholamreza. Soil Mechanics in <b>Engineering</b> <b>Practice.</b> [...] New York: Wiley, 1996.|$|E
2500|$|Harl P. Aldrich, James R. Lambrechts (Fall 1986). [...] "", Civil <b>Engineering</b> <b>Practice,</b> Volume 1, Number 2.|$|E
5000|$|Da Costa, C.G.A. & Sabbatini, R.M.E.: A Survey of Software <b>Engineering</b> <b>Practices</b> in the Development of Electronic Patient Record Systems. Proceed. AMIA Annu. Meet.|$|R
5000|$|Library Oriented Architecture {{may provide}} {{different}} process improvements to existing software <b>engineering</b> <b>practices</b> and software development life-cycle. Some tangible benefits from its adoption are: ...|$|R
40|$|Existing {{software}} engineering literature {{acknowledges that the}} existence of fundamental software <b>engineering</b> <b>practices</b> would improve the success rate of IT projects. These practices range from having clear organizational standards for performing software development activities, utilizing CASE tools, all the way to project management practices. The purpose of this research is to measure the degree of applying these software <b>engineering</b> <b>practices</b> in ITC companies in Jordan, in order to identify areas of improvement to increase the competitiveness of these companies within the IT market...|$|R
2500|$|Cremer HW, Davies TR, Watkins SB 1965, Chemical <b>Engineering</b> <b>Practice,</b> vol. 8, 'Chemical kinetics,' Butterworths Scientific Publications, London ...|$|E
2500|$|Terzaghi, K., Peck, R. B. and Mesri, G., [...] Soil Mechanics in <b>Engineering</b> <b>Practice,</b> 3rd Ed. Wiley-Interscience (1996) [...]|$|E
2500|$|The {{reciprocal}} of viscosity is fluidity, usually {{symbolized by}} [...] or , {{depending on the}} convention used, measured in reciprocal poise (P−1, or cm·s·g−1), sometimes called the rhe. Fluidity is seldom used in <b>engineering</b> <b>practice.</b>|$|E
40|$|The {{requirement}} {{engineering is}} the process of collection of requirements and further, implements it to the software development process. It is important for every organization to develop quality software products that satisfy the user’s needs. To achieve this goal we have to apply requirement <b>engineering</b> <b>practices</b> in every step of software development process. We use requirement <b>engineering</b> <b>practices</b> because requirement <b>engineering</b> is most important phase of software development process {{and with the help of}} requirement <b>engineering</b> <b>practices</b> we collect user’s requirement and implement them in software development process. The purpose of this paper is to give an idea to how requirement engineering is necessary for software development and how requirement engineering influences the software development process. In this paper we analyze the requirement engineering process for designing quality software products and also describe the importance of requirement engineering...|$|R
40|$|The {{increasingly}} ambitious requirements levied on JPL's {{space science}} missions, {{and the development}} pace of such missions, challenge our current <b>engineering</b> <b>practices.</b> All the <b>engineering</b> disciplines face this growth in complexity to some degree, but the challenges are greatest in systems engineering where numerous competing interests must be reconciled and where complex system level interactions must be identified and managed. Undesired system-level interactions are increasingly a major risk factor that cannot be reliably exposed by testing, and natural-language single-viewpoint specifications areinadequate to capture and expose system level interactions and characteristics. Systems <b>engineering</b> <b>practices</b> must improve to meet these challenges, and the most promising approach today is the movement toward a more integrated and model-centric approach to mission conception, design, implementation and operations. This approach elevates engineering models to a principal role in systems engineering, gradually replacing traditional document centric <b>engineering</b> <b>practices...</b>|$|R
30|$|Possibly by {{combining}} a solenoidal design with more complicated <b>engineering</b> <b>practices,</b> {{such as a}} length-dependent potential or variable coil radius, the desired effects could be produced.|$|R
