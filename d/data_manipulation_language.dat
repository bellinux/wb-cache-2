105|2723|Public
500|$|SQL three-valued {{logic is}} {{encountered}} in <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) in comparison predicates of DML statements and queries. The WHERE clause causes the DML statement {{to act on}} only those rows for which the predicate evaluates to True. [...] Rows for which the predicate evaluates to either False or Unknown are not acted on by INSERT, UPDATE, or DELETE DML statements, and are discarded by SELECT queries. Interpreting Unknown and False as the same logical result is a common error encountered while dealing with Nulls. [...] The following simple example demonstrates this fallacy: ...|$|E
5000|$|The <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) part of DMX {{can be used}} to ...|$|E
5000|$|<b>Data</b> <b>manipulation</b> <b>language</b> - {{performs}} {{tasks such}} as inserting, updating, or deleting data occurrences ...|$|E
50|$|<b>Data</b> <b>manipulation</b> <b>languages</b> {{are divided}} into two types, {{procedural}} programming and declarative programming.|$|R
50|$|<b>Data</b> <b>manipulation</b> <b>languages</b> were {{initially}} only used within computer programs, {{but with the}} advent of SQL have come to be used interactively by database administrators.|$|R
5000|$|<b>Data</b> <b>manipulation</b> <b>languages</b> {{have their}} {{functional}} capability {{organized by the}} initial word in a statement, which is almost always a verb. In the case of SQL, these verbs are: ...|$|R
5000|$|SQL is a {{well known}} query {{language}} and <b>Data</b> <b>Manipulation</b> <b>Language</b> for relational databases; ...|$|E
5000|$|The <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) is the {{subset of}} SQL used to add, update and delete data: ...|$|E
5000|$|Triggers {{which are}} stored {{procedures}} that fire {{in response to}} <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) or Data Definition Language (DDL) events, ...|$|E
50|$|<b>Data</b> <b>manipulation</b> <b>languages</b> tend to {{have many}} {{different}} flavors and capabilities between database vendors. There {{have been a number}} of standards established for SQL by ANSI, but vendors still provide their own extensions to the standard while not implementing the entire standard.|$|R
40|$|The {{entity-relationship}} (ER) approach still lacks {{sound and}} complete theoretical foundations for modern, more sophisticated, ER models. We already proposed an algebra {{as a basis}} for <b>data</b> <b>manipulation</b> <b>languages</b> for such an advanced ER model, called ERC. The aim {{of this paper is to}} formally define a companion ERC calculus. We first investigate a general calculus, which is more natural (straight derivation from the model), but too powerful as it also allows expressions which are semantically inconsistent with the existing database. We then define what restrictions should be imposed, and how, to lead to a calculus whose expressive power is equivalent to the one of the ERC algebra. Keywords: entity-relationship, database theory, <b>data</b> <b>manipulation</b> <b>languages,</b> query languages, algebra, calculus _________________________________________ This work was supported by a research contract with INRIA as part of the "Programme de Recherches Coordonnes Bases de donnes de troisime gnration" (PRC BD 3) [...] . ...|$|R
40|$|The Data Management System- 1100 is {{designed}} to operate {{in conjunction with the}} UNIVAC 1100 Series Operating System on any 1100 Series computer. DMS- 1100 is divided into the following four major software components: (1) Data Definition Languages (DDL); (2) Data Management Routine (DMR); (3) <b>Data</b> <b>Manipulation</b> <b>Languages</b> (DML); and (4) Data Base Utilities (DBU). These software components are described in detail...|$|R
50|$|Like SQL, it {{supports}} a data definition language, <b>data</b> <b>manipulation</b> <b>language</b> and a data query language, all three with SQL-like syntax.Whereas SQL statements operate on relational tables, DMX statements operate on data mining models.Similarly, SQL Server supports the MDX language for OLAP databases. DMX {{is used to}} create and train data mining models, and to browse, manage, and predict against them. DMX is composed of data definition language (DDL) statements, <b>data</b> <b>manipulation</b> <b>language</b> (DML) statements, and functions and operators.|$|E
50|$|Like most query languages, D4 has a Data Definition Language (DDL) and a <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML). D4 {{also has}} an Imperative Language for {{procedural}} code.|$|E
50|$|The query and <b>data</b> <b>manipulation</b> <b>language</b> of Mnesia is also Erlang (rather than SQL), {{therefore}} a web-application for LYME is developed using {{only a single}} programming language.|$|E
40|$|This paper {{describes}} {{the design and}} implementation of a high-level query language called Generalized Query-By-Rule (GQBR) which supports retrieval, insertion, deletion and update operations. This language, based on the formalism of database logic, enables the users to access each database in a distributed heterogeneous environment, without having to learn all the different <b>data</b> <b>manipulation</b> <b>languages.</b> The compiler has been implemented on a DEC 1090 system in Pascal...|$|R
40|$|A {{scenario}} of relational, hierarchial, and network data bases is presented and a distributed access view integrated data base system (DAVID) is described for uniformly accessing data bases which are heterogeneous and physically distributed. The DAVID system {{is based on}} data base logic so that the relational approach is generalized to the heterogeneous approach. The global data manager is explained as are global <b>data</b> <b>manipulation</b> <b>languages</b> which can operate on all the data bases and can query the data dictionary and the data directory...|$|R
30|$|Data {{security}} and privacy issues are magnified by the volume, the variety, and {{the velocity of}} Big Data and by the lack, up to now, of a reference data model and related <b>data</b> <b>manipulation</b> <b>languages.</b> In this paper, we focus {{on one of the}} key data security services, that is, access control, by highlighting the differences with traditional data management systems and describing a set of requirements that any access control solution for Big Data platforms may fulfill. We then describe {{the state of the art}} and discuss open research issues.|$|R
5000|$|Where {{the host}} {{language}} and <b>data</b> <b>manipulation</b> <b>language</b> have different type systems, code conversion operates {{outside of the}} OO type system, and hence has a higher chance of having undetected errors.|$|E
50|$|A popular <b>data</b> <b>manipulation</b> <b>language</b> {{is that of}} Structured Query Language (SQL), {{which is}} used to {{retrieve}} and manipulate data in a relational database. Other forms of DML are those used by IMS/DLI, CODASYL databases, such as IDMS and others.|$|E
50|$|A <b>data</b> <b>manipulation</b> <b>language</b> (DML) is {{a family}} of syntax {{elements}} similar to a computer programming language used for selecting, inserting, deleting and updating data in a database. Performing read-only queries of data is sometimes also considered a component of DML.|$|E
40|$|The {{objective}} of the Distributed Access View Integrated Database (DAVID) project {{is the development of}} an easy to use computer system with which NASA scientists, engineers and administrators can uniformly access distributed heterogeneous databases. Basically, DAVID will be a database management system that sits alongside already existing database and file management systems. Its function is to enable users to access the data in other languages and file systems without having to learn the <b>data</b> <b>manipulation</b> <b>languages.</b> Given here is an outline of a talk on the DAVID project and several charts...|$|R
40|$|International audienceIn this paper, we try {{to provide}} a {{synthetic}} and comprehensive {{state of the art}} concerning big data management in cloud environments. In this perspective, data management based on parallel and cloud (e. g. MapReduce) systems are overviewed, and compared by relying on meeting software requirements (e. g. data independence, software reuse), high performance, scalability, elasticity, and data availability. With respect to proposed cloud systems, we discuss evolution of their <b>data</b> <b>manipulation</b> <b>languages</b> and {{we try to}} learn some lessons should be exploited to ensure the viability of the next generation of large-scale data management systems for big data applications...|$|R
40|$|Data base uniformization {{refers to}} the {{building}} of a common user interface facility to support uniform access to any or all of a collection of distributed heterogeneous data bases. Such a system should enable a user, situated anywhere along a set of distributed data bases, to access all of the information in the data bases without having to learn the various <b>data</b> <b>manipulation</b> <b>languages.</b> Furthermore, such a system should leave intact the component data bases, and in particular, their already existing software. A survey of various aspects of the data bases uniformization problem and a proposed solution are presented...|$|R
50|$|The {{operations}} for which privileges may be granted to or revoked from a user or role apply {{to both the}} Data definition language (DDL) and the <b>Data</b> <b>manipulation</b> <b>language</b> (DML), and may include CONNECT, SELECT, INSERT, UPDATE, DELETE, EXECUTE, and USAGE.|$|E
5000|$|While programmers {{can readily}} embed <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) {{statements}} directly into PL/SQL code using straightforward SQL statements, Data Definition Language (DDL) requires more complex [...] "Dynamic SQL" [...] {{statements in the}} PL/SQL code. However, DML statements underpin the majority of PL/SQL code in typical software applications.|$|E
50|$|A cursor is a mechanism, pointer to {{a private}} SQL area that stores {{information}} coming from a SELECT or <b>data</b> <b>manipulation</b> <b>language</b> (DML) statement (INSERT, UPDATE, DELETE, or MERGE). A cursor holds the rows (one or more) returned by a SQL statement. The set of rows the cursor holds {{is referred to as}} the active set.|$|E
40|$|We {{present a}} {{language}} extension to Datalog which allows to specify deterministic update procedures in a declarative way. Existing update languages either rely on procedural aspects of program evaluation {{or leave the}} framework of deductive databases and logic programming. In contrast, we show that declarative update semantics can be attained by incorporating state terms into the language. Since the resulting language corresponds to a certain class of logic programs, well-known semantics and evaluation techniques {{can be applied to}} it. Computing Reviews Classification: H. 2. 3 [Database Management]: <b>Languages</b> [...] - <b>data</b> <b>manipulation</b> <b>languages,</b> programming languages, query languages Additional Keywords: updates, deductive databases 1 Introduction While Datalog [19], the most prominent deductive database language, has proven to be very powerful as a query language, it lacks means to specify database dynamics. The model of a Datalog program statically describes one state of the modell [...] ...|$|R
40|$|The recent spurt of {{research}} activities in Entity-Relationship Approach to databases {{calls for a}} close scrutiny of the semantics of the underlying Entity-Relationship models, <b>data</b> <b>manipulation</b> <b>languages,</b> <b>data</b> definition languages, etc. For reasons well known, it is very desirable and sometimes imperative to give formal description of the semantics. In this paper, we consider a specific ER model, the generalized Entity-Relationship model (without attributes on relationships) and give denotational semantics for the model {{as well as a}} simple ER algebra based on the model. Our formalism is based on the Vienna Development Method—the meta language (VDM). We also discuss the salient features of the given semantics in detail and suggest directions for further work...|$|R
40|$|SWORD is a {{declarative}} {{object-oriented database}} being built at AT&T Bell Laboratories. SWORD provides both procedural and declarative <b>data</b> <b>manipulation</b> <b>languages.</b> SWORD is {{integrated with the}} O++ language (an extension of C++) of the ODE database system. The data definition and procedural <b>data</b> <b>manipulation</b> in SWORD are done in the O++ sublanguage. In addition, SWORD provides a declarative sublanguage to express queries. Declarativeness yields benefits in reduced programming time and automatic optimization in response to changing database characteristics. The declarative sublanguage {{is based on the}} Noodle language of [MR 93], modified for integration with C++/O++ to avoid the impedance mismatch problem. The declarative sublanguage models object-identity, classes, relations, views, inheritance, complex objects, and methods, in addition to logical rules. In this paper we discuss the design and implementation of the declarative sublanguage of SWORD. Our work bridges the gap between deduct [...] ...|$|R
50|$|The SQL From clause is {{the source}} of a rowset to be {{operated}} upon in a <b>Data</b> <b>Manipulation</b> <b>Language</b> (DML) statement. From clauses are very common, and will provide the rowset to be exposed through a Select statement, the source of values in an Update statement, and the target rows to be deleted in a Delete statement.|$|E
50|$|Originally {{based upon}} {{relational}} algebra and tuple relational calculus, SQL {{consists of a}} data definition language, <b>data</b> <b>manipulation</b> <b>language,</b> and data control language. The scope of SQL includes data insert, query, update and delete, schema creation and modification, and data access control. Although SQL is often described as, and {{to a great extent}} is, a declarative language (4GL), it also includes procedural elements.|$|E
50|$|SPARUL, or SPARQL/Update, is a {{declarative}} <b>data</b> <b>manipulation</b> <b>language</b> that is {{an extension}} to the SPARQL query language standard. SPARUL provides the ability to insert, delete and update RDF data held within a triple store or quad store. SPARUL was originally written by Hewlett-Packard and {{has been used as}} the foundation for the current W3C recommendation entitled SPARQL 1.1 Update.|$|E
40|$|In {{this article}} we present extensional mappings, {{that are based on}} second order tuple {{generating}} dependencies between models in our Generic Role-based Metamodel GeRoMe. Our mappings support data translation between heterogeneous models, such as XML Schemas, relational schemas, or OWL ontologies. The mapping language provides grouping functionalities that allow for complete restructuring of data, which is necessary for handling object oriented models and nested data structures such as XML. Furthermore, we present algorithms for mapping composition and optimization of the composition result. To verify the genericness, correctness, and composability of our approach we implemented a data translation tool and mapping export for several <b>data</b> <b>manipulation</b> <b>languages.</b> Furthermore, we address the question how generic schema mappings can be harnessed for answering queries against an integrated global schema...|$|R
40|$|We {{propose a}} state-oriented {{extension}} to Datalog called Statelog which comprises {{two kinds of}} rules, passive query rules and active transition rules within a simple, yet flexible logical framework. Statelog programs have deterministic model-theoretic semantics for queries and updates thus reconciling active and deductive databases. Using the Statelog framework we prove that termination of active rules is undecidable in general and introduce the class of Δ-monotone programs for which termination is guaranteed. This class provides a generalization to previous results for Statelog and is of practical importance as it includes self-triggering recursive rules. Formal results characterizing the expressiveness and complexity are established which carry over to related state-oriented extensions of Datalog. Computing Reviews Classification: H. 2. 3 [Database Management]: <b>Languages</b> [...] - <b>data</b> <b>manipulation</b> <b>languages</b> (DML); H. 2. 4 [Database Management]: Systems [...] - query processing Additional K [...] ...|$|R
40|$|Distributed {{heterogeneous}} databases {{consist of}} systems which differ physically and logically, containing different data models and <b>data</b> <b>manipulation</b> <b>languages.</b> Although these databases are independently created and administered they must cooperate and interoperate. Users need to access and manipulate data from several databases and applications may require {{data from a}} wide variety of independent databases. Therefore, a new system architecture is required to manipulate and manage distinct and multiple databases, in a transparent way, while preserving their autonomy. This report contains an extensive survey on heterogeneous databases, analysing and comparing the different aspects, concepts and approaches related to the topic. It introduces an architecture to support interoperability among heterogeneous database systems. The architecture avoids the use of a centralised structure to assist in the different phases of the interoperability process. It aims to support scalability, an [...] ...|$|R
