299|159|Public
2500|$|As stated above, the ETSI {{architecture}} is equally applicable to IP-based services where IRI (or CD) {{is dependent on}} parameters associated with the traffic from a given application to be intercepted. [...] For example, {{in the case of}} email IRI would be similar to the <b>header</b> <b>information</b> on an email message (e.g., destination email address, source email address, time email was transmitted) as well as pertinent <b>header</b> <b>information</b> within the IP packets conveying the message (e.g., source IP address of email server originating the email message). [...] Of course, more in-depth information would be obtained by the interception system so as to avoid the usual email address spoofing that often takes place (e.g., spoofing of source address). [...] Voice-over-IP likewise has its own IRI, including data derived from Session Initiation Protocol (SIP) messages that are used to set up and tear down a VOIP call.|$|E
50|$|Vonage {{argued that}} <b>header</b> <b>information</b> was not “misrepresented” within {{the meaning of}} section 17529.5(a)(2) unless it {{contained}} “a false representation of fact” because it was the established definition of the term “misrepresent” according to the tort of misrepresentation. Thus, according to Vonage, their Email advertisements, whose <b>header</b> <b>information</b> was fully accurate and traceable, did not violate section 17529.5(a)(2).|$|E
5000|$|Active Call Detail {{information}} including Time, Date, PUID, Contact Address, From and To <b>header</b> <b>information,</b> etc.|$|E
50|$|Real world OpenCRG {{data files}} may be {{generated}} by several laser scans along a road.World geodetic system coordinates (WGS84), as used by GPS and e.g. Google Maps may {{be attached to}} OpenCRG <b>header</b> <b>informations.</b> This allows to track and visualize the road description. The MATLAB API provides an interface to visualize the location of OpenCRG roads on Google Maps.|$|R
50|$|The <b>header</b> {{includes}} <b>information</b> about self-relocation, entry point, exit instruction, area {{sizes and}} locations, debug type, addressing mode and memory placement (in {{the case of}} the extended file).|$|R
5000|$|... in the HTTP <b>header.</b> This <b>information</b> can {{be based}} on server {{configuration}} (for instance, when serving a file off disk) or controlled by the application running on the server (for dynamic websites).|$|R
50|$|However, Wittel and Wu's {{testing has}} been criticized due to the minimal <b>header</b> <b>information</b> that was present in the emails they were using; most Bayesian spam filters make {{extensive}} use of <b>header</b> <b>information</b> and other message metadata in determining {{the likelihood that a}} message is spam. A discussion of the SpamBayes results and some counter evidence {{can be found in the}} SpamBayes mailing list archive.|$|E
5000|$|Mummagraphics {{argued that}} Cruise.com {{violated}} the CAN-SPAM Act by putting inaccurate <b>header</b> <b>information</b> {{in the commercial}} emails. The court noted that the CAN-SPAM Act provided at [...] that [...] "it is unlawful for any person to initial the transmission, to a computer of a commercial electronic message [...] [...] [...] that contains, or is accompanied by, <b>header</b> <b>information</b> that is materially misleading." [...] The Act further explains that [...] "materially" [...] when used in connection with false or misleading <b>header</b> <b>information,</b> includes “alteration or concealment of <b>header</b> <b>information</b> {{in a manner that}} would impair the ability [...] [...] [...] to identify, locate, or respond to a person who initiated the electronic mail message or to investigate the alleged violation, or the ability of a recipient of the message to respond to a person who initiated the electronic message." [...] Mummagraphics alleged that the Cruise.com emails violated this provision of the CAN-SPAM Act because their emails' header incorrectly indicated that the emails were sent from [...] "FL-Broadcast.net" [...] and also because the emails' [...] "from" [...] address indicated an email address that was non-functional.|$|E
50|$|Reception {{done by a}} Software Defined Radio and {{decoding}} of the D-Star <b>header</b> <b>information</b> done by {{the program}} dstar.exe.|$|E
5000|$|As {{with many}} other HTTP request <b>headers,</b> the <b>information</b> in the [...] "User-Agent" [...] string {{contributes}} to the information that the client sends to the server, since the string can vary considerably from user to user.|$|R
5000|$|<b>Header</b> - {{contains}} <b>information</b> {{about the}} packet, including origin, destination, length and packet number.|$|R
50|$|<b>Header</b> data {{contains}} <b>information</b> such as identification, {{a specific}} {{number and the}} allotted tool class.|$|R
50|$|The molfile {{consists}} of some <b>header</b> <b>information,</b> the Connection Table (CT) containing atom info, then bond connections and types, followed by sections for more complex information.|$|E
5000|$|... {{time of the}} {{transmission}} or reception of an email, <b>header</b> <b>information</b> according to the SMTP-protocol and the IP adresses of the sending and receiving email application.|$|E
50|$|An IP header is <b>header</b> <b>information</b> at the {{beginning}} of an IP packet which contains information about IP version, source IP address, destination IP address, time-to-live, etc.|$|E
50|$|A {{database}} (.DBF) file {{is composed}} of a header, data records, deletion flags, and an end-of-file marker. The <b>header</b> contains <b>information</b> about the file structure, and the records contain the actual data. One byte of each record is reserved for the deletion flag.|$|R
5000|$|Checksum is the 16-bit one's {{complement}} of the one's complement sum of a pseudo <b>header</b> of <b>information</b> from the IP header, the UDP header, and the data, padded with zero octets {{at the end}} (if necessary) to make a multiple of two octets.|$|R
5000|$|In {{graphics}} file formats, the <b>header</b> {{might give}} <b>information</b> about an image's size, resolution, number of colors, and the like.|$|R
5000|$|A background/foreground {{operation}} was envisaged in teletex. Transmission/reception of messages should proceed {{in the background}} without affecting the work which the user might be carrying out in the foreground with the equipment. In other words, a user might be preparing a new document, while another document was being transmitted or received. The teletex would also maintain compatibility with the present telex system and inter-operate with it. Telex procedures called for the exchange of <b>header</b> <b>information</b> before the actual document transfer took place. The <b>header</b> <b>information</b> consisted of four parts: ...|$|E
50|$|Another {{well known}} trail-obfuscation program is Transmogrify (also {{part of the}} Metasploit Framework). In most file types the header of the file {{contains}} identifying information. A (.jpg) would have <b>header</b> <b>information</b> that identifies it as a (.jpg), a (.doc) would have information that identifies it as (.doc) and so on. Transmogrify allows the user to change the <b>header</b> <b>information</b> of a file, so a (.jpg) header could be changed to a (.doc) header. If a forensic examination program or operating system were to conduct a search for images on a machine, it would simply see a (.doc) file and skip over it.|$|E
5000|$|The court {{agreed with}} the defendant’s opinion and held that sending {{commercial}} Email advertisements from multiple domain names {{for the purpose of}} bypassing spam filters is not unlawful under section 17529.5(a)(2). More specifically, the court found that a single Email with an accurate and traceable domain name neither contains nor was accompanied by misrepresented <b>header</b> <b>information</b> within the meaning of section 17529.5(a)(2) merely because its domain name was random, varied, garbled, and nonsensical. According to the court, absent a misrepresentation of <b>header</b> <b>information,</b> using a given domain name could not violate section 17529.5(a)(2) even if the sender intended to bypass the spam filters. The reasoning was as follows: ...|$|E
50|$|The BSAVED {{format is}} a device-dependent raster image format; the file <b>header</b> stores <b>information</b> about the display {{hardware}} address, {{and the size}} of the graphics data.The graphics data follows the header directly and is stored as raw data in the format of the native adapter's addressable memory.|$|R
5000|$|A {{classic example}} of a weak entity without a sub-type {{relationship}} would be the [...] "header/detail' records in many real world situations such as claims, orders and invoices, where the <b>header</b> captures <b>information</b> common across all forms and the detail captures information specific to individual items.|$|R
3000|$|... [...]) of 80, 100, and 120 bytes, to {{minimize}} the PHY (6 bytes) and MAC (8 bytes) <b>headers</b> overhead per <b>information</b> bit.|$|R
50|$|The {{application}} basically captured all internet {{activity and}} only made token {{efforts to prevent}} the collection of passwords. Although the agreement {{said they did not}} examine the text of IMs or email messages, they did collect email <b>header</b> <b>information.</b>|$|E
50|$|Conversions to the Cineon format {{were defined}} in a Kodak {{document}} by Glenn Kennel. The SMPTE standardized the format further into a related format called DPX which can store more varieties of image information {{as well as}} additional <b>header</b> <b>information.</b>|$|E
5000|$|Count 2 and 3: Violating {{two of the}} CAN SPAM Act’s provisions, 18 U.S.C. § 1037(a)(3) and 18 U.S.C. § 1037(a)(4), for falsifying email <b>header</b> <b>information</b> {{including}} the [...] "from" [...] field and registering domain names using false information, respectively ...|$|E
5000|$|Embedded acknowledgments: Acknowledgements can be {{embedded}} in the <b>header</b> of larger <b>information</b> carrying packets {{to reduce the number}} of packets traversing the network.|$|R
40|$|This chapter {{deals with}} the issues {{concerning}} e-mail communication security. We analyze the most popular security mechanisms and standards related to the e-mail communication and identify potential threats and vulnerabilities. The most significant drawback of all current approaches is the impossibility of keeping <b>headers</b> <b>information</b> authentic. This leads to possible impersonation attacks and profiling of the e-mail communication, and encourages spam and phishing activities. Furthermore, none of the currently available security mechanisms supports partial signature generation of the e-mail content by distinct signers, which might be useful in commercial scenarios. To handle these problems, we suggest a new approach, called XMaiL, which {{can be considered as}} an advanced email security mechanism based on the popular XML technologies. The proposed XMaiL supersedes all currently available e-mail security standards {{in the sense of the}} higher flexibility and security...|$|R
5000|$|...The IP <b>Header</b> {{provides}} address <b>information</b> - {{the sender}} and destination addresses, while the TCP/UDP Header provided other pertinent {{information such as}} the port number, etc.|$|R
50|$|Email {{spoofing}} {{occurs when}} the <b>header</b> <b>information</b> of an email is altered to make the message appear {{to come from a}} known or trusted source. In the case of iMails, this is countered by cryptographically signing each iMail with its originator's key.|$|E
50|$|One {{northbound}} frame carries 144 data bits, {{the amount}} of data produced by a 72-bit wide DDR SDRAM array in that time, and 24 bits of CRC for error detection. There is no <b>header</b> <b>information,</b> although unused frames include a deliberately invalid CRC.|$|E
50|$|The {{compression}} form {{used by a}} JT file {{is related}} to the JT file format version in which it was written. This version is readily viewable by opening a JT file in a text editor and looking at its ASCII <b>header</b> <b>information.</b>|$|E
5000|$|Packetized data is {{transmitted}} via frames, which are fixed-length data blocks. The {{size of a}} frame, including frame <b>header</b> and control <b>information,</b> can range up to 2048 bytes.|$|R
40|$|International audienceWith random {{linear network}} coding, mixed packets contain in their <b>headers</b> <b>information</b> about the coding {{operations}} {{performed on the}} original packets to allow their recovery by the receiver. This introduces an overhead that could be significant if the packet size is relatively small w. r. t. {{the size of the}} generation. In this paper, we propose to remove the part of the added header related to the network coding coefficients and to consider network decoding as a source separation problem. This problem is addressed using a maximum a posteriori estimation technique. It exploits some a priori information related to the content of the headers added to the original packets by the upper layers of the protocol stack, before network coding. Experiments show that, despite the fact that traditional source separation techniques are completely inadequate to handle this scenario, the proposed approach is able to recover all packets within streams of thousands of generations without a single decoding erro...|$|R
5000|$|Polipo can, to some extent, {{substitute}} for filtering and privacy-enhancing proxies such as Privoxy or WWWOFFLE, it provides capabilities to block or redirect requests, censor HTTP request <b>headers</b> and referrer <b>information.</b>|$|R
