0|1474|Public
40|$|Research data rarely {{consists}} of a single physical file containing all the needed metadata and data in a compact unit. Normally there are multiple data files, <b>documentation,</b> <b>code</b> <b>lists,</b> and related items. In short, each study is a mini-collection of material. Traditionally, library, archive, and data systems have managed their information in slightly different ways. Libraries create one record for one physical object. Archives have a more collection centric approach expressed as fonds, series, files, and items. DDI like many metadata specifications incorporates the object’s ““discovery metadata”“ record within its overall structure creating essentially an object that serves as an extended record. But is this {{the most effective way}} to manage diverse and highly interconnected collections?The Minnesota Population Center is in the process of organizing our metadata in a way that will allow us to effectively interact with a number of discovery and repository systems around the world. The goal is to use DDI-L as a conduit for linking the contents of our data delivery systems, archive metadata, and related holdings to external systems (e. g. DataONE, da|ra, World Bank) that use a wide variety of standards and formats. This case study reflects our work to date to achieve this goal.  ...|$|R
40|$|The patient's problem list {{is one of}} the key {{components}} of the electronic medical record. Besides the immediate benefits of using the patient problem list for medical records coding and creation of discharge <b>documentation,</b> a <b>coded</b> problem <b>list</b> is a prerequisite of patient management, clinical decision support and research. The ICD 9 coding system that is the current standard for coding diagnoses and procedures is not conducive to physician usage. In this paper we describe a simple system that provides physicians with a quick and easy method to enter and maintain a patient's problem list. Physicians can use their own terminology. ICD 9 codes are included where possible, but free text is allowed. The system strikes a balance between capturing a fully <b>coded</b> patient problem <b>list</b> and encouraging usage by a wide physician user group...|$|R
40|$|The {{objective}} of this summary {{is to provide a}} brief description of: (1) codes developed or under development at LeRC; and (2) the development status of IPACS with some typical early results. The computer codes that have been developed and/or are under development at LeRC are listed in the accompanying charts. This list includes: (1) the code acronym; (2) select physics descriptors; (3) current enhancements; and (4) present (9 / 91) code status with respect to its availability and <b>documentation.</b> The computer <b>codes</b> <b>list</b> is grouped by related functions such as: (1) composite mechanics; (2) composite structures; (3) integrated and 3 -D analysis; (4) structural tailoring; and (5) probabilistic structural analysis. These codes provide a broad computational simulation infrastructure (technology base-readiness) for assessing the structural integrity/durability/reliability of propulsion systems. These codes serve two other very important functions: they provide an effective means of technology transfer; and they constitute a depository of corporate memory...|$|R
5000|$|Permanent {{consistency}} and traceability (requirements, models, <b>documentation,</b> <b>code,</b> …) ...|$|R
40|$|Documentation is {{targeted}} at different readers with different information needs: 1. programmers {{working on the}} <b>code</b> <b>documentation</b> of <b>code</b> <b>documentation</b> of relationship to design 2. client programmers working with the <b>code</b> <b>documentation</b> of the API (interfaces, contracts) documentation of responsibilities 3. end-users having the code work (using the final program) manuals online hel...|$|R
5000|$|For example, a Python package {{combines}} <b>documentation,</b> <b>code</b> {{and initial}} {{set up and}} possibly examples {{that could be used}} as unit tests in a single file with a [...] "py" [...] extension.|$|R
40|$|This study {{determines the}} {{relative}} effect of financial incentives, practice characteristics, and regulatory guidelines on {{the utilization of}} <b>documentation</b> and <b>coding</b> technology among physician practices employing HIM professionals. A total of 442 HIM professionals, 9. 78 percent of the surveyed population, completed a Web-based survey regarding their practices and E/M <b>documentation</b> and <b>coding</b> methods used. More physician practices use the traditional <b>documentation</b> and <b>coding</b> methods than use automated methods. Less {{than half of the}} practices using automated documentation technology also utilized automated coding technology. Financial incentives and regulatory guidelines were not related to <b>documentation</b> or <b>coding</b> method used. Organization size and type were highly related to <b>documentation</b> or <b>coding</b> method used. Practices using coding technology were more likely to perform coding validation. The reasons for low levels of coding technology adoption, which requires little additional physician effort, suggest the potential presence of unique factors inhibiting the adoption of this technology...|$|R
50|$|You {{can place}} {{every type of}} {{document}} you come across {{in one of these}} categories.A lot of software solutions are offered on the Internet that can automate these processes.In particular, some integrated development environmentsprovide interactive access to <b>documentation,</b> <b>code</b> metadata, etc.|$|R
50|$|Additional METAR numeric <b>codes</b> <b>listed</b> after RMK.|$|R
30|$|An ADE {{can have}} its own <b>code</b> <b>lists.</b>|$|R
40|$|AbstractAutomatic {{differentiation}} is used {{to compute}} {{the values of the}} derivative of a function. If the function is given by a computational graph or <b>code</b> <b>list,</b> then the derivative values can be obtained using the chain rule. An iterative process can be regarded as an infinite <b>code</b> <b>list.</b> It is well known from classical analysis that the limit of the derivatives of the <b>code</b> <b>list</b> is not necessarily equal to the derivative of the limit function. The limit of the derivatives is corect for an important class of iterative processes including generalized Newton methods...|$|R
40|$|This project {{organized}} and catalogued {{all of the}} supplemental reading materials of an elementary reading room according to a reading skills <b>code</b> <b>list.</b> The <b>code</b> <b>list</b> was developed by consulting reading skills lists and the school district 2 ̆ 7 s student learning objectives. Fifteen major skill areas {{were included in the}} <b>code</b> <b>list.</b> Each was broken down into subskills which were assigned code numbers. Each supplemental material was examined and catalogued under the appropriate code number. A handbook was compiled which explained the system and listed all of the materials by skill area...|$|R
40|$|This {{specification}} provides {{rules for}} developing and using reusable <b>code</b> <b>lists.</b> This specification {{has been developed}} for the UBL Library and derivations thereof, {{but it may also}} be used by other technologies and XML vocabularies as a mechanism for sharing <b>code</b> <b>lists</b> and for expressing <b>code</b> <b>lists</b> in W 3 C XML Schema form. Status: This document was developed by the OASIS UBL <b>Code</b> <b>List</b> Subcommittee [CLSC]. Your comments are invited. Members of this subcommittee should send comments on this specification to the ubl-clsc@lists. oasis-open. org list. Others should subscribe to and send comments to the ubl-comment@lists. oasis-open. org list. For information on whether any patents have been disclosed that may be essential to implementing this specification, and any offers of patent licensing terms, please refer to th...|$|R
50|$|The {{standard}} work on covering <b>codes</b> <b>lists</b> {{the following}} applications.|$|R
50|$|Swagger is an {{open source}} {{software}} framework backed by a large ecosystem of tools that helps developers design, build, document, and consume RESTful Web services. While most users identify Swagger by the Swagger UI tool, the Swagger toolset includes support for automated <b>documentation,</b> <b>code</b> generation, and test case generation.|$|R
50|$|The BASIC source <b>code</b> <b>listing</b> of {{the game}} is {{available}} online.|$|R
50|$|These are {{the area}} <b>codes</b> <b>listed</b> in the song, in order.|$|R
5000|$|Technical - <b>Documentation</b> of <b>code,</b> algorithms, interfaces, and APIs.|$|R
5000|$|... then <b>documentation</b> and <b>code</b> is {{generated}} from these specifications; ...|$|R
50|$|Classical Nepal Bhasa was {{introduced}} in ISO 639-2 <b>code</b> <b>list</b> in 2004.|$|R
5000|$|A minimal <b>code</b> <b>list</b> (with Herbert Fischer), Theoretical Computer Science 215 (1999) ...|$|R
5000|$|... ! [...] Retained {{for certain}} {{entries in the}} USA <b>code</b> <b>list</b> ("controlled duplications") ...|$|R
5000|$|... print {{database}} schema, source <b>code,</b> <b>lists</b> {{of objects}} or query result sets ...|$|R
40|$|GlobSol is a {{non-commercial}} global optimization {{software package}} for solving problems in global optimization and non-linear systems. The optimizer requires derivative information {{in as many}} as 15 different forms, including point and interval values of objective and constraints, and their first and second partial derivatives. GlobSol uses a <b>code</b> <b>list</b> to represent sequences of mathematical operations. It uses both interpretation and code generation to processes the sequences of operations in various ways while searching for a global minimum. In addition, some derivatives are computed from symbolic differentiation, followed by <b>code</b> <b>list</b> optimization, of the original <b>code</b> <b>list.</b> For interpretation, the stored <b>code</b> <b>list</b> is read by an interpreter for the desired derivative objects, and appropriate program segments are called for each operation. Intermediate results are stored in arrays of floating-point numbers or intervals. The arrays are one-dimensional (vectors), except in the case of Hess [...] ...|$|R
40|$|International audienceMedical {{encoding}} {{support systems}} for diagnoses and medical procedures are an emerging technology that begins {{to play a}} key role in billing, reimbursement, and health policies decisions. A significant problem to exploit these systems is how to measure the appropriateness of any automatically generated <b>list</b> of <b>codes,</b> in terms of fitness for use, i. e. their quality. Until now, only information retrieval performance measurements have been applied to estimate the accuracy of <b>codes</b> <b>lists</b> as quality indicator. Such measurements do not give the value of <b>codes</b> <b>lists</b> for practical medical encoding, and cannot be used to globally compare the quality of multiple <b>codes</b> <b>lists.</b> This paper defines and validates a new encoding information quality measure that addresses the problem of measuring medical <b>codes</b> <b>lists</b> quality. It is based on a usability study of how expert coders and physicians apply computer-assisted medical encoding. The proposed measure, named ADN, evaluates codes Accuracy, Dispersion and Noise, and is adapted to the variable length and content of generated <b>codes</b> <b>lists,</b> coping with limitations of previous measures. According to the ADN measure, the information quality of a <b>codes</b> <b>list</b> is fully represented by a single point, within a suitably constrained feature space. Using one scheme, our approach is reliable to measure and compare the information quality of hundreds of <b>codes</b> <b>lists,</b> showing their practical value for medical encoding. Its pertinence is demonstrated by simulation and application to real data corresponding to 502 inpatient stays in four clinic departments. Results are compared to the consensus of three expert coders who also coded this anonymized database of discharge summaries, and to five information retrieval measures. Information quality assessment applying the ADN measure showed the degree of encoding-support system variability from one clinic department to another, providing a global evaluation of quality measurement trends...|$|R
5000|$|The Tang <b>Code</b> <b>lists</b> {{the five}} forms of {{corporal}} punishment for serfs as: ...|$|R
5000|$|... {{comprehensive}} <b>documentation</b> (Wiki, <b>code</b> snipets, online class documentation, bug tracker) ...|$|R
40|$|Vols. for 1996 - {{published}} as: USMARC <b>code</b> <b>list</b> for organizations. 14 th ed. includes symbols {{approved for}} use as the USMARC <b>code</b> <b>list</b> for organizations. Symbols used in the National union catalog of the Library of Congress. Mode of access: Internet. Vols. for 1969 compiled by: Union Catalog Division; 1976 - 1980 compiled and edited by: Catalog Publication Division; 1985 by: Catalog Management and Publication Division; 1992 by: Library of Congress, Cataloging Distribution Service. Vols. for 1996 - published as monographs with title: USMARC <b>code</b> <b>list</b> for organizations. Earlier vols. issued with title: Symbols used in the National union catalog of the Library of Congress and other union catalogs...|$|R
5000|$|And {{translating}} {{into the}} <b>codes</b> <b>listed</b> {{for each subject}} and facet the classification becomes ...|$|R
40|$|This section {{contains}} {{data elements}} maintained by TCIF or an external source. For the TCIF maintained <b>code</b> <b>lists</b> of DE 150, DE 560, DE 751, DE 822, DE 1000, DE 1271 and DE 1301 the complete <b>list</b> of <b>code</b> values are shown. For DE 26, DE 66, DE 100, DE 116 and DE 156 external sources, a contact is given {{from which the}} user can obtain a current list. DE 128, DE 235 and DE 1104 contain <b>code</b> <b>lists</b> that are subsets of ASC X 12 maintained <b>code</b> <b>lists</b> for which either TCIF maintains associated phrase codes and values, or, associated values are found in an external codelist. All TCIF maintained <b>codes</b> <b>listed</b> in Section 10. 4 can be used immediately, regardless of the X 12 Version/Release listed in the header of this document. The Version/Release number is only used to identify the attributes that the ASC X 12 Data Elements are related to...|$|R
40|$|This article {{introduces}} some of {{the more}} common perl options found in command line programs, also known as one-liners. I cover the-e,-n,-p,-M, and-w switches, along with BEGIN and END blocks. 1 Creating a one-liner Most talented unix Perl programmers I have met have a dirty little secret. They cannot resist the allure of the gnarly Perl one-liner for accomplishing short tasks that do not need a complete script. The-e switch allows me to write Perl scripts directly on the command line. <b>Code</b> <b>listing</b> 1 shows a simple “Hello world”. <b>Code</b> <b>Listing</b> 1 : Hello World prompt perl-e ’print "hello world!"’ hello world! In <b>code</b> <b>listing</b> 2, something a bit more complex, I take the output from ls, parse it for the file size, and sum the sizes for all files which are not directories. <b>Code</b> <b>Listing</b> 2 : File size sum prompt ls-lAF | perl-e ’while () next if /^dt/; sum + = (split) [4] print "sum"...|$|R
50|$|Each release bundle {{contains}} JARs, <b>documentation,</b> source <b>code,</b> {{and other}} information.|$|R
5000|$|The <b>code</b> <b>lists</b> {{are taken}} from http://www.abanet.org/litigation/utbms/home.html, which has the {{following}} Disclaimer & Copyright message: ...|$|R
5000|$|The <b>codes</b> <b>listed</b> above, Potable/Non-potable at the top, Path/Roadway on {{the bottom}} of the plate.|$|R
5000|$|Reference: AMIBIOS8 Check Point and Beep <b>Code</b> <b>List,</b> version 2.0, {{last updated}} 10 June 2008 ...|$|R
50|$|The Extension section then {{allows for}} the {{definition}} of miscellaneous items such as <b>code</b> <b>list</b> values.|$|R
