17|96|Public
50|$|The {{color of}} each point {{represents}} {{how quickly the}} values reached the escape point. Often black is used to show values that fail to escape before the <b>iteration</b> <b>limit,</b> and gradually brighter colors are used for points that escape. This gives a visual representation of how many cycles were required before reaching the escape condition.|$|E
50|$|KIVA-3V uses a block-structured {{mesh with}} {{connectivity}} defined through indirect addressing. The departure {{from a single}} rectangular structure in logical space allows complex geometries to be modeled with significantly greater efficiency because large regions of deactivated cells are no longer necessary. Cell-face boundary conditions permit greater flexibility and simplification {{in the application of}} boundary conditions. KIVA-3V also contains a number of significant improvements over its predecessors. New features enhanced the robustness, efficiency, and usefulness of the overall program for engine modeling. Automatic restart of the cycle with a reduced timestep in case of <b>iteration</b> <b>limit</b> or temperature overflow effectively reduced code crashes. A new option provided automatic deactivation of a port region when it is closed from the cylinder and reactivation when it communicates with the cylinder. Extensions to the particle-based liquid wall film model made the model more complete and a split injection option was also added. A new subroutine monitors the liquid and gaseous fuel phases and energy balance data and emissions are monitored and printed. In addition, new features were added to the LANL-developed grid generator, K3PREP, and the KIVA graphics post processor, K3POST.|$|E
3000|$|... [12]. All {{structures}} are cleaned and 3 D optimized. Energy minimization and geometric optimization were conducted using the Merck molecular force field method with the root mean squaregradient set to 0.01 kcal/molÅ, and the <b>iteration</b> <b>limit</b> to 10, 000. The conformers for all {{structures are}} generated and selected the low energy conformer for each compound {{and used for}} further study.|$|E
40|$|AbstractWe examine two {{questions}} regarding Fourier frequencies {{for a class}} of iterated function systems (IFS). These are <b>iteration</b> <b>limits</b> arising from a fixed finite families of affine and contractive mappings in Rd, and the “IFS” refers to such a finite system of transformations, or functions. The <b>iteration</b> <b>limits</b> are pairs (X,μ) where X is a compact subset of Rd (the support of μ), and the measure μ is a probability measure determined uniquely by the initial IFS mappings, and a certain strong invariance axiom. The {{two questions}} we study are: (1) existence of an orthogonal Fourier basis in the Hilbert space L 2 (X,μ); and (2) explicit constructions of Fourier bases from the given data defining the IFS...|$|R
40|$|Program uses {{one-dimensional}} mean streamline analysis {{conducted at}} fixed stagnation conditions. Seven specific losses are {{calculated for each}} set of compressors geometric variables and inlet velocity diagram characteristics studied. Categories used as input information are compressor geometry, thermodynamic properties of working fluid, velocity diagram characteristics, and <b>iteration</b> <b>limits...</b>|$|R
40|$|We examine two {{questions}} regarding Fourier frequencies {{for a class}} of iterated function systems (IFS). These are <b>iteration</b> <b>limits</b> arising from a fixed finite families of affine and contractive mappings in ^d, and the "IFS" refers to such a finite system of transformations, or functions. The <b>iteration</b> <b>limits</b> are pairs (X, μ) where X is a compact subset of ^d, (the support of μ) and the measure μ is a probability measure determined uniquely by the initial IFS mappings, and a certain strong invariance axiom. The {{two questions}} we study are: (1) existence of an orthogonal Fourier basis in the Hilbert space L^ 2 (X,μ); and (2) the interplay between the geometry of (X, μ) on the one side, and the spectral data entailed by possible Fourier bases. Comment: new version, we included the suggestions of the refere...|$|R
30|$|The {{basic idea}} of this method is to {{reformulate}} the problem as a nonlinear parameter estimation problem which requires the solution of a related initial value problem with initial condition chosen to approximate the boundary conditions at the other endpoint. If these boundary conditions are not satisfied to the desired accuracy, the process is repeated with {{a new set of}} initial conditions until the desired accuracy is achieved or an <b>iteration</b> <b>limit</b> is reached.|$|E
30|$|Phase II In {{the second}} Phase, {{algorithm}} finds all frequent itemsets of length 2, 3, 4 and so on. This phase uses many iterations of Map and Reduce {{until there is}} no frequent itemset for an iteration or maximum <b>iteration</b> <b>limit</b> is reached. In phase II, it makes execution plans for every iteration, compute the cost of execution for every plan and then select the best plan for that iteration. This algorithm uses a dynamic approach which makes it faster and gives efficient results for every iteration. There is some overhead of calculating the cost for every execution plan, but this overhead is negligible when {{we are working on}} large datasets.|$|E
40|$|This paper {{concerns}} {{the use of}} genetic algorithms for line labelling. We are interested in finding an optimal set of algorithm control parameters for this problem. We give results from using a simple genetic algorithm to solve several line labelling problems and discuss the effects of crossover type, population size, crossover rate, mutation rate and <b>iteration</b> <b>limit</b> on algorithm performance. We conclude that the algorithm is very sensitive to mutation rate, {{and that there is}} a threshold population size beyond which success rates are very high but that this threshold increases rapidly with the problem size. We recommend that a mutation rate of 0. 02 be used in conjunction with a crossover rate of between 0. 6 and 0. 9. Iteration limi...|$|E
30|$|However, if {{the fitness}} value {{has not been}} {{improved}} by the new fitness after the preordained maximum <b>iterations</b> (<b>limit),</b> the associated employed bee will abandon this food source and will become a scout to randomly search another food source in the search window. After the new locations of the employed bees (or the food sources) are determined, a next iteration will be started until the termination condition is satisfied.|$|R
40|$|We {{introduce}} {{a modification of}} Broyden's method for finding a zero of n nonlinear equations in n unknowns when analytic derivatives are not available. The method retains the local Q-superlinear convergence of Broyden's method and has the additional property that if {{any or all of}} the equations are linear, it locates a zero of these equations in n+ 1 or fewer <b>iterations.</b> <b>Limited</b> computational experience suggests that our modification often improves upon Eroyden's method. ...|$|R
40|$|In {{this paper}} we propose a new hyper-heuristic that is {{composed}} of a simple selection mecha-nism based on a learning automaton and a new acceptance mechanism, i. e. the <b>Iteration</b> <b>Limited</b> Threshold Accepting criterion. This hyper-heuristic is applied to the challenging Traveling Tour-nament Problem. We show that the new hyper-heuristic method consistently outperforms the Simple Random hyper-heuristic even with a small number of low-level heuristics. Moreover, our method, although very general, generates high-quality solutions for the known Traveling Tour-nament Problem benchmarks and offers new solutions for the recently added Super instances. ...|$|R
40|$|A {{reassignment}} heuristic, {{originally designed}} to produce good solutions to an optimisation problem in rostering, is generalised so that it can, at least in theory, find a feasible solution to any constraint satisfaction problem (CSP), if one exists. The heuristic requires an initial solution which is consistent but incomplete, in that some variables may be unassigned. Each unassigned variable is considered in turn and the heuristic attempts to find reassignments of other variables which will allow the unassigned variable {{to be given a}} value consistent {{with the rest of the}} current solution. If this cannot be done, a value is chosen for the unassigned variable, the assignments which are inconsistent with the new assignment are deleted from the solution, and their variables are made unassigned in turn. The heuristic proceeds in this fashion until there are no remaining unassigned variables, or it reaches its <b>iteration</b> <b>limit.</b> In order to investigate the strengths and weaknesses [...] ...|$|E
40|$|This work {{presents}} a new constructive heuristic for graph coloring based on Genetic Algorithms. The Constructive Genetic Algorithm (CGA) {{begins with an}} initial population formed only of schemas (partial colorings), and iterates (re) combining two schemas. The new schemas present more colored nodes. At each iteration, is performed an elimination of schemas from the population and the process finishes with an empty population or an <b>iteration</b> <b>limit</b> reached. The permanence criterion is based on proportional adaptation of the schema to the population. The same CGA is adapted to find the maximum independent node set of a given graph. The identified set {{is removed from the}} graph and the process is repeated for the reduced graph. Successive reductions result in the node coloring of the original graph. This approach is used for large, or high density graphs. Computational results are shown for instances from the literature using microcomputer implementation. Resumo: Este trabalho apresenta [...] ...|$|E
40|$|In {{finite element}} analysis, {{structures}} are modeled as meshes of elements and nodes {{appropriate for the}} geometry, boundaries and loading of each structure. Typically, it is desirable to have a mesh which is finer {{in parts of the}} structure where stress gradients are high and coarser where such gradients are low. This is usually done by experienced engineers using intuition and previous experience. Otherwise, a fine mesh throughout the structure can be used which results in high computational costs. In this work, the possibility of using genetic algorithms for optimizing finite-element meshes is studied. The method is implemented on a number of simple loaded structures. The meshes used are generated using a number of parameters that can be varied randomly. Then the parameters are varied using operators appropriate to genetic algorithms such that the value of an objective function is minimized within a defined precision and <b>iteration</b> <b>limit.</b> The objective function used in this study is an energy-based error norm. The results obtained with this method are compared to those obtained from a commercial finite element package that incorporates its own mesh optimization algorithms...|$|E
40|$|In {{this paper}} we propose a new {{learning}} hyper-heuristic that is composed of a simple selection mechanism based on a learning automaton and a new acceptance mechanism, i. e. the <b>Iteration</b> <b>Limited</b> Threshold Accepting criterion. This hyper-heuristic is applied to the challenging Traveling Tournament Problem. We show that the new hyper-heuristic method, even with a small number of low-level heuristics, consistently outperforms another hyper-heuristic without any learning device. Moreover, the learning hyper-heuristic method, although very general, generates high-quality solutions for the tested Traveling Tournament Problem benchmarks. status: accepte...|$|R
40|$|In this paper, we derive a {{randomized}} {{version of the}} Mirror-Prox method for solving some structured matrix saddle-point problems, such as the maximal eigenvalue minimization problem. Deterministic first-order schemes, such as Nesterov’s Smoothing Techniques or standard Mirror-Prox methods, require the exact computation of a matrix exponential at every <b>iteration,</b> <b>limiting</b> {{the size of the}} problems they can solve. Our method allows us to use stochastic approximations of matrix exponentials. We prove that our randomized scheme decreases significantly the complexity of its deterministic counterpart for large-scale matrix saddle-point problems. Numerical experiments illustrate and confirm our theoretical results...|$|R
40|$|Internal {{computation}} underlies robust non-equilibrium living process. The smallest {{details of}} living systems are molecular devices that realize non-demolition quantum measurements. These smaller devices form larger devices (macromolecular complexes), up to living body. The quantum device possesses its own potential internal quantum state (IQS), which is maintained for a prolonged time via reflective error-correction. Decoherence-free IQS can exhibit itself by a creative generation of <b>iteration</b> <b>limits</b> {{in the real}} world. It resembles the properties of a quasi-particle, which interacts with the surround, applying decoherence commands to it. In this framework, enzymes are molecular automata of the extremal quantum computer, the set of which maintains highly ordered robust coherent state, and genome represents a concatenation of error-correcting codes into a single reflective set. The biological evolution {{can be viewed as}} a functional evolution of measurement constraints in which <b>limits</b> of <b>iteration</b> are established, possessing criteria of perfection and having selective values...|$|R
40|$|The {{objective}} function based on mesh quality metric {{has a major}} impact on smoothing unstructured tetrahedral meshes. The ability of seven mesh quality metrics to distinguish four kinds of poor-quality elements and their effects on the change of element shape are analyzed in detail. Then, four better mesh quality metrics are chosen to construct {{objective function}}s. In addition, the rational determination of searching direction and the optimal step size in the optimization algorithm of solving the objective function are proposed. Finally, comparisons with the other three objective functions are made according to different number of elements, <b>iteration</b> <b>limit,</b> and the desired accuracy in the improved mesh. It is found that with the increase of the number of elements, the time consumed during optimization increases, but the changes of the worst quality element are different. The number of iterations has little effect on the mesh quality and the time cost. The increasing of the desired degree of accuracy will improve the mesh quality and cost more time. Furthermore, the approach using objective function is compared with Freitag’s common approach. It is clearly shown that it performs better than the existing approach. Key words: objective function, mesh quality metric, optimization-based smoothing, mesh quality improvement, mesh generatio...|$|E
40|$|Abstract. We study {{measures}} on R d which are induced by {{a class of}} infinite and recursive iterations in symbolic dynamics. Beginning with a finite set of data, we analyze prescribed recursive iteration systems, each involving subdivisions. The construction includes measures arising from affine and contractive iterated function systems with and without overlap (IFSs), i. e., limit measures µ induced by a finite family of affine mappings in R d (the focus of our paper), as well as equilibrium measures in complex dynamics. By a systematic analysis of the Fourier transform of the measure µ at hand (frequency domain), we identify asymptotic laws, spectral types, dichotomy, and chaos laws. In particular we show that the cases when µ is singular carry a gradation, ranging from Cantor-like fractal measures to measures exhibiting chaos, i. e., a situation when small changes in the initial data produce large fluctuations in the outcome, or rather, the <b>iteration</b> <b>limit</b> (in this case the measures). Our method depends on asymptotic estimates on the Fourier transform of µ for paths at infinity in R d. We show how properties of µ depend on perturbations of the initial data, e. g., variations in a prescribed finite set of affine mappings in R d, in parameters of a rational function in one complex variable (Julia sets and equilibrium measures), or in the entries of a given infinite positive definite matrix...|$|E
40|$|This report {{describes}} the changes {{made in the}} KIVA- 3 V computer program since its initial release version dated 24 March 1997. A variety of new features enhance the robustness, efficiency, and usefulness of the overall program for engine modeling. Among these are an automatic restart of the cycle with a reduced timestep in case of <b>iteration</b> <b>limit</b> or temperature overflow, which should greatly {{reduce the likelihood of}} having the code crash in mid run. A new option is the automatic deactivation of a port region when it is closed off from the engine cylinder and its reactivation when it again communicates with the cylinder. A number of corrections throughout the code improve accuracy, one of which also corrects the 2 -D planar option to make it properly independent of the third dimension. Extensions to the particle-based liquid wall film model make the model somewhat more complete, although it is still considered a work-in-progress. In response to current research in fuel-injected engines, a split-injection option has been added. A new subroutine monitors the whereabouts of the liquid and gaseous phases of the fuel, and for combustion runs the energy balance data and emissions are monitored and printed. New features in the grid generator K 3 PREP and the graphics post-processor K 3 POST are also discussed...|$|E
40|$|A simple {{model of}} a high {{frequency}} piezoelectric transducer affixed to an elastic half-space is analysed. The problem is reformulated as a modified matrix Wiener–Hopf equation, containing a kernel {{for which there is}} no known exact factorisation. An approximate factorisation is obtained, and the resulting integral equation is solved by <b>iteration,</b> in <b>limit</b> that the length of the transducer is very much larger than a typical wavelength...|$|R
30|$|In the Delphi study, {{there were}} three main limitations. The first was {{that the number of}} <b>iterations</b> was <b>limited</b> to two rounds in order to fit into the {{time-frame}} of the project. Secondly, the tools to support communications and quizzes did not allow for the fluency of interaction with and real-time feedback to the panellists. Finally, new items suggested the panels could not be incorporated into the initial questionnaire.|$|R
40|$|Power Secant Method {{applied to}} natural {{frequency}} extraction of Timoshenko beam structures This work deals with an improved plane frame formula-tion whose exact dynamic stiffness matrix (DSM) presents, uniquely, null determinant {{for the natural}} frequencies. In comparison with the classical DSM, the formulation herein presented has some major advantages: local mode shapes are preserved in the formulation so that, for any positive frequency, the DSM will never be ill-conditioned; in the ab-sence of poles, {{it is possible to}} employ the secant method {{in order to have a}} more computationally efficient eigenvalue extraction procedure. Applying the procedure to the more general case of Timo-shenko beams, we introduce a new technique, named “power deflation”, that makes the secant method suitable for the transcendental nonlinear eigenvalue problems based on the improved DSM. In order to avoid overflow occurrences that can hinder the se-cant method <b>iterations,</b> <b>limiting</b> frequencies are formulated, with scaling also applied to the eigenvalue problem. Comparisons with results available in the literature demon-strate the strength of the proposed method. Computational efficiency is compared with solutions obtained both by FEM and by the Wittrick-Williams algorithm...|$|R
40|$|We study {{measures}} on R^d which are induced by {{a class of}} infinite and recursive iterations in symbolic dynamics. Beginning with a finite set of data, we analyze prescribed recursive iteration systems, each involving subdivisions. The construction includes measures arising from affine and contractive iterated function systems with and without overlap (IFSs), i. e., limit measures μ induced by a finite family of affine mappings in R^d (the focus of our paper), as well as equilibrium measures in complex dynamics. By a systematic analysis of the Fourier transform of the measure μ at hand (frequency domain), we identify asymptotic laws, spectral types, dichotomy, and chaos laws. In particular we show that the cases when μ is singular carry a gradation, ranging from Cantor-like fractal measures to measures exhibiting chaos, i. e., a situation when small changes in the initial data produce large fluctuations in the outcome, or rather, the <b>iteration</b> <b>limit</b> (in this case the measures). Our method depends on asymptotic estimates on the Fourier transform of μ for paths at infinity in R^d. We show how properties of μ depend on perturbations of the initial data, e. g., variations in a prescribed finite set of affine mappings in R^d, in parameters of a rational function in one complex variable (Julia sets and equilibrium measures), or in the entries of a given infinite positive definite matrix. Comment: 44 page...|$|E
40|$|The {{objective}} {{of this research is}} to develop and evaluate e€ective, computationally e�cient procedures for scheduling jobs in a large-scale manufacturing system involving, for example, over 1000 jobs and over 100 machines. The main performance measure is maximum lateness; and a useful lower bound on maximum lateness is derived from a relaxed scheduling problem in which preemption of jobs is based on the latest ®nish time of each job at each machine. To construct a production schedule that minimizes maximum lateness, an iterative simulation-based scheduling algorithm operates as follows: (a) job queuing times observed at each machine in the previous simulation iteration are used to compute a re®ned estimate of the e€ective due date (slack) for each job at each machine; and (b) in the current simulation iteration, jobs are dispatched at each machine in order of increasing slack. Iterations of the scheduling algorithm terminate when the lower bound on maximum lateness is achieved or the <b>iteration</b> <b>limit</b> is reached. This scheduling algorithm is implemented in Virtual Factory, a Windows-based software package. The performance of Virtual Factory is demonstrated in a suite of randomly generated test problems as well as in a large furniture manufacturing facility. To further reduce maximum lateness, a second scheduling algorithm also incorporates a tabu search procedure that identi®es process plans with alternative operations and routings for jobs. This enhancement yields improved schedules that minimize manufacturing costs while satisfying job due dates. An extensive experimental performance evaluation indicates that in a broad range of industrial settings, the second scheduling algorithm can rapidly identify optimal or nearly optimal schedules. 1...|$|E
3000|$|Training of Ṽ_t(· [...]) is {{performed}} {{according to the}} iterations of algorithm 1 by the local controller with controlled bus b, and ϵ tolerant subset B. The local controller of Fig.  2 provides a simplified view of the process. In Fig.  2, _B,B is the local sensitivities; Y_B is the local admittances; Δṽ_B,∼ B is the external influences on voltage; v_B, 0 is the local voltages at time t= 0; k is the local iteration counter from 1 to K; U_B is local admissible controls; u_B^(k) is the sample local control path; u_b^(K) is the approximation of optimal control at b. Analysis of the presented algorithm reveals that {{the complexity of the}} ADP training is independent of total network size. To see this, consider the three most significant steps: The minimization of (20), the next state calculation of 2.5, and the sample calculations of 3.1. Assuming a quadratic cost function gives complexity of g_B(· [...]) as O(|B|^ 2), where |B|={|x|,|u|} is the dimensionality of the local network subset. Given k samples at iteration k we assume that the complexity of the estimator is O(k|B|). Then the complexity of each minimization step is O(|B|^ 2)+O(k|B|), and the number of steps required is assumed to depend only on |B|. The next state function f_x(· [...]) is assumed linear and therefore has complexity O(|B|). Finally the sample calculations depend only on g_B(· [...]) and therefore have complexity O(|B|^ 2). The complexity of the algorithm therefore depends on the horizon T, <b>iteration</b> <b>limit</b> K, and network subset size |B| which depends on the choice of C_ in (17), and does not depend on the total network size.|$|E
40|$|This work {{deals with}} an {{improved}} plane frame formulation whose exact dynamic stiffness matrix (DSM) presents, uniquely, null determinant {{for the natural}} frequencies. In comparison with the classical DSM, the formulation herein presented has some major advantages: local mode shapes are preserved in the formulation so that, for any positive frequency, the DSM will never be ill-conditioned; {{in the absence of}} poles, it is possible to employ the secant method {{in order to have a}} more computationally efficient eigenvalue extraction procedure. Applying the procedure to the more general case of Timoshenko beams, we introduce a new technique, named ""power deflation"", that makes the secant method suitable for the transcendental nonlinear eigenvalue problems based on the improved DSM. In order to avoid overflow occurrences that can hinder the secant method <b>iterations,</b> <b>limiting</b> frequencies are formulated, with scaling also applied to the eigenvalue problem. Comparisons with results available in the literature demonstrate the strength of the proposed method. Computational efficiency is compared with solutions obtained both by FEM and by the Wittrick-Williams algorithm...|$|R
30|$|The {{convergence}} of this algorithm is not analyzed in this article. In practice, {{the maximum number}} of <b>iterations</b> would be <b>limited</b> and the target capacity could be adjusted. In the evaluated scenarios, the numerical results show that the proposed method converges.|$|R
40|$|The {{amount of}} {{concurrency}} available in conjugate gradient <b>iteration</b> is <b>limited</b> by the summations {{required in the}} inner product computations. The inner product of two vectors of length N requires time c log(N), if N or more processors are available. This paper describes an algebraic restructuring of the conjugate gradient algorithm which minimizes data dependencies due to inner product calculations. After an initial start up, the new algorithm can perform a conjugate gradient iteration in time c*log(log(N)) ...|$|R
40|$|Genetic {{programming}} is an automatic programming method that creates computer programs {{to satisfy a}} software designer 2 ̆ 7 s input/output specification {{through the application of}} principles from genetics and evolutionary biology. A population of programs is maintained where each program is represented in the chromosome data structure as a tree. Programs are evaluated to determine their fitness in solving the specified task. Simulated genetic operations like crossover and mutation are probabilistically applied to the more highly fit programs in the population to generate new programs. These programs then replace existing programs in the population according to the principles of natural selection. The process repeats until a correct program is found or an <b>iteration</b> <b>limit</b> is reached. This research concerns itself with the application of genetic programming to the generation of object-oriented programs. A new chromosome data structure is presented in which the entire set of methods associated with an object are stored as a set of program trees. Modified genetic operators that manipulate this new structure are defined. Indexed memory methods are used to allow the programs generated by the system to access and modify object memory. The result of these modifications to the standard genetic programming paradigm is a system that can simultaneously generate all of the methods associated with an object. Experiments were performed to compare the sequential generation of object methods with two variants of simultaneous generation. The first variant used information about both method return values and object internal memory state in its fitness function. The second variant only used information about method return values. It was found that simultaneous generation of methods is possible in the domain of simple collection objects both with and without the availability of internal memory state in the fitness function. It was also found that this technique is up to four orders of magnitude more computationally expensive in terms of number of individuals generated in the search than the sequential generation of the same set of methods on an individual basis...|$|E
40|$|Parallelized {{versions}} of genetic algorithms (GAs) are popular primarily for three reasons: the GA is an inherently parallel algorithm, typical GA applications are very compute intensive, and powerful computing platforms, especially Beowulf-style computing clusters, {{are becoming more}} affordable and easier to implement. In addition, the low communication bandwidth required allows the use of inexpensive networking hardware such as standard office ethernet. In this paper we describe a parallel GA and its use in automated high-level circuit design. Genetic algorithms are a type of trial-and-error search technique that are guided by principles of Darwinian evolution. Just as the genetic material of two living organisms can intermix to produce offspring that are better adapted to their environment, GAs expose genetic material, frequently strings of 1 s and Os, to the forces of artificial evolution: selection, mutation, recombination, etc. GAs start with a pool of randomly-generated candidate solutions which are then tested and scored {{with respect to their}} utility. Solutions are then bred by probabilistically selecting high quality parents and recombining their genetic representations to produce offspring solutions. Offspring are typically subjected to a small amount of random mutation. After a pool of offspring is produced, this process iterates until a satisfactory solution is found or an <b>iteration</b> <b>limit</b> is reached. Genetic algorithms have been applied {{to a wide variety of}} problems in many fields, including chemistry, biology, and many engineering disciplines. There are many styles of parallelism used in implementing parallel GAs. One such method is called the master-slave or processor farm approach. In this technique, slave nodes are used solely to compute fitness evaluations (the most time consuming part). The master processor collects fitness scores from the nodes and performs the genetic operators (selection, reproduction, variation, etc.). Because of dependency issues in the GA, it is possible to have idle processors. However, as long as the load at each processing node is similar, the processors are kept busy nearly all of the time. In applying GAs to circuit design, a suitable genetic representation 'is that of a circuit-construction program. We discuss one such circuit-construction programming language and show how evolution can generate useful analog circuit designs. This language has the desirable property that virtually all sets of combinations of primitives result in valid circuit graphs. Our system allows circuit size (number of devices), circuit topology, and device values to be evolved. Using a parallel genetic algorithm and circuit simulation software, we present experimental results as applied to three analog filter and two amplifier design tasks. For example, a figure shows an 85 dB amplifier design evolved by our system, and another figure shows the performance of that circuit (gain and frequency response). In all tasks, our system is able to generate circuits that achieve the target specifications...|$|E
40|$|Abstract: The {{smallest}} {{details of}} living systems are molecular devices that operate between the classical and quantum levels, i. e. between the potential dimension (microscale) {{and the actual}} three-dimensional space (macroscale). They realize non-demolition quantum measurements in which time appears as a mesoscale dimension separating contradictory statements {{in the course of}} actualization. These smaller devices form larger devices (macromolecular complexes), up to living body. The quantum device possesses its own potential internal quantum state (IQS), which is maintained for prolonged time via errorcorrection being a reflection over this state. Decoherence-free IQS can exhibit itself by a creative generation of <b>iteration</b> <b>limits</b> in the real world. To avoid a collapse of the quantum information in the process of correcting errors, it is possible to make a partial measurement that extracts only the error-information and leaves the encoded state untouched. In natural quantum computers, which are living systems, the error-correction is internal. It is a result of reflection, given as a sort of a subjective process allotting optimal <b>limits</b> of <b>iteration.</b> The IQS resembles the properties of a quasi-particle, which interacts with the surround, applying decoherence commands to it. In this framework, enzymes are molecular automata of th...|$|R
50|$|Monumental pyramids, platforms, temples, and {{sacrificial}} altars {{were used}} in daily religious rituals. The hierarchy of various Mayan cities was made evident by large palace compounds, and kings and rulers used ornate architecture to promote themselves and ensure their immortality. Roof combs provided variety to the <b>limited</b> <b>iterations</b> of Mayan architecture.|$|R
50|$|The {{difficulty}} of a {{brute force attack}} increases {{with the number of}} <b>iterations.</b> A practical <b>limit</b> on the <b>iteration</b> count is the unwillingness of users to tolerate a perceptible delay in logging into a computer or seeing a decrypted message. The use of salt prevents the attackers from precomputing a dictionary of derived keys.|$|R
40|$|We {{present a}} method of {{constructing}} ccc forcings: Suppose first that a continuous, commutative system of complete embeddings between countable forcings indexed along ω 1 is given. Then its direct limit satisfies ccc by a well-known theorem on finite support <b>iterations.</b> However, this <b>limit</b> has size at most ω 1. To get larger forcings, we do not consider linear systems but higher-dimensional systems which are indexed along simplified morasses...|$|R
