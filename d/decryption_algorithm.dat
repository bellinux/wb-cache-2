162|127|Public
5|$|There is no {{encryption}} algorithm {{present in the}} Agrippa binary; consequently, the visual encryption effect that displays when the poem has finished is a ruse. The visual effect {{is the result of}} running the decrypted ciphertext (in memory) through the re-purposed bit-scrambling <b>decryption</b> <b>algorithm,</b> and then abandoning the text in memory. Only the fake genetic code is written back to disk.|$|E
25|$|Decryption {{is exactly}} the same as encryption, except that P1, P2, …, P18 are used in the reverse order. This is not so obvious because xor is {{commutative}} and associative. A common misconception is to use inverse order of encryption as <b>decryption</b> <b>algorithm</b> (i.e. first XORing P17 and P18 to the ciphertext block, then using the P-entries in reverse order).|$|E
2500|$|In 2000, Touretzky testified as {{an expert}} witness for the defense in Universal City Studios et al. v. Reimerdes et al., a suit brought by seven motion picture studios against the {{publishers}} of [...] (the case name refers to Shawn Reimerdes, an unrelated defendant who settled prior to trial.) The suit concerned the publication of DVD decryption software known as DeCSS, which the plaintiffs asserted was illegal under the Digital Millennium Copyright Act. Dr. Touretzky testified {{as an expert}} in computer science on the expressive nature of computer code, and convinced the court that code was indeed speech. Touretzky also created an online gallery of various renditions of the DeCSS software. Readers sent in their own renditions of the <b>decryption</b> <b>algorithm,</b> including a mathematical description, a haiku, and a square dance.|$|E
30|$|The lABE {{scheme of}} [10] based on {{elliptic}} curve cryptography consists of Setup, Encryption, Key-Generation, and <b>Decryption</b> <b>algorithms.</b>|$|R
50|$|In cryptography, a key is a {{piece of}} {{information}} (a parameter) that determines the functional output of a cryptographic algorithm. For encryption algorithms, a key specifies the transformation of plaintext into ciphertext, and vice versa for <b>decryption</b> <b>algorithms.</b> Keys also specify transformations in other cryptographic algorithms, such as digital signature schemes and message authentication codes.|$|R
40|$|Abstract. This {{document}} {{describes the}} RC 5 encryption algorithm, a fast symmetric block cipher suitable for hardware or software implementations. A novel feature of RC 5 is the heavy use of data-dependent rotations. RC 5 has a variable word size, a variable number of rounds, and a variable-length secret key. The encryption and <b>decryption</b> <b>algorithms</b> are exceptionally simple. ...|$|R
50|$|Implementation of DES {{encryption}} and <b>decryption</b> <b>algorithm.</b>|$|E
5000|$|The <b>decryption</b> <b>algorithm</b> {{produces}} the intended message, since ...|$|E
50|$|Cramer-Shoup {{consists}} of three algorithms: the key generator, the encryption algorithm, and the <b>decryption</b> <b>algorithm.</b>|$|E
40|$|Procedures {{used for}} digital {{signature}} development {{rely on the}} algorithms provided for data confidentiality. The <b>decryption</b> <b>algorithms</b> used for data confidentiality are generally inverse of the encryption algorithms and hence {{can be used for}} authentication purposes. Existing Algorithms based on truncated polynomials offer many advantages compared to RSA. At the same time these truncated polynomial algorithms suffer from the drawback that the encryption and <b>decryption</b> <b>algorithms</b> are not inverses of each other {{as in the case of}} RSA, and hence require separate computation for generation of digital signature. In this paper we propose an algorithm based on matrix approach of NTRU[3] that combines the advantages of both RSA and the algorithms based on truncated polynomials and at the same time overcoming the difficulties faced in each. This proposed algorithm does not require either large prime number to be generated or extra computational effort for digital signature generation...|$|R
5000|$|The C2 {{symmetric}} key algorithm is a 10-round Feistel cipher. Like DES, {{it has a}} key size of 56 bits and a block size of 64 bits. The encryption and <b>decryption</b> <b>algorithms</b> are available for peer review, but implementations require the so-called [...] "secret constant", {{the values of the}} substitution box (S-box), which are only available under a license from the 4C Entity.|$|R
50|$|Computer {{security}} is a branch of computer technology, whose objective includes protection of information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users. Cryptography is the practice and study of hiding (encryption) and therefore deciphering (decryption) information. Modern cryptography is largely related to computer science, for many encryption and <b>decryption</b> <b>algorithms</b> are based on their computational complexity.|$|R
5000|$|The <b>decryption</b> <b>algorithm</b> {{works as}} follows: to decrypt a {{ciphertext}} [...] with her private key , ...|$|E
50|$|ElGamal {{encryption}} {{consists of}} three components: the key generator, the encryption algorithm, and the <b>decryption</b> <b>algorithm.</b>|$|E
50|$|The <b>decryption</b> <b>algorithm</b> {{is simply}} the reverse of the {{encryption}} algorithm. Due {{to the nature of}} the XOR operation, it is reversible.|$|E
50|$|Before {{the main}} rounds, the block {{is divided into}} two 32-bit halves and {{processed}} alternately; this criss-crossing is known as the Feistel scheme. The Feistel structure ensures that decryption and encryption are very similar processes—the only difference is that the subkeys are applied in the reverse order when decrypting. The rest of the algorithm is identical. This greatly simplifies implementation, particularly in hardware, as {{there is no need for}} separate encryption and <b>decryption</b> <b>algorithms.</b>|$|R
40|$|Mobile {{devices have}} revolutionised the world. They {{are now being}} used for M-Commerce applications. Their affordability, high availability, and usage {{convenience}} has made SMS based M-Commerce to take over e-commerce. Nowadays it is used as an alternative for online transaction systems. The SMS facility available in mobile phones is used for communication between client and server modules. The regular encryption and <b>decryption</b> <b>algorithms</b> cannot be used as mobile devices have limited memory and processing power. Keeping these limitations in mind a new framework is proposed. It involves suitable encryption and <b>decryption</b> <b>algorithms</b> and a frame structure. The proposed framework is implemented for a banking application. The user sends the SMS after encryption to the bank server through his mobile phone. The bank server is programmed to poll the modem for messages. On {{the arrival of a}} request, the bank server decrypts and authenticates the message before servicing it. The serviced reply is again secured by encryption before the transaction, details are sent back to the client as another SMS using the modem. The client decrypts the received messages and displays appropriate results to the user...|$|R
40|$|We {{present a}} quantum public-key {{cryptography}} protocol for quantum message transmission. The private key of this protocol includes three classical matrices: a generator matrix of a Goppa code, an invertible matrix and a permutation matrix. The public key is product {{of these three}} matrices. The encryption and <b>decryption</b> <b>algorithms</b> are merely quantum computations related with the transformations between bases of the quantum registers. The security of this protocol {{is based on the}} hypothesis that there is no effective algorithm of NP-complete problem...|$|R
50|$|Blum-Goldwasser {{consists}} of three algorithms: a probabilistic key generation algorithm which produces a public and a private key, a probabilistic encryption algorithm, and a deterministic <b>decryption</b> <b>algorithm.</b>|$|E
50|$|One of the {{earliest}} illegal prime numbers was generated in March 2001 by Phil Carmody. Its binary representation corresponds to a compressed version of the C source code of a computer program implementing the DeCSS <b>decryption</b> <b>algorithm,</b> {{which can be used}} by a computer to circumvent a DVD's copy protection.|$|E
50|$|Decryption {{is exactly}} the same as encryption, except that P1, P2, …, P18 are used in the reverse order. This is not so obvious because xor is {{commutative}} and associative. A common misconception is to use inverse order of encryption as <b>decryption</b> <b>algorithm</b> (i.e. first XORing P17 and P18 to the ciphertext block, then using the P-entries in reverse order).|$|E
40|$|This {{document}} {{presents the}} operation of the high speed encryption algorithm Akelarre. Akelarre is a secret-key iterated block cipher of great flexibility in its security level, allowing the modification via software of such parameters as the number of rounds and the key length. Presumably, it is cryptographically secure, due to the heavy use of data dependent rotations and the mixing of arithmetic operations from different algebraic groups. The encryption and <b>decryption</b> <b>algorithms</b> are identical and of easy implementation in both hardware and software...|$|R
40|$|Qin Yanlin and Wu Xiaoping {{proposed}} a digital signature {{scheme based on}} elliptic curve discrete logarithm problem and factoring a composite integer. They claimed that the security of their scheme depends on solving ECDLP and factoring both. In this paper, it is shown that if anyone can solve ECDLP then he can generate a valid signature without knowledge of private keys. An improved scheme is also proposed in this paper. The proposed scheme requires minimal operations in encryption and <b>decryption</b> <b>algorithms</b> which makes it more efficient...|$|R
40|$|Data {{security}} technique {{known as}} cryptographic now influential and widespread use. There {{are a lot}} of cryptographic algorithms. The main problem encountered for a student taking this course is difficult to understand the workings of a cryptographic algorithm due to the complexity and involves a lot of calculations. CAST are block ciphers that are included in the family of the DES (Data Encryption System), which uses substitution and permutation (known as  Substitution Permutation Network or SPN) in the calculation of the key and the encryption and <b>decryption</b> process. CAST <b>algorithm</b> itself there are two versions of the CAST - 128 and CAST - 256 both of which are divided into key length used. Key length in CAST maximum allowed is 128 bits or 16 characters. Additionally CAST - 128 allows key sizes vary from 40 bits to 128 bits with the addition of 8 - bit. The length of the plain text to be encrypted and decrypted is equal to 64 bits (8 characters) and supports all kinds of plain text. This thesis describes the workings of the CAST - 128, the design procedure CAST - 128 encryption from the calculation of the Key Schedule using Substitution Boxes (S - Boxes), how the encryption and <b>decryption</b> <b>algorithms</b> in CAST - 128, CAST implementation results of algorithm - 128 created a program that also functions as a learning program to understand the CAST - 128 algorithm with the process of the formation of the key, encryption and <b>decryption</b> <b>algorithms</b> CAST - 12...|$|R
50|$|There is no {{encryption}} algorithm {{present in the}} Agrippa binary; consequently, the visual encryption effect that displays when the poem has finished is a ruse. The visual effect {{is the result of}} running the decrypted ciphertext (in memory) through the re-purposed bit-scrambling <b>decryption</b> <b>algorithm,</b> and then abandoning the text in memory. Only the fake genetic code is written back to disk.|$|E
50|$|For example, a {{block cipher}} {{encryption}} algorithm {{might take a}} 128-bit block of plaintext as input, and output a corresponding 128-bit block of ciphertext. The exact transformation is controlled using a second input - the secret key. Decryption is similar: the <b>decryption</b> <b>algorithm</b> takes, in this example, a 128-bit block of ciphertext together with the secret key, and yields the original 128-bit block of plain text.|$|E
5000|$|In some cases, {{the serial}} numbers of unsubscribed smartcards have been blacklisted by providers, causing {{receivers}} to display error messages. A [...] "hashing" [...] approach of writing arbitrary data to every available {{location on the}} card and requiring that this data be present {{as part of the}} <b>decryption</b> <b>algorithm</b> has also been tried as a way of leaving less available free space for third-party code supplied by pirates.|$|E
40|$|Online {{applications}} {{are vulnerable to}} theft of sensitive information because adversaries can exploit software bugs {{to gain access to}} private data and because curious or malicious administrators may capture and leak data. DBCrypto provides practical and provable confidentiality to the database by using queries. The proposed system is a middleware between user application and DBMS. The encrypted data is stored in tables by preserving its format and decrypted data can accessible to the user through regular queries. The various encryption and <b>decryption</b> <b>algorithms</b> are implemented at Query Level to secure the data from malicious administrator or from information leak...|$|R
40|$|In this paper, {{algorithms}} for multivariate {{public key}} cryptography and digital signature are described. Plain messages and encrypted messages are arrays, consisting of elements from a fixed finite ring or field. The encryption and <b>decryption</b> <b>algorithms</b> are based on multivariate mappings. The security of the private key depends on the difficulty of solving a system of parametric simultaneous multivariate equations involving polynomial or exponential mappings. The method is a general purpose utility for most data encryption, digital certificate or digital signature applications. Comment: 30 pages, this manuscript appears also as IACR Cryptology ePrint Archive Report Number 2016 / 82...|$|R
40|$|The Secure Shell (SSH) {{protocol}} {{is one of}} {{the most}} popular cryptographic protocols on the Internet. Unfortunately, the current SSH authenticated encryption mechanism is insecure. In this paper we propose several fixes to the SSH protocol and, using techniques from modern cryptography, we prove that our modified versions of SSH meet strong new chosen-ciphertext privacy and integrity requirements. Furthermore, our proposed fixes will require relatively little modification to the SSH protocol (or to SSH implementations). We believe that our new notions of privacy and integrity for encryption schemes with stateful <b>decryption</b> <b>algorithms</b> will be of independent interest...|$|R
50|$|DVD Shrink is {{designed}} to be easy to use. It is contained within a single executable file that is one megabyte in size. The program features a DeCSS <b>decryption</b> <b>algorithm,</b> enabling it to open and decrypt many currently available DVDs, although it is defeated by some newer copy protection techniques. As well as this, it can open DVD files contained in a VIDEO_TS folder or a disk image (ISO, IMG, NRG or MDS/Ixx).|$|E
5000|$|... 1260, or V2PX, was a {{demonstration}} computer virus written in 1989 by Mark Washburn that used {{a form of}} polymorphic encryption. Derived from Ralph Burger's publication of the disassembled Vienna Virus source code, the 1260 added a cipher and varied its signature by randomizing its <b>decryption</b> <b>algorithm.</b> Both the 1260 and Vienna infect [...]COM files in the current or PATH directories upon execution. Changing an authenticated executable file is detected by most modern computer operating systems.|$|E
50|$|Emulation {{may be used}} {{to defeat}} {{polymorphic}} obfuscation by letting the malware demangle itself in a virtual environment before utilising other methods, such as traditional signature scanning. Such a virtual environment is sometimes called a sandbox. Polymorphism does not protect the virus against such emulation if the decrypted payload remains the same regardless of variation in the <b>decryption</b> <b>algorithm.</b> Metamorphic code techniques {{may be used to}} complicate detection further, as the virus may execute without ever having identifiable code blocks in memory that remain constant from infection to infection.|$|E
40|$|The aim of {{this work}} is several faces of lattices in cryptography. After the section in which we {{describe}} lattices in general and lattice problems, {{we turn to the}} lattice based cryptosystems. We describe their mathematical background and also formulations of encryption and <b>decryption</b> <b>algorithms.</b> In the next part we describe the usage of lattice in cryptanalysis. It is mainly attacks against knapsack system a solving hidden number problem. The signi cant part of this work is to compare two cryptosytems RSA a NTRU for the similar level of security. We compare the speed of encryption, decryption and key generation...|$|R
40|$|Comprehensive {{coverage}} of network has enabled many applications to be online. Growth in technology has produced IoT where almost every gadget is Internet enabled {{and this has}} produced massive data. Many data analytics tools and techniques {{have been developed to}} mine the data and get meaningful information out of it. With this sophisticated tools, {{there is a possibility that}} data are leaked, learned, tampered and shared beyond anticipation of data owner. Therefore, security and privacy issue is critical to big data. Due to its extraordinary scale, traditional encryption algorithms cannot be used to provide privacy protection in big data environment. Big data requires efficient encryption and <b>decryption</b> <b>algorithms,</b> encrypted information retrieval, attribute based encryption to provide data confidentiality and integrity. The focus of this paper is on data encryption to protect user privacy in big data environment. We proposed a symmetric lightweight encryption algorithm for faster encryption and <b>decryption.</b> The <b>algorithm</b> can support encryption for multitude of data in huge shared environment like cloud by providing efficient and fast encryption/decryption processes...|$|R
40|$|Fractals are {{generated}} by simple, recursive calculations. Encryption and <b>decryption</b> <b>algorithms</b> that {{take advantage of}} fractals are developed. This paper presents a new approach for information hiding using iterated function system (IFS) this approach exploits the main feature of fractals (generated by IFS). So that any individual that happens to find the transformed message, {{will not be able}} to understand it; without the correct method that will reverse the transformation, usually through some knowledge of key agreement, with the original encrypted. Also to make the encoding more difficult to introducers we use steganographic methods to hide the attractor image in another colored image 256 X 256 pixels size...|$|R
