0|40|Public
5000|$|The user {{interface}} used a horizontally <b>scrolling</b> <b>menu</b> system, {{known as the}} [...] "duck shoot", and navigation was essentially [...] "select and click" [...] {{with the ability to}} jump directly to pages with the use of keywords. Content could be voted upon by the users.|$|R
40|$|A {{journey through}} Dashilar is a {{large-scale}} <b>interactive</b> <b>scroll,</b> combining elements {{of poetry and}} calligraphy found in traditional Chinese literati painting, with digital media. Taking {{the form of a}} number of screens, the site-responsive installation comprises a continuous series of poems and characters which move in relation to Dashilar’s pedestrian traf c. The text re ects and responds to Dashilar’s location and community, while also examining traditional themes of transcendence, in both Chinese and English...|$|R
50|$|The BlackBerry Curve 8520 {{has a new}} Touch Sensitive Optical Track pad Key feature {{as opposed}} to the {{standard}} Joystick used on many other BlackBerry devices -this is said to improve the ease of <b>scrolling</b> through <b>menus,</b> emails, Internet browser, and images as it is an optical sensor rather than a series of closely spaced buttons.|$|R
500|$|For the PC version, GameSpot editor Stephen Poole stated [...] "You'll {{be better}} off looking for free online {{versions}} of the various games contained in Caesars Palace 2000". In contrast, IGN was more favorable to the PC version of the game. Francois Laramee of Allgame praised the game for its [...] "excellent audio-visuals. The 3D accelerated graphics, specifically the tables, the cards and the dealers' hands, are well modeled and lit, and the playing chips are beautiful. The sound effects are accurate, and the voice actors, competent". However, he noted that [...] "some of the 3D effects are not particularly wieldy, the menus flicker, it's often hard to stop the <b>scrolling</b> <b>menus</b> at the right time, and the camera angles switch too fast and frequently {{to be anything but}} distracting. The slot machine wheels are a bit on the small side and difficult to read". Laramee went on to call the game [...] "a competent effort, but is essentially dry and uninspired". ComputerAndVideoGames.com's Alex Huhtala criticized the game for its [...] "Poor, vomit-inducing presentation".|$|R
3000|$|... {{those who}} {{reported}} that they had computer experience but were unable to demonstrate basic computer skills as assessed via the ICT screener where they were asked to click, type a single-word response, select from a drop-down <b>menu,</b> <b>scroll,</b> drag and drop, and highlight.|$|R
50|$|In 2000, Silva of Sweden AB {{introduced}} its Silva Multi-Navigator GPS device, which was subsequently sold and distributed in North America as the Brunton MNS™. The MNS featured an electronic compass, barometer, and barometric altimeter {{in addition to}} GPS reception capability. With a relatively high energy consumption of 210 mA (or 270 mA with illumination on), the MNS had a battery life of around 10 hours. At $399, the Silva Multi-Navigator aka Brunton MNS faced intense competition from rapidly emerging and frequently less expensive GPS receivers from larger competitors such as Garmin and Magellan, with better battery life and improved <b>scrolling</b> <b>menu</b> displays, and the MNS failed to gain a significant share of the market. The MNS was also not WAAS capable, and unlike {{the great majority of}} GPS units, did not offer an internal map image of waypoints, routes or tracks. In 2004, Silva and Brunton introduced a slightly lower-priced, WAAS-capable GPS receiver called the Atlas™, which used built-in topo maps and a grey-scale screen display in conjunction with a built-in barometer MMC/SD digital media memory card slot for mapping and recording. However, the Atlas also failed to gain a significant share of the handheld GPS market, and the Brunton MNS and Atlas were both discontinued by Brunton in 2009.|$|R
40|$|One of {{the biggest}} {{obstacles}} that application developers and designers face {{is a lack of}} understanding of how to support basic/atomic user interactions. User actions, such as pointing, selecting, <b>scrolling</b> and <b>menu</b> navigation, are often taken for granted in desktop GUI interactions, but have no equivalent interaction techniques in tabletop systems. In this chapter we present a review of the state-of-the-art in interaction techniques for selecting, pointing, rotating, and scrolling. We, first, identify and classify existing techniques, then summarize user studies that were performed with these techniques, and finally identify and formulate design guidelines based on the solutions found...|$|R
40|$|The study {{investigated}} the elements of font size and line spacing in World Wide Web menus for both a scrolled and not scrolled condition {{with a sample of}} undergraduate university students. Subjects were 185 students enrolled in 13 section of educational technology preservice teacher courses at the University of Northern Colorado. Students were asked to rank their preferences of four distinct Web menu screens. The four screens included these combinations: default font, double-spaced; large font, double-spaced; default font, single-spaced; and large font, single-spaced. The screens were adapted for two additional conditions: long <b>menus</b> (<b>scrolled)</b> and short <b>menus</b> (not <b>scrolled,</b> designed to be fully viewed on one screen). The content of the menus was lists of endangered species. Results indicate that users prefer large fonts and double line spacing in both scrolled and not scrolled treatments. (MES) Reproductions supplied by EDRS are the best that can be made from the original document...|$|R
50|$|The Nokia E72 {{has a new}} Optical Navi Key {{feature in}} {{addition}} to the standard D-pad used on many other Nokia devices including the Nokia E71 - this is said to improve the ease of <b>scrolling</b> through <b>menus,</b> emails, Internet browser, and images as it is an optical sensor in addition to a series of closely spaced buttons. In comparison to its predecessor, the Nokia E72 is said to have a higher level of performance (likely due to the faster 600 MHz ARM processor) and also includes a 5-megapixel auto focusing camera. Other changes and improvements are software-based including changes to the user interface and built-in messaging application among others.|$|R
50|$|The {{graphical}} {{user interface}} (GUI) that comes pre-installed on Sansa c200 series players is fairly intuitive. All items on the player are organized into <b>menus</b> that <b>scroll</b> up and down. The c200 GUI is nearly identical {{to that of the}} Sansa e200 series, and uses most of the same icons. The control layout of the c200 is made up of a keypad {{on the right side of}} the player, a volume rocker on top, and record and hold switches on the bottom. The up and down buttons on the keypad allow the user to <b>scroll</b> through <b>menus</b> as one might expect, the square button in the center of the keypad is used to select menu items and the left button returns to the previous menu.|$|R
40|$|Due to the {{character}} of the original source materials and the nature of batch digitization, quality control issues may be present in this document. Please report any quality issues you encounter to digital@library. tamu. edu, referencing the URI of the item. Includes bibliographical references. We provide a facility to experiment with graph algorithms. The facility is implemented as a client to XAGE, a software environment developed under the direction of Dr. James Abello. XAGE allows a user to visually animate algorithmic actions with the capability of recording a session to be replayed later. Diverse graph representations and generation methods are offered. Several mechanisms allow a user to set up drivers to control input, output and execution of a set of external algorithms. This is achieved by using control files. External algorithms can be incorporated into the facility by a simple process of linking and registration. These algorithms now become internal algorithms. Input, output and execution of internal algorithms are controlled by <b>scrolling</b> <b>menus.</b> A user can execute in both a supervised and non-supervised fashion. In the nonsupervised mode a sequence of algorithms can be executed on a set of graphs and the results and the graphs are recorded (optionally) into a file. A special log file is provided to make annotations about interesting algorithmic events. This functionality is achieved by generating unique graph identifiers. To test the usefulness of our facility we have experimented with several graph algorithms. These include minimum vertex cover and maximum clique size heuristics and some visibility and circle graph related methods. As a by-product of our implementation we obtained several results about the structure of maximum independent sets for several classes of graphs. Some conjectures and open problems are proposed for further investigation...|$|R
40|$|Conventional toolkits today {{require the}} {{programmer}} to attach call-back procedures to most buttons, <b>scroll</b> bars, <b>menu</b> items, and other widgets in the interface. These procedures are {{called by the}} system when the user operates the widget in order to notify {{the application of the}} user’s actions. Unfortunately, real interfaces contain hundreds or thousands of widgets, and therefore many call-back procedures, most of which perform trivial tasks, resulting in a maintenance nightmare. This paper describes a system that allows the majority of these procedures to be eliminated. The user interface designer can specify by demonstration many of the desired actions and connections among the widgets, so call-backs are only needed for the most significant application actions. In addition, the callbacks that remain are completely insulated from the widgets, so that the application code is better separated from the user interface...|$|R
50|$|FusionCharts Suite XT {{features}} cross-browser compatibility, including mobile browsers, JavaScript and Flash chart rendering, {{a comprehensive}} solution consisting of 90+ charts and 960+ maps, real-time data updates, chart exports into JPEG, PNG, PDF formats, chart data exports in XML, JSON and CSV, {{as well as}} drill-down capabilities, <b>interactive</b> zooming & <b>scrolling.</b> The software suite also integrates with PHP, ASP.NET (C#), ASP.NET (VB), J2EE, ColdFusion, Ruby on Rails.|$|R
40|$|InterViews is {{a library}} of C++ classes that assist {{in the design and}} {{implementation}} of graphical interfaces. InterViews makes building applications for workstations easier by providing abstractions that hide the details of the underlying window system. The library contains common toolkit objects such as <b>scroll</b> bars, <b>menus,</b> and buttons. It also has mechanisms for composing these elements into complete interfaces without specifying a lot of detail. This tutorial introduces the basics of using InterViews. It discusses the primitive and library classes and their use in three demonstration programs. The programs are described in depth to give insight into how InterViews objects are used to build interfaces. This tutorial assumes familiarity with C++ and that the reader has access to the InterViews manual documentation. 1 Introduction InterViews is a software package designed to simplify building graphical interfaces. To make this possible, InterViews provides the following: 1. An object- [...] ...|$|R
2500|$|GameSpot's Kevin VanOrd scored it 3.5 out of 10, {{calling it}} [...] "a buggy mess." [...] He criticised the {{touchscreen}} as unresponsive, and {{the map and}} <b>menu</b> <b>scrolling</b> as [...] "sluggish". He was also {{highly critical of the}} bugs, citing a mission which couldn't be completed until the sound effects were turned off, and another which crashes when the player zooms in or out. He concluded, [...] "when it functions, The Settlers can be laid-back fun. But given that you never know how far you're going to get before the next crash, why bother?" ...|$|R
50|$|In response, several luxury brands had {{switched}} to rotary knob control devices, {{with the aim}} to simplify cabin layout and consolidate multiple controls with a single device. The BMW iDrive, Audi MMI, and Mercedes-Benz COMAND APS interfaces operated using a circular center knob which can be rotated side to side, and pressed to select items, with the rotary knob <b>scrolling</b> through on-screen <b>menus.</b> Of these systems, some reviewers praised their ability to simplify the dash layout, while others levied criticism for reputed complexity and user difficulty, particularly with iDrive.|$|R
5000|$|GameSpot's Kevin VanOrd scored it 3.5 out of 10, {{calling it}} [...] "a buggy mess." [...] He criticised the {{touchscreen}} as unresponsive, and {{the map and}} <b>menu</b> <b>scrolling</b> as [...] "sluggish". He was also {{highly critical of the}} bugs, citing a mission which couldn't be completed until the sound effects were turned off, and another which crashes when the player zooms in or out. He concluded, [...] "when it functions, The Settlers can be laid-back fun. But given that you never know how far you're going to get before the next crash, why bother?" ...|$|R
40|$|Conventional toolkits today {{require the}} {{programmer}} to attach call-back procedures to most buttons, <b>scroll</b> bars, <b>menu</b> items, and other widgets in the interface. These procedures are {{called by the}} system when the user operates the widget in order to notify {{the application of the}} user's actions. Unfortunately, real interfaces contain hundreds or will contain hundreds or even thousands of widgets. For thousands of widgets, and therefore many call-back example, the VUIT program from DEC uses over 2500 procedures, most of which perform trivial tasks, resulting widgets. This means that the programmer must provide in a maintenance nightmare. This paper describes a system many call-back procedures. To add to the complexity, each that allows the majority of these procedures to be type of widget may have its own protocol for what eliminated. The user interface designer can specify by parameters are passed to the call-back procedures, and how demonstration many of the desired actions and connections the procedures access data from the widget...|$|R
40|$|Background/Objective: To {{retrospectively}} {{review the}} authors' experience with multi-detector row helical computed tomography (CT) in assessing 82 consecu-tive alive potential renal donors. "nPatients and Methods: Eighty-two potential renal donors underwent multi-detector row CT assess-ment, using a 64 -slice scanner (Somatom Sensation, Siemens) with 0. 6 -mm slice thickness followed by maximum intensity projection and volume rendering techniques post-processing algorithms. Arterial phase and venous phase examinations were performed. De-layed tomograms were acquired {{to visualize the}} col-lecting system anatomy. Two vascular radiologists prospectively interpreted the multi-detector row CT images. Forty candidates subsequently underwent donor nephrectomy. Surgical findings served as the reference standard for 40 kidneys. The imaging find-ings in all 82 candidates (164 kidneys) were reviewed, although these findings were considered observa-tional data only {{because there was no}} reference stan-dard for 124 kidneys. "nResults: Identification of vascular anomalies was best on direct viewing of the axial images using <b>interactive</b> <b>scrolling</b> through the images and cine-loop paging. In 164 kidneys evaluated, a single renal artery was pre-sent in 74. 5 % and a single renal vein in 87. 5 %. Mul-tiple renal arteries were more common on the right side (37. 8 %) vs. the left side (20. 7 %). Early branching of the arteries was seen with equal frequency (10 %) on either side. Multiple renal veins were more often on the right side (20 %) vs. the left side (5 %). CT an-giographic findings were concordant with the intra-operative findings in 100 % of the cases that under-went nephrectomy. CT also revealed cortical cysts (four cases), duplex collecting system (two cases), hy-dronephrosis (one case), renal stone (one case), and liver hemangiomas (two cases). There was no signifi-cant interobserver disagreement between the vascular radiologists. "nConclusion: CT angiography is highly accurate for detecting vascular anomalies, and providing anatomi-cal information. We recommend MDCTA as a single radiological diagnostic modality for the assessment of potential alive kidney donors...|$|R
2500|$|Eurogamer's Dan Whithead scored it 1 out of 10, {{calling it}} [...] "one {{of the most}} clumsy and broken games to [...] receive a {{commercial}} release." [...] He criticised the touchscreen as unresponsive, the overly small icons, and the jerky map and <b>menu</b> <b>scrolling.</b> His biggest criticism concerned the bugs, concluding, [...] "Settlers II is a great game. A classic. This version isn't. It's a travesty, and one that {{should never have been}} released. Without the fatal bugs it'd be a disappointing but passable conversion, but you can't play a game not knowing when, or if, the game will actually work the way it's supposed to." ...|$|R
2500|$|... iPods {{with color}} {{displays}} use anti-aliased graphics and text, with sliding animations. All iPods (except the 3rd-generation iPod Shuffle, the 6th & 7th generation iPod Nano, and iPod Touch) have five buttons and the later generations have the buttons {{integrated into the}} click wheel – an innovation that gives an uncluttered, minimalist interface. The buttons perform basic functions such as menu, play, pause, next track, and previous track. Other operations, such as <b>scrolling</b> through <b>menu</b> items and controlling the volume, are performed by using the click wheel in a rotational manner. The 3rd-generation iPod Shuffle {{does not have any}} controls on the actual player; instead it has a small control on the earphone cable, with volume-up and -down buttons and a single button for play and pause, next track, etc. The iPod Touch has no click-wheel; instead it uses a touch screen along with a home button, sleep/wake button and (on the second and third generations of the iPod Touch) volume-up and -down buttons. The user interface for the iPod Touch is identical to that of the iPhone. Differences include the lack of a phone application. Both devices use iOS.|$|R
40|$|Using model- and language-based {{tools to}} develop plastic {{applications}} requires developers {{to become familiar}} with abstract modeling concepts or difficult language syntax. This is a departure from traditional visual interface development tools, in which developers select the widgets that will appear in the application and write the code that defines the widgets’ functionality. We present WAHID, a widget-level approach to plasticity in both new and legacy applications that conforms to traditional interface development techniques. WAHID provides internal and external architectures for integrating plastic widgets in an application. The internal architecture provides plasticity in new applications and requires that the application code be available for the architecture to be deployed. The external approach uses gesture handling for widget activation in legacy applications. We demonstrate the viability of these architectures through example <b>scroll</b> bar and <b>menu</b> widgets...|$|R
50|$|The Moxi DVR {{features}} a user interface called the Moxi Menu. The Moxi Menu is presented fully in HD. It has a horizontal band {{that makes up}} the top level of menu choices. As users select a category on the horizontal band, choices within that category expand in a vertical list. When the user selects an item such as a channel {{or a piece of}} media, a popup menu gives them choices for that media, such as watch or record. The available choices vary {{depending on the type of}} item that is being accessed. If the user holds down an arrow button on the remote while navigating the <b>menu,</b> the <b>menu</b> <b>scrolls</b> by more quickly. A TV window in the upper right corner continues playing content while the menu is accessed.|$|R
3000|$|To {{establish}} {{common scales}} for the literacy and numeracy items, those items {{had to be}} linked across assessment modes for PIAAC. This was achieved by using common sets of items in both modes in the Field Test. Respondents were administered a brief screener that assessed their ability to click, type a single-word response, select from a drop-down <b>menu,</b> <b>scroll,</b> drag and drop, and highlight. Those who passed {{were randomly assigned to}} either the paper or computer instruments, a design that made it possible to evaluate the extent to which item parameters were consistent across modes for each domain. The Field Test scaling analysis revealed that there was overwhelming consistency across modes for both the literacy and numeracy linking items so that a single common scale could be established for each domain that was linked across both time and mode of assessment. 5 [...]...|$|R
40|$|In {{this paper}} we show how to compose user {{interfaces}} with InterViews, a user interface toolkit {{we have developed}} at Stanford. InterViews provides a library of predefined objects {{and a set of}} protocols for composing them. A user interface is created by composing simple primitives in a hierarchical fashion, allowing complex user interfaces to be implemented easily. InterViews supports the composition of interactive objects (such as <b>scroll</b> bars and <b>menus),</b> text objects (such as words and whitespace), and graphics objects (such as circles and polygons). To illustrate how InterViews composition mechanisms facilitate the implementation of user interfaces, we present three simple applications: a dialog box built from interactive objects, a drawing editor using a hierarchy of graphical objects, and a class browser using a hierarchy of text objects. We also describe how InterViews supports consistency across applications as well as end-user customization. ...|$|R
50|$|On 13 January 2010, Nokia {{released}} a major firmware update, version 40.0.005. The update includes bug fixes, speed improvements and new features. The most visible are kinetic <b>scrolling</b> to all <b>menus</b> (except the main and applications menus) and an improved home screen that {{was first introduced}} on the Nokia 5530. This software update also saw the removal of alphanumeric keypad in landscape view during text input, which {{was replaced by a}} full QWERTY keyboard. The new home screen provides a contacts carousel, with up to 20 contacts and program shortcuts on screen at the same time. There is a change on option selecting in every menus, but hard to notice; if one selects and holds on that selection, it will be in white, but normal colours when selecting an option is still being red like in v20.|$|R
40|$|We {{present a}} menu {{interface}} designed primarily for headworn displays {{that have a}} small field-of-view. To support interaction with a hierarchical menu, we logically divide an absolute positioning device into finger-operated strip segments, which we use as one-dimensional <b>scrolling</b> devices. Our <b>menu</b> system is intended to make user interaction faster by not requiring constant visual feedback. This is preferable for interaction in which the visual user interface elements occupy {{only a small portion}} of the eye's entire field-of-view and in which navigating in menus with a pointer would be awkward and time-consuming. With our approach, it is even possible for the user to use peripheral vision for interaction, since there is no need to precisely position a small pointer on the screen. Thus, the user can maintain eye contact with others or keep his or her focus of attention on the environment while using a wearable device...|$|R
5000|$|The U830 is a 3rd Generation Fliptop Phone with HSPDA support. The U830 {{includes}} a 2-megapixel camera with flash. The phone {{includes a}}n internal camera, above the internal 240x320 2" [...] LCD, for video calls. Under the external colour OLED 128X160 there are touch Music keys {{to start the}} Music Player. These keys will only operate when the red backlights are on. Also this display {{can be used to}} take Self Portraits by holding the camera keys and using the rewind/fast forward keys to <b>scroll</b> up/down the <b>menu.</b> The Camera's Menu's Options are to take pictures, Record videos and Exit. The phone also includes USB and Bluetooth connectivity. The phone includes a USB cable and PC Suite CD. Also included are a 3.5 mm headphone adaptor and stereo headphones. The device comes with 2 batteries, one is a slim battery and the other is a higher capacity battery which sticks {{out of the back of}} the phone.|$|R
5000|$|The {{player is}} {{provided}} with a joystick and two buttons: a [...] "select" [...] button and an [...] "action/pin" [...] button. The player uses the joystick to move Sunny or Terry around the ring, where they must {{make contact with the}} member of the Heel Team (in the first match, the skinny wrestler from the Heel Team starts, then the fat one in the 2nd, and it continues that way from there on in, as does with the player's wrestlers). Upon making contact with the opposing wrestler, the two wrestlers will immediately grapple. The player then releases the opposing wrestler by pulling away, then grappling again, waiting for the [...] "Action" [...] command, which will flash onscreen. Due to being one of the earliest professional wrestling video games, Tag Team Wrestling has a limited number of wrestling moves and characters. Moves and counters are performed {{through the use of a}} real-time, menu-based action-reaction fighting module. After engaging in a grapple and the [...] "Action" [...] command flashes, players quickly <b>scroll</b> through a <b>menu</b> and choose a technique to perform.|$|R
40|$|The Lapidary {{interface}} {{design tool}} allows the graphics and run-time behaviors that go inside an application window, {{as well as}} the graphics and behaviors that go around the application window, such as <b>menus</b> and <b>scroll</b> bars, to be specified pictorially. In particular, Lapidary allows the designer to draw pictures of application-specific graphical objects that the end user will manipulate (such as boxes and arrows, or elements of a list), the feedback that shows which objects are selected (such as small boxes on the sides and corners of an object), and the dynamic feedback objects (such as hair-line boxes to show where an object is being dragged). The run-time behavior of all these objects can be specified in a straightforward way using constraints and dialog boxes that allow the designer to provide abstract descriptions of the interactive response to the input devices. Lapidary also generalizes from the specific example pictures to allow the graphics and behaviors to be specified by demonstration. Finally, Lapidary supports the construction and use of "widgets" (sometimes called interaction techniques or gadgets) such as <b>menus,</b> <b>scroll</b> bars, buttons and icons. Thus Lapidary allows all pictorial aspects of an application to be specified graphically...|$|R
5000|$|The Alpine Electronics DVD-based {{navigation}} system was integrated with an 8-inch LCD display and a multi-use Interface Dial, which could move up, down, {{left and right}} like a mouse, turn like a knob, <b>scroll</b> through preset <b>menus,</b> and click when pushed {{to act as a}} selector button. Unlike many in-car {{navigation system}}s, the Alpine DVD-based navigation unit allowed the driver to change destinations and routes [...] "on the fly" [...] while driving, rather than being locked out unless the car was in Park. The tightly integrated voice recognition system worked with the navigation system and could recognize spoken city and street names. Also unique at the time was two-way communication via AcuraLink satellite communication. Using a facility of XM Radio service, the system could send a variety of messages to the car, including service appointment reminders (appointments first made via Internet) or important messages such as recall notices. The use of OnStar was carried over from the previous generation RL. Use of digital/analog trimode (two digital bands and one analog band) technology allowed the 2005 RL OnStar technology to survive the planned 2007 phase-out of the analog OnStar to fully digital OnStar service.|$|R
2500|$|The command {{selection}} {{menu input}} system, where the player chooses from a menu list of commands either through keyboard shortcuts or <b>scrolling</b> down the <b>menu,</b> {{was introduced in}} 1983, and would largely replace the verb-noun parser input method over the years. The earliest known title to use the command selection menu system was the Japanese adventure game Spy 007 (スパイ00.7), published in April 1983, and it was followed soon after by several other Japanese adventure games in 1983. These included the eroge title Joshiryo Panic, authored by Tadashi Makimura and published by Enix for the FM-7 in June and slightly earlier for the FM-8; Atami Onsen Adventure (熱海温泉アドベンチャー), released by Basic System (ベーシックシステム) in July for the FM-7 and slightly earlier for the PC-8001; Planet Mephius, released in July; and Tri-Dantal (トリダンタル), authored by Y. Takeshita and published by Pax Softnica for the FM-7 in August. The game that popularized the command selection system was the 1984 adventure game [...] (Okhotsk ni Kiyu: Hokkaido Chain Murders), designed by Yuji Horii (his second mystery adventure game after Portopia) and published by ASCII for the PC-8801 and PC-9801. Its replacement of the traditional verb-noun text parser interface with the command selection menu system {{would lead to the}} latter becoming a staple of adventure games as well as role-playing games (through Horii's 1986 hit Dragon Quest in the latter case).|$|R
50|$|The command {{selection}} {{menu input}} system, where the player chooses from a menu list of commands either through keyboard shortcuts or <b>scrolling</b> down the <b>menu,</b> {{was introduced in}} 1983, and would largely replace the verb-noun parser input method over the years. The earliest known title to use the command selection menu system was the Japanese adventure game Spy 007 (スパイ00.7), published in April 1983, and it was followed soon after by several other Japanese adventure games in 1983. These included the eroge title Joshiryo Panic, authored by Tadashi Makimura and published by Enix for the FM-7 in June and slightly earlier for the FM-8; Atami Onsen Adventure (熱海温泉アドベンチャー), released by Basic System (ベーシックシステム) in July for the FM-7 and slightly earlier for the PC-8001; Planet Mephius, released in July; and Tri-Dantal (トリダンタル), authored by Y. Takeshita and published by Pax Softnica for the FM-7 in August. The game that popularized the command selection system was the 1984 adventure game Okhotsk ni Kiyu: Hokkaido Rensa Satsujin Jiken (Okhotsk ni Kiyu: Hokkaido Chain Murders), designed by Yuji Horii (his second mystery adventure game after Portopia) and published by ASCII for the PC-8801 and PC-9801. Its replacement of the traditional verb-noun text parser interface with the command selection menu system {{would lead to the}} latter becoming a staple of adventure games as well as role-playing games (through Horii's 1986 hit Dragon Quest in the latter case).|$|R
40|$|Menu {{systems have}} been key {{components}} in modern graphical user interfaces (GUIs), {{and there has been}} a lot of research about menu design. Review of previous menu design studies for human-computer interaction suggests that menu design guidelines for computers and mobile phones need to be reappraised, especially with regard to the use of 3 D interfaces in cell phones. ^ The main objective of this dissertation is to propose an overall framework for 3 D menu interfaces in cell phones. The second objective is to propose guidelines for 3 D menu design in cell phones. Four main factors that influence the performance of menu retrieval tasks in cell phones are included in the proposed model: presentation type, number of items, task complexity, and menu type. For these purposes, three experiments were conducted to determine which of three types of 3 D menus is best, which of two types of 2 D menu is better than the other, and conditions under which the best 3 D menu is better than a 2 D menu. ^ Experiment 1 used a nested factorial design with an iPhone simulator to investigate which of three 3 D menus (collapsible cylindrical trees, carousel, or revolving stage) are most applicable for small displays. Performance was best with the revolving stage menu, and there was a non-significant tendency for it to be rated as preferred by the participants. ^ In Experiment 2, an iPhone was used to determine which of two types of 2 D menu is better and a nested factorial design was used as well. Even though the differences were not significant, an overview menu tended to show better performance and preference scores than a text <b>menu</b> that required <b>scrolling.</b> The overview <b>menu</b> was chosen for Experiment 3 as the control alternative for comparison with the 3 D menu because it provides alphabetical icons as 3 D menus do. ^ Lastly, Experiment 3 used a nested factorial design with an iPhone to investigate when the revolving stage menu is better than the overview menu. The 3 D menu was preferred by users at high breadth levels, and the 2 D menu showed better performance than the 3 D menu with low task complexity. ^ From the experimental outcomes, a theoretically based link among the four components of cell phone menu design was identified. Furthermore, theoretically and practically based guidelines for the design of menus for small displays were developed. ...|$|R
40|$|This work {{presents}} {{the development of}} the software GEOSOFT, that allows to carry out static and dynamic non linear analysis of geotechnical structures. The developed software uses the finite elements method for the geometric and numeric modelling of geotechnical structures. The non linear behavior of the materials is simulated by means of the hyperbolic model for the static analysis and by means of the equivalent linear model for the dynamic analysis. Geosoft, designed to be executed in the operating system Windows, allows the interaction user-computer through diverse graphic objects, such as: windows, pull-down <b>menus,</b> <b>scroll</b> bars, grids, buttons, icons, tab strip, among others; allowing that data edition and administration of calculations and results are easy and friendly. As a previous step to {{the development of the}} software, the theory on static and dynamic behavior of geotechnical structures is reviewed as well as the geometric and numeric modelling. Also, to have a clear concept of what a software is and of its development phases, a summary of the software engineering is presented. The applicability of the developed software is shown by means of the analysis of three real geotechnical structures: a tailings dam, an earth dam and a spread footing. The obtained results allow to predict the physical behavior of these structures in terms of stresses and strains due to the action of static and dynamic loads. TesisEste trabajo presenta el desarrollo del software GEOSOFT, que permite realizar el análisis no lineal estático y dinámico de estructuras geotécnicas. Para el modelamiento geométrico y numérico de estructuras geotécnicas el software desarrollado utiliza el método de los elementos finitos. Asimismo, el comportamiento no lineal de los materiales es simulado mediante el uso del modelo hiperbólico para el análisis estático y del modelo lineal equivalente para el análisis dinámico. Geosoft, diseñado para ejecutarse en el sistema operativo Windows, permite la interacción usuario-computadora mediante la utilización de diversos objetos gráficos, tales como: ventanas, menús desplegables, barras de desplazamiento, tablas, botones, iconos, fichas, entre otros; permitiendo que la preparación de datos y administración de cálculos y resultados sea fácil y amigable. Como paso previo al desarrollo del software se fundamenta el comportamiento estático y dinámico de estructuras geotécnicas, así como el modelamiento geométrico y numérico de las mismas. Asimismo, para · tener un concepto claro de lo que es un software y sus fases de desarrollo, se presenta un resumen de la ingeniería del software. La aplicabilidad del software es ilustrada mediante el análisis de tres estructuras reales: un depósito de relaves, una presa de tierra y una cimentación continua. Los resultados obtenidos permiten prever el comportamiento de estas estructuras en términos de esfuerzos y deformaciones debido a la acción de cargas estáticas y dinámicas...|$|R
40|$|Problem Statement: There {{have been}} recent reports of multi-million dollar {{companies}} having to recall entire projects {{due to their}} BMS’s malfunctioning or operating incorrectly. The purpose of this project is to analyze the future of batteries, the Lithium-Ion cell, and to exercise a BMS to better understand its capabilities and possible cases for errors. Lithium ion batteries are intolerant of overcharge and overdischarge. Abuse of this kind can result in high temperatures, venting of gases, fire, or explosion. Therefore battery management systems have been devised to prevent such abuse. Recent events such as fires on the Boeing Dreamliner and the Tesla Model S have shown that these dangers are real. These products do have highly developed battery management systems, and the incidents were caused {{in spite of these}} systems. This study was undertaken to illustrate how one system from Texas Instruments, functions to monitor and control a simple battery pack. Part I: Battery Data Acquisition Preliminary battery tests were conducted to fully understand the operations of charging and discharging the battery. These tests were essential {{to gain a better understanding}} of typical battery behavior and to be able to perform calculations necessary in analyzing the characteristics of the batteries. Also, these tests were ran to ensure that the Lithium-Ion batteries being used correctly corresponded to the graphs and values provided by the datasheet. The knowledge gained from Part I was vital for a better comprehension of the functions needed to balance the cells for Part II as well as the importance of safety precautions necessary when dealing with multiple batteries. Part II: Exercising the BQ 76 PL 536 2 ̆ 6 GUI The BQ 76 PL 536 Evaluation Module (EVM) was tested using the BQ 7 PL 536 BMS chips. An Aardvark adapter acts as a link between the EVM and PC allowing the user to read data from the BMS chips on a GUI. The BMS chips are validated by reading voltages of individual battery cells, pack voltage, and pack temperature. The GUI allows for enabling cell balancing between the cells but this feature is not automatic and must be engaged by the user. Part III: BMS Application A MSP 430 fr 5969 microcontroller was implemented to create a BMS system that can read data from the BMS chips such as cell voltage, pack voltage, pack temperature, fault statuses, alert statuses, and a variety of other useful cell parameters. This data is displayed on a LCD screen through different menu options. The user <b>scrolls</b> through the <b>menus</b> using a capacitive touch slider on the microcontroller and selections a given option using the option select button. There is also a cell balance mode that will check the cells to see if they are out of balance and then enable cell balancing if the cells are unbalanced. This section is designed to remove the Aardvark adaptor and the GUI from the system...|$|R
