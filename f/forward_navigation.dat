18|32|Public
5000|$|Cache Support {{to speed}} users’ {{ability to move}} quickly {{back and forth between}} the {{currently}} and previously viewed Web pages through the use of backward and <b>forward</b> <b>navigation.</b>|$|E
5000|$|Company {{details are}} {{configured}} first, after which various users {{can be added}} and assigned functions and login permissions: Supervisors maintain full access whereas analysts may only enter call information. A ‘folder’ list makes for quick and straight <b>forward</b> <b>navigation</b> around the system and automatic notifications for companies or customers for different stages of a call offer alerts for help desk agents and consultants.|$|E
50|$|In computing, '''''' is {{a command}} to view (but not modify) the {{contents}} of a text file one screen at a time.It is available on Unix and Unix-like systems, DOS, OS/2, and Microsoft Windows. Programs of this sort are called pagers. more is a very basic pager, originally allowing only <b>forward</b> <b>navigation</b> through a file, though newer implementations do allow for limited backward movement.|$|E
25|$|Each LSI {{could just}} see the faint outline of the nearest ship ahead, as the convoy furtively sailed <b>forwards.</b> <b>Navigation</b> marker-lights {{appeared}} marking the swept channel. The night was silent save the low throb of ships' engines, the churning of water, and the explosion of two swept mines (one at 03:00 and the other at 03:15).|$|R
50|$|Each LSI {{could just}} see the faint outline of the nearest ship ahead, as the convoy furtively sailed <b>forwards.</b> <b>Navigation</b> marker-lights {{appeared}} marking the swept channel. The night was silent save the low throb of ships' engines, the churning of water, and the explosion of two swept mines (one at 03:00 and the other at 03:15).In good time, the ships hove to and anchored. Electric motor noise filled the air once more as the LCAs were lowered the remaining distance and met the sea with a loud splash. Then the LCAs chugged away, fully loaded with soldiers and equipment, headed into the darkness.|$|R
40|$|Abstract We study {{cooperative}} navigation for robotic swarms in {{the context}} of a general event-servicing scenario. In the scenario, one or more events need to be serviced at specific locations by robots with the required skills. We focus on the question of how the swarm can inform its members about events, and guide robots to event locations. We propose a solution based on delay tolerant wire-less communications: by <b>forwarding</b> <b>navigation</b> information between them, robots cooperatively guide each other towards event locations. Such a collaborative ap-proach leverages on the swarm’s intrinsic redundancy, distribution, and mobility. At the same time, the <b>forwarding</b> of <b>navigation</b> messages is the only form of co-operation that is required. This means that the robots are free in terms of their movement and location, and they can be involved in other tasks, unrelated to the navigation of the searching robot. This gives the system a high level of flexibility in terms of application scenarios, and a high degree of robustness with respect to robot failures or unexpected events. We study the algorithm in two different scenarios, both in simulation and on real robots. In the first scenario, a singl...|$|R
50|$|The Windows 98 shell {{integrates}} {{all of the}} enhancements from Windows Desktop Update, an Internet Explorer 4 component, such as the Quick Launch toolbar, deskbands, Active Desktop, Channels, {{ability to}} minimize foreground windows by clicking their button on the taskbar, single click launching, Back and <b>Forward</b> <b>navigation</b> buttons, favorites, and address bar in Windows Explorer, image thumbnails, folder infotips and web view in folders, and folder customization through HTML-based templates. Another feature of this new shell is that dialog boxes now {{show up in the}} Alt-Tab sequence.|$|E
5000|$|On 15 October 1910 takeoff {{was made}} from Atlantic City. Condensing water on the airship's skin added excess weight, and it was {{difficult}} to gain height. A passing storm also made <b>forward</b> <b>navigation</b> difficult. The engines failed 38 hours into the flight, apparently due to contamination by beach sand, and America drifted. The crew jettisoned all excess weight, including one of the defunct engines. [...] The ship had gone as far as a point east of New Hampshire and south of Nova Scotia before floating generally south.|$|E
5000|$|When Mac OS X was released, {{preference}} panes replaced control panels. Preference panes are not applications but loadable bundles for the System Preferences application, {{similar to}} the arrangement used under System 6. By default, System Preferences organizes preference panes into several categories. In {{the latest version of}} System Preferences, included with Mac OS X v10.7, these categories are [...] "Personal", [...] "Hardware", [...] "Internet & Wireless", and [...] "System". A fifth category, [...] "Other", appears when third-party preference panes are installed. Users can also choose to sort preference panes alphabetically. System Preferences originally included a customizable toolbar into which frequently-used preference pane icons could be dragged, but this was removed in Mac OS X v10.4 and replaced with a static toolbar that featured back and <b>forward</b> <b>navigation</b> buttons and a search field.|$|E
50|$|Olfactory {{navigation}} is {{a hypothesis}} put <b>forward</b> to explain <b>navigation</b> and homing of pigeons, {{in particular the}} homing pigeon.|$|R
40|$|We study {{cooperative}} navigation for robotic swarms in {{the context}} of a general event-servicing scenario. In the scenario, one or more events need to be serviced at specific locations by robots with the required skills. We focus on the question of how the swarm can inform its members about events, and guide robots to event locations. We propose a solution based on delay-tolerant wireless communications: by <b>forwarding</b> <b>navigation</b> infor- mation between them, robots cooperatively guide each other towards event locations. Such a collaborative approach leverages on the swarm 2 ̆ 7 s intrinsic redundancy, distribution, and mobility. At the same time, the <b>forwarding</b> of <b>navigation</b> messages is the only form of coop- eration that is required. This means that the robots are free in terms of their movement and location, and they can be involved in other tasks, unrelated to the navigation of the searching robot. This gives the system a high level of flexibility in terms of application scenarios, and a high degree of robustness with respect to robot failures or unexpected events. We study the algorithm in two different scenarios, both in simulation and on real robots. In the first scenario, a single searching robot needs to find a single target, while all other robots are involved in tasks of their own. In the second scenario, we study collective navigation: all robots of the swarm navigate back and forth between two targets, which is a typical scenario in swarm robotics. We show that in this case, the proposed algorithm gives rise to synergies in robot navigation, and it lets the swarm self-organize into a robust dynamic structure. The emergence of this structure improves navigation efficiency and lets the swarm find shortest paths...|$|R
50|$|Guillemets {{are often}} used on buttons that enable <b>forward</b> and {{backward}} <b>navigation</b> across a set of items (for example in VB, MS Access, email clients, article comment sections, etc.). Often a guillemet signifies navigation to the first («) or last (») item in a list, while a corresponding single angle (not actually a guillemet) signifies navigation to the previous (<) or next (>) item.|$|R
5000|$|In early 1996, Netscape {{announced}} that the next release of its browser, codenamed [...] "Constellation", would completely integrate with Windows and add a new shell, codenamed [...] "HomePort", which would present the same files and shortcuts no matter which machine a user logged into. Microsoft started working on a similar Internet Explorer release, codenamed [...] "Nashville". Internet Explorer 4.0 was redesigned and resulted in two products: the standalone IE4 and Windows Desktop Update, which updated the shell with features such as Active Desktop, Active Channels, Web folders, desktop toolbars such as the Quick Launch bars, ability to minimize windows by clicking their button on the taskbar, HTML-based folder customization, single click launching, image thumbnails, folder infotips, web view in folders, Back and <b>Forward</b> <b>navigation</b> buttons, larger toolbar buttons with text labels, favorites, file attributes in Details view, and an address bar in Windows Explorer, among other features. It also introduced the My Documents shell folder.|$|E
30|$|Tabs, i.e. {{multiple}} screen masks {{within a}} single container and a navigational widget, {{can be used to}} group single tables logically and ease access. Another approach is to mark an item in one table and see links to related items in other forms. This requires efficient design solutions for backward and <b>forward</b> <b>navigation,</b> e.g. breadcrumbs.|$|E
40|$|International audienceModern Web {{applications}} that embed sophisticated user interfaces and business logic have rendered the original interaction {{paradigm of the}} Web obsolete. In previous work, we have advocated a paradigm shift from static content pages that are browsed by hyperlinks to a state-based model where back and <b>forward</b> <b>navigation</b> {{is replaced by a}} full-fledged interactive application paradigm, featuring undo and redo capabilities, with support for exception management policies and transactional properties. In this demonstration, we present an editor and code generator designed to build applications based on our approach...|$|E
5000|$|... '''''' is a {{terminal}} pager program on Unix, OpenVMS, Windows and Unix-like systems used to view (but not change) {{the contents of}} a text file one screen at a time. Programs of this sort are called pagers. It is similar to , but has the extended capability of allowing both <b>forward</b> and backward <b>navigation</b> through the file, and can scroll left and right. [...] also supports multiple windows.|$|R
500|$|The Mark 37 Gun Fire Control System (GFCS) was {{the primary}} Fire Control System for the Secondary Battery. There were four Mk37 GFCSs on board; one <b>forward</b> above the <b>navigation</b> bridge, two {{amidships}} {{on either side of}} the forward stack, and one aft between the aft Mk38 Director and Turret three. The major components of the Mk 37 GFCS were the Mk 37 Director, and the equipment in the plotting room.|$|R
5000|$|... '''''' is a {{terminal}} pager program on Unix, Windows, and Unix-like systems used to view (but not change) {{the contents of}} a text file one screen at a time. It is similar to more, but has the extended capability of allowing both <b>forward</b> and backward <b>navigation</b> through the file. Unlike most Unix text editors/viewers, less does not need to read the entire file before starting, resulting in faster load times with large files.|$|R
40|$|A common {{challenge}} {{in the development of}} web applications today lies in the handling of unforeseen navigation steps initiated by the user through the browser’s Back, Forward and Reload buttons. These operations break the synchrony of dialog states on the server and the client, provoking non-intuitive and possibly destructive application behaviour if not properly handled. We therefore present an approach to handling Back and <b>Forward</b> <b>navigation</b> that realizes undo/redo semantics and illustrate its implementation using the example of a web-based conference management system. The presented approach is subsequently discussed with regard to its general applicability and alternative handling semantics. 1...|$|E
40|$|Recommender systems filter {{resources}} {{for a given}} user by predicting the most pertinent item given a specific context. This paper describes a new approach of generating suitable recommendations based on the active user’s navigation stream. The underlying hypothesis is that the items order in the stream results from the intrinsic logic of the user’s behavior. We show similarities between natural language and Internet navigation and put <b>forward</b> <b>navigation</b> specificities. We then design a new model that integrates advantages of statistical language models such as n-grams and triggers to compute recommendations. The resulting Sequence Based Recommender has been tested on Internet navigation artificial corpora. ...|$|E
40|$|Three {{interaction}} techniques were evaluated for scrolling stack mode displays of volumetric data. Two used a scrollwheel mouse: one used only the wheel, while another used a “click and drag ” technique for fast scrolling, leaving the wheel for fine adjustments. The third technique used a Shuttle Xpress jog wheel. In a within-subjects design, nine radiologists searched stacked images for simulated hyperintense regions on brain, knee, and thigh MR studies. Dependent measures were speed, accuracy, navigation path, and user preference. The radiologists considered the task realistic. They had high inter-subject variability in completion times, far {{larger than the}} differences between techniques. Most radiologists (eight out of nine) preferred familiar mouse-based techniques. Most participants scanned the data in two passes, first locating anomalies, then scanning for omissions. Participants spent a mean 10. 4 s/trial exploring anomalies, with only mild variation between participants. Their rates of <b>forward</b> <b>navigation</b> searching for anomalies varied much more. Interaction technique significantly affected <b>forward</b> <b>navigation</b> rate (scroll wheel 5. 4 slices/s, click and drag 9. 4, and jog wheel 6. 9). It {{is not clear what}} constrained the slowest navigators. The fastest navigator used a unique strategy of moving quickly just beyond an anomaly, then backing up. Eight naïve students performed a similar protocol. Their times and variability were similar to the radiologists, but more (three out of eight) students preferred the jog wheel. It may be worthwhile to introduce techniques such as the jog wheel to radiologists during training, and several techniques might be provided on workstations, allowing individuals to choose their preferred method. KEY WORDS: Stack mode image navigation, user interaction devices, mouse scrolling interaction, jog-shuttle whee...|$|E
5000|$|The [...] command was {{originally}} written by Daniel Halbert, {{a graduate student}} at the University of California, Berkeley, in 1978. It was first included in 3.0 BSD, and has since become a standard program in all Unix systems. , a similar command with the extended capability of allowing both <b>forward</b> and backward <b>navigation</b> through the file was written by Mark Nudelman between 1983 and 1985 and is now included in most Unix and Unix-like systems.|$|R
40|$|ITC/USA 2011 Conference Proceedings / The Forty-Seventh Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2011 / Bally's Las Vegas, Las Vegas, NevadaCompass-I {{system is}} China has built {{satellite}} navigation system. It's {{a kind of}} regional position system according to the double-star position principle. Commonly, Compass-I system need adopt active position, in the paper several passive position methods are put <b>forward.</b> A combination <b>navigation</b> mode based on GLONASS and Compass-I passive navigation is proposed in this paper. The differences of coordinates and time systems between those two navigation systems are analyzed. User position is calculated by least squares method. Combination Navigation Algorithm can improve visible satellite constellation structure and positioning precision so as to ensure the reliability and continuity of positioning result...|$|R
40|$|Growth cones are {{required}} for the <b>forward</b> advancement and <b>navigation</b> of growing axons. Modulation of growth cone shape and reorientation of the neurite {{are responsible for the}} change of outgrowth direction that underlies navigation. Change of shape involves the reordering of the cytoskeleton. Reorienta-tion of the neurite requires the generation of tension, which is supplied by the ability of the growth cone to crawl on a sub-strate. The specific molecular mechanisms responsible for these activities are unknown but are thought to involve actomyosin-generated force combined with linkage to the cell surface receptors that are responsible for adhesion (Heidemann and Buxbaum, 1998). To test whether myosin IIB is responsible for the force generation, we quantified shape dynamics and filopodial-mediated traction force in growth cones from myosin IIB knock-out (KO) mice and compared them with neurons fro...|$|R
40|$|In this paper, {{we present}} {{the design and}} {{implementation}} of SOPView+, an object browser that supports navigating a large database by changing base object. Base object is an object which is a basis for navigation; <b>forward</b> <b>navigation</b> is provided for the reference paths ahead of the base object and backward navigation for the ones behind it. SOPView+ allows users to change the base object along the reference hierarchy {{among a number of}} database objects; this makes it possible for them to explore a large database until they find objects of their interest on the limited screen space, solving the screen real estate problem. SOPView+ also supports extended synchronized browsing, which synchronizes displaying objects along both forward and backward navigational paths. 1 Introduction In object-oriented databases(OODBs), the unit of storing and retrieving information is an object[1]. The OODB thus is a collection of a number of objects. The object usually contains plenty of reference information [...] ...|$|E
40|$|PURPOSE: To read {{efficiently}} with {{a simple}} hand or stand magnifier, people with visual impairment have to move (navigate) the device along each line (forward phase) {{and back to the}} correct position {{at the start of the}} next line (retrace phase). Page navigation difficulties have been implicated as limiting factors when reading with hand and stand magnifiers, but have not been objectively measured. METHODS: Magnifier movements were recorded using a 3 SPACE Isotrak system for 43 participants with age-related macular degeneration (AMD) who read two short stories using their habitual hand or stand magnifier. Page navigation was quantified in terms of magnifier movements and navigation errors for the forward and retrace phases. Visual acuities and visual fields were measured, and magnifier usage and page navigation difficulties were surveyed. RESULTS: During the forward phase, participants primarily used either a straight (47 %) or diagonal downward (46 %) movement, whereas during the retrace phase, the majority (56 %) used a downward movement. On average, <b>forward</b> <b>navigation</b> time was four times longer than retrace navigation time (p< 0. 001). The most common navigation error was incorrect positioning of the magnifier at the end of the retrace movement. Near word acuity correlated strongly with forward time (r= 0. 78), and moderately with retrace time (r= 0. 53) and forward errors (r= 0. 50). Vertical field of view correlated with retrace errors (r=- 0. 53). Participants' estimates of page navigation difficulties were not predictive of objective measures of performance. CONCLUSIONS: We quantified page navigation strategies and difficulties of people with AMD reading with magnifiers. Retrace, which presents the most common difficulty, is not well predicted by vision measures or magnifier characteristics; future studies should investigate the relationship between motor skills and navigation performance, and the impact of training or devices on reducing retrace navigation difficulties...|$|E
40|$|Purpose. : When {{reading with}} a stand {{magnifier}} (SM), navigation along each line of text and retracing {{back to the}} correct position {{at the beginning of}} the next line has been suggested as a major difficulty for people with low vision. In this study, we evaluated the immediate impact of using a simple and inexpensive line guide on navigation performance. METHODS. : Twenty-nine participants with age-related macular degeneration read short passages of text using their habitual SM with and without a temporary line guide attached. Magnifier movements were recorded using a 3 SPACE Isotrak system. Reading time, magnifier movement strategies, navigation times, and navigation errors were determined. A short questionnaire was used to quantify participants perceived difficulties with page navigation and their preference for reading with or without the line guide. RESULTS. : For some participants, the line guide improved the control of the vertical positioning of the SM when reading along a line (p = 0. 01), but it increased the number of corrective vertical movements at the end of the retrace (p = 0. 001). There was a small but significant decrease (about 6 wpm) in reading speed and increase in navigation times (p < 0. 05) when using the line guide; however, 48 % participants indicated a preference for reading with it attached to their SM. There was a trend (p = 0. 08) for those who preferred the line guide to report greater habitual difficulties with SM manipulation. CONCLUSIONS. : After only minimal instruction in how to use the line guide, <b>forward</b> <b>navigation</b> control improved, but the design of the guide made retracing the SM to the start of the next line more difficult resulting in slower reading speeds. Nevertheless, 48 % of participants expressed a preference for having the line guide attached to their SM. Improvements to the design of the line guide and strategies that may improve retrace navigation performance are suggested. School of Optometr...|$|E
40|$|A novel {{indexing}} structure, join index hierarchy, {{is proposed}} {{to handle the}} "goto's on disk" problem in object-oriented query processing. The method constructs a hierarchy of join indices and transforms a sequence of pointer chasing operations into a simple search in an appropriate join index file, and thus accelerates navigation in object-oriented databases. The method extends the join index structure studied in relational and spatial databases, supports both <b>forward</b> and backward <b>navigations</b> among objects and classes, and localizes update propagations in the hierarchy. Our performance study shows that partial join index hierarchy outperforms several other indexing mechanisms in object-oriented query processing. Index Terms: index structures, join indices, query processing, query optimization, object-oriented database. 1 Introduction Query processing and optimization {{is crucial to the}} performance of object-oriented database systems. Substantial research into query processing and query [...] ...|$|R
50|$|A typical manned torpedo has a {{propeller}} and hydroplanes at the rear, side hydroplanes in front, and {{a control}} panel and controls for its front rider. It usually has two riders who sit facing <b>forwards.</b> It has <b>navigation</b> aids {{such as a}} compass, and nowadays modern aids such as sonar and GPS positioning and modulated ultrasound communications gear. It may have an air (or other breathing gas) supply so its riders {{do not have to}} drain their own apparatus while they are riding it. In some the riders' seats are enclosed; in others the seats are open at the sides as in sitting astride a horse. The seat design includes room for the riders' swimfins (if used). There are flotation tanks (typically four: left fore, right fore, left aft, right aft), which can be flooded or blown empty to adjust buoyancy and attitude.|$|R
40|$|An object query {{can include}} a path {{expression}} to traverse {{a number of}} related collections. The order of collection traversals given by the path expression {{may not be the}} most efficient to process the query. This generates a critical problem for an object query optimizer to select the best execution plan. This paper studies the different algorithms to process path expressions with predicates, including depth first <b>navigation,</b> <b>forward</b> and reverse joins. Using a cost model, it then compares their performances in different cases, according to memory size, selectivity of predicates, fan out between collections, etc [...] It also presents a heuristic-based algorithm to find profitable n-ary operators for traversing collections, thus reducing the search space of query plans to process a query with a qualified path expression. An implementation based on the 02 system demonstrates the validity of the results. 1...|$|R
40|$|A {{decentralized}} control is investigated for applicability to the autonomous formation flying control algorithm developed by GSFC for the New Millenium Program Earth Observer- 1 (EO- 1) mission. This decentralized framework has the following characteristics: The approach is non-hierarchical, and coordination by a central supervisor is not required; Detected failures degrade the system performance gracefully; Each node in the decentralized network processes only its own measurement data, {{in parallel with}} the other nodes; Although the total computational burden over the entire network is greater {{than it would be}} for a single, centralized controller, fewer computations are required locally at each node; Requirements for data transmission between nodes are limited to only the dimension of the control vector, at the cost of maintaining a local additional data vector. The data vector compresses all past measurement history from all the nodes into a single vector of the dimension of the state; and The approach is optimal with respect to standard cost functions. The current approach is valid for linear time-invariant systems only. Similar to the GSFC formation flying algorithm, the extension to linear LQG time-varying systems requires that each node propagate its filter covariance <b>forward</b> (<b>navigation)</b> and controller Riccati matrix backward (guidance) at each time step. Extension of the GSFC algorithm to non-linear systems can also be accomplished via linearization about a reference trajectory in the standard fashion, or linearization about the current state estimate as with the extended Kalman filter. To investigate the feasibility of the decentralized integration with the GSFC algorithm, an existing centralized LQG design for a single spacecraft orbit control problem is adapted to the decentralized framework while using the GSFC algorithm's state transition matrices and framework. The existing GSFC design uses both reference trajectories of each spacecraft in formation and by appropriate choice of coordinates and simplified measurement modeling is formulated as a linear time-invariant system. Results for improvements to the GSFC algorithm and a multiple satellite formation will be addressed. The goal of this investigation is to progressively relax the assumptions that result in linear time-invariance, ultimately to the point of linearization of the non-linear dynamics about the current state estimate as in the extended Kalman filter. An assessment will then be made about the feasibility of the decentralized approach to the realistic formation flying application of the EO- 1 /Landsat 7 formation flying experiment...|$|E
40|$|Indexing {{schemes for}} semistructured data have been {{developed}} {{in recent years to}} optimize path query processing by summarizing path information. However, most of these schemes can only be applied to some query processing stages whereas others only support a limited class of queries. To overcome these limitations we developed ToXin 1, an indexing scheme for XML data that fully exploits the overall path structure of the database in all query processing stages. ToXin consists of two different types of structures: a path index that summarizes all paths in the database and can be used for both <b>forward</b> and backward <b>navigation</b> starting from any node, and a value index that supports predicates over values. ToXin synthesizes ideas from object-oriented path indexes and extends them to the semistructured realm of XML data. In this paper we present the ToXin architecture, describe its current implementation, and discuss comparative performance results. 1...|$|R
40|$|Regular tree grammars {{and regular}} path {{expressions}} constitute core constructs {{widely used in}} programming languages and type systems. Nevertheless, {{there has been little}} research so far on frameworks for reasoning about path expressions where node cardinality constraints occur along a path in a tree. We present a logic capable of expressing deep counting along paths which may include arbitrary recursive <b>forward</b> and backward <b>navigation.</b> The counting extensions {{can be seen as a}} generalization of graded modalities that count immediate successor nodes. While the combination of graded modalities, nominals, and inverse modalities yields undecidable logics over graphs, we show that these features can be combined in a decidable tree logic whose main features can be decided in exponential time. Our logic being closed under negation, it may be used to decide typical problems on XPath queries such as satisfiability, type checking with relation to regular types, containment, or equivalence...|$|R
40|$|Navigation {{has been}} a core {{component}} of the web since its inception: users and scripts can follow hyperlinks, and can go back or <b>forwards</b> through the <b>navigation</b> history. In this paper, we present a formal model aligned with the WHATWG specification of navigation history, and investigate its properties. The fundamental property of navigation history is that traversing the history by delta then by delta' {{should be the same}} as traversing by delta+delta'. In particular, traversing by + 1 (forward) then by - 1 (back) is the same as traversing by 0 (doing nothing). We show that the specification-aligned model does not satisfy this property, by exhibiting a series of counter-examples, which motivate four patches to the model. We present a series of experiments, showing that browsers are inconsistent in their implementation of navigation history, but that their behaviour is closer to the patched model than to the specification-aligned model. We propose patches to the specification to align it with the patched model...|$|R
40|$|Although {{many of the}} {{problems}} that must be solved by an object-oriented database system are similar to problems solved by relational systems, there are also significant problems that are unique. In particular, an object query can include a path expression to traverse a number of related collections. The order of collection traversals given by the path expression {{may not be the most}} efficient to process the query. This generates a critical problem for object query optimizer to select an algorithm to process the query based on direct navigation or various combinations of joins. This paper studies the different algorithms to process path expressions with predicates, including depth first <b>navigation,</b> <b>forward</b> and reverse joins. Using a cost model, it then compares their performances in different cases, according to memory size, selectivity of predicates, fan out between collections, etc [...] It also presents a heuristic-based algorithm to find profitable n-ary operators for traversing collecti [...] ...|$|R
50|$|November 27-December 1, 1905 : While sailing in Lake Huron with {{a load of}} coal for Duluth, MN a {{tremendous}} storm hit the region. The Holmes made it safely to the Soo Locks but she continued on, not knowing the full intensity of the storm. The Holmes was reported overdue on November 30, 1905. Although her identical sister ship, the Umbria, sustained heavy damage to her <b>forward</b> cabins and <b>navigation</b> centre (requiring the crew to steer the vessel from the emergency steering station at {{the stern of the}} vessel as it limped into Duluth), the Holmes arrived undamaged in Duluth, MN on December 1, sailing into the Duluth piers past the broken and battered wreck of the Pittsburgh Steamship Companies' SS Mataafa which had been wrecked trying to enter the piers. She had grounded and broken her back on the beach just a few yards from the shore. Nine crew-members of the Mataafa perished in the wreck, giving history the name Mataafa Storm.|$|R
