6|10000|Public
5000|$|Accurate noise {{modeling}} is a must. Create a list {{of expected}} noise events, including different types of noise, such as coupling and charge sharing. <b>Input</b> <b>Output</b> <b>Buffer</b> Information Specification (IBIS) or circuit models {{may be used to}} represent drivers and receivers.|$|E
5000|$|The IBIS Interconnect Modeling Specification (ICM) is a behavioral, ASCII-based {{file format}} for distributing passive {{interconnect}} modeling information. The format {{and style of}} ICM are highly similar to the <b>Input</b> <b>Output</b> <b>Buffer</b> Information Specification (IBIS), and both specifications are managed by the same organization, the IBIS Open Forum. Interconnects under ICM may be represented through tabular frequency-dependent RLGC matrices or through S-parameters in separate Touchstone files. ICM models define interconnects as consisting {{of one or more}} segments. Segment topologies are described in terms of the arrangements of their nodes relative to pin or port lists. The electrical behaviors for each segment are then defined. Interconnects may be grouped into families with similar characteristics or sharing identical segment definitions.|$|E
40|$|International audienceIn this paper, a {{behavioral}} modeling methodology to predict ElectroStatic-Discharge (ESD) failures at system level is proposed and validated. The proposed models enable time domain simulation to determine {{voltage and current}} waveforms inside and outside an IC during ESD events in order to predict the susceptibility of an electronic system to ESD. Very-high-speed integrated circuit Hardware Description Language - Analog and Mixed Signals (VHDL-AMS) is used as the description language. The purpose of this methodology {{is based on the}} improvement of <b>Input</b> <b>Output</b> <b>Buffer</b> Information Specification (IBIS) models widely used in signal integrity (SI) simulation. In this paper the additional information required to be added to IBIS files is described, and comparison between simulations and measurements are exposed...|$|E
30|$|Research on vector access {{performance}} for multibank memories {{has a long}} history. In [16] a memory system was proposed with <b>input</b> and <b>output</b> <b>buffers</b> for all memory banks including a stalling mechanism and a bank assignment function based on a cyclic permutation.|$|R
40|$|Abstract. It has {{recently}} been shown that a combined <b>input</b> <b>output</b> queued (CIOQ) switch with a speedup factor of 2 can exactly emulate an output-queued (OQ) switch [1]-[6]. In particular, the maximal matching algorithm, named Least Cushion First/Most Urgent First (LCF/MUF) algorithm presented in [6], can be executed in parallel to achieve exact emulation. However, the buffer size at every <b>input</b> and <b>output</b> port {{was assumed to be}} of infinite size. This assump-tion is obviously unrealistic in practice. In this paper, we investigate via com-puter simulation the performance of the LCF/MUF algorithm with finite <b>input</b> and <b>output</b> <b>buffers.</b> We found that, under uniform traffic, a CIOQ switch be-haves almost like an OQ switch if the buffer sizes at every <b>input</b> and <b>output</b> ports are 3 and 9 cells respectively. For correlated traffic, to achieve similar performance, the <b>input</b> and <b>output</b> <b>buffer</b> sizes have to be increased to about 7 and 11 times of the mean burst size, respectively. ...|$|R
50|$|Applications join {{specific}} {{groups as}} individual members. On joining a group a member can send or receive messages. Individual messages {{are assigned to}} specific transport classes, based on the message's size. Each transport class owns <b>input</b> and <b>output</b> <b>buffers.</b> Routing decisions are made at the transport class level.|$|R
40|$|Abstract — Due to {{the growing}} number of {{embedded}} electronics, estimating failure related to Electro-static Discharge (ESD) system level consideration has become a major concern. In this paper, a behavioral modeling methodology to predict Electro-Static-Discharge (ESD) failures at system level is proposed and validated. The proposed models enable time domain simulation to determine voltage and current waveforms inside and outside an IC during ESD events and then to predict the susceptibility of an electronic system to ESD. The purpose of this methodology is based on the improvement of <b>Input</b> <b>Output</b> <b>Buffer</b> Information Specification (IBIS) files widely used in signal integrity (SI) simulation. A simple case of study is proposed to investigate the susceptibility of latch devices to transient stresses. Simulations and measurements are compared. Analytical formulations to determine the probability of susceptibility failure are proposed and compared with measurements...|$|E
40|$|High level {{behavioral}} modeling {{is widely used}} in lieu of low level transistor models to ascertain the behavior of I/O drivers and receivers. IBIS (<b>Input</b> <b>Output</b> <b>Buffer</b> Infor-mation Specification) {{is one of the}} most widely used methodology to model digital drivers as it satisfies the basic requirements of a behavioral model such as intellectual property protection, simple structure, fast simulation time and good accuracy. As driver technology gets increasingly complicated and rise time of input signal gets increasingly smaller, important phenomenae such as simultaneous switching noise (SSN) becomes a major consideration when simulating multiple I/O drivers in the integrated circuit. Misrepresentation of noise might result in overestimation of signal strength and quality resulting in a high bit error rate and poor signal to noise ratio at the receiver end. This might lead to total failure of the system. With the size of the transistor shrinking, more and more I/Os can be accommodated on the chip, resulting in a greater probability of more drivers switching simultaneously, hence increasing the problems of SSN furthermore. Experiments show that IBIS models over-represents noise in the quiet line when placed in an environment where multiple drivers were present and switching simultaneously...|$|E
40|$|The {{widening}} {{performance gap}} between CPU and disk is significant for hash join performance. Most current hash join methods {{try to reduce}} the volume of data transferred between memory and disk. In this paper, we try to reduce hash-join times by reducing random I/O. We study how current algorithms incur random I/O, and propose a new hash join method, Seq +, that converts much of the random I/O to sequential I/O. Seq + uses a new organization for hash buckets on disk, and larger <b>input</b> and <b>output</b> <b>buffer</b> sizes. We introduce the technique of batch writes to reduce the bucket-write cost, and the concepts of write- and readgroups of hash buckets to reduce the bucket-read cost. We derive a cost model for our method, and present formulas for choosing various algorithm parameters, including <b>input</b> and <b>output</b> <b>buffer</b> sizes. Our performance study shows that the new hash join method performs many times better than current algorithms under various environments. Since our cost functions under-estim [...] ...|$|R
40|$|To {{support the}} Internet's {{explosive}} growth and expansion into a true integrated services network, {{there is a}} need for cost-effective switching technologies that can simultaneously provide high capacity switching and advanced QoS. Unfortunately, these two goals are largely believed to be contradictory in nature. To support QoS, sophisticated packet scheduling algorithms, such as Fair Queueing, are needed to manage queueing points. However, the bulk of current research in packet scheduling algorithms assumes an <b>output</b> <b>buffered</b> switch architecture, whereas most high performance switches (both commercial and research) are <b>input</b> <b>buffered.</b> While <b>output</b> <b>buffered</b> systems may have the desired quality of service, they lack the necessary scalability. Input buffered systems, while scalable, lack the necessary quality of service features. In this paper, we propose the construction of switching systems that are both <b>input</b> and <b>output</b> <b>buffered,</b> with the scalability of input buffered switches and the r [...] ...|$|R
40|$|An {{improved}} {{design has}} been devised for on-chip-circuitry {{for measuring the}} delay through a chain of combinational logic elements in a field-programmable gate array (FPGA) or application-specific integrated circuit (ASIC). In the improved design, the delay chain does not include <b>input</b> and <b>output</b> <b>buffers</b> and is not configured as an oscillator. Instead, the delay chain is made part of the signal chain of an on-chip pulse generator. The duration of the pulse is measured on-chip and taken to equal the delay...|$|R
40|$|This paper {{addresses}} {{the development of}} computational models of digital integrated circuit <b>input</b> and <b>output</b> <b>buffers</b> via the identification of nonlinear parametric models. The obtained models run in standard circuit simulation environments, offer improved accuracy and good numerical efficiency, and do not disclose information {{on the structure of}} the modeled devices. The paper reviews the basics of the parametric identification approach and illustrates its most recent extensions to handle temperature and supply voltage variations as well as power supply ports and tristate devices...|$|R
40|$|This article {{presents}} a 60 GHz low-power injection-locked oscillator in TSMC 65 nm technology. By using the frequency sweeping technique, a simulated 7 GHz total locking range is achieved, which covers the entire 60 GHz ISM band. The simulated settling time {{is less than}} 2 ns for each sweeping step with - 60 dBm injection power. The DC power consumption is 1 mW of the oscillator core, and 5 mW in total for the <b>input</b> and <b>output</b> <b>buffers,</b> which are mainly used for the matching purpose...|$|R
50|$|In a {{real-time}} {{digital signal}} processing (DSP) process, the analyzed (<b>input)</b> and generated (<b>output)</b> samples can be processed (or generated) continuously {{in the time it}} takes to <b>input</b> and <b>output</b> the same set of samples independent of the processing delay. It means that the processing delay must be bounded even if the processing continues for an unlimited time. That means that the mean processing time per sample, including overhead, is no greater than the sampling period, which is the reciprocal of the sampling rate. This is the criterion whether the samples are grouped together in large segments and processed as blocks or are processed individually and whether there are long, short, or non-existent <b>input</b> and <b>output</b> <b>buffers.</b>|$|R
40|$|Robotic cells {{consist in}} a flow-shop where {{transportation}} {{of the parts}} between machines is handled by a robot. We consider cyclic production of identical parts and optimization of the cell's throughput. Production cycle of 1 part are easier to describe implement {{and there is a}} conjecture about their dominance. This conjecture has been studied for linear layout cells, for which the 1 -cycles are well known, but not for cells with circular layout, where the <b>input</b> and <b>output</b> <b>buffers</b> are at the same position. We provide a counterexample to the conjecture for this case...|$|R
30|$|At the transmitter, {{first we}} obtain the bit sequence, {{which can be}} a {{specific}} one or generated randomly. Next, this bit sequence is passed through the encoder block which includes a randomizer, a Reed-Solomon (RS) encoder, an interleaver, and a puncturer to obtain the encoded bits. This block may change depending on the transmission mode. Besides, since there is an RS encoder, bits must be converted into bytes and, after the RS, converted back into bits, an operation that consumes registers in the FPGA. Also in this block, due to the interleaver, a SIRO (Sequential <b>Input</b> Random <b>Output)</b> <b>buffer</b> is needed.|$|R
40|$|Abstract — This paper {{addresses}} {{the development of}} compu-tational models of digital integrated circuit <b>input</b> and <b>output</b> <b>buffers</b> via the identification of nonlinear parametric models. The obtained models run in standard circuit simulation environments, offer improved accuracy and good numerical efficiency, and do not disclose information {{on the structure of}} the modeled devices. The paper reviews the basics of the parametric identification approach and illustrates its most recent extensions to handle temperature and supply voltage variations as well as power supply ports and tristate devices. Index Terms — Digital integrated circuits, I/O ports, circuit modeling, macromodeling, system identification, electromagnetic compatibility, signal integrity. I...|$|R
40|$|Abstract—To {{simplify the}} {{implementation}} of dataflow systems in hardware, we present a technique for designing latency-insensitive dataflow blocks. We provide buffering with back-pressure, resulting in blocks that compose into deep, high-speed pipelines without introducing long combinational paths. Our <b>input</b> and <b>output</b> <b>buffers</b> are easy to assemble into simple unit-rate dataflow blocks, arbiters, and blocks for Kahn networks. We prove the correctness of our buffers, illustrate {{how they can be}} used to assemble arbitrary dataflow blocks, discuss pitfalls, and present experimental results that suggest our pipelines can operate at a high clock rate independent of length. 1...|$|R
40|$|International audienceThis article {{introduces}} {{a new technique}} to minimize the memory footprints of Digital Signal Processing (DSP) applications specified with Synchronous Dataflow (SDF) graphs and implemented on shared-memory Multiprocessor Systems-on-Chips (MPSoCs). In addition to the SDF specification, which captures data dependencies between coarse-grained tasks called actors, the proposed technique relies on two optional inputs abstracting the internal data dependencies of actors: annotations of the ports of actors, and script-based specifications of merging opportunities between <b>input</b> and <b>output</b> <b>buffers</b> of actors. Experimental results {{on a set of}} applications show a reduction of the memory footprint by 48 % compared to state-of-the-art minimization techniques...|$|R
5000|$|The two {{programs}} performing the commands may {{run in parallel}} with the only storage space being working buffers (Linux allows up to 64K for each buffer) plus whatever work space each command's processing requires. For example, a [...] "sort" [...] command is unable to produce any <b>output</b> until all <b>input</b> records have been read, as the very last record received just {{might turn out to}} be first in sorted order. Dr. Alexia Massalin's experimental operating system, Synthesis, would adjust the priority of each task as they ran according to the fullness of their <b>input</b> and <b>output</b> <b>buffers.</b>|$|R
40|$|An ATM switch {{with both}} <b>input</b> and <b>output</b> <b>buffers</b> {{provided}} with a back-pressure function has been proposed as a cost-effective switch architecture. The back-pressure function prohibits cell transmission from the input buffer to the corresponding <b>output</b> <b>buffer</b> to avoid cell loss at the <b>output</b> <b>buffer</b> due to a temporary congestion. Especially when this switch is applied to ATM LANs for data transfer services, its performance should be evaluated by taking into account bursty traffic. In this paper, we show the maximum throughput, the packet delay distribution, and the approximate packet loss probability of such an ATM switch for bursty traffic through an analytic method. In addition to a balanced traffic condition, an unbalanced traffic and a mixture of bursty and stream traffic are also analyzed. Through several numerical examples, we quantitatively show {{the effects of the}} average packet length and the <b>output</b> <b>buffer</b> size on its performance. Key words: ATM LAN, Input/Output Buffered Type S [...] ...|$|R
30|$|After {{considering}} all the alternatives, we {{finally decided to}} propose a scheme based on <b>input</b> and <b>output</b> <b>buffers.</b> Such buffers act similarly to two synchronized parallel-to-serial and serial-to-parallel converters. Each set of signals transmitted from an array of IEEE 802.11 p transceivers are stored in a buffer and released at specific time instants, achieving a similar effect as if the parallel transceivers were executed in series. In Table 2, row MIMO 4 × 4, {{it can be seen}} the important resource savings attained by using the time-multiplexing approach, which even consumes 3 % less slices than our old SISO version thanks to some of the previously described optimizations.|$|R
5000|$|This is the {{reversible}} block-sort {{that is at}} {{the core}} of bzip2. The block is entirely self-contained, with <b>input</b> and <b>output</b> <b>buffers</b> remaining the same size—in bzip2, the operating limit for this stage is 900 kB. For the block-sort, a (notional) matrix is created in which row [...] contains the whole of the buffer, rotated to start from the [...] symbol. Following rotation, the rows of the matrix are sorted into alphabetic (numerical) order. A 24-bit pointer is stored marking the starting position for when the block is untransformed. In practice, it is not necessary to construct the full matrix; rather, the sort is performed using pointers for each position in the <b>buffer.</b> The <b>output</b> <b>buffer</b> is the last column of the matrix; this contains the whole buffer, but reordered so that it is likely to contain large runs of identical symbols.|$|R
40|$|A 73 to 83 GHz injection-locked {{oscillator}} (IJLO) {{is realized}} in TSMC 65 -nm CMOS technology. By using the frequency-sweeping method, a 10 GHz total locking range is achieved with - 35 dBm injection power. The power consumption is 9 mW from a 1 -V supply. Additional 4 mW and 6 mW are consumed for the <b>input</b> and <b>output</b> <b>buffers</b> respectively for the measurement purpose. The measured {{sensitivity of the}} IJLO is - 60 dBm. The output power measured at the 50 -Ohm load is higher than - 10 dBm, and the simulated total settling time of the IJLO is less than 10 µs. The effective core area of the chip is 0. 055 mm 2...|$|R
40|$|The {{objective}} of this kit is to provide sufficient circuit schematic and SPICE parameter information to perform system level interconnect modeling for devices in ON Semiconductor’s high performance GigaComm (Silicon Germanium) logic family. The family have output edge rates as low as 20 ps and power supply levels of as low as 2. 5 V. The kit {{is not intended to}} provide information necessary to perform circuit level modeling on the GigaComm (SiGe) devices. Schematic Information The kit contains representatives of <b>input</b> and <b>output</b> schematics, netlists, and waveform used for the GigaComm family devices. This application note will be modified as new devices are added. Table 1 describes the nomenclature used for modeling the schematic and netlist for GigaComm devices. The subcircuit models, such as <b>input</b> or <b>output</b> <b>buffers,</b> ESD and package simulate only device <b>input</b> or <b>output</b> paths. When used with interconnect models, a complete signal path may be modeled as show...|$|R
40|$|Abstract—To {{support the}} Internet’s {{explosive}} growth and expansion into a true integrated services network, {{there is a}} need for cost-effective switching technologies that can simultaneously provide high capacity switching and advanced QoS. Unfortunately, these two goals are largely believed to be contradictory in nature. To support QoS, sophisticated packet scheduling algorithms, such as Fair Queueing, are needed to manage queueing points. However, the bulk of current research in packet scheduling algorithms assumes an <b>output</b> <b>buffered</b> switch architecture, whereas most high performance switches (both commercial and research) are <b>input</b> <b>buffered.</b> While <b>output</b> <b>buffered</b> systems may have the desired quality of service, they lack the necessary scalability. Input buffered systems, while scalable, lack the necessary quality of service features. In this paper, we propose the construction of switching systems that are both <b>input</b> and <b>output</b> <b>buffered,</b> with the scalability of input buffered switches and the robust quality of service of <b>output</b> <b>buffered</b> switches. We call the resulting architecture Distributed Packet Fair Queueing (D-PFQ) as it enables physically dispersed line cards to provide service that closely approximates an output-buffered switch with Fair Queueing. By equalizing the growth of the virtual time functions across the switch system, most of the PFQ algorithms in the literature can be properly defined for distributed operation. We present our system using a crossbar for the switch core, as they are widely used in commercial products and enable the clearest presentation of our architecture. Buffering techniques are used to enhance the system’s latency tolerance, which enables the use of pipelining and variable packet sizes internally. Our system is truly distributed in that there is neither a central arbiter nor any global synchronization. Simulation results are presented to evaluate the delay and bandwidth sharing properties of the proposed D-PFQ system. I...|$|R
40|$|Background: Within {{cognitive}} neuropsychological models, conduction aphasia {{has been}} conceptualized as a phonological buffer deficit. It {{may affect the}} <b>output</b> <b>buffer,</b> the <b>input</b> buffer, or both. The phonological <b>output</b> <b>buffer</b> is a short-term storage, responsible for the short-term maintenance of phonological units until their articulation, {{as well as for}} phonological and morphological composition. The phonological input buffer holds input strings until they are identified in the input lexicon. Thus, the phonological buffers are closely related to phonological short term memory (pSTM), and hence, it is important to assess pSTM in conduction aphasia. Because the <b>input</b> and <b>output</b> <b>buffers</b> play different roles, impairments in each of them predicts different impairments in the patient's ability to understand certain sentences, to learn new words and names, and to remember and recall lists of words and numbers for short time periods. Aims: This study explored in detail pSTM in individuals with conduction aphasia, comparing individuals with <b>input</b> and <b>output</b> deficits, recall and recognition tasks, and stimuli of various types. It also tested pSTM in 6 age groups of healthy individuals, assessing the effect of age on various types of stimuli. This paper presents a new battery of 10 recall and recognition span tests, designed to assess pSTM in aphasia and to measure spans and effects on spans...|$|R
40|$|International audienceThis paper {{introduces}} and assesses a {{new technique}} to minimize the memory footprints of Digital Signal Processing (DSP) applications specified with Synchronous Dataflow (SDF) graphs and implemented on shared-memory Multiprocessor Systems-on-Chips (MP-SoCs). In addition to the SDF specification, which captures data dependencies between coarse-grained tasks called actors, the proposed technique relies on two optional inputs abstracting the internal data dependencies of actors: annotations of the ports of SDF actors, and script-based specifications of merging opportunities between <b>input</b> and <b>output</b> <b>buffers</b> of actors. An automated optimization process is used to exploit these buffer merging opportunities and to minimize the memory footprints of applications. Experimental results on a computer vision application show a reduction of the memory footprint by 34 % compared to state-of-the-art minimization techniques...|$|R
40|$|Abstract:- This paper {{presents}} a modified architecture for a buffered crossbar switch that overcomes the memory bottleneck {{with only a}} minor impact on performance. The proposed architecture uses two levels of backpressure with different constraints on round trip time. Buffered crossbars are considered an alternative to bufferless crossbars mainly because the latter requires a complex scheduling algorithm that matches <b>input</b> with <b>output.</b> <b>Buffered</b> crossbars require only a simple scheduler that operates independently for each output queue column. The memory amount required for a buffered crossbar {{is proportional to the}} square of the number of ports and the round trip time. The proposed architecture reduces the amount of memory in the buffered crossbar without increasing the scheduling complexity. Key-Words:- Buffered Crossbar, Packet switching, SpeedUp...|$|R
40|$|Real-time {{applications}} such as software deﬁned radios have different reception modes and their real-time requirements {{are a result of}} periodic sources and sinks in the form of ADCs and DACs. Tools are under development that automatically translate a sequential speciﬁcation of a radio application, that often includes nested while loops to describe the modes, into a parallel task graph and map this task graph onto an embedded multiprocessor system. However the speciﬁcation of strict periodic sources and sinks together with <b>input</b> and <b>output</b> <b>buffers</b> that can respectively overﬂow or underrun is currently not possible in a sequential programming language. In this paper we will introduce a nested loop program (NLP) language extension that enables the speciﬁcation of periodic sources and sinks and their buffers in a sequential program. We show that parallelization of such a sequential program poses challenges because the order in which different tasks access the <b>input</b> and <b>output</b> <b>buffers</b> should be maintained in the parallel program. Furthermore, the buffers at the sources and sinks allow destructive writes and non-destructive reads, which causes non-deterministic functional behavior in case the throughput and latency constraint of the application are not met. The other buffers in the task graph block in case no data or space is available. Therefore, the system internals remain functionally deterministic which signiﬁcantly simpliﬁes debugging and analysis. Furthermore, to guarantee real-time requirements, we show {{that it is possible to}} conservatively model an application with nested while loops as a Cyclo-Static Dataﬂow (CSDF) model. Using this model we can compute a mapping of the task graph, which includes a task to processor assignment, suitable scheduler settings and buffer capacities. By making use of this CSDF model, we can guarantee that sources and sinks can run periodically under the assumption that the used execution times of the tasks are upper bounds...|$|R
40|$|This paper {{describes}} a new architecture for a scalable multicast ATM switch {{from a few}} tens to thousands of input ports. The switch, called Abacus switch, has a nonblocking memoryless switch fabric followed by small switch modules at the output ports; the switch has <b>input</b> and <b>output</b> <b>buffers.</b> Cell replication, cell routing, output contention resolution, and cell addressing are all performed distributedly in the Abacus switch {{so that it can}} be scaled up to thousands <b>input</b> and <b>output</b> ports. A novel algorithm has been proposed to resolve output port contention while achieving input buffers sharing, fairness among the input ports, and multicast call splitting. The channel grouping concept is also adopted in the switch to reduce the hardware complexity and improve the switch's throughput. The Abacus switch has a regular structure and thus has the advantages of: (1) easy expansion, (2) relaxed synchronization for data and clock signals, and (3) building the switch fabric using existing CMOS technology...|$|R
40|$|A {{fundamental}} {{road block}} for all-optical information processing is {{the difficulty in}} realizing a silicon optical transistor {{with the ability to}} provide optical gain, <b>input</b> <b>output</b> isolation and <b>buffer</b> action. In this work, we demonstrate an all-optical transistor using optical nonlinearity in microrings. By using weak light to control strong light, we observed an On/Off ratio up to 20 dB. It can compensate losses in other optical devices and provide fan-out capability. The device is ultra compact and is compatible with current complementary metal-oxide-semiconductor (CMOS) processing...|$|R
40|$|In this paper, {{we propose}} an N × N high speed and {{non-blocking}} {{asynchronous transfer mode}} (ATM) switch with <b>input</b> and <b>output</b> <b>buffers.</b> In this switch, each buffer adopts a priority discarding scheme, which discards incoming cells of low-priority traffic when its queue length is greater than a predefined threshold value. Our switch also sup-ports broadcast/multicast functions without increasing the cost and imposing a signifi-cant performance penalty. We use the discrete-time Markov chain model to analyze cell delay and cell loss probability for each traffic class. An example 4 × 4 ATM switch has been described with VHDL. We have verified the functionality of the switch via VHDL simulation, and have synthesized the switch to evaluate its area and timing. Experimental results and synthesis results show that our proposed ATM switch can meet a requirement for high speed and support QOS...|$|R
40|$|This paper {{concerns}} dynamic {{neural networks}} for signal processing: architectural issues are considered but the paper focuses on learning algorithms that work on-line. Locally recurrent neural networks, namely MLP with IIR synapses and generalization of Local Feedback MultiLayered Networks (LF MLN), are compared to more traditional neural networks, i. e. static MLP with <b>input</b> and/or <b>output</b> <b>buffer</b> (TDNN), FIR MLP and fully recurrent neural networks: simulations results are provided to compare locally recurrent neural networks with TDNN and FIR MLP. Moreover, we propose a new learning algorithm, {{based on the}} Back Propagation Through Time and called Causal Back Propagation Through Time (CBPTT), that is faster and more stable than the algorithm previously used for IIR MLP. The algorithm that we propose includes as particular cases the following algorithms: Wan's Temporal Back Propagation, Back Propagation for Sequences (BPS) and Back-Tsoi algorithm. 1. INTRODUCTION Dynamic neural networks [...] ...|$|R
40|$|Multistage Interconnection Networks {{based on}} shared {{buffering}} {{are known to}} have better performance and buffer utilization than <b>input</b> or <b>output</b> <b>buffered</b> switches. Shared buffer switches do not suffer from head of line blocking which is a common problem in simple input buffering. Shared buffer switches have previously been studied under uniform and unbalanced traffic patterns. However, due to the complexity of the model, the performance of such a network, {{in the presence of a}} single hot spot, has not been fully explored. A hot spot arises when one of the outputs of the network becomes very popular. In this paper, we develop a model for a multistage interconnection network constructed from shared buffer switching elements and operating under a hot spot traffic pattern. The model is validated by comparison with simulation results. The model is used to study the network performance in terms of the throughput, packet delay, packet loss probability and the optimal buffer utilization. Numerica [...] ...|$|R
40|$|Problem statement: Optical Packet Switching (OPS) and {{transmission}} networks based on Wavelength Division Multiplexing (WDM) have been increasingly {{deployed in the}} Internet infrastructure {{over the last decade}} {{in order to meet the}} huge increasing demand for bandwidth. Several different technologies have been developed for optical packet switching such as space switches, broadcast-and-select, <b>input</b> <b>buffered</b> switches and <b>output</b> <b>buffered</b> switches. These architectures vary based on several parameters such as the way of optical buffering, the placement of optical buffers, the way of solving the external blocking inherited from switching technologies in general and the components used to implement WDM. Approach: This study surveys most of the exiting optical packet switching architectures. A simulation-based comparison of <b>input</b> <b>buffered</b> and <b>output</b> <b>buffered</b> architectures were presented. Results: The performance analysis of the selected two architectures derived using simulation program and compared at different scenarios. We found that the <b>output</b> <b>buffered</b> architectures give better performance than input buffered architectures. Conclusion: The simulation results shows that the-broadcast-and-select architecture is attractive in terms that it has lees number of components compared to other switches. </P...|$|R
