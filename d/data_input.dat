2224|10000|Public
25|$|Assuming sorted data, L-estimators {{involving}} only a {{few points}} can be calculated with far fewer mathematical operations than efficient estimates. Before the advent of electronic calculators and computers, these provided a useful way to extract {{much of the information}} from a sample with minimal labour. These remained in practical use through the early and mid 20th century, when automated sorting of punch card data was possible, but computation remained difficult, and is still of use today, for estimates given a list of numerical values in non-machine-readable form, where <b>data</b> <b>input</b> is more costly than manual sorting. They also allow rapid estimation.|$|E
2500|$|By {{applying}} the virtual work equation (1) to the system, we can establish the element matrices , [...] {{as well as}} the technique of assembling the system matrices [...] and [...] Other matrices such as , , [...] and [...] are known values and can be directly set up from <b>data</b> <b>input.</b>|$|E
2500|$|The {{packaging}} {{problem was}} severe {{and the performance}} of some early torpedo fire control equipment was hampered by the need to make it small. It had an array of handcranks, dials, and switches for <b>data</b> <b>input</b> and display. To generate a fire control solution, it required inputs on ...|$|E
50|$|<b>Input</b> <b>data</b> is {{classified}} into two categories: relative <b>input</b> <b>data</b> and absolute <b>input</b> <b>data.</b>|$|R
30|$|<b>Input</b> <b>data</b> {{requirements}} {{for each of}} the various mortality forecasting methods were assessed by compiling a table of both national-level and regional-level <b>data</b> <b>inputs.</b> At the regional scale the number of <b>input</b> <b>data</b> cells per subnational region was noted.|$|R
50|$|PFA {{document}} is designed covering all the functionality {{required by the}} business {{and how it is}} addressed in the application.It covers all the <b>data</b> <b>inputs,</b> <b>data</b> processing and data outputs.|$|R
2500|$|In {{response}} to the incident, Emirates reviewed its pre-flight procedures, mandating the duplication of laptop computers used for pre-flight planning so as to ensure dual data entry. They are also developing an avionics system for take-off acceleration-monitoring and alerting. Airbus updated its software to detect erroneous data. In October 2011, they announced plans to include a software program to calculate the required runway length. Furthermore, Airbus is developing a monitoring system to compute required acceleration rates and apply a [...] "reasonableness test" [...] to <b>data</b> <b>input</b> and alert the pilot to any potential errors. The system could potentially be certified by 2015.|$|E
2500|$|Calculating {{the age of}} the {{universe}} is accurate only if the assumptions built into the models being used to estimate it are also accurate. This is referred to as strong priors and essentially involves stripping the potential errors in other parts of the model to render the accuracy of actual observational data directly into the concluded result. [...] Although this is not a valid procedure in all contexts (as noted in the accompanying caveat: [...] "based on the fact we have assumed the underlying model we used is correct"), the age given is thus accurate to the specified error (since this error represents the error in the instrument used to gather the raw <b>data</b> <b>input</b> into the model).|$|E
2500|$|Early {{applications}} of matrix methods {{were applied to}} articulated frameworks with truss, beam and column elements; later and more advanced matrix methods, referred to as [...] "finite element analysis", model an entire structure with one-, two-, and three-dimensional elements {{and can be used}} for articulated systems together with continuous systems such as a pressure vessel, plates, shells, and three-dimensional solids. Commercial computer software for structural analysis typically uses matrix finite-element analysis, which can be further classified into two main approaches: the displacement or stiffness method and the force or flexibility method. The stiffness method is the most popular by far thanks to its ease of implementation as well as of formulation for advanced applications. The finite-element technology is now sophisticated enough to handle just about any system as long as sufficient computing power is available. Its applicability includes, but is not limited to, linear and non-linear analysis, solid and fluid interactions, materials that are isotropic, orthotropic, or anisotropic, and external effects that are static, dynamic, and environmental factors. This, however, does not imply that the computed solution will automatically be reliable because much depends on the model and the reliability of the <b>data</b> <b>input.</b>|$|E
5000|$|Network {{communications}} - {{the managing}} of <b>data</b> <b>inputs</b> and outputs for local and internet gameplay.|$|R
5000|$|In {{addition}} to the mandatory simulation inputs listed above, there are several additional optional <b>data</b> <b>inputs.</b>|$|R
5000|$|Random {{sequence}} of <b>data</b> <b>inputs</b> (sometimes called stochastic testing) - f.ex. a random {{sequence of}} method calls ...|$|R
2500|$|The turret is {{fitted with}} the 2K23 system, which {{consists}} of an automatic loader with 22 rounds (the remaining 18 rounds are stored in the hull), a 1V539 ballistic computer, a cross-wind sensor, a 2E52-2 stabilising system, a 1D16-3 laser range finder, a 1K13-2 gunner's sight/guidance device, a PPB-1 gunner's sight and an OU-5-1 IR searchlight. The commander has a combined optical sight 1PZ-10, a day/night vision device TKN-3MB and an IR searchlight OU-3GA2. Since 2005, the BMP-3 can be fitted with a new fire control system from the [...] "Peleng" [...] Joint Stock Company from Belarus. This consists of a SOZH-M gunner's main sight with an integrated laser range-finder and missile-guidance channel, a Vesna-K targeting system with thermal imaging camera and automatic target tracker AST-B, an armament stabilisation system, a ballistic computer with <b>data</b> <b>input</b> sensors and a PL-1 IR laser projector. Since 2017, the BMP-3 is fitted with a new fire control system from the [...] "Vologda Optical-Mechanical Plant" [...] from Russia. This consists of a Sodema two-plane stabilized gunner's main sight with an integrated laser range-finder and missile-guidance channel plus a SOZH-M thermal imaging camera.|$|E
2500|$|While he {{was imprisoned}} {{in the castle}} of Fardajan near Hamadhan, Avicenna wrote his famous [...] "Floating Man"– {{literally}} falling man– thought experiment to demonstrate human self-awareness and the substantiality and immateriality of the soul. Avicenna believed his [...] "Floating Man" [...] thought experiment demonstrated that the soul is a substance, and claimed humans cannot doubt their own consciousness, even {{in a situation that}} prevents all sensory <b>data</b> <b>input.</b> The thought experiment told its readers to imagine themselves created all at once while suspended in the air, isolated from all , which includes no sensory contact with even their own bodies. He argued that, in this scenario, one would still have self-consciousness. Because it is conceivable that a person, suspended in air while cut off from sense experience, would still be capable of determining his own existence, the thought experiment points to the conclusions that the soul is a perfection, independent of the body, and an immaterial substance. The conceivability of this [...] "Floating Man" [...] indicates that the soul is perceived intellectually, which entails the soul's separateness from the body. Avicenna referred to the living human intelligence, particularly the active intellect, which he believed to be the hypostasis by which God communicates truth to the human mind and imparts order and intelligibility to nature. Following is an English translation of the argument: ...|$|E
5000|$|A {{write to}} this {{register}} will reset bits 5 through 7 of SKSTAT which are latches to 1. The latches flag keyboard overrun, Serial <b>data</b> <b>input</b> overrun, and Serial <b>data</b> <b>input</b> frame error.|$|E
5000|$|Like IEC 61131-3 {{function}} blocks, IEC 61499 {{function block}} types specify both an interface and an implementation. In contrast to IEC 61131-3, an IEC 61499 interface contains event {{inputs and outputs}} in addition to <b>data</b> <b>inputs</b> and outputs. Events {{can be associated with}} <b>data</b> <b>inputs</b> and outputs by WITH constraints. IEC 61499 defines several function block types, all of which can contain a behavior description in terms of service sequences: ...|$|R
50|$|Micromarketing or hyper-segmentation {{rely on the}} {{extensive}} information technology, big databases, computerized and flexible manufacturing systems, and integrated distribution systems. Data is captured from electronic communications devices, mapped and logged with a management information system. This enables the integration of observed behaviour (domains accessed) with motives (content involvement), geographics (IP addresses), demographics (self-reported registration details) and brand preferences (site-loyalty, site stickiness). Additional <b>data</b> <b>inputs</b> might include behavioural variables such as frequency (site visits), diversity including visitation across different landscapes and fluidity spanning multiple time periods. Programmed business intelligence software analyses this data and in the process, may also source <b>data</b> <b>inputs</b> from other internal information networks. Given this reliance on digital <b>data</b> <b>inputs,</b> some theorists have also used the term, cyber-segmentation to describe micromarketing.|$|R
30|$|In this paper, by an unlabeled <b>input</b> <b>data,</b> we {{mean that}} it is unknown to which group the <b>input</b> <b>data</b> belongs. If all the <b>input</b> <b>data</b> are unlabeled, {{it means that the}} {{distribution}} of the <b>input</b> <b>data</b> is unknown.|$|R
50|$|Serial port <b>data</b> <b>input</b> byte.|$|E
5000|$|WebAGRIS is a {{multilingual}} Web-based {{system for}} distributed <b>data</b> <b>input,</b> processing and dissemination (through the Internet or on CD-Rom), of agricultural bibliographic information. It {{is based on}} common standards of <b>data</b> <b>input</b> and dissemination formats (XML, HTML, ISO2709), as well as subject categorization schema and AGROVOC.|$|E
50|$|Check for {{transcription}} {{errors in}} <b>data</b> <b>input</b> and reference.|$|E
50|$|Input Contracts {{split the}} <b>input</b> <b>data</b> of a PACT into {{independently}} processable subsets that are handed {{to the user}} function of the PACT. Input Contracts vary {{in the number of}} <b>data</b> <b>inputs</b> and the way how independent subsets are generated.|$|R
5000|$|Bottlenose is a {{wearable}} technology {{device that}} uses implanted or haptic magnets as <b>data</b> <b>inputs</b> to transmit {{information to the}} user through nerves.|$|R
5000|$|... (d) The term [...] "analysed {{information}}" [...] {{means the}} information {{resulting from the}} interpretation of processed <b>data,</b> <b>inputs</b> of <b>data</b> and knowledge from other sources; ...|$|R
5000|$|... #Caption: <b>Data</b> <b>input</b> form, {{showing the}} general {{structure}} of ZOG syntax ...|$|E
5000|$|In NetWeaver Developer, data links {{prompt the}} user for <b>data</b> <b>input.</b>|$|E
5000|$|... {{an input}} module to handle <b>data</b> <b>input</b> (from probes or packet sniffer) ...|$|E
3000|$|... are weights <b>data</b> and <b>input</b> <b>data,</b> respectively, {{including}} the reduced-precision error. They are described by [...]...|$|R
3000|$|The {{interpolation}} filter {{reads the}} reference integer pixels {{from the first}} line, and as a result, there are 16 reference <b>data</b> <b>inputs</b> from 0 ~ 15.|$|R
5000|$|As {{a system}} that {{combines}} human intelligence, <b>data</b> <b>inputs,</b> automated decision-making and unified information access, intelligence engines are an advancement in business intelligence tools because they: ...|$|R
50|$|The <b>data</b> <b>input</b> form invites every {{contributor}} of new articles to list sources.|$|E
50|$|The <b>data</b> <b>input</b> to any {{of those}} hash {{algorithms}} is described somewhere around https://github.com/ipfs/go-ipfs/tree/master/merkledag.|$|E
5000|$|Data object model, {{database}} generation through object-relational mapping, {{suite of}} customizable <b>data</b> <b>input</b> controls.|$|E
50|$|The 2011 {{checklist}} at the Ping website contained approximately 100 <b>data</b> <b>inputs</b> and {{was part}} of a 5-step fitting process covering everything from driver to putter.|$|R
40|$|We {{present an}} {{algorithm}} for automatic testing of distributed programs, such as Unix processes with inter-process communication and Web services. Specifically, {{we assume that}} a program consists {{of a number of}} asynchronously executing concurrent processes or actors which may take <b>data</b> <b>inputs</b> and communicate using asynchronous messages. Because of the large numbers of possible <b>data</b> <b>inputs</b> as well as the asynchrony in the execution and communication, distributed programs exhibit very large numbers of potential behaviors. Our goal is two fold: to execute all reachable statements of a program, and to detect deadlock states. Specifically, our algorithm uses simultaneous concrete and symbolic execution, or concolic execution, to explore all distinct behaviors that may result from a program's execution given different <b>data</b> <b>inputs</b> and schedules. The key idea is as follows. We use the symbolic execution to generate <b>data</b> <b>inputs</b> that may lead to alternate behaviors. At the same time, we use the concrete execution to determine, at runtime, the partial order of events in the program's execution. This enables us to improve the efficiency of our algorithm by avoiding many tests which would result in equivalent behaviors. We describe our experience with dCUTE, a prototype tool that we have developed for distributed Java programs...|$|R
50|$|The dynamic {{convex hull}} {{problem is a}} class of dynamic {{problems}} in computational geometry. The problem consists in the maintenance, i.e., keeping track, of the convex hull for the dynamically changing <b>input</b> <b>data,</b> i.e., when <b>input</b> <b>data</b> elements may be inserted, deleted, or modified. Problems of this class may be distinguished by the types of the <b>input</b> <b>data</b> and the allowed types of modification of the <b>input</b> <b>data.</b>|$|R
