0|77|Public
50|$|PassWindow is {{typically}} implemented such that an animated, perpetually looping sequence of challenge patterns is displayed, each encoding a single <b>digit</b> <b>placed</b> {{in a random}} location within the matrix.|$|R
50|$|The digits are multiplied {{individually}} {{from right}} to left alternately by 2 and 1, and digit summed using the Luhn algorithm. The difference between this sum and the next multiple of ten is the check <b>digit,</b> <b>placed</b> after the eleventh digit, separated by a dash.|$|R
5000|$|The {{traditional}} pen-and-paper algorithm for computing {{the square}} root [...] {{is based on}} working from higher <b>digit</b> <b>places</b> to lower, and as each new digit pick the largest that will still yield a square [...] If stopping after the one's place, the result computed will be the integer square root.|$|R
5000|$|The digits of {{a number}} are {{expressed}} in order of decreasing <b>digits</b> <b>place.</b> For example, 1,234,567 is expressed as follows (where the highlighted portions represent numbers whose tone has shifted from low → creaky:1 When combined with the numeral place, the pronunciations for 1 and 2 shift from a checked tone (glottal stop) to an open vowel (...) [...]|$|R
5000|$|Apidya (titled Abidja (アビヂャ) in Japanese {{characters}} {{below the}} title) is a horizontally scrolling shoot 'em up video game developed by Kaiko and released by Play Byte in 1992 for the Amiga. It was Kaiko's second game developed. Despite being labelled II {{in the title}} {{it is not a}} sequel to any game, but has the <b>digits</b> <b>placed</b> there simply for a gag.|$|R
5000|$|... and [...] are the <b>digits</b> k <b>places</b> to {{the left}} and right of the radix point respectively.|$|R
5000|$|Faraday Future's {{vehicles}} are named with an [...] "FF" [...] indicating Faraday Future {{followed by a}} two digit number. The first <b>digit</b> (10's <b>place)</b> indicates the market segment of the vehicle. A [...] "9" [...] would be top-of-the-range product for Faraday, with each number lower indicating a successively lower cost segment, except for [...] "0", indicating a special car. The second <b>digit</b> (1's <b>place)</b> indicates successive iterations in that segment.|$|R
50|$|The use of {{fractions}} {{stimulates the}} players interest towards fractions and motives them {{to want to}} learn more about fractions. In order to get higher scores, players are constantly taking advantage of premium board positions. Equate uses large numbers. Single <b>digits</b> <b>placed</b> adjacent to one another creates even larger numbers. Equate is also strategically challenging for advanced players who are already good at math. The game adapts to many different levels of play.|$|R
5000|$|Sorting by most {{significant}} <b>digit</b> (100s <b>place)</b> gives: Zero hundreds bucket: 045, 075, 090, 002, 024, 066 One hundreds bucket: 170 Eight hundreds bucket: 802 ...|$|R
50|$|Confusion is {{also caused}} by {{exchange}} automated changed number announcements where the voice synthesiser assumes that ALL area codes have four <b>digits</b> and <b>places</b> the spoken pause incorrectly.|$|R
5000|$|If {{the number}} {{subtracted}} was the ith Fibonacci number F(i), put a 1 in place i&minus;2 {{in the code}} word (counting the left most <b>digit</b> as <b>place</b> 0).|$|R
5000|$|... 2 <b>digits</b> for <b>place</b> {{of birth}} (the code for the county) (For legal {{residents}} the numbers encode {{the region where}} the person having the residence permit comes from); ...|$|R
5000|$|... bbbb, {{the eighth}} through {{eleventh}} <b>digits,</b> signifies <b>place</b> of birth on Korean citizens' cards. In the registration numbers of foreign residents, these number indicate which agency issued the registration number.|$|R
50|$|It is an {{extension}} of Napier's Bones, using two sets of rods to achieve multi-digit multiplication. The rods for the multiplicand are similar to Napier's Bones, with repetitions of the values. The set of rods for the multiplier are shutters or masks for each <b>digit</b> <b>placed</b> over the multiplicand rods. The results are then tallied from the digits showing as with other lattice multiplication methods. The final form described by Napier took advantage of symmetries to compact the rods, and used the materials of the day to hold system of metal plates, placed inside a wooden frame.|$|R
5000|$|The consonants of the numerals {{one through}} nine {{are used as}} <b>digits</b> (in <b>place</b> of Arabic numerals), with o for zero, so [...] "25" [...] is written [...] and [...] "100" [...] is written [...]|$|R
50|$|Prorotodactylus {{tracks were}} made by a small quadrupedal animal. The tracks are long-striding, showing that the hind feet often overstepped the forefeet, or {{were placed on the}} lame line. The first four digits of the hind foot, or pes, are clawed. Digits II-IV are angled skightly away from digit I, with digit IV being the longest. Digit V is smaller than the other four and is placed farther back on the foot, {{occurring}} only occasionally in footprints. The fifth digit of the forefoot, or manus, is separate {{from the rest of the}} <b>digits,</b> <b>placed</b> behind <b>digits</b> I-IV and angled outward. Digit III is the longest, with digits II and I being progressively smaller.|$|R
5000|$|Sorting by next <b>digit</b> (10s <b>place)</b> is {{only needed}} for those {{numbers in the}} zero {{hundreds}} bucket (no other buckets contain more than one item): Zero tens bucket: 002 Twenties bucket: 024 Forties bucket: 045 Sixties bucket: 066 Seventies bucket: 075 Nineties bucket: 090 ...|$|R
5000|$|... d) N4 will be {{a single}} <b>digit,</b> 0 ... 9. <b>Place</b> the Knights {{according}} to its value by consulting the following table: ...|$|R
5000|$|In the {{balanced}} ternary system {{the value of}} a <b>digit</b> n <b>places</b> left of the radix point is the product of the digit and 3n. This is useful when converting between decimal and balanced ternary. In the following the strings denoting balanced ternary carry the suffix, bal3. For instance, ...|$|R
5000|$|Sorting by least {{significant}} <b>digit</b> (1s <b>place)</b> is not needed, {{as there}} is no tens bucket with more than one number. Therefore, the now sorted zero hundreds bucket is concatenated, joined in sequence, with the one hundreds bucket and eight hundreds bucket to give:002, 024, 045, 066, 075, 090, 170, 802 ...|$|R
5000|$|Speed Numbers: {{memorize}} as many digits {{as possible}} within five minutes. 20 <b>digits</b> are <b>placed</b> in each row with 25 rows per page. After memorization MAs are given 10 minutes for recall. For every complete row memorized in order, 20 points are given. For every row that has any mistakes 0 points will be given.|$|R
50|$|Dodecagonal numbers {{consistently}} alternate parity, and in base 10, {{their units}} <b>place</b> <b>digits</b> follow the pattern 1, 2, 3, 4, 5, 6, 7, 8, 9, 0.|$|R
5000|$|If a digit was {{duplicated}} in {{an audience}} member's phone number, {{they had to}} wait until all instances of that <b>digit</b> were <b>placed</b> on the board. For example, an audience member with [...] "1234" [...] needed one of each digit to come on stage, while one with [...] "5555" [...] needed four 5's to be eligible.|$|R
2500|$|Both {{these methods}} {{break up the}} {{subtraction}} {{as a process of}} one <b>digit</b> subtractions by <b>place</b> value. Starting with a least significant digit, a subtraction of subtrahend: ...|$|R
5000|$|... #Caption: GTIN-12 number {{encoded in}} UPC-A barcode symbol. First and last <b>digit</b> are always <b>placed</b> outside the symbol to {{indicate}} Quiet Zones {{that are necessary}} for barcode scanners to work properly ...|$|R
5000|$|... 2 digits - Add the 2 <b>digits</b> {{together}} and <b>place</b> the {{result in the}} middle (so 47 x 11 becomes 4 (11) 7 or 4 (10+1) 7 or (4+1) 1 7 or 517).|$|R
40|$|Abstract — Phase locked loops (PLL) {{and delay}} locked loops (DLL) play an {{important}} role in establishing coherent references (phase of carrier and symbol timing) in digital communication systems. Fully digital receiver including digital carrier synchronizer and symbol timing synchronizer fulfils the conditions for universal multi-mode communication receiver with option of symbol rate setting over several <b>digit</b> <b>places</b> and long-term stability of requirement parameters. Afterwards it is necessary to realize PLL and DLL in synchronizer in digital form and to approach to these subsystems as a discrete representation of analog template. Analysis of discrete phase locked loop (DPLL) or discrete delay locked loop (DDLL) and technique to determine their characteristics based on analog (continuous-time) template is performed in this posed paper. There are derived transmission response and error function for 1 st order discrete locked loop and resulting equations and graphical representations for 2 nd order one. It is shown that the spectrum translation due to sampling takes effect at frequency characteristics computing for specific values of loop parameters. Keywords—Carrier synchronization, Coherent demodulation, Software defined receiver, Symbol timing...|$|R
5000|$|... #Caption: EAN-13 (GTIN-13) number {{encoded in}} EAN-13 barcode symbol. First <b>digit</b> is always <b>placed</b> outside the symbol, {{additionally}} right quiet zone indicator (>) {{is used to}} indicate Quiet Zones that are necessary for barcode scanners to work properly ...|$|R
50|$|Once the {{mappings}} {{of a pair}} of <b>digits</b> are in <b>place</b> {{a sequence}} of digits can be converted into a story by first encoding pairs of digits as people or actions and then chaining these people and actions together.|$|R
50|$|Postcodes {{are used}} in Australia to more {{efficiently}} sort and route mail within the postal system. All postcodes in Australia have four <b>digits</b> and are <b>placed</b> {{at the end of}} the Australian address. Australian postcodes are managed by Australia Post.|$|R
5000|$|... #Caption: GTIN-13 number {{encoded in}} EAN-13 barcode. The first <b>digit</b> is always <b>placed</b> outside the symbol; {{additionally}} a right [...] ">" [...] indicator {{is used to}} indicate a [...] "Quiet Zone" [...] that is necessary for barcode scanners to work properly.|$|R
30|$|In our experiments, we use six databases, namely Isolated Letter (ISOLET) [3], English Isolated <b>digits</b> [51], Vietnamese <b>Places</b> name [52], Vietnamese Digits, Tohoku University- Matsushita Isolated Word (TMW) [53], and Five Japanese Vowels of Males, Females, and Children Along with Relevant Physical Data (JVPD) [54].|$|R
50|$|The {{first four}} digits of the code, {{which is the}} first four levels of the {{classification}} system, are the same in all European countries. National implementations may introduce additional levels. The fifth digit might vary from country to country and further <b>digits</b> are sometimes <b>placed</b> by suppliers of databases.|$|R
50|$|In theory, an {{area code}} that covers two large but distant cities, such as Windsor, Ontario and London, Ontario in area code 519 (175 km apart), could be {{overlaid}} without breaking any seven-digit local calls if exchange prefixes are carefully assigned {{so that no}} two numbers with the last seven <b>digits</b> are <b>placed</b> in the same town's local calling area and if long distance calls require 1+area code before the number. In practice, this is never done; in one-town area codes, such as 212 (Manhattan), it is not possible.|$|R
50|$|As an illustration, the decimal {{quantity}} 12.345 can {{be expressed}} with various numbers of significant <b>digits</b> or decimal <b>places.</b> If insufficient precision is available then the number is rounded in some manner to fit the available precision. The following table shows the results for various total precisions and decimal places.|$|R
50|$|In the 3rd {{section of}} his book, Kushyar ibn Labban {{provided}} {{step by step}} algorithm for subtraction of 839 from 5625. Second row <b>digits</b> remained in <b>place</b> at all time. In rod calculus, digit from second row was removed digit by digit in calculation, leaving only the resultin one row.|$|R
