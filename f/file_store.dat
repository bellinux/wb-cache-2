62|1983|Public
25|$|As Git is a {{distributed}} {{version control}} system, {{it can be}} used as a server out of the box. Dedicated Git server software helps, amongst other features, to add access control, display the contents of a Git repository via the web, and help managing multiple repositories. Remote <b>file</b> <b>store</b> and shell access: A Git repository can be cloned to a shared file system, and accessed by other persons. It can also be accessed via remote shell just by having the Git software installed and allowing a user to log in.|$|E
50|$|User's {{also had}} access to a shared <b>file</b> <b>store.</b> Files in the shared <b>file</b> <b>store</b> were {{labelled}} {{and when they were}} opened by an application the application's window label was set to that of the file. The shared <b>file</b> <b>store</b> could not be written directly by an application. The user was able to copy files to the shared <b>file</b> <b>store</b> but they were required to confirm the action using a trusted path interface that was inaccessible to applications.|$|E
50|$|Tahoe Least-Authority <b>File</b> <b>Store</b> is an {{open source}} {{implementation}} of CAS.|$|E
5000|$|.....all data {{in storage}} but {{excludes}} any data that frequently traverses the network or that which resides in temporary memory. Data at rest includes {{but is not}} limited to archived data, data which is not accessed or changed frequently, <b>files</b> <b>stored</b> on hard drives, USB thumb drives, <b>files</b> <b>stored</b> on backup tape and disks, and also <b>files</b> <b>stored</b> off-site or on a storage area network (SAN)." ...|$|R
5000|$|If a <b>file</b> <b>stored</b> in {{the package}} is encrypted, the {{information}} required to decrypt the <b>file</b> is <b>stored</b> in the manifest.|$|R
50|$|Steinberg Cubase VST {{introduced}} two <b>file</b> formats for <b>storing</b> presets: an FXP <b>file</b> <b>stores</b> {{a single}} preset, while an FXB <b>file</b> <b>stores</b> a whole bank of presets. These formats {{have since been}} adopted by many other VST hosts, although Cubase itself switched to {{a new system of}} preset management with Cubase 4.0.|$|R
50|$|George 3 {{provided}} a tree structured <b>file</b> <b>store,</b> inspired {{in part by}} Multics.|$|E
50|$|The Wikia <b>file</b> <b>store</b> as of June 2011 {{includes}} over 8 million files {{stored on}} SSD.|$|E
5000|$|... a Content Addressable <b>File</b> <b>Store</b> (CAFS) {{that could}} be {{exploited}} by the VME file system and ICL 2900 IDMS; ...|$|E
5000|$|Sync <b>files</b> <b>stored</b> in {{corporate}} storage to user desktops and devices ...|$|R
5000|$|... {{destruction}} of <b>files</b> <b>stored</b> on servers and workstations with the KillDisk malware; ...|$|R
50|$|Mandatory password-protection and {{hardware-based}} 256-bit AES encryption for all <b>files</b> <b>stored</b> on the drive.|$|R
50|$|The 4ESS {{has three}} major {{components:}} the processor, the <b>file</b> <b>store,</b> which was later {{known as the}} attached processor system (4EAPS), and the peripheral units.|$|E
50|$|He {{is working}} on the Tahoe Least-Authority <b>File</b> <b>Store</b> (or Tahoe-LAFS), a secure, decentralized, {{fault-tolerant}} filesystem released under GPL and the TGPPL licenses. He is the creator of the Transitive Grace Period Public Licence (TGPPL).|$|E
50|$|In {{order to}} control the {{development}} of VME/B, each development was sub-divided for easier management. The structure was hierarchic, with each significant components of VME (kernel, <b>file</b> <b>store,</b> etc.)divided into sub-systems. Development activity on each sub-system created a sequence of versions.|$|E
5000|$|IO.SYS must be {{the first}} <b>file</b> <b>stored</b> in the FAT {{directory}} table for files.|$|R
50|$|NetWare 5 {{and above}} {{supported}} Novell NetStorage for Internet-based access to <b>files</b> <b>stored</b> within NetWare.|$|R
5000|$|Breaches of {{copyright}} by those downloading <b>files</b> <b>stored</b> without {{the permission of}} the copyright holders ...|$|R
5000|$|Technically, Nodezilla is a secured, {{distributed}} and fault-tolerant routing system (aka Grid network). Its {{main purpose}} is {{to serve as a}} link for distributed services built on top of it (like chat, efficient video multicasting streaming, file sharing, secured <b>file</b> <b>store</b> ...).|$|E
50|$|The Content Addressable <b>File</b> <b>Store</b> (CAFS) was a {{hardware}} device developed by International Computers Limited (ICL) {{that provided a}} disk storage with built-in search capability. The motivation for the device was {{the discrepancy between the}} high speed at which a disk could deliver data, and the much lower speed at which a general-purpose processor could filter the data looking for records that matched a search condition.|$|E
50|$|Most of the {{communication}} between the client and the server software uses network sockets, but files {{still need to be}} directly accessible by the client; an API for client-server file processing was much discussed but never completed. This meant that when separate client and server machines were used, the server's central <b>file</b> <b>store</b> had to be exported to all the client machines using NFS, which was a major bottleneck.|$|E
5000|$|Each {{line in a}} <b>file</b> <b>stored</b> in the Common Log Format has the {{following}} syntax: ...|$|R
5000|$|HOBDB online (creates a {{connection}} between the PC and VSAM <b>files</b> <b>stored</b> on the host) ...|$|R
5000|$|Protection of <b>files</b> <b>stored</b> and {{transferred}} by encryption, antivirus scanning, and DLP (data loss prevention) ...|$|R
50|$|The <b>file</b> <b>store</b> was two-level, files {{could be}} either {{currently}} on disk, or, {{if the system}} was low on disk space they would be archived to tape. If {{an attempt was made}} to access a currently off line file the job would be suspended and the operators requested to load the appropriate tape. When the tape was made available the file would be reloaded and the job resumed.|$|E
5000|$|George F. Coulouris is a British {{computer}} scientist {{and the son}} of actor George Coulouris. He is an emeritus professor of Queen Mary, University of London and is currently Visiting Professor in Residence at University of Cambridge Computer Laboratory. He is co-author (with Jean Dollimore) of a textbook on distributed systems. He was instrumental in the development of ICL's Content Addressable <b>File</b> <b>Store</b> (CAFS) and he developed em, the Unix editor, which inspired Bill Joy to write vi.|$|E
5000|$|Tahoe-LAFS (Tahoe Least-Authority <b>File</b> <b>Store</b> [...] ) is a {{free and}} open, secure, decentralized, fault-tolerant, {{distributed}} data store and distributed file system. It {{can be used as}} an online backup system, or to serve as a file or web host similar to Freenet, depending on the front-end used to insert and access files in the Tahoe system. Tahoe can also be used in a RAID-like fashion using multiple disks to make a single large RAIN pool of reliable data storage.|$|E
50|$|Storage was out-sourced to Amazon S3.Files {{stored in}} the Ubuntu One <b>file</b> <b>stores</b> were not encrypted.|$|R
5000|$|Media <b>files</b> <b>stored</b> {{on pages}} {{viewed in the}} browser show up as playable files in Nightingale ...|$|R
5000|$|Expanded {{support for}} Dropbox: Use Create PDF and Export PDF on <b>files</b> <b>stored</b> in Dropbox. (Subscription required.) ...|$|R
5000|$|Convergent encryption, {{also known}} as content hash keying, is a {{cryptosystem}} that produces identical ciphertext from identical plaintext files. This has applications in cloud computing to remove duplicate files from storage without the provider having access to the encryption keys. [...] The combination of deduplication and convergent encryption was described in a backup system patent filed by Stac Electronics in 1995. [...] This combination {{has been used by}} Farsite, Permabit, Freenet, MojoNation, GNUnet, flud, and the Tahoe Least-Authority <b>File</b> <b>Store.</b>|$|E
50|$|As Git is a {{distributed}} {{version control}} system, {{it can be}} used as a server out of the box. Dedicated Git server software helps, amongst other features, to add access control, display the contents of a Git repository via the web, and help managing multiple repositories. Remote <b>file</b> <b>store</b> and shell access: A Git repository can be cloned to a shared file system, and accessed by other persons. It can also be accessed via remote shell just by having the Git software installed and allowing a user to log in.|$|E
50|$|The Content Addressable <b>File</b> <b>Store</b> (CAFS) was a {{hardware}} device developed and sold by International Computers Limited (ICL) in the 1970s and 1980s that provided location-addressed disk storage with built-in search capability. The search logic {{was incorporated into}} the disk controller. A query expressed in a high-level query language could be compiled into a search specification that was then sent to the disk controller for execution. Files could also be accessed via the conventional location-addressing mechanism, permitting CAFS to support an IDMS CODASYL database and also support content addressing of the same records.|$|E
5000|$|Provides an {{organization}} system for audio <b>files</b> <b>stored</b> on the HDD and {{a means to}} play them ...|$|R
5000|$|... ownCloud Documents, a plugin for ownCloud, allows {{creation}} and collaborative editing of ODT <b>files</b> <b>stored</b> in ownCloud.|$|R
5000|$|Virtual File System shows <b>files</b> <b>stored</b> by G.ho.st Drive, Google Docs {{and others}} with a {{consistent}} explorer ...|$|R
