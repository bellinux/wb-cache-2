6|27|Public
5000|$|<b>Dump</b> (<b>program)</b> - UNIX utility for {{multilevel}} incremental {{file system}} backups.|$|E
50|$|In {{addition}} to loading an operating system or stand-alone utility, the boot process can also load a storage <b>dump</b> <b>program</b> for diagnosing problems in an operating system.|$|E
5000|$|The {{relatively}} new way: Using log streams. SMF utilizes System Logger to record collected data, which improves the writing rate and avoids buffer shortages. It has more flexibility, allowing the z/OS system to straightforwardly record to multiple log streams, and (using keywords on the <b>dump</b> <b>program)</b> allowing z/OS {{to read a}} set of SMF data once and write it many times.|$|E
40|$|This article {{examines}} Canada’s ammunition <b>dumping</b> <b>program</b> in the mid- 1940 s and pays {{special attention to}} the practical and technical dilemmas that influenced policy making and implementation. A pressing logistical crisis followed the end of the Second World War as crowded armaments depots ran out of storage space for leftover ordnance. In July 1945 a major explosion at the Bedford Magazine in Halifax Harbour heightened public safety concerns and influenced future disposal policies. From a range of imperfect destruction methods, dumping {{emerged as one of the}} most efficient alternatives; whenever possible conventional and chemical munitions were submerged. Although the quantities sunk by the Americans, British, and Russians dwarf the amount dumped by Canada, the Canadian <b>dumping</b> <b>program</b> was no less important to the nation’s postwar transition or without serious ramifications for Canadians and their coastal environments...|$|R
50|$|This data is then {{periodically}} dumped to sequential files (for example, tape drives) {{using the}} IFASMFDP SMF Dump Utility (or IFASMFDL when using log streams). IFASMFDP {{can also be}} used to split existing SMF sequential files and copy them to other files. The two <b>dump</b> <b>programs</b> produce the same output, so it does not involve changes in the SMF records elaboration chain, other than changing the JCL with the call of the new dump utility.|$|R
5000|$|... {{an on-line}} printer, used mainly for core <b>dumps</b> of failed <b>programs.</b>|$|R
5000|$|... '''''' is {{a command}} in DOS, OS/2 and Microsoft Windows (only in 32bit) {{which runs the}} program debug.exe (or DEBUG.COM in older {{versions}} of DOS). Debug can act as an assembler, disassembler, or hex <b>dump</b> <b>program</b> allowing users to interactively examine memory contents (in assembly language, hexadecimal or ASCII), make changes, and selectively execute COM, EXE and other file types. It also has several subcommands which are used to access specific disk sectors, I/O ports and memory addresses.|$|E
5000|$|In 2012, she participated as an artist-in-residence at San Francisco Recology's Art At The <b>Dump</b> <b>program,</b> {{and since}} 2013 {{has served on}} its board. During her time as artist-in-residence at Recology, Berlier {{obtained}} raw material for her work from the dump. Though not all of her materials are found objects, she said that, [...] "appropriated objects have had an ongoing presence in my work. The found object {{has had a long}} history in art and I had actually found myself moving away from it in projects prior to the Recology residency." ...|$|E
5000|$|In the CP/M 8 bit {{operating}} system used on early personal computers, the standard <b>DUMP</b> <b>program</b> would list a file 16 bytes per {{line with the}} hex offset {{at the start of}} the line and the ASCII equivalent of each byte at the end. [...] Bytes outside the standard range of printable ASCII characters (20 to 7E) would be displayed as a single period for visual alignment. This same format was used to display memory when invoking the D command in the standard CP/M debugger DDT. [...] Later incarnations of the format (e.g. in the DOS debugger DEBUG) changed the space between the 8th and 9th byte to a dash without changing the overall width.|$|E
5000|$|A sample partial hex <b>dump</b> of a <b>program,</b> as {{produced}} by the Unix program hexdump: ...|$|R
5000|$|In November 2012, RadioShack {{introduced}} Amazon Locker parcel pick-up {{services at}} its stores, only to <b>dump</b> the <b>program</b> in September 2013. In 2013 the chain made token attempts {{to regain the}} do it yourself market, including a new [...] "Do It Together" [...] slogan.|$|R
50|$|Also {{a normal}} <b>program</b> <b>dump,</b> where just one <b>program</b> was <b>dumped,</b> {{contains}} information on source-code sequence number and variable names.|$|R
50|$|HOTSPOTS was an {{instruction}} trace tool written {{to help identify}} performance problem areas in IBM's MFT operating system. Branch trace data was written to tape, then summarized. The report {{took the form of}} a listing similar to a storage <b>dump,</b> with <b>program</b> entry points and exit points identified, including frequency of use for each instruction sequence.|$|R
2500|$|On a little-endian system, the bytes {{are written}} {{from left to}} right in {{increasing}} significance, starting with the one's byte: 0Dh at +0, 0Ch at +1, 0Bh at +2, 0Ah at +3. Writing a 32-bit binary value to a memory location on a little-endian system and outputting the memory location (with growing addresses {{from left to right}}) shows that the order is reversed (byte-swapped) compared to usual big-endian notation. This is the way a hexdump is displayed: because the <b>dumping</b> <b>program</b> is unable to know what kind of data it is dumping, the only orientation it can observe is monotonically increasing addresses. The human reader, however, who knows {{that he or she is}} reading a hexdump of a little-endian system and who knows what kind of data he or she is reading, reads the byte sequence 0Dh,0Ch,0Bh,0Ah as the 32-bit binary value 168496141, or 0x0a0b0c0d in hexadecimal notation. (Of course, this is not the same as the number 0D0C0B0Ah = 0x0d0c0b0a = 218893066.) ...|$|R
40|$|Crab {{industry}} report [...] Chronicles of a Bayman [...] Special section : Baie Verte Peninsula [...] Editorial [...] Nfld. home crafts in Toronto [...] Fish recipes [...] Whales studied by scientist [...] She never stops [...] Power project prospects [...] <b>Dumping</b> <b>program</b> outlined [...] Natural dyes : {{how to make}} them [...] The last word. "Baie Verte Peninsula" (cover). [...] Frequency: irregular, vol. 1 - vol. 2, no. 3 (1968 - 73); bimonthly, vol. 2, no. 4 - vol. 22, no. 2 (1973 - 93); not published March-October 1982, May-July 1991. [...] Indexed in: Newfoundland Periodical Article Bibliography. The first publication entitled Decks Awash was a 1964 - 65 newsletter summarizing the content of the Memorial University Extension Service television program of the same name (1964 - 77). Between 1968 - 93 a new Decks Awash journal was published independent of the show, covering topics of interest to both fishermen and rural Newfoundlanders, including fisheries equipment and policy, agricultural development and community profiles. (Catherine F. Horan, "Decks Awash," Encyclopedia of Newfoundland and Labrador, vol. 1, 605. ...|$|R
5000|$|Exceptions such as {{division}} by zero or a segmentation violation {{will generate}} signals (here, SIGFPE [...] "floating point exception" [...] and SIGSEGV [...] "segmentation violation" [...] respectively, which both by default cause a core <b>dump</b> and a <b>program</b> exit).|$|R
40|$|Prior to {{embarking on}} a course of study leading to the Master of Environmental Studies degree I was {{employed}} by Esso Australia Ltd. (Esso) as an Environmental Engineer assigned to the Rundle project. One of the tasks that I undertook in this role was {{the establishment of the}} Rundle waste <b>dump</b> leachate <b>program.</b> I was involved in the project definition, construction and installation of the field research station, and with the ongoing modelling by the University of Queensland. As a result of my work with them Esso very kindly offered to make available, {{for the purposes of this}} thesis, information collected by the waste <b>dump</b> leachate <b>program.</b> Planning for this thesis commenced in July 1986. One objective was to fulfill the need of the Rundle waste <b>dump</b> leachate <b>program</b> for an investigation into the influence of vegetation on water movement and leachate generation. This had been identified as an area in need of work for some time prior to the start of this project. I have had an ongoing contact with the leachate program in the role of consultant to the project. Esso have also supported four site visits to Rundle to collect data for this thesis. A number of field studies are described in Chapter 4 of this thesis. Some studies were carried out by me especially for this thesis, other studies were carried out for the overall leachate program by myself or other workers. The soil moisture determinations described in Section 4. 1 were carried out by a local contractor. The measurements taken in the lysimeters were for the overall program. The other soil moisture determinations taken in study plots 3 to 7 were made specifically for this thesis. I determined the location of the access tubes, installed some of them (with considerable help from Esso and the local contractor) and defined the measuring program. The lysimeter study (Section 4. 2), was the key element in the waste <b>dump</b> leachate <b>program.</b> I was extensively involved with this program in my role as Environmental Engineer for Esso and very fortunate that I was able to use the information gained from the lysimeters in this thesis. The runoff determinations (Section 4. 3) were originally initiated by me as part of the leachate program with a view to incorporating the results into an assessment of water movement in the vegetated layers. Thus the information obtained from this study was not used until I commenced this thesis. The meteorological data (Section 4. 4) comprises a central element of the Rundle waste <b>dump</b> leachate <b>program.</b> One of my responsibilities, both as employee and as consultant to Esso has been the calibration and analysis of the Rundle meteorological data. Most of the information regarding material characteristics (Section 4. 5) was obtained from earlier rehabilitation studies. The detailed chemical analysis was carried out for the leachate program. I obtained Leaf Area Index information (Section 4. 6) and carried out the vegetation survey (Section 4. 7) to obtain data for the thesis. The four site visits which Esso very generously supported were primarily for collection of the Leaf Area Index information and to carry out a vegetation survey...|$|R
5000|$|Xetec's {{best selling}} product is its line of printer interfaces, {{which allows the}} use of many models of non-Commodore parallel-interface {{printers}} with Commodore computers. Some of the popular printers of that era that are supported include Canon, C-Itoh, Star Micronix, Epson, NEC, Okidata, and Panasonic. Early interface models (such as the [...] "Serial Printer Interface" [...] and [...] "Graphics Printer Interface") simply convert from Commodore's serial format to the more standard Centronics parallel interface, with only minimal ASCII conversions and graphic character printing. The Super Graphix Jr adds support for 50+ printers and [...] "Near Letter Quality", which is a technique of using multi-pass graphic printing to achieve higher quality text printing. The more sophisticated Super Graphix also adds an 8K data buffer, screen dump support, two user-loadable fonts (from a library of fonts on the included disk), and a font creation program. The Super Graphix Gold adds a 32K buffer, 4 fixed and 4 user-loadable fonts (from a library of fonts on disk), 10 font printing effects, picture printing, built-in screen <b>dump</b> <b>programs,</b> fast-serial support, and the rather unusual ability to interface a printer directly to a disk drive (for printing pictures and loading fonts directly from disk).|$|R
50|$|With the {{availability}} and reference to a compiler listing of the program together with a branch trace, the full path of executed instructions can be reconstructed. With a lot more effort, the full path can even be reconstructed with a memory <b>dump</b> (containing the <b>program</b> storage) and a branch trace.|$|R
50|$|Windows XP {{supports}} cross user session debugging, {{attaching the}} debugger to a non-crashing user-mode <b>program,</b> <b>dumping</b> the process memory space using the dump command, and then detaching the debugger without terminating it. Debugging {{can be done}} over a FireWire port and on a local system. The debug heap can be disabled and the standard heap be used when debugging.|$|R
5000|$|Initially, the Radio {{magazine}} distributed {{programs for}} the Radio-86RK {{in the form of}} hexadecimal dumps. After entering the <b>program</b> <b>dump</b> into the computer's memory, it could be saved to the tape. It was easy to make a mistake when typing in large dumps, so the magazine published checksums along with the dumps. It was necessary to execute [...] "O" [...] monitor directive to calculate the checksum.|$|R
40|$|Programmers spend {{considerable}} time debugging code. Several tools {{are available to}} help them in this task, varying from hexadecimal <b>dumps</b> of <b>program</b> state to window- and mouse-based interactive debuggers, but the task still remains complex and difficult. Most of these conventional debuggers provide breakpoints and traces as their main debugging aids. These features have changed little in the past 15 – 20 years desp}te the increased complexity of software systems on which debuggers are used. In this paper we present a prototype tool that enables users to follow their “natural ” thought process while debugging. It combines dynamic program slicing and execution backtracking techniques in a novel way. With the help of this powerful combination, program bugs may be localized and removed very quickly. Examples are given to show how our debugger may be used, and how it relates to other research in the area...|$|R
40|$|The {{program was}} {{designed}} to provide solutions of engineering accuracy for determining the aerodynamic loads on single- or multiple-lifting-surface configurations that represent vehicles in subsonic flight, e. g., wings, wing-tail, wing-canard, lifting bodies, etc. The preparation is described of the input data, associated input arrangement, and the output format for the program data, including specification of the various operational details of the program such as array sizes, tape numbers utilized, and <b>program</b> <b>dumps.</b> A full description of the underlying theory used in the program development and {{a review of the}} program qualification tests are included...|$|R
50|$|In 2000, Bradmark Communications {{was sold}} to Vox Media, then a growing owner of radio {{stations}} in small markets throughout New York and New England. Vox <b>dumped</b> all satellite <b>programming</b> and decided to take WNYQ to a Hot AC approach, initially keeping the Wink name. In early 2002, WNYQ rebranded as Q105.7 to fully signify the new format which had begun to lean towards CHR. Though successful, the station eventually began to decline due to heavy competition from new rival WKBE and several out-of-market CHR stations (including WFLY and WZRT) with usable signals in WNYQ's signal area.|$|R
40|$|The paper {{describes}} mathematical {{modeling and}} computation of thermal {{processes in the}} environment of mine dumps and industrial waste <b>dumps.</b> The developed <b>program</b> enables testing of various modeling methods and prediction of temperature field distribution and endogenous fires in mine dumps. It is possible to obtain enough information to design a mathematical model for spread prediction and possible dangerous endogenous fires from long time measurements of temperature fields below and above the surface. The present methodology is implemented in Matlab mathematical software environment, which enables the design of data files processing and implementation of algorithms for simulation of the temperature field in environment. Web of Science 197565...|$|R
40|$|Operating system facilities, {{such as the}} kernel {{and utility}} programs, {{are assumed to be}} reliable. Recent {{experience}} has led us to question the robustness of our operating system utility programs under unusual input streams. Specifically, we were interested in a basic form of testing: whether the utilities would crash or hang (infinite loop) in response to unusual input. We constructed a set of tools to test this form of reliability. Almost 90 utilities were tested on each of six versions of the UNIX operating system. Included in this list of systems was one that underwent commercial product testing. As a result of our tests, we were able to crash 24 - 33 % of the utilities that we tested, including commonly used utilities such as editors, shells and document formatters. These were programs that either terminated abnormally, generating a core <b>dump,</b> or <b>programs</b> that had infinite loops. 	We then examined each utility program that crashed and identified the cause. These results were then categorized by the cause of crash. We describe the cause of the crashes, the programming practices that led to the errors, and make some suggestions on how to avoid these problems in the future...|$|R
40|$|A 750 MeV {{electron}} beam test facility at Fermilab {{is in the}} planning and early construction phase. An existing building is being converted for this facility. The photoinjector currently in use at the Fermilab NICADD Photoinjector Laboratory (FNPL) will be moved to the new facility and upgraded {{to serve as an}} injector for a beam acceleration section consisting of three TTF or ILC-type RF cryomodules. A low energy off-axis beamline will be constructed to test ILC crab cavity designs and provide opportunities for other tests. Downstream beamlines will consist of a diagnostic section, a beam test area for additional beam experiments, and high power beam <b>dumps.</b> The initial <b>program</b> for this facility will concentrate on testing ILC-type cryomodules and RF control with full ILC beam intensity. A future building expansion will open up further possibilities for beam physics and beam technology experiments...|$|R
40|$|Dumping of wastes {{into the}} ocean {{has gone on for}} years {{especially}} in the New York Bight. The National Oceanic and Atmospheric Administration (NOAA) is mandated by Title II of the Ocean Dumping Act of 1972 to investigate the effects of ocean dumping on the marine environment. However, there is a perception within Congress, the public and other agencies that NOAA is not meeting it 2 ̆ 7 s responsibilities with regard to ocean dumping research. The effectiveness of NOAA 2 ̆ 7 s ocean <b>dumping</b> policies and <b>programs</b> and the difficulties in implementation experienced by the agency are evaluated by applying George Edwards 2 ̆ 7 theory of policy implementation. According to this theory, four factors - communications, resources, dispositions and bureaucratic structure - are critical in understanding the implementation process. In this case study, NOAA 2 ̆ 7 s present lack of participation in the ocean dumping issue can be analyzed by examining the historical events of the past twenty years as they apply to the policy implementation theory...|$|R
40|$|FLEX 1 is {{a general}} model processor, {{patterned}} after Klir's General Sequential System Paradigm (Figure 1). Specifically, the processor is a discrete time flux oriented realization of the general paradigm and can process non-linear, non-stationary, environmentally controlled state variable system models with explicit memory. The current version is restricted to not more than 63 state variables, 40 input variables, 200 memory variables, and 50 output variables. There are also restrictions {{on the number of}} functions identified, and other restrictions, which will be elaborated in the appropriate part of this writeup. The system is implemented in the Oregon State University OS- 3 operating system, is specific for the CDC 3300 computer, and may be operated only from a teletype. Output may be monitored at the teletype, line printed and <b>dump</b> filed. Satellite <b>programs</b> have been written for plotting and listing from the dump file. FLEX 1 is designed to be expanded in two directions. First will be further elaboration as a single level model processor concentrating all capacity into this single level. Second will be elaboration into a multi-level, hierarchical model processor (REFLEX), capable of mixed resolution. The two capacities are being incorporated into a single processor, FLEXZ, which is in the final stage of development at this printing, and will be operative in late 1973...|$|R
5000|$|In November 1961, Fernando J. Corbató {{demonstrated}} at MIT {{what was}} called the [...] "Experimental Time-Sharing System". On May 3, 1962, F. J. Corbató, M. M. Daggett and R. C. Daley published a paper about that system at the Spring Joint Computer Conference. Robert C. Daley, Peter R. Bos and at least 6 other programmers implemented the operating system, partly based on the Fortran Monitor System. The system used an IBM 709, modified by Herbert M. Teager, with added 3 Flexowriters for user consoles, and maybe a timer. Each of the 3 users had two tape units, one for the user's file directory, and one for <b>dumping</b> the core (<b>program</b> in memory). There was also one tape unit for the system commands, there were no disk drives. The memory was 27 k words (36-bit words) for users, and 5 k words for the supervisor (operating system). The input from the consoles was written to the buffers in the supervisor, by interrupts, and when a return character was received, the control was given to the supervisor, which dumped the running code to the tape and decided what to run next. The console commands implemented at the time were login, logout, input, edit, fap, mad, madtrn, load, use, start, skippm, listf, printf, xdump and xundump. This became the initial version of the Compatible Time-Sharing System. This was evidently the first ever demonstration of time-sharing; there are other claims, but about special-purpose systems or with no known papers published.|$|R
2500|$|McMahon {{remained}} insistent about Hart {{dropping the}} title. The WWF owner was anxious over Hart pulling a move {{like that of}} former employee Debrah Miceli. Miceli, a veteran women's wrestler who has competed under the name Madusa {{for most of her}} career, performed as Alundra Blayze in the WWF in 1993 and 1995 and won the Women's Championship during her stay there. McMahon, however, had neglected to renew her contract when it expired and Miceli signed with WCW where she changed her ring name back to Madusa. When she made her first appearance on WCW Monday Nitro, Madusa made fun of her time in the WWF and brought her title belt with her to the <b>program,</b> <b>dumping</b> it into a trash can. McMahon feared a repeat, despite claims from Bischoff (according to Hart's DVD biography) that legal issues between the WWF and WCW would prevent such a thing, and that he would rather have Hart join WCW with a [...] "clean slate". Hart continued to refuse to drop the title to Michaels, offering to lose the title anywhere in the United States prior to Survivor Series or to surrender the title to McMahon on the episode of Monday Night Raw the day after Survivor Series, in Ottawa. After several disagreements, McMahon, Michaels and Hart agreed to a proposal of a disqualification finish, which would be the result of a brawl between Hart's allies Owen Hart, Jim Neidhart, and Davey Boy Smith with Michaels's allies Triple H and Chyna, who would interfere in the match to aid Michaels. Hart would then lose or forfeit the title at a later date, as he was not due to start in WCW until December. Hart also asked for and obtained McMahon's permission for an opportunity to explain his actions, his heel character, praise McMahon and the WWF and thus leave on good terms with the company and the fans.|$|R

