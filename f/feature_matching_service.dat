0|7348|Public
40|$|International audienceWe {{present a}} video {{analysis}} and indexing engine, that can perform fully automatic scene segmentation and feature extraction, {{in the context}} of a television archive. A template-based indexing engine is proposed, which interacts with a general-purpose video analysis server (providing spatio-temporal segmentation, feature extraction, feature clustering and <b>feature</b> <b>matching</b> <b>services)</b> and a template server (which provides tool settings, scripts and interpretation rules for specific program) ...|$|R
40|$|Abstract — An {{efficient}} <b>feature</b> <b>matching</b> architecture targets at {{real-time video}} stabilization {{is revealed in}} this paper. For some applications, such as vehicular application, real-time video stabilization is needed to provide instant stable video input. However, <b>feature</b> <b>matching</b> is usually the bottleneck to achieve high performance. High speed <b>feature</b> <b>matching</b> architecture is proposed to accelerate the performance of video stabilization. Locality sensitive hashing (LSH) helps us realize the <b>feature</b> <b>matching</b> procedure in hardware implementation. By applying the proposed dynamic table allocation and on-chip cache mechanism, this work achieves 422 K queries/s and real-time <b>feature</b> <b>matching</b> with 90 % in memory reduction and more than 50 % in relieving the feature bus burden of the system. I...|$|R
30|$|In some cases, {{where there}} are many similar many similar {{features}} in one image, ASIFT algorithm may still have the wrong <b>feature</b> <b>matching.</b> Hence, we use a simple concept to filter the wrong <b>feature</b> <b>matching</b> via slope. For example, assume that we find the A frame and B frame have the same feature in Y axis and distance is 10 pixels. In subsequent frames, we find the C frame also have the same feature with A frame and B frame, but the feature point is in Y axis, distance is 5 pixels and 5 pixels in X axis. In this way, the concept of fixed displacement cannot use to filter wrong <b>feature</b> <b>matching.</b> Therefore, we use the slope S in all coordinates of <b>feature</b> <b>matching,</b> because we obtained video in same scene and same moving direction of photography, {{so most of the}} same <b>feature</b> <b>matching</b> will be same corresponding between two frames and have most same slope in <b>feature</b> <b>matching.</b> Through the slope concept, we can filter wrong <b>feature</b> <b>matching</b> between two frames, and to reserve the true <b>feature</b> <b>matching</b> information. At the same time, we can reduce the processing time in compute calibration parameters matrix. Steps of slope concept are in the following algorithm.|$|R
5000|$|Travel Companion Exchange (TCE) was {{a travel}} {{companion}} <b>matching</b> <b>service</b> established by Jens Jurgen in 1982. As the first general interest travel companion <b>matching</b> <b>service</b> in existence, {{it became the}} forerunner of many similar services and helped pioneer and legitimize the field of singles <b>matching</b> <b>services</b> in general. It was the largest [...] and most successful of its type at the time.|$|R
50|$|The Canadian Resident <b>Matching</b> <b>Service</b> (CaRMS) is a {{national}} organization that provides the mandatory <b>matching</b> <b>service</b> for medical training throughout Canada. CaRMS also provides an online application portal for admission to the undergraduate medical program at Memorial University of Newfoundland.|$|R
40|$|AbstractThis paper {{introduces}} a novel <b>feature</b> <b>matching</b> algorithm using both Image interpolating method and edge detecting method to make <b>feature</b> <b>matching</b> more precise. The proposed <b>feature</b> <b>matching</b> {{is composed of}} four elements: inputting data, interpolating method, <b>features</b> extracting and <b>matching.</b> At first, the tasks in human anatomy and the method to input slices data are introduced. Secondly, we propose a novel slices matching using image interpolating method and edge detecting method. Experimental results demonstrate that the proposed approach owns the properties both quickly and exactly...|$|R
40|$|International audienceSmart {{cameras are}} image/video {{acquisition}} devices that integrate image processing algorithms {{close to the}} image sensor, so they can deliver high-level information to a host computer or high-level decision process. In this context, a central issue is the implementation of complex and computationally intensive computer vision algorithms inside the camera fabric. For low-level processing, FPGA devices are excellent candidates because they support data paral-lelism with high data throughput. One computer vision algorithm highly promising for FPGA-based smart cameras is <b>feature</b> <b>matching.</b> Unfortunately, most previous <b>feature</b> <b>matching</b> formulations have inefficient FPGA implementations or deliver relatively poor information about the observed scene. In this work, we introduce a new feature-matching algorithm that aims for dense <b>feature</b> <b>matching</b> {{and at the same}} time straightforward FPGA implementation. We propose a new mathematical formulation that addressed the <b>feature</b> <b>matching</b> task as a feature tracking problem. We demonstrate that our algorithmic formulation delivers robust <b>feature</b> <b>matching</b> with low mathematical complexity and obtains accuracy superior to previous algorithmic formulations. An FPGA architecture is lay down and, hardware acceleration strategies are discussed. Finally, we applied our <b>feature</b> <b>matching</b> algorithm in a monocular-SLAM system. We show that our algorithmic formulation provides promising results under real world applications...|$|R
40|$|For {{the problem}} of image registration, the top few {{reliable}} correspondences are often relatively easy to obtain, while the overall matching accuracy may fall drastically as the desired correspondence number increases. In this paper, we present an efficient <b>feature</b> <b>matching</b> algorithm to employ sparse reliable correspondence priors for piloting the <b>feature</b> <b>matching</b> process. First, the feature geometric relationship within individual image is encoded as a spatial graph, and the pairwise feature similarity is expressed as a bipartite similarity graph between two feature sets; then the geometric neighborhood of the pairwise assignment is represented by a categorical product graph, along which the reliable correspondences are propagated; and finally a closed-form solution for <b>feature</b> <b>matching</b> is deduced by ensuring the feature geometric coherency as well as pairwise feature agreements. Furthermore, our algorithm is naturally applicable for incorporating manual correspondence priors for semi-supervised <b>feature</b> <b>matching.</b> Extensive experiments on both toy examples and real-world applications demonstrate the superiority of our algorithm over the state-of-the-art <b>feature</b> <b>matching</b> techniques...|$|R
40|$|Abstract—Methods {{for wild}} pig identifications and {{discrimination}} of female wild pigs based on <b>feature</b> <b>matching</b> methods with acquired Near Infrared: NIR moving pictures are proposed. Trials and errors are repeated for identifying wild pigs and for discrimination of female wild pigs through experiments. As a conclusion, <b>feature</b> <b>matching</b> methods with the target nipple features show a better performance. <b>Feature</b> <b>matching</b> method of FLANN shows {{the best performance}} in terms of feature extraction and tracking capabilities. Keywords—OpenCV; Canny filter; Template matching; Feature matchin...|$|R
3000|$|... is the {{truncation}} threshold {{which is}} used to make <b>feature</b> <b>matching</b> cost more robust against outliers and NL is the number of layers in the network. These multiple layers <b>feature</b> <b>matching</b> technique highly constrains the solution space and hence results in unambiguous and accurate disparities.|$|R
5000|$|TrialConnect, a free {{clinical}} trial <b>matching</b> <b>service</b> (http://www.abtatrialconnect.org).|$|R
50|$|Oneflare <b>matches</b> <b>service</b> {{requests}} with competitive {{quotes from}} experts.|$|R
40|$|Abstract. Outlier-free inter-frame <b>feature</b> <b>matches</b> are {{important}} to accurate epipolar geometry estimation for many vision and robotics applications. We discover a set of high-level geometric and appearance constraints on low-level <b>feature</b> <b>matches</b> by exploiting reliable region matching results. A new outlier filtering scheme based on these constraints is proposed that can be combined with traditional robust statistical methods to identify outlier <b>feature</b> <b>matches</b> more reliably and efficiently. The proposed filtering scheme is tested in an real application of outdoor mobile robot navigation based on far-field scenes and of scenes that contain repeated structures. ...|$|R
40|$|In this thesis, we {{will study}} {{different}} ways to improve <b>feature</b> <b>matching</b> by increasing the quality and {{reducing the number of}} SIFT features. We created an algorithm to identify robust SIFT features by evaluating how invariant individual feature points are to changes in scale. This allows us to exclude poor SIFT feature points from the matching process and obtain better matching results in reduced time. We also developed techniques consider scale ratios and changes in object orientation when performing <b>feature</b> <b>matching.</b> This allows us to exclude false-positive <b>feature</b> <b>matches</b> and obtain better image alignment results...|$|R
40|$|This paper {{proposes a}} {{constrained}} alternating optimization framework {{to tackle the}} <b>feature</b> <b>matching</b> problem with partial matching and multiple matching. We model the difference between pairing features {{as the result of}} a transformation followed an uncertainty distribution. Based on this modeling, transformation estimation and <b>feature</b> <b>matching</b> are performed alternately from initial matching: the transformation is updated according to the matching, and the matching is updated according to the transformation and the uncertainty distribution. A pruning operation is further presented to reduce the search space of initial matching. In the proposed framework, we develop a B-spline curve <b>feature</b> <b>matching</b> algorithm for hand-gesture based text input, and a line <b>feature</b> <b>matching</b> algorithm which is tested for three applications: model-based recognition, image registration, and stereo matching. The experimental results for two algorithms are reported...|$|R
40|$|Abstract—For {{the problem}} of image registration, the top few {{reliable}} correspondences are often relatively easy to obtain, while the overall matching accuracy may fall drastically as the desired correspondence number increases. In this paper, we present an efficient <b>feature</b> <b>matching</b> algorithm to employ sparse reliable correspondence priors for piloting the <b>feature</b> <b>matching</b> process. First, the feature geometric relationship within individual image is encoded as a spatial graph, and the pairwise feature simi-larity is expressed as a bipartite similarity graph between two feature sets; then the geometric neighborhood of the pairwise assignment is represented by a categorical product graph, along which the reliable correspondences are propagated; and finally a closed-form solution for <b>feature</b> <b>matching</b> is deduced by ensuring the feature geometric coherency as well as pairwise feature agree-ments. Furthermore, our algorithm is naturally applicable for incorporating manual correspondence priors for semi-supervised <b>feature</b> <b>matching.</b> Extensive experiments on both toy examples and real-world applications demonstrate the superiority of our algorithm over the state-of-the-art <b>feature</b> <b>matching</b> techniques. Index Terms—Feature matching, weak prior, image registration, object correspondence, propagation. I...|$|R
40|$|Abstract—In this paper, {{we propose}} a {{graphics}} processing unit (GPU) based matching technique to perform fast <b>feature</b> <b>matching</b> between different images. Lowe proposed a scale invariant feature transform algorithm that has been successfully used in various <b>feature</b> <b>matching</b> applications such as stereo vision, object recognition, and many others, but this algorithm is computationally intensive. In order to solve this problem, we propose a matching technique optimized for {{graphics processing unit}}s to perform computation with less time. We have applied GPU optimization for the fast computation of keypoints to make our system fast and efficient. The proposed method used self-organizing map <b>feature</b> <b>matching</b> technique to perform efficient matching between different images. The experiments are performed on various images to examine {{the performance of the}} system in diverse conditions such as image rotation, scaling, and blurring conditions. The experimental results reveal that the proposed algorithm outperforms the existing <b>feature</b> <b>matching</b> methods resulting into fast <b>feature</b> <b>matching</b> with the optimization of graphics processing unit. Index Terms—Feature matching, stereo vision, self-organizing map, graphics processing unit I...|$|R
40|$|<b>Feature</b> <b>matching</b> is a key, {{underlying}} {{component in}} many approaches to object detection, localization, and recognition. In many cases, <b>feature</b> <b>matching</b> {{is accomplished by}} nearest neighbor methods on extracted feature descriptors. This methodology works well for clean, out-ofwater images; however, when imaging underwater, even {{an image of the}} same object can be drastically different due to varying water conditions. As a result, descriptors of the same point on an object may be completely different between the clean and underwater images, and between different underwater images taken under varying imaging conditions. This makes <b>feature</b> <b>matching</b> between such images a very challenging problem. In this paper, we present a new method for <b>feature</b> <b>matching</b> by first synthetically constructing a feature codebook for all template features by simulating different underwater imaging conditions. We then approximate the target feature by a sparse linear combination of the features in the constructed codebook. The optimal sparse linear combination is found by compressive sensing algorithms. In the experiments, we show that the proposed method can produce better <b>feature</b> <b>matching</b> performance than the nearest neighbor approach and associated naïve extensions. 1...|$|R
5000|$|... • Business <b>Matching</b> <b>Service</b> between Korean {{supplier}} {{and international}} buyers ...|$|R
5000|$|Vampire Chronicle for <b>Matching</b> <b>Service</b> (2000) - with Yuko Takehara ...|$|R
5000|$|NSD Launches Electronic <b>Matching</b> <b>Service</b> // GLOBAL CUSTODIAN, 20 November 2014 ...|$|R
5000|$|Automated <b>feature</b> <b>matching</b> by Onur Kucuktunc, mentored by Alexandre Jenny ...|$|R
40|$|For {{geostationary}} {{meteorological satellite}} (GSMS) remote sensing image registration, high computational cost and matching error are the two main challenging problems. To address these issues, this paper proposes a novel algorithm named slope-restricted multi-scale <b>feature</b> <b>matching.</b> In multi-scale <b>feature</b> <b>matching,</b> images are subsampled to different scales. From a small scale to a large scale, the offsets between the matched pairs are used to narrow the searching area of <b>feature</b> <b>matching</b> for the next larger scale. Thus, the <b>feature</b> <b>matching</b> is accomplished from coarse to fine, which will make the matching process more accurate and reduce errors. To enhance the matching performance, the outliers in the matched pairs are rectified by using slope-restricted rectification, {{which is based on}} local geometric similarity. Compared with other algorithms, the experimental results show that our proposed method is more accurate and efficient...|$|R
40|$|Abstract- A novel <b>feature</b> <b>matching</b> {{algorithm}} for {{image registration}} is proposed in this paper. The accuracy of a registration process is {{highly dependent on}} the <b>feature</b> detection and <b>matching.</b> In this paper, we use a SUSAN (Smallest Univalue Segment Assimilating Nucleus) algorithm to detect features, {{which is one of}} the most excellent methods, robust to noise and less affected by rotation. One common approach used for <b>feature</b> <b>matching</b> is correlation between feature points. But in this method much computational time is required to establish the correspondences. In this paper, we overcome this difficulty through our speed-up approach. The basic concept of our approach is to calculate the descriptor values for every feature point which are then stored. These values will finally be used for <b>feature</b> <b>matching.</b> This reduces the number of operations in <b>feature</b> <b>matching</b> step and thus speed-up in matching is obtained. After matching, RANSAC method is used to find the registration transform parameters...|$|R
40|$|Abstract—As a {{first step}} to the {{instance}} search task, we employed several existing image retrieval methods in combination (local <b>feature</b> <b>matching,</b> region <b>matching,</b> and global <b>feature</b> <b>matching),</b> according to the type and property of query images. The best run in this approach was ranked 23 rd of 42 as regards the average precision result...|$|R
40|$|We {{develop a}} new {{automatic}} Object of Interest detection method for image trimming and a novel tracking technique in active videos. Both applications consist of salient region detection and <b>feature</b> <b>matching.</b> We deploy a color-saliency weighted Probability-of-Boundary (cPoB) map to detect salient regions. Scale Space Image Pyramid (SSIP) <b>feature</b> <b>matching</b> is proposed for image trimming. An image pyramid is created to imitate the view point change for stable keypoint selection. Successive Classification Maximum Similarities (SCMS) <b>feature</b> <b>matching</b> is used for tracking. A strong classifier trained by AdaBoost is utilized for keypoint classification and subsequent Linear Programming rejects outliers. The object-centered property of Active Video is highly beneficial because it captures the essence of Human Visual Attention and facilitates self-initialization in tracking. Experiments demonstrate the importance of saliency detection and <b>feature</b> <b>matching</b> and confirm that our approach can automatically detect salient regions in images and track reliably in videos...|$|R
40|$|Abstract. SIFT <b>feature</b> <b>matching</b> {{algorithm}} is {{hot in the}} field of the currently <b>feature</b> <b>matching</b> research, its matching with the strong ability can deal with the translation, rotation, affine transformation occurring between images, and it also have a stable image <b>feature</b> <b>matching</b> ability to the images filmed at any angle. SIFT {{algorithm is}} adopted in this paper, <b>matching</b> <b>feature</b> point through the scale space, calculating the histogram of detecting feature point neighborhood of gradient direction characteristic vector and generation to SIFT eigenvector and the key points similarity measure. From different setting threshold, scale scaling, rotating, noise on the experiment, the experiment result proves this algorithm in the above aspects has good robustness, suitable for mass characteristic database of rapid, accurate matching...|$|R
5000|$|Several {{businesses}} offer <b>matching</b> <b>services</b> between established {{companies and}} scaleups, such as:RocketX: RocketSpace’s Corporate Innovation Program ...|$|R
50|$|LegalMatch is {{a private}} U.S. {{corporation}} established in 1999 as a free, online legal <b>matching</b> <b>service</b> to help people find prescreened local lawyers, and to help attorneys get leads matching their legal specialty. LegalMatch operates its legal <b>matching</b> <b>service</b> in all 50 United States. LegalMatch is based in San Francisco, CA and has additional offices in Austin, TX, Las Vegas, NV, and Reno, NV.|$|R
30|$|Resource {{matching}} researches [15 – 20] currently {{focus on}} the web <b>service</b> <b>matching,</b> including syntax <b>service</b> <b>matching</b> [21] and semantic <b>service</b> <b>matching</b> [22]. The former [23] do exact keyword matching by registration information including the name and valid property values of the service in the service library, while the latter is based on semantic web technology. With the combination of ontology repository, <b>matching</b> <b>service</b> and authentication service, the latter can determine the matching degree between the request and service ability [24].|$|R
5000|$|... #Caption: Most kitchen {{cabinets}} <b>feature</b> <b>matching</b> tops and bottoms {{and are available}} in different styles.|$|R
3000|$|..., through <b>feature</b> <b>matching.</b> Assume {{linearity}} {{of motion}} and compute the homography between consecutive colour channels, [...]...|$|R
40|$|In {{this paper}} {{we present a}} robust method for {{automatically}} <b>matching</b> <b>features</b> in images corresponding to the same physical point on an object seen from two arbitrary viewpoints. Unlike conventional stereo matching approaches we assume no prior knowledge about the relative camera positions and orientations. In fact in our application this is the information we wish to determine from the image <b>feature</b> <b>matches.</b> <b>Features</b> are detected in two or more images and characterised using affine texture invariants. The problem of window effects is explicitly addressed by our method - our feature characterisation is invariant to linear transformations of the image data including rotation, stretch and skew. The <b>feature</b> <b>matching</b> process is optimised for a structure-from-motion application where we wish to ignore unreliable matches {{at the expense of}} reducing the number of <b>feature</b> <b>matches...</b>|$|R
40|$|This paper {{presents}} a probability-based multi-measure <b>feature</b> <b>matching</b> method in map conflation. <b>Feature</b> <b>matching</b> {{is used to}} determine the corresponding features in different datasets that represent analogous entities in the real world. In the proposed method, a total matching probability is computed by the weighted average of multiple measures, including positional measure, shape measure, directional measure and topological measure. The matching strategies for point features, linear features and areal features are also provided. The proposed method is implemented in a prototype for <b>matching</b> <b>features</b> from two different data sources, and is compared with traditional methods. The results demonstrate not only the practicability of using the proposed method to resolve <b>feature</b> <b>matching</b> issues in map conflation, but also its advantages compared with traditional methods in terms of matching effects. Department of Land Surveying and Geo-Informatic...|$|R
30|$|Choosing {{different}} features, {{according to}} {{the characteristics of the}} target, is selecting the best <b>feature</b> <b>matching</b> scheme.|$|R
50|$|Early games <b>featured</b> <b>match</b> races {{between two}} or three boats (in 1952, between four or five boats).|$|R
