55|0|Public
5000|$|<b>Fail-operational</b> — {{typically}} {{required to}} operate {{not only in}} nominal conditions (expected), but also in degraded situations when some parts are not working properly. For example, airplanes are <b>fail-operational</b> because they {{must be able to}} fly even if some components fail.|$|E
5000|$|<b>Fail-operational</b> systems {{continue}} to operate when their control systems fail. Examples of these include elevators, the gas thermostats in most home furnaces, and passively safe nuclear reactors. <b>Fail-operational</b> mode is sometimes unsafe. Nuclear weapons launch-on-loss-of-communications was rejected as a control system for the U.S. nuclear forces because it is fail-operational: a loss of communications would cause launch, so this mode of operation was considered too risky. This is contrasted with the Fail-deadly behavior of the Perimeter system built during the Soviet era.|$|E
50|$|<b>Fail-operational</b> autopilot: {{in case of}} {{a failure}} below alert height, the approach, flare and landing can still be {{completed}} automatically. It is usually a triple-channel system or dual-dual system.|$|E
5000|$|A {{critical}} system is distinguished by the consequences associated with system or function failure. Likewise, {{critical system}}s are further distinguished between <b>fail-operational</b> and fail safe systems, {{according to the}} tolerance they must exhibit to failures: ...|$|E
50|$|CAT IIIb - As IIIa {{but with}} the {{addition}} of automatic roll out after touchdown incorporated with the pilot taking control some distance along the runway. This category permits pilots to land with a decision height less than 50 feet or no decision height and a forward visibility of 250 ft (76 m, compare this to aircraft size, some of which are now over 70 m long) or 300 ft (91 m) in the United States. For a landing-without-decision aid, a <b>fail-operational</b> autopilot is needed. For this category some form of runway guidance system is needed: at least fail-passive but it needs to be <b>fail-operational</b> for landing without decision height or for RVR below 100 m.|$|E
5000|$|In each case, a {{suitably}} equipped {{aircraft and}} appropriately qualified crew are required. For example, CAT IIIb requires a <b>fail-operational</b> system, {{along with a}} crew who are qualified and current, while CAT I does not. A HUD which allows the pilot to perform aircraft maneuvers rather than an automatic system is considered as <b>fail-operational.</b> A HUD allows the flight crew to fly the aircraft using the guidance cues from the ILS sensors such that if a safe landing is in doubt, the crew can respond in an appropriate and timely manner. HUD is becoming increasingly popular with [...] "feeder" [...] airlines and most manufacturers of regional jets are now offering HUDs as either standard or optional equipment. A HUD can provide capability to take off in low visibility.|$|E
40|$|In today’s cyber {{physical}} systems, adaptability concepts {{can be used}} {{to fulfill}} <b>fail-operational</b> requirements while enabling optimized resource utilization. However, the applicability of such concepts highly depends on the support for the engineering during system development. We propose an approach to cope with the challenges of <b>fail-operational</b> behavior of CPS in which engineers are supported by design concepts for realizing safety, reliability, and adaptability requirements through the use of architectural patterns. The approach allows expressing concepts for <b>fail-operational</b> behavior at the software architecture level. By our approach, the effort for developing adaptive CPS can be kept low by utilizing <b>fail-operational</b> architectural patterns for general and reoccurring safety-relevant mechanisms. This is demonstrated by an application to an automotive case system...|$|E
40|$|In domains like automotive, safety-critical {{features}} are increasingly realized by software. Some features might even require <b>fail-operational</b> behavior, {{so that they}} must be provided even in the presence of random hardware failures. A new fault-tolerant SW/HW architecture for electric vehicles provides inherent safety capabilities that enable <b>fail-operational</b> features. In this paper we introduce a formal model of this architecture and an approach to calculate valid deployments of mixed-critical software-components to the execution nodes, while ensuring <b>fail-operational</b> behavior of certain components. Calculated redeployments cover the cases in which faulty execution nodes have to be isolated. This allows to formally analyze which set of features can be provided under decreasing available execution resources. Comment: EDCC- 2014, EDSoS- 2014, Fault-Tolerance, <b>Fail-Operational,</b> Deploymen...|$|E
40|$|Increased {{reliance}} on software in safety-critical systems Effective strategies {{in place for}} some application domains – Aviation: – Rail: • <b>Fail-operational</b> with triple modular redundancy • Fail-stop with two-of-two systems • <b>Fail-operational</b> with dual two-of-two systems Can we apply these techniques to new application domains and achieve the same results? Which techniques should we choose? – For example, should we build x-by-wire cars like fly-by-wire planes...|$|E
40|$|Abstract—In domains like automotive, safety-critical {{features}} are increasingly realized by software. Some features might even require <b>fail-operational</b> behavior, {{so that they}} must be provided even in the presence of random hardware failures. A new fault-tolerant SW/HW architecture for electric vehicles provides inherent safety capabilities that enable <b>fail-operational</b> features. In this paper, we introduce a formal model of this architecture and an approach to calculate valid deployments of mixed-critical software-components to the execution nodes, while ensuring <b>fail-operational</b> behavior of certain components. Calculated redeploy-ments cover the cases in which faulty execution nodes have to be isolated. This allows to formally analyze which set of features can be provided under decreasing available execution resources. Keywords—Fault-Tolerance; Fail-Operational; Deployment; I...|$|E
40|$|This paper {{presents}} a proposed on-board Telescope Protection Algorithm (TPA) for the Space Infrared Telescope Facility (SIRTF). This TPA consists of {{hardware and software}} capable of performing both <b>fail-operational</b> and fail-safe modes of operation. In the <b>fail-operational</b> mode, each ephemeris load and slew/dwell command sequence is checked on-board before use. The slew command monitor detects unallowable slew/dwell commands and transfers control to an algorithm which slews to and maintains a safe telescope orientation while preserving precise attitude determination and control. This <b>fail-operational</b> mode is also given the authority to autonomously restart the slew/dwell sequence at a point beyond the faulty command. The fail-safe system consists of software and hardware which detects impending earth, moon, or sun avoidance zone violations and activates a backup hardware safe hold mode. The subject TPA and relevant sensor complement were designed for the SIRTF mission; however, this system can easily {{be used as a}} basis for failure detection and correction {{in a wide range of}} other missions...|$|E
40|$|A {{computer}} system is reported that uses adaptive voting to tolerate failures and operates in a <b>fail-operational,</b> fail-safe manner. Each of four computers is individually connected {{to one of}} four external input/output (I/O) busses which interface with external subsystems. Each computer is connected to receive input data and commands from the other three computers and to furnish output data commands to the other three computers. An adaptive control apparatus including a voter-comparator-switch (VCS) is provided for each computer to receive signals {{from each of the}} computers and permits adaptive voting among the computers to permit the <b>fail-operational,</b> fail-safe operation...|$|E
40|$|The {{presentation}} explains {{challenges and}} solutions for future adaptive e/e-architectures, generic enhanced software-driven dependability and flexibility for future vehicles, methods and architectures for <b>fail-operational</b> in-vehicle safety {{as well as}} a supplier independent solution through exploitation of AUTOSAR standard allowing for incorporating heterogeneous platforms...|$|E
40|$|A self-learning, sensor <b>fail-operational,</b> {{control system}} for the TF 30 -P- 3 {{afterburning}} turbofan engine was designed and evaluated. The sensor <b>fail-operational</b> control system includes a digital computer program designed to operate {{in conjunction with the}} standard TF 30 -P- 3 bill-of-materials control. Four engine measurements and two compressor face measurements are tested. If any engine measurements are found to have failed, they are replaced by values synthesized from computer-stored information. The control system was evaluated by using a realtime, nonlinear, hybrid computer engine simulation at sea level static condition, at a typical cruise condition, and at several extreme flight conditions. Results indicate that the addition of such a system can improve the reliability of an engine digital control system...|$|E
40|$|Abstract. In many {{embedded}} systems {{like in the}} automotive domain, safety-critical features are increasingly realized by software. Some of these features are often required to behave <b>fail-operational,</b> meaning that they must stay alive even {{in the presence of}} random hardware failures. We propose a new fault-tolerant SW/HW architecture for electric ve-hicles with inherent safety capabilities that enable <b>fail-operational</b> fea-tures. In this paper, we introduce a constraint-based approach to calculate valid deployments of mixed-critical software components to the execution nodes. To avoid harm, faulty execution nodes have to be isolated from the remaining system. We treat the isolations of execution nodes and the re-quired changes to the deployment to keep those software components alive that realize <b>fail-operational</b> features. The affected software components have to be resumed on intact execution nodes. However, the remaining system resources may become insufficient to execute the full set of soft-ware components after an isolation of an execution node. Hence, some components might have to be deactivated, meaning that features might get lost. Our approach allows to formally analyze which subset of features can still be provided after one or more isolations. We present an arith-metic system model with formal constraints of the deployment-problem that can be solved by a SMT-Solver. We evaluate our approach by show-ing an example problem and its solution...|$|E
40|$|To {{deal with}} <b>fail-operational</b> (FO) {{requirements}} intoday’s safety-critical {{networked embedded systems}} (SCNES), engineers {{have to resort to}} concepts such as redundancy, monitoring, and special shutdown procedures. Hardware-based redundancy approaches are not applicable to many embedded systems domains (e. g., automotive systems), because of prohibitive costs. In this scenario, adaptability concepts can be used to fulfill these FO requirements while enabling optimized resource utilization. However, the applicability of such concepts highly depends on the support for the engineering during system development. We propose an approach to cope with the challenges of <b>fail-operational</b> behavior of SCNES in which engineers are supported by design concepts for realizing safety, reliability, and adaptability requirements through the use of architectural patterns. The approach allows expressing FO concepts at the software architecture level. This lowers the effort for developing SCNES by utilizing generic patterns for genera land reoccurring mechanisms...|$|E
40|$|The {{presentation}} {{focuses on}} designing <b>fail-operational</b> control systems in a cost-efficient manner. Hereby, special emphasis is {{laid on the}} implementation of a generic service for managing redundancy, graceful degradation, and availability in the context of AUTOSAR. Further, the applicability and benefits of this solution are illustrated {{in the context of a}} vehicle’s electronic steering system...|$|E
40|$|Truck {{platooning}} {{for which}} multiple trucks follow at {{a short distance}} is considered a near-Term truck automation opportunity, {{with the potential to}} reduce fuel consumption. Short following distances and increasing automation make it hard for a driver to be the backup if the system fails. The EcoTwin consortium successfully demonstrated a two truck platooning system with trucks following at 20 meters distance at the public road, in which the driver is the backup. The ambition of the consortium is to increase the truck automation and to reduce the following distance, which requires a new <b>fail-operational</b> truck platooning architecture. This paper presents a level 2 + platooning system architecture, which is <b>fail-operational</b> for a single failure, and the corresponding process to obtain it. First insights in the existing two truck platooning system are obtained by analyzing its key aspects, being utilization, latency, reliability, and safety. Using these insights, candidate level 2 + platooning system architectures are defined from which the most suitable truck platooning architecture is selected. Future work is the design and implementation of a prototype, based on the presented level 2 + platooning system architecture...|$|E
40|$|More {{and more}} driver {{assistance}} and (partly-) autonomous systems are entering today’s and especially tomorrow’s vehicles. These systems have heightened safety requirements up to being <b>fail-operational.</b> A safe adaptive software for safety critical functions helps to realize fail-operation ability {{in a vehicle}} in a robust, cost and energy efficient way. This software uses the already available electronic control units to create a redundancy without bringing in additional controllers. By using AUTOSAR this concept can be realized on any automotive compliant hardware...|$|E
40|$|The {{design and}} {{evaluation}} are described of a digital turbojet engine control which {{is capable of}} sensing catastrophic failures in either the engine rotor speed or the compressor discharge static-pressure signal and is capable of switching control modes to maintain near normal operation. The control program was developed for and tested on a turbojet engine located in a sea-level test stand. The control program is also capable of acquiring all the data that are necessary for the <b>fail-operational</b> control to function...|$|E
40|$|Attention {{is given}} to a {{redundant}} strapdown inertial measurement unit for integrated avionics. The system consists of four two-degree-of-freedom turned rotor gyros and four two-degree-of-freedom accelerometers in a skewed and separable semi-octahedral array. The unit is coupled through instrument electronics to two flight computers which compensate sensor errors. The flight computers are interfaced to the microprocessors and process failure detection, isolation, redundancy management and flight control/navigation algorithms. The unit provides dual <b>fail-operational</b> performance and has data processing frequencies consistent with integrated avionics concepts presently planned...|$|E
40|$|Vehicular network {{architectures}} {{are being}} reviewed and re-designed to meet requirements for increasing data rates and flexibility driven {{in part by}} the adoption of Connected and Automated Vehicles (CAV) strategies. A progressive move from traditional bus based networks, such as CAN, to Ethernet-based network architectures is being considered across the automotive industry. In this paper we advocate for an in-vehicle Software-Defined Network architecture and discuss benefits that such a shift in the architectural paradigm will bring by strengthening cyber-security defences and enabling a <b>fail-operational</b> capability through network programmability and provably correct networks...|$|E
40|$|Flight {{test results}} for two sensor {{fault-tolerant}} algorithms developed for a redundant strapdown {{inertial measurement unit}} are presented. The inertial measurement unit (IMU) consists of four two-degrees-of-freedom gyros and accelerometers mounted {{on the faces of}} a semi-octahedron. Fault tolerance is provided by edge vector test and generalized likelihood test algorithms, each of which can provide dual <b>fail-operational</b> capability for the IMU. To detect the wide range of failure magnitudes in inertial sensors, which provide flight crucial information for flight control and navigation, failure detection and isolation are developed in terms of a multi level structure. Threshold compensation techniques, developed to enhance the sensitivity of the failure detection process to navigation level failures, are presented. Four flight tests were conducted in a commercial transport-type environment to compare and determine the performance of the failure detection and isolation methods. Dual flight processors enabled concurrent tests for the algorithms. Failure signals such as hard-over, null, or bias shift, were added to the sensor outputs as simple or multiple failures during the flights. Both algorithms provided timely detection and isolation of flight control level failures. The generalized likelihood test algorithm provided more timely detection of low-level sensor failures, but it produced one false isolation. Both algorithms demonstrated the capability to provide dual <b>fail-operational</b> performance for the skewed array of inertial sensors...|$|E
40|$|In the future, {{vehicles}} {{are expected to}} act more and more autonomously. The transition towards highly automated and autonomous driving will push the safety requirements for in-vehicle networks. Such networks must support isolation between mixed-critical trac (e. g. critical control and non-critical infotainment) and must be <b>fail-operational.</b> This paper will present new concepts and mechanisms to achieve these goals in Ethernet-based networks. It will cover advanced topics such as software de ned networking (SDN) to implement isolation, fault recovery, and controlled degradation, e. g. to maintain (degraded) operation until the driver takes over or to reach a safe stop. /p...|$|E
40|$|The highly maneuverable {{aircraft}} technology (HiMAT) {{program was}} conceived to demonstrate advanced technology concepts through scaled-aircraft flight tests using a remotely piloted technique. Closed-loop {{primary flight control}} is performed from a ground-based cockpit, utilizing a digital computer and up/down telemetry links. A backup flight control system for emergency operation resides in an onboard computer. The onboard systems are designed to provide <b>fail-operational</b> capabilities and utilize two microcomputers, dual uplink receiver/decoders, and redundant hydraulic actuation and power systems. This paper discusses the design and validation of the primary and backup digital flight control systems {{as well as the}} unique pilot and specialized systems interfaces...|$|E
40|$|Flight {{test results}} for two {{fault-tolerance}} algorithms developed for a redundant strapdown {{inertial measurement unit}} consisting of four 2 -DOF gyros and accelerometers mounted {{on the faces of}} a semioctahedron are presented. Although both algorithms provided timely detection and isolation of flight control level failures, the generalized likelihood test algorithm provided more timely detection and isolation of low-level sensor failures than the edge vector test algorithm. The generalized likelihood test produced a false isolation for the case of a dual low-level failure applied to the sensitive axes of an accelerometer. Both of the algorithms were shown to provide dual <b>fail-operational</b> performance for the skewed array of inertial sensors...|$|E
40|$|The Redundant Strapdown Inertial Measurement Unit {{presently}} {{tested in}} flight configuration {{consists of a}} semioctahedral array of four dynamically tuned, two-degree-of-freedom (TDOF) gyros and four TDOF accelerometers which can provide dual, <b>fail-operational</b> performance for integrated avionics systems. Attention {{is given to the}} multilevel algorithm used for the detection and isolation of three ranges of sensor failure in an integrated avionics context. A technique for the generation of accelerometer and gyro error thresholds which is sensitive to dynamic sensor errors and separation effects is presented, together with simulation results. Emphasis is placed on the ensuring of highly reliable data for flight control/navigation functions, while minimizing false or missed alarms...|$|E
40|$|The paper shows a new {{approach}} for combining power electronics and electric motor in an (H) EV application. In the realized drive unit, each stator coil of the motor has its own power electronics and control module. Coil, power electronics and control module are combined in a smart stator tooth (SST). This SST-approach provides advantages in functionality, installation space, weight and interfaces. Furthermore, the SST improves system availability and safety, which {{is very important in}} vehicle applications. The paper discusses the behavior of the SST system for certain important failure cases. A finite elements simulation of motor currents and torques shows, that the system is <b>fail-operational...</b>|$|E
40|$|This paper {{presents}} the {{hardware and software}} design of a battery monitoring circuit developed {{to be used in}} aviation applications employing lithium-ion batteries in their electrified powertrain. The considered aircraft is a manned sailplane able to take-off and climb by using its electric propulsion system supplied by NCA/Graphite lithium-ion batteries. The battery monitoring electronics was developed with the highest considerations in terms of fail-safe and <b>fail-operational</b> requirements. The electronic design of the battery monitoring circuit integrates the battery busbars and uses new passive balancing components with an innovative busbar cooling solution, thus increasing the reliability and the robustness of the whole battery system. The software also contributes to the high safety level by employing crosscheck and plausibility check mechanisms...|$|E
40|$|SIF is a Standard InterFace for {{spacecraft}} electronics. It {{combines a}} number of existing standards+ 28 V avionics power, ISO 11898 - 3 fault-tolerant Control Area Network (CAN), and the CANopen software protocol. Terminals are connected into a closed loop by identical cables. The resulting network is <b>fail-operational</b> and is easy to modify even late in satellite integration. SpaceQuest experience building a large spacecraft with SIF avionics has demonstrated the cost and schedule savings inherent in standardized interfaces. This paper contains {{all of the information}} required for the reader to build and use SIF devices. The small satellite community is invited to make use of SIF, in the belief that widespread utilization of standards benefits all of the players...|$|E
40|$|International audienceThe {{degree of}} {{automated}} operation in vehicles is increasing continuously. Manufacturers want existing and new functions to be integrated, which drives engineering costs. On the other hand, customers grow {{accustomed to a}} steady flow of new functionality on smart phones, partially integrated into their vehicles. In this paper, the Runtime Environment (RTE) of the RACE project is presented. Based on a cross-domain system topology, the RTE executes real-time applications of mixed criticality up to <b>fail-operational</b> behavior. It offers communication and safety mechanisms that are configurable in-field to support Plug&Play scenarios. Since integrated functions often require access to different vehicle domains, the vehicle runtime and configuration data model is reified in the RTE to enable test and verification of all these mechanisms...|$|E
40|$|This paper {{presents}} a concurrent error correcting adder design employing fault tolerance through a duplication of a bit slice {{of a full}} adder based on alternative computation. The duplicated module is based on computing the sum and carry bits in two alternative ways so that faults will be detected {{by comparing the results}} (Sum and Carry out) obtained from the two computing paths. Redundancy is used to provide <b>fail-operational</b> functionality. If one hardware component goes down, then one of the redundant components can be brought in to continue operation of the system. The proposed method is simulated in standard CMOS 32 nm technology and provides 11. 11 % saving in transistor count compared to a QMR (Quadruple Modular Redundancy) style design...|$|E
40|$|This paper {{presents}} {{a survey of}} some of the fault tolerance techniques in automotives. Automotives need to be highly reliable with various safety-related systems in place. This increases the overall automotive and passenger safety by liberating the driver from handling the routine tasks and also assisting the driver during critical situations. One of the major trends to achieve this is by replacing the hydro-mechanical systems in the automotive with electrical systems. These systems, called x-by-wire, are fault-tolerant distributed systems which are <b>fail-operational</b> and can maintain a reliable and safe state at all times. These systems communicate with each other through a timetriggered architecture which is deterministic and faulttolerant as well. This dual fault tolerance achieves an overall automotive safety critical to the well-being of everybody involved. 1...|$|E
40|$|The {{vision of}} {{automated}} driving demands a highly available system, especially in safety-critical functionalities. In automated driving when a driver is not binding to {{be a part}} of the control loop, the system needs to be operational even after failure of a critical component until driver regain the control of vehicle. In pursuit of such a <b>fail-operational</b> behavior, the developed design process with software redundancy in contrast to conventional dedicated backup requires the support of automatic configurator for scheduling relevant parameters to ensure real-time behavior of the system. Multiple implementation methods are introduced to provide an automatic service which also considers task criticality before assigning task to the processor. Also, a generic method is developed to generate adaptation plans automatically for an already monitoring and reconfiguration service to handle fault occurring environment...|$|E
40|$|Flight {{test results}} of a vector-based {{fault-tolerant}} algorithm for a redundant strapdown inertial measurement unit are presented. Because the inertial sensors provide flight-critical information for flight control and navigation, failure detection and isolation is developed {{in terms of a}} multi-level structure. Threshold compensation techniques for gyros and accelerometers, developed to enhance the sensitivity of the failure detection process to low-level failures, are presented. Four flight tests, conducted in a commercial transport type environment, were used to determine the ability of the failure detection and isolation algorithm to detect failure signals, such a hard-over, null, or bias shifts. The algorithm provided timely detection and correct isolation of flight control- and low-level failures. The flight tests of the vector-based algorithm demonstrated its capability to provide false alarm free dual <b>fail-operational</b> performance for the skewed array of inertial sensors...|$|E
40|$|The {{potential}} cost advantages {{offered by}} advanced strapdown inertial technology in future commercial short-haul aircraft are summarized. The initial procurement cost and six year cost-of-ownership, which includes spares and {{direct maintenance cost}} were calculated for kinematic and inertial navigation systems such that traditional and strapdown mechanization costs could be compared. Cost results for the inertial navigation systems showed that initial costs {{and the cost of}} ownership for traditional triple redundant gimbaled inertial navigators are three times the cost of the equivalent skewed redundant strapdown inertial navigator. The net cost advantage for the strapdown kinematic system is directly attributable to the reduction in sensor count for strapdown. The strapdown kinematic system has the added advantage of providing a <b>fail-operational</b> inertial navigation capability for no additional cost due to the use of inertial grade sensors and attitude reference computers...|$|E
