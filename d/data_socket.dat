7|44|Public
5000|$|Bender was {{designed}} specifically for the relatively simple task of bending straight metal girders into various angles. Despite this apparent simplicity, he possesses numerous features superfluous to his original purpose, which become more apparent after an electric jolt to his antenna from an overhead light socket in the pilot episode. The scope of Bender's functionality is impressive; he often acts {{as if he were}} a multifunctional gadget rather than a special bending machine. Similar to a contemporary computer, he hosts a number of input/output devices: his head has a <b>data</b> <b>socket</b> and remotely operated volume control. His body has a socket for a microphone jack, a dual-socket power receptacle, a reset button, a kill switch, and a self-destruct button. Having the hardware-based self-destruct control on his body, rather than in his software, prevents Bender from committing suicide in [...] "A Head in the Polls" [...] when he pawns everything but his head, grows desperate without it and desires to kill himself.|$|E
30|$|The Nanosurveyor {{framework}} {{consists of}} an assortment of core components that ensure that the front-end provides {{easy to use and}} adaptable interface while the back-end is efficient, resilient, and responsive. The individual processing modules are all based on the same structure: an event loop runs routing data from the control and data sockets, waiting for tasks, asking the handler for configuration parameters (JSON string), and processing data (receiving/sending through the <b>data</b> <b>socket).</b>|$|E
40|$|This study {{proposes a}} LabVIEW based {{autonomous}} agricultural robot {{which can be}} used for ploughing. The control logic is designed using fuzzy logic controller to operate the robot in autonomous mode. The robot can also be controlled from a remote place using internet and its position is monitored using Global Positioning System (GPS), <b>Data</b> <b>Socket</b> protocol and Wi-Fi connection. Two DC motors are used to achieve movement control of the robot and they are controlled by the designed fuzzy logic controller. This control logic has two loops. One is outer speed control loop and the other one is inner current control loop. Based on the present position of the robot, the reference speed value is generated and based on this reference speed value the movement of an agricultural robot is controlled. Laboratory Virtual Instrument Engineering Workbench (LabVIEW) is a graphical programming environment suited for system-level design. This LabVIEW software enables complex and expensive equipment to be replaced by simpler and less expensive hardware. The primary difference between natural instrumentation and virtual instrumentation is the software component of the virtual instrument...|$|E
3000|$|Creates the sockets for {{streaming}} pipeline, {{which is}} a list of control and <b>data</b> <b>sockets</b> communicating between the handler and all the processing modules as well as the data collector and the interface; [...]...|$|R
40|$|This bachelor’s thesis {{focuses on}} a {{computer}} network design for Hydrex Ltd, which owns two buildings {{close to each other}} in the industrial park. In the theoretical part of the thesis we explain the terms connected with the issue. Practical part of the thesis deals with specific computer network design, the choice of the right network components, graphical proposal, cables pulling and the deployment of <b>data</b> <b>sockets...</b>|$|R
5000|$|Network - TCP and UDP network <b>sockets,</b> <b>data</b> {{encapsulation}} facilities, HTTP and FTP classes ...|$|R
40|$|Modular {{lower limb}} {{prosthesis}} is composed by custom-fit parts, {{such as the}} socket containing the residual limb, and standard components available on market, such as knee or foot. For both custom and standard parts the support offered by existing design tools is not efficient or integrated enough and, as a result, most prosthetists got rid of computer-aided tools and still rely only on their personal expertise. This paper presents an approach to design and configure complete lower limb prosthesis for transfemoral and transtibial amputees, {{on the base of}} patient’s digital data (e. g. stump model acquired by MRI) and specification sheets of components. The ultimate goal is to realise a virtual laboratory where the technicians can design lower limb prosthesis guided step by step by the system. We have identified key patient’s characteristics guiding the prosthetist during the four main steps of the production process: acquiring patient’s <b>data,</b> <b>socket</b> modelling, standard components selection and prosthesis assembly and check. The developed innovative framework integrates different tools to guide the technicians during each design task providing specific knowledge and rules. Thus, it allows a quicker and easier definition of the virtual prosthesis, on which virtual test could be performed (e. g. pressure distribution on stump, gait evaluation) {{in order to be able}} to realize the definitive prosthesis at the first attempt. The results have been evaluated and validated with the technical staff of a certified orthopaedic laboratory...|$|E
40|$|This paper proposes {{the design}} of a {{micro-controller}} based fuzzy logic controller for a remote controlled mine detecting robot. In the real time applications the detection and location of bomb is highly essential in the field of defense applications. Considering the value of human life the robot is allowed in the field to detect the bomb. The mine detecting robot is designed with IR sensors, metal detector and GPS attached to it. The two DC motors are connected with the rear wheels of the robot. Differential drive is used to control the steering angle and the speed of the robot. Differential drive is a method of controlling a robot with only two motorized wheels. They are controlled by a fuzzy logic controller to offer accurate steering angle and the driving speed of the robot. The designed controller has two loops with an Outer Fuzzy Speed Control Loop and an Inner Current Control Loop. Based on the current position and the set speed value, the steering angle and the speed of a mine detecting robot will be controlled. The software for both the client system and the robot is developed using <b>Data</b> <b>socket</b> protocol in LabVIEW. The motion of the robot is monitored by RF camera. The designed controller was implemented in a PIC 16 F 877 A microcontroller and the results are documented. The mine is detected by metal detector and the area of the mine is known through GPS...|$|E
40|$|Context: Standard {{transport}} layer protocols like UDP, TCP, andSCTP use only one access technology at a time. Concurrent MultipathTransmission (CMT), {{has been developed}} for parallel use of the access technologies. The main theme of this thesis work is to implement CMT in real-time and evaluate the impact of various scheduling algorithms on its performance. Objectives: The main objectives of this thesis are to implement a de-multiplexer at the source, re-sequencer at the receiver and to investigate some of the heuristics and analyzing their impact based on some performance metrics. Methods: Thorough understanding on this topic is attained by literature review of related works. To implement and evaluate the different scheduling patterns an experimental test bed is set up. For thetransmission of <b>data,</b> <b>socket</b> programming in Python is used. Varying various parameters {{that are involved in}} the experiment, performance metrics were measured and based on them statistical analysis is carried out for proper evaluation. Results: CMT is implemented in real-time test bed and concurrency is validated. Weighted Round-Robin has better performance compared to that of Round-Robin when the size of the packet is large whereas both exhibit nearly same behavior for smaller packet sizes. Conclusions: It can be concluded that Weighted Round-Robin attains higher throughput. It can be possibly due to more load of fragmentation when large packets are transmitted on the high reliable path and hence better performance than Round-Robin. There is need for further evaluation of other metrics like delay, jitter and using other scheduling mechanisms and in other environments as well...|$|E
50|$|Critical {{sections}} {{are also}} needed in computer networking. When the data arrives at network sockets, {{it may not}} arrive in an ordered format. Let's say program ‘X’ running on the machine needs to collect the <b>data</b> from the <b>socket,</b> rearrange it and check if anything is missing. While this program works on the data, no other program should access the same socket for that particular data. Hence, the <b>data</b> of the <b>socket</b> is protected by a critical section so that program ‘X’ can use it exclusively.|$|R
5000|$|Like the {{previous}} AMD socket, the [...] "AM3 Processor Functional Data Sheet" [...] (AMD document number 40778) {{has not been}} made publicly available. The [...] "Family 10h AMD Phenom™ Processor Product Data Sheet" [...] (document 446878) has, but contains only a brief list of features of the Phenom, and does not contain any substantive technical <b>data</b> regarding <b>socket</b> AM3.|$|R
30|$|Application exchanges its <b>data</b> through UDT <b>socket,</b> {{which then}} uses UDP socket to send or receive the data. Memory copy is {{bypassed}} between UDT socket and UDP socket, {{in order to}} reduce processing time. Application can also provide a customized control system (CC).|$|R
40|$|Abstract − We have {{developed}} a remotely controlled heat exchanger experiment {{as part of the}} I-Lab project at MIT. It has been used on the Internet by students in a variety of chemical engineering courses, and the response of students to the online experiment has been assessed. The hardware consists of a general service unit, custom designed and fabricated for us (HT- 30 XC, Armfield, Ltd., England), on which is mounted a heat exchanger (flat plate, shell and tube, or double pipe). Cold water flows through the exchanger in single pass, whereas hot water is recycled to a heated reservoir. Both fluid flowrates, their direction (cocurrent or countercurrent), and the inlet hot temperature are monitored and are {{under the control of the}} students. All other inlet and outlet temperatures are monitored. Monitoring and control is carried out with a computer/web server using LabVIEW 6. 1 software (National Instruments, USA). Data is published to web-accessible LabVIEW graphical user interfaces (GUI) or via a <b>Data</b> <b>Socket</b> Server (National Instruments) to a Java 2 GUI. A database (Microsoft SQL) is used for registering, authentication, and scheduling (ASP. NET) and for collaboration management software (Java 2), which provides for chat capabilities and ability to pass local control between team members who are collaborating on carrying out the experiment from their own computers in different locations. The experiment has been used successfully in various ways in courses. Student response has been favorable in general, and students appreciate the ability to take data from real equipment, especially in engineering science courses that otherwise contain no laboratory component. Student response improves with increasing sophistication of the GUI and is very high when everything works as intended. Conversely, studen...|$|E
5000|$|File {{channels}} (...) can use arbitrary buffers but {{can also}} establish a buffer directly mapped to file contents using memory-mapped file. They can also interact with file system locks. Similarly, socket channels ( [...] and [...] ) allow for <b>data</b> transfer between <b>sockets</b> and NIO buffers.|$|R
5000|$|Channel {{encryption}} {{is used by}} HP OXPd {{to prevent}} the unauthorized access of user <b>data.</b> Specifically, Secure <b>Sockets</b> Layer (SSL) is employed whenever the HTTP protocol is used. This {{is also known as}} HTTPS. The HP OXPd enabled device will request and validate a server’s identity certificate before establishing a connection.|$|R
50|$|For example, a daemon which listens on {{a socket}} must precede any clients that send <b>data</b> on this <b>socket.</b> With shell scripts, {{there is no}} {{efficient}} way to verify this condition. A service with a complex state machine {{that needs to be}} in a specific state before it is ready has no standard means to synchronize with its clients.|$|R
40|$|The GEOS-Chem global {{chemical}} transport model (CTM), {{used by a}} large atmospheric chemistry research community, has been re-engineered to also serve as an atmospheric chemistry module for Earth system models (ESMs). This was done using an Earth System Modeling Framework (ESMF) interface that operates independently of the GEOSChem scientific code, permitting the exact same GEOSChem code {{to be used as}} an ESM module or as a standalone CTM. In this manner, the continual stream of updates contributed by the CTM user community is automatically passed on to the ESM module, which remains state of science and referenced to the latest version of the standard GEOS-Chem CTM. A major step in this re-engineering was to make GEOS-Chem grid independent, i. e., capable of using any geophysical grid specified at run time. GEOS-Chem <b>data</b> <b>sockets</b> were also created for communication between modules and with external ESM code. The grid-independent, ESMF-compatible GEOS-Chem is now the standard version of the GEOS-Chem CTM. It has been implemented as an atmospheric chemistry module into the NASA GEOS- 5 ESM. The coupled GEOS- 5 -GEOS-Chem system was tested for scalability and performance with a tropospheric oxidant-aerosol simulation (120 coupled species, 66 transported tracers) using 48 - 240 cores and message-passing interface (MPI) distributed-memory parallelization. Numerical experiments demonstrate that the GEOS-Chem chemistry module scales efficiently for the number of cores tested, with no degradation as the number of cores increases. Although inclusion of atmospheric chemistry in ESMs is computationally expensive, the excellent scalability of the chemistry module means that the relative cost goes down with increasing number of cores in a massively parallel environment...|$|R
50|$|A socket can be {{referred}} to by a process (a running computer program) by using a socket descriptor, a type of handle (abstract reference, often represented internally as an integer). A process first requests that the protocol stack create a socket, and the stack returns a descriptor to the process so it can identify the socket. The process then passes the descriptor back to the protocol stack when it wishes to send or receive <b>data</b> using this <b>socket.</b>|$|R
40|$|A {{nuclear data}} server which transmits the {{evaluated}} nuclear data libraries through network is proposed. The evaluated nuclear {{data are provided}} by means of TCP/IP, and client programs can receive the nuclear <b>data</b> with the <b>socket</b> library. Some examples with a prototype server program are demonstrated, {{the first is a}} nuclear data retrieval program which allows users to extract data from the nuclear data library, and the second is an access to the nuclear data library from the existent nuclear data process code...|$|R
40|$|At this time, {{the vehicle}} {{security}} system {{is still not}} effective enough to handle the occurrence of vehicle theft. Where we can not monitor the position of or vehicle in real time. We need a system that capable of providing vehicle information via internet. 	This system utlizes GPS Tracker technology with GSM Module include in it, PHP Socket, SQL Database, and Google MAP API. Sensor and satellite receiver on the GPS Tracker module can be function as tracer that can tell us where the location of our vehicles. The module connected to satellite and sending coordinate <b>data</b> to <b>socket</b> application periodically then that socket application process GPS data that received input it directly to web tracking application’s database. Tracking application read coordinate data from database upon request from the user and visualize {{the position of the}} vehicle using a map and APIs from Google Map. ...|$|R
40|$|When {{we want to}} {{implement}} a client-server applications we must consider the mobile devices limitations. So, {{in this paper we}} discuss what can be the more reliable way to exchange information between a server and an Android mobile application, since it is important for users to have an application that really works in a responsive way and preferably without any errors. In this discussion two <b>data</b> transfer protocols (<b>Socket</b> and HTTP) and to serialize data three different data structure formats (XML, JSON and Protocol Buffers) were tested using some metrics to evaluate which is the most practical and fast to use...|$|R
30|$|There {{are several}} inter-process {{communication}} methods available that support <b>data</b> streams, including <b>sockets,</b> message queueing, and pipes. The rationale for choosing the client–server model using TCP/IP socket communication for our prototype is its suitability {{for research in}} neuroprosthetics, where the different systems are typically interconnected in a LAN environment. The TCP/IP socket provides easy-to-use interfaces between different platforms (Windows and Linux) as well as different programming environments (MATLAB and Python), which {{are used in the}} prototype implementation. It is yet unclear what communication methods will be required for working neuroprosthesis of this kind in the future, but similar setups are a feasible option, for example, if the working neuroprosthesis is being used in a clinical environment [1].|$|R
40|$|Abstract. Five-axis {{machining}} area of {{free surface}} is proposed by based on ARM 9 and Linux open CNC system's overall {{structure of the}} CNC system hardware and software architecture. The system adopts the mode of the host computer PC, the lower computer ARM 9 development board. PC completes the model of space surface and generates tool path by Simultaneous Multi-objective Optimization Algorithm on Free-form Surface Five-Axis Machining Tool Path and Tool Posture. The lower computer applies MYSQL database to storage and manage cutter location point information. Other modules access the database through ODBC standard interface. ARM 9 and PC utilize the way of cross-platform <b>socket</b> <b>data</b> transmission, the stepper motors {{is controlled by the}} way of constant acceleration- deceleration...|$|R
40|$|Title: Transfemoral prosthesis, {{construction}} {{types of}} sockets Objectives: The {{aim of this}} work {{is to create a}} comprehensive view of the thigh amputation issue and a subsequent rehabilitation and prosthetic care. The main objective is to compare the different types of sockets. In conclusion, I would like to describe the manufacturing process of scanning measurement <b>data</b> for the <b>socket</b> production. Methods: The basis for the writing of the thesis is a literature review. I also used the knowledge gained in seminars organized by professional firms. For a complete information obtained I used a method of an informal interviews with experts. Results: I believe that the anatomical socket allows better comfort for the patient. Keywords: transfemoral amputation, prosthesis, transfemoral socket, prosthetic component...|$|R
5000|$|A {{process is}} a [...] "heavyweight" [...] unit of kernel scheduling, as creating, destroying, and {{switching}} processes is relatively expensive. Processes own resources allocated by the operating system. Resources include memory (for both code and <b>data),</b> file handles, <b>sockets,</b> device handles, windows, and a process control block. Processes are isolated by process isolation, and do not share address spaces or file resources except through explicit methods such as inheriting file handles or shared memory segments, or mapping the same file in a shared way - see interprocess communication. Creating or destroying a process is relatively expensive, as resources must be acquired or released. Processes are typically preemptively multitasked, and process switching is relatively expensive, beyond basic cost of context switching, due to issues such as cache flushing.|$|R
40|$|TCP and {{the socket}} {{abstraction}} have barely {{changed over the}} last two decades, but at the network layer there has been a giant leap from a few megabits to 100 gigabits in bandwidth. At the same time, CPU architectures have evolved into the multi-core era and applications are expected to make full use of all available resources. Applications in the data acquisition domain based on the standard socket library running in a Non-Uniform Memory Access (NUMA) architecture are unable to reach full efficiency and scalability without the software being adequately aware about the IRQ (Interrupt Request), CPU and memory affinities. During the first long shutdown of LHC, the CMS DAQ system is going to be upgraded for operation from 2015 onwards and a new software component has been designed and developed in the CMS online framework for transferring <b>data</b> with <b>sockets.</b> This software attempts to wrap the low-level socket library to ease higher-level programming with an API based on an asynchronous event driven model similar to the DAT uDAPL API. It is an event-based application with NUMA optimizations, that allows for a high throughput of data across a large distributed system. This paper describes the architecture, the technologies involved and the performance measurements of the software {{in the context of the}} CMS distributed event building...|$|R
40|$|While {{a number}} of User-Level Protocols have been {{developed}} to reduce the gap between the performance capabilities of the physical network and the performance actually available, applications that have already been developed on kernel based protocols such as TCP have largely been ignored. There is a need to make these existing TCP applications take advantage of the modern user-level protocols such as EMP or VIA which feature both low-latency and high bandwidth. In this paper, we have designed, implemented and evaluated a scheme to support such applications written using the sockets API to run over EMP without any changes to the application itself. Using this scheme, we are able to achieve a latency of 28. 5 ¤ s for the Datagram sockets and 37 ¤ s for <b>Data</b> Streaming <b>sockets</b> compared to a latency of 120 ¤ s obtained by TCP for 4 -byte messages. This scheme attains a peak bandwidth of around 840 Mbps. Both the latency and the throughput numbers are close to those achievable by EMP. The ftp application shows twice as much benefit on our sockets interface while the web server application shows up to six times performance enhancement as compared to TCP. To the best of our knowledge, this is the first such design and implementation for Gigabit Ethernet...|$|R
40|$|Objective: To assess, {{based on}} the {{existing}} literature, the benefit of socket preservation therapies in patients with a tooth extraction in the anterior or premolar region as compared with no additional treatment with respect to bone level. Material and methods: MEDLINE-PubMed and the Cochrane Central Register of controlled trials (CENTRAL) were searched till June 2010 for appropriate studies, which reported data concerning the dimensional changes in alveolar height and width after tooth extraction with or without additional treatment like bonefillers, collagen, growth factors or membranes. Results: Independent screening of the titles and abstracts of 1918 MEDLINE-PubMed and 163 Cochrane papers resulted in nine publications that met the eligibility criteria. In natural healing after extraction, a reduction in width ranging between 2. 6 and 4. 6 mm and in height between 0. 4 and 3. 9 mm was observed. With respect to socket preservation, the freeze-dried bone allograft group performed best with a gain in height, however, concurrent with a loss in width of 1. 2 mm. Conclusion: <b>Data</b> concerning <b>socket</b> preservation therapies in humans are scarce, which does not allow any firm conclusions. Socket preservation may aid in reducing the bone dimensional changes following tooth extraction. However, they do not prevent bone resorption because, depending on the technique, {{on the basis of}} the included papers one may still expect a loss in width and in height...|$|R
40|$|We {{present an}} end system {{architecture}} designed to support networking with QoS guarantees. The protocol processing {{component of the}} architecture, called Migrating Sockets, has been designed with minimal hidden scheduling which enables accurate determination of the rate requirement of a user application. The end system provides QoS guarantees using (i) an adaptive rate-controlled scheduler, (ii) rate-based flow control on the send side for access to reserved-rate network connections, and (iii) a constant overhead active demultiplexing mechanism on the receive side which can be transparently enabled in wide-area TCP/IP internetworking (although it is not restricted to TCP/IP). To achieve efficiency, Migrating Sockets lets user applications manage network endpoints with minimal system intervention, provides user level protocols read-only access to routing information, and integrates kernel level support we previously built for efficient <b>data</b> movement. Migrating <b>Sockets</b> is backward compatib [...] ...|$|R
40|$|Abstract. Stream Control Transmission Protocol (SCTP) is {{the third}} {{transport}} layer protocol next to TCP and UDP. The SCTP provides some distinctive fea-tures over the TCP. This paper is purposed to compare SCTP and TCP in the performance perspective. We compare the throughput of SCTP and TCP for the three different test scenarios: the performance comparison of SCTP and TCP for the different size of the user input <b>data</b> for the <b>socket</b> system call, the analy-sis of the fairness under competition of SCTP and TCP traffic, and the perform-ance comparison of the SCTP multi-homing and single-homing cases. From the results, it is shown that the SCTP provides better throughput over TCP for a larger user input data. We also see that the SCTP traffic tends to compete fairly with TCP and that the multi-homing SCTP provides better performance than the single-homing case. ...|$|R
40|$|Nowadays, {{due to the}} {{incredible}} grow of the mobile devices market, when we want to implement a client-server applications we must consider mobile devices limitations. In this paper we discuss which can be the more reliable and fast way to exchange information between a server and an Android mobile application. This {{is an important issue}} because with a responsive application the user experience is more enjoyable. In this paper we present a study that test and evaluate two <b>data</b> transfer protocols, <b>socket</b> and HTTP, and three data serialization formats (XML, JSON and Protocol Buffers) using different environments and mobile devices to realize which is the most practical and fast to use. The authors would like to acknowledge FCT, FEDER, POCTI, POSI, POCI and POSC for their support to GECAD unit, to the project PSIS (PTDC/TRA/ 72152 / 2006) and for the PhD grant (SFRH/BD/ 70248 / 2010) ...|$|R
40|$|Socket {{resistance}} contributes {{significantly to}} pile capacity. In the present work, an approach is presented for estimating {{the capacity of}} side-resistance-only piles socketed in rock by considering the effect of interlocking in terms of JRC and Fractal Dimension. Unlike available methods of quantification of roughness of surfaces, Fractal geometry allows the description of irregular shapes. A correlation is established between JRC and Fractal Dimension (D). This is used to estimate socket contribution and predict pile capacity based on an iterative procedure. Here the axial load is calculated by incrementing vertical displacement along the interface and estimating the shear strength mobilised at the interface using above correlation. Pile <b>socket</b> <b>data</b> reported in literature is used for validating the approach. The study is then extended to piles socketed in weathered rock in Mumbai region. The results show that it is feasible to make a reliable estimate of the socket strength contribution...|$|R
40|$|M. S. University of Hawaii at Manoa 2012. Includes bibliographical references. Energy {{efficiency}} {{and renewable energy}} {{are said to be}} the twin pillars of a sustainable energy policy, both of which should be developed simultaneously in order to reduce carbon dioxide emissions. In this thesis, we design and integrate a cloud based energy monitoring system for buildings so that people such as commercial managers or residential building occupants can make policies accordingly regard to improving the efficiency of energy usage. This system consists of three major components: wireless sensor network, embedded Linux gateway and cloud computing component. The wireless sensor network achieves the function of retrieving energy consumption <b>data</b> on the <b>socket</b> level without comprising the existing power supply infrastructure. The embedded Linux gateway reads data from to the wireless sensor network and delivering them to the cloud. The cloud process the raw energy data, store the processed data to a database and displaying the power consumption using a web server for visualization...|$|R
40|$|This report {{describes}} the internal {{structure of the}} networking facilities developed for the 4. 4 BSD version of the UNIX* operating system for the VAX+. These facilities are based on several central abstractions which structure the external (user) view of network communication {{as well as the}} internal (system) implementation. The report documents the internal structure of the networking system. The "Berkeley Software Architecture Manual, 4. 4 BSD Edition" (PSD: 5) provides a description of the user interface to the networking facilities. Revised June 10, 1993 ################## * UNIX is a trademark of Bell Laboratories. + DEC, VAX, DECnet, and UNIBUS are trademarks of Digital Equipment Corporation. SMM: 18 - 2 Networking Implementation Notes TABLE OF CONTENTS 1. Introduction 2. Overview 3. Goals 4. Internal address representation 5. Memory management 6. Internal layering 6. 1. Socket layer 6. 1. 1. Socket state 6. 1. 2. <b>Socket</b> <b>data</b> queues 6. 1. 3. Socket connection queuing 6. 2. Protocol layer(s) [...] ...|$|R
40|$|Presented to the 12 th Annual Symposium on Graduate Research and Scholarly Projects (GRASP) {{held at the}} Heskett Center, Wichita State University, April 29, 2016. Research {{completed}} at Department of Industrial and Manufacturing Engineering, College of EngineeringCostly solutions have been invented to resolve the issues of increasing electricity consumption and dead zones. Control of a device {{has also been a}} concern as temperature readings and security are important needs in every home or office. A solution is presented in order to meet with the needs of professionals in different organizations. An electrical socket is used as a medium to achieve the elimination of dead zones, monitor electrical usage, read temperature, and provide security and control of its functions. The system is made by attaching a microcontroller board to a socket with Wi-Fi extending capabilities, making each socket a hub for wireless connection. A central server gathers <b>data</b> from each <b>socket</b> and organizes them on a table, which can be accessed from a website and a mobile app. Graduate School, Academic Affairs, University Libraries, Regional Institute on Agin...|$|R
40|$|Autonomy is {{required}} for manned spacecraft missions distant enough that light-time communication delays make ground-based mission control infeasible. Presently, ground controllers develop a complete schedule of power modes for all spacecraft components based on {{a large number of}} factors. The proposed architecture is an early attempt to formalize and automate this process using on-vehicle computation resources. In order to demonstrate this architecture, an autonomous electrical power system controller and vehicle Mission Manager are constructed. These two components are designed to work together in order to plan upcoming load use as well as respond to unanticipated deviations from the plan. The communication protocol was developed using "paper" simulations prior to formally encoding the messages and developing software to implement the required functionality. These software routines exchange <b>data</b> via TCP/IP <b>sockets</b> with the Mission Manager operating at NASA Ames Research Center and the autonomous power controller running at NASA Glenn Research Center. The interconnected systems are tested and shown to be effective at planning the operation of a simulated quasi-steady state spacecraft power system and responding to unexpected disturbances...|$|R
