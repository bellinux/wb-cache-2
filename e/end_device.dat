141|847|Public
2500|$|A {{pneumatic}} thermostat is a thermostat {{that controls}} a heating or cooling system via {{a series of}} air-filled control tubes. This [...] "control air" [...] system responds to the pressure changes (due to temperature) in the control tube to activate heating or cooling when required. [...] The control air typically is maintained on [...] "mains" [...] at 15-18psi (although usually operable up to 20psi). Pneumatic thermostats typically provide output/ branch/ post-restrictor(for single-pipe operation) pressures of 3-15psi which is piped to the <b>end</b> <b>device</b> (valve/ damper actuator/ Pneumatic-Electric switch, etc.).|$|E
5000|$|ANSI C12.19 is the American National Standard for Utility Industry <b>End</b> <b>Device</b> Data Tables ...|$|E
5000|$|IEEE P1377 Draft Standard for Utility Industry Metering Communication Protocol Application Layer (<b>End</b> <b>Device</b> Data Tables) ...|$|E
3000|$|The {{design of}} the MCE/WCE allows to offer an API (application {{programming}} interface) to <b>end</b> <b>devices</b> on board or at the wayside. This way, <b>end</b> <b>devices</b> can optionally subscribe to events that the Application Interface will generate to indicate the availability of e.g., high throughput or low delay with general network condition messages (e.g., [...] "no network available", [...] "low bandwidth", [...] "average bandwidth", [...] "high bandwidth"). The <b>end</b> <b>devices</b> can use this information for their internal reasoning to find a suitable moment to start a certain application (e.g., only transfer movie files for the entertainment system when high bandwidth is available).|$|R
30|$|Database centric {{architectures}} {{hide the}} heterogeneity of underlying networks by only allowing access to network information using database operations. For example, the SENSEI project [27] solves the inaccessibility of low-resource <b>end</b> <b>devices</b> by collecting all data from the <b>end</b> <b>devices</b> and making it available in a centrally accessible database. Unfortunately, this approach often results in significant network overhead.|$|R
50|$|Internet Protocol as a {{communications}} protocol between the AllVid gateway and <b>end</b> <b>devices.</b>|$|R
50|$|In a {{redundant}} {{switched network}} {{it is possible}} for an <b>end</b> <b>device</b> to receive the same frame multiple times.|$|E
5000|$|C3300 - High <b>end</b> <b>device.</b> Targeted for use {{in company}} headquarters, datacentres and ISPs. Storage {{capacity}} of up to 2.4TB.|$|E
50|$|Effective 2014, {{the object}} {{identifiers}} (device classes) and XML documents (TDLs/EDLs) of this standard are managed and registered by the Energy Communications Management eXchange® (ECMX®) {{under the supervision}} of the North American <b>End</b> <b>Device</b> Registration Authority™ (NAEDRA).|$|E
30|$|In {{order to}} {{transmit}} {{a signal from}} the NG through wireless scenario, a wireless sensor network (WSN) developed at Linköping University (Sweden) was used [26 – 28]. The WSN {{is based on a}} ZigBee specification. The WSN consists of gateway, routers, and <b>end</b> <b>devices.</b> The gateway and routers are the mains-powered components and the <b>end</b> <b>devices</b> for sensing are battery-powered.|$|R
5000|$|Browser - A {{light-weight}} browser {{that relies}} on the System Webview, for low <b>end</b> <b>devices,</b> also known as Jelly.|$|R
30|$|Low-cost <b>end</b> <b>devices</b> can be {{included}} in IP networks since IP packets can be generated and processed even without a full protocol stack.|$|R
50|$|At the 2014 Interop and Tech Field Day, {{software-defined}} networking was demonstrated by Avaya using Shortest path bridging and OpenStack as an automated campus, extending automation {{from the data}} center to the <b>end</b> <b>device,</b> removing manual provisioning from service delivery.|$|E
5000|$|This {{standard}} {{defines a}} table structure for utility application {{data to be}} passed between an <b>end</b> <b>device</b> and a computer. The [...] "end device" [...] is typically an electricity meter, and the [...] "computer" [...] is typically a hand-held device carried by a meter reader, or a meter communication module {{which is part of}} an Automatic Meter Reading system. C12.19 does not define <b>end</b> <b>device</b> design criteria nor specify the language or protocol used to transport that data. There are however related ANSI standards which do specify the transportation of these tables. ANSI C12.18 describes the communication of C12.19 tables over an optical port. ANSI C12.21 describes the communication of C12.19 tables over a modem. ANSI C12.22 describes the communication of C12.19 tables over a network.|$|E
5000|$|QoE metrics {{are often}} {{measured}} at the end devices and can conceptually {{be seen as the}} remaining quality after the distortion introduced during the preparation of the content and the delivery through the network, until it reaches the decoder at the <b>end</b> <b>device.</b> There are several elements in the media preparation and delivery chain and some of them may introduce distortion. This causes degradation of the content, and several elements in this chain can be considered as [...] "QoE-relevant" [...] for the offered services. The causes of degradation are applicable for any multimedia service, that is, not exclusive to video or speech. Typical degradation occur at the encoding system (compression degradation), transport network, access network (e.g., packet loss or packet delay), home network (e.g. WiFi performance) and <b>end</b> <b>device</b> (e.g. decoding performance).|$|E
40|$|With rapid advancements in {{wireless}} devices, {{ubiquitous computing}} seems becoming a reality everyday. Active pervasive network infrastructure {{has been introduced}} to o#er selective and intelligent information communications according to access bandwidths of <b>end</b> users' <b>devices.</b> In this paper, research has been extended to deal with mixture of critical and non-critical information. Data classifications are devised for the infrastructure to interpret the importance of data accurately. The design relieves computation requirements at <b>end</b> <b>devices,</b> and mediates delivered information based on users' personal preferences. Further, the operations of content adaptations are transparent to all <b>end</b> <b>devices,</b> and users always perceive high quality transactions and are satisfied with o#ered network services. More importantly, the resulting design further improves overall system throughput and delay performance...|$|R
50|$|The {{purpose of}} the tables is to define {{structures}} for transporting data to and from <b>end</b> <b>devices.</b> A related standard, IEC 61968 defines a CIM information model for energy data.|$|R
5000|$|Expanders: {{devices that}} {{form part of}} a service {{delivery}} subsystem and facilitate communication between SAS devices. Expanders facilitate the connection of multiple SAS <b>End</b> <b>devices</b> to a single initiator port.|$|R
50|$|An {{alternate}} {{method to}} HIDS {{would be to}} provide NIDS type functionality at the network interface (NIC) level of an end-point (either server, workstation or other <b>end</b> <b>device).</b> Providing HIDS at the network layer {{has the advantage of}} providing more detailed logging of the source (IP address) of the attack and attack details, such as packet data, neither of which a dynamic behavioral monitoring approach could see.|$|E
5000|$|... zigbee <b>End</b> <b>Device</b> (ZED): Contains {{just enough}} {{functionality}} {{to talk to}} the parent node (either the Coordinator or a Router); it cannot relay data from other devices. This relationship allows the node to be asleep a significant amount of the time thereby giving long battery life. A ZED requires the least amount of memory, and, therefore, can be less expensive to manufacture than a ZR or ZC.|$|E
50|$|The ZDO (zigbee Device Object), a {{protocol}} in the zigbee protocol stack, {{is responsible for}} overall device management, security keys, and policies. It is responsible for defining {{the role of a}} device as either coordinator or <b>end</b> <b>device,</b> as mentioned above, but also for the discovery of new (one-hop) devices on the network and the identification of their offered services. It may then go on to establish secure links with external devices and reply to binding requests accordingly.|$|E
30|$|The IMS {{architecture}} {{is supposed to}} be implemented completely in this phase (see Figure 5 (d)). Then different Application Servers of cable and 3 G domains will be converged by using IMS standard interfaces. In this architecture, non-SIP-based <b>end</b> <b>devices</b> are supported as well as SIP-based devices (SIP endpoints or SIP-MTAs). Therefore, CMS is enhanced and is not replaced by S-CSCF [21]. The three main enhancements in CMS are firstly, interconnecting to HSS by deploying diameter interface; secondly, defining ISC interface to access to SIP-based ASs; and thirdly, setting up the SIP session on behalf of non-SIP-based <b>end</b> <b>devices.</b>|$|R
40|$|ZigBee aims {{to be one}} of {{the major}} {{standards}} for short-range wireless networks. Based on IEEE 802. 15. 4, ZigBee inherits the concept of FFDs (Full Function Devices) and RFDs (Reduced Function Devices) and a network hierarchy of PAN Coordinators, Routers and <b>End</b> <b>Devices.</b> Furthermore, it features a reasonable amount of network nodes and security mechanisms inside a robust MAC layer. Nevertheless, some key features for network reliability are missing. Every Coordinator/Router represents a single point of failure and in case of a breakdown <b>End</b> <b>Devices</b> <b>end</b> up as orphans without network connection. In our work we present possible solutions against network dropouts in certain cases, based on methods designed for use with meshed sensor networks and adapted for ZigBee...|$|R
50|$|After {{this the}} <b>end</b> <b>devices</b> (so called dump {{terminals}} or client to the MGCP Server-client architecture) sends the Voice directly to each other. After the conversation the Call-Agent signals {{the phone to}} disconnect the call.|$|R
5000|$|A {{pneumatic}} thermostat is a thermostat {{that controls}} a heating or cooling system via {{a series of}} air-filled control tubes. This [...] "control air" [...] system responds to the pressure changes (due to temperature) in the control tube to activate heating or cooling when required. The control air typically is maintained on [...] "mains" [...] at 15-18psi (although usually operable up to 20 psi). Pneumatic thermostats typically provide output/ branch/ post-restrictor(for single-pipe operation) pressures of 3-15psi which is piped to the <b>end</b> <b>device</b> (valve/ damper actuator/ Pneumatic-Electric switch, etc.).|$|E
5000|$|Fragment free: {{a method}} that {{attempts}} to retain the benefits of both store and forward and cut through. Fragment free checks the first 64 bytes of the frame, where addressing information is stored. According to Ethernet specifications, collisions should be detected during the first 64 bytes of the frame, so frames that are in error because of a collision will not be forwarded. This way the frame will always reach its intended destination. Error checking of the actual data in the packet is left for the <b>end</b> <b>device.</b>|$|E
50|$|Even in RAW format, {{however, the}} sensor and the camera's {{dynamics}} can only capture colors within the gamut {{supported by the}} hardware. When that image is transferred for reproduction on any device, the best possible gamut is the gamut that the <b>end</b> <b>device</b> supports. For a monitor, it is the gamut of the display device. For a photographic print, it is the gamut of the device that prints the image on {{a specific type of}} paper. Color gamut or Color space is an abstract term that describes an area where points of color fit in a three-dimensional space.|$|E
40|$|Ad-hoc {{networks}} {{constitute a}} peculiar computing environment, {{characterized by the}} lack of centralized support from pre-existing network entities. Applications and protocols designed for centralized environments must be adapted for use in ad-hoc environments. For example, the baseline Session Initiation Protocol (SIP) strongly relies on the presence of an infrastructure, the SIP servers, and cannot therefore be deployed as it is in ad-hoc networks. This paper proposes a solution that enables devices in adhoc networks to use SIP functionalities in a decentralized way. Particularly, we embed a limited set of SIP server functionalities in the <b>end</b> <b>devices</b> to allow distribute session management for SIP <b>end</b> <b>devices,</b> without network support. I...|$|R
5000|$|In 2009, Nivis {{launched}} an ISA100.11a development kit consisting of gateway and <b>end</b> <b>devices,</b> and an ISA 100.11a Wireless Demonstration Project In Operation. [...] In 2010 the Nivis ISA100.11a stack was successfully tested for compliance by the Wireless Compliance Institute (WCI).|$|R
30|$|The {{frontier}} {{between the}} Cloud and the <b>end</b> <b>devices</b> {{is known as}} the Fog. The Fog is an environment with a plethora of heterogeneous devices that work in a ubiquitous and decentralized manner, communicating and cooperating among themselves [15]. Thus, the Fog emerges {{as an extension of the}} Cloud paradigm escalating from the core of the network towards its edge; it is comprised of a heavily virtualized platform able to perform storage, processing, and networking activities between the Cloud servers and the <b>end</b> <b>devices</b> [16, 17]. The Fog comes to support novel applications and services that are not completely fit for the Cloud, granting them ubiquity, high resilience, low latency, decentralized management, and cooperation [18, 19].|$|R
50|$|Similar to availability, {{reliability}} of computations must be consistent and uniform. If computations offloaded {{to the client}} are continuously interrupted, some mechanism for detecting this must be in place such that the client may know the computation is tainted or needs to be completely re-run. In P2P social computing, reliable expected computation power is difficult to achieve because {{the speed of the}} client calculation may depend on how much the client is using the <b>end</b> <b>device.</b> Some ways of overcoming this may be to only allow computations to occur at night, or during specified times the client resources will not be in use.|$|E
50|$|What is {{commonly}} referred to as microstepping is often sine-cosine microstepping in which the winding current approximates a sinusoidal AC waveform. Sine-cosine microstepping is the most common form, but other waveforms can be used. Regardless of the waveform used, as the microsteps become smaller, motor operation becomes more smooth, thereby greatly reducing resonance in any parts the motor may be connected to, as well as the motor itself. Resolution will be limited by the mechanical stiction, backlash, and other sources of error between the motor and the <b>end</b> <b>device.</b> Gear reducers may be used to increase resolution of positioning.|$|E
50|$|The BSF is {{introduced}} by the application server (NAF), after an unknown UE device {{is trying to get}} service access: the NAF refers the UE to the BSF. UE and BSF mutually authenticate via 3GPP protocol AKA (Authentication and Key Agreement); additionally, the BSF sends related queries to the Home Subscriber Server (HSS).Afterwards, UE and BSF agree on a session key to be used for encrypted data exchange with the application server (NAF). When the UE again connects to the NAF, the NAF is able to obtain the session key as well as user specific data from the BSF and can start data exchange with the <b>end</b> <b>device</b> (UE), using the related session keys for encryption.|$|E
40|$|Abstract—The {{development}} of {{hardware and software}} of low end mobile phones and even simple media players will increasingly allow different type of content to be consumed on them creating pressure for efficient ways to also access the content. Since efficient, scalable distribution of multimedia content is a key strength of peer-to-peer technologies, bringing that technology to the player devices seems attractive. This way low <b>end</b> <b>devices</b> {{would be able to}} join and cooperate in an existing peer-to-peer network. The paper introduces a complete J 2 ME based BitTorrent solution for mainstream phones, called MobTorrent which supports both downloading and uploading. We analyze the key elements of MobTorrent and introduce issues related to the limited capabilities of low <b>end</b> <b>devices.</b> The performance of the complete application is evaluated by speed measurements. In general handheld devices have small batteries, thus the energy consumption is a key property of applications on low <b>end</b> <b>devices.</b> The paper also discusses the possibility of implementing Bluetooth based local cooperation in MobTorrent and the key factors of how to bring peer-to-peer technology to simple media player devices. Key words—BitTorrent; Low end device;, Cooperative networks I...|$|R
50|$|Thus {{from above}} we can {{understand}} that the Call-Agents are the Brains for the complete infrastructure and the destination <b>end</b> <b>devices</b> i.e. phone, PRI, CO (FXO), Extension (FXS) Media Gateway are under control of Call-Agent instructions for each activity behaving as dumb terminals.|$|R
40|$|Assessing {{the average}} energy {{intensity}} of Internet transmissions {{is a complex}} task {{that has been a}} controversial subject of discussion. Estimates published over the last decade diverge by up to four orders of magnitude — from 0. 0064 kilowatt-hours per gigabyte (kWh/GB) to 136 kWh/GB. This article presents a review of the methodological approaches used so far in such assessments: i) top–down analyses based on estimates of the overall Internet energy consumption and the overall Internet traffic, whereby average energy intensity is calculated by dividing energy by traffic for a given period of time, ii) model-based approaches that model all components needed to sustain an amount of Internet traffic, and iii) bottom–up approaches based on case studies and generalization of the results. Our analysis of the existing studies shows that the large spread of results is mainly caused by two factors: a) the year of reference of the analysis, which has significant influence due to efficiency gains in electronic equipment, and b) whether <b>end</b> <b>devices</b> such as personal computers or servers are included within the system boundary or not. For an overall assessment of the energy needed to perform a specific task involving the Internet, it is necessary to account for the types of <b>end</b> <b>devices</b> needed for the task, while the energy needed for data transmission can be added based on a generic estimate of Internet energy intensity for a given year. Separating the Internet as a data transmission system from the <b>end</b> <b>devices</b> leads to more accurate models and to results that are more informative for decision makers, because <b>end</b> <b>devices</b> and the networking equipment of the Internet usually belong to different spheres of control...|$|R
