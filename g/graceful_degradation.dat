723|130|Public
25|$|The {{medium quality}} photo uses only 4.3% of the storage space {{required}} for the uncompressed image, but has little noticeable loss of detail or visible artifacts. However, once a certain threshold of compression is passed, compressed images show increasingly visible defects. See the article on rate–distortion theory for a mathematical explanation of this threshold effect. A particular limitation of JPEG {{in this regard is}} its non-overlapped 8×8 block transform structure. More modern designs such as JPEG 2000 and JPEG XR exhibit a more <b>graceful</b> <b>degradation</b> of quality as the bit usage decreases– by using transforms with a larger spatial extent for the lower frequency coefficients and by using overlapping transform basis functions.|$|E
2500|$|The DoD NetOps Community {{strives to}} obtain common {{visibility}} of network resources {{so that these}} can be manage, anticipate and mitigate problems, ensuring uninterrupted availability and protection of the GIG and provide for <b>graceful</b> <b>degradation,</b> self-healing, failover, diversity, and elimination of critical failure points. [...] Through effective visibility, the NetOps community endeavors to attain the three goals of NetOps: Assured System and Network Availability, Assured Information Protection and Assured Information Delivery.|$|E
5000|$|The {{strategy}} is an {{evolution of a}} previous web design strategy known as <b>graceful</b> <b>degradation,</b> wherein designers would create Web pages for the latest browsers that would also work well in older versions of browser software. <b>Graceful</b> <b>degradation</b> was supposed to allow the page to [...] "degrade", or remain presentable even if certain technologies assumed by the design were not present, without being jarring to the user of such older software. In practice, <b>graceful</b> <b>degradation</b> has been supplanted by an attitude that the end user should [...] "just upgrade".|$|E
25|$|In general, <b>graceful</b> {{security}} <b>degradation</b> for {{the sake}} of interoperability is difficult to carry out in a way that cannot be exploited. This is challenging especially in domains where fragmentation is high.|$|R
50|$|POODLE exemplifies a {{vulnerability}} that succeeds {{thanks to}} a mechanism designed for reducing security {{for the sake of}} interoperability. When designing systems in domains with high levels of fragmentation, then, extra care is appropriate. In such domains <b>graceful</b> security <b>degradation</b> may become common.|$|R
40|$|Dynamic power {{management}} is a design methodology aiming at controlling performance and power levels of digital circuits and systems, {{with the goal}} of extending the autonomous operation time of battery-powered systems, providing <b>graceful</b> performance <b>degradation</b> when supply energy is limited, and adapting power dissipation to satisfy environmental constraints. We surve...|$|R
50|$|Some web {{developers}} have been promoting <b>graceful</b> <b>degradation</b> since 1994.|$|E
50|$|JSF 2 {{includes}} {{support for}} <b>graceful</b> <b>degradation</b> when JavaScript is disabled in the browser.|$|E
5000|$|<b>Graceful</b> <b>degradation,</b> {{where the}} product is {{designed}} to allow recovery from exceptional events without intervention by technical support staff ...|$|E
40|$|Picture {{archiving}} {{and communication}} systems (PACS) have {{to handle a}} lot of moving or still images services with different resolution levels (HDTV-like, TV-like and lower resolutions), quality requirements (from acceptable visual quality to lossless) and different priorities. In this paper we present a new system for the integration of hierarchical images transmission in a broadband network based on the DQDB protocol (IEEE 802. 6 standard). This system {{is based on the}} combination of two new tools. First we have designed a multiresolution/multiquality image coding scheme based on wavelet transforms. The main original feature of the algorithm is that it allows a multiresolution lossless access to images. A greater compression ration is possible at the price of <b>graceful</b> <b>degradations.</b> Secondly, we have implemented an improved priority mecanism in the DQDB protocol. The aim was that, in case of network overload, the emissions lose quality but are always maintained. A simulation of the impleme [...] ...|$|R
40|$|This paper {{proposes a}} line-based semi-analog {{transmission}} scheme (Line-Cast) for satellite image broadcasting. At the transmitter, an image is compressed and transmitted line by line. Therefore, {{it is much}} beneficial to satellite applications with low onboard memories. The low delay feature also makes it possible that once a line is acquired, it can be readily coded and transmitted. Moreover, a distributed source coding based on an analog modulo-q operation is employed to exploit inter-line correlations and shift the complexity from transmitters to receivers, which accommodates the low encoder complexity requirement for onboard image compression. To accommodate receivers with diverse channel qualities, the proposed Line-Cast adopts a semi-analog approach, which can achieve <b>graceful</b> <b>degradations</b> with increasing noises. Despite low encoder complexity, simulation results show that Line-Cast can achieve comparable or even better performances than Softcast, one state-of-the-art analog scheme for broadcast channels. Index Terms — image transmission, broadcast, satellite images, distributed source coding 1...|$|R
40|$|Submitted for publication. Please do not distribute. Although device scaling {{has been}} {{providing}} steady increases in processor performance, {{it has also}} led to higher processor hard error failure rates. Increased power densities (and resultant temperatures) and other effects of scaling are predicted to cause significant lifetime reliability problems in the near future. In this paper, we examine microarchitectural design time enhancements for processor reliability. Specifically, we study two techniques which introduce structural redundancy into the processor for reliability enhancement. First, in structural duplication, redundant microarchitectural structures {{are added to the}} processor and designated as spares. Spare structures can be turned on when the original structure fails, increasing the processor’s lifetime. We also propose a new run-time technique, <b>graceful</b> processor <b>degradation,</b> which allows the processor to exploit existing microarchitectural redundancy by shutting down failed structures while still maintaining functionality, thereby increasing the processor’s lifetime. Our analysis shows that early design time techniques can provide significant reliability benefits, and we present guidelines for the optimal usage of these techniques by identifying situations where each is more beneficial. We show that <b>graceful</b> processor <b>degradation</b> is the superior technique when only limited performance or area resources can be sacrificed for reliability. Specifically, on average, <b>graceful</b> processor <b>degradation</b> can deliver a 39 % increase in reliability for only a 5 % loss in performance. On the other hand, for systems where reliability is more important than performance or area, structural duplication is more beneficial. Structural duplication can use a 100 % area overhead to increase processor reliability by as much as 224 % on average. 1...|$|R
50|$|A modem {{that can}} fall {{back in order}} to {{communicate}} with an older, slower modem {{is an example of}} backward compatibility, while one that can fall back in order to communicate when the line becomes noisy is an example of <b>graceful</b> <b>degradation.</b>|$|E
50|$|Browsers {{of basic}} mobile phones do not {{understand}} JavaScript or media queries, so a recommended practice {{is to create a}} basic mobile layout and use unobtrusive JavaScript and progressive enhancement for smart phones, rather than rely on <b>graceful</b> <b>degradation</b> to make a complex, image-heavy site work.|$|E
5000|$|Fail-safe, <b>graceful</b> <b>degradation,</b> and {{fault-tolerant}} design: Instruct {{the user}} to replace parts when they fail. Design {{in such a way}} that there is no single point of failure, and so that when any one part completely fails, it does not lead to catastrophic failure of the entire system.|$|E
40|$|Providing {{continuous}} video playback with <b>graceful</b> quality <b>degradation</b> over wireless channels {{is fraught}} with challenges. Video applications require stringent delay guarantees and a relatively high throughput. Wireless channels are error prone, time varying, and bandwidth limited. To improve {{the reliability of the}} wireless link, forward error correction (FEC) and automatic repeat request (ARQ) are often used. If designed for the worst channel conditions, FEC can provide constant throughput and bounded delay...|$|R
40|$|This paper {{presents}} Emμcode, {{a technique}} for masking hard faults in modern microprocessors that provides <b>graceful</b> performance <b>degradation.</b> Emμcode employs microcode traces with control flow that replace an original instruction once a fault is detected. Emμcode adds lightweight microarchitectural hardware {{to assist in}} correcting hard faults in larger structures, such as SIMD execution units found in contemporary microprocessors, where replication is infeasible. Key challenges in implementing microcode traces include maintaining proper architectural state and the optimization of trace code. We are able to significantly optimize traces by exploiting dynamic trace behavior and by performing minor modifications to the microarchitecture. We find that removing hard to predict branches is important for optimizing traces. Emμcode uses partial predication, new microcode operations, and the full use of the microcode’s flexibility and visibility to create fast traces. This paper studies the viability of implementing SIMD floating point arithmetic operations found in modern x 86 processors using Emμcode traces. Our results show that for programs with 1 to 5 percent of the dynamic instructions replaced by Emμcode, a <b>graceful</b> performance <b>degradation</b> of only 1. 3 x to 4 x is achievable. 1...|$|R
40|$|One of the envisioned {{advantages}} of {{scalable video coding}} is its inherent suitability for achieving unequal error protection (UEP). UEP can be effectively used for <b>graceful</b> quality <b>degradation</b> under harsh network conditions. The Digital Video Broadcasting (DVB) organization recently introduced second generations of broadcast transmission technologies like DVB-T 2 and DVB-S 2. These technologies, due to the newly introduced and advanced tools, ensure better quality of service compared to their respective first generation counterparts. Among the important tools that directly {{affect the quality of}} service positively in these emerging technologies is the new physical layer-chained forward error correction coding. In both cases, the chained codes comprise of a Bose-Chaudhuri-Hocquenghem (BCH) code, which functions as the outer code, followed by a Low-Density Parity Check (LDPC) code as the inner code. To allow for improved <b>graceful</b> quality <b>degradation</b> in the second generation DVB broadcast technologies, this article proposes a novel method to extend deployed LDPC codes. This code extension enables the implementation of UEP schemes in an effective manner in these DVB broadcast systems. Furthermore, the proposed solution is backward compatible to legacy receivers. The performance evaluation of the proposed method is supported by results, obtained through simulations. Keywords — LDPC, DVB-T 2, DVB-S 2, SVC, UEP 1...|$|R
50|$|Externally, such {{a machine}} {{maintains}} the same appearance to the user, appearing to function properly. Internally, the machine slowly weakens over time. Eventually, unable {{to withstand the}} stress, it breaks down. Compared to <b>graceful</b> <b>degradation,</b> the operational quality does not decrease at all, but the breakdown {{may be just as}} sudden.|$|E
50|$|The {{basic idea}} {{is to use a}} lot of small {{actuation}} elements, so that a fault of one element has only a minor effect on the overall system. This way, a High Redundancy Actuator can remain functional even after several elements are at fault. This property is also called <b>graceful</b> <b>degradation.</b>|$|E
50|$|The HRA is an {{important}} new approach within the overall area of fault-tolerant control,using concepts of reliability engineering on a mechanical level. When applicable, it can provide actuators that have <b>graceful</b> <b>degradation,</b> and that continue to operate at close to nominal performance even {{in the presence of}} multiple faults in the actuator elements.|$|E
40|$|A {{methodology}} for improved power controller switching in mobile Body Area Networks operating within the ambient healthcare environment is proposed. The work extends Anti-windup and Bumpless transfer results {{to provide a}} solution to the ambulatory networking problem that ensures sufficient biometric data can always be regenerated at the base station. The solution thereby guarantees satisfactory quality of service for healthcare providers. Compensation is provided for the nonlinear hardware constraints that are a typical feature of the type of network under consideration and <b>graceful</b> performance <b>degradation</b> in the face of hardware output power saturation is demonstrated, thus conserving network energy in an optimal fashion...|$|R
40|$|The {{functionality}} and {{the performance}} of smart environment applications can be hampered by faults. Fault tolerance solutions aim to achieve <b>graceful</b> performance <b>degradation</b> in the presence of faults, ideally without leading to application failures. This is a reactive approach and, by itself, gives little flexibility and time for preventing potential failures. We propose a proactive fault-prevention framework, which predicts potential low-level hardware, software and network faults and tries to prevent them via dynamic adaptation. We envision that the proposed framework will provide better control over performance degradation of smart environment applications, increased reliability and availability, and a reduced number of manual user interventions...|$|R
5000|$|... iLBC handles lost frames through <b>graceful</b> {{speech quality}} <b>degradation.</b> Lost frames often occur in {{connection}} with lost or delayed IP packets. Ordinary low-bitrate codecs exploit dependencies between speech frames, which cause errors to propagate when packets are lost or delayed. In contrast, iLBC-encoded speech frames are independent and so this problem will not occur.|$|R
5000|$|A {{system that}} is {{designed}} to experience <b>graceful</b> <b>degradation,</b> or to fail soft (used in computing, similar to [...] "fail safe") operates at a reduced level of performance after some component failures. For example, a building may operate lighting at reduced levels and elevators at reduced speeds if grid power fails, rather than either trapping people in the dark completely or continuing to operate at full power. In computing an example of <b>graceful</b> <b>degradation</b> is that if insufficient network bandwidth is available to stream an online video, a lower-resolution version might be streamed in place of the high-resolution version. Progressive enhancement is an example in computing, where web pages are available in a basic functional format for older, small-screen, or limited-capability web browsers, but in an enhanced version for browsers capable of handling additional technologies or that have a larger display available.|$|E
50|$|DOM Scripting Task Force: Focused on {{interoperable}} client-side scripting, through explaining {{and promoting}} the DOM standards from W3C and the ECMAScript Standard, and concepts like progressive enhancement, <b>graceful</b> <b>degradation</b> and unobtrusive scripting. These best practice approaches {{have been called}} DOM scripting to differentiate them from earlier perceived bad uses of DHTML. The task force became inactive before the group disbanded.|$|E
5000|$|... "Mobile first", {{unobtrusive}} JavaScript, {{and progressive}} enhancement are related concepts that predate RWD. Browsers of basic mobile phones {{do not understand}} JavaScript or media queries, so a recommended practice {{is to create a}} basic web site and enhance it for smart phones and PCs, rather than rely on <b>graceful</b> <b>degradation</b> to make a complex, image-heavy site work on mobile phones.|$|E
40|$|We {{introduce}} Egalitarian Paxos, a new distributed con-sensus algorithm that achieves three goals: (1) optimal commit latency in the wide-area when tolerating {{one and two}} failures, under realistic conditions; (2) {{uniform load}} balancing across all replicas (thus achieving high through-put); and (3) <b>graceful</b> performance <b>degradation</b> and unin-terrupted availability when replicas are slow or crash. 1 Problem Statement Distributed computing today places two main demands on replication protocols: (1) high throughput for replica-tion inside a computing cluster and (2) low latency for replication across data centers. Today’s clusters use fault-tolerant, highly available coordination engines such as Chubby [2], Boxwood [6], or ZooKeeper [5] for activi...|$|R
40|$|Abstract. In this paper, {{fault-tolerant}} {{feature of}} TOPAS parallel programming environment for distributed systems is presented. TOPAS automatically analyzes data dependence among tasks and synchronizes data, which reduces {{the time needed}} for parallel program developments. TOPAS also provides supports for scheduling, load balancing and fault tolerance. The main topics {{of this paper is}} to present the solution for transparent recovery of asynchronous distributed computation on clusters of workstations without hardware spare when a fault occurs on a node. Experiments show simplicity and efficiency of parallel programming in TOPAS environment with fault-tolerant integration, which provides <b>graceful</b> performance <b>degradation</b> and quick reconfiguration time for application recovery. 1...|$|R
40|$|<b>Graceful</b> {{performance}} <b>degradation</b> during overload condi-tions is {{the primary}} objective of soft real-time systems. Util-ity accrual soft real-time scheduling algorithms allow speci-cation of highly customized temporal system behavior dur-ing overload. Such algorithms are typically found in real-time supervisory systems where signicant run-time uncer-tainty exists. This paper outlines an investigation of sev-eral utility accrual scheduling algorithms implemented in a Real-Time Java (RTJ) environment. These alternate sched-ulers are constructed, tested, and evaluated under the MIT FLEX/RTJ Compiler Infrastructure. The scheduling frame-work for this environment and its associated scheduling prim-itives are described and the corresponding performance char-acteristics are proled. Furthermore, we outline the archi-tecture of an experimental distributed Real-time Java sched-uler...|$|R
5000|$|Partition Aware. A {{failure of}} the network may {{partition}} the filesystem into two or more groups of nodes that can only see the nodes in their group. This can be detected through a heartbeat protocol, and when a partition occurs, the filesystem remains live for the largest partition formed. This offers a <b>graceful</b> <b>degradation</b> of the filesystem — some machines will remain working.|$|E
50|$|Bit-stream {{scalability}} {{for video}} is a desirable feature for many multimedia applications. The need for scalability arises from <b>graceful</b> <b>degradation</b> transmission requirements, or adaptation needs for spatial formats, bit rates or power. To fulfill these requirements, it is beneficial that video is simultaneously transmitted or stored {{with a variety}} of spatial or temporal resolutions or qualities which is the purpose of video bit-stream scalability.|$|E
50|$|Hierarchical {{modulation}} {{is particularly}} used {{to mitigate the}} cliff effect in digital television broadcast, particularly mobile TV, by providing a (lower quality) fallback signal in case of weak signals, allowing <b>graceful</b> <b>degradation</b> instead of complete signal loss. It has been widely proven and included in various standards, such as DVB-T, MediaFLO, UMB (Ultra Mobile Broadband, a new 3.5th generation mobile network standard developed by 3GPP2), and is under study for DVB-H.|$|E
40|$|In this paper, a power-scalable H. 264 {{encoding}} {{system is}} provided with the efforts on both the algorithm and the architecture levels. For a start, a Motion Estimation (ME) preskip algorithm is adopted as a system-level power-scalable algorithm. In order to realize a dedicated hardware, a novel reconfigurable Macro-Block (MB) pipelining architecture is proposed. It can improve not only system flexibility but also hardware efficiency. Besides, it is also beneficial for power management with module-level gated clock insertion. According to simulation results, the proposed H. 264 encoder can support power-scalable functionality {{in the range of}} about 20 to 90 mW with <b>graceful</b> quality <b>degradation.</b> 1...|$|R
40|$|This paper {{proposes a}} {{methodology}} for improved power controller switching in mobile Body Area Networks operating within the ambient healthcare environment. The work extends Anti-windup and Bumpless transfer results {{to provide a}} solution to the ambulatory networking problem that ensures sufficient biometric data can always be regenerated at the base station. The solution thereby guarantees satisfactory quality of service for healthcare providers. Compensation is provided for the nonlinear hardware constraints that are a typical feature of the type of network under consideration and <b>graceful</b> performance <b>degradation</b> in the face of hardware output power saturation is demonstrated, thus conserving network energy in an optimal fashion...|$|R
40|$|Abstract — An unequal error {{protection}} {{approach for}} the reliable communication of visual information over additive white Gaussian noise channels is proposed and studied. This method relies on a bandwidth-efficient coded modulation scheme that employs selective channel coding and transmission energy allocation in conjunction with sequence maximum a posteriori soft-decision detection. Experimental results indicate that this scheme exhibits <b>graceful</b> performance <b>degradation</b> as the channel conditions deteriorate and provides substantial objective and subjective improvements over uncoded and equal-error protection systems. Coding gains of up to 4 dB in Eb=N 0 are achieved. Index Terms — Image/video communication, MAP detection, transmission energy allocation, trellis-coded modulation, {{unequal error protection}}. Fig. 1. Block diagram of the proposed UEP trellis coding system. I...|$|R
