1304|519|Public
25|$|Support for {{wireless}} networks {{is built}} into the network stack itself, and does not emulate wired connections, {{as was the case with}} previous versions of Windows. This allows implementation of wireless-specific features such as larger frame sizes and optimized <b>error</b> <b>recovery</b> procedures. Windows Vista uses various techniques like Receive Window Auto-scaling, Explicit Congestion Notification, TCP Chimney offload and Compound TCP to improve networking performance. Quality of Service (QoS) policies can be used to prioritize network traffic, with traffic shaping available to all applications, even those that do not explicitly use QoS APIs. Windows Vista includes in-built support for peer-to-peer networks and SMB 2.0. For improved network security, Windows Vista supports for 256-bit and 384-bit Diffie-Hellman (DH) algorithms, as well as for 128-bit, 192-bit and 256-bit Advanced Encryption Standard (AES) is included in the network stack itself, while integrating IPsec with Windows Firewall.|$|E
2500|$|... <b>error</b> <b>recovery</b> {{including}} system fault-protection {{monitoring and}} response ...|$|E
2500|$|Like EIA-608 bits are {{transmitted}} {{in the order}} of LSB to MSB with odd parity coding of 7-bit character codes. [...] However unlike EIA-608, the digital DVB version is transmitted the same way. [...] For single bit <b>error</b> <b>recovery</b> during transmission, the packet address (page row and magazine numbers) and header bytes [...] (page number, subtitle flag, etc.) use hamming code 8/4 with extended packets (header extensions) using hamming 24/18, which basically doubles the bits used.|$|E
40|$|The LTR design problem {{using an}} JC {{optimality}} criterion is presented for {{two types of}} <b>recovery</b> <b>errors,</b> the sensitivity <b>recovery</b> <b>error</b> and the input-output <b>recovery</b> <b>error.</b> For both errors two different approaches are presented. First, following the classical LTR design philosophy, a Luenberger observer based approach is proposed, where the Z part of the controller is appended to a standard full-order observer. Second, allowing for general controllers, an JC state-space problem is formulated directly from the <b>recovery</b> <b>errors.</b> Both approaches lead to controller orders of at most 2 n. In the minimum phase case, though, {{the order of the}} controllers can be reduced to n in all cases. The control problems corresponding to the various controller types are given as four different singular state-space problems, and the solutions are given in terms of the relevant equations and inequalities...|$|R
40|$|Sericin, {{one of the}} proteineous {{constituents}} of raw silk, was extracted with water in an autoclave at a pressure of 15 lbs., and divided into two fractions, sericin B and Sericin A. The former was insoluble in water at pH 4. 0, the latter was soluble in water at pH 4. 0, but insoluble in concentrated alcohol. Although these two fractions were different in appearance and physical properties, 2 ̆ 7 they seemed to the identical with amino acids content within the limit of experimental <b>errors.</b> <b>Recovery</b> of total nitrogen as amino acid was about 70...|$|R
40|$|A {{general and}} concise {{formulation}} is given {{of the loop}} transfer recovery (LTR) design problem based on <b>recovery</b> <b>errors.</b> Three types of <b>recovery</b> <b>errors</b> are treated: open loop recovery, sensitivity recovery and input-output <b>recovery</b> <b>errors.</b> The three corresponding versions of the asymptotic recovery problem tum out to be equivalent, since the minimization of the <b>recovery</b> <b>errors</b> all amount to the minimization of a certain matrix, the recovery matrix. Using the <b>recovery</b> <b>error</b> definitions, simple necessary and sufficient conditions for the controllers are derived both for the exact and asymptotic recovery cases. This general recovery formulation covers all known observer based compensator types as special cases. The conditions given in this setting are effectively the aim of all known LTR design methods. The recovery formulation is interpreted {{in terms of a}} model-matching problem as well, which is examined by means of the Q-parametrization. It is shown how the general controller obtained by the Q-parametrization can be written as a Luenberger observer based controller. In all cases, n controller states suffice to achieve recovery. The compensators are characterized for errors both on the input- and on the output-node (dual case). I...|$|R
5000|$|Frequently, a RAID {{controller}} is configured to [...] "drop" [...] {{a component}} drive (that is, {{to assume a}} component drive has failed) if the drive has been unresponsive for eight seconds or so; this might cause the array controller to drop a good drive because that drive has not been given enough time to complete its internal <b>error</b> <b>recovery</b> procedure. Consequently, using RAID for consumer-marketed drives can be risky, and so-called [...] "enterprise class" [...] drives limit this <b>error</b> <b>recovery</b> time to reduce risk. Western Digital's desktop drives {{used to have a}} specific fix. A utility called WDTLER.exe limited a drive's <b>error</b> <b>recovery</b> time. The utility enabled TLER (time limited <b>error</b> <b>recovery),</b> which limits the <b>error</b> <b>recovery</b> time to seven seconds. Around September 2009, Western Digital disabled this feature in their desktop drives (e.g. the Caviar Black line), making such drives unsuitable for use in RAID configurations. However, Western Digital enterprise class drives are shipped from the factory with TLER enabled. Similar technologies are used by Seagate, Samsung, and Hitachi. Of course, for non-RAID usage, an enterprise class drive with a short <b>error</b> <b>recovery</b> timeout that cannot be changed is therefore less suitable than a desktop drive. In late 2010, the Smartmontools program began supporting the configuration of ATA <b>Error</b> <b>Recovery</b> Control, allowing the tool to configure many desktop class hard drives for use in RAID setups.|$|E
5000|$|... <b>error</b> <b>recovery</b> {{including}} system fault-protection {{monitoring and}} response ...|$|E
5000|$|... #Subtitle level 2: Western Digital Time Limit <b>Error</b> <b>Recovery</b> Utility ...|$|E
40|$|Abstract — This paper {{proposes a}} novel {{technique}} to alleviate cost of timing <b>errors</b> <b>recovery,</b> building upon lock-step execution of SIMD (single instruction multiple data) architectures. To support spatial memoization {{at the level}} of instruction, we propose a SSMW (Single Strong lane, Multiple Weak lanes) architecture. Spatial memoization exploits value locality inside parallel programs, memoizes result of error-free execution of an instruction on the SS lane, and concurrently reuses it to spatially correct errant instructions across MW lanes. Experimental results on TSMC 45 -nm technology confirm this technique avoids the recovery for 62 % of the errant instructions on average, for both error-tolerant and error-intolerant general-purpose applications...|$|R
30|$|As noted above, these signal {{recovery}} {{problems have}} different characters, {{with the first}} being more suitable for the filter class considered here, but the second problem is of considerable practical significance. Two performance measures are considered for both problems: the root-mean-square <b>recovery</b> <b>error</b> (RMSE) is more widely used, but may be less appropriate than the mean absolute <b>recovery</b> <b>error</b> (MAE) {{in the presence of}} impulsive noise.|$|R
40|$|Active {{triangulation}} measurement {{systems with}} a rigid geometric configuration are inappropriate tor scanning large objects with low measuring tolerances. The {{reason is that}} the ratio between the depth <b>recovery</b> <b>error</b> and the lateral extension is a constant that depends on the geometric setup. As a consequence, measuring large areas with low depth <b>recovery</b> <b>error</b> requires the use of multiresolution techniques. We propose a multiresolution technique based on a camera-projector system previously calibrated. The method consists of changing the camera or projector's parameters in order to increase the system depth sensitivity A subpixel retroprojection error in the self-calibration process and a decrease of approximately one order of magnitude in the depth <b>recovery</b> <b>error</b> can be achieved using the proposed method...|$|R
50|$|SVS {{expands the}} size of the <b>Error</b> <b>Recovery</b> Procedure (ERP) {{transient}} area.|$|E
5000|$|Just like <b>Error</b> <b>Recovery,</b> {{multiple}} sessions/connections {{support is}} an advanced field in iSCSI protocol.|$|E
5000|$|Programs can {{specify the}} type of <b>error</b> <b>recovery</b> {{to be used in}} case of input/output errors.|$|E
50|$|The FC-PH {{standard}} defines three time-out values {{used for}} <b>error</b> detection and <b>recovery</b> in Fibre Channel protocol.|$|R
3000|$|Before {{estimating}} the <b>recovery</b> <b>error</b> and its upper bound, we first introduce the restricted isometry property (RIP): [...]...|$|R
40|$|The authors {{consider}} {{the design of}} controllers for the recovery of target loop transfer function or sensitivity and complementary sensitivity functions for general nonminimum phase discrete time systems. The necessary design constraints and the available design freedom are reviewed. In view of the available freedom, possible specifications on the eigenstructure of the observer dynamic matrix are formulated. Three different types of controllers which are respectively based on prediction, current, and reduced-order estimators are considered. For {{each one of those}} controllers, three different design techniques are developed. The first one is an eigenstructure assignment scheme, while the other two are optimization-based designs. The eigenstructure assignment method yields a controller design which achieves any chosen <b>recovery</b> <b>error</b> matrix among a set of admissible <b>recovery</b> <b>error</b> matrices. On the other hand, one of the optimization-based design methods leads to a controller that achieves a <b>recovery</b> <b>error</b> matrix having the infimum H-infinity norm, while the other does the same except it achieves a <b>recovery</b> <b>error</b> matrix having the infimum H 2 norm...|$|R
5000|$|Allows {{adding a}} {{variable}} amount of redundancy for much better <b>error</b> <b>recovery.</b> See also RAR (file format).|$|E
50|$|In computing, '''''' was a {{primitive}} filesystem <b>error</b> <b>recovery</b> utility included in MS-DOS / IBM PC DOS versions prior to DOS 6.0.|$|E
5000|$|Over time {{a number}} of path control, {{diagnostic}} and/or <b>error</b> <b>recovery</b> CCWs were implemented on one or more storage controls. For example: ...|$|E
40|$|In this work, we {{characterize}} {{a significant}} source of software derating that we call instruction-level derating. Instruction-level derating encompasses the mechanisms by which computation on incorrect values can result in correct computation. We characterize the instruction-level derating that occurs in the SPEC CPU 2000 INT benchmarks, classifying it (by source) into six categories: value comparison, sub-word operations, logical operations, overflow/precision, lucky loads, and dynamically-dead values. We also characterize the temporal nature of this derating, demonstrating that the effects of a fault persist in architectural state long after the last time they are referenced. Finally, we demonstrate how this characterization can be used to avoid unnecessary <b>error</b> <b>recoveries</b> (when a fault will be masked by software anyway) {{in the context of a}} dual modular redundant (DMR) architecture...|$|R
5000|$|Multi-function formats can concatenate, compress, encrypt, create <b>error</b> {{detection}} and <b>recovery</b> information, and package the archive into self-extracting and self-expanding files.|$|R
40|$|This paper {{considers}} {{the design of}} loop transfer recovery (LTR) controller for sampled-data systems. The LTR design problem is formulated by using the 2 x 2 setup formulation. Following the standard LTR theory, the dierence between the target loop and the full-loop is dened as the <b>recovery</b> <b>error,</b> which {{is equal to the}} target loop multiplied by the recovery matrix. The minimization of the <b>recovery</b> <b>error</b> is derived by using H 2 and H 1 designs...|$|R
50|$|Later <b>error</b> <b>recovery</b> {{systems would}} provide for specifying errors {{explicitly}} {{as opposed to}} by {{the position of the}} parameter on the STXIT macro.|$|E
50|$|When <b>error</b> <b>recovery</b> {{occurs at}} the {{receiving}} end of the signal, it is receiver-based. These techniques focus on correcting corrupted or missing data.|$|E
50|$|Protection of SIP {{signaling}} {{with integrity}} and confidentiality support based on initial authentication and symmetric cryptographic keys; <b>error</b> <b>recovery</b> and verification are also needed.|$|E
50|$|Datagram mode is connectionless; the {{application}} {{is responsible for}} <b>error</b> detection and <b>recovery.</b> In NBT, the datagram service runs on UDP port 138.|$|R
5000|$|Session mode lets two {{computers}} {{establish a}} connection for a [...] "conversation", allows larger messages to be handled, and provides <b>error</b> detection and <b>recovery.</b>|$|R
40|$|We {{consider}} the mixed regression problem with two components, under adversarial and stochastic noise. We give a convex optimization formulation that provably recovers the true solution, and pro-vide upper bounds on the <b>recovery</b> <b>errors</b> for both arbitrary noise and stochastic noise settings. We also give matching minimax lower bounds (up to log factors), showing that under certain assump-tions, our algorithm is information-theoretically optimal. Our results represent the first tractable algorithm guaranteeing successful recovery with tight bounds on <b>recovery</b> <b>errors</b> and sample com-plexity. 1...|$|R
50|$|The {{opportunity}} for <b>error</b> <b>recovery</b> {{must also be}} considered as this, if achieved, has the potential to drastically reduce error probability for a task.|$|E
5000|$|A small {{resident}} monitor which handles disk input/output, <b>error</b> <b>recovery,</b> and job-to-job transition, {{and loads}} programs {{to be executed}} from the core-image library on disk.|$|E
5000|$|... lzip: another LZMA {{implementation}} {{mostly for}} Unix-like systems {{to be directly}} competing with xz. It mainly features a simpler file format and therefore easier <b>error</b> <b>recovery.</b>|$|E
40|$|This paper {{demonstrates}} a methodology to model {{and evaluate the}} fault tolerance characteristics of operational software. The methodology is illustrated through case studies on three different operating systems: the Tandem GUARDIAN fault-tolerant system, the VAX/VMS distributed system, and the IBM/MVS system. Measurements are made on these systems for substantial periods to collect software <b>error</b> and <b>recovery</b> data. In addition to investigating basic dependability characteristics such as major software problems and error distributions, we develop two levels of models to describe <b>error</b> and <b>recovery</b> processes inside an operating system and on multiple instances of an operating system running in a distributed environment. Based on the models, reward analysis is conducted to evaluate the loss of service due to software errors {{and the effect of}} the fault-tolerance techniques implemented in the systems. Software error correlation in multicomputer systems is also investigated...|$|R
3000|$|... varying between 2 and 128, the {{low-rank}} <b>recovery</b> <b>error</b> varies between 0.031 and 0.036 and {{the atom}} recovery rates stay between 95 and 96 %.|$|R
3000|$|So {{once the}} sharp {{constant}} in inequality (7) is found, we immediately know {{the value of}} the <b>error</b> of optimal <b>recovery</b> of the operator [...]...|$|R
