1|3520|Public
50|$|<b>Digital</b> <b>Component</b> <b>Technology</b> (DCT) and Data Storage Technology (DST) are VTR {{and data}} storage devices respectively, created by Ampex in 1992. Both {{were similar to}} the D1 and D2 VTR formats, using a 19 mm (3/4") width, with the DCT format using DCT (discrete cosine transform) video compression, also its namesake.|$|E
40|$|A {{major goal}} of the Digital Systems Technology Branch at the NASA Lewis Research Center is to {{identify}} and develop critical <b>digital</b> <b>components</b> and <b>technologies</b> that either enable new commercial missions or significantly enhance the performance, cost efficiency, and/or reliability of existing and planned space communications systems. NASA envisions a need for low-data-rate, interactive, direct-to-the-user communications services for data, voice, facsimile, and video conferencing. The network would provide enhanced very-small-aperture terminal (VSAT) communications services and be capable of handling data rates of 64 kbps through 2. 048 Mbps in 64 -kbps increments. Efforts have concentrated heavily on the space segment; however, the ground segment has been considered concurrently to ensure cost efficiency and realistic operational constraints. The focus of current space segment developments is a flexible, high-throughput, fault-tolerant onboard information-switching processor (ISP) for a geostationary satellite communications network. The Digital Systems Technology Branch is investigating both circuit and packet architectures for the ISP. Destination-directed, packet-switched architectures for geostationary communications satellites are addressed...|$|R
40|$|Recent {{advances}} in fiber optic <b>component</b> <b>technology</b> and <b>digital</b> processing <b>components</b> have enabled {{the development of}} a new 3 D vision system based upon a fiber optic FMCW coherent laser radar. The approach includes a compact scanner with no moving parts capable of randomly addressing all pixels. The system maintains the immunity to lighting and surface shading conditions which is characteristic of coherent laser radar. The random pixel addressability allows concentration of scanning and processing on the active areas of a scene, as is done by the human eye-brain system...|$|R
5000|$|... <b>Digital</b> <b>Components</b> - new wheels - new interior-new modern {{dashboard}} ...|$|R
5000|$|Powered digital (Test the {{operation}} of <b>digital</b> <b>components</b> and Boundary scan devices) ...|$|R
40|$|A {{hybrid system}} {{is one in}} which <b>digital</b> <b>{{components}}</b> and analog components interact. Typical examples of hybrid systems are real-time process-control systems such as automated factories or automated trans portation systems, in which the <b>digital</b> <b>components</b> monitor and control continuous physical processes in the analog components. The computer science community has developed formal models and methods fo...|$|R
40|$|Object {{technology}} is evolving into component based industry. This paper shows {{how to achieve}} software reuse by using <b>component</b> <b>technology.</b> Basic ideas of <b>component</b> <b>technology</b> are shown and two well-known models, COREA and DCOM, are described. It also shows how distributed object models support interface and implementation reuse. The advantages and disadvantages are indicated too. <b>Component</b> <b>technology</b> is mature enough and ready for practical use {{and there is a}} huge potential of <b>component</b> <b>technology</b> to offer substantial benefits in software development process...|$|R
40|$|To {{increase}} {{the efficiency and}} be more competitive, companies wants to decrease the time-to-market. <b>Component</b> <b>technology</b> has gained more and more focus in software engineering because of its success. The reusability the <b>component</b> <b>technology</b> provides makes the software development faster and more cost effective. This document investigates how the component based software engineering {{can be adapted to}} real time systems to make the development of such systems more efficient. On the market today there is a number of different <b>Component</b> <b>technologies</b> and a few solutions on a Real time <b>component</b> <b>technology</b> also exists. Microsoft. Net and OMG:s CORBA are <b>component</b> <b>technologies</b> that might be useful when developing real time systems. In this document we will describe these technologies and discuss the advantages and disadvantages and also make a comparison between these <b>component</b> <b>technologies</b> with the focus on development of real time systems. [1 / 26...|$|R
50|$|Boolean {{circuits}} {{provide a}} model for many <b>digital</b> <b>components</b> used in computer engineering, including multiplexers, adders, and arithmetic logic units.|$|R
40|$|Software <b>component</b> <b>technologies</b> {{have not}} yet been {{generally}} accepted by embedded-systems industries. In order to better understand why this is the case, we present a set of requirements, based on industrial needs, that are deemed decisive for introducing a <b>component</b> <b>technology.</b> The requirements we present can be used to evaluate existing <b>component</b> <b>technologies</b> before introducing them in an industrial context. They {{can also be used to}} guide modifications and/or extensions to <b>component</b> <b>technologies,</b> to make them better suited for industrial deployment. One of our findings is that a major source of requirements is non-technical in its nature. For a <b>component</b> <b>technology</b> to become a viable solution in an industrial context, its impact on the overall development process needs to be addressed. This includes issues like component life-cycle management, and support for the ability to gradually migrate into the new technology...|$|R
50|$|His work {{tracking}} the <b>digital</b> <b>component</b> {{of the ongoing}} Syrian Civil War is featured in the book Black Code: Inside the Battle for Cyberspace.|$|R
40|$|An {{overview}} of structures technology for future aerospace systems is given. Discussion focuses on developments in <b>component</b> <b>technologies</b> {{that will improve}} the vehicle performance, advance the technology exploitation process, and reduce system life-cycle costs. The <b>component</b> <b>technologies</b> described are smart materials and structures, multifunctional materials and structures, affordable composite structures, extreme environment structures, flexible load bearing structures, and computational methods and simulation-based design. The trends {{in each of the}} <b>component</b> <b>technologies</b> are discussed and the applicability of these technologies to future aerospace vehicles is described...|$|R
5000|$|Xspice is an {{extension}} to Spice3 that provides additional C language code models to support analog behavioral modeling and co-simulation of <b>digital</b> <b>components</b> through a fast event-driven algorithm.|$|R
50|$|<b>Digital</b> <b>component</b> {{video is}} defined by ITU-R BT.601 (formerly CCIR 601) {{standard}} and uses the Y'CbCr colorspace. Like Analog Component Video it gets {{its name from the}} fact that the video signal has been split into two or more components, that are then carried on multiple conductors between devices. <b>Digital</b> <b>component</b> video is slowly becoming popular in both computer and home-theatre applications. Component video is capable of carrying signals such as 480i, 480p, 576i, 576p, 720p, 1080i and 1080p, although many TVs do not support 1080p through component video.|$|R
40|$|Given the {{technological}} {{progress in the}} fields of <b>digital</b> <b>components</b> and Information <b>Technology</b> within substations, new generations of instrument transformers with digital output, known as Non Conventional Instrument Transformers (NCIT) and/or Electronic Instrument transformers (EIT) are now becoming attractive for large scale application. These devices (both primary sensors & digital interfaces), which are typically very compact, have already been analysed & described by a WG of SC A 3 (publication imminent). However, even though digital communication methods are being used more often for new substations and for the modernisation of existing installations, the interface between high voltage equipment and low voltage equipment (so called " 0 / 1 interface") remains predominantly classical (100 V/âˆš 3, 1 or 5 A). To promote digital communication for this " 0 / 1 interface " and to obtain all the advantages of Information Technology, the development of a "Stand Alone Merging Unit " (SAMU) is under widespread consideration. This new equipment is an essential tool to enable the use of classical magnetic ITs alongside NCITs in the same substation; an essential consideration for the refurbishment of existing substations. The ability to mix conventional & non-conventional devices will also tend to accelerate the development of EITs with digital interfaces. The use of digital output for ITs (magnetic or electronic) requires development & adaptation of the accuracy testing procedures and the development of appropriate methods for in-factory and on-site calibration which may become more frequent with the deregulation of electric power companies. The redundancy of various equipment and links will also need to be considered to achieve the high reliability and availability levels required for a modern electrical network. This accuracy testing & calibration activity is the main focus of thi...|$|R
40|$|One of the {{greatest}} challenges in evaluating reliability of digital I&C systems is how to obtain better failure rate estimates of <b>digital</b> <b>components.</b> A common practice of the <b>digital</b> <b>component</b> failure rate estimation is attempting to use empirical formulae to capture the impacts of various factors on the failure rates. The applicability of an empirical formula is questionable because it is not based on laws of physics and requires good data, which is scarce in general. In this study, the concept of population variability of the Hierarchical Bayesian Method (HBM) is applied to estimating the failure rate of a <b>digital</b> <b>component</b> using available data. Markov Chain Monte Carlo (MCMC) simulation is used to implement the HBM. Results are analyzed and compared by selecting different distribution types and priors distributions. Inspired by the sensitivity calculations and based on review of analytic derivations, it seems reasonable to suggest avoiding the use of gamma distribution in two-stage Bayesian analysis and HBM analysis...|$|R
40|$|Integrated <b>Components</b> <b>Technology</b> Demonstrations (ICTD) is {{a project}} under the Ultra-Efficient Engine Technology Program (UEET) as {{designated}} in the UEET Program Commitment Agreement. The ICTD Project will provide the opportunity to conduct technology demonstration tests of advanced turbine engine components (e. g., combustor, compressor, turbine, and materials) {{as part of an}} integrated system (TRL 6). Initially, the major objectives of the Integrated <b>Components</b> <b>Technology</b> Demonstrations project are to Conduct <b>component</b> <b>technology</b> evaluation and system studies to determine, and prioritize, the most promising propulsion concepts, cycle, and architecture for a propulsion system with a Technology Availability Date of approximately 2010 and Entry Into Service of 2015. Determine the most attractive, cost-effective approaches for conducting the needed demonstration tests. Conduct demonstration tests of selected <b>component</b> <b>technologies</b> (i. e., 2200 F CMC combustor liner and aspirating seal) in partnership with industry...|$|R
40|$|An update is {{presented}} on the NASA Lewis Stirling <b>component</b> <b>technology</b> program. The <b>component</b> <b>technology</b> {{program has been}} organized {{as part of the}} NASA Lewis effort to develop Stirling converter technology for space power applications. The Stirling space power project is part of the High Capacity Power element of the NASA Civil Space Technology Initiative (CSTI). Lewis is also providing technical management of a DOE funded project to develop Stirling converter systems for distributed dish solar terrestrial power applications. The primary contractors for the space power and solar terrestrial projects develop <b>component</b> <b>technologies</b> directly related to their project goals. This Lewis <b>component</b> <b>technology</b> program, while coordinated with these main projects, is aimed at longer term issues, advanced technologies, and independent assessments. Topics to be discussed include bearings, linear alternators, controls and load interaction, materials/life assessment, and heat exchangers...|$|R
40|$|<b>Component</b> <b>technologies</b> {{are gaining}} {{acceptance}} {{in the software}} community as effective tools for quickly assembling increasingly complex systems from components. Most of the current <b>component</b> <b>technologies,</b> however, fail to help developers predict important software qualities like performance, safety, and reliability. A prediction-enabled <b>component</b> <b>technology</b> (PECT) augments the capabilities of a <b>component</b> <b>technology</b> {{with one or more}} reasoning frameworks that package quality specific analyses and the means to apply them to component-based systems. Model checking is an automated approach for exhaustively analyzing whether systems satisfy specific behavioral claims {{that can be used to}} characterize safety and reliability requirements. This technical note describes ComFoRT, a reasoning framework that packages the effectiveness of state-of-the-art model checking in a form that enables users to apply the analysis technique without being experts in its use, and its incorporation in a PECT...|$|R
50|$|The felix1.de AG Steuerberatungsgesellschaft, {{launched}} in 2014, focuses on target groups {{with a higher}} affinity for the online world and complements classical consultancy services with <b>digital</b> <b>components</b> such as online identification.|$|R
40|$|A {{hybrid system}} {{is one in}} which <b>digital</b> <b>{{components}}</b> and analog components interact. Typical examples of hybrid systems are real-time process-control systems such as automated factories or automated transportation systems, in which the <b>digital</b> <b>components</b> monitor and control continuous physical processes in the analog components. The computer science community has developed formal models and methods for reasoning about digital systems, while the control theory community has done the same for analog systems. However, systems that combine both types of activity appear to require new methods. The development and application of such methods is an active area of current research. One of th...|$|R
50|$|Mixed-signal ICs {{are more}} {{difficult}} to design and manufacture than analog-only or digital-only integrated circuits. For example, an efficient mixed-signal IC would have its <b>digital</b> and analog <b>components</b> share a common power supply. However, analog and <b>digital</b> <b>components</b> have very different power needs and consumption characteristics that make this a non-trivial goal in chip design.|$|R
50|$|The firm {{also did}} work with The Meth Project. The {{campaign}} included TV, radio, out-of-home, social and <b>digital</b> <b>components,</b> including an immersive online experience at www.MethProject.org {{in an effort}} to counter meth addiction.|$|R
5000|$|... #Caption: Schematic of a TMDS link {{used as a}} link for <b>digital</b> <b>component</b> {{video data}} (RGB) between a video {{controller}} (PC) and a display controller (Monitor) in interfaces such as DVI or HDMI ...|$|R
5000|$|PTV Mobility as a Service (MaaS) Accelerator Program (<b>component</b> <b>technologies</b> for MaaS operations) ...|$|R
50|$|Qucs {{supports}} a {{growing list of}} analog and <b>digital</b> <b>components</b> as well as SPICE sub-circuits. It is intended to be much simpler to use and handle than other circuit simulators like gEDA or PSPICE.|$|R
5000|$|The form of Yâ€²CbCr {{that was}} defined for standard-definition {{television}} {{use in the}} ITU-R BT.601 (formerly CCIR 601) standard for use with <b>digital</b> <b>component</b> video {{is derived from the}} corresponding RGB space as follows: ...|$|R
5000|$|Synchronous Objects {{uses the}} {{score of the}} Forsythe work One Flat Thing, {{reproduced}} (2000), to create data and transform the dance into choreographic objects. These objects include <b>digital</b> <b>components</b> such as the Counterpoint Tool.|$|R
40|$|Abstract. In this paper, we {{refractor}} existing mechanical model {{simulation software}} based on <b>component</b> <b>technology.</b> The original software, which was programmed by procedure-oriented method, has high coupling, poor usability and maintainability. So we redesign and develop it with object-oriented method and <b>component</b> <b>technology.</b> After refactoring, the software, with friendly interaction interface, reasonable structure and better reusability, can provide better service for users...|$|R
40|$|Abstract. Significant {{economic}} and technical benefits accrue {{from the use}} of pre-existing and commercially available software components to develop new systems. However, challenges remain that, if not adequately addressed, will slow the adoption of software <b>component</b> <b>technology.</b> Chief among these are a lack of consumer trust in the quality of components, and a lack of trust in the quality of assemblies of components without extensive and expensive testing. This paper describes prediction-enabled <b>component</b> <b>technology</b> (PECT). A PECT results from integrating <b>component</b> <b>technology</b> with analysis models. An analysis model permits analysis and prediction of assembly-level properties prior to component composition, and, perhaps, prior to component acquisition. Analysis models also identify required component properties and their certifiable descriptions. <b>Component</b> <b>technology</b> supports and enforces the assumptions underlying analysis models; it also provides the medium for deploying PECT instances and PECT-compliant software components. This paper describes the structure of PECT. It discusses the means of establishing th...|$|R
50|$|In {{his design}} for MADDIDA, Steele was {{influenced}} by the analog computer invented in 1927 by Vannevar Bush, which had <b>digital</b> <b>components.</b> Another influence was Lord Kelvin's Tide Predicting Machine, an analog computer completed in 1873.|$|R
5000|$|... #Caption: The limited {{upgraded}} variant {{known as}} the T-72BA1. The vehicle features new <b>digital</b> <b>components</b> in the fire control system but lacks any sophisticated night fighting equipment - most of the sights are Soviet-vintage active/passive devices.|$|R
40|$|Connected, {{digitised}} {{products are}} assemblages that comprise <b>digital</b> and physical <b>components</b> and {{are linked to}} digital support infrastructures. Given that re-programmability of <b>digital</b> <b>components</b> allows a product designer to adopt a design philosophy that embraces incompleteness and continuous improvement, digitised (tangible) products may also become incomplete and open-ended if such a philosophy is embraced. This research uses Tesla Model S {{as a case study}} to explore the mutability of a passenger car over time. The results show that a type of a product that has traditionally been seen as stable may become open-ended, incomplete and mutable in terms of its specifications and functionality. This brings forward the relevance of complementary architectural frames and principles to conceptualise differing design cycles among physical and <b>digital</b> <b>components</b> in innovation and product management while also...|$|R
50|$|Hybrid {{computers}} are computers that exhibit features of analog computers and digital computers. The <b>digital</b> <b>component</b> normally {{serves as the}} controller and provides logical operations, while the analog component normally serves as a solver of differential equations.|$|R
30|$|As {{described}} above, {{we discussed}} {{that the technology}} fusion approach focuses on combining existing technologies into hybrid technologies. This description, however, is not quite right {{in the sense that}} technology fusion cannot be realized without preceding disruptive innovations at the level of <b>component</b> <b>technologies.</b> In other words, technology fusion is not effective with available <b>component</b> <b>technologies</b> only. To be effective, we need to have disruptive component innovations. The existence of disruptive innovations is a necessary condition for technology fusion to be realized. Only by the realization of technology fusion, can the market need be met and the demand for disruptive <b>component</b> <b>technologies</b> articulated and pulled into the market (Kodama and Shibata, 2015).|$|R
40|$|Nearly all {{software}} organizations today {{develop and}} maintain {{more than a}} single product. This holds for organizations that develop tailored systems individually for single customers, as well as for organizations that develop products for a mass market. The products developed by an organization typically are similar applications in the same application domain. Hence, these products share some common characteristics and thus {{can be viewed as a}} software product line. To implement a product line approach in practice, special technologies are required that effectively support the identification of reusable artifacts, as well as explicit means for capturing and controlling commonalities and variabilities. The focus of the PoLITe project are product line technologies at the implementation level. PoLITe defines three categories of implementation technologies [MAL+ 02], namely configuration management, <b>component</b> <b>technologies,</b> and generative features of programming languages (including generators). This report summarizes the product line implementation aspects in the <b>component</b> <b>technology</b> dimension. The report first presents the term "component technologies" and its role in the PoLITe context, surveys the actual distribution of <b>component</b> <b>technologies</b> in practice. It then establishes a component model that facilitates the seamless integration of <b>component</b> <b>technologies</b> in a model-driven implementation process. This implementation approach is subsequently embedded in a product line implementation process. Finally, the application of the principles is illustrated by a case study using J 2 EE/Enterprise Java Beans as <b>component</b> <b>technology...</b>|$|R
