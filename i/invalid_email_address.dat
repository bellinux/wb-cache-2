1|2963|Public
30|$|Modifier Extraction. Noun phrases often contain {{adjectives}} {{modifying the}} nouns. Such modifiers {{are able to}} affect the sensitiveness of a sentence. For example, A noun phrase “Email address” describes sensitive information (email address) while another noun phrase “Invalid email address” is just a hint sentence showing that the user has typed an <b>invalid</b> <b>email</b> <b>address.</b> In this instance, the modifier “Invalid” reduces the sensitiveness of the sentence. Based on this observation, preprocessor extracts adjectives from the noun phrases and save them in the intermediate structure.|$|E
5000|$|Syntactically <b>invalid</b> <b>email</b> <b>addresses</b> used {{to poison}} a mailing list {{could be easily}} {{filtered}} out by the spammers, while using <b>email</b> <b>addresses</b> that are syntactically correct could cause problems for the mail server responsible for the <b>email</b> <b>address.</b>|$|R
5000|$|If the spammer uses a forged sender <b>email</b> <b>address</b> (<b>email</b> spoofing), {{then the}} {{innocent}} <b>email</b> <b>address</b> {{that was used}} can be flooded with NDRs from the many <b>invalid</b> <b>email</b> <b>addresses</b> the spammer may have attempted to mail. These NDRs then constitute spam from the ISP to the innocent user.|$|R
50|$|Poisoning spammers' {{mailing lists}} is usually done by blacklists {{submitting}} fake information to email submit style offers, or by posting <b>invalid</b> <b>email</b> <b>addresses</b> in a Usenet forum or {{on a web}} page where spammers are believed to harvest <b>email</b> <b>addresses</b> for their mailing lists.|$|R
5000|$|Version 2.0b24 of the {{original}} NewsWatcher was evaluated for the Good Netkeeping Seal of Approval, but did not receive it, with the evaluator noting as its [...] "fatal flaw" [...] that the application allowed posting from <b>invalid</b> <b>email</b> <b>addresses.</b> John Norstad revised the application and it later received the award, earning seal #00002. These revisions were later picked up by derived versions, enabling them to also pass the evaluation.|$|R
40|$|While spam is {{considered}} a crucial problem for both companies and ordinary computer users, {{little is known about}} how spam actually affects companies and which anti-spam techniques have been found most useful in practice. To address these issues, we explored the 500 biggest companies in the US (n= 44) and Finland (n= 101). The results suggest that 81. 6 % of all email traffic is spam, and that the respondents use 13 minutes of their daily working time to deal with spam. The time used for dealing with spam and the age of the respondents influence attitudes towards spam. There is marginal support that having an <b>email</b> <b>address</b> available on the Internet correlates with the amount of spam one receives. Filters, blacklists, restricting the disclosure of <b>email</b> <b>addresses,</b> presenting modified or <b>invalid</b> <b>email</b> <b>addresses,</b> and white lists were seen as the most effective anti-spam techniques, in order of effectiveness. The respondents saw that Internet Service Providers and legislation should take strong action against spam. 1...|$|R
40|$|Environmentalism {{is used as}} a {{case study}} to {{investigate}} the value of the Internet for activism, protest and social change. The effectiveness of the Internet for helping environmental groups to achieve their goals and the implications of this medium {{for the future of the}} environmental movement are explored. An online (Internet) survey of environmental groups who are currently using the Internet was conducted. Two hundred and forty four requests to take part were emailed to environmental groups, eight of which were returned with <b>invalid</b> <b>email</b> <b>addresses.</b> Over the course of a three month period 79 completed surveys were collected, giving a response rate of 33 %. Other methods utilised include face-to-face, telephone and email interviews with environmental group representatives, content analysis of Internet sites and the construction of a database of online environmental groups. Secondary data is also drawn upon extensively. This thesis examines the Internet's role in helping environmentalists achieve more with limited resources, network across wide geographic distances and create new forms of collective action. The changing role of other media and the ways in which the Internet may be influencing the dynamics between environmental groups and their opponents are also explored. Difficulties with this mode of communication must also be acknowledged. The concentration of Internet use in already privileged sectors of society may mean that participants in mainstream environmentalism are likely to have access, but it may also mean that the medium holds less promise for emerging ecojustice groups. It is also true that computers and network infrastructures are major causes of environmental harm, so it may appear contradictory to use these to try to protect the environment. This research suggests that the Internet offers a great deal of opportunity for environmental groups, but it also supports elements of contemporary society that many environmentalists oppose - increased consumerism, unfettered globalisation and direct environmental harm by its very existence. Activists should approach the Internet with optimism but not complacency. Those who seek to preserve aspects of the medium that promote community and democracy should endeavour to advance an alternative construction of the medium to that which is prevalent in the mainstream media...|$|R
30|$|The {{process of}} associating the {{developer}} <b>email</b> <b>address</b> with code commits {{is one of}} the most challenging steps in this research. First, we developed a set of Python scripts that validated and corrected repository commit data, for instance to deal with small mistakes performed by developers that submitted code with Unrecognized author (no <b>email</b> <b>address),</b> Unrecognized author (with <b>email</b> <b>address)</b> or with an <b>invalid</b> <b>email.</b> Second, we had to deal with the fact that some developers do not commit their changes with their corporate account (e.g., a developer commits code using dev 1 @gmail.com instead of dev 1 @hp.com, while actually affiliated with HP). This problem was tackled by manually triangulating our automatically-retrieved affiliation results with data from the Foundation affiliation database using two external data sources [74, 75].|$|R
50|$|Spammers {{may also}} use a form of {{dictionary}} attack in order to harvest <b>email</b> <b>addresses,</b> known as a directory harvest attack, where valid <b>email</b> <b>addresses</b> at a specific domain are found by guessing <b>email</b> <b>address</b> using common usernames in <b>email</b> <b>addresses</b> at that domain. For example, trying alan@example.com, alana@example.com, alanb@example.com, etc. and any that are accepted for delivery by the recipient email server, instead of rejected, {{are added to the}} list of theoretically valid <b>email</b> <b>addresses</b> for that domain.|$|R
50|$|Email aliases can {{be created}} on a mail server. The mail server simply {{forwards}} <b>email</b> messages <b>addressed</b> to an <b>email</b> alias on to another, the specified <b>email</b> <b>address.</b> An <b>email</b> alias {{may be used to}} create a simple replacement for a long or difficult-to-remember <b>email</b> <b>address.</b> It {{can also be used to}} create a generic <b>email</b> <b>address</b> such as webmaster@example.com and info@example.com.|$|R
5000|$|Email {{forwarding}} generically {{refers to}} the operation of re-sending an email message delivered to one <b>email</b> <b>address</b> to a possibly different <b>email</b> <b>address(es).</b>|$|R
50|$|<b>Email</b> <b>addresses</b> are {{the primary}} means of account {{activation}} (user identification and validation on websites), but other methods are available, such as cell phone number validation, postal mail validation, fax validation. <b>Email</b> <b>address</b> validation is accomplished by the website sending an email with a special temporary hyperlink to the user-provided <b>email</b> <b>address.</b> On receipt, the user opens the link, immediately activating the account. <b>Email</b> <b>addresses</b> are also useful as means of forwarding messages from a website, e.g., user messages, user actions, to the email inbox.|$|R
5000|$|Spammers may harvest <b>email</b> <b>addresses</b> from {{a number}} of sources. A popular method uses <b>email</b> <b>addresses</b> which their owners have {{published}} for other purposes. Usenet posts, especially those in archives such as Google Groups, frequently yield addresses. Simply searching the Web for pages with addresses [...] - [...] such as corporate staff directories or membership lists of professional societies [...] - [...] using spambots can yield thousands of addresses, most of them deliverable. Spammers have also subscribed to discussion mailing lists for the purpose of gathering the addresses of posters. The DNS and WHOIS systems require the publication of technical contact information for all Internet domains; spammers have illegally trawled these resources for <b>email</b> <b>addresses.</b> Spammers have also concluded that generally, for the domain names of businesses, all of the <b>email</b> <b>addresses</b> will follow the same basic pattern and thus are able to accurately guess the <b>email</b> <b>addresses</b> of employees whose addresses they have not harvested. Many spammers use programs called web spiders to find <b>email</b> <b>addresses</b> on web pages. Usenet article message-IDs often look enough like <b>email</b> <b>addresses</b> that they are harvested as well. Spammers have also harvested <b>email</b> <b>addresses</b> directly from Google search results, without actually spidering the websites found in the search.|$|R
50|$|Someone first {{gives an}} <b>email</b> <b>address</b> {{to the list}} {{software}} (for instance, on a Web page), but no steps are taken {{to make sure that}} this address belongs to the person submitting it. This can cause email from the mailing list to be considered spam because simple typos of the <b>email</b> <b>address</b> can cause the email to be sent to someone else. Malicious subscriptions are also possible, as are subscriptions that are due to spammers forging <b>email</b> <b>addresses</b> that are sent to the <b>email</b> <b>address</b> used to subscribe to the mailing list.|$|R
5000|$|In June 2012, Facebook {{removed all}} {{existing}} <b>email</b> <b>addresses</b> from user profiles, {{and added a}} new @facebook.com <b>email</b> <b>address.</b> Facebook claimed {{this was part of}} adding a [...] "new setting that gives people the choice to decide which addresses they want to show on their timelines". However, this setting was redundant to the existing [...] "Only Me" [...] privacy setting which was already available to hide addresses from timelines. Users complained the change was unnecessary, they did not want an @facebook.com <b>email</b> <b>address,</b> and they did not receive adequate notification their profiles had been changed. The change in <b>email</b> <b>address</b> was synchronised to phones due to a software bug, causing existing <b>email</b> <b>addresses</b> details to be deleted. The facebook.com email service was retired in February 2014.|$|R
5000|$|To {{find the}} {{destination}} faxes <b>email</b> <b>address,</b> a standard is in development which allows {{a fax machine}} to use a destination fax number to look up an alternative <b>email</b> <b>address</b> https://tools.ietf.org/html/rfc4143 ...|$|R
5000|$|As an example, {{consider}} the <b>email</b> <b>address</b> [...] "spamtrap@example.org". If this <b>email</b> <b>address</b> {{were placed in}} the source HTML of our web site {{in a way that it}} isn't displayed on the web page, normal humans would not see it. Spammers, on the other hand, use web page scrapers and bots to harvest <b>email</b> <b>addresses</b> from HTML source code so they would find this address.|$|R
50|$|In an {{interview}} with Mary Pat Gallagher of the New Jersey Law Journal, Nirenberg said NJ.com responded quickly to the subpoena by turning over the posters' <b>email</b> <b>addresses.</b> He and Brennan “struck gold” with Gallucci’s <b>email</b> <b>address,</b> he said, because it contained his real name. Efforts were made to get the names of other posters with non-identifying <b>email</b> <b>addresses,</b> but Nirenberg said they “met more resistance” from the email providers.|$|R
50|$|As many spammers rely on {{harvested}} <b>email</b> <b>addresses,</b> {{the best}} method of avoiding spam is not to publish one's real <b>email</b> <b>address.</b> By providing a temporary address, TrashMail allows users to protect their real email.|$|R
40|$|<b>Email</b> <b>address</b> {{becomes an}} {{important}} item of personal information for daily communication, {{and the demand}} for recognizing handwritten <b>email</b> <b>addresses</b> is increasing. This paper presents a recognition system for handwritten <b>email</b> <b>addresses.</b> It comprises of six main steps: deskew handwritten line, erect slant characters, separate string into words, segment touching characters, recognize words with syntax and lexicons, and string postprocess. The sys-tem makes a comprehensive use of <b>email</b> <b>address</b> struc-ture, segmentation results, recognition results and lexi-con knowledge. Experimental results demonstrate that for good quality strings (91 samples), the system achieves high recognition rates for single characters (94. 6 %) and whole strings (59. 3 %) ...|$|R
50|$|Spamtrapping is the seeding of an <b>email</b> <b>address</b> so that spammers {{can find}} it, but normal users can not. If the <b>email</b> <b>address</b> is used then the sender {{must be a}} spammer and they are black listed.|$|R
50|$|With {{contributors}} {{all over}} the world, the client is translated into more than 50 languages, although <b>email</b> <b>addresses</b> are currently limited to ASCII local parts. Thunderbird does not yet support SMTPUTF8 (RFC 6531) or <b>Email</b> <b>Address</b> Internationalization.|$|R
5000|$|Pre-Validated Email - Identity {{providers}} who support email such as Google and Yahoo! can return the user’s <b>email</b> <b>address</b> to the 3rd party website preventing the user from supplying a fabricated <b>email</b> <b>address</b> during the registration process.|$|R
50|$|On web pages, {{organizations}} often obscure <b>email</b> <b>addresses</b> {{of their}} members or employees by omitting the @. This practice, known as address munging, makes the <b>email</b> <b>addresses</b> less vulnerable to spam programs that scan the internet for them.|$|R
50|$|Stores names, mailing <b>addresses,</b> <b>email</b> <b>addresses,</b> web addresses, phone numbers, etc.Used by {{many other}} applications.|$|R
5000|$|Sharing an <b>email</b> <b>address</b> {{only among}} a limited group of correspondents {{is one way}} to limit spam. This method relies on the {{discretion}} of all members of the group, as disclosing <b>email</b> <b>addresses</b> outside the group circumvents the trust relationship of the group. For this reason, forwarding messages to recipients who don't know one another should be avoided. When it is absolutely necessary to forward messages to recipients who don't know one another, it is good practice to list the recipient names all after [...] "bcc:" [...] instead of after [...] "to:". This practice avoids the scenario where unscrupulous recipients might compile a list of <b>email</b> <b>addresses</b> for spamming purposes. This practice also reduces the risk of the address being distributed by computers affected with <b>email</b> <b>address</b> harvesting malware. However, once the privacy of the <b>email</b> <b>address</b> is lost by divulgence, it cannot likely be regained.|$|R
50|$|Assuring an <b>email</b> <b>address</b> is of a {{good quality}} {{requires}} a combination of various validation techniques. Large websites, bulk mailers and spammers require fast algorithms that predict validity of <b>email</b> <b>address.</b> Such methods depend heavily on heuristic algorithms and statistical models.|$|R
50|$|Many {{websites}} {{evaluate the}} validity of <b>email</b> <b>addresses</b> differently than the standards specify, rejecting addresses containing valid characters, such as + and /, or enforcing arbitrary length limitations. RFC 3696 provides specific advice for validating Internet identifiers, including <b>email</b> <b>addresses.</b>|$|R
5000|$|As of 2015, the press/media contact lists a San Diego State University <b>email</b> <b>address</b> as its sole contact. The <b>email</b> <b>address</b> denotes {{assignation}} to {{an employee}} of SDSU, a publicly funded university, which {{does not have a}} chapter at its school.|$|R
5000|$|The best {{practice}} in distributing these lists {{is to avoid}} sending the <b>email</b> <b>addresses</b> themselves as plaintext,but instead send a list with one [...] "hash" [...] per line, each hash generated from an <b>email</b> <b>address</b> using a one-way cryptographic hash function.|$|R
5000|$|SpamTrapping / GreyTrapping: {{this is the}} seeding of an <b>email</b> <b>address</b> so that spammers {{can find}} it, but normal users can not. If the <b>email</b> <b>address</b> is used then the sender must be a spammer and they are black listed.|$|R
5000|$|A {{suppression}} list {{is a list}} of suppressed e-mail addresses used by e-mail senders to comply with the CAN-SPAM Act of 2003 (United States of America). CAN-SPAM requires that senders of commercial emails provide a functioning opt-out mechanism by which email recipients can unsubscribe their <b>email</b> <b>address</b> from future <b>email</b> messages. The unsubscribed <b>email</b> <b>addresses</b> are placed into a [...] "{{suppression list}}" [...] which is used to [...] "suppress" [...] future email messages to that <b>email</b> <b>address.</b>|$|R
30|$|To {{associate}} multiple <b>email</b> <b>addresses</b> with {{a single}} individual, we used an approach similar to the cluster algorithm described by Bird et al. [6]. We created clusters of similar identities and then manually processed them. To create the clusters we used both name and email; we first normalized the names, then we looked for name similarities, name-email similarities, and email similarities. To match identities, we also collected names and <b>email</b> <b>addresses</b> from other data sources, such as commit logs and projects’ metadata. Based on GNOME’s account name policy [72], we merged <b>email</b> <b>addresses</b> ending in gnome.org that had the same user name (for example, we merged in jhs@gnome.org <b>email</b> <b>addresses</b> like jhs@cvs.gnome.org, jhs@src.gnome.org, and jhs@gnome.org).|$|R
5000|$|Both {{malicious}} software and human spam senders often use forged FROM addresses when sending spam messages. Control may be enforced on SMTP servers to ensure senders can only use their correct <b>email</b> <b>address</b> in the FROM field of outgoing messages. In an email users database each user {{has a record}} with an <b>email</b> <b>address.</b> The SMTP server must check if the <b>email</b> <b>address</b> in the FROM field of an outgoing message is the same address that belongs to the user's credentials, supplied for SMTP authentication. If the FROM field is forged, an SMTP error {{will be returned to}} the email client (e.g. [...] "You do not own the <b>email</b> <b>address</b> you are trying to send from").|$|R
40|$|Abstract. This work proposes an {{effective}} method of fighting spam by developing Inexpensive <b>Email</b> <b>Addresses</b> (IEA), a stateless system of Disposable <b>Email</b> <b>Addresses</b> (DEAs). IEA can cryptographically generate exclusive <b>email</b> <b>addresses</b> for each sender, {{with the ability}} to re-establish a new <b>email</b> <b>address</b> once the old one is compromised. IEA accomplishes proof-of-work by integrating a challenge-response mechanism to be completed before an email is accepted in the recipient’s mail system. The system rejects all incoming emails and instead embeds the challenge inside the rejection notice of Standard Mail Transfer Protocol (SMTP) error messages. The system does not create an out-of-band email for the challenge, thus eliminating email backscatter in comparison to other challenge-response email systems. The system is also effective in identifying spammers by exposing the exact channel, i. e. the unique <b>email</b> <b>address</b> that was compromised, so misuse could {{be traced back to the}} compromising party. Usability is of utmost concern in building such a system by making it friendly to the end-user and easy to setup and maintain by the system administrator. Key words: Email spam, disposable <b>email</b> <b>addresses,</b> stateless <b>email</b> system, proof-of-work, email backscatter eliminatio...|$|R
50|$|FaceTime calls can {{be placed}} from {{supported}} devices to any phone number or <b>email</b> <b>address</b> that is registered to the FaceTime service. A single <b>email</b> <b>address</b> can be registered to multiple devices and a call placed to that address rings all devices simultaneously.|$|R
