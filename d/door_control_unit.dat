9|9330|Public
50|$|In {{the field}} of {{automotive}} electronics, <b>Door</b> <b>Control</b> <b>Unit</b> (DCU) is a generic term for an embedded system that controls a number of electrical systems associated with an advanced motor vehicle. An advanced motor vehicle consists {{of a number of}} ECUs (Electrical Control Units), and the <b>Door</b> <b>Control</b> <b>Unit</b> (DCU) is an important one among them.|$|E
5000|$|Harrison {{promises}} Maggie to {{go public}} with the documents but attempts to bribe her into [...] "polishing" [...] his statement. After being paid by Harrison, a mechanic, Froelich (Jon Cedar), places a device in the Concorde's cargo <b>door</b> <b>control</b> <b>unit,</b> timed to open during flight.|$|E
50|$|The <b>Door</b> <b>Control</b> <b>Unit</b> is {{responsible}} for controlling and monitoring various electronic accessories in a vehicle's door. Since most of the vehicles {{have more than one}} door, generally DCUs are present in each door separately. A DCU associated with the driver's door has some additional functionalities. This additional features are the result of complex functions like locking, driver door switch pad, child lock switches, etc., which are associated with the driver's door. In most of the cases driver door module acts as a master and others act as slaves in communication protocols.|$|E
40|$|Object-oriented {{development}} systems {{traditionally have}} {{the benefits of}} encouraging well-modularised code with clean interfaces, {{and being able to}} provide reusable modules. Frequently, the penalty for such environments is the size and possibly speed of generated code. This paper presents a case study of designing an electronic door controller system which is to run on a central PC and distributed <b>door</b> <b>control</b> <b>units</b> which consist of tightly constrained Z 80 processors. The initial prototype was developed in LOOPN, a language and simulator for specifying systems in terms of coloured timed petri nets. This prototype was primarily implemented to isolate protocol errors and possible timing problems. However, the code of the prototype could also be adapted to produce the running system in the door controller units. This paper briefly describes LOOPN and considers its application to the modelling of a <b>door</b> <b>control</b> system and its associated network protocol. It also indicates how the target code [...] ...|$|R
5000|$|Parking assist systems: {{when the}} driver engages reverse gear, the {{transmission}} <b>control</b> <b>unit</b> can send a signal via the CAN bus to activate both the parking sensor system, and the <b>door</b> <b>control</b> module for the passenger side door mirror to tilt downwards to show {{the position of the}} curb. The CAN bus also takes inputs from the rain sensor to trigger the rear windscreen wiper when reversing.|$|R
5000|$|Dorma <b>Door</b> <b>Control</b> and Glass Hardware, Automatic <b>door</b> <b>control</b> ...|$|R
50|$|The lock is {{typically}} engaged via a small {{switch on the}} edge of the door that is only accessible when the door is open. Some cars implement the child lock control as a rotary mechanism which can only be operated with a key. This design ensures the child lock remains in its intended state, it is invaluable for older children or adults that may tamper with the lock when the door is open. Once the door is closed, control of these two mechanical type child locks is completely inaccessible to the passenger. In some newer models the child lock can be activated electronically from the driver position via a <b>Door</b> <b>control</b> <b>unit,</b> (Volvo V40 owners manual).|$|E
3000|$|Faulty <b>door</b> <b>control</b> <b>unit</b> (DCU) There {{have been}} 20 {{failures}} recorded with failure modes such as {{internal power supply}} failure, internal obstruction detection due to motor voltage and also falshcodes on DCU.|$|E
40|$|Software in {{embedded}} (e. g. automotive) systems {{requires a}} high level of reliability. Model-based development techniques are increasingly used to reach this goal, but so far there is relatively little published knowledge on the comparative benefits in using different assurance techniques. We investigate different and potentially complementary model-based software quality assurance methods (namely simulation and white-box testing vs. model-checking) at the hand of an application to the software component of a <b>door</b> <b>control</b> <b>unit.</b> We draw conclusions with regards to suitable application use cases...|$|E
40|$|If RF {{testing is}} in your future, you’ll need a {{spectrum}} analyzer. But they don’t come cheap. Your {{best bet is to}} follow Neal’s lead by building your own 4 ″ × 4 ″ system. It is funny how simple beginnings can lead you down convoluted paths of learning and discovery. About {{a year and a half}} ago, I was playing around with my automatic garage <b>door</b> remote <b>control</b> <b>unit.</b> I was experimenting with signal encoding at the time, and I wanted to look at the scheme used in my remote. One thing led to another, and before I knew it, I was trying to determine the RF frequency at which the transmitter was operating. I then built RF filters to look at signal levels and RF generators to aid in prototyping and testing. Next came RF mixing, frequency doubling, and so on. You can see where I’m going here. I became hooked on RF and all of the art that goes along with getting RF circuits working properly. Currently, all of my design-related pursuits are focused on circuits and test equipment at radio frequencies. When it comes to RF test equipment, the spectrum analyzer is the Holy Grail. Unfortunately, both new and used RF spectrum analyzers are extremely expensive. There are a variety of home-brew spectrum analyzers available on the ’Net. Some are more sophisticated than others because all of the circuit elements are built from scratch. They feature complex filter constructions, have precise PCB layouts that turn PCB traces into inductors, and include a lot of discrete components. Other somewhat simpler designs feature integrated modules borrowed from the TV/VCR tuner world. These are easier to build, but they lack sophistication and functionality. As I was browsing the ’Net for an alternative to a home-brew spectrum analyzer, I stumbled across the Maxim MAX 3550, which seemed almost too good to be true. Not onl...|$|R
5000|$|... 3270 {{devices are}} clustered, {{with one or}} more {{displays}} or printers connected to a <b>control</b> <b>unit</b> (the 3275 and 3276 included an integrated <b>control</b> <b>unit).</b> Originally devices were connected to the <b>control</b> <b>unit</b> over coaxial cable; later token ring, twisted pair, or Ethernet connections were available. A local <b>control</b> <b>unit</b> attaches directly to the channel of a nearby mainframe. A remote <b>control</b> <b>unit</b> is connected to a communications line by a modem. Remote 3270 controllers are frequently multi-dropped, with multiple <b>control</b> <b>units</b> on a line.|$|R
5000|$|Provisional Air Support <b>Control</b> <b>Unit</b> (PASCU)/Marine Air Support <b>Control</b> <b>Units</b> (MASCU) ...|$|R
40|$|Modern {{vehicular}} systems include Electronic Control Units (ECUs) {{equipped with}} software that implements vehicle functions. The composition and validation of ECUs {{is a complex}} task since they include propriety software in which functional details are often unspecified. These details also vary from one supplier to another which has {{a greater impact on}} the behavior of the entire composed system. This paper presents the application of model inference approach for automatic discovery of unspecified behaviors in an electronic <b>door</b> <b>control</b> <b>unit</b> supplied by our industrial partner. The final results can be used {{to address the problem of}} selecting quality components, validation and maintenance of component variants and their integration in embedded control systems...|$|E
40|$|In {{this book}} chapter, we discuss {{in detail the}} {{challenges}} {{that have to be}} faced by requirements engineering for technical products. We identified these challenges in interviews that we conducted at a German car manufacturer. The main part of this chapter presents a prescriptive requirements engineering process that faces all identified challenges. This process has been developed and evaluated during the last three years and is the major result of the QUASAR project funded by the German ministry for research. Throughout this chapter, we use an example (i. e., the development of a <b>door</b> <b>control</b> <b>unit</b> of a car) to illustrate the challenges and all aspects of our requirements engineering process. This example is part of a typical industrial specification for a car control unit...|$|E
30|$|The {{analysis}} {{model was}} applied to the passenger door unit of a fleet of 38 Class 380 trains operating on Scotland’s railway network. The data required for the analysis were collected from the literature, the company’s maintenance management software system called EQUINOX, the UK’s railway performance management software DATASYS BUGLE and the UK’s train movements monitoring system called TRUST. The five why’s technique was used to identify the potential failure modes of door unit components and their root causes, including the defects in relation to pushbuttons, <b>door</b> <b>control</b> <b>unit</b> (DCU), mechanical failures, light barrier, door drive, guard operating panel (GOP), limit switches, loose plugs, obstructions, door roller and lubrication. The results of the risk evaluation showed that the nine failure modes (12  % {{of the total number of}} failure modes identified) are “high critical” to door system functionality. The results of this study were used not only for assessing the performance of current maintenance practices, but also to plan a cost-effective preventive maintenance (PM) programme for different components of rolling stock. To avoid the recurrence of the failure modes, a new mileage-based preventive maintenance (PM) programme including 14 tasks was proposed.|$|E
40|$|This work {{is about}} {{development}} of a <b>control</b> <b>unit</b> {{for use in a}} production line. The <b>control</b> <b>unit</b> is implemented in an embedded device Raspberry Pi. It communicates with central administrating system, which assigns programs to particular <b>control</b> <b>units.</b> These programs describe interaction with peripherals of the <b>control</b> <b>unit</b> and with database system of traceability...|$|R
5000|$|... <b>door</b> handles, <b>door</b> <b>{{controls}}</b> and request-stop controls {{can be used}} by {{the widest}} range of people.|$|R
5000|$|Until {{the late}} 1950s and early 1960s, The IRT {{platforms}} could not handle a full ten car train. Thus, the manual <b>door</b> <b>controls</b> of the Deck Roof were reliable, as the side vestibule doors {{at either end}} of the train can be opened manually even if the entire car isn't on the platform. However, two conductors were required for ooperation of manual <b>door</b> <b>controlled</b> cars.|$|R
5000|$|<b>Control</b> <b>unit</b> endPoOps {{indicates}} that a previous <b>control</b> <b>unit</b> busy status has been cleared.|$|R
5000|$|In most {{mainframe}} systems a device-independent channel usually {{attaches to}} the CPU and to a controller or <b>control</b> <b>unit</b> which implements device-dependent logic for attaching specific devices. The functions performed by the <b>control</b> <b>unit</b> {{are similar to the}} functions performed by a device driver program on smaller systems. Some devices have integrated <b>control</b> <b>units,</b> which are logically discrete but are included with the device rather than requiring a separate box. Often a <b>control</b> <b>unit</b> can attach to multiple channels connected to a single or multiple systems. Some mainframe <b>control</b> <b>units</b> are: ...|$|R
5000|$|<b>Control</b> <b>units</b> were {{connected}} to the channels with [...] "bus and tag" [...] cable pairs. The bus cables carried the address and data information and the tag cables identified what data was on the bus. The general configuration of a channel was to connect the devices in a chain, like this: Mainframe—Control Unit X—Control Unit Y—Control <b>Unit</b> Z. Each <b>control</b> <b>unit</b> was assigned a [...] "capture range" [...] of addresses that it serviced. For example, <b>control</b> <b>unit</b> X might capture addresses 40-4F, <b>control</b> <b>unit</b> Y: C0-DF, and <b>control</b> <b>unit</b> Z: 80-9F. Capture ranges {{had to be a}} multiple of 8, 16, 32, 64, or 128 devices and be aligned on appropriate boundaries. Each <b>control</b> <b>unit</b> in turn had one or more devices attached to it. For example, you could have <b>control</b> <b>unit</b> Y with 6 disks, that would be addressed as C0-C5.|$|R
5000|$|... #Caption: IBM 702 system: From left to right, CRT memory, 702 CPU, 717 printer, operator's console, 757 printer <b>control</b> <b>unit,</b> 752 tape <b>control</b> <b>unit,</b> five 727 tape drives, 732 drum storage, five 727 tape drives, card reader, card punch, and reader/punch <b>control</b> <b>units.</b>|$|R
50|$|In IBM zSeries {{computers}} with two {{direct access storage device}} (DASD) <b>control</b> <b>units</b> connected through dedicated connections, PPRC is the protocol used to mirror a DASD volume in one <b>control</b> <b>unit</b> (the primary) to a DASD volume {{in the other}} <b>control</b> <b>unit</b> (the secondary).|$|R
40|$|WO 200275824 A UPAB: 20030111 NOVELTY - To {{produce an}} adaptronic micro system, {{one or more}} piezo {{electric}} fiber transducers (2) are embedded in a polymer matrix (1), {{with one or more}} <b>control</b> <b>units</b> (3) to <b>control</b> and/or carry signals. The <b>control</b> <b>units</b> are fitted into the matrix by an initial loose mounting on a surface of a transfer carrier (4). The transfer carrier is applied to the matrix, with the surface fitted with <b>control</b> <b>units</b> towards the transducers, and the transfer carrier is peeled off. DETAILED DESCRIPTION - To produce an adaptronic micro system, the transfer carrier is a film, sheet or plate, with an adhesive bond to hold the <b>control</b> <b>units</b> at a surface, with a weaker bonding than the bond between the <b>control</b> <b>units</b> and the matrix. The bonds are modified to hold the <b>control</b> <b>units</b> more strongly at the matrix. When the <b>control</b> <b>units</b> are in place at the matrix, the matrix and/or the <b>control</b> <b>units</b> are given an intermediate hardening. The <b>control</b> <b>units</b> are applied to the transfer carrier by a printing process, ink jet printing or by dispensing. The <b>control</b> <b>units</b> are electrodes, in an inter-digital array, or of an electrically conductive adhesive applied to the transfer carrier and treated with radiation or heat to give a total or partial hardening action. The transfer carrier, with the control electrodes, is pressed mechanically against the matrix, which is then wholly or partially hardened by radiation or heat. The <b>control</b> <b>units</b> can be of conductive film or foil materials, conductive lines or network or grid, or of an intrinsic or extrinsic electrically conductive material. The <b>control</b> <b>units</b> can also be light waveguides. The transducers are piezo electric, magnetostrictive, shape memory alloys or nano tubes. The <b>control</b> <b>units</b> are applied with a direct contact on the transducers. The control connectors, or connectors which can be fitted, are applied by one or more transfer carriers like the <b>control</b> <b>unit</b> application. The transfer carrier is a polymer film, a sheet of felt paper or coated paper. The <b>control</b> <b>units</b> are wholly embedded in the matrix. A number of micro systems (5) are assembled into a stack, and then fully hardened by mechanical pressure and heat. USE - The process is for the production of adaptronic micro systems. ADVANTAGE - The <b>control</b> <b>units</b> are wholly embedded in the matrix, for the production of prepreg modules...|$|R
5000|$|Engine <b>control</b> <b>unit</b> (ECU) — {{not to be}} {{confused}} with electronic <b>control</b> <b>unit,</b> the generic term for all these devices ...|$|R
40|$|Which of the {{following}} properly describes which IRMs are assigned to the RMCS rod block logic? A. IRMs A, B, E, and F are assigned to Activity <b>Control</b> <b>Unit</b> 1 B. IRMs A, B, E, and F are assigned to Activity <b>Control</b> <b>Unit</b> 2 C. IRMs A, C, E, and G are assigned to Activity <b>Control</b> <b>Unit</b> 1 D. IRMs A, C, E, and G are assigned to Activity <b>Control</b> <b>Unit</b> 2 Correct Answer A...|$|R
5000|$|Electronic <b>control</b> <b>unit</b> (ECU), {{a generic}} term for any {{embedded}} system—not {{to be confused}} with engine <b>control</b> <b>unit</b> also abbreviated, ECU ...|$|R
40|$|The device has a <b>control</b> <b>unit</b> (11) {{connected}} with an actuator, for supplying a control signal and controlling the output range of force and/or {{path of the}} actuator. The piezoresistive transducers (9) {{connected with}} <b>control</b> <b>unit,</b> detect the force received or delivered by the actuator and transmit output signal to the <b>control</b> <b>unit.</b> The <b>control</b> <b>unit</b> <b>controls</b> the actuator based on the output signal. The piezoresistive transducer layer is formed with undoped hydrocarbon or pure carbon. An independent claim is included for method for controlling actuator device...|$|R
50|$|<b>Control</b> <b>unit</b> is {{a special}} case of {{function}} <b>units</b> which <b>controls</b> execution of programs. <b>Control</b> <b>unit</b> {{has access to the}} instruction memory in order to fetch the instructions to be executed. In order to allow the executed programs to transfer the execution (jump) to an arbitrary position in the executed program, <b>control</b> <b>unit</b> provides <b>control</b> flow operations. A <b>control</b> <b>unit</b> usually has an instruction pipeline, which consists of stages for fetching, decoding and executing program instructions.|$|R
50|$|In {{order to}} bring many older model Disklaviers up to the same or similar feature set as the E3, Yamaha {{introduced}} the DKC-850 replacement <b>control</b> <b>unit</b> for Mark IIXG and Mark III Disklaviers in 2010. Outwardly, the <b>control</b> <b>unit</b> looks and functions identically to the E3 <b>control</b> <b>unit</b> and provides {{access to the same}} cloud-based services, though it does not upgrade the tone generator and has substantially fewer performance/editing features compared with the original <b>control</b> <b>units.</b> The DKC-850 can also update earlier model Disklaviers by connecting to the old <b>control</b> <b>unit</b> via MIDI cables. In this context, the DKC-850 does not support the reception of streaming performances.|$|R
40|$|Abstract. This paper mainly {{introduces}} the design scheme of the automatic <b>door</b> <b>control</b> {{based on the}} Micro-controller. The whole system adopts the modular design theory, uses high polymer piezoelectric materials as transducer and takes MC 68 HIIK 4 as cybernetics core. Also, according to automatic <b>door</b> <b>control</b> requirement, it proposes corresponding improvement program {{on the basis of}} the common small-sized translational induction type automatic door. The system has the following advantages:simple operation,functional maturation, high sensitivity, low R&D cost...|$|R
5000|$|... #Caption: A Vigilant VM-1 {{fire alarm}} <b>control</b> <b>unit</b> (FACU) / {{autonomous}} <b>control</b> <b>unit</b> (ACU) with integrated voice evacuation and fire fighter telephone system.|$|R
50|$|The <b>control</b> <b>unit</b> of the CPU {{contains}} circuitry {{that uses}} electrical signals {{to direct the}} entire computer system to carry out stored program instructions. The <b>control</b> <b>unit</b> does not execute program instructions; rather, it directs {{other parts of the}} system to do so. The <b>control</b> <b>unit</b> communicates with both the ALU and memory.|$|R
50|$|A {{telecommunication}} <b>control</b> <b>unit</b> (TCU), line <b>control</b> <b>unit,</b> or terminal <b>control</b> <b>unit</b> (although terminal <b>control</b> <b>unit</b> {{may also}} {{refer to a}} terminal cluster controller) is a Front-end processor for mainframes and some minicomputers which supports attachment {{of one or more}} telecommunication lines. TCUs free processors from handling the data coming in and out of RS-232 ports. The TCU can support multiple terminals, sometimes hundreds. Many of these TCUs can support RS-232 when it is required, although there are other serial interfaces as well.|$|R
40|$|The {{topic of}} my bachelor´s thesis is {{to design a}} <b>control</b> <b>unit</b> of the <b>door</b> systems for public transport. The <b>control</b> <b>unit</b> is {{designed}} by using modern components. Their availability should be not less then ten years. The <b>unit</b> is <b>controlled</b> by a microcontroller ATMEGA and the motor is switched using the h-bridge. The <b>control</b> <b>unit</b> has ten programmable inputs and two switching outputs. PCB design is optimized for mass production. The result is a functional prototype of <b>control</b> <b>unit...</b>|$|R
5000|$|<b>Control</b> <b>units</b> are {{assigned}} an address [...] "capture" [...] range. For example, a CU might be assigned range 20-2F or 40-7F. The {{purpose of this}} is to assist with the connection and prioritization of multiple <b>control</b> <b>units</b> to a channel. For example, a channel might have three disk <b>control</b> <b>units</b> at 20-2F, 50-5F, and 80-8F. Not all of the captured addresses need to have an assigned physical device. Each <b>control</b> <b>unit</b> is also marked as High or Low priority on the channel.|$|R
