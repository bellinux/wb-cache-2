938|1425|Public
50|$|In a <b>dynamic</b> <b>setting</b> the dataset {{will grow}} over time, {{and the model}} estimate, and its {{estimated}} probabilities will evolve. One may then consider combining the sequence of estimates/probabilities when performing prediction. In this <b>dynamic</b> <b>setting,</b> the test will likely be weak {{most of the time}} (e.g., when the system is around equilibrium), but as one approaches a dragon king, and precursors become visible, the true positive rate should increase.|$|E
50|$|Brogaard is {{furthermore}} {{the first}} to develop a dynamic two-dimensional semantics that can account for cognitive significance in a <b>dynamic</b> <b>setting.</b>|$|E
50|$|Dynamic range searching vs. static range searching: In {{the static}} setting the set S {{is known in}} advance. In <b>dynamic</b> <b>setting</b> objects may be {{inserted}} or deleted between queries.|$|E
50|$|<b>Dynamic</b> <b>Set</b> Speed Type: The <b>dynamic</b> <b>set</b> speed {{uses the}} GPS {{position}} of speed limit signs, from a database. Some are modifiable by the driver. At least one, Wikispeedia, incorporates crowdsourcing, so driver input is shared, improving the database for all users.|$|R
40|$|Many {{users of}} large {{distributed}} systems are plagued by high latency when accessing remote data. Latency is particularly problematic for the critical application of search and retrieval, {{which tends to}} access many objects and may suffer a long wait for each object accessed. Existing techniques like caching, inferential prefetching, and explicit prefetching are not suited to search, are ineffective at reducing latency for search applications, or greatly increase {{the complexity of the}} programming model. This dissertation shows that extending the file system interface to support a new abstraction called <b>dynamic</b> <b>sets</b> can address the problem of latency for search without incurring the penalties of the other techniques. A <b>dynamic</b> <b>set</b> is a lightweight and transitory collection of objects with well-defined semantics. An application creates a <b>dynamic</b> <b>set</b> on-demand to hold the objects it wishes to process. Adding <b>dynamic</b> <b>sets</b> to the system's interface results in two benefits. First, creation of a [...] ...|$|R
40|$|Consider a {{distributed}} system {{consisting of a}} set V of processors, and assume that every pair of processors can directly communicate with each other. A processor structure is proposed, for implementing a <b>dynamic</b> <b>set</b> U ` V of processors in the {{distributed system}}. The <b>dynamic</b> <b>set</b> supports the following three operations: Insert inserts the caller (i. e., the processor executing this operation) in U, Delete removes the caller from U, and Find searches for a processor in U. To evaluate {{the efficiency of the}} implementation, an amortized analysis of the message complexity of operations is performed; the amortized number of messages per each operation is 8 + 12 log 2 (jV j Γ 1), in the worst case. The <b>dynamic</b> <b>set</b> is applicable to many important problems, including the load balancing problem, and the proposed processor structure is used to solve the mutual exclusion problem, and to construct a more complex <b>dynamic</b> <b>set</b> of processors like FIFO queue. Keywords: processor structure, data [...] ...|$|R
50|$|Jackson and Wolinsky pioneered {{these types}} of models in a 1996 paper, which has since {{inspired}} several game-theoretic models. These models were further developed by Jackson and Watts, who put this approach to a <b>dynamic</b> <b>setting</b> {{to see how the}} network structure evolve over time.|$|E
50|$|Today, Stuart {{experiences}} a <b>dynamic</b> <b>setting</b> for all age groups. With a burgeoning downtown and recent retail developments along the Highway 58 corridor, {{the town has}} forged a path success {{for many years to}} come. The new additions of the downtown rail trail along the Mayo River, a new Farmer's Market located within the heart of town, and new sidewalk and infrastructural improvements along Main Street have all provided to the enhancement of the town of Stuart.|$|E
5000|$|Third, {{and most}} critically, the static {{fractional}} cascading data structure maintains, for each element x of the augmented list at each node of the catalog graph, {{the index of}} the result that would be obtained when searching for x among the input items from that node and among the augmented lists stored at neighboring nodes. However, this information would be too expensive to maintain in the <b>dynamic</b> <b>setting.</b> Inserting or deleting a single value x could cause the indexes stored at an unbounded number of other values to change. Instead, dynamic versions of fractional cascading maintain several data structures for each node: ...|$|E
40|$|In {{this paper}} we {{describe}} a single unifying abstraction called <b>dynamic</b> <b>sets</b> which can offer substantial benefits to search applications. These benefits include greater oppor-tunity in the I/O subsystem to aggressively exploit prefetch-ing and parallelism, {{as well as}} support for associative nam-ing to complement the hierarchical naming in typical file systems. This paper motivates <b>dynamic</b> <b>sets</b> and presents {{the design of a}} system that embodies this abstraction. ...|$|R
5000|$|...SRVPGM: Service program (<b>dynamic</b> <b>set</b> {{of one or}} more modules, akin to a DLL file in Microsoft Windows).|$|R
5000|$|The model {{does not}} apply in a <b>dynamic</b> <b>set</b> up like {{changing}} demand and cost conditions during booms and recessions.|$|R
50|$|The Godine Family Gallery is one {{of several}} student-run {{galleries}} on the Massart campus. As a professional gallery set in an educational institution, the Godine Family Gallery is a means by which students can fully realize the potential of their artistic practice. The gallery is set apart by its focus: beyond merely acting as a means of showing work, the gallery serves as a nexus point where students, faculty, practicing artists, {{and other members of the}} community can take part in an intellectual, cultural and creative exchange. Because of its liberal approach to the institutional definition of the gallery’s role, the space is structurally organic, moving from exhibition to event, 2d and 3d work to performance. The Godine Family Gallery is an ever-changing and <b>dynamic</b> <b>setting,</b> growing and developing with each year of student involvement.|$|E
5000|$|MacLeod’s exhibition, A Brief Overview of Personology, {{was created}} for the Charles H. Scott Gallery in Vancouver, British Columbia, and was curated by Cate Rimmer A Brief Overview of Personology {{contained}} several works by MacLeod that were under the themes surrounding the use of self-help books, consumerism, and comedy, creating a <b>dynamic</b> <b>setting</b> of satire. MacLeod pulls inspiration from Tracy Cabot’s How To Make a Man Fall in Love With You, a self-help book and appropriates illustrations from the book, putting them {{into the realm of}} fine art for public viewing. [...] Works by MacLeod include four silkscreen prints titled How To Make a Man Fall in Love With You (2000), a wood sculpture called One Week (2000), twelve ink drawings on vellum paper based on film stills (2000), and The Greeter (2000), a video projection where MacLeod poses as a greeter that can be found in big box department stores.|$|E
50|$|Second, an {{insertion}} or deletion {{may cause}} a {{change to the}} subset of the list associated with a node that is passed on to neighboring nodes of the catalog graph. It is no longer feasible, in the <b>dynamic</b> <b>setting,</b> for this subset to be chosen as the items at every dth position of the list, for some d, as this subset would change too drastically after every update. Rather, a technique closely related to B-trees allows {{the selection of a}} fraction of data that is guaranteed to be smaller than 1/d, with the selected items guaranteed to be spaced a constant number of positions apart in the full list, and such that an insertion or deletion into the augmented list associated with a node causes changes to propagate to other nodes for a fraction of the operations that is less than 1/d. In this way, the distribution of the data among the nodes satisfies the properties needed for the query algorithm to be fast, while guaranteeing that the average number of binary search tree operations per data insertion or deletion is constant.|$|E
50|$|Given a <b>dynamic</b> <b>set</b> of objects, find {{algorithms}} {{and data}} structures for efficient recalculation {{of the closest}} pair of objects each time the objects are inserted or deleted.|$|R
40|$|VDM (Vienna Development Method) {{is based}} on {{classical}} set theory in which a set respresents a static collection of objects. The aim of VDM {{is to be a}} method and language for specifying a dynamic system. Therefore, many problems remain in it. The most serious deficiency in VDM is the lack of a well-designed structuring mechanism allowing a hierarchical specification of the whole system and the expression of time requirements. This paper proposes the concept of <b>dynamic</b> <b>set</b> with associated operations {{in order to make a}} radical solution to the problem. Based on <b>dynamic</b> <b>set</b> theory and VDM notation a dynamic VDM is presented for constructing the specification of a whole software system. Keywords: <b>Dynamic</b> <b>set,</b> Formal specification, VDM, Structured method. Introduction In classical set theory a set represents a static collection of objects, as described in [1][2][3][4]. However, in many circumstances in the real world, changeable collections of objects must be modeled. Take the students of [...] ...|$|R
40|$|Search on {{wide area}} {{distributed}} systems is plagued {{by the high}} latencies inherent in remote access. A solution is to prefetch information before it is requested by the searcher to hide latency. But this raises the problem of knowing what to prefetch, since fetching data {{that will not be}} used can actually hurt performance. This paper proposes extending the Unix file model to support <b>dynamic</b> <b>sets,</b> short-lived and unordered collections of objects created by searchers to hold the results of queries. An object's membership in a set is a hint of future access, informing the system that prefetching that object can improve performance. An additional benefit of using set membership as the hint is that it allows the system to determine the order in which objects are returned to the searcher, further increasing the opportunity for performance improvement. This paper presents the design of SETS, a system extension to Unix to provide <b>dynamic</b> <b>sets.</b> A performance evaluation of SETS shows <b>dynamic</b> <b>sets</b> [...] ...|$|R
5000|$|Homogeneous {{evolution}} of this basin {{did not occur}} due to dynamic tectonic activity. Despite the active setting, there are over 9,100 m of strata within the basin. The <b>dynamic</b> <b>setting</b> was also responsible for the heterogeneous deposition of each formation. It is common for rock units of the same depositional event to have different names in different locations within the basin. This may {{be a result of}} large variation in clast size as with the upper Pliocene Pico Formation in the northwestern part of the basin and the Upper Fernando Formation in the southwest part of the basin. The Los Angeles Basin contains {{what is known as the}} [...] "Great Unconformity" [...] which has been interpreted as a large scale erosional event in the basement rock unit. This unconformity is used to correlate strata throughout the basin. The record of the Cenozoic activity begins above this unconformity. The stratigraphic record for this basin indicates that it began as a non-marine environment and then transgressed to a deep ocean system. The oldest basement units of this basin are of both sedimentary and igneous origin. The sedimentary unit was metamorphosed as a result of slippage of the Newport-Inglewood fault and is known as the Catalina Schist. The Catalina Schist can be found on the southwestern edge of the basin and is predominantly a chlorite-quartz schist. Closer to the Newport-Inglewood fault zone, garnet-bearing schists and metagabbros occur. The Santa Monica Slate can be observed in the northwestern block of the basin. The eastern complex is characterized by Santiago Peak Volcanics. This rock unit contains andesitic breccias, flow, agglomerates and tuffs.|$|E
40|$|AbstractDynamic setting AGC {{is based}} on the {{improvement}} of the BISRA-AGC model. Based on the control algorithms and control models of <b>dynamic</b> <b>setting</b> AGC, the influences of the model parameters to system performance were analyzed using the GUI in MATLAB. At the same time, the superiority and limitation of the <b>dynamic</b> <b>setting</b> AGC were analyzed...|$|E
30|$|In {{the next}} section, {{we examine the}} {{financial}} impact of seed capital in a <b>dynamic</b> <b>setting</b> by comparing the stream of DI benefits, earnings, and total income over the lifespan with and without seed capital. The static model presented here is generalisable to this <b>dynamic</b> <b>setting</b> with the difference that in the dynamic case c captures the net present value of consumption over the remaining lifespan and T captures {{the length of the}} return-to-work period.|$|E
40|$|Abstract—A Bloom filter is an effective, space-efficient data {{structure}} for concisely representing a set and supporting approximate membership queries. Traditionally, the Bloom filter and its variants {{just focus on}} how to represent a static set and decrease the false positive probability to a sufficiently low level. By investigating mainstream applications based on the Bloom filter, we reveal that <b>dynamic</b> data <b>sets</b> are more common and important than static sets. However, existing variants of the Bloom filter cannot support <b>dynamic</b> data <b>sets</b> well. To address this issue, we propose dynamic Bloom filters to represent <b>dynamic</b> <b>sets</b> as well as static sets and design necessary item insertion, membership query, item deletion, and filter union algorithms. The dynamic Bloom filter can control the false positive probability at a low level by expanding its capacity as the set cardinality increases. Through comprehensive mathematical analysis, we show that the dynamic Bloom filter uses less expected memory than the Bloom filter when representing <b>dynamic</b> <b>sets</b> with an upper bound on set cardinality, and also that the dynamic Bloom filter is more stable than the Bloom filter due to infrequent reconstruction when addressing <b>dynamic</b> <b>sets</b> without an upper bound on set cardinality. Moreover, the analysis results hold in standalone applications as well as distributed applications. Index Terms—Bloom filters, dynamic Bloom filters, information representation...|$|R
5000|$|... 4REAL School4REAL School is a <b>dynamic</b> <b>set</b> of {{teaching}} guides and resources based on 4REAL episodes {{that has been}} used in schools worldwide and licensed for the entire Vancouver School District.|$|R
5000|$|<b>Dynamic</b> <b>Set</b> of User Interface Elements. The {{language}} contains constructs for specifying partial presentation updates (dynamically {{changing the}} content of entire groupings) and the possibility to specify a conditional navigation between presentations.|$|R
30|$|In this section, we {{introduce}} a theoretical model that analyzes firms' employment policies in a <b>dynamic</b> <b>setting</b> when the adjustment of labor input is costly.|$|E
40|$|In the {{original}} model of pure price competition, due to Joseph Bertrand (1883), firms have linear cost functions. For {{any number of}} identical such price-setting firms, this results in the perfectly competitive outcome; the equilibrium price equal the firms' (constant) marginal cost. This paper provides a generalization of Bertrand's model from linear to convex cost functions. I analyze pure price competition both in a static setting - where the firms interact {{once and for all}} - and in <b>dynamic</b> <b>setting</b> - where they interact repeatedly over an indefinite future. Sufficient conditions are given for the existence of Nash equilibrium in the static setting and for subgame perfect equilibrium in the <b>dynamic</b> <b>setting.</b> These equilibrium sets are characterized, and it is shown that there typically exists a whole interval of Nash equilibrium prices in the static setting and subgame perfect equilibria in the <b>dynamic</b> <b>setting.</b> It is shown that firms may earn sizable profits and that their equilibrium profits may increase if their production costs go up...|$|E
3000|$|... enters contemporaneously {{with respect}} to the latter, there is still the risk of two-way interdependencies due to the <b>dynamic</b> <b>setting</b> of the model. We {{minimize}} these potential risks of any endogeneity bias by instrumenting [...]...|$|E
40|$|This paper studies a discrepancy-sensitive {{approach}} to dynamic fractional cascading. We provide an efficient data structure for dominated maxima searching in a <b>dynamic</b> <b>set</b> of {{points in the}} plane, which in turn leads to an efficient dynamic data structure that can answer queries for nearest neighbors using any Minkowski metric. We provide an efficient data structure for dominated maxima searching in a <b>dynamic</b> <b>set</b> of points in the plane, which in turn leads to an efficient dynamic data structure that can answer queries for nearest neighbors using any Minkowski metric. Comment: Expanded version of a paper that appeared in WADS 200...|$|R
40|$|Abstract — A {{bloom filter}} is a simple, space-efficient, {{randomized}} data structure for concisely representing a static data set, {{in order to}} support approximate membership queries. It has great potential for distributed applications where systems need to share information about what resources they have. The space efficiency is achieved at the cost of a small probability of false positive in membership queries. However, for many applications the space savings and short locating time consistently outweigh this drawback. In this paper, we introduce dynamic bloom filters (DBF) to support concise representation and approximate membership queries of <b>dynamic</b> <b>sets,</b> and study the false positive probability and union algebra operations. We prove that DBF can control the false positive probability at a low level by adjusting the number of standard bloom filters used according to the actual size of current <b>dynamic</b> <b>set.</b> The space complexity is also acceptable if the actual size of <b>dynamic</b> <b>set</b> does not deviate too much from the predefined threshold. Furthermore, we present multidimension dynamic bloom filters (MDDBF) to support concise representation and approximate membership queries of <b>dynamic</b> <b>sets</b> in multiple attribute dimensions, and study the false positive probability and union algebra operations through mathematic analysis and experimentation. We also explore the optimization approach and three network applications of bloom filters, namely bloom joins, informed search, and global index implementation. Our simulation shows that informed search based on bloom filters can obtain higher recall and success rate of query than the blind search protocol...|$|R
5000|$|... "Thirteen Women Strong is a {{fascinating}} study of a <b>dynamic</b> <b>set</b> of student athletes and their legendary leader. Wallace goes beyond wins and losses to write a tale about the enduring themes of strength, leadership, and teamwork." ...|$|R
40|$|We study a <b>dynamic</b> <b>setting</b> {{in which}} {{stochastic}} {{information about the}} value of a privately-informed seller’s asset is gradually revealed to a market of buyers. We characterize the unique equilibrium in a continuous-time framework. The equilibrium involves periods of no trade or market failure. The no-trade period ends in one of two ways: eitherenoughgoodnewsarrivesrestoringconfidenceandmarketsre-open, orbad news arrives making buyers more pessimistic forcing market capitulation i. e., a partial sell-off of low-value assets. Reservation values arise endogenously from the option to sell in the future. Our model encompasses both lemons and signaling environments— in a <b>dynamic</b> <b>setting</b> with sufficiently informative news, the two environments have the same equilibrium structure...|$|E
40|$|The paper {{deals with}} the concept of {{coherent}} risk measure, in the sense of Artzner, Delbaen, Eber and Heath (1999), but assumes a <b>dynamic</b> <b>setting</b> in which risks (actuarial problems) or pay-os (nancial problems) re ect their stochastic behavior. First, the denition of a dynamic coherent measure is introduced and some relations with its static version are given. Coherent measures are char-acterized by martingale-like representations, as well as by Choquet integrals of probability distortion operators. Using dierent information updating rules (e. g. Bayes or Dempster-Shafer) we dene three distinct families of dynamic coherent measures. In particular, we extend Value at Risk (VaR) and Tail Conditional Expecta-tion (TCE) to a <b>dynamic</b> <b>setting.</b> ...|$|E
30|$|Motivated by {{optimization}} {{subject to}} risk criterion, Ruszczynski and Shapiro (2006 a) elevate the concepts from (Ruszczyński and Shapiro 2006 b) to the <b>dynamic</b> <b>setting,</b> {{with the main}} goal to establish conditions under which the dynamic programming principle holds.|$|E
30|$|Dietzfelbinger et al. 1994 {{extended}} {{the scheme of}} Fredman et al. 1984 to store <b>dynamic</b> <b>sets.</b> Their <b>dynamic</b> perfect hashing resolves collisions by random selection of universal hash functions (Carter and Wegman 1977) for a second-level hash table.|$|R
40|$|We study a <b>dynamic</b> vNM stable <b>set</b> in {{a compact}} metric space under the {{assumption}} of complete and continuous dominance relation. Internal and external stability are defined with respect to farsighted dominance. Stability of an outcome is conditioned on the history via which it is reached. A <b>dynamic</b> stable <b>set</b> always exists. Any covering set by Dutta (1988) coincides with the set of outcomes that are implementable via a <b>dynamic</b> stable <b>set.</b> The maximal implementable outcome set is {{a version of the}} ultimate uncovered set. vNM stable <b>set,</b> <b>dynamic,</b> history...|$|R
30|$|We {{improve upon}} {{previously}} suggested solutions and design an Efficient Hash Table (EHT). The EHT reduces on-chip memory requirements, provides a constant lookup performance and thus predictability, and, unlike comparable perfect hashing schemes, {{it is still}} updatable and works with <b>dynamic</b> <b>sets.</b>|$|R
