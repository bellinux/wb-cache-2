10000|10000|Public
5|$|Following the {{theatrical}} release of Miracle at St. Anna, Spike Lee and the Italian production company On My Own Produzioni Cinematografiche brought {{a lawsuit against}} TF1, alleging that the company failed in its contractual agreement with On My Own to <b>distribute</b> the film in international markets, excluding the United States, Canada and Italy. In its defense, TF1 refused to <b>distribute</b> Miracle at St. Anna, claiming that Lee had made a different film than the one promised, and refused to pay On My Own the â‚¬11 million advance needed to <b>distribute</b> the film internationally.|$|E
5|$|GKIDS later {{announced}} that it would <b>distribute</b> the film within North America, with a theatrical release scheduled for January 2018.|$|E
5|$|Recordings {{with the}} Parental Advisory label are often {{released}} alongside censored versions that {{reduce or eliminate}} the questionable material. Several retailers will <b>distribute</b> all varieties of the product, occasionally with an increased price for censored versions, while some sellers offer the amended pressings as their main options and choose not to <b>distribute</b> the explicit counterparts. However, the label has been questioned for its perceived ineffectiveness in limiting the amount of inappropriate material that young audiences are exposed to.|$|E
40|$|This {{research}} {{presents the}} main elements of query optimizations in <b>distributed</b> systems. First, data architecture according with system level architecture in a <b>distributed</b> environment is presented. Then {{the architecture of}} a <b>distributed</b> database management system (DDBMS) is described on conceptual level followed by {{the presentation of the}} <b>distributed</b> query execution steps on these information systems. The research ends with presentation of some aspects of <b>distributed</b> database query optimization and strategies used for that. <b>distributed</b> system, <b>distributed</b> system architecture, <b>distributed</b> query, <b>distributed</b> query optimization. ...|$|R
5000|$|<b>Distributed</b> computing, <b>Distributed</b> Networking, <b>Distributed</b> {{database}} ...|$|R
5000|$|<b>Distributed</b> Computer and Computer Networks Systems (Modeling and Analysis, <b>Distributed</b> and Wireless Systems, <b>Distributed</b> Servers, Parallel and <b>Distributed</b> Systems, Networks) ...|$|R
5|$|Several {{groups of}} Asian {{minorities}} lived in Paris and Berni helped <b>distribute</b> Asian newspapers and magazines, {{to which he}} contributed illustrations.|$|E
5|$|The disseminator is {{economically}} {{motivated to}} <b>distribute</b> the speech.|$|E
5|$|Antara is an Indonesian {{news agency}} {{organized}} {{as a private}} company under the Ministry of State-owned Enterprises. It is the country's national news agency, supplying news reports to the many domestic media organization. It is the only organization authorized to <b>distribute</b> news material created by foreign news agencies.|$|E
40|$|Parallel {{computing}} {{is increasingly}} {{exposed to the}} development and challenges of <b>distributed</b> systems, such as the lack of load balancing, asynchrony, long latencies, network partitions, failures, disconnected operations, heterogeneity and protocol standardization. Furthermore, <b>distributed</b> systems are becoming larger, more diverse and more dynamic. This Euro-Par topic provides a forum for research and practice, of interest to both academia and industry, about <b>distributed</b> systems, <b>distributed</b> computing, <b>distributed</b> algorithms, and parallel processing on <b>distributed</b> systems. Submission was encouraged across the whole area, with emphasis on the following: design and practice of <b>distributed</b> algorithms and data structures, analysis of the behaviour of <b>distributed</b> systems and algorithms, <b>distributed</b> operating systems, parallel processing on <b>distributed</b> systems, resource and service discovery, resource sharing and in <b>distributed</b> systems, <b>distributed</b> fault tolerance, security in <b>distributed</b> systems, scalability, concurrency and performance in <b>distributed</b> systems, middleware for parallel computations, web services, interoperability and standards, self-organised and self-adjusting <b>distributed</b> systems. Thirty-two papers were submitted in this topic, eight {{of which have been}} accepted for publication. The accepted papers cover a wide range of aspects in the <b>distributed</b> system and algorithms topic. Three papers are related with the problem of data sharing in <b>distributed</b> and parallel systems, two papers address issues related with mobile agents in graphs, and, finally, three papers address fundamental <b>distributed</b> algorithm problems, such as failure detection, consensus, and spanning tree construction...|$|R
40|$|The DVP project {{investigated}} the Quality of Service (QoS) requirements of broadcasters for several forms of <b>distributed</b> video production {{and run a}} series of trials of <b>distributed</b> virtual studios (studio on demand), <b>distributed</b> virtual reality, <b>distributed</b> musical rehearsals and <b>distributed</b> video editing and retrieval. The CUI of the University of Geneva participated in the DVP project in the <b>distributed</b> musical rehearsal (DR) and <b>distributed</b> video editing and retrieval (DVER) applications...|$|R
40|$|<b>Distributed</b> {{relational}} databases benefit {{greatly from}} fragmentation and allocation and these benefits should be realized in a <b>distributed</b> object environment. Fragmentation enhances application performance {{by reducing the}} amount of irrelevant data accessed and the amount of data transferred unnecessarily between <b>distributed</b> sites. This paper presents a review of early work on <b>distributed</b> database design, some existing object based systems including <b>distributed</b> object based systems. The paper finally proposes a technique for horizontally fragmenting some class models in a <b>distributed</b> object based system. 1 Introduction The problem of <b>distributed</b> database design comprises first, the fragmentation of database entities and secondly, the allocation of these fragments to <b>distributed</b> sites. <b>Distributed</b> database design enables optimal application performance by minimizing the need for data transfer between <b>distributed</b> sites [15]. Two approaches are possible in a <b>distributed</b> database des [...] ...|$|R
5|$|Bungie {{released}} a demo on May 24, 2010, featuring a single player level from the game's story mode, a multiplayer competitive map, and a cooperative firefight mission. Microsoft later listed Reach as an Xbox Live Marketplace download on August 12, 2010, {{at a price}} of 99999 Microsoft Points (~US$1250). A spokesperson confirmed the download was for media review purposes, {{and that there were}} no plans to <b>distribute</b> the game to the public through Games on Demand. Four days later, hackers managed to access, download, and <b>distribute</b> the game online; Microsoft stated they were investigating the matter. Halo 2, Halo 3, and ODST were similarly leaked ahead of their planned release.|$|E
5|$|In 1956, Sanders {{moved the}} company {{headquarters}} from Corbin to Shelbyville, Kentucky, which offered superior transport links {{through which he}} could <b>distribute</b> his spices, pressure cookers, take-out cartons and advertising material to franchisees.|$|E
5|$|In January 2016, it was {{announced}} that Sorkin would make his directorial debut with the film Molly's Game, based on Molly Bloom's memoir and which he would adapt by himself, starring Jessica Chastain and Idris Elba. STX Entertainment will <b>distribute</b> the film. Production began in November 2016.|$|E
40|$|Study of <b>distributed</b> {{computing}} principles and systems. Issues such as <b>distributed</b> architecture, process coordination, client-server computing, deadlock, network and <b>distributed</b> operating systems, network and <b>distributed</b> file systems, concurrency control and recovery of <b>distributed</b> transactions, and fault-tolerant computing, and real-time <b>distributed</b> systems are studied. Design and implementation projects related {{to some of}} these issues are also assigned...|$|R
40|$|<b>Distributed</b> {{collaboration}} {{is becoming increasingly}} important also in software development. Combined with an increasing interest in experimental and agile approaches to software development, this poses challenges to tool support for software development. Specifically, tool support is needed for flexible, <b>distributed</b> collaboration. We introduce the <b>Distributed</b> Knight tool that provides flexible and lightweight support for <b>distributed</b> collaboration in objectoriented modelling. The <b>Distributed</b> Knight implementation builds crucially on the type-based publish/subscribe <b>distributed</b> communication paradigm, which provides an effective and natural abstraction for developing <b>distributed</b> collaboration tools. KEY WORDS Tool support for object-oriented modelling, <b>distributed</b> collaboration, publish/subscribe...|$|R
40|$|In this paper, {{scheduling}} dependent threads in <b>distributed</b> real-time {{system where}} considered. We present a <b>distributed</b> real-time scheduling algorithm called (EOE-DRTSA (end-to-end <b>distributed</b> real time system Scheduling algorithm)). Now a day completed real-time systems are <b>distributed.</b> One of least developed areas of real-time scheduling is <b>distributed</b> scheduling where in <b>Distributed</b> systems action and information timeliness is often end-to-end. Designers and users of <b>distributed</b> systems often need to dependably reason about end-to-end timeliness. Our scheduling model includes threads and their time constraints depend on developed DTUF value and maintaining end-to-end prosperities of <b>distributed</b> real-time system...|$|R
5|$|In Mozambique, workers {{assisted}} {{people in}} moving to higher grounds following flooding. Members of the Mozambique Red Cross helped <b>distribute</b> {{food and clothing}} to the affected residents, and planes helped drop off supplies to residents in isolated areas.|$|E
5|$|In November 1918 Pickford ended her {{contractual}} obligations with Adolph Zukor and Paramount. She then signed a three-picture deal with First National to <b>distribute</b> her productions.|$|E
5|$|In November 2015, GalaxyTrail {{joined forces}} with the {{subscription}} box company IndieBox to <b>distribute</b> an exclusive physical release of Freedom Planet. This limited collectorâ€™s edition box included a flash-drive with a DRM-free game file, the official 2-disc soundtrack, an instruction manual and Steam key, along with various custom-designed collectibles.|$|E
5000|$|From the 1920s to 1960s, {{theatrical}} cartoons {{were produced}} in huge numbers, and usually shown before {{a feature film}} in a movie theater. Disney (<b>distributed</b> by Pat Powers, then Columbia, then United Artists, then RKO, then independently), Fleischer (<b>distributed</b> by Paramount), Warner Bros., MGM, and UPA (<b>distributed</b> by Columbia) were the largest studios producing these 5- to 10-minute [...] "shorts." [...] Other studios included Walter Lantz (<b>distributed</b> by Universal), DePatie-Freleng (<b>distributed</b> by United Artists), Charles Mintz Studios (later Screen Gems) (<b>distributed</b> by Columbia), Famous Studios (<b>distributed</b> by Paramount), and Terrytoons (<b>distributed</b> by 20th Century Fox).|$|R
50|$|<b>Distributed</b> {{deadlocks}} {{can occur}} in <b>distributed</b> systems when <b>distributed</b> transactions or concurrency control is being used. <b>Distributed</b> deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a <b>distributed</b> algorithm like edge chasing.|$|R
50|$|A <b>distributed</b> {{algorithm}} is an algorithm designed {{to run on}} computer hardware constructed from interconnected processors. <b>Distributed</b> algorithms are used in many varied application areas of <b>distributed</b> computing, such as telecommunications, scientific computing, <b>distributed</b> information processing, and real-time process control. Standard problems solved by <b>distributed</b> algorithms include leader election, consensus, <b>distributed</b> search, spanning tree generation, mutual exclusion, and resource allocation.|$|R
5|$|In early 1941, {{the company}} Nordisk Tonefilm sought {{permission}} to <b>distribute</b> {{the film in}} Sweden but it was banned by the Censor. During the war the movie was never screened in public in Sweden, although the German embassy arranged screenings for special invitees.|$|E
5|$|Jeremy Thomass London-based company HanWay Films handled {{international}} sales. Toho had prebought {{the rights}} to <b>distribute</b> the film in Japan, and released it on 25 September 2010. The film competed for the Golden Lion at the 67th Venice International Film Festival on 9 September 2010.|$|E
5|$|On April 8, Paul Revere rode to Concord to {{warn the}} {{inhabitants}} that the British appeared to be planning an expedition. The townspeople decided to remove the stores and <b>distribute</b> them among other towns nearby.|$|E
40|$|Greenstone is a {{software}} for creating and maintaining <b>distributed</b> digital library collections. It provides a sophisticated federation {{mechanism for the}} collections. In order to support alerting notification about changes in the <b>distributed</b> collections, we propose a <b>distributed</b> directory service {{for the management of}} the <b>distributed</b> Greenstone installations. The Greenstone directory service (GDS) acts on top of the <b>distributed</b> Greenstone structure for the management of collections. This paper describes both, the initial <b>distributed</b> Greenstone structure and the <b>distributed</b> directory service. ...|$|R
40|$|In this paper, we {{defined the}} concept of the grouped <b>distributed</b> objects[10 - 14], as a logical unit of <b>distributed</b> {{application}} service, and developed a <b>distributed</b> programming developing tool-kit based on object group model(OGM-DPD Tool-Kit). This Tool-Kit can provide not only dynamic binding strategy among <b>distributed</b> objects and <b>distributed</b> services using the <b>Distributed</b> Object Group Framework (DOGF) we constructed before, but also implementation of <b>distributed</b> applications easily. Based on the DOGF, this OGM-DPD Tool-Kit provides the functionalities of the register/withdraw management, the access security management for individual <b>distributed</b> object, and the object name/property management as group units in {{the point of view of}} <b>distributed</b> object management. In the point of view of <b>distributed</b> service, our Tool-Kit includes the DOGF that can support naming service, dynamic binding service, replication service, and load balance service for <b>distributed</b> application services. In this paper, we in details specified the object group model and the architecture of the DOGF supporting this Tool-Kit. Finally, we implemented a simple <b>distributed</b> application using this Tool-Kit, and showed the execution of this application to verify the executabilities of the <b>distributed</b> object group management and the <b>distributed</b> services described above. 1...|$|R
40|$|A <b>distributed</b> {{database}} (DDB) is {{a collection}} of multiple, logically interrelated databases <b>distributed</b> over a computer network. A <b>distributed</b> database management system (<b>distributed</b> DBMS) is the software system that permits the management of the <b>distributed</b> database and makes the distribution transparent to the users [1]. The term <b>distributed</b> database system (DDBS) is typically used to refer to the combination of DDB and the <b>distributed</b> DBMS. <b>Distributed</b> DBMSs are similar to <b>distributed</b> file systems (see <b>Distributed</b> File Systems) in that both facilitate access to <b>distributed</b> data. However, there are important differences in structure and functionality, and these characterize a <b>distributed</b> database system: 1. <b>Distributed</b> file systems simply allow users to access files that are located on machines other than their own. These files have no explicit structure (i. e., they are flat) and the relationships among data in different files (if there are any) are not managed by the system and are the users responsibility. A DDB, on the other hand, is organized according to a schema that defines both the structure of the <b>distributed</b> data, and the relationships among the data. The schema is defined according to some data model, which is usually relational or object-oriented (s e e <b>Distributed</b> Database Schemas). 2. A <b>distributed</b> file system provides a simple interface to users which allows them to open, read/write (records or bytes), and close files. A <b>distributed</b> DBMS system has the full functionality of a DBMS. It provides high-level...|$|R
5|$|Paramount did <b>distribute</b> the film, {{but four}} years later Hitchcock sold his stock in Shamley to Universal's parent company (MCA) and his next six films were made at and {{distributed}} by Universal Pictures. After another four years, Paramount sold all rights to Universal.|$|E
5|$|Raphel's {{responsibilities}} included {{oversight of}} spending for law enforcement, improvements in Pakistan's judicial system {{and education programs}} to raise the country's literacy standards. She worked with USAID {{in a number of}} Pakistan's border areas in particular to <b>distribute</b> non-military assistance.|$|E
5|$|The National Eagle Repository, a {{division}} of the FWS, exists as a means to receive, process, and store bald and golden eagles which are found dead, and to <b>distribute</b> the eagles, their parts and feathers, to federally recognized Native American tribes for use in religious ceremonies.|$|E
5|$|A <b>distributed</b> {{computer}} (also {{known as}} a <b>distributed</b> memory multiprocessor) is a <b>distributed</b> memory computer {{system in which the}} processing elements are connected by a network. <b>Distributed</b> computers are highly scalable.|$|R
40|$|<b>Distributed</b> Caml is a <b>distributed</b> {{implementation}} of Caml, a dialect of ML. The compiler produces native code for diverse execution platforms. The <b>distributed</b> shared memory allows transmission and sharing of arbitrary ML objects including higher-order functions, exceptions, and mutable objects. The <b>distributed</b> garbage collector automatically reclaims unused <b>distributed</b> datastructures...|$|R
40|$|In this article, {{we provide}} first a {{definition}} of a <b>distributed</b> database and then we classify different types of <b>distributed</b> database management systems (DDBMSs). Then, three fundamental tasks of a DDBMS, <b>distributed</b> database design, <b>distributed</b> query processing, and <b>distributed</b> transaction management, are introduced, respectively. After that, we address the problems in a federated database system. Finally, we discuss <b>distributed</b> database-related research topics on the Web and XML...|$|R
