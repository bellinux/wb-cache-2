1407|579|Public
5|$|Another use for USB {{mass storage}} devices is the {{portable}} execution of software applications (such as web browsers and VoIP clients) with {{no need to}} install them on the <b>host</b> <b>computer.</b>|$|E
5|$|Ethernet {{standards}} require {{electrical isolation}} between the networked device (computer, phone, etc.) {{and the network}} cable up to 1500VAC or 2250VDC for 60seconds. USB has no such requirement as it was designed for peripherals closely associated with a <b>host</b> <b>computer,</b> and in fact it connects the peripheral and host grounds. This gives Ethernet a significant safety advantage over USB with peripherals such as cable and DSL modems connected to external wiring that can assume hazardous voltages under certain fault conditions.|$|E
25|$|Flash drives {{are used}} to carry {{applications}} that run on the <b>host</b> <b>computer</b> without requiring installation. While any standalone application can in principle be used this way, many programs store data, configuration information, etc. on the hard drive and registry of the <b>host</b> <b>computer.</b>|$|E
40|$|A network {{connection}} blocker for monitoring connections between <b>host</b> <b>computers</b> {{in a network}} and blocking the unwanted connections. The <b>host</b> <b>computers</b> transmit connection packets between each other in accordance with a network protocol suite when seeking to establish, providing network services with, and close the connections. The network protocol suite includes a connection oriented transport layer protocol. The {{network connection}} blocker comprises a network interface that receives the connection packets transmitted between the <b>host</b> <b>computers.</b> It also comprises a blocking module that processes the received connection packets to detect the unwanted connections. The blocking module then generates connection packets {{in accordance with the}} network protocol suite to cause the detected unwanted connections to be closed by the corresponding <b>host</b> <b>computers</b> between which are the unwanted connections. The network interface then transmits the generated connection packets to these <b>host</b> <b>computers...</b>|$|R
50|$|NCP {{provided}} {{connections and}} flow control between processes running on different ARPANET <b>host</b> <b>computers.</b> Application services, such as email and file transfer, were built {{on top of}} NCP, using it to handle connections to other <b>host</b> <b>computers.</b>|$|R
5000|$|<b>Computer</b> Laboratory <b>hosts</b> <b>computers</b> {{for access}} to the Internet.|$|R
25|$|The readout can be analog or digital, and increasingly, modern {{instruments}} are offering serial communications with a <b>host</b> <b>computer</b> or network.|$|E
25|$|Originally, a FireWire {{connection}} to the <b>host</b> <b>computer</b> was used to update songs or recharge the battery. The battery could also be charged with a power adapter that was included with the first four generations.|$|E
25|$|During installation, an iPod is {{associated}} with one <b>host</b> <b>computer.</b> Each time an iPod connects to its <b>host</b> <b>computer,</b> iTunes can synchronize entire music libraries or music playlists either automatically or manually. Song ratings can be set on an iPod and synchronized later to the iTunes library, and vice versa. A user can access, play, and add music on a second computer if an iPod is set to manual and not automatic sync, but anything added or edited will be reversed upon connecting and syncing with the main computer and its library. If a user wishes to automatically sync music with another computer, an iPod's library will be entirely wiped and replaced with the other computer's library.|$|E
50|$|Netcraft {{maintains}} the uptime records for {{many thousands of}} web <b>hosting</b> <b>computers.</b>|$|R
5000|$|Amazon Elastic Compute Cloud (EC2), a {{commercial}} web service for <b>hosting</b> <b>computer</b> applications ...|$|R
40|$|In this paper, {{we present}} a {{framework}} to use an arbitrary number of mouse and keyboard input devices controlling Swing based Java applications. These devices can be distributed amongst any number of <b>host</b> <b>computers</b> on a network. We use this framework to provide independent input devices {{to a number of}} users on different <b>host</b> <b>computers.</b> These users can then work collaboratively on applications...|$|R
25|$|Standard-A USB plug {{provides}} a physical interface to the <b>host</b> <b>computer.</b> Some USB flash drives use USB plug {{that does not}} protect the 4 contacts, {{with the possibility of}} plugging it into the USB port the other way around.|$|E
25|$|Independent of the <b>host</b> <b>computer,</b> a {{hardware}} device might have embedded firmware to control its operation. Firmware is used when {{the computer program}} is rarely or never expected to change, or when the program must not be lost when the power is off.|$|E
25|$|Often, several decorations are {{connected}} to a single USB hub, which is limited to 400mA if it has no external power connection and is drawing all its power from a <b>host</b> <b>computer.</b> With each device drawing 100mA, it is therefore only possible to run four low-power decorations.|$|E
5000|$|Junior Computer lab with 25 {{computers}} {{supported by}} five <b>host</b> <b>computers</b> for Classes I - VIII ...|$|R
40|$|This paper {{presents}} an enhanced interface for an e-voting client application that partially runs inside a small, portable terminal with reduced interaction capabilities. The interface was enhanced by {{cooperating with the}} <b>hosting</b> <b>computer</b> where the terminal is connected to: the <b>hosting</b> <b>computer</b> shows a detailed image of the filled ballot. The displayed image does not convey any personal information, namely the voter's choices, to the hosting computer; voter's choices are solely presented at the terminal. Furthermore, the image contains visual authentication elements that can be validated by the voter using information presented at the terminal. This way, <b>hosting</b> <b>computers</b> {{are not able to}} gather voters' choices or to deceive voters, by presenting tampered ballots, without being noticed...|$|R
50|$|This {{reduced the}} {{processing}} {{load on the}} <b>host</b> <b>computer's</b> central processing unit and dramatically increased system throughput.|$|R
25|$|Unlike the few Apple {{viruses that}} had come before, such as the Elk Cloner virus, that were {{essentially}} annoying but did no damage, the Festering Hate series of viruses was extremely destructive, spreading to all system files it could find on the <b>host</b> <b>computer</b> (hard drive, floppy and system memory) and then destroying everything when it could no longer find any uninfected files.|$|E
25|$|The SBS {{applications}} span all national airspace domains (Oceanic, En Route, Terminal and Surface) {{and require}} tightly coupled coordination with the Terminal and En Route Service Units. Interfaces will be integrated to all major automation platforms that serve the NAS - En Route Automation Modernization (ERAM), <b>HOST</b> <b>Computer</b> System (HCS), Microprocessor En Route Automated Radar Tracking System (MEARTS), Standard Terminal Automation Replacement System (STARS), Common Automated Radar Terminal System (CARTS) and Advanced Technologies and Oceanic Procedures (ATOP).|$|E
25|$|The {{popularity}} of the Selectric mechanism caused computer manufacturers such as Digital Equipment to support the 134.5 baud data rate on their serial computer interfaces, enabling connection of IBM Type 2741 terminals. The 2741 was available with two different seven-bit codes (Correspondence and PTT/BCD). Code choice affected the font elements which could be used. The <b>host</b> <b>computer</b> had to translate the 2741 code into the host’s internal code (usually ASCII or EBCDIC). Dedicated hardware was also built to drive Selectric printers at 134.5 baud.|$|E
50|$|Reality Lab {{was a scene}} graph API {{that would}} run with {{acceptable}} performance on graphics cards or the <b>host</b> <b>computer's</b> CPU.|$|R
30|$|The device {{uses the}} <b>host</b> <b>computer's</b> USB port for power, {{supplying}} 4 USB units of current (400 mA) at the nominal USB VBUS voltage (5 Vdc).|$|R
50|$|The Network Control Program (NCP) {{provided}} the middle {{layers of the}} protocol stack running on <b>host</b> <b>computers</b> of the ARPANET, the predecessor to the modern Internet.|$|R
25|$|Early modems were {{generally}} very simple devices using acoustic couplers to handle telephone operation. The user would first {{pick up the}} phone, dial a number, then press the handset into rubber cups {{on the top of}} the modem. Disconnecting at the end of a call required the user to pick up the handset and return it to the phone. Examples of direct-connecting modems did exist, and these often allowed the <b>host</b> <b>computer</b> to send it commands to answer or hang up calls, but these were very expensive devices used by large banks and similar companies.|$|E
25|$|Parallels Desktop for Mac is a {{hardware}} emulation virtualization software, using hypervisor technology that works by mapping the host computer’s hardware resources {{directly to the}} virtual machine’s resources. Each virtual machine thus operates identically to a standalone computer, with virtually all the resources of a physical computer. Because all guest virtual machines use the same hardware drivers irrespective of the actual hardware on the <b>host</b> <b>computer,</b> virtual machine instances are highly portable between computers. For example, a running virtual machine can be stopped, copied to another physical computer, and restarted.|$|E
25|$|There were {{optional}} {{systems to}} dial {{the phone or}} pick it up, but these were generally implemented as separate devices also intended to be used {{on one end of}} the connection or the other. For instance, the autodialler was a system that automated the action of picking up the phone and dialing a number, and was normally implemented as a separate box that connected to another port on the <b>host</b> <b>computer.</b> Such devices were typically expensive and generally used by larger organizations like banks, who might use one to send an end-of-day file to branch offices.|$|E
5000|$|Memory {{to process}} input {{and build up}} {{the image of a}} page. The printer may have its own memory or may use the <b>host</b> <b>computer’s</b> memory.|$|R
5000|$|Designers {{normally}} constructed FDDI {{rings in}} a network topology such as a [...] "dual ring of trees". A small number of devices, typically infrastructure devices such as routers and concentrators rather than <b>host</b> <b>computers,</b> were [...] "dual-attached" [...] to both rings. <b>Host</b> <b>computers</b> then connect as single-attached devices to the routers or concentrators. The dual ring in its most degenerate form simply collapses into a single device. Typically, a computer-room contained the whole dual ring, although some implementations deployed FDDI as a metropolitan area network.|$|R
5000|$|The CD-based {{parts catalog}} (known as [...] "ETKA") used by Volkswagen Group since 2000 {{requires}} a coded dongle be plugged into a <b>host</b> <b>computer's</b> port {{in order to}} run.|$|R
25|$|Similar to a {{breakout}} device, some docking stations produce multiple connections from one port, only instead of extracting them from internal chipsets, they create them inside the dock using converters. They are functionally identical to a hub with various converters plugged in. Typically USB- or Thunderbolt-based, they incorporate {{a range of}} converters such as USB display adapters or a full external GPU, audio chipsets, NICs, storage enclosures, modems and memory card readers even PCI Express card slots connected through an internal USB hub or PCI Express bridge to give the <b>host</b> <b>computer</b> access to extra connections it did not previously possess. Simpler “docking stations” consist of {{nothing more than a}} hub inside a stand.|$|E
25|$|Hayes' {{solution}} to the problem was to use a small microcontroller to implement a system that examined the data flowing into the modem from the <b>host</b> <b>computer,</b> watching for certain command strings. This allowed commands to be sent to and from the modem using the same data pins as {{all the rest of the}} data, meaning it would work on any system that could support even the most basic modems. The Smartmodem could pick up the phone, dial numbers, and hang up again, all without any operator intervention. The Smartmodem was not necessary for BBS use but made overall operation dramatically simpler. It also improved usability for the caller, as most terminal software allowed different phone numbers to be stored and dialed on command, allowing the user to easily connect to a series of systems.|$|E
25|$|A {{spindle motor}} {{in the drive}} rotates the {{magnetic}} medium at a certain speed, while a stepper motor-operated mechanism moves the magnetic read/write head(s) radially along {{the surface of the}} disk. Both read and write operations require the media to be rotating and the head to contact the disk media, an action originally accomplished by a disk-load solenoid. Later drives held the heads out of contact until a front-panel lever was rotated (5¼") or disk insertion was complete (3½"). To write data, current is sent through a coil in the head as the media rotates. The head's magnetic field aligns the magnetization of the particles directly below the head on the media. When the current is reversed the magnetization aligns in the opposite direction, encoding one bit of data. To read data, the magnetization of the particles in the media induce a tiny voltage in the head coil as they pass under it. This small signal is amplified and sent to the floppy disk controller, which converts the streams of pulses from the media into data, checks it for errors, and sends it to the <b>host</b> <b>computer</b> system.|$|E
5000|$|The [...] "100 block" [...] {{consists}} of 6 classrooms, {{three of them}} <b>hosting</b> <b>computer</b> facilities, {{and one of them}} dedicated to the performing arts. It is the oldest block on the campus.|$|R
50|$|Simple Service Discovery Protocol (SSDP) is a UPnP protocol, used in Windows XP and later. SSDP uses HTTP {{notification}} announcements {{that give}} a service-type URI and a Unique Service Name (USN). Service types are {{regulated by the}} Universal Plug and Play Steering Committee. SSDP is supported by many printer, NAS and appliance manufacturers such as Brother, certain brands of network equipment, and in many SOHO firewall appliances, where <b>host</b> <b>computers</b> behind it may pierce holes for applications. It is also used in home theater PC systems, where media exchange between <b>host</b> <b>computers</b> and the media center is facilitated using SSDP.|$|R
50|$|The LVM {{also works}} in a shared-storage cluster in which disks holding the PVs are shared between {{multiple}} <b>host</b> <b>computers,</b> but can require an additional daemon to mediate metadata access via a form of locking.|$|R
