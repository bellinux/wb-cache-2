16|417|Public
5000|$|The <b>formatted</b> <b>disk</b> {{capacity}} is always {{less than the}} [...] "raw" [...] unformatted capacity specified by the disk's manufacturer, because some portion of each track is used for sector identification and for gaps (empty spaces) between sectors {{and at the end}} of the track.|$|E
5000|$|Ahoy! in October 1985 called Fast Hack'em [...] "a must-needed utility for Commodore disk users" [...] and [...] "probably {{the fastest}} way to copy an entire 1541 <b>formatted</b> <b>disk</b> at the present time", joking that a {{disadvantage}} was the end of [...] "leisurely coffee breaks or refrigerator raids" [...] during copying.|$|E
50|$|NSS was an ActiveX {{document}} storage technology {{that has since}} been discontinued by Microsoft. It allowed ActiveX Documents to be stored in the same multi-stream format that ActiveX uses internally. An NSS file system filter was loaded and used to process the multiple streams transparently to the application, and when the file was transferred to a non-NTFS <b>formatted</b> <b>disk</b> volume it would also transfer the multiple streams into a single stream.|$|E
5000|$|HDD <b>format</b> <b>disks</b> (only version 2; version 3 and 4 are not supported) used by Parallels {{virtualization}} products ...|$|R
50|$|DFC5 {{could only}} copy {{standard}} AmigaOS <b>formatted</b> <b>disks</b> for backup purposes; however, it multitasked {{inside of the}} Amiga Workbench GUI.|$|R
50|$|GPT <b>formatted</b> <b>disks</b> and the UEFI {{partition}} specification do {{not allow}} hidden sectors. Microsoft reserves a chunk of disk space using this MSR partition type, to provide an alternative data storage space for such software components which previously may have used hidden sectors on MBR <b>formatted</b> <b>disks.</b> Such software components, for example LDM as mentioned above, can create a small software-component specific partition from {{a portion of the}} space reserved in the MSR partition.|$|R
50|$|Disks {{using the}} Apple Partition Map {{are divided into}} logical blocks, with 512 bytes usually {{belonging}} to each block. The first block, Block 0, contains an Apple-specific data structure called “Driver Descriptor Map” for the Macintosh Toolbox ROM to load driver updates and patches before loading from a MFS or HFS partition. Because APM allows 32 bits worth of logical blocks, the historical size of an APM <b>formatted</b> <b>disk</b> using small blocks is limited to 2 TiB.|$|E
5000|$|A {{recording}} format [...] is a format for encoding data for storage on a storage medium. The format can be container {{information such as}} sectors on a disk, or user/audience information (content) such as analog stereo audio. Multiple levels of encoding may be achieved in one format. For example, a text encoded page may contain HTML and XML encoding, combined in a plain text file format, using either EBCDIC or ASCII character encoding, on a UDF digitally <b>formatted</b> <b>disk.</b>|$|E
50|$|In 1993, it was ported to Amiga and Mega Drive/Genesis. The Amiga {{floppy disk}} port is nearly {{identical}} in interface and game {{play to the}} PC version, albeit with less detailed graphics and frequent disk swapping (the game came on five disks). Save games are stored on a specially <b>formatted</b> <b>disk</b> and the game could also be installed to hard drive. In the Amiga version the player is limited to 32 units, but patches exist to allow the DOS version to have 255 units created and managed.|$|E
5000|$|Mirror — a {{tool for}} storing the File Allocation Table to permit {{recovery}} of high-level <b>formatted</b> <b>disks</b> in combination with Unformat ...|$|R
25|$|Games - Games: This scene {{concentrates}} on both computer based games, and video game consoles, often released as ISO or other <b>format</b> <b>disk</b> image.|$|R
5000|$|Since Ghost 9 {{does not}} support the older [...]gho <b>format</b> <b>disk</b> images, a {{separate}} CD containing Ghost 2003 is included in the retail packaging for users needing to access those older images.|$|R
50|$|At {{various times}} {{throughout}} {{the game the}} player can become delirious. When this happens the joystick controls will respond in a random manner until the delirium has passed. To save a game the player must go into a pub in a port city. Up to ten games can be saved on a <b>formatted</b> <b>disk.</b> The game is won when the player finds the Lost Tomb of Pharaoh Ahnk Ahnk. A splash screen is shown and special music is played. The tomb is in a different (randomly generated) spot for each game.|$|E
50|$|Dostypes are {{backwards}} compatible with each other, but not forward compatible. A DOS7 <b>formatted</b> <b>disk</b> cannot be read on original Amiga FFS, and a DOS3 disk cannot be read on a KS1.3 Amiga. However, any disk formatted with DOS0 using FFS or FFS2 {{can be read}} by any version of the Amiga operating system. For this reason, DOS0 tended to be the format of choice of software developers distributing on floppy, except where a custom filesystem and bootblock was used - a common practice in Amiga games. Where software needed AmigaOS 2 anyway, DOS3 was generally used.|$|E
5000|$|The {{physical}} device DF0: shares the same floppy drive mechanics with PC0:, {{which is the}} CrossDOS virtual device capable of reading PC formatted floppy disks. When any PC formatted floppy disk is inserted into the floppy drive, then the DF0: floppy Amiga icon will change {{to indicate that the}} disk is unknown to the normal Amiga device, and it will show four question marks ???? as the standard [...] "unknown" [...] volume name, while the PC0: icon will appear revealing the name of the PC <b>formatted</b> <b>disk.</b> Any disk change with Amiga formatted disks will invert this behaviour.|$|E
50|$|BYTE criticized EasyWriter II {{for running}} as a booter instead of using DOS, {{requiring}} specially <b>formatted</b> <b>disks</b> for storage and a utility to convert to DOS-formatted disks, not being compatible with double-sided drives, and using a heavily modal editing interface.|$|R
50|$|NewDos/80 {{had many}} options for specifying {{specific}} low-level disk configurations. Settings such as diskette <b>formats,</b> <b>disk</b> drive types, track geometry and controllers could be configured using the PDRIVE command. In version 2.1, Apparat added support for hard disk drives via an external bus adapter.|$|R
50|$|Like most {{computers}} {{from the}} late 1970s and 1980s, the Commodore 64 came with {{a version of the}} BASIC programming language. It was used for both writing software and for performing the duties of an operating system such as loading software and <b>formatting</b> <b>disks.</b>|$|R
5000|$|FDI (from <b>Formatted</b> <b>Disk</b> Image) is a {{universal}} disk image file format specification originally published by Vincent Joguin in 2000. The FDI format is publicly documented, and accompanied by open source access tools. Because the format can store raw low-level data, as is for example required to support copy protection schemes and other non-standard formats, FDI files can be larger than disk image files in other formats. The typical file extension is [...] ".fdi". Because of the universal design of the FDI format, files in other disk image formats, such as ADF, ADZ and DMS, can in theory be converted to FDI.|$|E
50|$|A true 180K double-density Atari floppy format uses 128-byte sectors for sectors 1-3, then 256-byte sectors for 4-720. The {{first three}} sectors {{typically}} contain boot code as {{used by the}} onboard ROM OS; {{it is up to}} the resulting boot program (such as SpartaDOS) to recognize the density of the <b>formatted</b> <b>disk</b> structure. While this 180K format was developed by Atari for their DOS 2.0D and their (canceled) Atari 815 floppy drive, that double-density DOS was never widely released and the format was generally used by third-party DOS products. Under the Atari DOS scheme, sector 360 is the FAT sector map, and sectors 361-367 contain the file listing. The Atari-brand DOS versions and compatible use three bytes per sector for housekeeping and to link-list to the next sector.|$|E
50|$|CrossDOS was {{originally}} {{developed as a}} stand-alone commercial product by Consultron, which was available for AmigaOS 1.2 and 1.3. In 1992 Commodore included a version of CrossDOS with AmigaOS 2.1 (and with later versions), so that users could work with PC formatted disks. In fact, the bundled version will also work with version 2.0 of AmigaOS. The bundled CrossDOS replaced an obscure tool in earlier versions of AmigaOS that could access FAT formatted disks on a secondary floppy disk drive only (this tool was not a complete file system but a user program to read files from a FAT <b>formatted</b> <b>disk).</b> Development of CrossDOS continued after being bundled with the OS. CrossDOS 7 was the last version released and included support for long filenames and other features not available in the bundled version.|$|E
5000|$|<b>Disk</b> <b>formatting</b> and <b>disk</b> {{partitioning}} {{tools are}} responsible for generating low level disk layouts and file systems. Operating systems typically supply one or more programs performing these functions {{as part of their}} standard install: ...|$|R
50|$|The Acorn {{filesystem}} {{design is}} interesting to some people because all ADFS-based storage devices connect to a module called FileCore which provides almost all the features required to implement an ADFS-compatible filesystem. Because of this modular design, it is easy in RISC OS 3 to add support for so-called image filing systems. These are used to implement completely transparent support for IBM PC <b>format</b> floppy <b>disks,</b> including the slightly different Atari ST format. Computer Concepts released a package that implements an image filing system to allow access to high density Macintosh <b>format</b> <b>disks.</b>|$|R
50|$|Many {{mutually}} incompatible floppy <b>disk</b> <b>formats</b> are possible; {{aside from}} the physical <b>format</b> on the <b>disk,</b> incompatible file systems are also possible.|$|R
5000|$|The Universal Floppy Disk Controller (UFDC) was an add-on {{floppy disk}} {{interface}} developed by Microcomputer Engineering (MCE). The UFDC {{was based on}} the Western Digital WD2793 floppy disk controller chip and had a Z80 DMA controller on board. The most popular disk format was 5" [...] (133 mm) 80 track, double sided, double density using a Mitsubishi floppy drive mechanism. This gave a <b>formatted</b> <b>disk</b> capacity of 800kB. The UFDC's use of DMA required the VDUEB upgrade to be present. To install the disk controller, the Z80 CPU was removed from the main computer board and installed on the UFDC board. The UFDC then piggybacked on the socket vacated by the CPU. This meant that in theory, the UFDC could be used with almost any Z80 based system, provided there was enough physical space above the CPU. The UFDC used a primitive track based disk operating system called [...] "Super-80 DOS", however a CP/M BIOS later became available.|$|E
40|$|Contributions on a PC <b>formatted</b> <b>disk,</b> in any {{standard}} word processor or DOS (ASCII) text, or as e-mail attachments, will assist the Editor. While care {{is taken to}} accurately report information, SILnews is not responsible for information and/or advertisements published herein and does not endorse, approve or recommend products, programs or opinions expressed...|$|E
40|$|Image Display and Analysis Systems (MIDAS) {{developed}} at NASA/Ames {{for the analysis}} of Landsat MSS images is described. The MIDAS computer power and memory, graphics, resource-sharing, expansion and upgrade, environment and maintenance, and software/user-interface requirements are outlined; the implementation hardware (including 32 -bit microprocessor, 512 K error-correcting RAM, 70 or 140 -Mbyte <b>formatted</b> <b>disk</b> drive, 512 x 512 x 24 color frame buffer, and local-area-network transceiver) and applications software (ELAS, CIE, and P-EDITOR) are characterized; and implementation problems, performance data, and costs are examined. Planned improvements in MIDAS hardware and design goals and areas of exploration for MIDAS software are discussed...|$|E
5000|$|Catweasel - Universal <b>format</b> floppy <b>disk</b> drive {{controller}} card ...|$|R
50|$|The {{data area}} {{begins with a}} set of one or more volume descriptors, {{terminated}} with a volume descriptor set terminator. Collectively the volume descriptor set acts as a header for the data area, describing its content (similar to the BIOS parameter block used by FAT, HPFS and NTFS <b>formatted</b> <b>disks).</b>|$|R
5000|$|A DOS tool {{written in}} Pascal by Christoph H. Hochstätter that {{allows users to}} <b>format</b> floppy <b>disks</b> to a higher than usual density, {{enabling}} the user to store up to 300 kilobytes more data on a normal high density 3.5" [...] floppy disk. It also increases the speed of diskette I/O on these specially <b>formatted</b> <b>disks</b> using a technique called [...] "Sector Sliding". In this technique, the physical sectors on the disk are ordered {{in such a way}} that when the drive advances to the next track, the next logical sector waiting to be read is immediately available to the read head.|$|R
40|$|ITC/USA 2010 Conference Proceedings / The Forty-Sixth Annual International Telemetering Conference and Technical Exhibition / October 25 - 28, 2010 / Town and Country Resort & Convention Center, San Diego, CaliforniaThe RCC IRIG Chapter 10 {{standard}} {{requires that}} Chapter 10 recorders use the STANAG- 4575 (NATO Advanced Data Storage Interface) file system to store data files. The STANAG- 4575 standard defines a linear file {{system in which}} each file is stored in a single contiguous block of disk space. There is a small directory listing {{at the beginning of}} the disk. This listing stores the starting position and length for each file. It also stores the file's name and its creation date and time. This file system is very efficient for storing files that are recorded sequentially because it does not require the disk to constantly update a file allocation table on each write. Unfortunately, the STANAG- 4575 file system is not directly supported by Microsoft Windows. This means that it is not possible to simply attach a recorder's disk to a PC and copy the files directly using Windows Explorer. This paper will discuss an approach that allows the contents of a STANAG <b>formatted</b> <b>disk</b> to be read from a standard Windows PC. In addition to copying files from the disk, this approach allows several other useful operations to be performed on the disk. These operations include advanced copy options such as partial file copies and splitting files into multiple pieces. It can also provide a mechanism for deleting files, reformatting the disk and performing a sanitization procedure on a disk to declassify it...|$|E
50|$|The ASR-10 {{featured}} a 3.5 inch {{floppy disk drive}} used with proprietary <b>formatted</b> <b>disks</b> capable of holding up to 1640K. (The decision {{to go with a}} proprietary format was to get around the then-limitation of DOS filenames which were limited to 8 characters.) There are many computer programs that allow reading, writing, and <b>formatting</b> Ensoniq's <b>disk</b> and file system, among those made by Chicken Systems (Translator and Disk Tools), and a German programmer named Thoralt who created ensoniqfs, a filesystem plugin for Total Commander. Ensoniq's architecture allowed a sound to be loaded from floppy while the keyboard was operational.|$|R
50|$|The {{fragmented}} CP/M market, requiring distributors {{either to}} stock multiple <b>formats</b> of <b>disks</b> or {{to invest in}} multiformat duplication equipment, compared with the more standardized IBM PC <b>disk</b> <b>formats,</b> was a contributing factor to the rapid obsolescence of CP/M after 1981.|$|R
50|$|A similar sized disk {{was also}} used by the Zenith Minisport laptop {{computer}} from 1989, digitally formatted for data storage. The Minisport could store up to 793 KB of information on 2-inch LT <b>format</b> <b>disks</b> called LT-1. Video floppy and LT-1 are not compatible, so media can not be interchanged between drives using video floppy or LT standards.|$|R
50|$|Like all {{hardware}} RAID systems, Drobo units <b>format</b> <b>disks</b> in {{a proprietary}} way that cannot be mounted or read {{on any other}} system, though data recovery is possible from a professional data recovery service. Users with failed Drobo units can recover saved data using another Drobo, as Drobo maintains backwards compatibility with different versions of their proprietary format.|$|R
50|$|The B-series {{retained}} the IEEE-488 interface from the PET {{instead of the}} IEC serial interface on the VIC-20 and C64. IEC drives will require an adapter {{as well as a}} modified kernal ROM. The small amount of software Commodore developed for the B-series was distributed on 500k 8050 <b>format</b> <b>disks</b> rather than the 170k 4040/1541 format.|$|R
