0|2706|Public
40|$|The {{results of}} a {{measurement}} campaign regarding the driving point harmonic impedance of one node of the 400 kV Italian transmission network are presented and discussed, using a method suitable for high order harmonics (up to 50 th). A model of the network has been then set up and the relevant results compared with the measurement, showing the crucial effect of the equivalent <b>impedance</b> <b>simulating</b> the external <b>network...</b>|$|R
3000|$|X). One {{could argue}} that no metric is needed because with a large enough set of <b>simulated</b> <b>networks,</b> the {{probability}} of networks that contain the observed network is simply the fraction of these <b>simulated</b> <b>networks</b> that contain the observed one. The difficulty {{is that there is}} a large number of states: potentially 2 [...]...|$|R
40|$|A <b>simulated</b> <b>network</b> {{protocol}} {{provides the}} capability of distributed simulation to a generic simulator. Through this, full coverage of management of data and service handling among separated simulators is achieved. The distributed simulation environment is much more conducive to handling simulation load balancing and hazard treatment than a standalone computer. According to the <b>simulated</b> <b>network</b> protocol, one simulator takes {{on the role of}} server and the other simulators take on the role of client, and client is controlled by server. The purpose of the <b>simulated</b> <b>network</b> protocol is to seamlessly connect multiple simulator instances into a single simulation environment. This paper presents the development of a <b>simulated</b> <b>network</b> (simNetwork) that provides {{the capability of}} distributed simulation to a generic simulator (GenSim), which is a software simulator of satellites that has been developed by the Korea Aerospace Research Institute since 2010, to use as a flight software validation bench for future satellite development...|$|R
5000|$|<b>Network</b> models - <b>Simulate</b> <b>networks</b> with {{specific}} characteristics. Examples include random graphs (E-R models), Preferential attachment models, and small-world models.|$|R
40|$|ITC/USA 2007 Conference Proceedings / The Forty-Third Annual International Telemetering Conference and Technical Exhibition / October 22 - 25, 2007 / Riviera Hotel & Convention Center, Las Vegas, NevadaWhen network-centric {{flight test}} system {{components}} are developed concurrently, {{it is necessary}} to produce relevant <b>simulated</b> <b>network</b> traffic for exercising the network devices and other processing subsystems prior to system integration. Having an accurate and repeatable pattern of <b>simulated</b> <b>network</b> traffic is extremely important for debugging and subsystem integration. The <b>simulated</b> <b>network</b> traffic must be both representative of the real system and repeatable to aid test efforts. Our solution to this problem was to develop a model-driven network traffic generator – NETGEN. Using NETGEN to resolve errors, stress test, and verify requirements, we have achieved otherwise unattainable correctness, reliability, and success in our systems...|$|R
40|$|In the {{industry}} {{there is a}} need for a more efficient way to troubleshoot machines that uses the protocol EtherNet/IP. The current methods is time consuming and complex. This project gather data from a <b>simulated</b> <b>network</b> and analyze the data. The result of the analyze is presented on a cellphone application with a description and a possible solution. The application is a cross-platform application developed with Cordova. The <b>simulated</b> <b>network</b> is created on a Raspberry Pi 2. The analyze is done on another Raspberry Pi 2 running the software Node-RED. Communication between the <b>simulated</b> <b>network</b> Raspberry and the cellphone is with Bluetooth Low Energy. Communication between cellphone and the server is with MQTT. There are several areas where this kind of application may suit. This project is in one specific area – troubleshooting EtherNet/IP...|$|R
30|$|Based on the {{implemented}} and <b>simulated</b> <b>network</b> scenario, typical performance metrics derived by system-level simulations include cell and user-throughputs, fairness figures, or error statistics.|$|R
30|$|OPNET is {{simulation}} software {{which is used}} to model and <b>simulate</b> <b>networks.</b> It uses three layers of modeling mechanism of network, node, and process.|$|R
3000|$|... values {{over these}} {{retained}} networks. The reconstructed network then, is the conditional expected network under the estimated stochastic blockmodel given {{the set of}} observed links. This simulation procedure is not trivial because each player does not necessarily keep membership in the same group from <b>simulated</b> <b>network</b> to <b>simulated</b> <b>network.</b> Note that under this frequentist approach to network reconstruction, we interpret the data to be a (possibly censored) realization from the stochastic network defined by the joint probability law given above.|$|R
40|$|Abstract: In {{the paper}} is applied wavelet-based Hurst {{parameter}} estimator for analysis of <b>simulated</b> <b>network</b> traffic, based on the fractional Gaussian noise. It was made a comparative analysis between the results obtained of wavelet-based estimator and wide using estimators as R/S statistic, variance-time plot and periodogram. The Hurst parameter obtained of wavelet-based estimator has the least value of relative inaccuracy {{compared to the other}} estimators. The <b>simulated</b> <b>network</b> traffic has a high degree of accuracy and this generator can be used in practical computer simulation studies...|$|R
50|$|Bit-Twist is {{commonly}} used to <b>simulate</b> <b>network</b> traffic to test firewall rules, IDS, and IPS. Bit-Twist runs on FreeBSD, NetBSD, OpenBSD, Mac OS X, Linux, and Microsoft Windows.|$|R
40|$|We {{present an}} open and {{flexible}} software infrastructure that embeds physical hosts in a <b>simulated</b> <b>network.</b> In real-time network simulation, where real-world implementations of distributed applications and network services can run together with the network simulator that operates in real time, real network packets are injected into the simulation system and subject to the <b>simulated</b> <b>network</b> conditions computed {{as a result of}} both real and virtual traffic traversing the network and competing for network resources. Our real-time simulation infrastructure has been implemented based on Open Virtual Private Network (OpenVPN), modified and customized to bridges traffic between the physical hosts and the <b>simulated</b> <b>network.</b> We identify the performance advantages and limitations of our approach via a set of experiments. We also present two interesting application scenarios to show the capabilities of the real-time simulation infrastructure. Preprint submitted to Journal of Systems and Software 4 August 2008 Key words: Network simulation, network emulation, real-time simulation, virtual private network...|$|R
50|$|EDLUT (Event-Driven LookUp Table) is a {{computer}} application for <b>simulating</b> <b>networks</b> of spiking neurons.It {{was developed in the}} University of Granada and source code was released under GNU GPL version 3.|$|R
50|$|The Contiki system {{includes}} a network simulator called Cooja, which <b>simulates</b> <b>networks</b> of Contiki nodes. The nodes may belong {{to either of}} three classes: emulated nodes, where the entire hardware of each node is emulated, Cooja nodes, where the Contiki code for the node is compiled for and executed on the simulation host, or Java nodes, where {{the behavior of the}} node must be reimplemented as a Java class. One Cooja simulation may contain a mix of nodes from any of the three classes. Emulated nodes {{can also be used to}} include non-Contiki nodes in a <b>simulated</b> <b>network.</b>|$|R
50|$|Sirannon {{has been}} {{accepted}} {{as part of the}} reference toolchain, defined in the final testplan of the Video Quality Experts Group (VQEG) Hybrid Perceptual/Bitstream project, for streaming video sequences and <b>simulating</b> <b>network</b> impairments.|$|R
50|$|Simulation is an {{important}} feature in engineering systems or any system that involves many processes. For example, in electrical engineering, delay lines {{may be used to}} simulate propagation delay and phase shift caused by an actual transmission line. Similarly, dummy loads may be used to <b>simulate</b> <b>impedance</b> without <b>simulating</b> propagation, and is used in situations where propagation is unwanted. A simulator may imitate {{only a few of the}} operations and functions of the unit it simulates. Contrast with: emulate.|$|R
50|$|Each {{process can}} be {{performed}} with localized minimal communication, and very small router tables. OORP requires about 200K of memory. A <b>simulated</b> <b>network</b> with 500 nodes transmitting at 200 bytes/second organized itself in about 20 seconds.|$|R
50|$|OverSim was {{designed}} with performance in mind. On a modern desktop PC a typical Chord network of 10,000 nodes can be simulated in real-time. The simulator {{was used to}} successfully <b>simulate</b> <b>networks</b> of up to 100,000 nodes.|$|R
30|$|In this section, the metrics adopted for the {{performance}} evaluation are introduced first. The structure of the <b>simulated</b> <b>network</b> and simulation parameters are then presented. Finally, {{the performance}} of DIHAT algorithm is evaluated and compared with the existing algorithms.|$|R
2500|$|Simulation is an {{important}} feature in engineering systems or any system that involves many processes. [...] For example, in electrical engineering, delay lines {{may be used to}} simulate propagation delay and phase shift caused by an actual transmission line. [...] Similarly, dummy loads may be used to <b>simulate</b> <b>impedance</b> without <b>simulating</b> propagation, and is used in situations where propagation is unwanted. [...] A simulator may imitate {{only a few of the}} operations and functions of the unit it simulates. Contrast with: emulate.|$|R
40|$|The paper {{proposes a}} {{solution}} for testing of a physical distributed generation system (DGs) along with a computer <b>simulated</b> <b>network.</b> The computer <b>simulated</b> <b>network</b> is referred as the virtual grid in this paper. Integration of DG with the virtual grid provides broad area of testing of power supplying capability and dynamic performance of a DG. It is shown that a DG can supply a part of load power while keeping Point of Common Coupling (PCC) voltage magnitude constant. To represent the actual load, a universal load along with power regenerative capability is designed {{with the help of}} voltage source converter (VSC) that mimics the load characteristic. The overall performance of the proposed scheme is verified using computer simulation studies...|$|R
40|$|We {{present a}} novel neural network method for the {{analysis}} and interpretation of data that describes user interaction with a training tool. The method {{is applied to the}} interaction between trainee network managers and a <b>simulated</b> <b>network</b> management system. A simulation based approach to the task of efficiently training network managers, {{through the use of a}} <b>simulated</b> <b>network,</b> was originally presented by Pattinson [2000]. The motivation was to provide a tool for exposing trainee network managers to a life like situation, where both normal network operation and ‘fault’ scenarios could be simulated in order to train the network manager. The data logged by this system describes the detailed interaction between trainee <b>network</b> manager and <b>simulated</b> <b>network.</b> The work presented here provides an analysis of this interaction data that enables an assessment of the capabilities of the network manager as well as an understanding of how the network management tasks are being approached. A neural network architecture [Lee, Palmer-Brown, Roadknight 2004] is adapted and implemented in order to perform an exploratory data analysis of the interaction data. The neural network architecture employs a novel form of continuous self-organisation to discover key features, and thus provide new insights into the data...|$|R
40|$|This paper {{presents}} {{a new approach}} to randomly generate interbank networks while overcoming shortcomings in the availability of bank-by-bank bilateral exposures. Our model can be used to simulate and assess interbank contagion effects on banking sector soundness and resilience. We find a strongly non-linear pattern across the distribution of <b>simulated</b> <b>networks,</b> whereby only for a small percentage of networks the impact of interbank contagion will substantially reduce average solvency of the system. In {{the vast majority of the}} <b>simulated</b> <b>networks</b> the system-wide contagion effects are largely negligible. The approach furthermore enables to form a view about the most systemic banks in the system in terms of the banks whose failure would have the most detrimental contagion effects on the system as a whole. Finally, as the simulation of the network structures is computationally very costly, we also propose a simplified measure - a so-called Systemic Probability Index (SPI) - that also captures the likelihood of contagion from the failure of a given bank to honour its interbank payment obligations but at the same time is less costly to compute. We find that the SPI is broadly consistent with the results from the <b>simulated</b> <b>network</b> structures...|$|R
40|$|In {{this paper}} we {{describe}} a simulation framework designed for <b>simulating</b> wireless <b>network</b> technologies. We provide a detailed {{architecture of the}} framework and illustrate all the necessary steps to develop simulations for any particular wireless networking application. We demonstrate {{the use of this}} framework by <b>simulating</b> <b>network</b> intrusion detection system for wireless ad hoc networks. We also extend the framework architecture to multiprocessor environments and describe the optimizations to further improve the performance of the simulation system for large-scale simulations of wireless networks...|$|R
30|$|Despite {{the rapid}} {{developments}} in coupling dynamics of multiplex transportation networks, most existing works {{are based on}} <b>simulated</b> <b>networks</b> or <b>simulated</b> travel demands. This may lead to findings inconsistent with empirical evidence. First, the actual topology of a transportation network is usually {{much more complicated than}} the topology of a <b>simulated</b> <b>network.</b> Second, the obtained coupling results usually deviate from real situations when using uniformly (randomly) generated travel demands [27]. Third, mobile phone data [30, 31] cannot be used to capture the transfers between different network layers either. Finally, the inconvenience of transfers and individual preferences cannot be evaluated and incorporated in building the models. In summary, previous works had to make strong assumptions on travelers’ routes and mode-selection behavior {{due to the lack of}} data.|$|R
40|$|Abstract — The {{network delay}} {{is one of}} the most {{important}} impairments for VoIP (Voice Over IP). This paper focuses on the bi-objective optimization problem of minimizing sampling cost and also minimizing the error in the estimation of the actual delay traces. We also analyze the real network delay measurements and the <b>simulated</b> <b>network</b> delay trace for fractional Brownian motion (fBm) traffic. We find that a shifted Gamma distribution models the network delay marginal distribution very well. The simulation based on the <b>simulated</b> <b>network</b> delay trace shows that our novel optimal sampling strategy can obtain a 20 dB Signal to Noise Ratio(SNR) in measurement accuracy at as low as 1. 3 HZ sampling frequency. Index Terms: signal sampling, optimization methods, signal reconstruction...|$|R
40|$|This paper {{presents}} a novel neural network method {{for the analysis}} and interpretation of data that describes user interaction with a training tool. The method {{is applied to the}} interaction between trainee network managers and a <b>simulated</b> <b>network</b> management system. A simulation based approach to the task of efficiently training network managers, {{through the use of a}} <b>simulated</b> <b>network,</b> was originally presented by Pattinson [2000]. The motivation was to provide a tool for exposing trainee network managers to a life like situation, where both normal network operation and ‘fault’ scenarios could be simulated in order to train the network manager. The data logged by this system describes the detailed interaction between trainee <b>network</b> manager and <b>simulated</b> <b>network.</b> The work presented here provides an analysis of this interaction data that enables an assessment of the capabilities of the network manager as well as an understanding of how the network management tasks are being approached. A neural network architecture [Lee et al, 2004] is adapted and implemented in order to perform an exploratory data analysis of the interaction data. The neural network architecture employs a novel form of continuous self-organisation to discover key features, and thus provide new insights into the data...|$|R
30|$|We use a <b>simulated</b> <b>network</b> with 200 sensor nodes to {{evaluate}} the performance of our sensory data acquisition algorithms. The network is deployed into a rectangular region with 200 × 200 m size. The transmission range of each sensor node is set to be 25 m.|$|R
40|$|The thesis {{describes}} a {{design and implementation}} of Nemea system module purposed on generation of records about <b>simulated</b> <b>network</b> attacks. This thesis also contains brief description of Nemea system and several network attacks. Finally, part of this work is description of simulated attacks and methods of simulations...|$|R
40|$|The {{analysis}} of traffic multifractal properties in information telecommunication networks {{is carried out}} and its multifractal models are investigated. As the methods of analysis multifractal detrended fluctuation analysis and wavelet transform modulus maxima method are used. To <b>simulate</b> <b>network</b> traffic two types of multifractal wavelet models are used...|$|R
40|$|We {{present a}} new {{conservative}} event-synchronization protocol, time-based synchronization, for parallel discreteevent simulation of mobile ad hoc wireless networks. Simulators that use our protocol proceed at a scaled version of real time and send messages that correspond only to transmissions in the <b>simulated</b> <b>network.</b> We show that such simulators can maintain a constant execution time {{even as the}} sizes of the <b>networks</b> that they <b>simulate</b> grow. Moreover, we show that these simulators, when executed on a custom parallel architecture, are capable of <b>simulating</b> many <b>networks</b> faster than real time. 1...|$|R
40|$|In this study, {{a network}} {{quality of service}} (QoS) {{evaluation}} system was proposed. The system used a combination of fuzzy C-means (FCM) and regression model to analyse and assess the QoS in a <b>simulated</b> <b>network.</b> Network QoS parameters of multimedia applications were intelligently analysed by FCM clustering algorithm. The QoS parameters for each FCM cluster centre were then inputted to a regression model in order to quantify the overall QoS. The proposed QoS evaluation system provided valuable information about the network’s QoS patterns and based on this information, the overall network’s QoS was effectively quantified...|$|R
2500|$|... a neuron {{simulator}} {{also useful}} to <b>simulate</b> neural <b>networks.</b>|$|R
5000|$|<b>Simulated</b> neural <b>networks</b> emulating the {{calculus}} of {{propositional logic}} ...|$|R
40|$|Network {{analysis}} has a crucial need for tools to compare networks {{and assess the}} significance of differences between networks. We propose a principled statistical approach to network comparison that approximates networks as probability distributions on negatively curved manifolds. We outline the theory, as well as implement the approach on <b>simulated</b> <b>networks...</b>|$|R
30|$|The above {{models are}} {{embedded}} into a travel demand simulation environment. In this study, {{it is implemented}} in VISUM by coding the associated algorithm into the computing programs via COM open source function. The <b>simulated</b> <b>network</b> traffic assignment and other derived variable from the simulation will be merged into the performance system.|$|R
