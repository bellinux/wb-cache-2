158|2921|Public
5000|$|Article 15(1)(b) of the {{directive}} gives member states {{the option of}} adopting the <b>development</b> <b>risks</b> defence: ...|$|E
50|$|Development {{testing is}} a {{software}} development process that involves synchronized {{application of a}} broad spectrum of defect prevention and detection strategies in order to reduce software <b>development</b> <b>risks,</b> time, and costs.|$|E
5000|$|Section 6(10) {{was added}} by the Consumer Protection Act 1987 disapplies duties as to {{articles}} and substances used at work where a risk [...] "is {{shown to be}} one the occurrence of which could not reasonably be foreseen". This {{is known as the}} <b>development</b> <b>risks</b> defence.|$|E
40|$|Software {{development}} project is often faced with unanticipated problems which pose any potential <b>risks</b> within the <b>development</b> environment. Controlling these risks arises {{from both the}} technical and non-technical development components already from {{the early stages of}} the development is crucial to arrive at a successful project. Therefore, software <b>development</b> <b>risk</b> management is becoming recognized as a best practice in the software industry for reducing these risks before they occur. This thesis contributes for a goaldriven software <b>development</b> <b>risk</b> management model to assess and manage software <b>development</b> <b>risk</b> within requirement engineering phase...|$|R
25|$|Two engine {{contracts}} {{were awarded}} by the USAF in November 1954 to minimize <b>development</b> <b>risk.</b>|$|R
40|$|Property {{development}} makes {{a significant}} contribution to the Australian property industry and economy. However, property development is inherently risky, with a number of risks evident throughout the property development process. From a survey of leading property developers in Australia, the importance of 34 property <b>development</b> <b>risk</b> factors is assessed. The most important property <b>development</b> <b>risk</b> factors identified were environmental risk, time delay risk and land cost risk...|$|R
5000|$|Platform-based {{design is}} defined in Taxonomies for the Development and Verification of Digital Systems as: [...] "an {{integration}} oriented design approach emphasizing systematic reuse, for developing complex products based upon platforms and compatible hardware and software virtual component, intended to reduce <b>development</b> <b>risks,</b> costs and time to market".|$|E
50|$|Nicotine is {{not safe}} to use in any amount during pregnancy. Questions exist {{regarding}} nicotine use during pregnancy and their potential consequences on fetal growth and mortality. Nicotine negatively affects pregnancy outcomes and fetal brain <b>development.</b> <b>Risks</b> to the child later in life via nicotine exposure during pregnancy include type 2 diabetes, obesity, hypertension, neurobehavioral defects, respiratory dysfunction, and infertility. Nicotine crosses the placenta and {{is found in the}} breast milk of mothers who smoke as well as mothers who inhale passive smoke.|$|E
50|$|According to Hattori, the {{development}} of LF-LRVs in Japan was delayed by several factors: overseas manufacturers held patents {{on many of the}} basic technologies; low domestic demand increased <b>development</b> <b>risks</b> and established fare-collection protocols. This poor development environment changed in November 2000 when the Barrier-Free Transportation Law was passed. This law required that operators respect accessibility standards when introducing new rolling stock and provided subsidies as tax-relief and tax-exemptions to compensate for the price differences between conventional cars and the more expensive barrier-free designs.|$|E
40|$|A new {{approach}} for assessing <b>development</b> <b>risk</b> associated with technology development projects is presented. The method represents technology evolution {{in terms of}} sector-specific discrete development stages. A Monte Carlo simulation is used to generate development probability distributions based on statistical models of the discrete transitions. <b>Development</b> <b>risk</b> {{is derived from the}} resulting probability distributions and specific program requirements. Two sample cases are discussed to illustrate the approach, a single rocket engine development and a three-technology space transportation portfolio...|$|R
50|$|The {{advice to}} leaders of any project with a {{substantial}} <b>development</b> <b>risk</b> is ensure {{that as many}} dependencies as possible use established technology, engineering, or research results.|$|R
40|$|We {{show that}} the value maximizing hurdle rate for {{research}} and development (R&D) investments among private firms operating in a market setting is less than for conventional investments despite the fact that R&D has <b>development</b> <b>risk.</b> Because <b>development</b> <b>risk</b> arises only during R&D, entrepreneurs control this risk by deferring or pursuing R&D depending upon profitability. This risk management moderates downside loss and encourages upside gain which increases the value attraction of R&D and decreases the value maximizing hurdle rate below that of conventional investment. R&D, hurdle rates, real options, Tobin's q,...|$|R
50|$|Development Testing is a {{software}} development process that involves synchronized {{application of a}} broad spectrum of defect prevention and detection strategies in order to reduce software <b>development</b> <b>risks,</b> time, and costs. It is performed by the software developer or engineer during the construction phase of the software development lifecycle. Rather than replace traditional QA focuses, it augments it. Development Testing aims to eliminate construction errors before code is promoted to QA; this strategy is intended to increase the quality of the resulting software as well as the efficiency of the overall development and QA process.|$|E
50|$|Our {{management}} {{had considered}} various other media related investment opportunities, and, in 1998, they {{were presented with}} the chance to acquire a local outdoor advertising company with several dozen billboard faces in Utah. After initially having a rough start, we promoted Kurt Horan, a former bank credit analyst working with Bruce Thomas, to head up the small outdoor division. Kurt quickly developed a lean, profit driven model that maximized cash flow, minimized <b>development</b> <b>risks,</b> and quickly began producing strong operating results. Since 1998, the outdoor division has seen its total faces, revenue, and cash flow each increase roughly tenfold.|$|E
5000|$|... "Development testing" [...] is a {{software}} development process that involves synchronized {{application of a}} broad spectrum of defect prevention and detection strategies in order to reduce software <b>development</b> <b>risks,</b> time, and costs. It is performed by the software developer or engineer during the construction phase of the software development lifecycle. Rather than replace traditional QA focuses, it augments it. Development Testing aims to eliminate construction errors before code is promoted to QA; this strategy is intended to increase the quality of the resulting software as well as the efficiency of the overall development and QA process.|$|E
5000|$|Health {{policy and}} advocacy. The Hispanic Health Council is {{organized}} in five Centers of Excellence: Maternal and Child Health, Nutrition, Youth and Family Health and <b>Development,</b> <b>Risk</b> Reduction, and Research.|$|R
5000|$|To {{identify}} and prepare the system competence and technology for development {{with the aim}} of confining launcher time-to-market within 5 years, reducing recurring cost and <b>development</b> <b>risk,</b> while keeping long-term industry competitiveness.|$|R
5000|$|Transition and Renewal: To be successful, Payments Canada must {{continue}} to build our organizational capacity and continue internal process improvements by focusing on leadership <b>development,</b> <b>risk</b> management, technology, operations and corporate administration.|$|R
50|$|The AW.169 and Fairey's Delta III design were {{considered}} to be the best two contenders taking into account the design of the aircraft, the <b>development</b> <b>risks,</b> the capabilities of the design teams and the manufacturers' workloads - Bristol had not been invited to tender because {{of the importance of the}} Bristol 188 high speed research plane they were working on. Initially further work was contracted on both designs but by the end of the year the AW.169 was dropped and the Fairey design become a firm choice. However, in April, the following year, the 1957 Defence White Paper terminated nearly all manned fighter development projects.|$|E
50|$|The {{initiative}} {{to develop the}} UniPro protocol came forth out {{of a pair of}} research projects at respectively Nokia Research Center and Philips Research. Both teams independently arrived at the conclusion that the complexity of mobile systems could be reduced by splitting the system design into well-defined functional modules interconnected by a network. The key assumptions were thus that the networking paradigm gave modules well-structured, layered interfaces and {{that it was time to}} improve the system architecture of mobile systems to make their hardware- and software design more modular. In other words, the goals were to counteract the rising development costs, <b>development</b> <b>risks</b> and time-to-market impact of increasingly complex system integration.|$|E
50|$|Controversy ignited {{when the}} United States Office of Force Transformation (OFT) planned to battle-test the more mature, but Israeli-made Trophy active {{protection}} system on several Stryker {{armored personnel carriers}} headed for Iraq in early 2007. The effort was scuttled by the Army in favor {{of waiting for the}} Quick Kill system to develop. In 2006-2007, the Institute for Defense Analysis found Quick Kill to be relatively immature and fraught with significant <b>development</b> <b>risks.</b> Important components like the radar were not yet fully developed and testing of the system as a whole was on hold while the warhead was redesigned. They also found Trophy, which uses a shotgun-like kill mechanism, to be the most mature of the 15 systems they analyzed at the time.|$|E
2500|$|In a press release, Transparency International {{demands the}} {{immediate}} repeal of legal changes granting immunity to Romanian politicians. According to the organization, [...] "these <b>developments</b> <b>risk</b> {{opening the door}} for corrupt politicians to act with impunity".|$|R
40|$|The {{concept of}} <b>development</b> <b>risk</b> is new in product liability. Its {{emergence}} {{is related to}} the evolution of production methods, the increased improvement in scientific knowledge, as well as the general trend towards a better consumer protection. This notion has appeared first in the United States as "state-of-the-art defense". It has recently been received in Europe, examplifying a phenomenon of transplantation of legal concepts, here into a Civil Law system such as the French one. The concept of <b>development</b> <b>risk</b> also has an impact on the very foundation of the liability regime, and requires that a choice be made between liability based on fault or strict liability...|$|R
5000|$|During this period, {{communications}} equipment manufacturers licensed source code software {{to reduce their}} time to market, decrease their <b>development</b> <b>risk</b> and reduce their costs. By 1999 many companies offered source code software products. Some of these included: ...|$|R
5000|$|Pre-development efforts such as {{acquiring}} land, forming partnerships, performing {{due diligence}} and gaining entitlements {{is the important}} first steps developers make before a project is launched. A major problem for non-profit developers is that their deals are thinly capitalized and funding pre-development costs is difficult; these costs include architecture, engineering, site control and feasibility analysis. [...] Non-profits also confront marketability, feasibility and financing problems that usually deter for-profit developers. Pre-development is essential for packaging a project proposal, and funding is necessary to work through any issues during this time. Lack of pre-development funding can lead to weak project proposals and failure to seize opportunities to acquire land. [...] Also, lack of funds increases <b>development</b> <b>risks</b> and decreases the likelihood of attracting capital investors or securing loans from private banks.|$|E
50|$|Because {{there is}} no camshaft, there are fewer moving parts. The cam shaft rollers and push rods have been {{replaced}} by an electro-hydraulic actuator system which uses the existing fuel pumps. This reduces <b>development</b> <b>risks</b> of the new system by employing existing technology. Direction changing on older B&W MC engines was engaged by changing the direction of the cam roller. With the new cam-less engine it is controlled by a computer. This gets rid of mechanical failures that can damage the engine if there is a malfunction in the engine when changing directions. Also, {{there is no}} chain connection between the crank shaft and the cam shaft so the engine is lighter with less points of failure. Since there is no camshaft, the parasitic load on the engine output is removed. This is particularly useful in large marine engines that can produce up to 100 megawatts as it can equate to a large amount of power saving. With a cam-less engine, fuel injection and exhaust timing are directly controlled by an Engine control unit and it can be constantly changed and adjusted without stopping the engine. This allows for the engine to run at lower RPM which is useful for maneuvering as it allows slower ship speeds for safe and precise docking. Aditionally, when a ship is maneuvering, the computer controlled Fuel injection and valve timing allows for faster RPM control, hence faster stopping in emergency situations.|$|E
40|$|This Note {{argues that}} the {{optional}} inclusion of the <b>development</b> <b>risks</b> defense in Member State legislation undermines the Products Liability Directive by impeding harmonization of products liability laws in the Community. Part I sets forth the background {{and content of the}} Products Liability Directive. Part II discusses the implementation of the Products Liability Directive in Member State legislation. Part III {{argues that the}} optional nature of the <b>development</b> <b>risks</b> defense undermines the intent of the Directive. This Note concludes that the <b>development</b> <b>risks</b> defense should be mandatory in order to establish uniform products liability laws in the Member States...|$|E
5000|$|... “Economic Cost of HIV and AIDS in India,” (with S. Das and T. Roy), in Markus Haacker and Mariam Claeson, edited, HIV and AIDS in South Asia: A <b>Development</b> <b>Risk,</b> The World Bank (Washington D.C.), Feb. 2009, pp. 123-151.|$|R
40|$|Part I of this Note will briefly outline Community {{policy on}} product {{liability}} as detailed by the Product Liability Directive, then review {{the development of}} product liability law in various Member States of the European Community. Part II will analyze how the concept of state-of-the-art highlighted tensions between a strict liability regime and a negligence regime in U. S. product liability. It will then review similar discord in the European Community caused by the <b>development</b> <b>risk</b> defense. Finally, Part III of this Note will argue that {{in contrast to the}} United States, the European Community has thus far chosen to stay true to the strict product liability label in its implementation of the <b>development</b> <b>risk</b> defense...|$|R
40|$|As more US {{companies}} outsource their software projects overseas, {{they find}} {{that it is more}} challenging to control software <b>development</b> <b>risk</b> in countries with dissimilar IT capabilities. Using data collected from software projects developed in Korea, we investigate the impacts of specific risk management strategies and residual performance risk on objective performance measures such as cost and schedule overrun. Our results indicate that, unlike subjective performance measures, our objective cost and schedule overrun performance measures are positively associated with residual performance risk in Korea. We also investigate the impact of two alternative conceptualization of software <b>development</b> <b>risk</b> on both objective performance and subjective performance. Finally, we discuss relevant policy implications for software development and outsourcing...|$|R
30|$|In conclusion, an {{examination}} of the BBB kinetics of GSK 1034702 in phase 0 and phase I of development has discharged some of the perceived <b>development</b> <b>risks</b> for GSK 1034702 and provided information to progress the molecule into the next stage of clinical development.|$|E
40|$|One of the {{proposed}} purposes for software process simulation is the management of software <b>development</b> <b>risks,</b> usually discussed within the category of project planning/management (Kellner et al. 1999). However, modeling and simulation primarily {{for the purpose of}} software development risk management has been quite limited. ...|$|E
40|$|In 1992 ESA/ESTEC started {{activities}} which aimed to support system validation by simulation already {{in an early}} development phase {{in order to reduce}} the <b>development</b> <b>risks,</b> time and costs. A first study called HRDMS (Highly Reliable Data Mangement System and Simulation) [1] concentrated on performance aspects of system validation. During this ste...|$|E
40|$|The Process of {{developing}} large software systems creates many source code files with complex inter-dependencies. Clusters of mutually dependent files introduce {{the possibility of}} a chain of forced consequential changes when a single cluster member file is changed. The software <b>development</b> <b>risk</b> model, developed here, shows that the density of dependencies within such clusters plays a crucial role in this behavior. We develop a file-rank procedure which orders the entire system’s file set by increasing risk. This ranking process should prove to be useful while managing the development of large systems, indicating where attention should be focused to reduce <b>development</b> <b>risk.</b> We have applied this model to code from several projects with interesting results...|$|R
50|$|As {{with all}} Shuttle-Mir flights, risk-mitigation {{experiments}} {{were conducted to}} help reduce <b>development</b> <b>risk</b> for the International Space Station. Flying for first time was the Active Rack Isolation System (ARIS), an experiment rack designed to cushion payloads from vibration and other disturbances.|$|R
5000|$|... 4. The Committee shall ensure an {{adequate}} coverage of cross-sectoral <b>developments,</b> <b>risks</b> and vulnerabilities by closely {{cooperating with the}} Committee of European Securities Regulators, the Committee of European Insurance and Occupational Pensions Supervisors and the Banking Supervision Committee of the European System of Central Banks.|$|R
