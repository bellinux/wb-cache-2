522|10000|Public
5000|$|... #Caption: Functional {{levels of}} a typical <b>Distributed</b> <b>Control</b> <b>System,</b> showing the {{supervisory}} level.|$|E
5000|$|Consolidation of {{data from}} {{different}} sources (Enterprise Resource Planning (ERP), Laboratory, <b>Distributed</b> <b>Control</b> <b>System</b> (DCS)...) ...|$|E
5000|$|A <b>distributed</b> <b>control</b> <b>system</b> {{gave way}} to process {{automation}} systems which lead {{the way for the}} concept of collaborative automation process systems developed by ARC Advisory Group ...|$|E
40|$|This {{publication}} {{deals with}} the application of standards for industrial automation during <b>distributed</b> <b>control</b> <b>systems</b> design. <b>Control</b> <b>systems</b> design consists of a choice between two approaches based on the standards, IEC 61131 and IEC 61499. The question is which of the standards to use for <b>distributed</b> <b>control</b> <b>systems</b> design. The most commonly used standards are briefly listed in the introduction section. Then follows a more {{detailed description of the}} IEC 61131 and IEC 61499 standards, future development of the IEC 61499 standard and its usage during the creation of <b>distributed</b> <b>control</b> <b>systems.</b> Further on are lists and descriptions of existing commercial and research software tools, which are necessary in implementing this standard. The main section {{deals with the}} methodology for standard application comparison and criteria selection for comparing. This methodology is then verified on real <b>control</b> <b>systems.</b> The final section includes methodology generalization for suitable approach selection, resulting in recommendations for which standard to choose during creation of <b>distributed</b> <b>control</b> <b>systems.</b> Auch im Buchhandel erhältlich: Usage of IEC 61131 and IEC 61499 standards for creating <b>distributed</b> <b>control</b> <b>systems</b> / Tomáš Bezák Ilmenau : Univ. -Verl. Ilmenau, 2012. - 121 S. (Scientific Monographs in Automation and Computer Science; 3) ISBN 978 - 3 - 86360 - 015 - 0 Preis: 11, 80 EURScientific Monographs in Automation and Computer Science; 3 Übersicht: Scientific Monographs in Automation and Computer Science</a...|$|R
50|$|Yokogawa {{pioneered the}} {{development}} of <b>distributed</b> <b>control</b> <b>systems</b> and introduced its Centum series DCS in 1975.|$|R
5000|$|<b>Distributed</b> <b>control</b> <b>systems</b> (DCS) are {{dedicated}} systems used in manufacturing {{processes that are}} continuous or batch-oriented.|$|R
50|$|The Sequence And Batch Language (SABL) {{is used on}} Digital Equipment Corporation (DEC) systems running OpenVMS and on {{the current}} D/3 <b>Distributed</b> <b>Control</b> <b>System</b> from NovaTech Process Solutions.|$|E
50|$|Instrument Neutral Distributed Interface (INDI) is a <b>distributed</b> <b>control</b> <b>system</b> (DCS) {{protocol}} to enable control, data acquisition and exchange among hardware devices and software front ends, emphasizing astronomical instrumentation.|$|E
50|$|The PSS gathers {{real-time}} {{data from the}} process control system, typically a <b>distributed</b> <b>control</b> <b>system.</b> Using this data, the PSS can calculate performance metrics for process equipment, controls, and operations.|$|E
5000|$|Factory {{automation}} <b>systems</b> (often <b>Distributed</b> <b>control</b> <b>systems)</b> reduce {{personnel costs}} and {{may lead to}} more stable production results.|$|R
50|$|P&IDs {{form the}} basis for the live mimic {{diagrams}} displayed on graphical user interfaces of large industrial <b>control</b> <b>systems</b> such as SCADA and <b>distributed</b> <b>control</b> <b>systems.</b>|$|R
40|$|A {{new concept}} for <b>distributed</b> <b>control</b> <b>systems</b> {{based on the}} new IEC 61499 {{standard}} is tested in this work in cooperation with LAE Engineering GmbH, a medium-sized company. Based on a catalogue of requirements, a customer-related testbed is developed. In the following this testbed {{is used as a}} reference to realise an IEC 61499 compliant-distributed <b>control</b> <b>system</b> based on PC technics. By doing this, rules are defined to convert user-owned IEC 61131 function blocks to IEC 61499 compliant function blocks. Concluding, some trends for IEC 61499 -based <b>distributed</b> <b>control</b> <b>systems</b> will be summarised...|$|R
50|$|An Operator Training Simulator (OTS) is a {{computer-based}} training system {{that uses a}} dynamic simulation model of an industrial process, usually integrated with an emulator of the process plant's <b>Distributed</b> <b>Control</b> <b>System</b> (DCS).|$|E
5000|$|... During the year, {{the company}} {{installed}} microprocessor based digital integrated <b>distributed</b> <b>control</b> <b>system</b> in catalytic reformer and new solvent unit which replaced the pneumatic control system. Also installed advanced control system for catalytic control unit.|$|E
5000|$|Lay {{the groundwork}} for the {{adoption}} of an open communication standard(s) for process analytical. This includes communication between sample system components such as flow sensors, actuators, and microAnalytical sensors, as well as communication to a <b>Distributed</b> <b>Control</b> <b>System</b> (DCS).|$|E
50|$|Stack {{lights are}} passive devices {{that may be}} {{controlled}} directly by programmable logic controllers, <b>distributed</b> <b>control</b> <b>systems,</b> PC <b>control</b> <b>systems</b> or hardwired to machine controls such as timers, sensors and latching relays.|$|R
50|$|The Oil & Gas, Chemical, Pharmaceutical, Power Generation, Water, Food and Beverage, Cement, Steelmaking and Paper {{industries}} {{have relied on}} <b>Distributed</b> <b>Control</b> <b>Systems</b> (DCS) to manage and control their Manufacturing and Process <b>Control</b> <b>systems.</b>|$|R
40|$|Abstract — <b>Distributed</b> <b>control</b> <b>systems</b> are {{physical}} constructs, incurring deployment {{and maintenance}} costs for their communication infrastructure. Inference {{is a central}} function of many <b>distributed</b> <b>control</b> <b>systems.</b> This paper formulates and studies the tradeoff between algebraic notions of inference functionality and algebraic notions of wiring costs. It is shown that separated topology design and node placement yields optimal network design. This design problem is shown to be NP-complete, but is carried out for small network size. A natural relaxation is {{shown to be a}} reverse convex minimization problem. I...|$|R
50|$|Amirkhan Mori {{joined the}} {{workforce}} in 1978, first {{as an office}} worker at the <b>Distributed</b> <b>Control</b> <b>System</b> of the Retail Management Department of Tbilisi, {{and then as a}} technology specialist at the Research Institute for Stable Isotopes, also in Tbilisi, Georgia.|$|E
50|$|Building {{automation}} is {{an example}} of a <b>distributed</b> <b>control</b> <b>system</b> - the computer networking of electronic devices designed to monitor and control the mechanical, security, fire and flood safety, lighting (especially emergency lighting), HVAC and humidity control and ventilation systems in a building.|$|E
50|$|MAVERICK’s {{industrial}} automation services comprise automation solutions including automation engineering, process automation, {{industrial automation}} integration, regulatory-compliant systems and services and <b>distributed</b> <b>control</b> <b>system</b> migration; field services, which include construction management, technician/calibration, outage services and planning, maintenance and installation; and advanced process control services.|$|E
40|$|Abstract: <b>Distributed</b> <b>control</b> <b>systems</b> {{have been}} one of the most studied and {{challenging}} areas in <b>control.</b> Networked <b>control</b> <b>systems</b> (NCS) have become interesting research subject in field of <b>distributed</b> <b>control</b> <b>systems</b> over last decade. Many papers focused mainly on theoretical part of NCS and lots of algorithms have been designed. There is lack of practical applications, which deals with concrete implementation of NCS. In this paper we present NCS that was designed using PROFINET and IWLAN technologies. We connected two PLC modules through PROFINET as well as IWLAN and realized simple identification and control of simple DC motor...|$|R
40|$|Abstract — The {{performance}} of a class of <b>distributed</b> <b>control</b> <b>systems</b> is analyzed when the interconnected fault tolerant components switch their mode of operation according to independent, identically distributed processes. New expressions for performance metrics are presented for this case, including their sensitivity analysis. These metrics require non-trivial derivations that are not just simplified expressions of the known metrics for the homogeneous Markov case. For a class of <b>distributed</b> <b>control</b> <b>systems,</b> the performance metrics are also computed when the actuators are assumed to have or not have memory. Finally, the results are illustrated with a <b>distributed</b> flight <b>control</b> example. I...|$|R
5000|$|Systems {{acting on}} ISA-95 Level 2 are Supervisory Control And Data Acquisition (SCADA), Programmable Logic Controllers (PLC), <b>Distributed</b> <b>Control</b> <b>Systems</b> (DCS) and Batch Automation Systems. Information flows between MES and these process <b>control</b> <b>systems</b> are roughly similar: ...|$|R
50|$|Standard OPC {{databases}} {{serve as}} the communication link to the <b>Distributed</b> <b>Control</b> <b>System</b> (DCS), Hydraulic Power Unit (HPU), and Electrical Power Unit (EPU). The UMCS will communicate with subsea control pods at the wellhead from multiple subsea equipment providers, without disrupting the subsea vendor’s native communication protocol.|$|E
50|$|Function Block Diagram {{is one of}} five {{languages}} for logic {{or control}} configuration supported by standard IEC 61131-3 for a control system such as a Programmable Logic Controller (PLC) or a <b>Distributed</b> <b>Control</b> <b>System</b> (DCS). The other supported languages are ladder logic, sequential function chart, structured text, and instruction list.|$|E
5000|$|SERs enable rapid {{root cause}} {{analysis}} after multiple events have occurred due to the secure recording of {{the sequence of events}} in the order of occurrence. SERs are therefore utilized as a diagnostic tool to minimize plant downtime. SERs are often interfaced with a SCADA system, <b>distributed</b> <b>control</b> <b>system</b> (DCS),or programmable logic controller (PLC).|$|E
40|$|As {{industrial}} systems grow in complexity, new methodologies for {{the implementation}} of their <b>control</b> <b>systems</b> are being developed. Following this line, the application of artificial intelligence (AI) techniques to the implementation of <b>distributed</b> <b>control</b> <b>systems</b> offers several advantages. However, some problems related to the collaboration of both techniques arise, being added to the inherent distributed systems and AI issues. In this article an hierarchical approach has been selected in the implementation of intelligent <b>distributed</b> <b>control</b> <b>systems.</b> A new hierarchical and distributed architecture - based on the combination of neural networks and expert systems- is proposed for the automated greenhouse control providing very interesting results...|$|R
5000|$|... <b>distributed</b> <b>control</b> <b>systems</b> (DCS), {{found in}} nuclear power plants, {{refineries}} and chemical facilities also generate alarms {{to direct the}} operator's attention to an important event {{that he or she}} needs to address.|$|R
40|$|Abstract. In <b>distributed</b> machine <b>control</b> <b>system</b> the {{software}} architecture is typically a weak spot because developers lack good design practices. Software architecture design patterns {{have been found}} useful for improving {{the software}} design. However, there is no comprehensive collection of patterns for <b>distributed</b> machine <b>control</b> <b>systems</b> even though many patterns and pattern languages {{can be applied to}} this domain. We carried out architecture assessments in Finnish machine industry and this gave us a possibility to collect recurring solutions as patterns for this domain. The resulting pattern language constitutes a comprehensive collection of solutions for <b>distributed</b> machine <b>control</b> sys-tems. In this paper, we suggest a pattern language for embedded <b>distributed</b> <b>control</b> <b>systems</b> and introduce seven representative patterns from this language. ...|$|R
50|$|DCSs A <b>Distributed</b> <b>Control</b> <b>System</b> (DCS) is a {{computerised}} {{control system}} for a process or plant, wherein control elements (controllers) are distributed throughout the system. This {{is in contrast to}} non-distributed systems that use discrete controllers. In a DCS, a hierarchy of controllers is connected by communication networks, allowing both centralised control rooms and local on-plant monitoring and control.|$|E
5000|$|With {{the coming}} of {{electronic}} processors and graphic displays it became possible to replace these discrete controllers with computer-based algorithms, hosted on a network of input/output racks with their own control processors. These could be distributed around plant, and communicate with the graphic display {{in the control room}} or rooms. The <b>distributed</b> <b>control</b> <b>system</b> was born.|$|E
5000|$|Supervisory {{control is}} a general term for control of many {{individual}} controllers or control loops, such as within a <b>distributed</b> <b>control</b> <b>system.</b> It refers to {{a high level of}} overall monitoring of individual process controllers, which is not necessary for the operation of each controller, but gives the operator an overall plant process view, and allows integration of operation between controllers.|$|E
50|$|In {{computer}} programming, <b>distributed</b> version <b>control,</b> {{also known}} as <b>distributed</b> revision <b>control</b> or decentralized version control, allows many software developers {{to work on a}} given project without requiring them to share a common network. The software revisions are stored in a <b>distributed</b> revision <b>control</b> <b>system</b> (DRCS), {{also known as}} a <b>distributed</b> version <b>control</b> <b>system</b> (DVCS).|$|R
40|$|The {{construction}} of applications that {{interact with their}} environment through sensors and actuators, is inherently a real-time problem if we consider the temporal constraints imposed by {{the evolution of the}} environment. The tradi-tional vision is that actuation must be performed suffi-ciently fast to be consistent with the observation. We believe that a more generic approach to the con-struction of <b>distributed</b> <b>control</b> <b>systems</b> is one that uses temporal consistency as the fundamental correctness cri-teria. In this paper we discuss preliminary ideas that support our conviction and we describe a temporal con-sistency model that is adequate for the {{construction of}} a wider range of <b>distributed</b> <b>control</b> <b>systems.</b> 1 Introduction and Related Wor...|$|R
40|$|Abstract—We propose and {{demonstrate}} {{a method to}} provide precise time synchronization in <b>distributed</b> <b>control</b> <b>systems</b> using a boundary clock scheme. The major drawback of the boundary clock scheme is the exponential accumulation of time synchronization error {{as the number of}} hops increases. To make the error accumulation linearly increase with the number of hops, we first separate the frequency compensation interval (FCI) and the offset and frequency compensation interval (OFCI) and then separately optimize each interval. To demonstrate the performance of this method, we implemented test benches using Ethernet-linked <b>distributed</b> <b>control</b> <b>systems.</b> We measured the peak-to-peak jitter performance along with the maximum time interval error to assess the short- and long-term stability after several hops in <b>distributed</b> <b>control</b> <b>systems.</b> Our method enables the peak-to-peak jitter to be maintained under 107 ns after seven hops. The experimental results show that the performance of time synchronization is dominated by fast jitter rather than frequency error and wander, and the proposed scheme can be used to improve the time synchronization performance in IEEE 1588 -compliant <b>control</b> <b>systems</b> using boundary clock. Index Terms—Boundary clock, IEEE 1588, network synchronization, transparent clock, unshielded twisted pair (UTP) ...|$|R
