9|20|Public
50|$|In digital systems, which {{commonly}} transmit data serially (RS232, RS485, USB, Firewire, DVI, HDMI etc) {{the signal}} voltage is often {{much larger than}} induced power frequency AC on the connecting cable screens, but different problems arise. Of those protocols listed, only RS232 is single-ended with ground return, {{but it is a}} large signal, typically + and - 12V, all the others being differential. Simplistically, the big problem with the differential protocols is that with slightly mismatched capacitance from the hot and cold wires to ground, or slightly mismatched hot and cold voltage swings or <b>edge</b> <b>timing,</b> the currents in the hot and cold wires will be unequal, and also a voltage will be coupled onto the signal screen, which will cause a circulating current at signal frequency and its harmonics, extending up to possibly many GHz. The difference in signal current magnitudes between the hot and cold conductors will try to flow from, for example, item A's protective ground conductor back to a common ground in the building, and back along item B's protective ground conductor. This may involve a large loop area and cause significant radiation, violating EMC regulations and causing interference to other equipment.|$|E
40|$|A {{fundamental}} problem in digitally controlled class-D power amplifiers is the {{distortion of the}} amplified pulse signal by imperfections of the power transistors and the analogue output circuitry. The only way to overcome this is to provide error correction by feedback. With a pulse-modulated signal (either PWM or Sigma-Delta-Modulation) this correction can be performed by changing the pulse <b>edge</b> <b>timing,</b> as it is done in some existing solutions. If error correction during the pulse generation inside of the digital system is desired, an Analogue- to Digital converter is needed. In this paper the most important solutions done so far are reviewed and further ideas based on feedback into the digital system are introduced...|$|E
40|$|The {{technique}} of extrapolated leading <b>edge</b> <b>timing,</b> which is simple {{in respect of}} adjustment of circuit parameters, has been studied for application in fast coincidence experiments using a large volume HPQe detector. The performance obtained with this technique {{is in no way}} inferior to that with the amplitude and rise time compensation technique. In both cases, the FW HM and FW TM values of the prompt time spectra over a wide dynamic energy range lie between 4. 0 ns to 3. 1 ns and 11. 4 ns to 6. 9 ns respectively when a coaxial HPGe detector (27 % efficiency. 54 mm dia. x 52 mm length) and aBaF, scintillation detector (38 mm dia. x 25 mm ht.) combination is used...|$|E
40|$|Saturn's ring plane-defined pole {{position}} is presently {{derived from the}} geometry of Saturn's July 3, 1989 occultation of 28 Sgr, {{as indicated by the}} timings of 12 circular edges in the Saturn C-ring as well as the edges of the Encke gap and {{the outer edge of the}} Keeler gap. The <b>edge</b> <b>timings</b> are used to solve for the position angle and opening angle of the apparent ring ellipses; the internal consistency of the data set and the redundancy of stations indicates an absolute error of the order of 5 km. The {{pole position}} thus obtained is consistent with the pole and ring radius scale derived from Voyager occultation observations...|$|R
5000|$|In the {{mathematical}} modeling of job shop scheduling problems, disjunctive graphs {{are a way}} of modeling a system of tasks to be scheduled and timing constraints that must be respected by the schedule.They are mixed graphs, in which vertices (representing tasks to be performed) may be connected by both directed and undirected <b>edges</b> (representing <b>timing</b> constraints between tasks). The two types of edges represent constraints of two different types: ...|$|R
40|$|Abstract — In this paper, {{we propose}} a timing model {{reduction}} algorithm for hierarchical timing analysis {{based on a}} bicliquestar replacement technique. In hierarchical timing analysis, each functional block is characterized into an abstract timing model. The complexity of analysis is linear {{to the number of}} edges in the abstract timing model for timing propagation. We propose a biclique-star replacement technique to minimize the number of <b>edges</b> in the <b>timing</b> model. The experiments on industry test cases show that by allowing acceptable errors, the proposed algorithm can largely reduce the number of <b>edges</b> in the <b>timing</b> model. Index Terms — Hierarchical Timing Analysis, Biclique-star Replacement I...|$|R
40|$|Active robot {{force control}} {{requires}} {{some form of}} dynamic inner loop control for stability. The author considers the implementation of position-based inner loop control on an industrial robot fitted with encoders only. It is shown that high gain velocity feedback for such a robot, which is effectively stationary when in contact with a stiff environment, involves problems beyond the usual caveats {{on the effects of}} unknown environment stiffness. It is shown that it is possible for the controlled joint to become chaotic at very low velocities if encoder <b>edge</b> <b>timing</b> data are used for velocity measurement. The results obtained indicate that there is a lower limit on controlled velocity when encoders are the only means of joint measurement. This lower limit to speed is determined by the desired amount of loop gain, which is itself determined by the severity of the nonlinearities present in the drive system. ...|$|E
40|$|Data-dependent jitter {{limits the}} bit-error rate (BER) {{performance}} of broadband communication systems and aggravates synchronization in phase- and delay-locked loops used for data recovery. A method for calculating the data-dependent jitter in broadband systems from the pulse response is discussed. The impact of jitter on conventional clock and data recovery circuits is {{studied in the}} time and frequency domain. The deterministic nature of data-dependent jitter suggests equalization techniques suitable for high-speed circuits. Two equalizer circuit implementations are presented. The first is a SiGe clock and data recovery circuit modified to incorporate a deterministic jitter equalizer. This circuit demonstrates the reduction of jitter in the recovered clock. The second circuit is a MOS implementation of a jitter equalizer with independent control of the rising and falling <b>edge</b> <b>timing.</b> This equalizer demonstrates improvement of the timing margins that achieve 10 /sup - 12 / BER from 30 to 52 ps at 10 Gb/s...|$|E
40|$|Lab {{measurements}} and Monte Carlo simulations {{have been carried}} out for the evaluation of the Straw-type detectors used in the NA 62 experiment at CERN. In addition, analyses of experiment data was used in corrections to improve the reconstruction of particle tracks, ultimately leading to improved resolution of the detector system as a whole. 97. 7 percent of the Straws were aligned to within 30 microns, quantified as the deviation from zero of the mean of the inherent residual distribution of each Straw. A drift time dependence on where along the Straw the particle ionized have been corrected for; before the correction the dependence was as big as 6 ns. A radius-drift time relation based on the leading <b>edge</b> <b>timing</b> distribution has been deduced and implemented. Upon implementation artifacts from the piecewise fits used became evident. An alternative approach using residuals has been put forward...|$|E
40|$|Abstract — The {{impact of}} process {{variations}} increases as tech-nology scales to nanometer region. Under large process vari-ations, {{the path and}} arc/node criticality [18] provide effective metrics in guiding circuit optimization. To facilitate the criticality computation considering the correlation, we define the critical region for the path and arc/node in a timing graph, and propose an efficient method to compute the criticality for paths and arcs/nodes simultaneously by a single breadth-first graph traversal during the backward propagation. Instead of choosing a set of paths for analysis prematurely, we develop a new property of the path criticality to prune those paths with low criticality at very earlier stages, so that our path criticality computation method has linear complexity with respect of the <b>timing</b> <b>edges</b> in a <b>timing</b> graph. To improve the computation accuracy, cutset and path criticality properties are exploited to calibrate the computation results. The experimental results on ISCAS benchmark circuits show that our criticality computation method can achieve high accuracy with fast speed. I...|$|R
40|$|Pulse-sequencing circuit {{uses only}} shift {{register}} and Exclusive-OR gates. Circuit {{also serves as}} date-transition edge detector (for rising or falling edges). It is used in sample-and-hold, analog-to-digital conversion sequence control, multiphase clock logic, precise delay control computer control logic, <b>edge</b> detectors, other <b>timing</b> applications, and provides simple means to generate timing and control signals for data transfer, addressing, or mode control in microprocessors and minicomputers...|$|R
40|$|Timed systems, such as timed automata, {{are usually}} {{analyzed}} using their operational semantics on timed words. The classical region abstraction for timed automata reduces them to (untimed) finite state automata {{with the same}} time-abstract properties, such as state reachability. We propose a new technique to analyze such timed systems using finite tree automata instead of finite word automata. The main idea is to consider timed behaviors as graphs with matching <b>edges</b> capturing <b>timing</b> constraints. Such graphs can be interpreted in trees opening the way to tree automata based techniques which are more powerful than analysis based on word automata. The technique is quite general and applies to many timed systems. In this paper, as an example, we develop the technique on timed pushdown systems, which have recently received considerable attention. Further, we also demonstrate how we can use it on timed automata and timed multi-stack pushdown systems (with boundedness restrictions) ...|$|R
40|$|Abstract—Data-dependent jitter {{limits the}} bit-error rate (BER) {{performance}} of broadband communication systems and aggra-vates synchronization in phase-and delay-locked loops used for data recovery. A method for calculating the data-dependent jitter in broadband systems from the pulse response is discussed. The impact of jitter on conventional clock and data recovery circuits is {{studied in the}} time and frequency domain. The deterministic nature of data-dependent jitter suggests equalization techniques suitable for high-speed circuits. Two equalizer circuit implemen-tations are presented. The first is a SiGe clock and data recovery circuit modified to incorporate a deterministic jitter equalizer. This circuit demonstrates the reduction of jitter in the recovered clock. The second circuit is a MOS implementation of a jitter equalizer with independent control of the rising and falling <b>edge</b> <b>timing.</b> This equalizer demonstrates improvement of the timing margins that achieve 10 12 BER from 30 to 52 ps at 10 Gb/s. Index Terms—Data-dependent jitter, equalizer, jitter, timing circuits...|$|E
40|$|This paper {{presents}} a timing error masking-aware ARM Cortex M 0 microcontroller system. Timing errors are detected through a timing error detection strategy, {{consisting of a}} soft edge flip-flop combined with a transition detector and an error latch. The time borrowing realized through soft edge flipflops allows data to propagate after the clock <b>edge</b> (<b>timing</b> error masking). Thus operation at the point-of-first-failure is possible, effectively eliminating any timing margin. At the same time, time borrowing events are flagged which prevents corrupting the system state and allows dynamic voltage scaling. The error-aware microcontroller was implemented in a 40 nm CMOS process and realizes ultra-low voltage operation down to 0. 29 V at 5 MHz and 12. 90 pJ/cycle. 37 % is energy overhead due to error detection. Minumum energy operation is achieved at 7. 5 MHz, 0. 31 V and 11. 11 pJ/cycle. A total of 75 % energy is saved when comparing to a reference design without error detection running at slow-slow corner static timing analysis speed. status: publishe...|$|E
40|$|This {{doctoral}} thesis introduces an improved control principle for active du/dt output filtering in variable-speed AC drives, together with performance comparisons with previous filtering methods. The effects of power semiconductor nonlinearities on the output filtering performance are investigated. The nonlinearities include the timing deviation and the voltage pulse waveform distortion in the variable-speed AC drive output bridge. Active du/dt output filtering (ADUDT) {{is a method}} to mitigate motor overvoltages in variable-speed AC drives with long motor cables. It is a quite recent addition to the du/dt reduction methods available. This thesis improves on the existing control method for the filter, and concentrates on the lowvoltage (below 1 kV AC) two-level voltage-source inverter implementation of the method. The ADUDT uses narrow voltage pulses having a duration {{in the order of}} a microsecond from an IGBT (insulated gate bipolar transistor) inverter to control the output voltage of a tuned LC filter circuit. The filter output voltage has thus increased slope transition times at the rising and falling edges, with an opportunity of no overshoot. The effect of the longer slope transition times is a reduction in the du/dt of the voltage fed to the motor cable. Lower du/dt values result in a reduction in the overvoltage effects on the motor terminals. Compared with traditional output filtering methods to accomplish this task, the active du/dt filtering provides lower inductance values and a smaller physical size of the filter itself. The filter circuit weight can also be reduced. However, the power semiconductor nonlinearities skew the filter control pulse pattern, resulting in control deviation. This deviation introduces unwanted overshoot and resonance in the filter. The controlmethod proposed in this thesis is able to directly compensate for the dead time-induced zero-current clamping (ZCC) effect in the pulse pattern. It gives more flexibility to the pattern structure, which could help in the timing deviation compensation design. Previous studies have shown that when a motor load current flows in the filter circuit and the inverter, the phase leg blanking times distort the voltage pulse sequence fed to the filter input. These blanking times are caused by excessively large dead time values between the IGBT control pulses. Moreover, the various switching timing distortions, present in realworld electronics when operating with a microsecond timescale, bring additional skew to the control. Left uncompensated, this results in distortion of the filter input voltage and a filter self-induced overvoltage {{in the form of an}} overshoot. This overshoot adds to the voltage appearing at the motor terminals, thus increasing the transient voltage amplitude at the motor. This {{doctoral thesis}} investigates the magnitude of such timing deviation effects. If the motor load current is left uncompensated in the control, the filter output voltage can overshoot up to double the input voltage amplitude. IGBT nonlinearities were observed to cause a smaller overshoot, in the order of 30 %. This thesis introduces an improved ADUDT control method that is able to compensate for phase leg blanking times, giving flexibility to the pulse pattern structure and dead times. The control method is still sensitive to timing deviations, and their effect is investigated. A simple approach of using a fixed delay compensation value was tried in the test setup measurements. The ADUDT method with the new control algorithm was found to work in an actual motor drive application. Judging by the simulation results, with the delay compensation, the method should ultimately enable an output voltage performance and a du/dt reduction that are free from residual overshoot effects. The proposed control algorithm is not strictly required for successful ADUDT operation: It is possible to precalculate the pulse patterns by iteration and then for instance store them into a look-up table inside the control electronics. Rather, the newly developed control method is a mathematical tool for solving the ADUDT control pulses. It does not contain the timing deviation compensation (from the logic-level command to the phase leg output voltage), and as such is not able to remove the timing deviation effects that cause error and overshoot in the filter. When the timing deviation compensation has to be tuned-in in the control pattern, the precalculated iteration method could prove simpler and equally good (or even better) compared with the mathematical solution with a separate timing compensation module. One of the key findings in this thesis is the conclusion that the correctness of the pulse pattern structure, in the sense of ZCC and predicted pulse timings, cannot be separated from the timing deviations. The usefulness of the correctly calculated pattern is reduced by the voltage <b>edge</b> <b>timing</b> errors. The doctoral thesis provides an introductory background chapter on variable-speed AC drives and the problem of motor overvoltages and takes a look at traditional solutions for overvoltage mitigation. Previous results related to the active du/dt filtering are discussed. The basic operation principle and design of the filter have been studied previously. The effect of load current in the filter and the basic idea of compensation have been presented in the past. However, there was no direct way of including the dead time in the control (except for solving the pulse pattern manually by iteration), and the magnitude of nonlinearity effects had not been investigated. The enhanced control principle with the dead time handling capability and a case study of the test setup timing deviations are the main contributions of this doctoral thesis. The simulation and experimental setup results show that the proposed control method can be used in an actual drive. Loss measurements and a comparison of active du/dt output filtering with traditional output filtering methods are also presented in the work. Two different ADUDT filter designs are included, with ferrite core and air core inductors. Other filters included in the tests were a passive du/dtfilter and a passive sine filter. The loss measurements incorporated a silicon carbide diode-equipped IGBT module, and the results show lower losses with these new device technologies. The new control principle was measured in a 43 A load current motor drive system and was able to bring the filter output peak voltage from 980 V (the previous control principle) down to 680 V in a 540 V average DC link voltage variable-speed drive. A 200 m motor cable was used, and the filter losses for the active du/dt methods were 111 W– 126 W versus 184 W for the passive du/dt. In terms of inverter and filter losses, the active du/dt filtering method had a 1. 82 -fold increase in losses compared with an all-passive traditional du/dt output filter. The filter mass with the active du/dt method was 17 % (2. 4 kg, air-core inductors) compared with 14 kg of the passive du/dt method filter. Silicon carbide freewheeling diodes were found to reduce the inverter losses in the active du/dt filtering by 18 % compared with the same IGBT module with silicon diodes. For a 200 m cable length, the average peak voltage at the motor terminals was 1050 V with no filter, 960 V for the all-passive du/dt filter, and 700 V for the active du/dt filtering applying the new control principle...|$|E
40|$|Chips {{manufactured}} in 90 nm technology have shown large parametric variations, and a worsening trend is predicted. These parametric variations make circuit optimization difficult since different paths are frequency-limiting {{in different parts}} of the multi-dimensional process space. Therefore, it is desirable to have a new diagnostic metric for robust circuit optimization. This paper presents a novel algorithm to compute the criticality probability of every <b>edge</b> in the <b>timing</b> graph of a design with linear complexity in the circuit size. Using industrial benchmarks, we verify the correctness of our criticality computation via Monte Carlo simulation. We also show that for large industrial designs with 442, 000 gates, our algorithm computes all edge criticalities in less than 160 seconds...|$|R
40|$|Delay {{testing is}} a {{technique}} {{to determine if a}} chip will function correctly at a specified frequency. If a chip passes delay tests, it will presumably function at the specified frequency in the field. This paper presents experimental results that show how chips can pass very thorough delay tests and still fail in the field. It is shown that some chips sometimes pass and sometimes fail when the same delay test is applied multiple times under the same test conditions. These chips are called inconsistent fails. This paper shows how tester <b>timing</b> <b>edge</b> placement accuracy can cause inconsistent fails and suggests the minimum requirements for guardbands that avoid the inconsistent test results. 1...|$|R
40|$|This thesis {{describes}} the continued {{work on the}} in-house designed FPGA based co-processor daughtercard referred to as ACE 1. The aim: to create an ecosystem incorporating firmware, bootstrapping code, drivers and a development environment to create a seamless environment. Challenges in setting up and debugging the interface that connects the coprocessor daughtercard to the host server include: problems with the power network, the <b>edge</b> connectors and <b>timing</b> problems with the primary protocol which prevented host-based communications. The options include allowing the daughtercard to function in a stand-alone fashion and we present a gateware solution that allows users to select {{from a number of}} alternatives for each of the layers in the Open Systems Interconnect networking model...|$|R
40|$|Minerotrophic peatlands or fens in California's Sierra Nevada {{are small}} wet meadows {{surrounded}} by mixed conifer forest. The dynamics of vegetation {{change at the}} meadow edge and the ages and development of fens were investigated, in the Sagehen Creek Basin near Truckee, California, {{through the use of}} radiocarbon dating of peat, pollen studies, examination of processes of peat development and accumulation, stand age analysis of trees around peatlands, and evaluation of tree-ring variation. These approaches were used to evaluate both short- and long-term changes. Fens varied in age from more than 8000 years toless than 1000 years old. Results suggest that overall fen development proceeds rapidly, with peat buildup dependent upon adequate moisture supply. During fen development trees repeatedly invade and retreat from the fen <b>edges.</b> The <b>timing</b> of invasions appears unrelated to events such as human disturbance and climatic change. Instead, changes are most likely to result from alterations in groundwater supply in interaction with tree establishment, longevity, and water uptake. Little evidence was found that accepted successional models which emphasize predictable and gradual vegetational development apply to fens in the Sagehen Basin...|$|R
40|$|Based on {{a revised}} chronostratigraphy, and {{compilation}} of borehole {{data from the}} Barents Sea continental margin, a coherent glaciation model is proposed for the Barents Sea ice sheet over the past 3. 5 million years (Ma). Three phases of ice growth are suggested: (1) The initial build-up phase, covering mountainous regions and reaching the coastline/shelf edge in the northern Barents Sea during short-term glacial intensification, is concomitant {{with the onset of}} the Northern Hemisphere Glaciation (3. 6 - 2. 4 Ma). (2) A transitional growth phase (2. 4 - 1. 0 Ma), during which the ice sheet expanded towards the southern Barents Sea and reached the northwestern Kara Sea. This is inferred from step-wise decrease of Siberian river-supplied smectite-rich sediments, likely caused by ice sheet blockade and possibly reduced sea ice formation in the Kara Sea as well as glacigenic wedge growth along the northwestern Barents Sea margin hampering entrainment and transport of sea ice sediments to the Arctic-Atlantic gateway. (3) Finally, large-scale glaciation in the Barents Sea occurred after 1 Ma with repeated advances to the shelf <b>edge.</b> The <b>timing</b> is inferred from ice grounding on the Yermak Plateau at about 0. 95 Ma, and higher frequencies of gravity-driven mass movements along the western Barents Sea margin associated with expansive glacial growth...|$|R
40|$|Abstract — With ever {{shrinking}} device geometries, process variations play {{an increased}} {{role in determining}} the delay of a digital circuit. Under such variations, a gate may lie on the critical path of a manufactured die with a certain probability, called the criticality probability. In this paper, we present a new technique to compute the statistical criticality information in a digital circuit under process variations by linearly traversing the <b>edges</b> in its <b>timing</b> graph and dividing it into “zones”. We investigate the sources of error in using tightness probabilities for criticality computation with Clark’s statistical maximum formulation. The errors are dealt with using a new clustering based pruning algorithm which greatly reduces the size of circuit-level cutsets improving both accuracy and runtime over {{the current state of the}} art. On large benchmark circuits, our clustering algorithm gives about a 250 X speedup compared to a pairwise prunin...|$|R
40|$|High {{performance}} {{digital systems}} make {{extensive use of}} pipelines. Three years ago, “surfing ” pipelines were proposed. A timing pulse propagates through the surfing pipeline, and the individual logic elements of the pipeline are modified so that their delays are smaller {{in the presence of}} the pulse than in its absence. This creates an “event attractor ” where events in the data path occur at the rising <b>edge</b> of the <b>timing</b> pulse. These attractors reduce timing uncertainties and improve the performance of the pipeline. A circuit technique called “preswitching ” was proposed to implement the delay variation required for surfing. In this thesis, we demonstrate a working, surfing chip and address issues of power consumption and robustness. We demonstrate surfing by the design, fabrication and test of a chip using preswitching surfing circuits. The surfing ring in this chip supports two, independent waves of computation separated only by the surfing effect – no latches or other storage elements are used. We operated the ring for over 48 hours and 2 ∗ 10 15 surfing events and never observed an error. The preswitching circuits in this chi...|$|R
40|$|Why {{is a given}} node in a time-evolving graph ($t$-graph) {{marked as}} an anomaly by an {{off-the-shelf}} detection algorithm? Is {{it because of the}} number of its outgoing or incoming <b>edges,</b> or their <b>timings?</b> How can we best convince a human analyst that the node is anomalous? Our work aims to provide succinct, interpretable, and simple explanations of anomalous behavior in $t$-graphs (communications, IP-IP interactions, etc.) while respecting the limited attention of human analysts. Specifically, we extract key features from such graphs, and propose to output a few pair (scatter) plots from this feature space which "best" explain known anomalies. To this end, our work has four main contributions: (a) problem formulation: we introduce an "analyst-friendly" problem formulation for explaining anomalies via pair plots, (b) explanation algorithm: we propose a plot-selection objective and the LookOut algorithm to approximate it with optimality guarantees, (c) generality: our explanation algorithm is both domain- and detector-agnostic, and (d) scalability: we show that LookOut scales linearly on the number of edges of the input graph. Our experiments show that LookOut performs near-ideally in terms of maximizing explanation objective on several real datasets including Enron e-mail and DBLP coauthorship. Furthermore, LookOut produces fast, visually interpretable and intuitive results in explaining "ground-truth" anomalies from Enron, DBLP and LBNL (computer network) data...|$|R
40|$|Observations of {{a stellar}} {{occultation}} by Uranus and its nine rings are presented {{and used to}} examine the structures and kinematics of the rings. The observations of the occultation of the K giant star KM 12 were obtained in the K band with the 4 -m CTIO telescope at a signal-to-noise ratio higher than any previously obtained. Ring occultation profiles reveal the alpha ring to possibly have a double structure and less abrupt boundaries than the gamma ring, which exhibits diffraction fringes, while the eta ring is a broad ring with an unresolved narrow component at its inner <b>edge.</b> The present <b>timing</b> data, as well as previous occultation timings, are fit to a kinematic model in which all nine rings are treated as coplanar eclipses of zero inclination, precessing due to the zonal harmonics of the Uranian gravitational potential to obtain solutions for the ring orbits. Analysis of the residuals from the fitted orbits reveals that the proposed model is a good representation of ring kinematics. The reference system defined by the orbit solutions has also been used to obtain a value of 0. 022 + or - 0. 003 for the ellipticity of Uranus and a Uranian rotation period of 15. 5 h...|$|R
40|$|Fluctuations in {{the shape}} of amnioserosa (AS) cells during Drosophila dorsal closure (DC) provide an ideal system with which to {{understand}} contractile epithelia, both in terms of the cellular mechanisms and how tissue behaviour emerges from the activity of individual cells. Using quantitative image analysis we show that apical shape fluctuations are driven by the medial cytoskeleton, with periodic foci of contractile myosin and actin travelling across cell apices. Shape changes were mostly anisotropic and neighbouring cells were often, but transiently, organised into strings with parallel deformations. During the early stages of DC, shape fluctuations with long cycle lengths produced no net tissue contraction. Cycle lengths shortened with the onset of net tissue contraction, followed by a damping of fluctuation amplitude. Eventually, fluctuations became undetectable as AS cells contracted rapidly. These transitions were accompanied by an increase in apical myosin, both at cell-cell junctions and medially, the latter ultimately forming a coherent, but still dynamic, sheet across cells. Mutants with increased myosin activity or actin polymerisation exhibited precocious cell contraction through changes in the subcellular localisation of myosin. thickveins mutant embryos, which exhibited defects in the actin cable at the leading <b>edge,</b> showed similar <b>timings</b> of fluctuation damping to the wild type, suggesting that damping is an autonomous property of the AS. Our results suggest that cell shape fluctuations are a property of cells with low and increasing levels of apical myosin, and that medial and junctional myosin populations combine to contract AS cell apices and drive DC. Biotechnology and Biological Sciences Research Council; Engineering and Physical Sciences Research CouncilPeer reviewe...|$|R
40|$|We {{present an}} {{overview}} of the multi-layer intermediate representation [1] and its implementation and testing. As compiler infrastructure we use a combination of SUIF 2 and its Machine SUIF extension because both provide some tools that are useful for different parts of our work. Machine SUIF relies on base SUIF for the front-end translation, but contains several well-tested libraries such as CFG and DFG creation that SUIF alone does not provide. As the SUIF C front end is closed source, we were forced to develop a novel way of integrating timing information in C source code that does not jeopardize ANSI compliance, but is reliably transformed by the front-end. We did so by using #pragma directives {{in the beginning of the}} code, which express timing constraints between blocks of code that are designated by standard C labels. In order to have an even finer granularity when specifying the timing constraints, we introduce a type of statement that defines the time-critical variables in the code. The <b>timing</b> <b>edges</b> are thus attached to the operations on these variables. We then show how the annotated code is transformed into the multi-layer IR. This is done in the following order: Source Code -> SUIF IR -> Machine SUIF IR -> Multi-Layer IR. In the SUIF IR there are some preparative transformations, whereas the final creation part takes place in Machine SUIF. As the multi-layer IR comprises a novel concept of a parallel control layer based on data dependencies, we also developed an algorithm that extracts these control edges from the SSA graph of the program. In an concrete example we show how the multi-layer IR is constructed step-by-step, and introduce the branch postponing technique that makes use of it to resolve scheduling conflicts...|$|R
40|$|BACKGROUND AND PURPOSE: Arterial spin-labeling (ASL) with image {{acquisition}} at multiple delay times can be exploited in perfusion MR imaging to visualize and quantify the temporal dynamics of arterial blood inflow. In this study, we investigated {{the consequences of}} an internal carotid artery (ICA) occlusion and collateral blood flow on regional timing parameters. MATERIALS AND METHODS: Seventeen functionally independent patients with a symptomatic ICA occlusion (15 men, 2 women; mean age, 57 years) and 29 sex- and age-matched control subjects were investigated. ASL at multiple delay times was used to quantify regional cerebral blood flow (CBF) and the transit and trailing <b>edge</b> times (arterial <b>timing</b> parameters) reflecting, respectively, {{the beginning and end}} of the labeled bolus. Intra-arterial digital subtraction angiography and MR angiography were used to grade collaterals. RESULTS: In the hemisphere ipsilateral to the ICA occlusion, the CBF was lower in the anterior frontal (31 +/- 4 versus 47 +/- 3 mL/min/ 100 g, P <. 01), posterior frontal (39 +/- 4 versus 55 +/- 2 mL/min/ 100 g, P <. 01), and frontal parietal region (49 +/- 3 versus 61 +/- 3 mL/min/ 100 g, P =. 04) than that in control subjects. The trailing edge of the frontal-parietal region was longer in the hemisphere ipsilateral to the ICA occlusion compared with that in control subjects (2225 +/- 167 versus 1593 +/- 35 ms, P <. 01). In patients with leptomeningeal collateral flow, the trailing edge was longer in the anterior frontal region (2436 +/- 275 versus 1648 +/- 201 ms, P =. 03) and shorter in the occipital region (1815 +/- 128 versus 2388 +/- 203 ms, P =. 04), compared with patients without leptomeningeal collaterals. CONCLUSION: Regional assessment of timing parameters with ASL may provide valuable information on the cerebral hemodynamic status. In patients with leptomeningeal collaterals, the most impaired territory was found in the frontal lobe...|$|R
40|$|Static timing {{analysis}} has traditionally used the PERT method for identifying the critical {{path of a}} digital circuit. Due {{to the influence of}} the slope of a signal at a particular node on the subsequent path delay, an earlier signal with a signal slope greater than the slope of the later signal may result in a greater delay. Therefore, the traditional method for {{timing analysis}} may identify the incorrect critical path and report an optimistic delay for the circuit. We show that the circuit delay calculated using the traditional method is a discontinuous function with respect to transistor and gate sizes, posing a severe problem for circuit optimization methods. We propose a new timing analysis algorithm which resolves both these issues. The proposed algorithm selectively propagates multiple signals through each <b>timing</b> <b>edge</b> in cases where there exists ambiguity regarding which arriving signal represents the critical path. The algorithm for propagating the corresponding required times is also presented. We prove that the proposed algorithm identifies a circuit’s true critical path, where the traditional timing analysis method may not. We also show that under this method circuit delay and node slack are continuous functions with respect to a circuit’s transistor and gate sizes. In addition, we present a heuristic method which reduces the number of signals to be propagated at the expense of a slight loss in accuracy. Finally, we show how the proposed algorithm was efficiently implemented in an industrial static timing analysis and optimization tool, and present results for a number of industrial circuits. Our results show that the traditional timing analysis method underestimates the circuit delay by as much as 38 %, while that the proposed method efficiently finds the correct circuit delay with only a slight increase in run time. ...|$|R

