53|264|Public
25|$|In 1986, the BBC {{released}} the BBC Domesday Project, {{the results of}} a project to create a survey to mark the 900th anniversary of the original Domesday Book. In August 2006 the contents of Domesday went online, with an English translation of the book's Latin. Visitors to the website are able to look up a place name and see the <b>index</b> <b>entry</b> made for the manor, town, city or village. They can also, for a fee, download the relevant page.|$|E
2500|$|Stanton, Jeffrey. (2005) Venice California: Coney Island of the Pacific California: Donahue Publishing[...] [...] De Lay {{has many}} book <b>index</b> <b>entry</b> pages: 114, 129, *140, *141, 148, 150 *=illustrated ...|$|E
2500|$|The {{original}} registrations {{are required}} by law to be issued in the form of certified copies to any person who identifies an <b>index</b> <b>entry</b> and pays the prescribed fee. They can be ordered by registered users from the [...] or by postal or telephone ordering from the General Register Office or by post or in person from local registrars. If the birth was registered within the past 50 years detailed information is required before a certificate will be issued.|$|E
30|$|In [36], a {{mechanism}} to update propagation mechanism on peer-to-peer networks (P 2 P) is proposed. In this model, intermediate client caches the <b>index</b> <b>entries</b> to locate the node where the contents are cached or stored {{in order to reduce}} the access latency and to balance the workload. Intermediate clients' <b>index</b> <b>entries</b> are maintained by propagating the updated <b>index</b> <b>entries.</b> However, cached <b>index</b> <b>entries</b> may become obsolete due to mobility of MTs (mobile terminals) that incurs changes in the network topology in mobile environments. In [53], a system for stateless server is proposed. Serversperiodically broadcast an invalidation report (IR), in which the updated data items are marked. On the other hand, {{in order to reduce the}} latency, a new type of packet is introduced between IR packets, the updated invalidation report (UIR).|$|R
30|$|Let I_U be an set of <b>index</b> <b>entries</b> over a {{sequence}} of periods of time U. We partition {{a period of time}} over which the workloads supposed to be found in to {{a sequence}} of time units F with the length of each time unit and distances between time units the same as in U. A sequence of time units F obtains a set of <b>index</b> <b>entries</b> I_F. Finally, U is mapped onto F in a way that maximizes the total number of identical <b>index</b> <b>entries</b> in I_U and I_F. For example, let I_F contains the <b>index</b> <b>entries</b> 〈 Monday, {F[5], F[12], F[19], F[26]}〉 and 〈 The first day of a month, {F[11]}〉 and let I_U contains the <b>index</b> <b>entries</b> listed above. Then the best mappings of U are at position F[12] and later on at position F[26] because a location F[11] is closer to F[12] and F[5]. The mappings of U onto F and a set of periodic patterns over U determine the future workloads in F.|$|R
40|$|Abstract — We study new {{hierarchical}} indexing {{approach to}} process XPATH queries. Here, a hierarchical index consists of <b>index</b> <b>entries</b> that are pairs of queries and their (full/partial) answers (called extents). With such an index, XPATH queries can be processed {{to extract the}} results if they match the queries maintained in those <b>index</b> <b>entries.</b> Existing XML path indexing approaches support either child-axis (/) only, or additional descendant-or-self-axis (/) {{but only in the}} query root. Different from them, we propose a novel indexing approach to process a large fragment of XPATH queries, which may use /, /, and wildcards (∗). The key issues are how {{to reduce the number of}} <b>index</b> <b>entries</b> and how to maintain non-overlapping extents among <b>index</b> <b>entries.</b> We show how to compress such index and how to evaluate XPATH queries on it. Experiments show the efficiency of our approaches...|$|R
2500|$|Churchill firmly {{believed}} that Baldwin's conciliatory stance toward Hitler gave the German dictator {{the impression that}} Britain would not fight if attacked. Though known for his magnanimity toward political rivals such as Chamberlain, Churchill had none to spare for Baldwin. [...] "I wish Stanley Baldwin no ill," [...] Churchill said when declining to send him 80th birthday greetings in 1947, [...] "but {{it would have been}} much better had he never lived." [...] Churchill also {{believed that}} Baldwin, rather than Chamberlain, would be most blamed by subsequent generations for the policies that led to [...] "the most unnecessary war in history". [...] An <b>index</b> <b>entry</b> in the first volume of Churchill's [...] "History of the Second World War" [...] (The Gathering Storm) records Baldwin [...] "admitting to putting party before country" [...] for his alleged admission that he would not have won the 1935 election if he had pursued a more aggressive policy of rearmament. Churchill selectively quoted a speech in the Commons by Baldwin that gave the false impression that Baldwin was speaking of the general election when he was speaking of the Fulham by-election in 1933, and omits Baldwin's actual comments about the 1935 election: [...] "We got from the country, a mandate for doing a thing [...] that no one, twelve months before, would have believed possible". In his speech on Baldwin's death, Churchill paid him a double-edged yet respectful tribute: [...] "He was the most formidable politician I ever encountered in public life".|$|E
5000|$|Against the <b>index</b> <b>entry</b> [...] a [...] in Table 8 {{copy the}} {{corresponding}} row in Table 1, against the <b>index</b> <b>entry</b> [...] b [...] copy the corresponding row in Table 1, etc., and construct Table 9.|$|E
50|$|Unusually, his {{experimental}} scientific {{career is}} well documented. The extensive records and effects have been bequeathed to the National Library of Australia. The NLA <b>index</b> <b>entry</b> is http://catalogue.nla.gov.au/Record/5714531.|$|E
50|$|Note (5): InnoDB {{automatically}} generates adaptive hash <b>index</b> <b>entries</b> as needed.|$|R
5000|$|However, the {{following}} ICD-10-CM <b>Index</b> <b>entries</b> contain back-references to ICD-10-CM F55.3: ...|$|R
5000|$|<b>Index</b> <b>Entries</b> {{are only}} to 'direct traffic', thus we can {{compress}} them.|$|R
5000|$|Goulart, Ron. Ron Goulart's Great History of Comic Books: The Definitive Illustrated History {{from the}} 1890s to the 1980s. NY: McGraw-Hill/Contemporary, 1986. [...] "Draza Mihajlovic", <b>index</b> <b>entry,</b> p. 202.|$|E
5000|$|... #Caption: Simplified {{illustration}} of hard links on typical UN*X filesystem. Note that files [...] "A" [...] and [...] "D" [...] both point to same <b>index</b> <b>entry</b> in filesystem's inode table, making its reference count 2.|$|E
5000|$|The History of Ireland, by Geoffrey Keating, D.D. (1580-1644), {{written in}} the years prior to 1640, and known in the {{original}} Gaelic as , published by the Irish Texts Society, London, 1914. Volume IV. See <b>index</b> <b>entry</b> for Tír Chonaill ...|$|E
5000|$|Understanding the {{audience}} and understand what kind of <b>index</b> <b>entries</b> they're likely to look for ...|$|R
5000|$|The <b>index</b> <b>entries</b> in {{the first}} column of Table 9 are now deleted to get Table 10: ...|$|R
40|$|An {{introduction}} to the {{theory and practice of}} cataloguing in Malayalam meant for the librarians and mangers of village libraries and community information centres. The paper covers objectives of the library catalogue, its physical forms, types of catalogues, kinds of catalogue entries, etc. A comparison of alphabetic catalogue and classified catalogue is provided. Cataloguing according to S. R. Ranganathan’s Classified Catalogue Code (CCC) is discussed in detail with examples. Preparing main <b>entry,</b> book <b>index</b> <b>entries</b> for authors, collaborators and series, class <b>index</b> <b>entries,</b> cross reference <b>index</b> <b>entries</b> etc according to CCC are explained in detail with examples of popular Malayalam books. The structure of personal names of Kerala has also been discussed in detail. It is intended as a course material for cataloguing in short library science courses to be conducted for rural developments activists...|$|R
5000|$|... "From {{many points}} of view an index is synonymous with a catalogue, the {{principles}} of analysis used being identical, but whereas an <b>index</b> <b>entry</b> merely locates a subject, a catalogue entry includes descriptive specification of a document concerned with the subject".|$|E
50|$|FreeUndelete takes {{advantage}} of the fact that file deletion is just a minor state change in the system file index. It finds the area(s) where the file contents are located on the disk, then re-creates the <b>index</b> <b>entry</b> to undelete the file.|$|E
5000|$|... a William Vesey Fitzgerald (MP for Ennis 1808-1812 and 1813-1818) {{appears to}} be the same person as William Vesey-Fitzgerald, the MP from 1831 to 1832. Walker {{includes}} all three terms as MP for Ennis in one <b>index</b> <b>entry.</b> The History of Parliament website confirms it was the same person and that he was also MP for Clare in 1818-1828, Newport, Cornwall in 1829 and Lostwithiel in 1830.|$|E
5000|$|See the <b>index</b> <b>entries</b> under [...] "spelling pronunciation" [...] from Leonard Bloomfield, Language (originally {{published}} 1933; current edition 1984, University of Chicago Press, Chicago; [...] ).|$|R
40|$|Subject indexes were an {{important}} step forward for books because they enabled the comparison and correlations of information without extensive reading, re-reading and memorization. In this short paper, {{we focus on the}} user interaction and usage scenario of a new system called ScentIndex that enhances the subject index of an eBook by conceptually reorganizing it to suit particular information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. ScentIndex then computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page...|$|R
40|$|Recently {{the problem}} of {{indexing}} and locating content in peer-to-peer networks has received much attention. Previous work suggests {{it is useful to}} cache <b>index</b> <b>entries</b> at intermediate nodes that lie on the paths taken by search queries, but until now there has been little focus on how to maintain these intermediate caches. This paper proposes CUP, a protocol for performing Controlled Update Propagation to maintain caches of <b>index</b> <b>entries</b> in peer-to-peer networks. CUP asynchronously builds and maintains caches while answering search queries. CUP is independent of the underlying search mechanism and therefore can be used in the context of any peer-to-peer network...|$|R
50|$|Lange's year {{of birth}} is often {{reported}} as 1931, but the correct year is 1933. A possible source of this error is the Reader's Digest Almanac and Yearbook. It has shown the 1931 date from as early as 1980 to the 2009 issue. The 1976 and earlier editions give the {{year of birth}} as 1933. Other references such as Chase's Annual Events have always shown 1933, as does her Social Security Death <b>Index</b> <b>entry.</b>|$|E
5000|$|Indices: Allows {{creating}} of {{a simple}} keyword index or a somewhat more detailed index of {{the information in the}} text using embedded indexing codes. Unlike more sophisticated programs, InDesign is incapable of inserting character style information as part of an <b>index</b> <b>entry</b> (e.g., when indexing book, journal or movie titles). Indices are limited to four levels (top level and three sub-levels). Like tables of contents, indices can be sorted according to the selected language.|$|E
50|$|In 1986, the BBC {{released}} the BBC Domesday Project, {{the results of}} a project to create a survey to mark the 900th anniversary of the original Domesday Book. In August 2006 the contents of Domesday went online, with an English translation of the book's Latin. Visitors to the website are able to look up a place name and see the <b>index</b> <b>entry</b> made for the manor, town, city or village. They can also, for a fee, download the relevant page.|$|E
40|$|A {{great deal}} of {{analytical}} work {{is done in the}} context of reading, in digesting the semantics of the material, the identification of important entities, and capturing the relationship between entities. Visual analytic environments, therefore, must encompass reading tools that enable the rapid digestion of large amount of reading material. Other than plain text search, subject indexes, and basic highlighting, tools are needed for rapid foraging of text. In this paper, we describe a technique that presents an enhanced subject index for a book by conceptually reorganizing it to suit particular expressed user information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. Then our system, called ScentIndex, computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page. We also provide a number of navigational cues to help users peruse over this list of <b>index</b> <b>entries</b> and find relevant passages quickly. Compared to regular reading of a paper book, our study showed that users are more efficient and more accurate in finding, comparing, and comprehending material in our system...|$|R
50|$|Historically, the full-text {{records were}} kept in large bound volumes, and each volume held <b>indexed</b> <b>entries</b> for a single year, group of years, or partial year. More recently, in many United States offices, the records have been stored on {{microform}} or on computer.|$|R
50|$|Specific {{information}} is provided on fonts, line length, margins, page numbering, style, units and numbers, formulas and equations, paper (format and type), printing equipment, ink.The ANSI/NISO Z39.18 also includes specifications on <b>index</b> <b>entries</b> and errata, {{which are not}} present in the “Nancy style”.|$|R
5000|$|A {{variation}} is found on page 269 {{in the index}} of some editions of Brian Kernighan and Dennis Ritchie's book The C Programming Language; the <b>index</b> <b>entry</b> recursively references itself ("recursion 86, 139, 141, 182, 202, 269"). The earliest version of this joke was in [...] "Software Tools" [...] by Kernighan and Plauger, and also appears in [...] "The UNIX Programming Environment" [...] by Kernighan and Pike. It did {{not appear in the}} first edition of The C Programming Language.|$|E
50|$|The {{original}} registrations {{are required}} by law to be issued in the form of certified copies to any person who identifies an <b>index</b> <b>entry</b> and pays the prescribed fee. They can be ordered by registered users from the General Register Office Certificate Ordering Service or by postal or telephone ordering from the General Register Office or by post or in person from local registrars. If the birth was registered within the past 50 years detailed information is required before a certificate will be issued.|$|E
50|$|Using a data {{placement}} {{based on}} temporal locality of reference {{can improve the}} performance of reading data sets which are read {{in a similar way}} to the way they were written (e.g. a database record and its associated <b>index</b> <b>entry),</b> however it can also cause fragmentation from the perspective of spatial locality of reference. This does not adversely affect files that are sequentially written, randomly read, or are subsequently read using the same temporal pattern, but does affect sequential read after random write spatial data access patterns.|$|E
5000|$|Second-generation {{cognitive}} science {{emerged in the}} 1970s, after LoF was written. On {{cognitive science}} and its relevance to Boolean algebra, logic, and set theory, see Lakoff (1987) (see <b>index</b> <b>entries</b> under [...] "Image schema examples: container") and Lakoff and Núñez (2001). Neither book cites LoF.|$|R
40|$|Recently {{the problem}} of {{indexing}} and locating content in peer-to-peer networks has received much attention. Previous work suggests caching <b>index</b> <b>entries</b> at intermediate nodes that lie on the paths taken by search queries, but until now {{there has been little}} focus on how to maintain these intermediate caches. This paper proposes CUP, a new comprehensive architecture for Controlled Update Propagation in peer-to-peer networks. CUP asynchronously builds caches of <b>index</b> <b>entries</b> while answering search queries. It then propagates updates of <b>index</b> <b>entries</b> to maintain these caches. Under unfavorable conditions, when compared with standard caching based on expiration times, CUP reduces the average miss latency by as much as a factor of three. Under favorable conditions, CUP can reduce the average miss latency by more than a factor of ten. CUP refreshes intermediate caches, reduces query latency, and reduces network load by coalescing bursts of queries for the same item. CUP controls and confines propagation to updates whose cost is likely to be recovered by subsequent queries. CUP gives peer-to-peer nodes the flexibility to use their own incentive-based policies to determine when to receive and when to propagate updates. Finally, the small propagation overhead incurred by CUP is more than compensated for by its savings in cache misses. ...|$|R
50|$|<b>Index</b> <b>entries</b> {{contain the}} surname and Christian name(s) {{of the bride}} and groom, the year, county and parish where the {{marriage}} took place, and source of the record. The original Index is held at the Society of Genealogists {{and it may be}} searched online through the subscription website FindMyPast.|$|R
