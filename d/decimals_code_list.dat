0|1145|Public
50|$|The {{following}} tables {{show code}} page 437. Each character is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. See also the notes below, {{as there are}} multiple equivalent Unicode characters for some <b>code</b> points. The <b>decimal</b> <b>codes</b> are also known as Alt codes.|$|R
5000|$|... "ENCODING 65" [...] {{declares}} the <b>decimal</b> <b>code</b> {{point for}} this glyph in the font.|$|R
50|$|The {{following}} table shows Windows-1250. Each {{character is}} shown with its Unicode equivalent and its <b>decimal</b> <b>code.</b>|$|R
50|$|The {{following}} table {{shows the}} character set for PASCII. Each character is shown with its <b>decimal</b> <b>code</b> and its Unicode equivalent.|$|R
50|$|The {{following}} table {{shows the}} extended version of Windows-1256. Each character is shown with its Unicode equivalent and its <b>decimal</b> <b>code.</b>|$|R
50|$|The {{following}} table {{shows the}} KOI8 encoding. Each character is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point.|$|R
50|$|The {{capability}} of Vim to create custom mnemonics, as described below, {{which could be}} employed on an ad-hoc basis, requires the <b>decimal</b> <b>code</b> point.|$|R
50|$|IBM later {{created the}} 8-bit Extended Binary <b>Coded</b> <b>Decimal</b> Interchange <b>Code</b> (EBCDIC) based on BCDIC.|$|R
50|$|DEC The punched {{letter or}} number is {{translated}} into a four bit <b>decimal</b> <b>code.</b> This is like hexadecimal except that only 0 to 9 are valid.|$|R
40|$|The {{extended}} Biologische Bundesantalt and CHemische (BBCH) {{scale and}} its associated <b>decimal</b> <b>code</b> were {{used to describe the}} different growth stages of Sesamum indicum L. The study focused on different primary and secondary plant growth phases from germination to senescence. The use of a two-digit <b>decimal</b> <b>code</b> allowed the identification of the principal growth stages and their respective secondary stages. This approach suggests that this could be of great help to sesame growers and researchers for efficient planning of both management practices and experimental designs...|$|R
5000|$|The {{following}} table shows [...] "CWI-2". Each {{character is}} shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. Code points 1-31 and 127 (0x00-0x1F) {{have a different}} interpretation in some circumstances - see code page 437. Black borders highlight differences from code page 437.|$|R
50|$|The {{following}} table {{shows how}} characters are encoded in Macintosh Roman. Each character is shown with its Unicode equivalent right below and its <b>decimal</b> <b>code</b> at the bottom.|$|R
5000|$|The Chinese Telegraph Code, Chinese Telegraphic Code, or Chinese Commercial Code ( [...] or [...] ) is a four-digit <b>decimal</b> <b>code</b> (character encoding) for {{electrically}} telegraphing messages {{written with}} Chinese characters.|$|R
50|$|IBM's Extended Binary <b>Coded</b> <b>Decimal</b> Interchange <b>Code</b> (usually {{abbreviated}} as EBCDIC) is an eight-bit {{encoding scheme}} developed in 1963.|$|R
5000|$|All {{used the}} Extended Binary <b>Coded</b> <b>Decimal</b> Interchange <b>Code</b> (EBCDIC) of eight bits plus parity for {{internal}} data representation.|$|R
5000|$|Extended Binary <b>Coded</b> <b>Decimal</b> Interchange <b>Code</b> (EBCDIC) is an eight-bit {{character}} encoding used {{mainly on}} IBM mainframe and IBM midrange computer operating systems. EBCDIC {{descended from the}} code used with punched cards and the corresponding six bit binary-coded <b>decimal</b> <b>code</b> used with most of IBM's computer peripherals of the late 1950s and early 1960s. [...] It is also supported on various non-IBM platforms such as Fujitsu-Siemens' BS2000/OSD, OS-IV, MSP, and MSP-EX, the SDS Sigma series, and Unisys VS/9 and MCP.|$|R
5000|$|The {{following}} table shows Windows-1252. Each {{character is}} shown with its Unicode equivalent and its <b>decimal</b> <b>code.</b> Conversions to Unicode {{are based on}} the Unicode.org mapping of Windows-1252 with [...] "best fit".|$|R
50|$|Utilizing the Alt Numpad input method, {{users can}} enter a {{character}} by holding down the Alt key and entering the three-digit <b>decimal</b> <b>code</b> {{point on the}} Numpad. This provides a way to enter special characters not provided directly on the keyboard.|$|R
50|$|Some of {{the more}} notable uses of constant-weight codes, other than the one-hot and balanced-weight codes already {{mentioned}} above, includeCode 39 uses a 3 of 9 code;bi-quinary <b>coded</b> <b>decimal</b> <b>code</b> uses a 2 of 7 code,the 2 of 5 code,etc.|$|R
5000|$|In the decimal {{representation}} method, the 16-digit significand {{is represented}} as a <b>decimal</b> <b>coded</b> positive integer, based on densely packed decimal with 5 groups of 3 digits (except the most significant digit encoded specially) are each represented in declets (10-bit sequences).|$|R
50|$|For 135 film {{cartridges}} the DX {{number is}} hashed {{to produce a}} four digit code. A suffix digit {{for the number of}} exposures and a manufacturer's proprietary prefix digit are concatenated to form a 6 digit <b>decimal</b> <b>code.</b> The code is printed in human-readable text and also represented as an Interleaved 2 of 5 barcode. Size and position conform to the ANSI/NAPM IT1.14:1994 standard.|$|R
50|$|Each {{character}} is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. Only {{the second half}} of the table (code points 128 - 255) is shown, the first half (code points 0 - 127) being the same as ASCII.|$|R
5000|$|In this {{notation}} {{our standard}} <b>decimal</b> <b>coding</b> scheme is denoted bythe standard binary system isthe negabinary system isand the balanced ternary system isAll these coding systems have the mentioned features for [...] and , {{and the last}} two do not require a sign.|$|R
50|$|The {{following}} table {{shows the}} Atari ST character set. Each character is shown {{with a potential}} Unicode equivalent if available, and its <b>decimal</b> <b>code</b> point. See also the notes below re equivalent Unicode characters for some code points. Differences from code page 437 are shown boxed.|$|R
50|$|The Extended Binary <b>Coded</b> <b>Decimal</b> Interchange <b>Code</b> (EBCDIC) {{character}} set contains 65 control codes, including {{all of the}} ASCII control codes as well as additional codes which are mostly used to control IBM peripherals.|$|R
50|$|The {{following}} table shows {{code page}} 851. Each character is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. Only {{the second half}} of the table (code points 128 - 255) is shown, the first half (code points 0 - 127) being the same as ASCII.|$|R
50|$|The {{following}} table {{shows the}} character set for Devanagari. The code sets for Assamese, Bengali, Gujarati, Gurmukhi, Kannada, Malayalam, Oriya, Tamil, and Telugu are similar, with each Devanagari form {{replaced by the}} equivalent form in each writing system. Each character is shown with its <b>decimal</b> <b>code</b> and its Unicode equivalent.|$|R
5000|$|The Aiken code is a {{complementary}} binary-coded <b>decimal</b> <b>code</b> [...] A {{group of four}} bits is assigned to the decimal digits from 0 to 9 according to the following table [...] The code was developed by Howard Hathaway Aiken and is still used today in digital clocks , pocket calculators and similar devices.|$|R
25|$|The {{following}} table {{shows the}} latest 1985 {{definition of the}} HPRoman-8 character set (with some remarks regarding former definitions and alternative interpretations). Each character is shown with a potential Unicode equivalent and its <b>decimal</b> <b>code,</b> however, sources differ in the recommended translations {{for some of the}} codes even among definitions from Hewlett-Packard and IBM.|$|R
50|$|With advancements in laser technology, digits {{could be}} etched on tags, which caused {{the switch from}} binary to <b>decimal</b> <b>codes.</b> Currently, coded wire tags are marked using a decimal system, which is a row of numbers. The decimal system allows 1 million unique codes for batch tags, and 100,000 unique codes for {{individual}} sequential tags.|$|R
50|$|Unicode encodes p with tilde with a {{combining}} {{diacritical mark}} (U+0303 COMBINING TILDE), {{rather than a}} precomposed character. As such, the tilde may not align properly with some fonts and systems.In standard HTML code: majuscule P&#771;, minuscule p&#771;.The Unicode HTML hex code is: minuscule &#x0070;&#x0303;, majuscule &#x0050;&#x0303;.The Unicode HTML <b>decimal</b> <b>code</b> is: minuscule &#112;&#771;, majuscule &#80;&#771;.|$|R
25|$|The {{following}} table {{shows the}} HP RPL character set. Each character is shown {{with a potential}} Unicode equivalent and its <b>decimal</b> <b>code.</b> Where special HP TIO codes are defined to enter the character, they are given as well. The other characters can be entered using the \nnn TIO code syntax with nnn being a three-digit decimal number (with leading zeros if necessary) of the corresponding code point.|$|R
2500|$|As a {{very common}} character, the slash (as [...] "slant") was {{originally}} encoded in ASCII with the <b>decimal</b> <b>code</b> 47 (hexadecimal: 2F). Therefore, it is represented in Unicode (as [...] "solidus") by the codepoint with the same value, U+002F. The variants U+2044 ("fraction slash") and U+2215 ("division slash") are also available. In XML and HTML, the slash can also be represented with the character entity &#47;, ...|$|R
50|$|The {{following}} table shows {{code page}} 856. Each character is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. Only {{the second half}} of the table (code points 128-255) is shown, the first half (code points 0-127) being the same as ASCII; although code points 1-31 and 127 (00-1Fhex and 7Fhex) have a different interpretation in some circumstances - see code page 437.|$|R
50|$|The {{following}} table shows {{code page}} 868. Each character is shown with its equivalent Unicode code point and its <b>decimal</b> <b>code</b> point. Only {{the second half}} of the table (code points 128-255) is shown, the first half (code points 0-127) being the same as ASCII, except for code point 37 (25hex) which is defined as U+066A ARABIC PERCENT SIGN ⟨٪⟩ instead of U+0025 PERCENT SIGN ⟨%⟩.|$|R
5000|$|As a {{very common}} character, the slash (as [...] "slant") was {{originally}} encoded in ASCII with the <b>decimal</b> <b>code</b> [...] (hexadecimal: [...] ). Therefore, it is represented in Unicode (as [...] "solidus") by the codepoint with the same value, [...] The variants [...] ("fraction slash") and [...] ("division slash") are also available. In XML and HTML, the slash can also be represented with the character entity ,, [...]|$|R
