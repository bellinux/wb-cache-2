209|674|Public
25|$|Public <b>key</b> <b>authentication</b> (usually {{implemented}} with a HTTPS / SSL client certificate) using {{a client}} certificate.|$|E
50|$|There {{are several}} ciphersuites: The {{first set of}} ciphersuites use only {{symmetric}} key operations for authentication. The second set use a Diffie-Hellman key exchange authenticated with a pre-shared key. The third set combine public <b>key</b> <b>authentication</b> of the server with pre-shared <b>key</b> <b>authentication</b> of the client.|$|E
50|$|Accordingly, <b>key</b> <b>authentication</b> {{methods are}} being {{actively}} researched.|$|E
40|$|Abstract It is very {{important}} issues to protect many system resources using authorized client authentication in distributed client server systems. So {{it is not enough}} to prevent unauthorized opponents from attacking our systems that client authentication is performed using only the client's identifier and password. In this paper, we propose a secure authentication database modeling with two <b>authentication</b> <b>keys</b> such as a client <b>authentication</b> <b>key</b> and a server <b>authentication</b> <b>key.</b> The proposed <b>authentication</b> model can be used making high quality of computer security using two <b>authentication</b> <b>keys</b> during transaction processing. The two <b>authentication</b> <b>keys</b> are created by client and server, and are used in every request transaction without user's extra input. Using the proposed <b>authentication</b> <b>keys,</b> we can detect intrusion during authorized client's transaction processing because we can know intrusion immediately through comparing stored <b>authentication</b> <b>keys</b> in client server systems when hackers attack our network or computer systems...|$|R
5000|$|Symmetric {{master key}}: A {{symmetric}} master key {{is used to}} derive other symmetric keys (e.g., data encryption keys, key wrapping <b>keys,</b> or <b>authentication</b> <b>keys)</b> using symmetric cryptographic methods.|$|R
2500|$|RFC 2845, Secret <b>Key</b> Transaction <b>Authentication</b> for DNS (TSIG) ...|$|R
5000|$|Input: ciphertext, <b>key,</b> <b>authentication</b> tag, and {{optionally}} a header.|$|E
5000|$|Support {{for public}} <b>key</b> <b>authentication</b> and client side SSL {{certificates}} ...|$|E
5000|$|... #Subtitle level 2: Using {{public key}} {{fingerprints}} for <b>key</b> <b>authentication</b> ...|$|E
40|$|For {{identification}} of any message {{it is not}} necessary to have available all message, but it is sufficient for its autentication its hashing. Hashing is used at safe put passwords, decode keys, autentication its hashing. Hashing is used at safe put passwords, decode <b>keys,</b> <b>authentication</b> and electronic signature. Important is its one way and resistance for collisions. Most safety are standarts for hashing SHA- 1 and RIPEMD- 160. For {{identification of}} any message {{it is not necessary}} to have available all message, but it is sufficient for its autentication its hashing. Hashing is used at safe put passwords, decode keys, autentication its hashing. Hashing is used at safe put passwords, decode <b>keys,</b> <b>authentication</b> and electronic signature. Important is its one way and resistance for collisions. Most safety are standarts for hashing SHA- 1 and RIPEMD- 160...|$|R
40|$|Abstract: In {{this paper}} we provide a quantum {{authentication}} protocol. The two parties share {{a sequence of}} EPR(Einstein-Podolsky-Rosen) pairs as the <b>authentication</b> <b>key.</b> To authenticate each other, one party creates aux-iliary qubits and make them interact with the <b>authentication</b> <b>key.</b> After measurement in selected basis, he or she affirm the other’s identity. We shown that no one without the <b>authentication</b> <b>key</b> can pass the authentication process. So the protocol is secure. The <b>authentication</b> <b>key</b> is reusable {{if there are no}} eavesdroppers and errors in transmis-sion...|$|R
5000|$|System login with SSH <b>key</b> based <b>authentication</b> and SSH <b>key</b> {{stored on}} a smart card.|$|R
50|$|Fingerprints {{can also}} be useful when {{automating}} the exchange or storage of <b>key</b> <b>authentication</b> data. For example, if <b>key</b> <b>authentication</b> data needs to be transmitted through a protocol or stored in a database where {{the size of a}} full public key is a problem, then exchanging or storing fingerprints may be a more viable solution.|$|E
5000|$|Public <b>key</b> <b>authentication</b> (usually {{implemented}} with a HTTPS / SSL client certificate) ...|$|E
50|$|Authentication request {{frames are}} sent by clients {{when they want}} to connect to a network. Authentication precedes {{association}} in infrastructure networks. Either open authentication or shared <b>key</b> <b>authentication</b> is possible. After serious flaws were found in shared <b>key</b> <b>authentication,</b> most networks switched to open authentication, combined with a stronger authentication method applied after the association phase.|$|E
40|$|Entity {{authentication}} becomes ubiquitously {{necessary in}} pervasive computing environments. We provide taxonomy of entity <b>authentication</b> between <b>keys</b> and locks. Based on the discussion, we propose a novel authentication approach for pervasive computing environments. A person uses a single device, the Master Key, which aggregates all his digital <b>keys</b> for entity <b>authentication.</b> The Master <b>Key</b> initiates <b>authentication</b> and selects proper keys by exchanging code words with locks. With {{an emphasis on}} usability, the Master <b>Key</b> secures <b>authentication,</b> keeps authentication private, and supports various key-lock interactions. We analyze privacy and security properties, verify the protocols, and measured performance...|$|R
40|$|This paper {{proposes a}} novel {{authentication}} protocol for wireless access security. Current symmetric <b>key</b> based <b>authentication</b> schemes {{are vulnerable to}} a variety of attacks such as the denial-of-service attacks and the domino effect attacks, while public <b>key</b> based <b>authentication</b> schemes are costly. This paper designed a novel elliptic curve based authentication scheme that can avoid the certificate verification cost while still enjoys strong security properties of public key based schemes...|$|R
40|$|Abstract: As a {{new type}} of {{wireless}} mobile networks, Ad Hoc networks do not depend on any fixed infrastructure, and have no centralized control unit and so its computation capabilities are limited by mobile nodes. In this paper, a novel multi-party key agreement scheme with password authentication and sharing password evolvement for Ad Hoc networks is proposed based on ECC (elliptic curves cryptography). One of the functions of passwords is used as sharing information to authenticate the mobile node’s secret keys, and the other is used as a symmetrical key to encrypt alternating information between mobile nodes. The freshness and security of passwords are guaranteed by sharing password evolvement every time in mobile node’s secret <b>keys</b> <b>authentication</b> and <b>key</b> agreement. Consequently, the computational overheads and the store load of mobile nodes are lessened, moreover, secret <b>keys</b> <b>authentication</b> and information encryption between mobile nodes are provided. The new scheme enjoys many secure properties such as against man-in-the-middle attack, against replay attack, key independence, forward security, etc. Key words: Ad Hoc network; elliptic curve; key agreement; key authenticatio...|$|R
5000|$|Secret {{sharing and}} Public <b>Key</b> <b>authentication</b> methods in {{addition}} to basic password-based authentication.|$|E
5000|$|Integrates with Pageant (PuTTY {{authentication}} agent) {{for full}} support of public <b>key</b> <b>authentication</b> with SSH ...|$|E
50|$|Two {{methods of}} {{authentication}} {{can be used}} with WEP: Open System authentication and Shared <b>Key</b> <b>authentication.</b>|$|E
40|$|The <b>authentication</b> <b>key</b> {{exchange}} protocol enables communication {{participants to}} authenticate {{each other and}} agree on the session key over an insecure public network. Recently, a three-party <b>authentication</b> <b>key</b> exchange protocol based on Elliptic curve cryptograph is proposed. In this paper, we improve the three-party encrypted key exchange protocol by bilinear maps. The proposed three-party <b>authentication</b> <b>key</b> exchange protocol is provable secure under Computational Diffie-Hellman assumptions in the standard model. Furthermore, the novel protocol is more efficient...|$|R
5000|$|An anti-cheating {{mechanism}} {{using an}} RSA-based public <b>key</b> cryptography <b>authentication</b> system that also attempts (with limited success) {{to detect and}} prevent man-in-the-middle attacks.|$|R
50|$|HDD FDE {{is made by}} HDD vendors {{using the}} OPAL and Enterprise {{standards}} developed by the Trusted Computing Group. Key management takes place within the hard disk controller and encryption keys are 128 or 256 bit Advanced Encryption Standard (AES) <b>keys.</b> <b>Authentication</b> on power up of the drive must still take place within the CPU via either a software pre-boot authentication environment (i.e., with a software-based full disk encryption component - hybrid full disk encryption) or with a BIOS password.|$|R
5000|$|In Shared <b>Key</b> <b>{{authentication}},</b> the WEP key is {{used for}} authentication in a four-step challenge-response handshake: ...|$|E
5000|$|At first glance, {{it might}} seem as though Shared <b>Key</b> <b>authentication</b> is more secure than Open System authentication, since the latter offers no real authentication. However, it is quite the reverse. It is {{possible}} to derive the keystream used for the handshake by capturing the challenge frames in Shared <b>Key</b> <b>authentication.</b> Therefore, data can be more easily intercepted and decrypted with Shared <b>Key</b> <b>authentication</b> than with Open System authentication. If privacy is a primary concern, it is more advisable to use Open System authentication for WEP authentication, rather than Shared Key authentication; however, this also means that any WLAN client can connect to the AP. (Both authentication mechanisms are weak; Shared Key WEP is deprecated in favor of WPA/WPA2.) ...|$|E
5000|$|Secure Shell (SSH V1/V2) {{based on}} OpenSSH 6.6 with public/private <b>key</b> <b>authentication,</b> port {{forwarding}} (tunneling) and Smart Card support.|$|E
5000|$|... #Subtitle level 3: Target users (<b>authentication</b> <b>key</b> distribution) ...|$|R
50|$|During BlackBerry Enterprise Server installation, {{the unique}} Server Routing Protocol Identifier (SRP ID) and SRP <b>Authentication</b> <b>Key</b> must be entered. The SRP ID and SRP <b>Authentication</b> <b>Key</b> {{register}} and authenticate the BlackBerry Enterprise Server on the network. The work flow is same like any authentication process. The SRP ID {{can be thought}} of as a login name and the <b>Authentication</b> <b>Key</b> as a password. The SRP ID uniquely identifies the BlackBerry Enterprise Server on the network. When the BlackBerry Enterprise Server connects to the BlackBerry Infrastructure, it must provide these two pieces of information to connect and open a session.|$|R
5000|$|... choose <b>authentication</b> <b>key</b> [...] {{and send}} it {{securely}} to the receiver ...|$|R
50|$|Authentication {{response}} {{frames are}} sent to clients to answer authentication request frames. There is one answer to each request, and it contains either status information or a challenge related to shared <b>key</b> <b>authentication.</b>|$|E
5000|$|... $HOME/.ssh/id_rsa.pub: The $HOME/.ssh/id_rsa.pub file {{contains}} the protocol version 2 RSA public key for authentication. The contents of this file {{should be added}} to $HOME/.ssh/authorized_keys on all computers where a user wishes to log in using public <b>key</b> <b>authentication.</b>|$|E
50|$|Syncplify.me Server! is a Windows-based secure file {{transfer}} server with support for plain and encrypted FTP protocols, both implicit and explicit, {{as well as}} SSH-2 and SFTP. The server supports user authentication via built-in user database, Windows-based authentication, Active Directory, and public <b>key</b> <b>authentication.</b>|$|E
40|$|Authentication is an {{important}} security mechanism for detecting forged messages in a sensor network. Each cluster head (CH) in dynamic key distribution schemes forwards a key dissemination message that contains encrypted <b>authentication</b> <b>keys</b> within its cluster to next-hop nodes {{for the purpose of}} authentication. The forwarding path of the key dissemination message strongly affects the number of nodes to which the <b>authentication</b> <b>keys</b> in the message are actually distributed. We propose a routing method for the key dissemination messages {{to increase the number of}} nodes that obtain the <b>authentication</b> <b>keys.</b> In the proposed method, each node selects next-hop nodes to which the key dissemination message will be forwarded based on secret key indexes, the distance to the sink node, and the energy consumption of its neighbor nodes. The experimental results show that the proposed method can increase by 50 – 70 % the number of nodes to which <b>authentication</b> <b>keys</b> in each cluster are distributed compared to geographic and energy-aware routing (GEAR). In addition, the proposed method can detect false reports earlier by using the distributed <b>authentication</b> <b>keys,</b> and it consumes less energy than GEAR when the false traffic ratio (FTR) is ≥ 10 %...|$|R
5000|$|AKA - <b>Authentication</b> and <b>Key</b> Agreementa.k.a. 3G <b>Authentication,</b> Enhanced Subscriber Authorization (ESA) ...|$|R
40|$|Information-theoretically secure (ITS) {{authentication}} {{is needed}} in Quantum Key Distribution (QKD). In this paper, we study security of an ITS authentication scheme proposed by Wegman & Carter, {{in the case of}} partially known <b>authentication</b> <b>key.</b> This scheme uses a new <b>authentication</b> <b>key</b> in each <b>authentication</b> attempt, to select a hash function from an Almost Strongly Universal_ 2 hash function family. The partial knowledge of the attacker is measured as the trace distance between the <b>authentication</b> <b>key</b> distribution and the uniform distribution; this is the usual measure in QKD. We provide direct proofs of security of the scheme, when using partially known key, first in the information-theoretic setting and then in terms of witness indistinguishability as used in the Universal Composability (UC) framework. We find that if the authentication procedure has a failure probability ϵ and the <b>authentication</b> <b>key</b> has an ϵ' trace distance to the uniform, then under ITS, the adversary's success probability conditioned on an authentic message-tag pair is only bounded by ϵ+||ϵ', where || is the size of the set of tags. Furthermore, the trace distance between the <b>authentication</b> <b>key</b> distribution and the uniform increases to ||ϵ' after having seen an authentic message-tag pair. Despite this, we are able to prove directly that the authenticated channel is indistinguishable from an (ideal) authentic channel (the desired functionality), except with probability less than ϵ+ϵ'. This proves that the scheme is (ϵ+ϵ') -UC-secure, without using the composability theorem. Comment: 15 page...|$|R
