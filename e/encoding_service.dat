10|50|Public
50|$|Broadjam also {{provides}} a music <b>encoding</b> <b>service.</b> Major record labels use this service to encode, catalog, and control metadata.|$|E
50|$|Zencoder is a {{cloud-based}} video <b>encoding</b> <b>service</b> launched in 2010. Zencoder offers video transcoding, ingest, and syndication via web service APIs.|$|E
50|$|In November 2008, On2 {{announced}} that it would partner with Zencoder to create Flix Cloud, a high-capacity online video <b>encoding</b> <b>service</b> using Amazon Elastic Compute Cloud (EC2). Flix Cloud launched in April 2009.|$|E
50|$|Since 2016 {{a series}} of cloud <b>encoding</b> <b>services</b> (Amazon, Brightcove, castLabs, JW Player, Telestream, Wowza) offer VP9 encoding.|$|R
5000|$|Other {{milestones}} included {{being the}} first company to sell CD writers and DVD authoring systems in the UK, {{and one of the}} first to buy an MPEG 1 encoder and offer <b>encoding</b> <b>services.</b>|$|R
40|$|Abstract. In this paper, {{we propose}} a manager of {{seamless}} mobile service for pervasive/ubiquitous multimedia, which can dynamically follow the user {{from place to}} place without user awareness or intervention by layering architecture of component platform and agent-based migrating mechanism under consideration of robustness, scalability and load balancing. The manager can custom multimedia task and <b>encode</b> <b>service</b> descriptions by the XML or SMIL technology to provide flexibility, it can also discover the services, filter, synthesize or handoff them according to the context information and match between the task and service, especially, it can manage seamless mobility of pervasive multimedia. The validity evaluation of the manager has been done by experimental demo. ...|$|R
50|$|Movie Encode is a video <b>encoding</b> <b>service</b> {{by which}} CRI generates Sofdec or MPEG files from other media. For a fee (designated by {{the length of}} the file to be encoded), files are {{converted}} to the desired format with the quality specified by the client. It is now known as CRI Movie Encode.|$|E
50|$|In 2008, Zencoder {{partnered with}} On2 Technologies to create Flix Cloud, an online video <b>encoding</b> <b>service.</b> Flix Cloud officially {{launched}} in April 2009. Google acquired On2 in 2010, and Flix Cloud {{was shut down}} later that year. Zencoder launched as a new transcoding service in May 2010 after the company participated in the Y Combinator startup accelerator.|$|E
5000|$|... ionCube {{was founded}} in 2002, and {{introduced}} tools to protect software written using the PHP programming language from being viewed, changed, and run on unlicensed computers. The encoding technology grew out of earlier work on the PHP Accelerator project, and at first launch included an online <b>encoding</b> <b>service</b> where PHP scripts can be uploaded and an encoded version downloaded in return, and a command line tool for Linux soon after. The tools use the technique of compiling to bytecode prior to encoding so that source code is eliminated, and runtime overheads are reduced. A PHP extension called the ionCube Loader handles the reading and execution of encoded files at run time.|$|E
5000|$|Binary {{encoding}} - This {{format is}} not human-readable, {{but much more}} compact than its XML representation. Binary encoding is therefore frequently used when the available bandwidth is small and a compact <b>encoding</b> of <b>services</b> is of the essence.|$|R
50|$|Most {{music is}} encoded {{straight}} from source, which is dubbed Online Encoding Exclusive, so gapless albums could provide gapless playback, unlike most other music services. There is no extra charge {{for using the}} Online <b>Encoding</b> Exclusive <b>service.</b> The user sets the codec parameters, including the desired bitrate, allowing for superior quality over other music download services such as iTunes and Napster.|$|R
40|$|We {{describe}} our ongoing {{work that}} aims at understanding how one {{can develop a}} system that performs finite model reasoning in Description Logics. In particular {{we report on the}} preliminary results that we have obtained by <b>encoding</b> reasoning <b>services</b> in DLs as specifications for constraint programming solvers. We have used such an approach to reason with respect to finite models on UML class diagrams. ...|$|R
40|$|Web {{services}} utilizations in Spatial Data Infrastructure (SDI) {{have been}} well established and standardized by Open Geospatial Consortium (OGC). Similar web services for 3 D SDI are also being established in recent years, with extended capabilities to handle 3 D spatial data. The increasing popularity of using City Geographic Markup Language (CityGML) for 3 D city modelling applications leads to the needs for large spatial data handling for data delivery. This paper revisits the available web services in OGC Web Services (OWS), and propose the background concepts and requirements for encoding spatial data via Web <b>Encoding</b> <b>Service</b> (WES). Furthermore, the paper discusses the data flow of the encoder within web service, e. g. possible integration with Web Processing Service (WPS) or Web 3 D Services (W 3 DS). The integration with available web service could be extended to other available web services for efficient handling of spatial data, especially 3 D spatial data...|$|E
40|$|Introduction Video {{encoding}} is a lengthy, CPU intensive task, {{involving the}} conversion of video media from one format to another. Furthermore, and {{of particular interest to}} distributed processing, input video files can be easily broken down into work-units. These factors make the distribution of video encoding processes viable. The majority of research on distributed processing has focused on Grid technologies, however, in practicality, Grid services tend to be inflexible and offer poor support for ad-hoc interaction. Consequently it can be difficult for such technologies to efficiently exploit the growing pool of resources available {{around the edge of the}} Internet on home PCs. It is these resources that the DVE uses to provide a distributed video <b>encoding</b> <b>service.</b> 2. Implementation In order to expedite the development of the distributed video encoder, it is being developed as a (Java) plug-in for Lancaster's P 2 P Application Framework [3]. The P 2 P Application Framework provides a...|$|E
30|$|Within several NoSQL datastores, the client–server {{interaction}} {{is achieved by}} means of dedicated, ad hoc defined, communication protocols, which regulate the information exchanged by the counterparts and the related format. Each message either encodes a client request or a server response to a client request. Client requests encode the invocation of analysis or management services provided by the server, whereas server responses encode the data that are returned by the server. Whenever a user invokes the execution of a service, either through an application or {{by means of a}} graphical interface, the request is first encoded and then sent to the server. Similarly, whenever the server completes the computation of a command, it encodes the response as a message sending it to the connected clients. In order to specify a client for a specific programming language, it is thus sufficient to implement an interpreter of the considered communication protocol, which is capable of <b>encoding</b> <b>service</b> invocations as messages. This suggests that, in order to enforce FGAC, one could focus on the messages exchanged by the clients and the server, rather than focusing on syntactical aspects of the query languages.|$|E
40|$|Low {{complexity}} video coding schemes {{are aimed}} to provide video <b>encoding</b> <b>services</b> also for devices with restricted computational power. Video coding process {{based on the}} three-dimensional discrete cosine transform (3 D DCT) can offer a low complexity video encoder by omitting the computationally demanding motion estimation operation. In this coding scheme, extended fast transform is also used, instead of the motion estimation, to decorrelate the temporal dimension of video data. Typically, the most complex part of the 3 D DCT based coding process is the three-dimensional transform. In this paper, we demonstrate methods {{that can be used}} in lossy coding process to reduce the number of one-dimensional transforms required to complete the full 3 D DCT or its inverse operation. Because unnecessary computations can be omitted, fewer operations are required to complete the transform. Results include the obtained computational savings for standard video test sequences. The savings are reported in terms of computational operations. Generally, the reduced number of computational operations also implies longer battery lifetime for portable devices...|$|R
40|$|The {{emergence}} of cloud <b>encoding</b> <b>services</b> facilitates many content owners, {{such as the}} online video vendors, to transcode their digital videos without infrastructure setup. Such service provider charges the customers only based on their resource consumption. For both the service provider and customers, lowering the resource consumption while maintaining the quality is valuable and desirable. Thus, to choose a cost-effective encoding parameter, configuration is essential and challenging due to the tradeoff between bitrate, encoding speed, and resulting quality. In this paper, we explore the feasibility of an automatic parameter-tuning framework, based on which the above objective can be achieved. We introduce a simple service model, which combines the bitrate and encoding speed into a single value: encoding cost. Then, we conduct an empirical study {{to examine the relationship}} between the encoding cost and various parameter settings. Our experiment is based on the one-pass Constant Rate Factor method in x 264, which can achieve relatively stable perceptive quality, and we vary each parameter we choose to observe how the encoding cost changes. The experiment results show that the tested parameters can be independently tuned to minimize the encoding cost, which makes the automatic parameter-tuning framework feasible and promising for optimizing the cost on video encoding cloud...|$|R
50|$|Radio Rental Cable Television {{started the}} UK's first {{pay-per-view}} movie channel, 'Cinematel' in 1981; the films were also shown on a sister cable operation in Chatham, Kent. They were broadcast from studios at 14 Victoria Hill, Swindon. The signals were <b>encoded</b> and the <b>service</b> was {{available only to}} subscribers, who needed 'set-top' boxes to decode the signal.|$|R
40|$|Web {{services}} {{provide a}} standard {{means for the}} interoperable operations between electronic devices in a network. The mission of Web service discovery is to seek an appropriate Web service for a service requester {{on the basis of}} the service descriptions in Web service advertisements and the service requester&# 039;s requirements. Nevertheless, the standard language used for <b>encoding</b> <b>service</b> descriptions does not have the capacity to specify the capabilities of a Web service, leading to the problem of ambiguity in the service discovery process. This brings up the vision of Semantic Web Services and Semantic Web Service discovery, which make use of the Semantic Web technologies to enrich the semantics of service descriptions for service discovery. Semantic Web Service matchmakers are the programs or frameworks designed to implement the task of Semantic Web Service discovery and have drawn a significant amount of attention from both academia and industry from the start of this century. In this paper, we conduct a survey of the contemporary Semantic Web Service matchmakers in order to obtain an overview of the state of the art in this research area. We summarize six technical dimensions from the past literature and analyze the typical Semantic Web Service matchmakers mostly developed during the past 4 or 5 years in terms of the six dimensions. By means of this analysis, we gain an understanding of the current research and summarize a series of potential issues to that would provide the foundation for future research in this area...|$|E
40|$|This paper {{reports on}} a {{technology}} enabling bidirectional semantic interoperability between FIPA compliant agents and Web services, using OWL-S as a common service description language. This is an an extension of previously reported work consisting of a gateway for WSDL <b>encoded</b> Web <b>service</b> descriptions. This paper reports on the enhanced model, a semantic integration gateway, its architecture and operation. We discuss how the Gateway allows agents and Web clients to invoke both atomic services and composition patterns consisting of both agent services and Web services represented as unified workflow patterns. This is achieved by using OWL-S to express the service descriptions of both agent and Web services, with JADE agents engineered to facilitate the service composition process...|$|R
40|$|Interacting with a {{web service}} enabled {{marketplace}} {{in order to}} achieve a complex task involves sequencing a set of individual service operations, gathering information from the services, and making choices. We propose to encode the problem of issuing requests to a composition of web services as a constraint programming problem. In particular, we provide algorithms to <b>encode</b> nondeterministic web <b>service</b> business processes and user goals given in an expressive request language. ...|$|R
40|$|The {{growth in}} recent years of radio {{services}} and {{the increasing use of}} digitally <b>encoded</b> broadcast <b>services</b> which, due to their high compression rates, are highly susceptible to impulsive type interference caused by power system related effects has placed pressure on the radio frequency spectrum. Consequently, the impact of electromagnetic interference caused by high voltage equipment such as partial discharges and breaker operation transients is becoming more of an issue. This paper describes a system for the location of discharge sources based on the reception of impulsive radio frequency interference radiated from the vicinity of the site. The authors discuss its application to the location of discharge sources close to a domestic residence situated under a 132 kV overhead lin...|$|R
40|$|The {{widespread}} {{usage of}} computing devices is eroding the individual's right to privacy. Pervasive computing environments, where users interact {{with a number}} of computing devices unconscious of their presence, harm user privacy by generating digital trails of every ordinary user activity. Privacy protection is thus a critical factor for the success of pervasive computing applications. Service oriented pervasive computing, where resources and applications are modeled as services, offers a compelling implementation of pervasive computing. In service oriented computing, applications can more easily handle the openness, heterogeneity and dynamics typical of pervasive computing environments. Realization of this view requires a service-oriented middleware that provides the basic features for provision and consumption of pervasive services: namely, service access, service discovery and service composition. The service-oriented middleware is particularly critical for privacy protection in service oriented pervasive computing since privacy vulnerabilities at the middleware layer affect any application using the middleware. In this thesis, we study how a service oriented middleware affects the privacy of users in pervasive computing environments. Our contribution is a privacy-enhanced middleware that increases privacy protection during service access, discovery and composition. The middleware provides a service access protocol that enables nodes to communicate privately without the problems of public key encryption. The protocol splits messages through multiple paths that resist to attackers controlling a certain number of nodes or networks. It also provides a privacy-enhanced service discovery protocol that uses <b>encoded</b> <b>service</b> descriptions to protect personal information and that reduces the trust requirements of service directories. Since different service descriptions can generate the same encoded data, attackers are unable to identify the original <b>service</b> from the <b>encoded</b> description in <b>service</b> announcements and requests. Finally, the middleware provides a service composition mechanism that allows users to compare the privacy impact of executing service compositions that are functionally equivalent but define different partitions of data among service providers, thus enabling selection of the composition that causes the smallest impact on user privacy. The middleware features are implemented and evaluated in terms of performance and effectiveness. Our middleware architecture facilitates the development of service-oriented pervasive applications that respect the privacy of individuals. Since the middleware handles the privacy issues introduced by the underlying software platform, applications can focus on application-specific mechanisms for privacy protection. Users that consume services on top of this middleware are also able to more effectively protect their privacy, since they can rely on middleware provided functionalities to better control personal information disclosure...|$|R
40|$|Abstract. Interacting with a {{web service}} enabled {{marketplace}} {{in order to}} achieve a complex task involves sequencing a set of individual service operations, gathering information from the services, and making choices. We propose to encode the problem of issuing requests to a composition of web services as a constraint programming problem. In particular, we provide algorithms to <b>encode</b> nondeterministic web <b>service</b> business processes and user goals given in an expressive request language. ...|$|R
40|$|This paper {{proposes a}} new scheme for {{efficient}} dissemination and discovery of service information in mobile ad hoc networks. By extending Bloom filter-based service summarization scheme, our discovery middleware layer also <b>encodes</b> distance to <b>services</b> in summarization filters. By having the distance information gradually attenuated during its propagation, our proposal enables faster discovery of services {{with a limited}} amount of advertisement traffic. Categories and Subject Descriptors C. 2. 1 [Computer-Communication Networks]: Networ...|$|R
40|$|Multimedia applications, and {{especially}} <b>encoded</b> video <b>services,</b> {{are expected to}} play a major role in the 3 rd generation (3 G) and beyond mobile communication systems. Given that future service providers are expected to provide video applications at various price and quality levels, quick and economically affordable methods for preparing/encoding the offering media at various qualities are necessary to be developed. This paper presents a method for objective evaluation of the perceived quality of MPEG 4 video content, based on a quantification of subjective assessments. Showing that subjectively derived perceived quality of service (PQoS) vs. bit rate curves can be successfully approximated by a group of exponential functions, the proposed method exploits a simple objective metric, which is obtained from the mean frame rate vs. bit rate curves of an encoded clip. The validity of this metric is assessed by comparing subjectively derived PQoS results to the corresponding ones, which come from the proposed objective method, showing that the proposed technique provides satisfactory PQoS estimation...|$|R
40|$|Choice of {{mechanisms}} for disseminating multimedia contents to geographically dispersed participants {{is influenced by}} many factors including network topology, <b>encoding</b> technique, <b>service</b> model, and mode of transmission. Encoding techniques render the multimedia file sizes manageable while a multicast service model provides a scalable architecture to disseminate the contents. The underlying network can be a private Intranet, Internet, or heterogeneous {{which can be a}} combination of several network topologies. The mode of transmission can be, synchronous, when live or recorded contents are transmitted to multiple users simultaneously or on-demand, when the files are served as per users’ requests. We measure effectiveness of delivery by the Quality of Service (QoS) experienced by end users. Efficiency is measured in terms of optimal utilization of system and network resources in delivering contents. Given a specific encoding technique and a multicast service model, {{mechanisms for}} effective and efficient delivery of multimedia contents vary depending {{on the nature of the}} underlying network topology and the mode of transmission deployed...|$|R
40|$|In a publish/subscribe paradigm, {{user service}} {{discovery}} requires matching user preferences to available published services, e. g., a user {{may want to}} find {{if there is a}} Chinese restaurant close by. This is a difficult problem when users are mobile, wirelessly connected to a network, and dynamically roaming in different environments. The magnitude of the problem increases with respect to the number of attributes for each user’s preference criteria, as matches must be done in real-time. We present an algorithm that uses Singular Value Decomposition to <b>encode</b> each <b>service</b> properties in a few values. Users’ preference criteria are matched by using the same encoding to produce a value that can be rapidly compared to those of the services. We show that reasonable matches can be found in time O(m log n) where n is the number of publications and m the number of attributes in the preference criteria (subscription). This is in contrast to “approximate nearest neighbor ” techniques, which require either time or storage exponential in m. Keywords: Publish/subscribe, nearest neighbor search, multidimensional search, high dimensional data space, Singular Valu...|$|R
40|$|In {{this paper}} we propose a {{scalable}} framework for providing differentiated QoS multicast channels for end users with heterogeneous requirements based on the Source Specific Multicast (SSM) model, which we name QoS Source Specific Multicast (QSSM). By <b>encoding</b> each QoS <b>service</b> class into a multicast group address and by maintaining the corresponding mapping table at the edge of each DiffServ domain, the proposed QSSM architecture embraces per-group QoS statelessness at core routers, which is a vital requirement of the DiffServ paradigm. We construct independent trees for each class of service, i. e. QoS-specific trees, in order to reduce routing complexity and avoid QoS fairness issues among different classes...|$|R
50|$|Due to {{the minimal}} {{regional}} broadcasting on BBC Two in England, {{it was not}} seen as cost-effective to create digital versions of these regions. On satellite, this would have meant as many individual feeds of BBC Two as BBC One whilst {{in the case of}} digital terrestrial, a decision to <b>encode</b> all BBC <b>services</b> other than BBC One using the more efficient statistical multiplexing technique made it technically and economically much harder to provide variations without either equipping each regional centre with costly equipment or using the same method as for BBC One and suffering reduced picture quality as a result. Consequently, short BBC London bulletins continued to be broadcast throughout England on BBC Two.|$|R
50|$|The initial HEVC Advance license had {{a maximum}} royalty rate of US$2.60 per device for Region 1 {{countries}} and a content royalty rate of 0.5% {{of the revenue}} generated from HEVC video services. Region 1 countries in the HEVC Advance license include the United States, Canada, European Union, Japan, South Korea, Australia, New Zealand, and others. Region 2 countries are countries not listed in the Region 1 country list. The HEVC Advance license had a maximum royalty rate of US$1.30 per device for Region 2 countries. Unlike MPEG LA, there was no annual cap. On top of this, HEVC Advance also charged a royalty rate of 0.5% of the revenue generated from video <b>services</b> <b>encoding</b> content in HEVC.|$|R
40|$|Web services––Web-accessible {{programs}} and devices––are a key application {{area for the}} Semantic Web. With the proliferation of Web services and the evolution towards the Semantic Web comes the opportunity to automate various Web services tasks. Our objective is to enable markup and automated reasoning technology to describe, simulate, compose, test, and verify compositions of Web services. We take as our starting point the DAML-S DAML + OIL ontology for describing the capabilities of Web services. We define the semantics for a relevant subset of DAML-S {{in terms of a}} first-order logical language. With the semantics in hand, we <b>encode</b> our <b>service</b> descriptions in a Petri Net formalism and provide decision procedures for Web service simulation, verification and composition. We also provide an analysis of the complexity of these tasks under different restrictions to the DAML-S composite services we can describe. Finally, we present an implementation of our analysis techniques. This implementation takes as input a DAML-S description of a Web service, automatically generates a Petri Net and performs the desired analysis. Such a tool has broad applicability both as a back end to existing manual Web service composition tools, and as a stand-alone tool for Web service developers...|$|R
5000|$|President Kennedy's {{decision}} to send military troops to Vietnam as [...] "advisors" [...] was a signal that Selective Service Director Lewis B. Hershey needed to visit the Oval Office. From that visit emerged two wishes of JFK with regard to conscription. The first was that the names of married men with children should occupy {{the very bottom of}} the callup list. Just above them should be the names of men who are married. This Presidential policy, however, was not to be formally <b>encoded</b> into Selective <b>Service</b> Status. Men who fit into these categories became known as Kennedy Husbands. When President Lyndon Johnson decided to rescind this Kennedy policy, there was a last-minute rush to the altar by thousands of American couples.|$|R
40|$|Web {{services}} [...] Web-accessible {{programs and}} devices [...] {{are a key}} application area for the Semantic Web. With the proliferation of Web services and the evolution towards t he Semantic Web comes the opportunity to automate various Web services tasks. Our objective is to enable markup and automated reasoning technology to describe, simulate, compose, test, and verify compositions of Web services. We take as our starting point the DAML-S DAML+OIL ontology for describing the capabilities of Web services. We define the semantics for a relevant subset of DAML-S {{in terms of a}} first-order logical language. With the semantics in hand, we <b>encode</b> our <b>service</b> descriptions in a Petri Net formalism and provide decision procedures for Web service simulation, verification and composition. We also provide an analysis of the complexity of these tasks under different restrictions to the DAML-S composite services we can describe. Finally, we present an implementation of our analysis techniques. This implementation takes as input a DAML-S description of a Web service, automatically generates a Petri Net and performs the desired analysis. Such a tool has broad applicability both as a back end to existing manual Web service composition tools, and as a stand-alone tool for Web service developers...|$|R
40|$|Abstract—The {{automated}} specification {{and execution}} of com-posite services are important capabilities of service-oriented systems. In practice, service invocation is performed by client components (stubs) that are generated from service descriptions at design time. Several researchers have proposed mechanisms for late binding. They all require an object representation (e. g., Java classes) of the XML data types specified in service descriptions to be generated and meaningfully integrated in the client code at design time. However, the potential of dynamic composition can only be fully exploited if supported in the invocation phase by the capability of dynamically binding to services with previously unknown interfaces. In this work, we address this limitation by proposing a way of specifying and executing composite services, without resorting to previously compiled classes that represent XML data types. Semantic and structural properties <b>encoded</b> in <b>service</b> descriptions are exploited to implement a mechanism, based on the Graphplan algorithm, for the run-time specification of composite service plans. Composite services are then executed through the stubless invocation of constituent services. Stubless invocation is achieved by exploiting structural properties of service descriptions for the run-time generation of messages. Index Terms—Web services, semantic web, service compo-sition, service invocation, XML, planning, service brokering, service-oriented architecture. I...|$|R
40|$|Abstract. In an open {{environment}} {{populated by}} {{large numbers of}} heterogeneous information services, integration is a major challenge. In such a setting, the efficient coupling between directory-based service discovery and service composition engines is crucial. In this paper we present a directory service that offers specific functionality in order to enable efficient service integration. The directory implementation relies on a compact numerical <b>encoding</b> of <b>service</b> parameters and on a multidimensional index structure. It supports isolated service integration sessions providing a consistent view of the directory data. During a session a client may issue multiple queries to the directory and retrieve the results incrementally. In order to optimize {{the interaction of the}} directory with different service composition algorithms, the directory supports custom ranking functions that are dynamically installed with the aid of mobile code. The ranking functions are written in Java, but the directory service imposes severe restrictions on the programming model in order to protect itself against malicious or erroneous code (e. g., denial-of-service attacks). With the aid of user-defined ranking functions, application-specific ordering heuristics can be deployed directly. Experiments on randomly generated problems show that they significantly reduce the number of query results that have to be transmitted to the client by up to 5 times. ...|$|R
