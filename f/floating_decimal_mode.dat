0|83|Public
5000|$|Complete <b>Floating</b> <b>Decimal</b> Interpretive System for the IBM 650 Magnetic Drum Calculator (aka. BLIS — the Bell Lab Interpretive System) ...|$|R
50|$|Also, in NMOS 6502s, the N flag {{is invalid}} when the {{processor}} is operating in <b>decimal</b> <b>mode.</b> The 65C02 fixes this problem (at {{the cost of}} an additional clock cycle), and thus increases the usefulness of <b>decimal</b> <b>mode.</b>|$|R
5|$|As well as four-function arithmetic, the Executive had {{the ability}} to compute squares, reciprocals, and {{multiply}} or divide by a fixed constant. The Executive could carry out sums to two, four or six decimal places, or use a <b>floating</b> <b>decimal</b> point.|$|R
40|$|In many applications, {{the present}} 16 -bit fixed decimal point {{arithmetic}} is insufficient. The processors {{of the next}} generation will use the <b>floating</b> <b>decimal</b> point representation of numbers and arithmetic. Of possible solutions, the single-chip processor is best suited to mass production and much preferred for real time operation. The existing processors use hardware multipliers, using the Booth algorithm; their calculating unit consists of a multiplier and an adder, working in parallel and pipeline formats. A <b>floating</b> <b>decimal</b> point processor, developed in the Heinrich Hertz Institute, is described. Its most distinctive feature is the complexity of calculations and addressings, and a new 'add and shift' multiplication. A design aid programme system for specific application has been also developed. The hardware simulation works faster than the software method...|$|R
5000|$|In the NMOS 6502 and {{derivatives}} (e.g., 6510), {{the simultaneous}} assertion of a hardware interrupt line {{and execution of}} [...] was not accounted for in the design - the [...] instruction will be ignored in such a case. Also, {{the status of the}} <b>decimal</b> <b>mode</b> flag in the processor status register is unchanged following an interrupt of any kind. This behavior can potentially result in a difficult to locate bug in the interrupt handler if <b>decimal</b> <b>mode</b> happens to be enabled at the time of an interrupt. These anomalies were corrected in all CMOS versions of the processor.|$|R
50|$|Atomic values may {{belong to}} any of the 19 {{primitive}} types defined in the XML Schema specification (for example, string, boolean, double, <b>float,</b> <b>decimal,</b> dateTime, QName, and so on). They may also belong to a type derived from one of these primitive types: either a built-in derived type such as integer or Name, or a user-defined derived type defined in a user-written schema.|$|R
50|$|Power ISA v2.06 {{introduces}} the new VSX vector-scalar instructions which extend SIMD processing for the Power ISA to support up to 64 registers, with support for regular <b>floating</b> point, <b>decimal</b> <b>floating</b> point and vector execution. POWER7 {{is the first}} Power Architecture processor to implement Power ISA v2.06.|$|R
5000|$|Data {{storage is}} a database, {{which is a}} {{collection}} of tables with typed columns. SQL Server supports different data types, including primary types such as Integer, <b>Float,</b> <b>Decimal,</b> Char (including character strings), Varchar (variable length character strings), binary (for unstructured blobs of data), Text (for textual data) among others. The rounding of floats to integers uses either Symmetric Arithmetic Rounding or Symmetric Round Down (fix) depending on arguments: [...] gives 3.|$|R
50|$|The System z9 was {{the first}} {{commercial}} server to add IEEE 754 <b>decimal</b> <b>floating</b> point instructions, although these instructions were implemented in microcode with some hardware assists. The System z10 implements the main IEEE 754 <b>decimal</b> <b>floating</b> point operations in a built-in, integral component of each processor core and instruction set architecture. As examples, Enterprise PL/I, XL C, and the z/OS Java BigDecimal class can exploit hardware <b>decimal</b> <b>floating</b> point.|$|R
25|$|Data {{storage is}} a database, {{which is a}} {{collection}} of tables with typed columns. SQL Server supports different data types, including primary types such as Integer, <b>Float,</b> <b>Decimal,</b> Char (including character strings), Varchar (variable length character strings), binary (for unstructured blobs of data), Text (for textual data) among others. The rounding of floats to integers uses either Symmetric Arithmetic Rounding or Symmetric Round Down (fix) depending on arguments: SELECT Round(2.5, 0) gives 3.|$|R
50|$|In {{programmer}} mode, inputting {{a number}} in decimal {{has a lower}} and upper limit, depending on the data type, and must always be an integer. Data type of number in <b>decimal</b> <b>mode</b> is signed n-bit integer when converting from number in hexadecimal, octal, or binary mode.|$|R
5000|$|The display {{has eight}} digits, {{with both a}} minus sign and an {{overflow}} indicator dot on the right hand side. The decimal point is [...] "floating"—it is positioned automatically by the calculator logic. This was an advanced feature for the time; many desk calculators of this era had fixed decimal points and required very wide displays to maintain a minimum level of precision across {{the entire range of}} numbers available. The QT-8D's <b>floating</b> <b>decimal</b> allowed its display to be much narrower while still keeping eight digits of precision.|$|R
5000|$|ISO/IEC TS 18661-2:2015, on IEC 60559:2011-compatible <b>decimal</b> <b>floating</b> point {{arithmetic}} ...|$|R
5000|$|Output: <b>Decimal</b> <b>floating</b> point numbers, {{punch tape}} or Mercedes {{typewriter}} ...|$|R
5000|$|For <b>decimal</b> <b>floating</b> point, {{there are}} {{additional}} exceptions {{along with the}} above: ...|$|R
25|$|<b>Decimal</b> <b>floating</b> {{point is}} a {{computer}} arithmetic system closely related to scientific notation.|$|R
50|$|Misc - {{floating}} point, vector, signal processing, cache locking, <b>decimal</b> <b>floating</b> point, etc.|$|R
5000|$|GNU Compiler Collection (aka gcc) {{provides}} {{support for}} <b>decimal</b> <b>floats</b> {{as an extension}} ...|$|R
5000|$|ISO/IEC TR 24732:2009, on <b>decimal</b> <b>floating</b> point arithmetic, {{superseded}} by ISO/IEC TS 18661-2:2015 ...|$|R
50|$|A {{word has}} the range &minus;1,073,741,823 to 1,073,741,823 (inclusive) in binary mode, and &minus;9,999,999,999 to 9,999,999,999 (inclusive) in <b>decimal</b> <b>mode.</b> The sign-and-magnitude {{representation}} of integers in the MIX architecture distinguishes between “&minus;0” and “+0.” This contrasts with modern computers, whose two's-complement representation of integer quantities includes a single representation for zero, but whose range {{for a given}} number of bits includes one more negative integer {{than the number of}} representable positive integers.|$|R
5000|$|Once the {{accumulator}} {{and index}} registers have been preserved, the ISR {{can use them}} as needed. When the ISR has concluded its work, it would restore the registers and then resume the interrupted foreground task. Again, the following NMOS code is typical: pla tayrestore Y-register pla taxrestore X-register plarestore accumulator rtiresume interrupted taskA consequence of the [...] instruction is the MPU will return to <b>decimal</b> <b>mode</b> if that was its state {{at the time of}} the interrupt.|$|R
5000|$|Each named {{attribute}} has {{an associated}} {{set of rules}} called operations: one doesn't sum characters or manipulate and process an integer array as an image object - [...] one doesn't process text as type <b>floating</b> point (<b>decimal</b> numbers).|$|R
5000|$|Supported datatypes: 8, 16, 32, and 64 bit signed or {{unsigned}} integers, <b>float,</b> double, <b>decimal</b> (BCD), {{fixed or}} variable-length character or wide character, binary or character large objects (blobs), date, time, timestamp, guid/uuid, and db_addr (database address—aka, rowid).|$|R
5000|$|Binary {{data types}} such as two's {{complement}} integers, BCD, packed <b>decimals,</b> <b>floats,</b> calendars and Booleans ...|$|R
5000|$|... 14 {{hexadecimal}} digits {{of precision}} is {{roughly equivalent to}} 17 decimal digits. A conversion of double precision hexadecimal <b>float</b> to <b>decimal</b> string would require at least 18 significant digits in order to convert {{back to the same}} hexadecimal float value.|$|R
50|$|The Ricoh 2A03 or RP2A03 (NTSC version) / Ricoh 2A07 or RP2A07 (PAL version) is the 8-bit {{microprocessor}} in the Nintendo Entertainment System {{video game}} console manufactured by Ricoh. It contained a second source MOS Technology 6502 core, modified to disable the 6502's binary-coded <b>decimal</b> <b>mode,</b> with 22 memory-mapped I/O registers that controlled an APU, rudimentary DMA, and game controller polling. It {{was also used}} as a sound chip and secondary CPU by Nintendo's arcade games Punch-Out!! and Donkey Kong 3.|$|R
50|$|The {{calculator}} used {{a traditional}} <b>floating</b> <b>decimal</b> display for numbers {{that could be}} displayed in that format, but automatically switched to scientific notation for other numbers. The fifteen-digit LED display was capable of displaying a ten-digit mantissa plus its sign and a decimal point and a two-digit exponent plus its sign. The display used a unique form of multiplexing, illuminating a single LED segment at a time rather than a single LED digit, because HP research had shown that this method was perceived by the human eye as brighter for equivalent power. Light emitting diodes were relatively new {{at the time and}} were much dimmer than high efficiency diodes developed in subsequent decades.|$|R
5000|$|Speaking {{as someone}} who has delved into the intricacies of PL/I, I am sure that only Real Men could have written such a machine-hogging, cycle-grabbing, all-encompassing monster. Allocate an array and free the middle third? Sure! Why not? Multiply a {{character}} string times a bit string and assign the result to a <b>float</b> <b>decimal?</b> Go ahead! Free a controlled variable procedure parameter and reallocate it before passing it back? Overlay three different types of variable on the same memory location? Anything you say! Write a recursive macro? Well, no, but Real Men use rescan. How could a language so obviously designed and written by Real Men not be intended for Real Man use? ...|$|R
5000|$|Using the {{strongly}} typed {{retrieval methods}} {{can be more}} cumbersome, especially without specific knowledge of the underlying data. Numeric values in the database can translate to several [...]NET types: Int16, Int32, Int64, <b>Float,</b> <b>Decimal,</b> or Currency. Trying to retrieve a value using the wrong type results in an exception being thrown, which stops code from running further, and slows the application down. This is also true when you use the right type, but encounter a DbNull value ( [...] this can be avoided by using the IsDbNull boolean function of the DataReader class [...] ). The benefit to this retrieval method is that data validation is performed sooner, improving the probability of data correction being possible.|$|R
5000|$|Real numbers, using <b>decimal</b> <b>floating</b> point. These store up to 14 {{significant}} digits {{depending on}} the calculator model.|$|R
50|$|Some languages, such as REXX and Java, provide <b>decimal</b> <b>floating</b> points operations, {{which provide}} {{rounding}} errors {{of a different}} form.|$|R
50|$|Two {{versions}} {{existed for}} the 650s with a 2000 word memory drum: FOR TRANSIT I (S) and FOR TRANSIT II, the latter for machines equipped with indexing registers and automatic <b>floating</b> point <b>decimal</b> (bi-quinary) arithmetic. Appendix A of the manual included wiring diagrams for the IBM 533 card reader/punch control panel.|$|R
5000|$|The methods {{by which}} the MPU state is {{preserved}} and restored within an ISR will vary with the {{different versions of the}} 65xx family. For NMOS processors (e.g., 6502, 6510, 8502, etc.), there can be only one method {{by which the}} accumulator and index registers are preserved, as only the accumulator can be pushed to and pulled from the stack. [...] Therefore, the following ISR entry code is typical: phasave accumulator txa phasave X-register tya phasave Y-register cldensure binary modeThe [...] instruction is necessary because, as previously noted, NMOS versions of the 6502 do not clear the [...] (<b>decimal</b> <b>mode)</b> flag in the status register when an interrupt occurs.|$|R
50|$|Six {{hexadecimal}} digits {{of precision}} is {{roughly equivalent to}} six decimal digits (i.e. (6 − 1) log10(16) ≈ 6.02). A conversion of single precision hexadecimal <b>float</b> to <b>decimal</b> string would require at least 9 significant digits (i.e. 6 log10(16) + 1 ≈ 8.22) in order to convert {{back to the same}} hexadecimal float value.|$|R
50|$|Python has a {{broad range}} of basic data types. Alongside {{conventional}} integer and floating-point arithmetic, it transparently supports arbitrary-precision arithmetic, complex numbers, and <b>decimal</b> <b>floating</b> point numbers.|$|R
40|$|Abstract. On {{the demand}} of {{miniaturization}} of antenna, {{this paper presents}} a circular microstrip antenna whose part of its port is sealed. Changing part of its magnetic wall into electric wall, then a <b>decimals</b> <b>mode</b> which exist between 01 TM and 11 TM is proposed. Elaborating the theory of reducing the resonant frequency with Bessel function’s characteristics and resonance formula of circular microstrip antenna. Using the HFSS for simulation, the resonant frequency of the antenna change from 3. 0 GHz to 1. 2 GHz. The results prove the reliability of theory analysis. The size could be reduced nearly 60 % compared with ordinary antenna. The antenna has a simple structure and {{can be applied to}} engineering application...|$|R
