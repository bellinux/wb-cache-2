751|10000|Public
25|$|SDRAM latency is not {{inherently}} lower (faster) than asynchronous DRAM. Indeed, early SDRAM {{was somewhat}} slower than contemporaneous burst EDO DRAM {{due to the}} additional logic. The benefits of SDRAM's internal buffering come from its ability to <b>interleave</b> operations to multiple banks of memory, thereby increasing effective bandwidth.|$|E
2500|$|Theorem. If {{the burst}} error {{correcting}} ability of some code is [...] then the burst error correcting ability of its -way <b>interleave</b> is ...|$|E
2500|$|DDR4 {{will not}} double the {{internal}} prefetch width again, but {{will use the}} same 8n prefetch as DDR3. [...] Thus, {{it will be necessary}} to <b>interleave</b> reads from several banks to keep the data bus busy.|$|E
40|$|The {{performance}} (bit-error rate vs. signal-to-noise ratio) of {{two different}} <b>interleaving</b> systems, block <b>interleaving</b> and the newer helical <b>interleaving</b> are compared. Both systems are studied with and without error forecasting. Without error forecasting, the two systems have identical performance. When error forecasting is used with shallow <b>interleaving,</b> helical <b>interleaving</b> gains, but less than 0. 05 dB, over block <b>interleaving.</b> For higher <b>interleaving</b> depth, the systems have almost indistinguishable performance...|$|R
40|$|In process algebras such as ACP, {{parallel}} {{processes are}} considered to be <b>interleaved</b> in an arbitrary way. In the case of multi-threading as found in contemporary programming languages, parallel processes are actually <b>interleaved</b> according to some <b>interleaving</b> strategy. <b>Interleaving</b> strategies are also known as process-scheduling policies. In many systems, for instance hardware/software systems, we have to do with both parallel processes that may best be considered to be <b>interleaved</b> in an arbitrary way and parallel processes that may best be considered to be <b>interleaved</b> according to some <b>interleaving</b> strategy. Therefore, we extend ACP in this paper with the latter form of <b>interleaving.</b> Comment: 17 page...|$|R
40|$|The Galileo {{spacecraft}} employs {{concatenated coding}} schemes with Reed-Solomon <b>interleaving</b> depth 2. The {{bit error rate}} (BER) performance of Galileo's concatenated codes, assuming different <b>interleaving</b> depths (including infinite <b>interleaving</b> depth) are compared. It is observed that Galileo's depth 2 <b>interleaving,</b> when used with the experimental (15, 1 / 4) code, requires about 0. 4 to 0. 5 dB additional signal-to-noise ratio {{to achieve the same}} BER performance as the concatenated code with ideal <b>interleaving.</b> When used with the standard (7, 1 / 2) code, depth 2 <b>interleaving</b> requires about 0. 2 dB more signal-to-noise ratio than ideal <b>interleaving...</b>|$|R
2500|$|Through Buddhism's and Hindu's influence, {{a variety}} of Chanda {{prosodic}} meters were received via Ceylon. Since the Thai language is mono-syllabic, {{a huge number of}} loan words from Sankrit and Pali are needed to compose in these classical Sanskrit meters. According to B.J. Terwiel, this process occurred with an accelerated pace during the reign of King Boromma-trailokkanat (1448-1488) who reformed Siam's model of governance by turning the Siamese polity into an empire under the mandala feudal system. The new system demanded a new imperial language for the noble class. This literary influence changed the course of the Thai or Siamese language - setting it apart from other tai languages - by increasing the number of Sanskrit and Pali words drastically and imposing the demand on the Thais to develop a writing system that preserves the orthography of Sanskrit words for literary purpose. By the 15th century, the Thai language had evolved into a distinctive medium along with a nascent literary identity of a new nation. It allowed Siamese poets to compose in different poetical styles and mood - from playful and humorous rimed verses, to romantic and elegant klong and to polished and imperious chan prosodies modified from classical Sanskrit meters. Thai poets experimented with these different prosodic forms, producing innovative [...] "hybrid" [...] poems such as Lilit ( [...] - an <b>interleave</b> of khlong and kap or rai verses) or Kap hor Klong ( [...] - khlong poems enveloped by kap verses). The Thai thus developed a keen mind and a keen ear for poetry. To maximize this new literary medium, however, a rather intensive classical education in Pali was required. This made poetry an exclusive occupation of the noble classes. However, B.J. Terwiel notes, citing a 17th-century text book Jindamanee, that scribes and common Siamese men, too, were encourage to learn basic Pali and Sanskrit for their career advancement.|$|E
50|$|The <b>interleave</b> bound, , {{is the sum}} of the {{interleaving}} {{through all}} the nodes of the tree. The <b>interleave</b> bound of the above sequence is 2.|$|E
50|$|Fast load can be {{switched}} off in setup {{in case of}} incompatibility (non-1541 as device 8). Minimum <b>interleave</b> is 7, fast saver is only supported in manager, and uses an <b>interleave</b> of 8. PAL/NTSC compatible timing.|$|E
40|$|We propose an <b>interleaving</b> {{scheme for}} multidimensional (M-D) <b>interleaving.</b> To {{achieved}} {{by using a}} novel concept of basis <b>interleaving</b> array. A general method of obtaining a variety of basis <b>interleaving</b> arrays is presented. Based on the basis <b>interleaving</b> array, we then propose an <b>interleaving</b> technique, called successive packing, to generate the <b>interleaved</b> array of arbitrary size. It is shown that the proposed technique can spread any error burst of m 1 within m 1 array (1 n- 1) e#ectively so that the error burst can be corrected with simple random error correcting-code (provided the error correcting-code is available). It is further shown that the technique is optimal for combating a set of arbitrarily-shaped error bursts. Since this algorithm needs to be implemented only once for a given M-D array, the computational cost is is low. Key words: Basis <b>interleaving</b> array, Multidimensional <b>interleaving,</b> error burst, randomerror -correction codes...|$|R
40|$|Abstract — Analysis, design, and {{evaluation}} of different in-terleaving techniques for the forward converter are presented. Specifically, {{the performance of the}} one-choke <b>interleaving</b> ap-proach is compared with the two-choke <b>interleaving</b> approach. The results of the analysis are verified experimentally on two 5 -V/ 20 -A <b>interleaved</b> dc/dc converters. The analysis, design, {{and evaluation}} results can be extended to any number of <b>interleaved</b> converters. Index Terms—Forward converter, <b>interleaving.</b> I...|$|R
40|$|We propose an area-efficient {{high-speed}} <b>interleaved</b> Viterbi decoder architecture, {{which is}} based on the state-parallel architecture with register exchange path memory structure, for <b>interleaved</b> convolutional code. The state-parallel architecture uses as many add-compare-select (ACS) units as the number of trellis states. By replacing each delay (or storage) element in state metrics memory (or path metrics memory) and path memory (or survival memory) with delays, <b>interleaved</b> Viterbi decoder is obtained where is the <b>interleaving</b> degree. The decoding speed of this decoder architecture is as fast as the operating clock speed. The latency of proposed <b>interleaved</b> Viterbi decoder is &# 147;decoding depth (DD) <b>interleaving</b> degree,&# 148; which increases linearly with the <b>interleaving</b> degree. </p...|$|R
5000|$|The typical {{character}} {{transmission delay}} is 12.8 seconds with Long <b>Interleave</b> Mode.|$|E
50|$|The 1541 disk {{typically}} has 35 tracks. Track 18 is reserved; {{the remaining}} tracks {{are available for}} data storage. The header is on 18/0 (track 18, sector 0) along with the BAM (block availability map), and the directory starts on 18/1 (track 18, sector 1). The file <b>interleave</b> is 10 blocks, while the directory <b>interleave</b> is 3 blocks.|$|E
50|$|SpinRite was {{originally}} written as {{a hard drive}} <b>interleave</b> tool. At the time SpinRite was designed, hard drives often had a defect list printed on the nameplate, listing known bad sectors discovered at the factory. In changing the drive's <b>interleave,</b> SpinRite needed {{to be able to}} remap these physical defects into different logical sectors. SpinRite therefore gained its data recovery and testing capabilities as a side-effect of its original purpose. Gibson states that today, drive <b>interleave</b> is no longer an issue, but the data recovery features of the tool proved to be so useful that it evolved into the data recovery tool that it is today.|$|E
3000|$|Similarly, to the interleavers used in MBTCs [5], for MNBTCs we also {{perform an}} intra-symbol <b>interleaving</b> step and an inter-symbol <b>interleaving</b> step. Inter-symbol <b>interleaving</b> permutes the input words u [...]...|$|R
50|$|The modules and {{the memory}} {{subsystem}} of the DEC 7000/1000 supports <b>interleaving.</b> Modules with more than two strings supports two-way <b>interleaving.</b> At a system level, the memory subsystem supports a maximum of eight-way <b>interleaving.</b> If the configuration results in more levels of <b>interleaving</b> than the memory subsystem can support, multiple memory modules are then grouped into larger banks so the level of <b>interleaving</b> in the memory subsystem does not exceed the maximum of eight ways.|$|R
5000|$|... j) Processes for Error Correction: Time <b>Interleaving</b> and Frequence <b>Interleaving</b> ...|$|R
50|$|The {{analogous}} operation to an out shuffle for an infinite sequence is the <b>interleave</b> sequence.|$|E
50|$|In mathematics, an <b>interleave</b> {{sequence}} is obtained by merging two sequences via an in shuffle.|$|E
5000|$|Caution! Under no {{circumstances}} confuse the mesh with the <b>interleave</b> operator, except under confusing circumstances! ...|$|E
40|$|In the {{wireless}} sensor network, the WLAN interference, multi-path fading andattenuation {{are the main}} reason for packets’ corruption. Forward errorcorrection is one of the methods for error mitigation. Many coding methods aredesigned to improve the reliability of wireless channel. However, none of thesecoding methods could handle the burst errors that widely exist in wirelesschannel and are mainly responsible for packet corruption. <b>Interleaving</b> isintroduced to robust these coding methods and make those corrupted packetsavailable to be corrected by spreading the burst errors. The Reed-Solomon(15, 7) block code is used as the forwarding error correction in theseexperiments. In this paper, seven different symbol <b>interleaving</b> will be firstlysimulated in the Matlab platform under four different channels to evaluate theirpacket error rate performances. Then, two of the seven <b>interleaving</b> with betterperformance and the simplest <b>interleaving</b> algorithm, general block interleavingwill be implemented in the TinyOS platform, and they will be compared witheach other from packet error rate, <b>interleaving</b> time and memory consumptionaspects. Experiments show that, for theoretical channel, <b>interleaving</b> plays animportant role to enhance the capability to correct the corrupted packets exceptfor Rayleigh channel, in which the impact of <b>interleaving</b> is generally slight. Meanwhile for the channel under IEEE 802. 11 b/g interference, interleavingenhance more than 10 % PER in the receiver. However for MFA channel, theenhancement is slight, only 1. 85 %. Convolutional <b>interleaving</b> has the best PERperformance in AWGN channel and the channel with deterministic SER, whilematrix <b>interleaving</b> has the lowest PER in WLAN affected channel. In thelatency and memory consumption aspect, For the same packet length, generalblock <b>interleaving</b> has the shortest <b>interleaving</b> time while matrix interleavinghas the longest. In the same <b>interleaving</b> algorithm, the execution time becomeslonger with growth of packet size. Within the same <b>interleaving</b> method, thelonger the packet size is, the more memory that would be consumed. Under thesame <b>interleaving</b> length, general block <b>interleaving</b> consumes least memoryand convolutional <b>interleaving</b> has the largest memory consumption...|$|R
40|$|Abstract. We {{present an}} {{extension}} of the polarized process algebra BPPA, an algebraic theory about sequential program behaviors. The extension is called thread algebra and is proposed as a tool for the description and analysis of multi-threaded program behaviors. Strategic <b>interleaving</b> refers to the form of concurrency where some <b>interleaving</b> strategy is used rather than arbitrary <b>interleaving.</b> Strategic <b>interleaving</b> is considered characteristic of multi-threading. Multi-threaded concurrency is more limited than general concurrency based on arbitrary <b>interleaving...</b>|$|R
40|$|The {{performance}} of Reed-Solomon codes over {{two classes of}} binary channels with memory, the queue-based channel (QBC) and the Gilbert-Elliott channel (GEC) is analyzed under the assumption of bounded distance decoding. In particular, we examine two <b>interleaving</b> strategies encountered when dealing with non-binary codes over a binary channel; namely, symbol <b>interleaving</b> and bit <b>interleaving.</b> An analytical proof is given demonstrating that perfect (i. e., with infinite <b>interleaving</b> depth) symbol <b>interleaving</b> results in a better performance compared to perfect bit <b>interleaving</b> for any non-binary block code over either the QBC or the GEC with positive noise correlation coefficient. Next, the effect of imperfect <b>interleaving</b> on the code performance is examined. An enumerative approach is applied to derive some useful analytical expressions pertaining to the calculation of the probability of codeword error (PCE) for the simplest scenario of the QBC which is the additive first-order Markov noise channel. Numerical results for PCE are provided for more general QBC models and the GEC. The {{performance of}} imperfect <b>interleaved</b> binary codes with imperfect <b>interleaved</b> non-binary codes is compared and {{the choice of the}} <b>interleaving</b> depth to achieve a required performance is discussed for different values of the channel parameters...|$|R
5000|$|... #Caption: Low-level format utility {{performing}} <b>interleave</b> speed {{tests on}} a 10-megabyte IBM PC XT hard drive.|$|E
5000|$|Users {{can view}} music {{animations}} during playback and <b>interleave</b> music DVD tracks from the Video Library ...|$|E
50|$|Interleaving {{was used}} to arrange the sectors in the most {{efficient}} manner possible, so that after reading a sector, time would be permitted for processing, {{and then the next}} sector in sequence is ready to be read just as the computer is ready to do so. Matching the sector <b>interleave</b> to the processing speed therefore accelerates the data transfer, but an incorrect <b>interleave</b> can make the system perform markedly slower.|$|E
40|$|Abstract DS-CDMA {{with minimum}} {{mean square error}} frequency-domain {{equalization}} (MMSE-FDE) can provide much better performance than that with rake combining in a frequency-selective fading channel and is comparable to that of MC-CDMA with MMSE-FDE. Chip <b>interleaving</b> is a form of channel <b>interleaving</b> that improves the DS-CDMA performance by converting the channel into a highly time-selective channel; the time-selectivity can be benefited with chip <b>interleaving.</b> When FDE is used, the frequencyselectivity of the channel is thoroughly exploited. In this paper, we apply chip <b>interleaving</b> to DS-CDMA with MMSE-FDE and compare its performance with chip <b>interleaved</b> MC-CDMA. It is found that chip <b>interleaving</b> improves the performance for both DS-CDMA and MC-CDMA; however the performance of DS-CDMA is better than that of MC-CDMA even with chip <b>interleaving.</b> ...|$|R
40|$|<b>Interleaved</b> {{effects are}} widely documented. Research {{demonstrates}} that <b>interleaved</b> presentation orders, {{as opposed to}} blocked orders typically benefit inductive category learning. What drives <b>interleaved</b> effects is less straightforward. <b>Interleaved</b> presentations provide both the opportunity to compare and contrast between different types of category exemplars, which are temporally juxtaposed, {{and the opportunity to}} space study of the same type of category exemplars, which are temporally separated within the presentation span. Accordingly, <b>interleaved</b> effects might be driven by enhanced discrimination, enhanced memory retention, or both in some measure. Though recent studies have largely endorsed enhanced discrimination as the critical mechanism driving <b>interleaved</b> effects, there is no strong evidence to controvert the contribution of enhanced memory retention for <b>interleaved</b> effects. I further examined the role of memory retention by manipulating both presentation order and category structure. Across two experiments I found that memory retention may drive <b>interleaved</b> effects in categorization tasks...|$|R
40|$|We take {{a thread}} as the {{behavior}} of a sequential deterministic program under execution and multi-threading as the form of concurrency provided by contemporary programming languages such as Java and C#. We outline an algebraic theory about threads and multi-threading. In the case of multi-threading, some deterministic <b>interleaving</b> strategy determines how threads are <b>interleaved.</b> <b>Interleaving</b> operators for a number of plausible <b>interleaving</b> strategies are specified in a simple and concise way. By that, we show that it is essentially open-ended what counts as an <b>interleaving</b> strategy. We use deadlock freedom as an example to show that there are properties of multi-threaded programs that depend on the <b>interleaving</b> strategy used...|$|R
5000|$|Resolution up to 800 × 600 {{and higher}} {{resolution}} through SLI, (Scan Line <b>Interleave)</b> up to 1024 × 768.|$|E
5000|$|... #Caption: Low-level {{formatting}} {{software from}} 1987 to find highest performance <b>interleave</b> choice for 10 MB IBM PC XT {{hard disk drive}} ...|$|E
5000|$|The <b>interleave</b> {{sequence}} [...] is convergent if {{and only}} if the sequences [...] and [...] are convergent and have the same limit.|$|E
40|$|<b>Interleaving</b> is an {{increasingly}} popular technique for evaluating information retrieval systems based on implicit user feedback. While {{a number of}} isolated studies have analyzed how this technique agrees with conventional offline evaluation approaches and other online techniques, a complete picture of its efficiency and effectiveness is still lacking. In this paper we extend and combine the body of empirical evidence regarding <b>interleaving,</b> and provide a comprehensive analysis of <b>interleaving</b> using data from two major commercial search engines and a retrieval system for scientific literature. In particular, we analyze the agreement of <b>interleaving</b> with manual relevance judgments and observational implicit feedback measures, estimate the statistical efficiency of <b>interleaving,</b> and explore the relative performance of different <b>interleaving</b> variants. We also show how to learn improved credit-assignment functions for clicks that further increase the sensitivity of <b>interleaving...</b>|$|R
40|$|We {{proposed}} a novel <b>interleaving</b> technique for orthogonal frequency division multiplexing (OFDM), namely adaptive <b>interleaving,</b> which can break the bursty channel errors {{more effectively than}} traditional block <b>interleaving.</b> The technique rearranges the symbols according to instantaneous channel state information of the OFDM subcarriers so as to reduce or minimize the bit error rate (BER) of each OFDM frame. It is well suited to OFDM systems because the channel state information (CSI) values of the whole frame could be estimated at once when transmitted symbols are framed in the frequency dimension. Extensive simulations show that the proposed scheme can greatly improve {{the performance of the}} coded modulation systems utilizing block <b>interleaving.</b> Furthermore, we show that the adaptive <b>interleaving</b> out performs any other static <b>interleaving</b> schemes, even in the fast fading channel (with independent fading between symbols). We derived a semi-analytical bound for the BER of the adaptive <b>interleaving</b> scheme under correlated Rayleigh fading channels. Furthermore, we discussed the transmitter-receiver (<b>interleaving</b> pattern) synchronization problem. published_or_final_versio...|$|R
40|$|The {{diversity}} {{order is}} crucial {{for the performance of}} communication systems over fading channels. It has been shown by Zehavi (1992) that the diversity and hence performance of coded modulation over fading channels can be improved by bit-wise <b>interleaving</b> at the encoder output, and by using an appropriate soft decision metric as an input to the Viterbi decoder. A related approach is coordinate <b>interleaving</b> whereby the signal space coordinates are <b>interleaved</b> before transmission. In this paper we combine both bit <b>interleaving</b> and coordinate <b>interleaving</b> to increase the diversity order. The resulting system is referred to here as bit and coordinate <b>interleaved</b> coded modulation (BCICM). The pairwise probability of error is also derived, which shows that by proper design the diversity order can be doubled over bit <b>interleaved</b> coded modulation (BICM), for two dimensional signal sets. Simulation results for rate 2 / 3, 4 -state 8 -PSK coded modulation schemes show that BCICM significantly outperforms all known coded modulation (symbol or bit <b>interleaved)</b> schemes...|$|R
