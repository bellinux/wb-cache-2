8|347|Public
5000|$|End user - Manuals for the <b>end-user,</b> <b>system</b> {{administrators and}} support staff.|$|E
50|$|Anomalies in player {{behavior}} can be detected by statistically analyzing game events sent by the client to the server. The great benefit is that this anti-cheat method is that a pure implementation is non-intrusive to the player's privacy and guaranteed to work on all <b>end-user</b> <b>system</b> configurations. The restriction of this method is that it cannot always be clear {{whether or not a}} player is cheating. Highly skilled players can for example develop such a map sense that they may end up being flagged for the use of a wallhack and/or aimbot. On the other hand, players may also cheat {{in a way that is}} under the detection thresholds and remain uncaught.|$|E
40|$|Abstract—In {{the effort}} to build a {{sustainable}} society, smart home research attention is being directed toward green technology and environmentally-friendly building designs. In this paper, we analyze the distribution of home energy consumption, and then present both linear and non-linear regression learning models for predicting energy usage given known human behavior and time-scale features. To guarantee the validity of our methods, two real-world data sets collected over three months are applied into training the models. Based upon our learning models, a webbased <b>end-user</b> <b>system</b> is developed for providing users feedback about behavior-based energy usage to promote energy efficiency and sustainability through behavior changes. Keywords-smart environments; behavior; energy prediction; I...|$|E
50|$|Bomgar is {{a remote}} support {{solution}} that allows support technicians to remotely connect to <b>end-user</b> <b>systems</b> through firewalls from their computer or mobile device. Using the Bomgar Representative Console, technology support professionals can access and control systems and devices remotely, including personal computers, smartphones, tablets, servers, switches, point-of-sale systems and others.|$|R
50|$|During this phase, {{the most}} {{practical}} alternatives for processing {{in case of a}} disaster are researched and evaluated. All aspects of the organization are considered, including physical facilities, computer hardware and software, communications links, data files and databases, customer services provided, user operations, the overall management information <b>systems</b> (MIS) structure, <b>end-user</b> <b>systems,</b> and any other processing operations.|$|R
40|$|The Domain Name System (DNS) {{performs}} {{an essential}} Internet duty: {{the translation of}} host names, which are convenient for humans, into IP addresses, which are used to route packets. To do so, an application on an <b>end-user’s</b> <b>system</b> must contact a DNS resolver to perform these translations. While the user’s system may run a DNS resolver locally...|$|R
40|$|National {{information}} and situation centers {{are faced with}} rising information needs {{and the question of}} how to prepare for unexpected situations. One promising development is the access to vastly growing data produced by distributed sensors and a socially networked society. Current emergency information systems are limited in the amount of complex data they can process and interpret in real-time and provide only partially integrated prediction and alarming capabilities. In this paper we present a novel approach to build a new type of automated and scalable information systems that intelligently make use of massive streams of structured and unstructured data and incorporate human feedback for automated incident detection and learning. Big data technologies, uncertainty handling and privacy-by-design are employed to match <b>end-user</b> <b>system</b> requirements. We share first experiences analyzing data from the centennial flood in Germany 2013...|$|E
40|$|Virtualization has {{provided}} a vehicle for people to gain flexibility and security in utilizing computing resources. At the same time, distributed systems have emerged to support large workloads and efficient use of clustered resources. Such distributed systems are often highly specialized and require considerable effort {{on behalf of the}} application developer, <b>end-user,</b> <b>system</b> administrator or some combination of all three to use. As a result, it is difficult, if not impossible, for ordinary end-users to take advantage of large-scale distributed computing. ^ To address these problems, we have created a new OS kernel that virtualizes only the exceptional aspects of native program execution such as system calls, page faults, signals, and file system interactions. Combined with a distributed coherence mechanism, our kernel proves to be a feasible approach to creating a general purpose distributed system that is not only simple to install, configure, and maintain but, more importantly, easy to use. Our approach provides a foundation for supporting execution of unmodified native applications—at nearly-native speed—by ordinary end-users without administrative or special privileges (e. g., 2 ̆ 2 root 2 ̆ 2) as well as transparent process migration and checkpointing. ...|$|E
40|$|In this work, {{we present}} a {{methodology}} to evaluate long-term investments in integrated energy production systems by renewable sources (also Hybrid Renewable Energy Systems). Unavoidably, the investment decision occurs under multiple uncertainty, which affects the environmental, technical, and economic-financial variables: availability of renewable sources (climatic data), end-user behaviour, technology efficiencies and costs, discount rate for the project, inflation of energy prices. Thus, we adopt a simulation-based optimization procedure {{in order to provide}} the decision maker with useful information for the investment choice and the analysis of the output reliability. All the involved subsystems (photovoltaics, small wind turbines, solar thermal, heat pump, electric and thermal storages, <b>end-user</b> <b>system</b> and demands, traditional back-up systems) and their mutual interactions are dynamically simulated. A multiobjective optimization finds the Pareto frontier that maximizes net present value (NPV) and minimizes CO 2 emissions. The optimal design parameters of the energy system are determined by a controlled elitist genetic algorithm. Once the optimal design configurations are identified, results are furtherly investigated by a sensitivity analysis, in order to quantify uncertainty associated with the input variables and its propagation to the final results. The process would be a first step in order to guide investors to a more in-depth analysis and characterization of the critical variables and possibly towards a more robust design choice among the Pareto set. A case study of a small hybrid production system for an autonomous (off-grid) building is finally presented with a demonstrative aim...|$|E
50|$|The {{presentation}} layer {{is responsible for}} the delivery and formatting of information to the application layer for further processing or display. It relieves the application layer of concern regarding syntactical differences in data representation within the <b>end-user</b> <b>systems.</b> An example of a presentation service would be the conversion of an EBCDIC-coded text computer file to an ASCII-coded file.|$|R
5000|$|The Public-Access Computer Systems Review (abbreviated PACS Review) {{was a free}} {{electronic}} journal about <b>end-user</b> computer <b>systems</b> in libraries.|$|R
5000|$|Companies {{providing}} <b>end-user</b> filtering <b>systems</b> {{and their}} customers should {{be liable for}} failing to report “illegal” activity identified by the filter ...|$|R
40|$|User {{interfaces}} {{for large}} distributed applications have to handle specific problems: {{the complexity of}} the application itself and the integration of online-data into the user interface. A main task of the user interface architecture is to provide powerful tools to design and augment the <b>end-user</b> <b>system</b> easily, hence giving the designer more time to focus on user requirements. Our experiences developing a user interface system for a process control room showed that a lot of time during the development process is wasted for the integration of online-data residing anywhere but not in the user interface itself. Furtheron external data may be kept by different kinds of programs, e. g. C-programs running a numerical process model or PROLOG-programs running a diagnosis system, both in parallel to the process and in parallel to the user interface. Facing these specific requirements, we developed a user interface architecture following two main goals: 1. integration of external information into high-level graphical objects and 2. the system should be open for any program running as a separate process using its own problem-oriented language. The architecture is based on two approaches: an asynchronous, distributed and language independent communication model and an object model describing the problem domain and the interface using object-oriented techniques. Other areas like rule-based programming are involved, too. With this paper, we will present the XAVIA user interface architecture, the (as far as we know) first user inteface architecture, which is consequently based on a distributed object model...|$|E
40|$|Recently, {{researchers}} in IS {{have begun to}} rely on the theories of innovation diffusion to study implementation problems. A major focus of these studies has been how potential users ’ perceptions of the information technology (IT) innovation influence its adoption. User acceptance of IT has been a primary focus in the MIS implementation research for the past decade. Why do users accept or reject information systems? How user acceptance is affected by system characteristics, perceived usefulness, perceived ease of use, and attitude toward acceptance behavior? The present research addresses these questions. The technology acceptance model (TAM) is used as a base model to produce a causal model resembling a network of relationships among the study’s constructs. A field study of 324 users regarding an <b>end-user</b> <b>system</b> was conducted to validate measures used to operationalize model variables and to test the hypothesized network of relationships. Partial Least Squares (PLS) is a second-generation multivariate analysis technique was used to estimate the parameters of the proposed causal model. The study findings indicate that system features variable has the largest influence on IT acceptance, followed by perceived usefulness. Both constructs have significant direct effects on IT acceptance but also exhibit their indirect effects through perceptions and/or attitude towards acceptance. Ease of use and attitude towards acceptance were found to have an equivalent influence on IT acceptance. Suggestions for future research and implications of findings are discussed...|$|E
40|$|This study {{investigates the}} {{interaction}} between <b>end-users</b> and <b>systems</b> analysts during <b>end-user</b> application development. It further investigates the effect that this interaction has {{on the success of}} the system development effort. The interaction between <b>end-users</b> and <b>systems</b> analysts is studied through some of its components namely, participation, involvement, influence, conflict and conflict resolution. Data was collected from <b>end-users</b> and <b>systems</b> analysts who had recently participated in the development of an end-user application. Factor analysis was then used to identify the underlying factors that contribute to system success in an end-user computing environment. The underlying factors were then examined using regression analysis. In addition to providing an overall understanding of {{some of the issues that}} are considered important to system success within an end-user computing environment, the analysis presented in this research indicates trends that should be examined for further research...|$|R
40|$|Abstract—Traditional {{monolithic}} {{operating systems}} have conceptually remained almost unchanged since the UNIX, that is, {{since the late}} 70 s. Several experimental operating systems from the research community {{have been based on}} alternative paradigms. Today we are facing the dawn of mobile or wireless Internet. This new operational environment calls for new solutions. We discuss four significant research issues for future end-user systems: self-awareness, detection and notifications, system integrity, and power management. A paradigm shift in operating system design, as demonstrated in x-kernel, microkernels, exokernels, and TinyOS, can help us to lay the software foundation for reconfigurable <b>end-user</b> <b>systems.</b> Index Terms—mobile networking, operating systems, wireless access...|$|R
40|$|Abstract: This paper {{provides}} an overview of the development of a model curriculum in infor-mation technology—the Model Curriculum in Organizational and <b>End-User</b> Information <b>Systems.</b> The model was developed by a curriculum committee made up of educators and professionals in a variety of locales and specialties in the field of information technology and <b>end-user</b> information <b>systems.</b> The paper covers the evolution of the curriculum model; the process of its development, including the use of a groupware product named Facilitate. com that enabled the group of disparate committee members to overcome the challenge of working together on this project; and the final model curriculum, complete with fully developed courses...|$|R
50|$|A typical {{usage of}} the Mangler Pattern is during {{internal}} search operations. When parsing a query from an <b>end-user,</b> the <b>system</b> will try and strip {{out a series of}} un-needed tokens, reassembling the original query into a more usable, functional query.|$|R
30|$|The {{analogy between}} {{information}} security and biology {{has long been}} appreciated, since Cohen coined the term “computer virus” [1]. Modern malware frequently {{takes the form of}} a software program that is downloaded and executed by an unsuspecting Internet user. “Infection” can be achieved through compromising many thousands of websites en masse [2], social engineering, or by exploiting vulnerabilities on <b>end-user</b> <b>systems.</b> Regardless of how the infection occurs, cybercriminals have also undertaken considerable efforts to evade detection by antivirus software [3, 4]. Current signature based detection methods are highly sensitive to minor changes within the structure of a malware program. In many cases, a small change within the malware program alters the program’s signature sufficiently enough to thwart antivirus detection.|$|R
30|$|Another {{advantage}} of using gossiping to implement partial views {{is that it}} provides a natural mechanism for tackling changes to the network by disseminating information about newly joined nodes or by gradually removing from partial views nodes that left the system. This is a desirable feature even considering that {{we are dealing with}} servers (and not <b>end-user</b> <b>systems)</b> and thus that it is fair to assume that churn will be very low. As further reported in our previous work (see, e.g., [29]), gossiping is ideal for effectively and efficiently handling the adverse effects of churn. Further investigations about effects of churn on our k-clique matching protocol with partial views is left for future research.|$|R
40|$|Abstract. End-users of {{automation}} software systems – {{which are}} the machine operators – have the task to provide machine settings and program simple control algorithms to adapt and optimize the machine to the specific automation tasks at hand. <b>End-user</b> programming <b>systems</b> are therefore an intrinsic part of automation systems. In this paper we report on a project with the goal to build a software framework which allows realizing <b>end-user</b> programming <b>systems</b> with minimal effort. Our approach {{is based on a}} new component-based programming language Monaco for event-based machine control, a compiler-generator to realize a Monaco compiler, a virtual machine for execution of Monaco programs, and an Eclipse- and GEF-based modelling and program development environment. ...|$|R
40|$|This study {{compared}} {{features and}} determined which of four <b>end-user</b> <b>systems</b> (PaperChase, GRATEFUL MED, Med-Base, or Compact Cambridge: MEDLINE) would best serve the Medical Sciences and Optometry Libraries of Indiana University in providing biomedical information to faculty {{and graduate students}} through MEDLINE. Cost, ease of use, retrieval, training needs, equipment requirements, and adequacy of documentation were examined. The study consisted of {{a comparison of the}} features of each system based on available documentation; a controlled search performed by the investigators on each system and on regular NLM MEDLINE; and a user study based on observations, questionnaires, and interviews with eleven library patrons who performed the same search of their choice on each of the four systems...|$|R
5000|$|For Windows, the fonts are {{provided}} as self-extracting executables (.exe); each includes an embedded cabinet file {{that contains a}} font file in TrueType format (.ttf). For the Macintosh, the files {{are provided}} as BinHexed Stuff-It archives (.sit.hqx). It is forbidden to rename, edit or create any derivative works from the executables (e.g. arial32.exe) or archives (Arial.sit.hqx), other than subsetting when embedding them in documents. The fonts can be installed and used on non-Windows or non-Macintosh operating systems, {{as long as they}} are distributed in original form (original [...]exe files or [...]sit.hqx files) and with original name (e.g. arial32.exe). A cabinet file can be extracted in an <b>end-user's</b> <b>system</b> with appropriate software, if such software is available.|$|R
40|$|The main aim of {{this study}} is to {{investigate}} the impact of the e-procurement system qualities and trust on the e-procurement <b>system</b> <b>end-user</b> satisfaction, in a mandatory system environment. In line with this objective, three research questions are established: First, what are the e-procurement system qualities that influence trust and end-user satisfaction? Second, what is the impact of trust on end-user satisfaction? Third, does trust mediate the relationship between e-procurement <b>system</b> qualities and <b>end-user</b> satisfaction? This study postulates that suitable e-procurement system qualities and trust, as perceived by <b>system</b> <b>end-users,</b> have influence on the e-procurement <b>system</b> <b>end-user</b> satisfaction. IS success model is adopted to describe the causal linkages between the determinants that affect e-procurement <b>system</b> <b>end-user</b> satisfaction. This research study investigates end-user’s experiences with e-procurement system and their impact on user’s belief ‘trust’ to evaluate e-procurement <b>system</b> <b>end-user</b> satisfaction. The users’ experiences are classified into direct user’s experience with the system, represented by perceived e-procurement system quality construct, and indirect user’s experiences, represented by perceived order fulfillment quality of suppliers as perceived by <b>system</b> <b>end-users</b> [‘buyers’]. A questionnaire that reflects the proposed framework constructs is developed to collect the primary data for the study. The data is collected from 432 e-procurement system users who are working at the purchasing departments in Malaysian governmental Ministries, Agencies, and Departments. This study is quantitative with a deductive approach. It employs partial least squares structural equation modeling (PLS- iii SEM) to validate and confirm research model to test the relationships being hypothesized. The findings of this study provide empirical evidence for the significant impact of perceived e-procurement system quality, perceived order fulfillment quality, and trust on e-procurement end-user satisfaction. Furthermore, the study findings approve the influence of both system qualities, namely perceived e-procurement quality and perceived order fulfillment quality on trust. The findings reveal that perceived e-procurement quality positively influences perceived order fulfillment quality. Finally, trust is found to have partial mediating effect between system qualities and e-procurement <b>system</b> <b>end-user</b> satisfaction...|$|R
40|$|Abstract — While {{traditional}} cluster {{computers are}} more constrained by power and cooling costs for solving extreme-scale (or exascale) problems, the continuing progress and integration levels in silicon technologies make possible complete <b>end-user</b> <b>systems</b> {{on a single}} chip. This massive level of integration makes modern multicore chips all pervasive in domains ranging from climate forecasting and astronomical data analysis, to consumer electronics, smart phones, and biological applications. Consequently, designing multicore chips for exascale computing while using the embedded systems design principles looks like a promising alternative to traditional cluster-based solutions. This paper aims to present an overview of new, far-reaching design methodologies and run-time optimization techniques that can help breaking the energy efficiency wall in massively integrated single-chip computing platforms...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis presents {{the development of}} a database system for Republic of Korea Army's personnel management. Database processing has grown significantly in computer science areas and also in management of certain organizations. Database system designers establish objectives of database system organizations before initiating development. An important consideration in database development is to assure that it can be used {{for a wide variety of}} application and can be changed quickly and easily. ROK Army needs an <b>end-user</b> application <b>system</b> because users usually require statistical information periodically. Software engineering goals are discussed to develop an efficient <b>end-user</b> application <b>system.</b> To address software engineering goals, top-down design and structured programming technique are used as tools. [URL] Republic of Korea Arm...|$|R
50|$|Talarian {{customers}} were large <b>end-users,</b> OEMs and <b>systems</b> integrators {{in need of}} solutions where real-time data flow supports high information volumes.|$|R
2500|$|Many {{users and}} vendors who prefer the name [...] "Linux," [...] such as Jim Gettys, {{one of the}} {{original}} developers of the X Window System, point to the inclusion of non-GNU, non-kernel tools, such as KDE, LibreOffice, and Firefox, in <b>end-user</b> operating <b>systems</b> based on the Linux kernel: ...|$|R
30|$|A Captive portal based <b>end-users</b> {{management}} <b>system</b> {{based on}} Coovachilli (a well-established access control tool) and exploiting RADIUS as AAA back-end. Such a solution {{allowed us to}} open the testbed to both students and staff in our lab, which are using the WMN for their daily Internet tasks.|$|R
40|$|Current radio {{technologies}} and associated communication protocols are still mostly agnostic to the decision-making of <b>end-users</b> “Engineered <b>System</b> Design ” where underlying algorithms/protocols designed based on precepts of Expected Utility Theory (EUT) Radio resource management algorithms and protocols {{are the result}} of optimization strategies under the framework of EU...|$|R
5000|$|Many {{users and}} vendors who prefer the name [...] "Linux," [...] such as Jim Gettys, {{one of the}} {{original}} developers of the X Window System, point to the inclusion of non-GNU, non-kernel tools, such as KDE, LibreOffice, and Firefox, in <b>end-user</b> operating <b>systems</b> based on the Linux kernel: ...|$|R
5000|$|Lilien et al.(2002) define {{marketing}} engineering as [...] "the systematic {{process of}} putting marketing data and knowledge to practical use through the planning, design, {{and construction of}} decision aids and marketing management support systems (MMSSs)". One the driving factors toward the development of marketing engineering are the use of high-powered personal computers connected to LANs and WANs, the exponential growth in the volume of data, the reenginering of marketing functions. The effectiveness of the implementation of marketing engineering and MMSSs in the firm depend on the decision situation characteristics(demand), {{the nature of the}} MMSS (supply), match between supply and demand, design characteristics of the MMSS, characteristics of implementation process. Wider adoption depend on difference between <b>end-user</b> <b>systems</b> and high-end systems, user training and the growth of the Internet.|$|R
5000|$|Videotex (or [...] "interactive videotex") {{was one of}} the {{earliest}} implementations of an <b>end-user</b> information <b>system.</b> From the late 1970s to early 2010s, it was used to deliver information (usually pages of text) to a user in computer-like format, typically to be displayed on a television or a dumb terminal.|$|R
40|$|End-user {{development}} has enormous {{potential to make}} computers more useful in a large variety of contexts by providing people without any formal programming training increased control over information processing tasks. This variety of contexts poses a challenge to <b>end-user</b> development <b>system</b> designers. No individual system can hope to address all of these challenges. The field of enduser development is likely to produce a plethora of systems fitting specific needs of computer end-users. The goal of this chapter is not to advocate a kind of universal <b>end-user</b> development <b>system,</b> but to cut {{across a variety of}} application domains based on our experience with the AgentSheets end-user simulation-authoring tool. We have pioneered a number of programming paradigms, experienced a slew of challenges originating in different user communities, and evolved end-user development mechanisms over several years. In this chapter we present design guidelines that cut across this vast design space by conceptualizing the process of end-user development as a learning experience. Fundamentally, we claim that every <b>end-user</b> development <b>system</b> should attempt to keep the learning challenges in proportion to the skills end-users have. By adopting this perspective, end-user development can actively scaffold a process during which end-users pick up new end-user development tools and gradually learn about new functionality. We structure these design guidelines in accordance to their syntactic, semantic and pragmatic nature of support offered to end-users...|$|R
2500|$|Fact-finding measures, {{designed}} {{to ascertain the}} requirements of the <b>system's</b> <b>end-users</b> (typically involving interviews, questionnaires, or visual observations of work on the existing system) ...|$|R
40|$|The goal is {{to measure}} the {{temperature}} of some system. The ability to do so accurately and with the required resolution depends {{on a variety of}} factors. The calibration report from Lake Shore (or any calibration facility) is only the first step in determining the accuracy of the temperature measurement in the <b>end-user’s</b> <b>system.</b> A more quantifiable term than accuracy is total uncertainty of the measurement. This is simply the measurement itself and an estimate of all the errors of the measurement. Smaller errors are considered more accurate. The first step in estimating the errors in a customer system is the calibration itself. Essentially, a calibration is a series of resistance or voltage measurements of an unknown sensor and a corresponding measurement of an established temperature. By accounting for all the uncertainties of the measurement (installation, instrumentation, etc.) a tota...|$|R
