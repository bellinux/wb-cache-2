156|178|Public
5000|$|PowerDEVS: A <b>general-purpose</b> <b>software</b> {{tool for}} DEVS {{modeling}} and simulation oriented to the simulation of hybrid systems ...|$|E
5000|$|Vensim is <b>general-purpose</b> <b>software,</b> {{used in a}} {{wide variety}} of problem domains. Common or {{high-profile}} applications include: ...|$|E
5000|$|As a result, {{there are}} a number of <b>general-purpose</b> <b>software</b> {{packages}} capable of replacing or augmenting an existing hardware graphical accelerator, including: ...|$|E
50|$|Avizo (pronounce: ‘a-VEE-zo’) is a <b>general-purpose</b> {{commercial}} <b>software</b> {{application for}} scientific and industrial data visualization and analysis.|$|R
5000|$|Dia (...) is {{free and}} open source <b>general-purpose</b> diagramming <b>software,</b> {{developed}} originally by Alexander Larsson. Dia uses a controlled single document interface (SDI) similar to GIMP and Inkscape.|$|R
5000|$|Programs {{designed}} for calculating [...] may have better performance than <b>general-purpose</b> mathematical <b>software.</b> They typically implement checkpointing and efficient disk swapping to facilitate extremely long-running and memory-expensive computations.|$|R
50|$|FlexPDE is a <b>general-purpose</b> <b>software</b> {{for obtaining}} {{numerical}} solutions to partial differential equations in 2 or 3 dimensions. It {{is based on}} the Finite Element Method.|$|E
50|$|The large {{differential}} between VEST's optimised hardware {{execution and}} equivalently clocked software optimised execution offers a natural resistance against low cost <b>general-purpose</b> <b>software</b> processor clones masquerading as genuine hardware authentication tokens.|$|E
5000|$|Not to be {{confused}} with dmraid, Linux's <b>general-purpose</b> <b>software</b> RAID system, mdraid, has experimental support for batch-based (rather than live, upon file deletion) TRIM on RAID 1 arrays when systems are configured to periodically run the mdtrim utility on filesystems (even those like ext3 without native TRIM support). [...] In later versions of Linux, e.g. Red Hat Enterprise Linux 6.5 and beyond, mdraid supports actually passing through TRIM commands in real-time, rather than just as a batch job.|$|E
5000|$|DIRCOL: A <b>general-purpose</b> {{trajectory}} optimization <b>software</b> {{based on}} direct collocation.|$|R
50|$|Stata is a <b>general-purpose</b> {{statistical}} <b>software</b> package {{created in}} 1985 by StataCorp. Most of its users work in research, {{especially in the}} fields of economics, sociology, political science, biomedicine and epidemiology.|$|R
30|$|Until {{nearly the}} end of the last century, dynamic {{simulations}} of complex systems—such as cellular automata and agent-based models—were only available to researchers who had sufficient technical skills to develop and operate their own simulation software. At that time, there were very few <b>general-purpose</b> simulation <b>software</b> packages available (e.g., (Hiebeler 1994; Wuensche 1994)), and those packages were rather hard to program, unless one had a computer science background. The lack of <b>general-purpose</b> simulation <b>software</b> easily accessible for non-computer scientists was a major limiting factor for the growth of complex systems science, given the highly interdisciplinary nature of the field.|$|R
50|$|Another {{specific}} subset, infrastructure design, {{relies heavily}} on estimates of load, pressure, drainage and flow. Some software houses have attempted to provide design software catering for the variety of infrastructure design fields in an integrated manner. However, <b>general-purpose</b> <b>software</b> {{may be used in}} the same manner {{at a fraction of the}} cost of design software.When planning the construction phase, various project management methods are used to estimate factors such as cost, schedule and resourcing. Different software packages rely on different formulas and theories as the basis for these calculations. Consulting engineers also take advantage of the insight software can provide as far as crossing services are concerned. A road design may have to accommodate the presence of underground pipes for example. Civil Designer is an example of a design package which forms an integrated data gathering, drawing, surface modeling and design system for civil engineering infrastructure.|$|E
40|$|The {{goal of this}} {{workshop}} is {{to identify}} different architectural approaches to building domain-specific software design systems and to explore issues unique to domain-specific (vs. <b>general-purpose)</b> <b>software</b> design. Some general issues that cut across the particular software design domain include: (1) knowledge representation, acquisition, and maintenance; (2) specialized software design techniques; and (3) user interaction and user interface...|$|E
40|$|Abstract. The article {{presents}} UniTesK technology, an automated model based test construction method {{for use in}} industrial testing of <b>general-purpose</b> <b>software.</b> The approach presented includes automatic generation of test oracles from software contracts, coverage driven test sequence generation, test artifacts reuse. This work stems from the ISP RAS results of academic research and 10 -years experience in industrial application of formal testing techniques [1]...|$|E
50|$|Many digital artists {{generate}} speech balloons with <b>general-purpose</b> illustration <b>software.</b> Products like Comic Book Creator for Microsoft Windows, Comic Life for Mac OS X and Windows {{target the}} non-professional {{end of the}} market.|$|R
2500|$|One can {{estimate}} a normal-ogive latent trait {{model by}} factor-analyzing {{a matrix of}} tetrachoric correlations between items. [...] This means it is technically possible to estimate a simple IRT model using <b>general-purpose</b> statistical <b>software.</b>|$|R
50|$|The {{design of}} the feeding and gating system is usually {{referred}} to as methoding or methods design. It {{can be carried out}} manually, or interactively using <b>general-purpose</b> CAD <b>software,</b> or semi-automatically using special-purpose software (such as AutoCAST).|$|R
40|$|We discuss {{subsystem}} {{design for}} extensible general-purpose information systems. We ex-tract guidelines from {{a case study}} of the redes-ign and extension of an advanced workflow management system and place them into the context of existing software engineering re-search. Key aspect is the distinction between essential and physical architectures, related to software clustering and distribution. 1. 1 Keywords Architecture design, subsystem design, <b>general-purpose</b> <b>software</b> 2...|$|E
40|$|Two <b>general-purpose</b> <b>software</b> {{packages}} for collecting and analyzing observational {{data from a}} variety of settings are discussed. One package is designed for coding mutually exclusive behavioral states using the Apple’s keyboard as an input device. The other is designed to monitor temporally overlapping behaviors, and it makes use of the Apple II’s built-in game-control button inputs to indicate up to three behavioral states that may occur simultaneously...|$|E
40|$|The {{purpose of}} this paper is to {{reintroduce}} the generalized QR factorization with or without pivoting of two matrices A and B having the same number of rows. When B is square and nonsingular, the factorization implicitly gives the orthogonal factorization of B-‘A. Continuing the work of Paige and Hammarling, we discuss the different forms of the factorization from the point of view of <b>general-purpose</b> <b>software</b> development...|$|E
40|$|AbstractThis paper proposes an {{approach}} to adapting distributed applications to changes in user requirements and resource availability. The key ideas behind the framework were dynamic deployment of components and dividing and merging components. The former enabled components to relocate themselves at new servers when provisioning the servers and remained servers when deprovisioning servers. The latter enabled the states of components to be divided and passed to other components and to be merged with other components according to user-defined functions. It was useful to adapt applications to elasticity in cloud computing. It is constructed as a middleware system for Java-based <b>general-purposed</b> <b>software</b> components. This paper describes the proposed approach and the design {{and implementation of the}} approach with applications...|$|R
25|$|To dispel {{remaining}} {{doubt about}} the Appel–Haken proof, a simpler proof using the same ideas and still relying on computers was published in 1997 by Robertson, Sanders, Seymour, and Thomas. Additionally, in 2005, the theorem was proved by Georges Gonthier with <b>general-purpose</b> theorem-proving <b>software.</b>|$|R
40|$|This work {{describes}} {{what are the}} generic implications of software access conditions and policies and, significantly, what their impact can be on <b>general-purpose</b> multibody <b>software,</b> highlighting the advantages and the drawbacks they have with respect to researchers both as end users and software developers...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis report describes a technique {{for assessing the}} state of a general-purpose system using partial probing. The technique utilizes an Unscented Kalman Filter (UKF) combined with in-process and post-process reasoning. While Kalman Filters (KF) Extended Kalman Filres (EKF), and UKF are typically applied to state-space systems, where an underlying theory provides the a-priori knowledge, this report suggests the application of UKF to monitor <b>general-purpose</b> <b>software</b> systems {{that do not have}} an underlying first-principles theory. The suggested technique uses a reasoning component compute the a-priori evaluation. An important aspect differentiating state-space systems from <b>general-purpose</b> <b>software</b> is that the latter is often concurrent, with a plurality or concurrently executing threads, processes, or devices. As a result, relative execution time of these components (and the derivative state space) is {{for all intents and purposes}} non-deterministic. In addition, the suggested technique enables monitoring with probing that is sparse in time and space namely, probing that occurs only one in n cycles or probing that only probes a subset of the software-systems state-spac...|$|E
40|$|We {{present a}} {{frequency}} domain finite difference approach in curvilinear coordinates to the computation of {{the modes of}} circular ridged waveguides. The use of a polar mesh allows to avoid staircase approximations of the boundary, providing a very effective and accurate procedure. The proposed approach has been assessed, {{both in terms of}} accuracy and effectiveness, against <b>general-purpose</b> <b>software,</b> namely CST Microwave Studio and Ansys HFSS, showing a significant reduction of the computational burden...|$|E
40|$|AbstractWe {{present an}} object model {{that is the}} ground for several {{software}} products written by our team in C++ and used by our customers for over 10 years. The object model has allowed us to design software packages of many components and achieve high level of code reuse due to specific features of the model. Besides the object model, we also present several common infrastructure components that could be useful {{for the development of}} any <b>general-purpose</b> <b>software</b> system in C++...|$|E
50|$|In 1982 they marketed a word {{processor}} from Symantec. The hardware sold for $5,950 in 1982. The software was an additional $600. The advent of the personal computer, MS-DOS, and <b>general-purpose</b> word-processing <b>software</b> saw {{the demise of the}} dedicated word-processor, and the division was closed.|$|R
50|$|To dispel {{remaining}} {{doubt about}} the Appel-Haken proof, a simpler proof using the same ideas and still relying on computers was published in 1997 by Robertson, Sanders, Seymour, and Thomas. Additionally, in 2005, the theorem was proved by Georges Gonthier with <b>general-purpose</b> theorem-proving <b>software.</b>|$|R
40|$|TADPLOT {{computer}} program gives researcher <b>general-purpose</b> plotting <b>software</b> package easy to use, quickly creates X-Y plots, and {{powerful enough to}} create full-feature publication-quality plots. Enables user to save selected plot information displayed subsequently on several different devices, including "hard-copy" plotters. Postprocessing features that enable user to manipulate and combine plots also available. Written in ANSI STANDARD FORTRAN 77...|$|R
40|$|This paper {{presents}} a <b>general-purpose</b> <b>software</b> framework {{dedicated to the}} evolutionary transportation scheduling, {{which is one of}} the most challenging areas in transportation engineering. Against evolution, the most popular approach is manual process. Manual process in here is to describe the system business using the most appropriate modeling language(s) at the most appropriate level(s) of abstraction. To demonstrate the applicability of the framework, we report our experience in using the software to generate pavement maintenance report under manual business model.   </p...|$|E
40|$|Medical Information Management System (MIMS) {{computer}} program interactive, <b>general-purpose</b> <b>software</b> system for storage and retrieval of information. Offers immediate assistance where manipulation of large data bases required. User {{quickly and efficiently}} extracts, displays, and analyzes data. Used in management of medical data and handling all aspects of data related to care of patients. Other applications include management of data on occupational safety {{in public and private}} sectors, handling judicial information, systemizing purchasing and procurement systems, and analyses of cost structures of organizations. Written in Microsoft FORTRAN 77...|$|E
40|$|An {{overview}} of an interactive software environment for space mission design termed QUICK is presented. This stand-alone program provides a programmable FORTRAN-like calculator interface {{to a wide}} range of both built-in and user defined functions. QUICK has evolved into a <b>general-purpose</b> <b>software</b> environment that can be intrinsically and dynamically customized for a wide range of mission design applications. Specific applications are described for some space programs, e. g., the earth-Venus-Mars mission, the Cassini mission to Saturn, the Mars Observer, the Galileo Project, and the Magellan Spacecraft...|$|E
50|$|REML {{estimation}} {{is available}} {{in a number of}} <b>general-purpose</b> statistical <b>software</b> packages, including Genstat (the REML directive), SAS (the MIXED procedure), SPSS (the MIXED command), Stata (the mixed command), JMP (statistical software), and R (especially the lme4 and older nlme packages),as well as in more specialist packages such as MLwiN, HLM, ASReml, (ai)remlf90, wombat, Statistical Parametric Mapping and CropStat.|$|R
5000|$|GPOPS-II (pronounced [...] "GPOPS 2") is a <b>general-purpose</b> MATLAB <b>software</b> {{for solving}} {{continuous}} optimal control problems using hp-adaptive Gaussian quadrature collocation and sparse nonlinear programming. The acronym GPOPS stands for [...] "General Purpose OPtimal Control Software", and the Roman numeral [...] "II" [...] {{refers to the}} fact that GPOPS-II is the second software of its type (that employs Gaussian quadrature integration).|$|R
5000|$|There {{are more}} sectors losing jobs than {{creating}} jobs. And the <b>general-purpose</b> aspect of <b>software</b> technology means {{that even the}} industries and jobs that it creates are not forever. Lawrence Summers ...|$|R
