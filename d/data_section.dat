489|3314|Public
25|$|You have to {{send the}} frame number in the <b>data</b> <b>section</b> of the message.|$|E
25|$|Each <b>data</b> <b>section</b> is 2 byte aligned. If {{it would}} end on an odd offset, a newline ('\n', 0x0A) is used as filler.|$|E
25|$|An ar file {{begins with}} a global header, {{followed}} by a header and <b>data</b> <b>section</b> for each file stored within the ar file.|$|E
50|$|PowerShell <b>data</b> <b>sections</b> {{can contain}} {{constants}} and expressions using a restricted subset of operators and commands. PowerShell <b>data</b> <b>sections</b> are used when e.g. localized strings {{needs to be}} read from an external source while protecting against unwanted side effects.|$|R
5000|$|User <b>data</b> (optional <b>section)</b> -- use {{the package}} com.ibm.websphere.smf API {{to add up}} to 5 user <b>data</b> <b>sections</b> {{to the end of}} the record, each section not more than 2K bytes in length.|$|R
5000|$|... governed_sections, the <b>data</b> <b>sections</b> whose entity {{instances}} fully {{belongs to}} the population.|$|R
25|$|In {{the same}} {{category}} are mixed content CD-ROMs. An audio CD, that a user would not expect to contain software at all, can contain a <b>data</b> <b>section</b> with an autorun.inf. Some companies, such as Sony BMG, have used this vector to install malware that attempts to protect against copying of the audio tracks.|$|E
25|$|The {{prior consent}} of a data subject is also {{required}} before personal data is processed. (Section 20) This requirement is, however, subject to exceptions. For instance, where the purpose {{for which the}} personal data is processed {{is necessary for the}} purpose of a contract to which the data subject is a party; authorised or required by law, to protect a legitimate interest of the data subject; necessary for the proper performance of a statutory duty or necessary to pursue the legitimate interest of the data controller or a third party to whom the data is supplied (section 20(1)). Consent is also required for the processing of special personal <b>data</b> (<b>Section</b> 37(2) (b)). A data subject also object to the processing of personal <b>data</b> (<b>section</b> 20(2)), and the data processor is required to stop processing the data upon such objection (section 20(3)).|$|E
25|$|A {{data subject}} can also request a data {{controller}} to correct or delete personal {{data about the}} data subject that is held by the data controller and which is inaccurate, irrelevant, excessive, out of date, incomplete, or misleading (Section 33(1)). Upon receipt of the request, the data controller must either comply with the request or provide the data subject with credible {{evidence in support of}} the <b>data.</b> (<b>Section</b> 33(2)).|$|E
5000|$|The second edition, ISO 10303-21:2002, {{included}} the corrigendum and extensions for several <b>data</b> <b>sections.</b>|$|R
3000|$|Both sender and {{receiver}} share their cancelable fingerprint <b>data</b> (<b>Sections</b> 3.3 and 3.4) and generate F [...]...|$|R
50|$|The ICMP packet is then {{encapsulated}} in an IPv4 packet. The packet {{consists of}} header and <b>data</b> <b>sections.</b>|$|R
25|$|A {{data subject}} can, subject to proving the data subject’s identity, request a data {{controller}} to confirm if the data controller holds that data subject’s personal data, describe {{the nature of}} the personal data held, and the identity of any third party who has or has previously had access to that <b>data</b> (<b>Section</b> 32(1)). The request must however be made in a reasonable manner, within a reasonable time, after paying any prescribed fees and in a form that is generally understandable (Section 32(2)).|$|E
25|$|However, {{the kind}} of {{heuristic}} used by early AV engines was totally different from those used today. The first product with a heuristic engine resembling modern ones was F-PROT in 1991. Early heuristic engines were based on dividing the binary in different sections: <b>data</b> <b>section,</b> code section (in a legitimate binary, it usually starts always from the same location). Indeed, the initial viruses re-organized {{the layout of the}} sections, or overrode the initial portion of section in order to jump to {{the very end of the}} file where malicious code was located—only going back to resume execution of the original code. This was a very specific pattern, not used at the time by any legitimate software, which represented an elegant heuristic to catch suspicious code. Other kinds of more advanced heuristics were later added, such as suspicious section names, incorrect header size, regular expressions, and partial pattern in-memory matching.|$|E
25|$|In February 1940 at Wright Field, the Army Air Corps {{established}} the Technical Data Branch (Technical <b>Data</b> <b>Section</b> in July 1941, Technical Data Laboratory in 1942). After Air Corps Ferrying Command was established on 29 May 1941, on 21 June an installation {{point of the}} command opened at Patterson Field. The Flight Test Training unit of Air Technical Command was established at Wright Field on 9 September 1944 (moved to Patterson Field in 1946, Edwards AFB on 4 February 1951). Two densely populated housing and service areas across Highway 444, Wood City and Skyway Park, were geographically separated from the central core of Patterson Field and developed almost self-sufficient community status. (Wood City was acquired in 1924 {{as part of the}} original donation of land to the government but was used primarily as just a radio range until World War II. Skyway Park was acquired in 1943.) They supported the vast numbers of recruits who enlisted and were trained at the two fields as well as thousands of civilian laborers, especially single women recruited to work at the depot. Skyway Park was demolished after the war. Wood City was eventually transformed into Kittyhawk Center, the base's modern commercial and recreation center.|$|E
50|$|If a DLL is {{compressed}} {{by certain}} executable packers (e.g. UPX), {{all of its}} code sections are marked as read and write, and will be unshared. Read-and-write code sections, much like private <b>data</b> <b>sections,</b> are private to each process. Thus DLLs with shared <b>data</b> <b>sections</b> should not be compressed if {{they are intended to}} be used simultaneously by multiple programs, since each program instance would have to carry its own copy of the DLL, resulting in increased memory consumption.|$|R
40|$|Data Elements for Emergency Department Systems, Release 1. 0 (DEEDS) is {{the result}} of {{contributions}} by participants in the National Workshop on Emergency Department Data, held January 23 - 25, 1996, in Atlanta, Georgia, subsequent review and comment by individuals who read Release 1. 0 in draft form, and finalization by a multidisciplinary writing committee. DEEDS is a set of recommendations published by the National Center for Injury Prevention and Control of the Centers for Disease Control and Prevention. Introduction [...] Section 1. Patient identification <b>data</b> [...] <b>Section</b> 2. Facility and practitioner identification <b>data</b> [...] <b>Section</b> 3. ED payment <b>data</b> [...] <b>Section</b> 4. ED arrival and first assessment <b>data</b> [...] <b>Section</b> 5. ED history and physical examination <b>data</b> [...] <b>Section</b> 6. ED procedure and result <b>data</b> [...] <b>Section</b> 7. ED medication <b>data</b> [...] <b>Section</b> 8. ED disposition and diagnosis data [...] Technical Notes [...] References [...] Appendix: DEEDS data elements grouped into HL 7 segments for message transmission"Release 1. 0. "Includes bibliographical references (p. 245 - 247). National Center for Injury Prevention and Control. Data elements for emergency department systems, release 1. 0. Atlanta, GA: Centers for Disease Control and Prevention, 1997...|$|R
5000|$|FILE_POPULATION, {{indicating}} a valid population (set of entity instances) which conforms to an EXPRESS schemas. This {{is done by}} collecting data from several data_sections and referenced instances from other <b>data</b> <b>sections.</b>|$|R
2500|$|Applications for {{registration}} as a {{data controller}} {{is to be}} made in writing and the Act provides for certain particulars, such as the business name and address of applicant, a description of personal data to be collected and a description of purpose for the processing of personal <b>data.</b> (<b>Section</b> 47(1)) Knowingly supplying false information amounts to an offence punishable by a fine or imprisonment. (Section 47(2)) Also, a separate entry in the register must be made for each separate purpose for which the data controller wishes to process the <b>data.</b> (<b>Section</b> 47(3)) ...|$|E
2500|$|... 4.4BSD ar stores {{extended}} filenames {{by placing}} the string [...] "#1/" [...] followed by the file name length in the file name field, and storing the real filename {{in front of the}} <b>data</b> <b>section.</b>|$|E
2500|$|A {{data subject}} may also request that {{a record of}} {{personal}} data about that data subject held by a data controller be destroyed or deleted where the data controller {{no longer has the}} authorisation to retain that <b>data.</b> (<b>Section</b> 33(1) (b)) ...|$|E
3000|$|... in {{the absence}} of long {{longitudinal}} <b>data,</b> cross <b>section</b> <b>data</b> can be used only at the price of strong assumptions that have important implications on outcomes; [...]...|$|R
40|$|The APOLLON {{system is}} a {{compiler}} for <b>data</b> processing <b>sections</b> of integrated circuits. It is a component of a silicon compiler based on the CAPRI methodology. The present prototype takes for input a list of steps to be executed in order to realize an algorithm, and it gives automatically {{the layout of the}} <b>data</b> processing <b>section.</b> Very soon, this list of steps will be given automatically from the register transfer description of the circuit. The target model of the <b>data</b> processing <b>section</b> is a model based on the <b>data</b> processing <b>section</b> of the MC 68000. The system is written in Lelisp. It is a prototype realized in the framework of the SYCOMORE French national project...|$|R
50|$|In {{contrast}} to code <b>sections,</b> the <b>data</b> <b>sections</b> of a DLL are usually private; that is, each process using the DLL {{has its own}} copy of all the DLL's <b>data.</b> Optionally, <b>data</b> <b>sections</b> can be made shared, allowing inter-process communication via this shared memory area. However, because user restrictions {{do not apply to}} the use of shared DLL memory, this creates a security hole; namely, one process can corrupt the shared data, which will likely cause all other sharing processes to behave undesirably. For example, a process running under a guest account can in this way corrupt another process running under a privileged account. This is an important reason to avoid the use of shared sections in DLLs.|$|R
2500|$|Under the Act, a {{data subject}} {{has the right}} to have his {{personal}} data corrected (section 33), to access his personal <b>data</b> (<b>section</b> 35); to prevent the processing of personal data that causes or is likely to cause unwarranted damage or distress to him (section 39); to prevent processing of personal data for purposes of direct marketing (section 40); to require a data controller not to take a decision that would significantly affect him solely on the processing by automatic means (section 41); to exempt manual <b>data</b> (<b>Section</b> 42), to be compensated for the data controller’s failure to comply with the provisions of the Act, upon proof of damages (Section 43); and [...] to have inaccurate data rectified (Section 44) ...|$|E
2500|$|System V ar uses a '/' {{character}} (0x2F) to {{mark the}} end of the filename; this allows for the use of spaces without the use of an extended filename. [...] Then it stores multiple extended filenames in the <b>data</b> <b>section</b> of a file with the name [...] "//", this record is referred to by future headers. A header references an extended filename by storing a [...] "/" [...] followed by a decimal offset {{to the start of the}} filename in the extended filename <b>data</b> <b>section.</b> [...] The format of this [...] "//" [...] file itself is simply a list of the long filenames, each separated by one or more LF characters. [...] Note that the decimal offsets are number of characters, not line or string number within the [...] "//" [...] file.|$|E
2500|$|The data {{controller}} must also observe both generally accepted and industry specific {{best practices in}} securing <b>data,</b> (<b>Section</b> 28(3)) as well as ensure that data processors comply with security measures. (Section 30) Where the data processor is not domiciled in Ghana, the {{data controller}} must ensure that the data processor complies with the relevant laws of its country. (Section 30(4)) ...|$|E
5000|$|FILE_SCHEMA. Specifies one {{or several}} Express schema {{governing}} {{the information in}} the <b>data</b> <b>section(s).</b> For first edition files, only one EXPRESS schema together with an optional ASN.1 object identifier of the schema version can be listed here. Second edition files may specify several EXPRESS schema.|$|R
40|$|Natural {{channel cross}} section is {{generally}} very irregular and varied, for complex cross-sections and natural cross sections no specific formula presents {{to express the}} elements of the geometric cross section of the channel. The study uses HEC-Geo RAS with Arc GIS 10 and HEC-RAS 4. 1. 0 for modeling and 1 D hydrodynamic. The surveyed cross sections modeling is calibrated and validated with observed daily discharge. Then the surveyed <b>data</b> cross <b>sections</b> are replaced by the cross sections extracted from SRTM. Accuracy is suitability between the surveyed <b>data</b> cross <b>sections</b> with <b>data</b> cross <b>sections</b> which extracted from SRTM. Accuracy is expressed by the magnitude of the error. The ratio of simulated discharges between two models by surveyed <b>data</b> cross <b>sections</b> and SRTM <b>data</b> cross <b>sections</b> have index of performance indicator for Nash–Sutcliffe Index (NI) is 0. 95 and index of Root Mean Square Error (RMSE) is 0. 41. Index of Performance indicator for comparison of simulated discharges between models with Nash–Sutcliffe Index (NI) is 0. 95 and index of Root Mean Square Error (RMSE) is 0. 41. The results show that cross sections from SRTM can be an alternative to extract <b>data</b> cross <b>sections</b> for Upper Citarum River flood modeling...|$|R
5000|$|... lzip {{is capable}} of {{creating}} archives with independently decompressible <b>data</b> <b>sections</b> called a [...] "multimember archive" [...] (as well as split output {{for the creation of}} multivolume archives). For example, if the underlying file is a tar archive, this can allow extracting any undamaged files, even if other parts of the archive are damaged.|$|R
2500|$|There are {{instructions}} used {{to define}} data elements to hold data and variables. [...] They define the type of data, the length and the alignment of data. These instructions can also define whether the data is available to outside programs (programs assembled separately) or only to the program in which the <b>data</b> <b>section</b> is defined. Some assemblers classify these as pseudo-ops.|$|E
50|$|Key {{objectives}} of the <b>data</b> <b>section</b> are to develop and prepare networks during field operations, maintain the network at the base, and provide helpdesk support. The <b>data</b> <b>section</b> is responsible for all computer related issues for the battalion, to include email, office support, servers, switches, routers, and printers. During preparation of field ops, the <b>data</b> <b>section</b> will configure routers and switches to create a LAN {{at the base of}} the field op. Additionally, the <b>data</b> <b>section</b> will prepare all laptops that will be used and the servers to support them (e.g. exchange servers, ESXi hosts, etc.).|$|E
5000|$|A dictionary-format <b>data</b> <b>section.</b> It {{contains}} the following keys: ...|$|E
25|$|Malcolm Wynn-Jones (Hugh Simon; 2002–2009; 2010) Technician and <b>Data</b> Analyst, <b>Section</b> D. Retired.|$|R
30|$|The {{structure}} {{of this research}} is organized as follows: In “Related work” section, a brief literature review is presented. “Personality models and interaction <b>data</b> collection” <b>section</b> shows <b>data</b> collection and personality models in the Facebook application. “Collected <b>data</b> description” <b>section</b> presents the <b>data</b> collection procedure from Facebook users. In “Data analysis” <b>section</b> <b>data</b> preprocessing is explained and “Building the personality classifier” section shows how personality classifiers are built. “Analysis of results” section provides the experimental results of personality prediction. Finally, “Conclusions and future works” section illustrates conclusions and future research.|$|R
50|$|Firmware {{unique to}} the game being played existed as a {{removable}} ROM cartridge containing 16K memory, including the entire game node layout, vocabulary of the game (both for the speech synthesizer and speech recognizer), inventory data (both for gameplay as well as video still frames depicting items), and certain executable <b>data</b> <b>sections</b> {{to assist in the}} processing of game flow.|$|R
