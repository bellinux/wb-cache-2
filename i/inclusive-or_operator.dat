2|0|Public
40|$|A {{method for}} {{minimizing}} ExclusiveOR Sum of Product (ESOP) forms of Boolean functions is described. ESOP forms {{have been proven}} to be require fewer products than the more common Sum of Products (SOP) forms based on the <b>inclusive-OR</b> <b>operator</b> for many classes of functions. Since nding the optimal ESOP solution requires {{the solution of the}} wellknown set covering problem, a heuristic method is developed. A prototype version of this technique has been implemented and the results are compared to a more mature ESOP minimization algorithm. 1 Introduction A fundamental problem in the area of switching theory is that of two-level minimization of Boolean expressions. In general, the two-level minimization problem consists of nding an equivalent expression with exactly two algebraic operations allowed (in addition {{to the use of the}} unary inversion operator) such that the resulting expression satises some constraint. Two well-known examples are nding the Sum of Products (SOP) and Product of S [...] ...|$|E
40|$|This is {{the seventh}} {{in a series}} of {{articles}} on ontology-based approaches to modeling. The main focus is on popular ontology languages proposed for the Semantic Web, such as the Resource Description Framework (RDF), RDF Schema (RDFS), and the Web Ontology Language (OWL). OWL is based on description logic. A later series of articles will explore other logic-based languages such as datalog. The first article [2] introduced ontologies and the Semantic Web, and covered basic concepts in the Resource Description Framework (RDF), contrasting them with other data modeling approaches. The second article [3] discussed the N 3 notation for RDF, and covered the basics of RDF Schema. The third article [4] provided further coverage of RDFS, and introduced different flavors of the Web Ontology language (OWL). The fourth article [5] discussed basic features of OWL, mainly using Manchester syntax. The fifth article [6] discussed OWL taxonomy, comparison operators for classes, data types and predicates, and examined inverses, functional roles and keys in more depth. The sixth article [7] covered cardinality restrictions in OWL 2. The current article discusses how the union, intersection, and complement operators are handled in OWL 2. Union In set theory, given any sets A and B, the union of A and B is the set of all elements in either A or B or both. That is, A ∪ B = {x | x ∈ A ∨ x ∈ B}, where “∪ ” is the union operator and “∨ ” is the <b>inclusive-or</b> <b>operator...</b>|$|E

