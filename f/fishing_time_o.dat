0|3238|Public
40|$|This {{experiment}} {{determined the}} toxicity of pawpaw seed powder to adult tilapia, Oreochromis niloticus, the most cultivable fish species in Africa. The 96 h static bioassay experiment {{was conducted to}} determine the median lethal concentration (LC 50) for adult Nile tilapia, to pawpaw seed, Carica papaya. Two hundred live, and apparently healthy O. niloticus measuring 11. 5 - 14. 6 cm total length and 65. 6 - 112. 4 g {{were used for the}} experiment. Eighteen (75 x 45 x 45 cm) glass tanks of 121. 5 litres capacity each were filled with 50 litres aerated unchlorinated well water. The toxicant was introduced at different concentrations in triplicate per treatment. The 96 -h LC 50 of pawpaw seed powder to adult tilapia is 4. 2 mg/l with 95 % confidence limit of 31. 86 – 93. 81 mg/l and the maximum admissible toxicant concentrations ranges between 0. 042 - 0. 42 mg/l, while the total mortality occurred in the concentration of 8 mg/l within 24 h exposure period. Toxic reaction exhibited by the fish includes erratic movement, air gulping, loss of reflex, discolouration, molting, loss of scale, and haemorrhage. The pathologic lesion of gill, skin, liver and kidney includes different level of degeneration of cells, lamellar hyperemia, hyperthrophy of gill arch, shrinkages and dermal erosion and necrosis of skin, while hyperplasia, disarrangement of hepatic cell, necrosis and vacuolation occurred in liver and kidney of adult tilapia O. niloticus. Damages became severe with increasing concentration of C. papaya to <b>fish</b> and <b>time</b> <b>o...</b>|$|R
40|$|A fishing {{productivity}} {{refers to}} production capability of a <b>fishing</b> gear in <b>time,</b> volume, or {{area of fishing}} ground. The principle of hand line fishing is fishing with a natural bait. The {{purpose of the study}} was to determine the productivity of hand line and to compare the fishing productivity based on <b>fishing</b> <b>time.</b> The research was a case study on one unit hand line during 30 trips in April ??? June 2014. The calculation of fishing productivity (total fish/minute) of hand line was based on the ratio between fish production and actual <b>fishing</b> <b>time.</b> Non-parametric Cruscal-Wallis were used to compare fishing productivity in different times. The regression analysis was used to analyze the relationship between fishing productivity and number of natural bait and <b>fishing</b> <b>time.</b> The main production of hand line was Speckled-Fin Rockod (Epinephelus ongus). The area of the fishing ground was located at 5 ?? 19 ??? 30 ???- 5 ?? 36 ??? 47 ??? S and 119 ?? 48 ??? 30 ???- 120 ?? 20 ??? 0 ??? E. Fishing activities were conducted until three fishing ground/trip with total production of 55 fishes for 30 fishing trips. The productivity for first fishing ground was 0. 07673 fishes/minute, productivity for second fishing ground was 0. 09134 fishes/minute, and productivity for third fishing ground was 0. 06784 fishes/minute. According to Non-parametric Kruskal-Wallis test, the results indicated no significant difference of fishing ground over <b>fishing</b> <b>time.</b> Regression analysis showed <b>fishing</b> <b>time</b> significantly affect <b>fishing</b> productivity...|$|R
2500|$|Ecco ch'una altra volta, o valle inferna (Yet {{one more}} <b>time,</b> <b>O</b> infernal valley) ...|$|R
2500|$|The Chronicler: To {{live and}} believe in another <b>time</b> (<b>O</b> Cronista: Viver e Crer de Outro Tempo) ...|$|R
40|$|We {{present a}} new dynamic {{programming}} algorithm that solves the minimum Steiner tree problem on graphs with k terminals in <b>time</b> <b>O</b> ∗ (c k) for any c> 2. This improves the running {{time of the}} previously fastest parameterized algorithm by Dreyfus–Wagner [2] of order O ∗ (3 k) and the so-called “full set dynamic programming ” algorithm [3] solving rectilinear instances in <b>time</b> <b>O</b> ∗ (2. 38 k) ...|$|R
40|$|Boman and Hendrickson [BH 01] {{observed}} {{that one can}} solve linear systems in Laplacian matrices in <b>time</b> <b>O</b> (m 3 / 2 +o(1) ln(1 /ǫ)) by preconditioning with the Laplacian of a low-stretch spanning tree. By examining the distribution of eigenvalues of the preconditioned linear system, we prove that the preconditioned conjugate gradient will actually solve the linear system in <b>time</b> <b>Õ</b> (m 4 / 3 ln(1 /ǫ)). ...|$|R
30|$|The {{problem of}} SLA {{allocation}} among the unit-demand buyer agents {{can be solved}} optimally in polynomial <b>time</b> <b>O</b> (n^ 3).|$|R
40|$|We present {{algorithms}} for computing {{ranks and}} order statistics in the Farey sequence, taking <b>time</b> <b>O</b> (n^{ 2 / 3 }). This improves {{on the recent}} algorithms of Pawlewicz [European Symp. Alg. 2007], running in <b>time</b> <b>O</b> (n^{ 3 / 4 }). We also initiate the study of a more general algorithmic problem: counting primitive lattice points in planar shapes. Comment: Fixed a technical error. Added reference to latest work (joint version with Pawlewicz...|$|R
40|$|Many {{combinatorial}} problems—such as {{the traveling}} salesman, feedback arcset, cutwidth, and treewidth problem— can be formulated as finding a feasible permutation of n elements. Typically, such {{problems can be}} solved by dynamic programming in <b>time</b> and space <b>O</b> ∗ (2 n), by divide and conquer in <b>time</b> <b>O</b> ∗ (4 n) and polynomial space, or {{by a combination of}} the two in <b>time</b> <b>O</b> ∗ (4 n 2 −s) and space O ∗ (2 s) for s = n, n/ 2, n/ 4, [...] Here, we show that one can improve the tradeoff to <b>time</b> <b>O</b> ∗ (T n) and space O ∗ (S n) with T S < 4 at any √ 2 < S < 2. The idea is to find a small family of “thin ” partial orders on the n elements such that every linear order is an extension of one member of the family. Our construction is optimal within a natural class of partial order families. ...|$|R
25|$|In {{grateful}} {{remembrance of}} {{the sons and daughters}} of Canterbury who fell in the Great War 1914–1918 Give peace in our <b>time</b> <b>o</b> Lord.|$|R
40|$|We {{present an}} {{algorithm}} for calculating the quartet distance between two evolutionary trees of bounded degree {{on a common}} set of n species. The previous best algorithm has running <b>time</b> <b>O(d</b> 2 n 2) when considering trees, where no node is of more than degree d. The algorithm developed herein has running <b>time</b> <b>O(d</b> 9 n log n)) which makes it the first algorithm for computing the quartet distance between non-binary trees which has a sub-quadratic worst case running time. 1...|$|R
25|$|Wet fish {{trawlers}} – are trawlers {{where the}} fish is kept in the hold in a fresh/wet condition. They must operate in areas not far distant from their landing place, and the <b>fishing</b> <b>time</b> of such vessels is limited.|$|R
40|$|Abstract only. The paper {{develops}} {{a model of}} recreational fisher behaviour in which fishers maximize their individual utility by adjusting <b>fishing</b> <b>time,</b> trips, catch and size of fish caught. It investigates the optimal behaviour or an individual fisher with and without constraints such as bag limits. The model is used to assess how constraints such as bag limits affect the optimal number or trips and <b>fishing</b> <b>time.</b> It investigates how an improvement in abundance, as reflected in expected catch rates, will impact upon trips and <b>fishing</b> <b>time.</b> This has implications for the likely success of management options designed to enhance abundance. The model is used to indicate what adjustments (e. g. fees, closed seasons) are potentially needed in situations {{where there is a}} positive response to an improvement in catch rates.. The theoretical model is general. The empirical analysis is for the West Coast Demersal fishery using previously collected survey data on individual fishers. This data is used to estimate a trip function in which annual trips are variously a function of catch rate, trip cost, income, species targets and satisfaction to derive an estimate of the responsiveness fishing trips/time to catch rates...|$|R
40|$|Abstract. Computation on {{compressed}} strings {{is one of}} the key {{approaches to}} processing massive data sets. We consider local subsequence recognition problems on strings compressed by straight-line programs (SLP), which is closely related to Lempel–Ziv compression. For an SLPcompressed text of length ¯m, and an uncompressed pattern of length n, Cégielski et al. gave an algorithm for local subsequence recognition running in <b>time</b> <b>O</b> (¯mn 2 log n). We improve the running <b>time</b> to <b>O</b> (¯mn 1. 5). Our algorithm can also be used to compute the longest common subsequence between a compressed text and an uncompressed pattern in <b>time</b> <b>O</b> (¯mn 1. 5); the same problem with a compressed pattern is known to be NP-hard. ...|$|R
40|$|Abstract. We give two {{algorithms}} {{for finding}} all approximate matches {{of a pattern}} in a text, where the edit distance between the pattern and the matching text substring is at most k. The first algorithm, which is quite simple, runs in <b>time</b> <b>O</b> (nk 3 + n + m) on all patterns except k-break periodic m strings (defined later). The second algorithm runs in <b>time</b> <b>O</b> (nk 4 + n + m) onk-break periodic m patterns. The two classes of patterns are easily distinguished in O(m) time...|$|R
30|$|Despite the two lists {{discussed}} above, {{there is}} also a map of elements that performs the search of elements inserted in the Model in a constant <b>time</b> (<b>O</b> (1)). Such performance justifies the use of this map, instead of other options like a linked list (since its average search <b>time</b> is <b>O</b> (N), compromising the Validator performance).|$|R
6000|$|... "There!" [...] said Lucy, {{as soon as}} she was gone; [...] "I {{have held}} my tongue this <b>time.</b> <b>O</b> Walter, you don't do it a bit like Rose!" ...|$|R
40|$|Abstract In {{this paper}} we study greedy in-place sorting {{algorithms}} which mirac-ulously happen {{to work in}} reasonable time. Dumb-Sort which repeatedly compares all possible pairs of array cells sorts n elements in n Γ 1 cycles,or <b>time</b> <b>O</b> (n 3). Not-So-Dumb-Sort, which only tests adjacent cells, alsosorts in n Γ 1 cycles, or in time O(n 2). Guess-Sort, a randomized version ofDumb-Sort, runs in expected <b>time</b> <b>O</b> (n 2 logn). And Fun-Sort, an in-placevariant of Insertion-Sort that performs repeated insertions by binary search into an initially unsorted array, sorts in time O(n 2 logn) ...|$|R
5000|$|An object, O, {{changes with}} respect to property, P, {{if and only if}} O has P at one time, and at a later <b>time,</b> <b>O</b> does not have P.|$|R
6000|$|... "Or else it {{was coming}} into this wild heath. I was happy enough at Budmouth. <b>O</b> the <b>times,</b> <b>O</b> the days at Budmouth! But Egdon will be {{brighter}} again now." ...|$|R
3000|$|Average Job Matchmaking and Scheduling <b>Time</b> (<b>O)</b> is {{the average}} {{processing}} time required by RM-DCWF to partition a job’s deadline among its tasks and matchmake and schedule a job. O[*]=[*]∑ [...]...|$|R
5000|$|An object, O, {{changes with}} respect to its part, P, {{if and only if}} O has the part P at one time, and at a later <b>time,</b> <b>O</b> does not have P.|$|R
40|$|The {{elliptic}} curve primality proving (ECPP) algorithm {{is one of}} the current fastest practical algorithms for proving the primality of large numbers. Its running time cannot be proven rigorously, but heuristic arguments show that it should run in <b>time</b> <b>O</b> ((log N) ^ 5) to prove the primality of N. An asymptotically fast version of it, attributed to J. O. Shallit, runs in <b>time</b> <b>O</b> ((log N) ^ 4). The aim {{of this article is to}} describe this version in more details, leading to actual implementations able to handle numbers with several thousands of decimal digits...|$|R
40|$|We first {{devise a}} {{branching}} algorithm that computes a minimum independent dominating set on any graph with running <b>time</b> <b>O</b> ∗ (2 0. 424 n) and polynomial space. This improves the O ∗ (2 0. 441 |V |) result by (S. Gaspers and M. Liedloff, A branch-and-reduce algorithm for finding a minimum independent dominating set in graphs, Proc. WG’ 06). We then show that, for every r � 3, {{it is possible}} to compute an r −((r − 1) /r) log 2 r-approximate solution for min independent dominating set within <b>time</b> <b>O</b> ∗ (2 nlog 2 r/r). ...|$|R
25|$|Wet-fish {{longliners}} – {{keep the}} caught {{fish in the}} hold in the fresh/wet condition. The fish is stored in boxes and covered with ice, or stored with ice in the fish hold. The <b>fishing</b> <b>time</b> of such vessels is limited, so they operate close to the landing place.|$|R
6000|$|Nor you drummers--neither at reveillé, at dawn, Nor {{the long}} roll {{alarming}} the camp--nor even the muffled beat for a [...] burial; Nothing from you, this <b>time,</b> <b>O</b> drummers, bearing my warlike drums.|$|R
5000|$|A {{version in}} English, [...] ""Give peace in our <b>time,</b> <b>O</b> Lord", {{is part of}} the Book of Common Prayer. The similar phrase Peace for our time has been used in {{political}} context.|$|R
40|$|This paper {{considers}} {{the problem of}} finding {{the cost of a}} quickest path between two points in the Euclidean plane {{in the presence of a}} transportation network. A transportation network consists of a planar network where each road (edge) has an individual speed. A traveler may enter and exit the network at any point on the roads. Along any road the traveler moves with a fixed speed depending on the road, and outside the network the traveler moves at unit speed in any direction. We show how the transportation network with n edges in the Euclidean plane can be preprocessed in <b>time</b> <b>O</b> ((n/epsilon) (2) log n) into a data structure of size O ((n/epsilon) (2)) such that (1 + epsilon) -approximate quickest path cost queries between any two points in the plane can be answered in <b>time</b> <b>O</b> (1 /epsilon(4) log n). In addition we consider the nearest neighbor problem in a transportation network: given a transportation network with n edges in the Euclidean plane together with a set Z of m sites, a query point q is an element of R- 2, find the nearest site in Z from q. We show how the transportation network can be preprocessed in <b>time</b> <b>O</b> ((n(2) + nm) log (n + m)) such that (1 + epsilon) -nearest neighbor query can be answered in <b>time</b> <b>O</b> (1 /epsilon(2) log(n + m)). (C) 2014 Published by Elsevier B. V...|$|R
6000|$|Nor you drummers, neither at reveille at dawn, [...] Nor {{the long}} roll {{alarming}} the camp, nor even the muffled beat for burial, [...] Nothing from you this <b>time</b> <b>O</b> drummers bearing my warlike drums.|$|R
40|$|During trap-fishing {{investigations}} on {{the crab}} Cancer johngarthi along Baja California peninsula's southwestern coast, Baja California Sur, Mexico, conducted between 2002 and 2006, information was gathered to assess fishing efficiency {{in terms of}} the number of crabs caught per trap during one hour of operation (catch per unit of effort, CPUE = c/ht). As a result of vessel operation issues, some trap lines were abandoned, whereas vessels returned to land for repairing, and because the effective <b>fishing</b> <b>time</b> for these traps was significantly longer than normal, the information so obtained was regarded as reflecting the potential effect on fishing of traps lost during fishing operations (ghost fishing). Of 651 line sets analyzed, involving 45, 152 traps, 77 % had effective <b>fishing</b> <b>times</b> below 60 h, 14 % between 70 and 150 h and 9 % between 150 and 5, 500 h. There is an exponential reduction in CPUE with increasing <b>fishing</b> <b>time</b> that could be associated to trap saturation. The number of crabs per trap also decreased with immersion time, fitting a power function. After 1, 000 h of immersion, each trap may contain 7 – 18 crabs. Four hundred traps were lost over the course of 14 fishing trips. However, because the fishery is in the early development phases, the implementation of measures to avoid or restrain ghost fishing is deemed convenient...|$|R
50|$|Jeste’s {{work has}} been cited nationally and internationally in popular media {{including}} PBS, National Public Radio, The New York Times, USA Today, London Times, Los Angeles <b>Times,</b> <b>O,</b> The Oprah Magazine and Scientific American, among others.|$|R
50|$|During the 15th century, many {{laws were}} passed; many {{regulated}} <b>fishing</b> <b>times,</b> and worked to ensure smolts could safely pass downstream. James III even closed a meal mill {{because of its}} history of killing fish attracted to the wheel. Because the fish were held in such high regard, poachers were severely punished.|$|R
6000|$|Nor you drummers, neither at reveillé at dawn, [...] Nor {{the long}} roll {{alarming}} the camp, nor even the muffled beat for a [...] burial, [...] Nothing from you this <b>time</b> <b>O</b> drummers bearing my warlike drums.|$|R
50|$|Rô has an {{inherent}} vowel in it, which is ô, {{as in most}} other Assamese consonants. But, many a <b>times,</b> <b>ô</b> is {{to be replaced by}} another vowel or swôrôbôrnô. In such a case, the vowels change their forms.|$|R
3000|$|Using {{a binary}} heap, insert and extract-min {{operations}} take O(Elg V) {{time on the}} aggregate. Decrease-key operations may occur in every iteration of the for-loop except when insert is called, therefore making the aggregate run <b>time</b> <b>O</b> ([...] (E^ 2 /V)lg V). Together with initialization and for-loop iterations, overall running <b>time</b> becomes <b>O</b> (V^ 2 +E^ 2 /V+ (E^ 2 /V+E) lg V) = O (V^ 2 + (E^ 2 /V)lg V), which is between O(V [...]...|$|R
40|$|Introduction Our {{basic object}} {{is a series}} of {{recurrent}} events, occurring at random <b>times</b> <b>ø</b> 1; ø 2; : : :, and being quantified by metrically scaled marks (covariates) x 1; x 2; : : :. Two examples are considered i) Earthquake data, where ø i and x i denote the occurrence time and the magnitude of the i Γ th shock, resp. ii) ECG-data, where the i Γ th ventricular extrasystole occurs at <b>time</b> <b>ø</b> i and has the strength x i. Such sequences will be analyzed in the framework of point process theory. The intensity function of the point process will be put in the multiplicative form t = ff(t) Δ b t; (1) where<...|$|R
