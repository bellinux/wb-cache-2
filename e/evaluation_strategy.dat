898|2499|Public
25|$|Applicative {{order is}} not a {{normalising}} strategy. The usual counterexample is as follows: define Ω = ωω where ω = λx.xx. This entire expression contains only one redex, namely the whole expression; its reduct is again Ω. Since {{this is the only}} available reduction, Ω has no normal form (under any <b>evaluation</b> <b>strategy).</b> Using applicative order, the expression KIΩ = (λx.λy.x) (λx.x)Ω is reduced by first reducing Ω to normal form (since it is the rightmost redex), but since Ω has no normal form, applicative order fails to find a normal form for KIΩ.|$|E
2500|$|<b>Evaluation</b> <b>strategy</b> – Rules for the {{evaluation}} of expressions in programming languages ...|$|E
2500|$|Software {{developed}} in Prolog has been criticised {{for having a}} high performance penalty compared to conventional programming languages. In particular, Prolog's non-deterministic <b>evaluation</b> <b>strategy</b> can be problematic when programming deterministic computations, or when even using [...] "don't care non-determinism" [...] (where a single choice is made instead of backtracking over all possibilities). Cuts and other language constructs {{may have to be}} used to achieve desirable performance, destroying one of Prolog's main attractions, the ability to run programs [...] "backwards and forwards".|$|E
40|$|The {{process of}} writing large {{parallel}} programs {{is complicated by the}} need to specify both the parallel behaviour of the program and the algorithm that is to be used to compute its result. This paper introduces <b>evaluation</b> <b>strategies,</b> lazy higher-order functions that control the parallel evaluation of non-strict functional languages. Using <b>evaluation</b> <b>strategies,</b> it is possible to achieve a clean separation between algorithmic and behavioural code. The result is enhanced clarity and shorter parallel programs. <b>Evaluation</b> <b>strategies</b> are a very general concept: this paper shows how they can be used to model a wide range of commonly used programming paradigms, including divideand -conquer, pipeline parallelism, producer/consumer parallelism, and data-oriented parallelism. Because they are based on unrestricted higher-order functions, they can also capture irregular parallel structures. <b>Evaluation</b> <b>strategies</b> are not just of theoretical interest: they have evolved out of our experience in paral [...] ...|$|R
2500|$|Applying {{technology}} {{to facilitate a}} variety of effective assessment and <b>evaluation</b> <b>strategies.</b>|$|R
40|$|Abstract. We {{discuss the}} {{realization}} of <b>evaluation</b> <b>strategies</b> for the concurrent constraint-based functional language ccfl within the trans-lation schemata when compiling ccfl programs into the hierarchical graph rewriting language lmntal. The support of lmntal to express lo-cal computations and to describe the migration of processes and rules between local computation spaces allows a clear and simple encoding of typical <b>evaluation</b> <b>strategies.</b> ...|$|R
2500|$|Lambda {{calculus}} may be untyped or typed. In typed lambda calculus, functions can {{be applied}} {{only if they are}} capable of accepting the given input's [...] "type" [...] of data. Typed lambda calculi are weaker than the untyped lambda calculus that is the primary subject of this article, in the sense that typed lambda calculi can express less than the untyped calculus can, {{but on the other hand}} typed lambda calculi allow more things to be proved; in the simply typed lambda calculus it is for example a theorem that every <b>evaluation</b> <b>strategy</b> terminates for every simply typed lambda-term, whereas evaluation of untyped lambda-terms need not terminate. One reason there are many different typed lambda calculi has been the desire to do more (of what the untyped calculus can do) without giving up on being able to prove strong theorems about the calculus.|$|E
50|$|Not all {{programming}} languages support chained assignment. Chained assignments are {{equivalent to}} a sequence of assignments, but the <b>evaluation</b> <b>strategy</b> differs between languages. For simple chained assignments, like initializing multiple variables, the <b>evaluation</b> <b>strategy</b> does not matter, but if the targets (l-values) in the assignment are connected in some way, the <b>evaluation</b> <b>strategy</b> affects the result.|$|E
50|$|As {{does the}} Haskell {{functional}} language, Alice also provides facilities to allow using a lazy <b>evaluation</b> <b>strategy</b> in programs, versus the traditional eager <b>evaluation</b> <b>strategy</b> of Standard ML. While Haskell uses the lazy model by default, Alice uses an eager evaluation model by default, needing an explicit programming statement for a computation to evaluate lazily.|$|E
40|$|This {{study focused}} on {{differences}} in the web-based information search and <b>evaluation</b> <b>strategies</b> that secondary school students employ when using either mobile devices or personal computers. The study followed several classes throughout the school year, collecting data by way of semi-structured interviews. Three different information search and <b>evaluation</b> <b>strategies</b> were observed, with some specific differences arising from comparison between tablet and personal computer use...|$|R
40|$|The AgreementMaker {{system for}} {{ontology}} matching includes an extensible architecture, which facilitates the integration and performance tuning {{of a variety}} of matching methods, an evaluation mechanism, which can make use of a reference matching or rely solely on quality measures, and a multi-purpose user interface, which drives both the matching methods and the <b>evaluation</b> <b>strategies.</b> Our demo focuses on the tight integration of matching methods and <b>evaluation</b> <b>strategies,</b> a unique feature of our system. 1...|$|R
40|$|We {{study the}} typing {{properties}} of CPS conversion for {{an extension of}} F ! with control operators. Two classes of <b>evaluation</b> <b>strategies</b> are considered, each with call-by-name and call-by-value variants. Under the "standard" strategies, constructor abstractions are values, and constructor applications can lead to non-trivial control effects. In contrast, the "ML-like" strategies evaluate beneath constructor abstractions, reflecting the usual interpretation of programs in languages based on implicit polymorphism. Three continuation passing style sub-languages are considered, one on which the standard strategies coincide, one on which the ML-like strategies coincide, and one on which all the strategies coincide. Compositional, type-preserving CPS transformation algorithms are given for the standard strategies, resulting in terms on which all <b>evaluation</b> <b>strategies</b> coincide. This has as a corollary the soundness and termination of well-typed programs under the standard <b>evaluation</b> <b>strategies.</b> [...] ...|$|R
5000|$|<b>Evaluation</b> <b>strategy</b> - Rules for the {{evaluation}} of expressions in programming languages ...|$|E
50|$|Calling {{conventions}} may {{be related}} to a particular programming language's <b>evaluation</b> <b>strategy</b> but most often are not considered part of it (or vice versa), as the <b>evaluation</b> <b>strategy</b> is usually defined on a higher abstraction level and seen {{as a part of the}} language rather than as a low-level implementation detail of a particular language's compiler.|$|E
50|$|Develop {{and execute}} an {{adequate}} <b>evaluation</b> <b>strategy</b> to assess VCIT performance and impact on violent firearms crime.|$|E
40|$|The paper {{presents}} an evaluation method for recursive queries {{based on an}} integration of the bottom-up and the top-down <b>evaluation</b> <b>strategies.</b> The proposal tries to eliminate the major drawbacks of the top-down Prolog-like <b>evaluation</b> <b>strategies.</b> Namely, repetition of identical accesses to the EDB and the exploration of resolution branches {{that lead to the}} same answer substitution. Forward reasoning (bottom-up phase) is performed by keeping memory of (some) demonstrated "lemmas" while the introduction of constraints avoids visiting already inspected portions of the search space when backtracking (top-down phase) ...|$|R
50|$|Mandate:To {{provide an}} {{innovative}} system of university level education, flexible and open {{with regard to}} methods and pace of learning, course choice, entry requirements and <b>evaluation</b> <b>strategies.</b>|$|R
40|$|What is a non-strict {{functional}} language? Is a non-strict language necessarily lazy? What additional expressiveness brings non-strictness, with {{or without}} laziness? This paper tries to {{shed some light on}} these questions. First, in order to characterize non-strictness, different <b>evaluation</b> <b>strategies</b> are introduced: strict, lazy, and lenient. Then, using program examples, how these <b>evaluation</b> <b>strategies</b> differ from each other is examined, showing that non-strictness, even without laziness, allows a more general use of recursive definitions. We also report on a small experiment that we performed to examine how, in practice, laziness was used in a numbe...|$|R
50|$|When the {{reference}} is {{passed to the}} callee uninitialized, this <b>evaluation</b> <b>strategy</b> may be called call by result.|$|E
50|$|The <b>evaluation</b> <b>strategy</b> is {{specified}} by the programming language definition, {{and is not a}} function of any specific implementation.|$|E
5000|$|Effective <b>evaluation</b> <b>strategy</b> {{needs to}} be {{developed}} for assessing student performance. This should encompass both formative and summative feedback.|$|E
40|$|We {{discuss the}} {{realization}} of <b>evaluation</b> <b>strategies</b> for the concurrent constraint-based functional language CCFL within the translation schemata when compiling CCFL programs into the hierarchical graph rewriting language LMNtal. The support of LMNtal to express local computations and to describe the migration of processes and rules between local computation spaces allows a clear and simple encoding of typical <b>evaluation</b> <b>strategies.</b> Comment: Online proceedings of the Joint Workshop on Implementation of Constraint Logic Programming Systems and Logic-based Methods in Programming Environments (CICLOPS-WLPE 2010), Edinburgh, Scotland, U. K., July 15, 201...|$|R
40|$|Abstract—Hearing aids {{with new}} {{technological}} features offer {{the promise of}} novel speech-processing and loud-ness-control capabilities. Full exploitation and assessment of these capabilities will call for the acceptance of fitting and <b>evaluation</b> <b>strategies</b> different from those currently used for traditional linear hearing aids. Until an appro-priate set of procedures comes into relatively widespread use, {{it will be difficult}} to draw definitive conclusions about the desirability and effectiveness of the new options in amplification systems. This paper reviews some of the issues that should be considered as new evaluation procedures are explored. Key words: amplification systems, <b>evaluation</b> <b>strategies,</b> hearing aids, speech processing...|$|R
5000|$|... "Authorization, Verification and Correction International ('AVC INT') is a {{division}} within RTC {{which is responsible}} for authorizing and verifying that the ecclesiastical programs, <b>evaluations,</b> <b>strategies,</b> promotional materials and issues as authored by CSI are in accordance with Scripture. ..." ...|$|R
50|$|Futures can be {{implemented}} in coroutines or generators, resulting in the same <b>evaluation</b> <b>strategy</b> (e.g., cooperative multitasking or lazy evaluation).|$|E
50|$|Normal-order (or leftmost outermost) {{evaluation}} is the <b>evaluation</b> <b>strategy</b> where the outermost redex is always reduced, applying functions before evaluating function arguments.|$|E
50|$|The {{opposite}} of lazy evaluation is eager evaluation, sometimes known as strict evaluation. Eager evaluation is the <b>evaluation</b> <b>strategy</b> employed in most programming languages.|$|E
40|$|It {{appears that}} {{accuracy}} judgments for web site veracity {{are influenced by}} factors such as levels of perceived expertise as well by degrees of credibility that users associate with web-based information. Therefore, in this pilot study, we investigate the web <b>evaluation</b> <b>strategies</b> of university computer science and education students as they select content appropriate credible and non-credible websites. Their <b>evaluation</b> <b>strategies</b> include relevance judgments and assessment of amount of information, and their characterizations of authors' vested interests appear limited. Selfassessments of competence about evaluating the validity of information were higher for educational psychology than computer science students, although the reverse was true of self-assessments about competence of evaluating the validity {{of information on the}} Web...|$|R
40|$|Sorry, {{the full}} text of this article is not {{available}} in Huskie Commons. Please click on the alternative location to access it. 517 p. The relationship between Illinois principals' level of utilization of 15 teacher <b>evaluation</b> <b>strategies</b> presented at the Illinois Administrators' Academy training sessions and changes in their level of utilization of these strategies were examined at three points in time which were a part of the Omnibus Education Act of 1985. Principals' levels of utilization were measured after attending the first Academy training session on teacher observation strategies; after each district submitted a mandated teacher evaluation plan; and after attending the second Academy training session on some aspect of teacher evaluation. The requirement of the Omnibus Education Act forced principals in Illinois to attend in-service training on teacher evaluation and to become involved in the development of district teacher evaluation plans. The required nature of the mandate contributed to the professional growth of Illinois principals. Although these strategies were utilized to a large degree as reported by Illinois principals prior to attending the Academy, many principals who had not used these strategies reported increased usage at all points in time. Analysis of four demographic characteristics of principals (gender, building type, district enrollment, and experience) indicated no overall pattern in the level of utilization of the teacher <b>evaluation</b> <b>strategies.</b> In spite of the mandate, some Illinois principals were still not using the <b>evaluation</b> <b>strategies</b> at the 100 % level at the three points in time. However, increases in the utilization of the 15 teacher <b>evaluation</b> <b>strategies</b> following the principals' attendance at the Academy training sessions reflected positively on the value of required in-service programs for principals...|$|R
30|$|According to Almeida and Vale [27], the {{evaluation}} may {{be done in}} three distinct ways, as follows: the objective analysis {{of the list of}} candidate terms; the subjective analysis of experts in the domain in question; and the combination of the former <b>evaluation</b> <b>strategies.</b>|$|R
5000|$|Leverage entity-level {{controls}} {{as appropriate}} to mitigate risks : By leveraging strong entity-level controls, management {{will be able}} to develop a more effective and efficient controls <b>evaluation</b> <b>strategy.</b>|$|E
50|$|The exact {{mechanism}} for assigning arguments to parameters, called argument passing, {{depends upon the}} <b>evaluation</b> <b>strategy</b> used for that parameter (typically call by value), which may be specified using keywords.|$|E
5000|$|A broad risk {{coverage}} over financial reporting and operations. For companies conducting evaluations of internal controls, {{the presence of}} effective entity-level controls can contribute to a more effective and efficient <b>evaluation</b> <b>strategy</b> ...|$|E
40|$|Over {{the last}} decade, several {{automatic}} approaches {{have been proposed}} to reconstruct 3 D building models from aerial laser scanning (ALS) data. Typically, they have been benchmarked with data sets having densities of less than 25 points/m 2. However, these test data sets lack significant geometric points on vertical surfaces. With recent sensor improvements in airborne laser scanners and changes in flight path planning, the quality and density of ALS data have improved significantly. The paper presents quantitative <b>evaluation</b> <b>strategies</b> for building extraction and reconstruction when using dense data sets. The <b>evaluation</b> <b>strategies</b> measure not only the capacity of a method to detect and reconstruct individual buildings but also {{the quality of the}} reconstructed building models in terms of shape similarity and positional accuracy...|$|R
40|$|We {{consider}} {{the concept of}} a local set of inference rules. A local rule set can be automatically transformed into a rule set for which bottom-up evaluation terminates in polynomial time. The local-rule-set transformation gives polynomial-time <b>evaluation</b> <b>strategies</b> for a large variety of rule sets that cannot be given terminating <b>evaluation</b> <b>strategies</b> by any other known automatic technique. This paper discusses three new results. First, it is shown that every polynomialtime predicate can be defined by an (unstratified) local rule set. Second, a new machine-recognizable subclass of the local rule sets is identified. Finally we show that locality, as a property of rule sets, is undecidable in general. Categories and Subject Descriptors: I. 2. 2 [Artificial Intelligence] Automatic Programming—automatic analysis o...|$|R
40|$|The {{rationale}} for using multiple <b>evaluation</b> <b>strategies</b> {{in a comprehensive}} program evaluation is described. Examples are given of eleven strategies used {{in the evaluation of}} the Expetience-Based Career Education project developed by the Northwest Regianal Educational Laboratory through_sponsorship of the National Institute of Education. Strengths and limitations are cited for the use of pre- and posttesting in an experimental design, student followup and longitudinal studies, student case studies, content analysis, adversary hearing, cost study, ethnographic studY, use of local study committee, organizational study, panel review by experts and survey guestiontaires. Six criteria, proposed for consideration in determining the best <b>evaluation</b> <b>strategies</b> to usei are discussed. These are cost, timing, credibility of fintAngs, degree of obtrusiveness, amount of coordination needed, and efficiency...|$|R
