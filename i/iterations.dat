10000|10000|Public
5|$|Deus Ex {{has been}} re-released in several <b>iterations</b> since its {{original}} publication {{and has also}} been {{the basis of a}} number of mods developed by its fan community.|$|E
5|$|A third popular iteration-based method called MUSCLE (multiple {{sequence}} alignment by log-expectation) improves on progressive methods with a {{more accurate}} distance measure to assess the relatedness of two sequences. The distance measure is updated between iteration stages (although, in its original form, MUSCLE contained only 2-3 <b>iterations</b> depending on whether refinement was enabled).|$|E
5|$|In {{terms of}} <b>iterations,</b> no search {{algorithm}} that works only by comparing elements can exhibit better average and worst case performance than binary search. This {{is because the}} comparison tree representing binary search has the fewest levels possible as each level is filled completely with nodes if there are enough. Otherwise, the search algorithm can eliminate few elements in an iteration, {{increasing the number of}} <b>iterations</b> required in the average and worst case. This is the case for other search algorithms based on comparisons, as while they may work faster on some target values, the average performance over all elements is affected. This problem is solved by binary search, as dividing the array in half ensures that the size of both subarrays are as similar as possible.|$|E
3000|$|... n≥ 0. Then {{the case}} (2.4) in the Agarwal <b>iteration</b> method is {{faster than the}} case (2.1) in the Mann <b>iteration</b> method, the case (2.5) in the Abbas <b>iteration</b> method is faster than the case (2.1) in the Mann <b>iteration</b> method, the case (2.6) in the Thakur-Thakur-Postolache <b>iteration</b> method is faster than the case (2.1) in the Mann <b>iteration</b> method, the case (2.4) in the Agarwal <b>iteration</b> method is faster than the case (2.2) in the Ishikawa <b>iteration</b> method, the case (2.5) in the Abbas <b>iteration</b> method is faster than the case (2.2) in the Ishikawa <b>iteration</b> method and the case (2.6) in the Thakur-Thakur-Postolache <b>iteration</b> method is faster than the case (2.2) in the Ishikawa <b>iteration</b> method.|$|R
5000|$|... where [...] is the {{estimate}} of the input signal at <b>iteration</b> , [...] is {{the estimate}} at <b>iteration</b> [...] and [...] represents the <b>iteration</b> operator that relates signal estimate at <b>iteration</b> [...] to the signal estimate at <b>iteration</b> [...]|$|R
3000|$|..., then it {{is shown}} that to each Mann <b>iteration</b> there is a Krasnosleskij <b>iteration</b> which converges faster than the Mann <b>iteration.</b> It is also shown that the Mann <b>iteration</b> converges faster than the Ishikawa <b>iteration</b> to the fixed point of [...]...|$|R
5|$|Once {{the design}} had been {{finalised}} the hull form {{was designed and}} tested at the Admiralty's experimental ship tank at Gosport. Seven <b>iterations</b> were required before the final hull form was selected. Once the design was finalized a team of three assistant engineers and 13 draughtsman produced detailed drawings.|$|E
5|$|The {{game was}} {{released}} in North America on February 8, 2011. Jellyvision Games has stated they considered further international releases, but these would be too expensive at the present time. The company does not rule out future <b>iterations</b> of the game being released to a wider market based {{on the success of}} this title.|$|E
5|$|There {{have been}} eight <b>iterations</b> in the Naga series, not {{counting}} the redesigned versions, with release dates spanning from 2009 to 2016. The mice are, in order of release: the Naga, Naga Epic, Naga 2012, Naga Hex, Naga 2014, Naga Epic Chroma, Naga Chroma, and Naga Hex v2. All except the Naga Epic and the Naga Epic Chroma are wired and connected through a USB port. The Naga Hex and the Naga Hex v2 are the only <b>iterations</b> to have less than twelve buttons, with six and seven respectively. The Naga 2014 is the only mouse in the series to have a left-handed version. The colors of the mice vary.|$|E
30|$|Global <b>iteration.</b> This is the {{complementarity}} of the optimization <b>iteration.</b> The optimization <b>iteration</b> {{may sometimes}} falls into an infinite loop. In such a case, the the initial overall control gains should be resetted, {{and the global}} <b>iteration</b> can be implemented to restart the optimization <b>iteration.</b>|$|R
40|$|This paper studies issues {{concerning}} parallel execution of regular Fortran DO loops on an asynchronous sharedmemory multiprocessor, where each <b>iteration</b> {{is the basic}} unit to be executed by a single processing element. An <b>iteration</b> is a dependent predecessor of another <b>iteration</b> if execution of the latter <b>iteration</b> has to wait until execution of the former <b>iteration</b> has completed. During the execution of a DO loop, an <b>iteration</b> will pass through four states, namely, idle, pending, ready, and finished states. An <b>iteration</b> is idle if none of its dependent predecessors have completed; an <b>iteration</b> is pending if some of its dependent predecessors have completed, but not all; an <b>iteration</b> is ready if all its dependent predecessors have completed, but itself has not; otherwise, an <b>iteration</b> is finished. In addition, an <b>iteration</b> without any dependent predecessors is called an initial <b>iteration,</b> which can only have ready and finished states. Via describing an execution scheme, this paper studi [...] ...|$|R
40|$|This paper {{examines}} {{the reasons for}} design <b>iteration</b> and describes models of design <b>iteration.</b> <b>Iteration</b> {{is the process of}} repeating tasks within a design project, and is common to all types of engineering design. <b>Iteration</b> is typically necessary for two reasons: an unexpected failure of a design or prototype to meet established criteria; and an expected response to information which was generated after the previous <b>iteration</b> was completed. Both types of <b>iteration</b> are typical of most engineering projects. This paper describes these two types of <b>iteration,</b> and presents two mathematical models which attempt to capture the effects of <b>iteration</b> on total development time. The models are the Probabilistic Sequential <b>Iteration</b> Model, which describes unexpected <b>iteration,</b> and the Work Transformation Model, which describes expected <b>iteration.</b> The two models correspond to the two reasons that <b>iteration</b> occurs in engineering design. They are useful in identifying {{some of the most important}} effects of <b>iteration</b> on development time, and can support important managerial decisions which affect successful completion of the design project in a timely manner...|$|R
5|$|Although the duo {{felt that}} the presets and {{parameters}} of digital tools would inhibit creativity and innovation, they admitted that Random Access Memories {{could not have been}} made in the complete absence of computer technology. The sessions were recorded simultaneously onto Ampex reels and as Pro Tools tracks; Daft Punk and Guzauski would then listen to each recording in both analogue and digital <b>iterations,</b> deciding which of the two they preferred. Subsequently, the elements were edited by the duo with Pro Tools in a manner similar to how they would work with samples.|$|E
5|$|In {{each of its}} <b>iterations,</b> {{the brigade}} was not {{organized}} as a permanent formation. Typically it was created only as a temporary front-line unit while larger United States Marine units were formed. The brigade would then merge with these to form a Marine division. The 1942 brigade merged with the 2nd Marine Division, the 1944 brigade {{was the basis for}} the formation of the new 6th Marine Division, and the 1950 brigade acted as an advance force for the newly reactivated 1st Marine Division before merging into that unit.|$|E
5|$|The team {{created new}} engines {{to satisfy their}} needs for the game. The {{artificial}} intelligence was created to coordinate with players; the addition of Ellie as artificial intelligence was {{a major contributor to}} the engine. The lighting engine was also re-created to incorporate soft light, in which the sunlight seeps in through spaces and reflects off surfaces. The gameplay introduced difficulty to the team, as they felt that every mechanic required thorough analysis. The game's user interface design also underwent various <b>iterations</b> throughout development.|$|E
40|$|We {{introduce}} a new three-step <b>iteration</b> scheme and prove that this new <b>iteration</b> scheme is convergent to fixed points of contractive-like operators. Also, by providing an example, we show that our new <b>iteration</b> method is faster than another <b>iteration</b> method due to Suantai (2005). Furthermore, it is shown that this new <b>iteration</b> method is equivalent to some other <b>iteration</b> methods {{in the sense of}} convergence. Finally, it is proved that this new <b>iteration</b> method is T-stable...|$|R
30|$|Fastness and {{stability}} play important role for an <b>iteration</b> process to be preferred on another <b>iteration</b> process. In 1991, Rhoades {{mentioned that the}} Mann <b>iteration</b> process for decreasing function converge faster than the Ishikawa <b>iteration</b> process and for increasing function the Ishikawa <b>iteration</b> process {{is better than the}} Mann <b>iteration</b> process. Also the Mann <b>iteration</b> process appears to be independent of the initial guess (see also Rhoades 1977). In Agarwal et al. (2007), the authors claimed that Agarwal <b>iteration</b> process converges at a rate same as that of the Picard <b>iteration</b> process and faster than the Mann <b>iteration</b> process for contraction mappings. In Abbas and Nazir (2014), the authors claimed that Abbas <b>iteration</b> process converge faster than Agarwal <b>iteration</b> process. In Chugh et al. (2012), the authors claimed that CR <b>iteration</b> process is equivalent to and faster than Picard, Mann, Ishikawa, Agarwal, Noor and SP <b>iteration</b> processes for quasi-contractive operators in Banach spaces. Also in Karakaya et al. (2014) the authors proved that CR <b>iteration</b> process converge faster than the S^* iterative process for the class of contraction mappings. In Gursoy and Karakaya (2014), authors claimed that Picard-S <b>iteration</b> process converge faster than all Picard, Mann, Ishikawa, Noor, SP, CR, Agarwal, S^*, Abbas and Normal-S <b>iteration</b> processes for contraction mappings. In Thakur et al. (2016), the authors proved with the help of numerical example that Thakur New <b>iteration</b> process converge faster than Picard, Mann, Ishikawa, Agarwal, Noor and Abbas <b>iteration</b> processes for the class of Suzuki generalized nonexpansive mappings. Similarly, in Karakaya et al. (2015), the authors proved that Vatan Two-step <b>iteration</b> process is faster than Picard-S, CR, SP and Picard-Mann <b>iteration</b> processes for weak contraction mappings. For fragmentation models and processes see Goufo (2014), Goufo and Noutchie (2013). Similarly, for local convergence of Chebyshev–Halley methods with six and eight order of convergence to approximate a locally unique solution of a nonlinear equation see Magrenan and Argyros (2016).|$|R
3000|$|... [...]. It {{is easy to}} {{see that}} the Mann and Ishikawa <b>iteration</b> methods are special cases of the Noor <b>iteration</b> method, and the Mann <b>iteration</b> is also special case of the Ishikawa <b>iteration</b> method.|$|R
25|$|This example takes 13 <b>iterations</b> to converge.|$|E
25|$|Multigrid has the {{advantage}} of asymptotically optimal performance on many problems. Traditional solvers and preconditioners are effective at reducing high-frequency components of the residual, but low-frequency components typically require many <b>iterations</b> to reduce. By operating on multiple scales, multigrid reduces all components of the residual by similar factors, leading to a mesh-independent number of <b>iterations.</b>|$|E
25|$|It is {{practically}} grid-free, thus eliminating numerous <b>iterations</b> associated with RANS and LES.|$|E
30|$|Each <b>iteration</b> of SCA {{makes an}} {{improvement}} {{compared to the}} previous <b>iteration</b> and the <b>iteration</b> procedure is convergent.|$|R
30|$|In {{this paper}} we propose a new <b>iteration</b> process, called AK <b>iteration</b> process, for {{approximation}} of fixed points for contraction mappings. We show that our <b>iteration</b> process is faster than the leading Vatan Two-step <b>iteration</b> process for contraction mappings. Numerical examples are given to support the analytic proofs. Stability of AK <b>iteration</b> process and data dependence result for contraction mappings by employing AK <b>iteration</b> process are also discussed.|$|R
40|$|We {{introduce}} a new <b>iteration</b> method called Picard-S <b>iteration.</b> We show that the Picard-S <b>iteration</b> method {{can be used to}} approximate fixed point of contraction mappings. Also, we show that our new <b>iteration</b> method is equivalent and converges faster than CR <b>iteration</b> method for the aforementioned class of mappings. Furthermore, by providing an example, it is shown that the Picard-S <b>iteration</b> method converges faster than all Picard, Mann, Ishikawa, Noor, SP, CR, S and some other <b>iteration</b> methods in the existing literature when applied to contraction mappings. A data dependence result is proven for fixed point of contraction mappings with help of the new <b>iteration</b> method. Finally, we show that the Picard-S <b>iteration</b> method can be used to solve differential equations with retarded argument...|$|R
25|$|The {{original}} <b>iterations</b> of gymnasia {{were large}} open areas at city outskirts, not enclosed structures.|$|E
25|$|Single-source inter-part {{boundary}} distances: A {{shortest path}} in G passes {{back and forth}} between G0nbsp& and G1nbsp& to compute the distances in G from r to all the boundary nodes. Alternating <b>iterations</b> use the all-boundary-distances in $G0nbsp& and $G1nbsp&. The number of <b>iterations</b> is O(√n), so the overall time for this stage is O(n α(n)) where α(n) is the inverse Ackermann function.|$|E
25|$|There {{have been}} several <b>iterations</b> of the trophy awarded to {{the winner of the}} Super Rugby competitions.|$|E
30|$|Motivated by above, in this paper, we {{introduce}} a new <b>iteration</b> process known as AK <b>iteration</b> process and prove analytically that our process is stable. Then we prove that AK <b>iteration</b> process converges faster than Vatan Two-step <b>iteration</b> process which is faster than all Picard, Mann, Ishikawa, Noor, SP, CR, S, S^*, Abbas, Normal-S and Two-step Mann <b>iteration</b> processes for contraction mappings. Numerically we compare the convergence of the AK <b>iteration</b> process with the three most leading <b>iteration</b> processes in the existing literature for contraction mappings. The data dependence result for fixed point of contraction mappings by employing AK <b>iteration</b> process is also proved.|$|R
30|$|In 1988, Harder and Hicks [3, 4] {{introduced}} {{the notion of}} stability for a general fixed point <b>iteration</b> procedure and started a systematic study of this concept, thus obtaining various stability results for Picard <b>iteration</b> that extended Ostrowski’s theorem to mappings satisfying more general contractive conditions and also established some stability results for other fixed point <b>iteration</b> procedures (Mann <b>iteration,</b> Ishikawa <b>iteration,</b> Kirk <b>iteration)</b> {{in the class of}} Banach contractions, Zamfirescu operators etc.|$|R
5000|$|Some of {{the more}} {{advanced}} eigenvalue algorithms {{can be understood as}} variations of the power <b>iteration.</b> For instance, the inverse <b>iteration</b> method applies power <b>iteration</b> to the matrix [...] Other algorithms look at the whole subspace generated by the vectors [...] This subspace is known as the Krylov subspace. It can be computed by Arnoldi <b>iteration</b> or Lanczos <b>iteration.</b>|$|R
25|$|Conducted five <b>iterations</b> of pre-deployment {{training}} at Fort Stewart, GA, over a five-month period {{in preparation for}} overseas operations.|$|E
25|$|A bootleg {{called the}} Out of it Sessions {{comprises}} demo recordings of early <b>iterations</b> of songs from The Perfect Prescription album.|$|E
25|$|This {{pattern in}} turn {{suggests}} the following method of creating models of <b>iterations</b> of the Heighway dragon curve by folding {{a strip of}} paper. Take a strip of paper and fold it in half to the right. Fold it in half again to the right. If the strip was opened out now, unbending each fold to become a 90 degree turn, the turn sequence would be RRL i.e. the second iteration of the Heighway dragon. Fold the strip in half again to the right, and the turn sequence of the unfolded strip is now RRLRRLL – the third iteration of the Heighway dragon. Continuing folding the strip in half {{to the right to}} create further <b>iterations</b> of the Heighway dragon (in practice, the strip becomes too thick to fold sharply after four or five <b>iterations).</b>|$|E
30|$|The {{modified}} Mann <b>iteration</b> {{and modified}} Ishikawa <b>iteration</b> {{are replaced by}} the modified Ishikawa <b>iteration</b> with errors introduced by Xu [17].|$|R
5000|$|This {{enables a}} short three-term {{recurrence}} for [...] in the <b>iteration,</b> and the Arnoldi <b>iteration</b> {{is reduced to}} the Lanczos <b>iteration.</b>|$|R
40|$|Abstract. A {{generalization}} of the Rayleigh quotient <b>iteration</b> {{has recently been}} proposed on the Grassmann manifold. This <b>iteration</b> {{has been shown to}} converge locally cubically to the invariant subspaces of symmetric matrices. The present paper studies global properties of the <b>iteration</b> mapping. Results are obtained e. g. concerning xed points, smoothness, and singularities of the <b>iteration</b> mapping. Key words. Grassmann-Rayleigh quotient <b>iteration,</b> Block-Rayleigh quotient <b>iteration,</b> Grassmann manifold, singularities, continuous extension, xed points. AMS subject classication. 65 F 15. ...|$|R
