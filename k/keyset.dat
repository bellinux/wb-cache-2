32|9|Public
25|$|The {{majority}} of 1857 model Waltham movements are keywind {{from the rear}} and <b>keyset</b> from the front. A small amount of the total production of 1857 model movements were fitted with a stemwind mechanism from the factory. The earliest stemwind 1857 movements were fitted with no reversing clutch on the winding stem, and had no setting mechanism; these early movements required using a key to set the time. Later stemwind movements were lever setting, with a unique design of set lever which pivoted out from the movement rather than pulling out. Later 1857 movements also added a reversing clutch, a feature ubiquitous on all subsequent Waltham stemwind watches. All stemwind 1857 movements have the winding stem located at 3:00.|$|E
50|$|Users in Engelbart's Augmentation Research Center at SRI became {{proficient}} {{with the}} mouse and <b>keyset.</b> In the 1970s the funding Engelbart's group {{received from the}} Advanced Research Projects Agency (ARPA) was cut and many key members of Engelbart's team {{went to work for}} Xerox PARC where they continued to experiment with the mouse and <b>keyset.</b> Keychord sets were used at Xerox PARC in the early 1980s, along with mice, GUIs, on the Xerox Star and Alto workstations. A one button version of the mouse was incorporated into the Apple Macintosh but Steve Jobs decided against incorporating the chorded <b>keyset.</b>|$|E
5000|$|... {{generate}} a card <b>keyset</b> {{and support the}} personalisation process for smart cards ...|$|E
50|$|Typically, a VIC {{contains}} {{one or more}} RJ-11 ports, allowing {{connections to}} basic telephone service (POTS), equipment, <b>keysets,</b> and PBXes.|$|R
50|$|Compunetix {{designs and}} builds {{hardware}} and software for audio, data, and video collaboration and conference systems; the company also makes command, communication, and control <b>keysets</b> and instruments. Each product is built in accordance with military specifications at Compunetix in-house facilities.|$|R
50|$|In {{addition}} to the basic single-line model, the Western Electric 2500-series included many related variations and special purpose models with additional features. This included sets with a headset jack, 2-line sets, <b>keysets</b> (2560), call directors, panel phones (2750), industrial phones (2520), automatic dialers (2660).|$|R
5000|$|Each party {{must have}} a key pair derived from the <b>keyset,</b> {{consisting}} of a private key (e.g. {{in the case of}} Alice) [...] where [...] is a randomly selected polynomial of the seed matrix [...] and a braid which is a randomly selected set conjugates and inverses chosen from the <b>keyset</b> parameters (A for Alice and B for Bob, where (for Alice) [...] ).|$|E
50|$|Doug Engelbart began {{experimenting with}} keysets {{to use with}} the mouse in the mid 1960s. In a famous 1968 demonstration, Engelbart {{introduced}} a computer human interface that included the QWERTY keyboard, a three button mouse, and a five key <b>keyset.</b> Engelbart used the <b>keyset</b> {{with his left hand}} and the mouse with his right to type text and enter commands. The mouse buttons marked selections and confirmed or aborted commands.|$|E
5000|$|Before {{two parties}} can {{establish}} a key they must first {{agree on a}} set of parameters, called the <b>keyset</b> parameters. These parameters comprise: ...|$|E
40|$|The Common Cockpit {{program for}} the Navy’s new {{helicopters}} specifies a single cockpit interface for diverse helicopters. This single interface supports different helicopters {{through the use of}} programmable <b>keysets.</b> One significant difference between two particular <b>keysets,</b> as currently implemented in the MH- 60 S (Sierra) and MH- 60 R (Romeo), is the manner of alphanumeric data entry. The Sierra offers a full set of 26 + keys, one letter per key, while the Romeo offers a condensed, cell-phone style where a single key contains three letters and a number. Cognitive models are created of these two different methods of user interaction, making use of the simulation and training software OMIA and the CogTool modeling system. Results of the two different interfaces are compared based on alphabetic data entry tasks currently used in Sierra training. The implications of these results are discussed when using similar tools in designing user interfaces...|$|R
50|$|Several {{telephone}} {{models were}} derived from the basic model 500, {{using some of the}} same components. The model 554 was a wall-mounted version. Other special purpose models included additional features. This included phones with dial lights (500U), party line sets (501), <b>keysets</b> (540 and 560 series), call directors, panel phones (750 series), industrial and outdoor phones (520 and 525), and automatic dialers (660).|$|R
40|$|In 2009 an {{innovative}} voice intercom system (VIS) was installed at Galileo Control Centre. The constellation currently operated {{consists of two}} IOV satellites with two further IOV satellites planned for 2012, and will be expanded to 30 in FOC – operational for some decades. This leads to significant constraints. The VIS needs to be simple to use – since over time {{a wide variety of}} operations personnel will have access. The VIS has brought state-of-the-art and proven technology based on voice-over-IP into the space ground-segment. A fully redundant and decentralized architecture solves the single point of failure issue, circumventing entirely the need for any down-time due to maintenance. In addition the hardware is robust and easy to install. It is possible to use the system after a very short training. The initial requirements were for a relatively modest system with 36 <b>keysets</b> – primarily for use in the simulation and rehearsal phase. In preparation for the In-Orbit phases a further 20 <b>keysets</b> were deployed. Since further extensions are expected the Voice System shows a wide flexibility by in line growing with mission augmentations. A high variety of external interfaces should be integrated into the system and an outline is provided for system deployment in stages – incorporating access to relevant external interfaces such as SIP for compatibility with CISCO-based Telephony. This paper reviews the challenges of the outlined system architecture, and discusses the incremental deployment strategy...|$|R
5000|$|A <b>keyset</b> or chorded {{keyboard}} (also {{called a}} chorded <b>keyset,</b> chord keyboard or chording keyboard) {{is a computer}} input device that allows the user to enter characters or commands formed by pressing several keys together, like playing a [...] "chord" [...] on a piano. The large number of combinations available from {{a small number of}} keys allows text or commands to be entered with one hand, leaving the other hand free. A secondary advantage is that it can be built into a device (such as a pocket-sized computer or a bicycle handlebar) that is too small to contain a normal-sized keyboard.|$|E
5000|$|Unlike most {{minicomputers}} of the era, Alto {{does not}} support a serial terminal for user interface. Apart from an Ethernet connection, the Alto's only common output device is a bi-level (black and white) cathode ray tube (CRT) display with a tilt-and-swivel base, mounted in portrait orientation rather than the more common [...] "landscape" [...] orientation. Its input devices are a custom detachable keyboard, a three-button mouse, and an optional 5-key chorded keyboard (chord <b>keyset).</b> The last two items had been introduced by SRI's On-Line System; while the mouse was an instant success among Alto users, the chord <b>keyset</b> never became popular.|$|E
50|$|A DNS 'A record' {{may be used}} to {{advertise}} server support for ObsTCP (with a DNS 'CNAME record' providing a 'friendly' name). HTTP header records, or cached/out of band <b>keyset</b> information may also be used instead.|$|E
5000|$|Another {{variation}} is WAXD, using either 4 or 8 keys surrounding the [...] "s" [...] key. Eight directional arrows were {{printed on the}} <b>keysets</b> of PLATO terminals developed in the 1960s and 70s, and many games (including Empire, Dogfight, {{and more than a}} dozen dungeon games such as Avatar) utilize this layout. The TUTOR language app generator, character set (bitmap) editor, and line set editor also use these keys on that system and its successors. For ballistic targeting, key combinations (e.g. [...] "we", [...] "de", etc.) are used to get angles in multiples of 22.5 degrees. In many programs the [...] "s" [...] key is often used to either [...] "select" [...] or [...] "shoot", depending upon the application.|$|R
5000|$|The {{layout of}} the digit keys is {{different}} from that commonly appearing on calculators and numeric keypads. This layout was chosen after extensive human factors testing at Bell Labs. At the time (late 1950s), mechanical calculators were not widespread, and few people had experience with them. Indeed, calculators were only just starting to settle on a common layout; a 1955 paper states [...] "Of the several calculating devices {{we have been able to}} look at... Two other calculators have <b>keysets</b> resembling layout that would become the most common layout.... Most other calculators have their keys reading upward in vertical rows of ten," [...] while a 1960 paper, just five years later, refers to today's common calculator layout as [...] "the arrangement frequently found in ten-key adding machines". In any case, Bell Labs testing found that the telephone layout with 1, 2, and 3 in the top row, was slightly faster than the calculator layout with them in the bottom row.|$|R
40|$|There are {{a number}} of {{important}} applications where the accuracy of typed copy is less important than other criteria, such as the speed of entry, ease of learning, reduced keyboard size, provision for innovative keyboard designs and work methods, etc. Some of these applications include communication devices for the motor handicapped and rough drafting. The applications in question still provide single finger typing as opposed to multifinger entries for chord keyboards. One approach to keyboard design for such applications involves using a multicharacter key set. Because {{there is more than one}} character on a key, the number of keys can be reduced to a point limited only by the required accuracy of the text produced which is itself limited by the ability of "disambiguation " algorithms to decode the ambiguous text strings. Reducing the number of keys increases text entry rates and reduces learning time. Experiments with <b>keysets</b> of 10, 12, 14, and 16 keys have produced keystroke rates of 3. 3 to 1. 7 characters per second and a 6 % keying error while the disambiguation programs can produce an accuracy of 85 to 95 %. Learning time in the experiments was about 9 to 12 minutes. The experiments demonstrate the feasibility of increasing text entry rates and freeing the keyboard from architectural constraints...|$|R
5000|$|A chorded {{keyboard}} {{minus the}} board, typically {{designed to be}} used while held in the hand, is called a keyer. Douglas Engelbart introduced the chorded <b>keyset</b> as a computer interface in 1968 at what is often called [...] "The Mother of All Demos".|$|E
50|$|The <b>keyset</b> cables were {{typically}} routed to a wiring closet or wiring panel where the Key Service Unit (KSU) was installed and were terminated on a 66 type punch block, typically a model 66M1-50. Each of these blocks could accept two 25-pair cables for termination.|$|E
50|$|The {{following}} example will {{illustrate how}} a key establishment is made. Suppose Alice wants {{to establish a}} shared key with Bob, but the only channel available for them may be eavesdropped by a third party. Initially Alice and Bob must agree on the <b>keyset</b> parameters they will use.|$|E
50|$|Modern {{examples}} of chorded keyboards include TipTapSpeech (using Engelbart's original mapping), the GKOS keyboard, the FrogPad, the In10did method, the EkaPad, TextFaster and HotTyper. Some {{of them are}} intended for tiny tablet computers and wireless mobile terminals, {{many of them are}} additionally available as apps on Apple's iOS devices. See also the on-screen virtual <b>keyset</b> at Teague Labs.|$|E
5000|$|Even {{before the}} German-born family {{emigrated to the}} United States, the founder, Henry E. Steinway, had built a grand piano in 1836 (the {{so-called}} [...] "kitchen grand"), which today is preserved at the Steinway Hall in New York City. Such grand pianos with a limited <b>keyset</b> of 6 or 6.5 octaves and double strings produce less volume of sound than a D-type concert grand piano.|$|E
5000|$|A {{telephone}} set (<b>keyset)</b> could operate as many lines {{as it had}} pickup keys (buttons) installed. Most keysets with up to nine lines {{are connected to the}} system using a single 25-pair cable terminated with an Amphenol 50-position [...] "MicroRibbon" [...] connector. Sets with up to 19 line positions used a 50-pair cable and the large instruments with 29 line positions used 75 pairs on three connectors. The Call Director model telephone had over 30 line key positions, and used 100 pairs on four connectors.|$|E
5000|$|Each key {{is mapped}} {{to a number}} and then can be mapped to a {{corresponding}} letter or command. By pressing two or more keys together the user can generate many combinations. In Engelbart's original mapping, he used five keys: 1,2,4,8,16. The keys were mapped as follows: a = 1, b = 2, c = 3, d = 4, and so on. If the user pressed keys 1 + 2 = 3 simultaneously, and then released the keys, the letter [...] "c" [...] appeared. Unlike pressing a chord on a piano, the chord is recognized only after all the keys or mouse buttons are released. Since Engelbart introduced the <b>keyset,</b> several different designs have been developed based on similar concepts.|$|E
50|$|The {{majority}} of 1857 model Waltham movements are keywind {{from the rear}} and <b>keyset</b> from the front. A small amount of the total production of 1857 model movements were fitted with a stemwind mechanism from the factory. The earliest stemwind 1857 movements were fitted with no reversing clutch on the winding stem, and had no setting mechanism; these early movements required using a key to set the time. Later stemwind movements were lever setting, with a unique design of set lever which pivoted out from the movement rather than pulling out. Later 1857 movements also added a reversing clutch, a feature ubiquitous on all subsequent Waltham stemwind watches. All stemwind 1857 movements have the winding stem located at 3:00.|$|E
50|$|NLS {{development}} {{moved to}} a Scientific Data Systems SDS 940 computer running the Berkeley Timesharing System in 1968.It had an approximately 96 MB storage disk. It could support up to 16 workstations, which were composed of a raster-scan monitor, a three-button mouse, and a device known as a chord <b>keyset.</b> The input of typed text was sent from the keyboard to a specific subsystem that relayed the information along a bus {{to one of two}} Display Controllers and Display Generators. The inputted text then was sent to a 5-inch (127 mm) cathode ray tube (CRT), which was enclosed by a special cover and a superimposed video image was then received by a professional-quality black-and-white TV camera. The TV camera information was then sent to the closed-circuit Camera Control and Patch Panel, and, finally, displayed on each workstation's video monitor.|$|E
5000|$|By late 1979 Norpak had {{developed}} {{a version of the}} Telidon decoder that was housed in a box {{about the size of a}} modern digital cable set top box. A menu selection <b>keyset,</b> about the size and shape of a contemporary calculator, connected to it using a ribbon cable. With the hardware in place, the CRC started working with telecommunications providers to test the system in production settings. Many of the major Canadian carriers expressed strong interest, and a number of test systems were ready to roll out by the early 1980s. Excitement was high; the 19 November 1981 issue of the Globe and Mail quoted a representative at the Canadian Computer Show and Conference in Toronto claiming that [...] "Telidon may become as commonly used as the telephone and will have just as great a social impact." [...] They were not alone in predicting great things for the technology: ...|$|E
50|$|The {{downfall}} of NLS, and subsequently, of ARC in general, was the program's difficult learning curve. NLS {{was not designed}} {{to be easy to}} learn; it employed the heavy use of program modes, relied on a strict hierarchical structure, did not have a point-and-click interface, and forced the user to have to learn cryptic mnemonic codes to do anything useful with the system. The chord <b>keyset,</b> which complemented the modal nature of NLS, forced the user to learn a 5-bit binary code if {{they did not want to}} use the keyboard. Finally, with the arrival of the ARPA Network at SRI in 1969, the time-sharing technology that seemed practical with a small number of users became impractical over a distributed network; time-sharing was rapidly being replaced by individual minicomputers (and later microcomputers) and workstations. Attempts to port NLS to other hardware, such as the PDP-10 and later on the DECSYSTEM-20, were successful, but did nothing to spread NLS beyond SRI.|$|E
40|$|We {{present the}} results from the {{evaluation}} of the use of <b>KeySet</b> in the architectural BSc curriculum at Delft University of Technology. <b>KeySet</b> is a metadata system that provides data with a unique key consisting of a combination of keywords according to four dimensions. These dimensions constitute the qualities that data possess at different levels. In <b>KeySet,</b> assigning keywords to data is considered a form of claiming these qualities that the data possess...|$|E
40|$|For {{a number}} of years MDL {{products}} have exposed both 166 bit and 960 bit keysets based on 2 D descriptors. These keysets were originally constructed and optimized for substructure searching. We report on improvements in the performance of MDL keysets which are reoptimized for use in molecular similarity. Classification performance for a test data set of 957 compounds was increased from 0. 65 for the 166 bit <b>keyset</b> and 0. 67 for the 960 bit <b>keyset</b> to 0. 71 for a surprisal S/N pruned <b>keyset</b> containing 208 bits and 0. 71 for a genetic algorithm optimized <b>keyset</b> containing 548 bits. We present an overview of the underlying technology supporting the definition of descriptors and the encoding of these descriptors into keysets. This technology allows definition of descriptors as combinations of atom properties, bond properties, and atomic neighborhoods at various topological separations as well as supporting {{a number of}} custom descriptors. These descriptors can then be used to set one or more bits in a <b>keyset.</b> We constructed various keysets and optimized their performance in clustering bioactive substances. Performance was measured using methodology developed by Briem and Lessel. “Directed pruning ” was carried out by eliminating bits from the keysets on the basis of random selection, values of the surprisal of the bit, or values of the surprisal S/N ratio of the bit. The random pruning experiment highlighted the insensitivity of <b>keyset</b> performance for <b>keyset</b> lengths of more than 1000 bits. Contrary to initial expectations, pruning {{on the basis of the}} surprisal values of the various bits resulted in keysets which underperformed those resulting from random pruning. In contrast, pruning on the basis of the surprisal S/N ratio was found to yield keysets which performed better than those resulting from random pruning. We also explored the use of genetic algorithms in the selection of optimal keysets. Once more the performance was only a weak function of <b>keyset</b> size, and the optimizations failed to identify a single globally optimal <b>keyset.</b> Instead multiple, equally optimal keysets could be produced which had relatively low overlap of the descriptors they encoded...|$|E
40|$|International Telemetering Conference Proceedings / October 26 - 29, 1992 / Town and Country Hotel and Convention Center, San Diego, CaliforniaThis paper {{addresses}} {{a method to}} provide both secure and non-secure voice communications to a DS- 1 network from a common <b>keyset.</b> In order to comply with both the electrical isolation requirements and the operational security issues regarding voice communications, an all-digital approach to the <b>keyset</b> was developed based upon the AD 2101 DSP. Protocols that are handled by the <b>keyset</b> include: Multiple PTT modes, hot mike, telephone access, priority override, direct access, indirect access, paging, and monitor only. Special features that are addressed include: independent channel by channel assignment of access protocols, headset assignment, speaker assignment, and PTT assignment. Multiple microprocessors are used to implement the foregoing as well as down-loadable configurations, remote <b>keyset</b> control and monitoring, and composite audio outputs. Partitioning of the digital design provides RED to BLACK channel isolation and RED channel to AC power isolation of greater than 107 dB...|$|E
40|$|Vehicular {{networks}} have attracted extensive attentions {{in recent years}} for their promises in improving safety and enabling other value-added services. Security and privacy are two integrated issues in the deployment of vehicular networks. Privacy-preserving authentication is a key technique in addressing these two issues. We propose a random <b>keyset</b> based authentication protocol that preserves user privacy under the zero-trust policy, in which no central authority is trusted with the user privacy. We show that the protocol can efficiently authenticate users without compromising their privacy with theoretical analysis. Malicious user identification and key revocation are also described. ...|$|E
40|$|Marshall Space Flight Center (MSFC) {{provides}} {{communication services}} {{for a number}} of real time environments, including Space Shuttle Propulsion support and International Space Station (ISS) payload operations. In such settings, control team members speak with each other via multiple voice circuits or loops. Each loop has a particular purpose and constituency, and users are assigned listen and/or talk capabilities for a given loop based on their role in fulfilling the purpose. A voice switch is a given facility's hardware and software that supports such communication, and may be interconnected with other facilities switches to create a large network that, from an end user perspective, acts like a single system. Since users typically monitor and/or respond to several voice loops concurrently for hours on end and real time operations can be very dynamic and intense, it s vital that a control panel or <b>keyset</b> for interfacing with the voice switch be a servant that reduces stress, not a master that adds it. Implementing the visual interface on a computer screen provides tremendous flexibility and configurability, but there s a very real risk of overcomplication. (Remember how office automation made life easier, which led to a deluge of documents that made life harder?) This paper a) discusses some basic human factors considerations related to keysets implemented as application software windows, b) suggests what to standardize at the facility level and what to leave to the user's preference, and c) provides screen shot mockups for a robust but reasonably simple user experience. Concepts apply to <b>keyset</b> needs in almost any type of operations control or support center...|$|E
40|$|In 3 GPP eMBMS, {{sometimes}} sessions will be disconnected unexpectedly due to {{the miss}} of session keys. Although rekeying can prevent old users from getting multicast data, it also causes authorized users to miss subsequent data if they miss the key update messages. Thus, re-authentication is needed to obtain lost keys from KMM. We point out this problem in our previous work 1. In this paper, we further propose a new <b>KeySet</b> algorithm, which can pre-issue a number of keys to users when they join eMBMS. The advantage is that a user can still decode multicast data even if it misses some key updates tentatively. However, the cost is that allowing some old users to freely enjoying multicast for some time. In this paper, we quantify the tradeoff and derive the optimal case...|$|E
40|$|These days, {{with the}} {{emergence}} of the concept of ubiquitous computing, sensor networks that collect, analyze and process all the information through the sensors have become of huge interest. However, sensor network technology fundamentally has wireless communication infrastructure as its foundation and thus has security weakness and limitations such as low computing capacity, power supply limitations and price. In this paper, and considering the characteristics of the sensor network environment, we propose a group key agreement method using a <b>keyset</b> pre-distribution of two-dimension arrays that should minimize the exposure of key and personal information. The key collision problems are resolved by utilizing a polygonal shape’s center of gravity. The method shows that calculating a polygonal shape’s center of gravity only requires a very small amount of calculations from the users. The simple calculation not only increases the group key generation efficiency, but also enhances the sense of security by protecting information between nodes...|$|E
