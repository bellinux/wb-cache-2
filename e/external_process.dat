150|1318|Public
5|$|The {{operator}} interface {{provides a means}} for an operator to start and stop the motor and adjust the operating speed. Additional operator control functions might include reversing, and switching between manual speed adjustment and automatic control from an <b>external</b> <b>process</b> control signal. The {{operator interface}} often includes an alphanumeric display and/or indication lights and meters {{to provide information about}} the operation of the drive. An operator interface keypad and display unit is often provided {{on the front of the}} VFD controller as shown in the photograph above. The keypad display can often be cable-connected and mounted a short distance from the VFD controller. Most are also provided with input and output (I/O) terminals for connecting push buttons, switches, and other operator interface devices or control signals. A serial communications port is also often available to allow the VFD to be configured, adjusted, monitored, and controlled using a computer.|$|E
25|$|The area of {{selection}} varies greatly {{depending on whether}} it is conducted as an internal or <b>external</b> <b>process.</b> The latter are open to Canadian citizens nationally, and sometimes internationally.|$|E
2500|$|... Specifies a field {{which may}} be {{modified}} by an <b>external</b> <b>process</b> and prevents an optimizing compiler from modifying {{the use of the}} field.|$|E
5000|$|DMT can execute <b>external</b> <b>processes</b> {{before and}} after the run of {{extracts}} and loads.|$|R
5000|$|Usable in {{ordinary}} JUnit or other style test cases without complicated setup or <b>external</b> <b>processes.</b>|$|R
40|$|A {{symmetric}} algorithm for detecting {{the termination of}} a distributed computation is presented. The algorithm does not require global information concerning the system and does not assume any communication features barring finite delays {{in the delivery of}} messages. It permits dynamic creation and destruction of processes participating in the computation. It provides for destruction of a <b>process</b> by <b>external</b> <b>processes,</b> such as the OS kernel. It also provides for <b>external</b> <b>processes</b> spontaneously joining an ongoing computation. Proofs of safety and liveness are provided...|$|R
5000|$|This {{solution}} {{moves the}} recomputation of the cache value from the processes needing {{it to an}} <b>external</b> <b>process.</b> The recomputation of the <b>external</b> <b>process</b> can be triggered in different ways: ...|$|E
5000|$|<b>External</b> <b>Process,</b> {{to execute}} {{external}} processes that can interact with [...] OLTP systems ...|$|E
5000|$|Batch, USS or ALCS : The <b>external</b> <b>process</b> {{will attempt}} to assert its {{identity}} into WAS z/OS.|$|E
50|$|Because {{keystroke}} timings {{are generated}} by human beings, {{they are not}} well correlated with <b>external</b> <b>processes,</b> and are frequently used {{as a source of}} hardware-generated random numbers for computer systems.|$|R
30|$|For hosted environments, the {{implementation}} works {{as discussed in}} this section. The Clive shell, ql, relies on the cmd package and, for non-builtin commands, arranges for channels to connect <b>external</b> <b>processes</b> as described here.|$|R
5000|$|... and [...] - {{classes that}} provide [...] "system operations" [...] that manage the dynamic loading of classes, {{creation}} of <b>external</b> <b>processes,</b> host environment inquiries {{such as the}} time of day, and enforcement of security policies.|$|R
5000|$|... Specifies a field {{which may}} be {{modified}} by an <b>external</b> <b>process</b> and prevents an optimizing compiler from modifying {{the use of the}} field.|$|E
50|$|The area of {{selection}} varies greatly {{depending on whether}} it is conducted as an internal or <b>external</b> <b>process.</b> The latter are open to Canadian citizens nationally, and sometimes internationally.|$|E
50|$|Placeholders are {{elements}} within a snippet {{that are left}} to be supplied by the user or other <b>external</b> <b>process.</b> The values for placeholders are not determined until {{the text of the}} snippet is inserted during an editing session.|$|E
50|$|Skeletonema japonicum is a diatom. Together with S. pseudocostatum, S. tropicum, and S. grethae, it {{possesses}} <b>external</b> <b>processes</b> of its fultoportulae {{that have}} narrow tips which connect {{with those of}} sibling cells via fork-, knot-, or knuckle-like unions.|$|R
50|$|The {{application}} is claimed {{to provide a}} whole-of-enterprise view of the supply chain, from ore extraction to product delivery, including <b>external</b> <b>processes</b> such as delivery arrangements. The MineMarket solution provides coverage of the logistics and sales processes for mining and mineral related organizations.|$|R
5000|$|It uses a {{coarse-grained}} functionalism {{about the}} mind that ignores plausible differences between internal and <b>external</b> <b>processes,</b> such as differences between beliefs and external props and devices; or {{for creating a}} notion of cognition too heterogeneous {{to make up a}} scientific natural kind.|$|R
50|$|The process {{dimension}} in the reference model {{is not the}} subject of part 2 of ISO/IEC 15504, but part 2 refers to <b>external</b> <b>process</b> lifecycle standards including ISO/IEC 12207 and ISO/IEC 15288. The standard defines means to verify conformity of reference models.|$|E
5000|$|For {{nonlinear}} media, no {{reciprocity theorem}} generally holds. Reciprocity {{also does not}} generally apply for time-varying ("active") media; for example, when ε is modulated in time by some <b>external</b> <b>process.</b> (In both of these cases, the frequency ω is not generally a conserved quantity.) ...|$|E
5000|$|When code under {{development}} {{relies on a}} database, a web service, or any other <b>external</b> <b>process</b> or service, enforcing a unit-testable separation is also an opportunity and a driving force to design more modular, more testable and more reusable code. Two steps are necessary: ...|$|E
5000|$|The SIGNAL formal model {{provides}} {{the capability to}} describe systems with several clocks [...] (polychronous systems) as relational specifications. Relations are useful as partial specifications and as specifications of non-deterministic devices (for instance a non-deterministic bus) or <b>external</b> <b>processes</b> (for instance an unsafe car driver).|$|R
5000|$|Enhanced remote {{execution}} (without using <b>external</b> rshd/rlogind/sshd <b>processes)</b> ...|$|R
30|$|Isolation Mode In {{this mode}} each {{dataflow}} should only work {{with its own}} inputted data and have its own QoD state irrespective of how many dataflows or <b>external</b> <b>processes</b> are also writing to the same DBMS objects. This mode implies {{the creation of a}} notify column (described hereafter) per each dataflow.|$|R
50|$|This {{approach}} requires one more moving part - the <b>external</b> <b>process</b> - {{that needs to}} be maintained and monitored. In addition, this solution requires unnatural code separation/duplication and is mostly suited for static cache keys (i.e., not dynamically generated, {{as in the case of}} keys indexed by an id).|$|E
50|$|The Information System {{that is used}} in gLite 3.1 {{inherits}} {{its main}} concepts from the Globus Monitoring and Discovery Service (MDS). However, the GRIS and GIIS in MDS {{has been replaced by}} the Berkeley Database Information Index which is essentially an OpenLDAP server that is updated by an <b>external</b> <b>process.</b>|$|E
50|$|OpenTag's {{external}} API uses {{a simplified}} client-server model and NDEF for data wrapping. The NDEF wrapper is particularly used for wireline communication between client and server, where {{the client is}} typically a human-interface device and the server is the OpenTag SoC. The internal API is exposed in a 1:1 manner with the external API, permitting the client to act much like an <b>external</b> <b>process</b> of the OpenTag kernel.|$|E
5000|$|The <b>external</b> <b>processes</b> of {{metallic}} transmutation—the {{transformations of}} lead and copper into {{silver and gold}} (see the Stockholm papyrus)—had always to mirror an inner process of purification and redemption. Wrote Zosimos in Concerning the true Book of Sophe, the Egyptian, and of the Divine Master of the Hebrews and the Sabaoth Powers: ...|$|R
2500|$|The {{idea of a}} kernel where I/O {{devices are}} handled uniformly with other processes, as {{parallel}} co-operating processes, was first proposed and implemented by Brinch Hansen (although similar ideas were suggested in 1967). In Hansen's description of this, the [...] "common" [...] processes are called internal processes, while the I/O devices are called <b>external</b> <b>processes.</b>|$|R
40|$|A {{software}} roadmap for the fab lab network For continuous effective collaboration, {{information exchange}} and daily operation within a multinational, distributed organization, {{both internal and}} <b>external</b> <b>processes</b> require efficient hard- and software support systems. The findings of this report are based on interviews and observations during a fab lab network workshop, aimed to determine th...|$|R
50|$|The BDII, {{which stands}} for Berkeley Database Information Index, is an {{information}} system for Grid Computing infrastructures. It consists of a standard LDAP server which is updated by an <b>external</b> <b>process.</b> The update process obtains LDIF {{from a number of}} sources and merges them. It then compares this to the contents of the database and creates an LDIF file of the differences. This is then used to update the database.|$|E
5000|$|As of DB2 version 9, SQL PL stored {{procedures}} can run natively {{inside the}} DB2 process (inside the DBM1 address space, more precisely) {{instead of being}} fenced in an <b>external</b> <b>process.</b> In DB2 version 9.7 IBM also added a PL/SQL front-end to this infrastructure (called [...] "SQL Unified Runtime Engine"), meaning that procedural SQL using either the ISO standard or Oracle's syntax compile to bytecode running on the same engine in DB2.|$|E
50|$|Games {{are also}} often played in chat rooms. These are {{typically}} implemented by an <b>external</b> <b>process</b> {{such as an}} IRC bot joining the room to conduct the game. Trivia question & answer games are most prevalent. A historic example is Hunt the Wumpus. Chatroom-based implementations of the party game Mafia also exist. A similar but more complex style of text-based gaming are MUDs, in which players interact within a textual, interactive fiction-like environment.|$|E
5000|$|The {{idea of a}} kernel where I/O {{devices are}} handled uniformly with other processes, as {{parallel}} co-operating processes, was first proposed and implemented by Brinch Hansen (although similar ideas were suggested in 1967). In Hansen's description of this, the [...] "common" [...] processes are called internal processes, while the I/O devices are called <b>external</b> <b>processes.</b>|$|R
30|$|Indeed, in this work, {{these lines}} {{correspond}} {{to the existence of}} the <b>external</b> diffusion <b>process</b> (<b>external</b> surface adsorption), followed by intra-particle diffusion and finally to a slow diffusion of the adsorbate to the micropores of the adsorbent (Yang et al. 2012).|$|R
40|$|Robots and {{software}} agents {{that have to}} carry out tasks {{in the real world}} often have to initiate actions that involve continuous change. But activity in the real world also involves interacting with continous <b>external</b> <b>processes</b> [...] -those initiated by the agent and those initiated by other factors in the world. In this paper, we present an architecture called rama, for Routine Activity Management and Analysis, which combines plan execution and process monitoring. rama uses a single process based representation to describe plans, <b>external</b> <b>processes,</b> and the way they must be coordinated. As it goes about performing tasks, rama uses a reactive executor to select actions and make predictions based on stored plans and process models. We illustrate the above behaviors with examples taken from laundry world, a simulation in which rama controls a synthetic agent that does laundry. 1 Introduction Engaging in purposeful everyday activity involves not only knowing what to do and how to do it; i [...] ...|$|R
