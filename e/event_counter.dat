21|126|Public
5000|$|... 2 match/count/capture {{registers}} {{allowing the}} implementation of a pulse generator, <b>event</b> <b>counter</b> or reference timer ...|$|E
50|$|The 6522 Versatile Interface Adapter (VIA) is an {{integrated}} circuit {{that was designed}} and manufactured by MOS Technology as an I/O port controller for the 6502 family of microprocessors. It provides two bidirectional 8-bit parallel I/O ports, two 16-bit timers (one of which can also operate as an <b>event</b> <b>counter),</b> and an 8-bit shift register for serial communications or data conversion between serial and parallel forms. The direction of each bit of the two I/O ports can be individually programmed. In addition to being manufactured by MOS Technology, the 6522 was second sourced by other companies including Rockwell and Synertek.|$|E
5000|$|Sometimes digital buses in {{electronic}} systems {{are used to}} convey quantities that can only increase or decrease by one at a time, for example the output of an <b>event</b> <b>counter</b> which is being passed between clock domains or to a digital-to-analog converter. The advantage of Gray codes in these applications is that differences in the propagation delays of the many wires that represent the bits of the code cannot cause the received value to go through states {{that are out of}} the Gray code sequence. This is similar to the advantage of Gray codes in the construction of mechanical encoders, however the source of the Gray code is an electronic counter in this case. The counter itself must count in Gray code, or if the counter runs in binary then the output value from the counter must be reclocked after it has been converted to Gray code, because when a value is converted from binary to Gray code, it is possible that differences in the arrival times of the binary data bits into the binary-to-Gray conversion circuit will mean that the code could go briefly through states that are wildly out of sequence. Adding a clocked register after the circuit that converts the count value to Gray code may introduce a clock cycle of latency, so counting directly in Gray code may be advantageous. A Gray code counter was patented in 1962 , and there have been many others since. In recent times a Gray code counter can be implemented as a state machine in Verilog. In order to produce the next count value, it is necessary to have some combinational logic that will increment the current count value that is stored in Gray code. Probably the most obvious way to increment a Gray code number is to convert it into ordinary binary code, add one to it with a standard binary adder, and then convert the result back to Gray code. This approach was discussed in a paper in 1996 [...] and then subsequently patented by someone else in 1998 [...] Other methods of counting in Gray code are discussed in a report by R. W. Doran, including taking the output from the first latches of the master-slave flip flops in a binary ripple counter.|$|E
5000|$|... {{peripherals}} such as timers, <b>event</b> <b>counters,</b> PWM generators, and watchdog ...|$|R
40|$|Cosmic {{rays are}} {{constantly}} bombarding the upper atmosphere, decaying into {{an array of}} particles in a shower called the hadronic shower. The very last particle that decays from a cosmic ray is the muon. Cosmic rays can be indirectly detected by using a detector that utilizes scintillator panels and photomultiplier tubes to detect the muons. The purpose of the experiment was to determine a correlation {{between the amount of}} cosmic rays detected and the percentage of cloud cover. The amount of cosmic rays detected was divided into five categories: one <b>counter</b> <b>events,</b> two <b>counter</b> <b>events,</b> three <b>counter</b> <b>events,</b> four <b>counter</b> <b>events,</b> and the total amount of muon triggers. Data was taken in Sandy Hook, New Jersey. There was a statistically significant (p < 0. 01) positive correlation between one <b>counter</b> <b>events,</b> four <b>counter</b> <b>events</b> and the total amount of muon triggers, and percent cloud cover. There was a statistically significant (p < 0. 05) positive correlation between two <b>counter</b> <b>events</b> and three <b>counter</b> <b>events,</b> and percent cloud cover. The findings {{of this study suggest that}} there is a relationship between cosmic rays and the climate and thus may affect climate change...|$|R
40|$|Abstract. Hotspot is {{the part}} of a program where most {{execution}} time is spent. Detecting the hotspot enables the optimization of the program. The performance <b>event</b> <b>counters</b> embedded in modern processors provide the hardware support for the hotspot detection. By sampling the instruction addresses of the running program with performance <b>event</b> <b>counters,</b> hotspot of the program can be statistically detected. This technical report describes our tool to find the sections of the code that are detected as the hotspot of the program with performance <b>event</b> <b>counters.</b> SPEC CPU 2006 benchmarks are tested with our tool and the results show the hotspot sections and overhead of the hotspot detection tool...|$|R
40|$|Charge {{sensitive}} amplifier outputs bipolar pulse with maximum peak of 5 volts. This {{is applied}} to negative inputs of two high-speed comparators. These change output states only if pulse applied to negative inputs exceeds dc bias on their positive inputs. Output is transferred to digital <b>event</b> <b>counter...</b>|$|E
40|$|The {{transient}} <b>event</b> <b>counter</b> is described, defining its operational characteristics, {{and presenting}} the preliminary results obtained {{through the first}} 90 days of operation including the Spring 1976 eclipse season. The {{results show that the}} CTS was charged to the point where discharges have occurred. The discharge induced transients have not caused any anomalous events in spacecraft operation. The data indicate that discharges can occur {{at any time during the}} day without preference to any local time quadrant. The number of discharges occurring in the 1 sec sample interval are greater than anticipated...|$|E
40|$|Abstract:Using BP Neural Network to {{optimize}} AE characteristic parameters of crack in drawing parts. By detecting the optimized characteristic parameters of crack, {{the crack in}} drawing parts are identified. According {{to the quality of}} drawing parts, the output of the network are crack signal and normal signal. Comparing the sensitivity of the input characteristic parameters on the output characteristic parameters, then pick the characteristic parameters which have bigger sensitivity values. Finally, the AE characteristic parameters such as Rise Time, AE <b>Event</b> <b>Counter,</b> Energy, Amplitude, Frequency Centroid can represent the signal of crack in the drawing parts better. These five characteristic parameters can identify the crack signal in the forming process of the drawing parts...|$|E
50|$|Disk power {{consumption}} model {{is based on}} input counter and output counter correlated with Input/Output <b>events</b> <b>counters.</b>|$|R
40|$|Abstract. Sampling is {{a common}} way to collect {{execution}} information with performance <b>event</b> <b>counters.</b> However, the sampling data generated from performance <b>event</b> <b>counters</b> tend to be massive if sampling with high frequencies. Storing and processing {{a large amount of}} sampling data require much disk space and computing time. In this paper, we propose the online linear regression method {{to reduce the size of}} the sampling data. Our idea is to fit the sampling data with a series of straight lines. Each line represents the variation trend of the sample values within the corresponding section. Then we store the parameters of the lines instead of the sample values, resulting in a reduction of the sampling data size. The SPEC CPU 2006 benchmarks are tested to verify the proposed online linear regression method. The experimental result shows the online linear regression method can reduce the sampling data size effectively with a low overhead, and retain the variation characteristic of the sampling data with a normalized estimated standard deviation less than 0. 1. Key words: sampling data compression, performance <b>event</b> <b>counters,</b> online linear regression...|$|R
40|$|The system {{interconnect}} {{is often}} the performance bottleneck in SMP computers. Although modern SMPs include <b>event</b> <b>counters</b> on processors and interconnects, these provide limited information about the interaction of processors vying for shared resources. Additionally, transaction sources and addresses are not readily available, making analysis of access patterns and data locality difficult. Enhanced system interconnect instrumentation is required to extract this information. This paper describes instrumentation implemented for monitoring the system interconnect on Sun Fire servers. The instrumentation supports sophisticated programmable filtering of <b>event</b> <b>counters,</b> allowing us to construct histograms of system interconnect activity, and a FIFO to capture trace sequences. Our implementation results {{in a very small}} hardware footprint, making it appropriate for inclusion in commodity hardware...|$|R
40|$|SBT is {{portable}} {{library and}} tool for on-line debugging and performance monitoring of shared-memory parallel programs using the single-program-multiple-data (SPMD) model of parallelism. SPMD programs often use barriers to synchronize threads of execution and to delimit {{the start and}} end of different phases of computation. Through its useful barrier constructs, dynamic performance warnings, and integration with hardware <b>event</b> <b>counter</b> libraries, SBT helps programmers localize deadlocks and performance bottlenecks in their parallel programs. To demonstrate SBTâ€™s applicability and usefulness, we present a simple, case study performance analysis using three programs from the SPLASH- 2 suite. In addition, we quantify the overhead incurred by the programs when they are monitored with SBT, and conclude {{that the cost of}} the instrumentation is negligible...|$|E
40|$|The {{environmental}} charging {{of satellite}} surfaces during geomagnetic substorms is the apparent {{cause of a}} significant number of anomalous events occurring on geosynchronous satellites since the early 1970 's. Electromagnetic pulses produced in connection with the differential charging of insulators can couple into the spacecraft harness and cause electronic switching anomalies. An investigation conducted to determine the response of the spacecraft surfaces to substorm particle fluxes makes use of a harness transient detector. The harness transient detector, called the Transient <b>Event</b> <b>Counter</b> (TEC) was built and integrated into the Canadian-American Communications Technology Satellite (CTS). A description of the TEC and its operational characteristics is given and the obtained data are discussed. The data show that the satellite surfaces appear to be charged to the point that discharges occur and that the discharge-induced transients couple into the wire harnesses...|$|E
40|$|ATLAS-SCT has {{developed}} a new ATLAS trigger card, 'Digital Atlas Vme Electronics' ("DAVE"). The unit {{is designed to provide}} a versatile array of interface and logic resources, including a large FPGA. It interfaces to both VME bus and USB hosts. DAVE aims to provide exact ATLAS CTP (ATLAS Central Trigger Processor) functionality, with random trigger, simple and complex deadtime, ECR (<b>Event</b> <b>Counter</b> Reset), BCR (Bunch Counter Reset) etc. being generated to give exactly the same conditions in standalone running as experienced in combined runs. DAVE provides additional hardware and a large amount of free firmware resource to allow users to add or change functionality. The combination of the large number of individually programmable inputs and outputs in various formats, with very large external RAM and other components all connected to the FPGA, also makes DAVE a powerful and versatile FPGA utility car...|$|E
30|$|The network {{processor}} {{handles the}} network protocols used {{to access the}} histogram from a remote PC using a web browser. The PC can execute instructions as follows: obtain and clear histogram data, and obtain and clear data of <b>event</b> <b>counters</b> for monitor of the detectors.|$|R
5000|$|Some writers {{dared to}} oppose Soviet ideology, like short story writer Varlam Shalamov and Nobel Prize-winning novelist Aleksandr Solzhenitsyn, {{who wrote about}} life in the gulag camps, or Vasily Grossman, with his {{description}} of World War II <b>events</b> <b>countering</b> the Soviet official historiography. They were dubbed [...] "dissidents" [...] and could not publish their major works until the 1960s.|$|R
40|$|In {{this paper}} {{we present a}} Design-for-Debug (DFD) {{reconfigurable}} infrastructure for SoCs to support at-speed in-system functional debug. A distributed reconfigurable fabric inserted at RTL provides a debug platform that can be configured and operated post-silicon via the JTAG port. The platform can be repeatedly reused to configure many debug structures such as assertions checkers, transaction identifiers, triggers, and <b>event</b> <b>counters...</b>|$|R
40|$|The {{transient}} <b>event</b> <b>counter</b> (TEC), {{senses and}} counts transients having a voltage rise of greater than five volts in three separate wire harnesses: the attitude control harness, the solar array instrumentation harness and the solar array power harness. The operational characteristics of TEC are defined and the preliminary results obtained {{through the first}} 90 days of operation including the spring 1976 eclipse season are presented. The {{results show that the}} Communications Technology Satellite was charged to the point where discharges occurred. The discharge induced transients did not cause any anomalous events in spacecraft operation. The data indicate that discharges can occur {{at any time during the}} day without preference to any local time quadrant. The number of discharges occurring in the one second sample interval are greater than anticipated. The compilation and review of the data is continuing...|$|E
40|$|Proton {{therapy is}} a {{technique}} used to deliver a highly accurate and effective dose {{for the treatment of}} a variety of tumor diseases. The possibility to have an instrument able to give online information could reduce the time necessary to characterize the proton beam. To this aim we propose a detection system for online proton beam characterization based on the Medipix 2 chip. Medipix 2 is a detection system based on a single <b>event</b> <b>counter</b> read-out chip, bump-bonded to silicon pixel detector. The read-out chip is a matrix of 256 Ã— 256 cells, 55 Ã— 55 Î¼m 2 each. To demonstrate the capabilities of Medipix 2 as a proton detector, we have used a 62 MeV flux proton beam at the CATANA beam line of the LNS-INFN laboratory. The measurements performed confirmed the good imaging performances of the Medipix 2 system also for the characterization of proton beams. </br...|$|E
40|$|Several {{performance}} analysis tools {{have been developed}} with the drawback of dedicated hardware solutions or the compute intenseness of simulations. The modern microprocessors, with hardware support for counting of system hardware events, now make possible universal software tools for the {{performance analysis}} of complex application {{programs such as the}} SPEC benchmarks. In this paper, we present a new method to determine system resource utilization #cache miss ratios, CPI values, branch miss predictions# of arbitrary programs, based on a sampling technique, combined with access to processor-internal <b>event</b> <b>counter</b> registers. We present the sprof tool set that is based on this method and enables also the detailed analysis of individual subroutines of a program, as they are executed over time. The high accuracy and the negligible overhead of the tool set is demonstrated. We used the SPEC 95 benchmark suite, consisting of 8 integer and 10 #oating-pointintensive non-trivial pro [...] ...|$|E
40|$|Scalability of {{the core}} {{frequency}} is a common feature of low-power processor architectures. Many heuristics for frequency scaling were proposed {{in the past to}} find the best trade-off between energy efficiency and computational performance. With complex applications exhibiting unpredictable behavior these heuristics cannot reliably adjust the operation point of the hardware because they do not know where the energy is spent and why the performance is lost. Embedded hardware monitors in the form of <b>event</b> <b>counters</b> have proven to offer valuable information in the field of performance analysis. We will demonstrate that counter values can also reveal the power-specific characteristics of a thread. In this paper we propose an energy-aware scheduling policy for non-real-time operating systems that benefits from <b>event</b> <b>counters.</b> By exploiting the information from these counters, the scheduler determines the appropriate clock frequency for each individual thread running in a time-sharing environment. A recurrent analysis of the thread-specific energy and performance profile allows an adjustment of the frequency to the behavioral changes of the application. While the clock frequency may vary in a wide range, the application performance should only suffer slightly. Because of the similarity to a car cruise control, we called our scheduling policy Process Cruise Control. This adaptive clock scaling is accomplished by the operating system without any application support. Process Cruise Control has been implemented on the Intel XScale architecture, that offers a variety of frequencies and a set of configurable <b>event</b> <b>counters.</b> Energy measurements of the target architecture under variable load show the advantage of the proposed approach...|$|R
40|$|This project {{focuses on}} the {{creation}} and adaption of computable general equilibrium (CGE) models to facilitate the calculation of the economic consequences of terrorism <b>events,</b> <b>counter</b> terrorism measures, natural disasters and accidents. The work in 2013 - 14 will have two distinct strands: (a) development of modeling capability at the US county level; (b) integration of econometric results on terrorism into the CGE framework. Project Technical Descriptio...|$|R
50|$|WLAN {{networks}} of today (802.11 a/b/g/n) are lacking proactive network management. When compared to cellular networks, WLAN networks have {{significantly higher level}} of radio interference, less regulated environment and even more critical applications. Cellular networks (GSM, CDMA, WCDMA) are continuously monitored through thousands of statistical network <b>event</b> <b>counters</b> and derivative metrics, called key performance indicators (KPIâ€™). WQA {{is a concept that}} brings similar active quality assurance to WLAN network management and that way also enables SLAâ€™s.|$|R
40|$|In this paper, {{we propose}} an event {{specification}} language, which incorporates a calendar algebra to conveniently allow complex temporal event descriptions. Other {{features of this}} language include allowing multiple events to occur {{at the same time}} as well as window and <b>event</b> <b>counter</b> constructs. The semantics of the language is also studied. We argue that semantics from intuition for event specification language is not sufficient due to its ambiguity in tracing reasons for event occurrence and over-triggering in some application circumstances. Based on this observation, we put forward a semantic decoration system to provide a modification for general semantics. A decoration system is a system of notations, called decorators, on the general semantics that impose additional constraints on when an event is viewed as triggered. The decoration system implicitly sets up relationship among occurrences of different events. This kind of relationship can not be expressed by most event specificat [...] ...|$|E
40|$|Abstract Distributed Shared-Memory (DSM) multiprocessors {{provide an}} {{attractive}} combination of cost-effective commodity architecture and, {{thanks to the}} shared-memory abstraction, relative ease of programming. Unfortunately, {{it is well known}} that tuning applications for scalable performance in these machines is time-consuming. To address this problem, programmers use performance monitoring tools. However, these tools are often costly to run, especially if highly-processed information is desired. In addition, they usually cannot be used to experiment with hypothetical architecture organizations. In this paper, we present Scal-Tool, a tool that isolates and quantifies scalability bottlenecks in parallel applications running on DSM machines. The scalability bottlenecks currently quantified include insufficient caching space, load imbalance, and synchronization. The tool is based on an empirical model that uses as inputs measurements from hardware event counters in the processor. A major advantage of the tool is that it is quite inexpensive to run: it only needs the <b>event</b> <b>counter</b> values for the application running with a few different processor counts and data set sizes. In addition, it provides ways to analyze variations of several machine parameters...|$|E
40|$|Identifying {{performance}} bottlenecks {{is important}} for microarchitects and application developers to produce high performance microprocessor designs and application software. Many techniques are used for this purpose, including simulation, software profiling and hardware event counters. Recently longterm program behavior has been getting more attention from researchers because of its potential applications in system-level, as well as program-level optimizations. In this paper, we study performance bottlenecks from a long-term program behavior viewpoint by classifying dynamic program execution into bottleneck phases- the portions of execution that have similar performance bottlenecks. We propose an <b>event</b> <b>counter</b> based performance model that can accurately estimate the performance cost for critical system events. Based on this model, we propose the bottleneck vector {{as the basis of}} long-term performance bottleneck analysis and a runtime bottleneck phase tracking scheme. In addition, three bottleneck phase prediction schemes are studied. Finally, we present an application of our performance bottleneck analysis model- an adaptive value predictor, which improves average performance by 7 % when compared to the original value predictor design...|$|E
50|$|The {{initiative}} received government {{backing from}} the deputy DfES and Equalities Minister Jacqui Smith, although some {{sections of the}} press argued against its political correctness, and {{pointed out that the}} sexuality of some historical figures is more a matter of speculation than fact. Supporters of the <b>event</b> <b>countered</b> {{that it is important to}} challenge heterosexist attitudes in society. LGBT History Month is intended to be an annual event in the United Kingdom taking place every February to coincide with a slower month in the schools calendar.|$|R
40|$|Great Tits Parus major {{can reduce}} fruit damage in apple {{orchards}} by predating on caterpillars. A model by Mols (2003) predicted that damage reduction is mainly {{influenced by the}} hatching date of the Great Tit nestlings {{and the number of}} breeding pairs in the orchard. We tested these predictions by investigating predation pressure on caterpillars by Great Tits in various orchards. First we calculated the total number of feeding visits by Great Tits using two different methods: <b>event</b> <b>counters</b> and the daily weight gain of nestlings. For the latter method we needed to make assumptions on prey size selectivity of Great Tits to prevent overestimation of the number of visits. With the <b>event</b> <b>counters</b> we showed that the number of feeding visits increased with date and with the number of nestlings but there was no effect of hatching date on the total number of feeds over the whole nesting period. Next, we used these data on feeding visits to calculate the maximum proportion of caterpillars that Great Tits removed in organic apple orchards. The average number of three breeding pairs of Great Tits per ha removed on average 23 % of the caterpillars. This percentage can increase up to 49 % if all foraging takes place within the orchard. ...|$|R
40|$|The Time Warp {{synchronization}} protocol allows causality {{errors and}} then recovers from {{them with the}} assistance of a cancellation mechanism. Cancellation can cause the rollback of several other simulation objects that may trigger a cascading rollback situation where the rollback cycles back to the original simulation object. These cycles of rollback can cause the simulation to enter a unstable (or thrashing) state where little real forward simulation progress is achieved. To address this problem, knowledge of causal relations between events can be used during cancellation to avoid cascading rollbacks and to initiate early recovery operations from causality errors. In this paper, we describe a logical time representation for Time Warp simulations that is used to disseminate causality information. The new timestamp representation, called Total Clocks, has two components: (i) a virtual time component, and (ii) a vector of <b>event</b> <b>counters</b> similar to Vector clocks. The virtual time component provides a one dimensional global simulation time, and the vector of <b>event</b> <b>counters</b> records <b>event</b> processing rates by the simulation objects. This time representation allows us to disseminate causality information during event execution {{that can be used to}} allow early recovery during cancellation. We propose a cancellation mechanism using Total Clocks that avoids cascading rollbacks in Time Warp simulations that have FIFO communication channels...|$|R
40|$|This {{document}} {{describes an}} extension of the One-Time Password (OTP) algorithm, namely the HMAC-based One-Time Password (HOTP) algorithm, as defined in RFC 4226, to support the time-based moving factor. The HOTP algorithm specifies an event-based OTP algorithm, where the moving factor is an <b>event</b> <b>counter.</b> The present work bases the moving factor on a time value. A time-based variant of the OTP algorithm provides short-lived OTP values, which are desirable for enhanced security. The proposed algorithm can be used across a wide range of network applications, from remote Virtual Private Network (VPN) access and Wi-Fi network logon to transaction-oriented Web applications. The authors believe that a common and shared algorithm will facilitate adoption of two-factor authentication on the Internet by enabling interoperability across commercial and open-source implementations. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|E
40|$|Root-length {{measurements}} {{are an important}} aspect of many agronomic research programs. Several automated systems have been reported which use modifications of the line-intersect technique to estimate root length; however, most of these systems are very costly. This paper describes an inexpensive automated system using a modified line-intersect technique to estimate root length. An X-Y plotter was used to move a light sensor in a grid pattern through the projected photographic image of a root system, recording intersections with an <b>event</b> <b>counter.</b> Compared to manual counting using the Line-intersect technique, the system described accurately estimated root length of samples up to 10 m in length (r 2 = 0. 98). The advantage of our system is that costs are reduced by using equipment that is readily available at most laboratories: X-Y plotter and slide projector. The cost of additional items was less than $ 600. Each determination of root length required 50 sec. The accuracy of the system was comparable to others that are based on the line-intersect technique...|$|E
40|$|Abstractâ€”Self-powered {{monitoring}} {{refers to}} a signal pro-cessing technique where the computational power is harvested directly from the signal being monitored. In this paper, we present the design and calibration of a CMOS <b>event</b> <b>counter</b> for long-term, self-powered mechanical usage monitoring. The counter exploits a log-linear response of the hot-electron injection process on a floating-gate transistor when biased in weak-inversion. By configuring an array of floating-gate injectors to respond to different amplitude levels of the input signal, a complete analog processor has been designed that implements a level counting algorithm which is widely used in mechanical usage monitoring. Measured results from a fabricated prototype in a 0. 5 -Âµm CMOS process demonstrate that the processor can sense, store and compute over 105 usage cycles with an injection limit approaching one single electron per second and with a counting resolution of 5 bits. This paper also presents a calibration algorithm that is used for compensating the variations which arise due to device mismatch, power supply and temperature fluctuations. The maximum current rating of the fabricated analog processor has been measured {{to be less than}} 160 nA making it ideal for practical self-powered sensing applications. Index Termsâ€”Sub-threshold analog circuits, event monitor-ing, floating-gate transistors, self-powering, impact-ionized hot-electron injection, level-crossing algorithms, structural health monitoring, ultra-low power sensors. I...|$|E
50|$|However, Kris's {{role in the}} <b>events</b> was <b>countered</b> by Narong in a 2003 book. Narong blamed Kris, among others, for the violence. The {{book was}} {{strongly}} criticised by former student leaders.|$|R
40|$|Hardware {{performance}} counters are CPU registers {{that count}} data loads and stores, cache misses, and other <b>events.</b> <b>Counter</b> data can help programmers understand software performance. Although CPUs typically have multiple coun-ters, each can monitor only {{one type of}} event at a time, and some counters can monitor only certain events. Therefore, some CPUs cannot concurrently monitor interesting combi-nations of events. Software multiplexing partly overcomes this limitation by using time sharing to monitor multiple <b>events</b> on one <b>counter.</b> However, counter multiplexing is harder to implement for multithreaded programs than for single-threaded ones because of certain difficulties in man-aging {{the length of the}} time slices. This paper describes a software library called MPX that overcomes these difficulties. MPX allows applications to gather hardware counter data concurrently for any combi-nation of countable events. MPX data are typically within a few percent of counts recorded without multiplexing. ...|$|R
40|$|This {{paper is}} {{dedicated}} to the chronicle recognition approach used to design an evolution monitoring system for supervising dynamic systems for which time information is relevant. We propose to extend and also to unify the chronicle representation through <b>event</b> <b>counters.</b> The main motivation of such an extension of the chronicle representation arises from alarm processing: counting the occurrences of alarms can be useful to evaluate the severity of a problem and also to discriminate some kind of faults. The paper describes the representation and the corresponding algorithms for processing this extension according to the purpose of supervision in terms of performance. ...|$|R
