51|961|Public
5000|$|The {{software}} was originally titled [...] "Supercomp-20". It was renamed 20/20, and {{was available for}} AT&T Unix, DEC VAX, the IBM RS/6000, and IBM-compatible PCs. It was the first spreadsheet with integrated database and graphics support available for Unix. In 1989, a version was released with real-time data updating. 20/20 also had macros (called [...] "command files" [...] in the documentation), and a goal-seeking facility, which allowed the user to choose a desired value for a result cell, and vary an <b>input</b> <b>cell</b> automatically until the desired result was achieved.|$|E
50|$|Various {{software}} packages {{have been developed}} for the purposes of computing homology groups of finite cell complexes. Linbox is a C++ library for performing fast matrix operations, including Smith normal form; it interfaces with both Gap and Maple. Chomp, CAPD::Redhom and Perseus are also written in C++. All three implement pre-processing algorithms based on Simple-homotopy equivalence and discrete Morse theory to perform homology-preserving reductions of the <b>input</b> <b>cell</b> complexes before resorting to matrix algebra. Kenzo is written in Lisp, and in addition to homology it may also be used to generate presentations of homotopy groups of finite simplicial complexes. Gmsh includes a homology solver for finite element meshes, which can generate Cohomology bases directly usable by finite element software.|$|E
5000|$|Cottrell, in {{research}} at the University of California at San Diego, developed the artificial neural network which had a 64 X 64 pixel grid with 256 activation levels. The network consisted of recognizable representations of real faces. [...] Each <b>input</b> <b>cell</b> had a radiating set of axonal end branches to every cell in the middle layer. The middle layer is hidden and projects the coding from 80 cells to the eight output cells. These eight output cells could discriminate faces from non-faces just like grandmother cells are thought to do. Cottrell {{had no idea how}} synaptic connections should be configured in the artificial neural network. Cottrell overcame this issue by using a biologically realistic adjustment.|$|E
40|$|Abstract—Existing {{approaches}} for modular manufacturing test of core-based system-on-a-chip (SOC) devices {{do not provide}} any explicit mechanism for delivering two-pattern tests in the broadside mode, which is necessary to achieve reliable coverage of delay and stuck-open faults. Although wrapper <b>input</b> <b>cells</b> can be enhanced with two memory elements to address this problem, this will incur a large test area overhead. This paper proposes a novel architecture for broadside two-pattern test of core-based SOCs without any loss in fault coverage and without increasing {{the size of the}} wrapper <b>input</b> <b>cells.</b> The proposed solution combines the dedicated bus-based test access mechanism and functional interconnects for test data transfer in order to provide full controllability of the wrapper <b>input</b> <b>cells</b> in the two consecutive clock cycles required by two-pattern testing. New algorithms for test access mechanism design and test scheduling are proposed and design trade-offs between test area and testing time are discussed using experimental results. Index Terms—System-on-a-chip, embedded core delay test. ...|$|R
30|$|The {{proposed}} MV 5 has approximately 32 distinct input states; {{we should}} verify all the input condition {{to validate the}} accuracy of the gate. In this paper, only one state (A =  1, B =  0, C = D = E =  1) has been considered for verification. Similarly, other states can be verified too. For a fixed input MV 5, the five <b>input</b> <b>cells</b> polarization are remain unchanged; only the intermediary cells and the output cell are subject to be changed to their polarization according to the <b>input</b> <b>cells.</b> Here, the proposed MV 5 have three intermediary cells and one output cell those are labeled as 1, 2, 3 and OUTPUT respectively shown in Fig.  1.|$|R
40|$|Recent {{evidence}} suggests CML {{stem cells are}} insensitive to kinase inhibitors and responsible for minimal residual disease in treated patients. We investigated whether CML stem cells, in a transgenic mouse model of CML-like disease or derived from patients, are dependent on Bcr-Abl. In the transgenic model, following re-transplantation, donor-derived CML stem cells in which Bcr-Abl expression had been induced and subsequently shut off, were able to persist in vivo and re-initiate leukemia in secondary recipients upon Bcr-Abl re-expression. Bcr-Abl knockdown in human CD 34 + CML cells cultured for 12 days in physiological growth factors achieved partial inhibition of Bcr-Abl and downstream targets p-CrkL and p-STAT 5, inhibition of proliferation and colony forming cells, but no reduction of <b>input</b> <b>cells.</b> The addition of dasatinib further inhibited p-CrkL and p-STAT 5, yet only reduced <b>input</b> <b>cells</b> by 50 %. Complete growth factor withdrawal plus dasatinib further reduced <b>input</b> <b>cells</b> to 10 %, however the surviving fraction was enriched for primitive leukemic cells capable of growth in long-term culture initiating cell assay and expansion upon removal of dasatinib and addition of growth factors. Together {{these data suggest that}} CML stem cell survival is Bcr-Abl kinase independent and suggest curative approaches in CML must focus on kinase-independent mechanisms of resistance...|$|R
50|$|All halftoning uses a high {{frequency}}/{{low frequency}} dichotomy. In photographic halftoning, the low frequency attribute {{is a local}} area of the output image designated a halftone cell. Each equal-sized cell relates to a corresponding area (size and location) of the continuous-tone input image. Within each cell, the high frequency attribute is a centered variable-sized halftone dot composed of ink or toner. The ratio of the inked area to the non-inked area of the output cell corresponds to the luminance or graylevel of the <b>input</b> <b>cell.</b> From a suitable distance, the human eye averages both the high frequency apparent gray level approximated by the ratio within the cell and the low frequency apparent changes in gray level between adjacent equally spaced cells and centered dots.|$|E
50|$|Generally speaking, a {{neural network}} {{requires}} the following steps. To begin, each cell of the input layer receives a value (0 or 1) {{corresponding to the}} response values in the exemplar vector. Each <b>input</b> <b>cell</b> then passes the value it receives to every hidden cell. Each hidden cell forms a linearly weighted sum of its input and transforms the sum using the logistic function and passes the result to every output cell. Each output cell, in turn, forms a linearly weighted sum of its inputs from the hidden cells and transforms it using the logistic function, and outputs the result. Because the result is scaled using the logistic transformation, the output values range from 0 to 1. The result {{can be interpreted as}} the probability the correct or target value for each output will have a value of 1.|$|E
5000|$|The {{general format}} of EDIF {{involves}} using parentheses to delimit data definitions, {{and in this}} way it superficially resembles Lisp. The basic tokens of EDIF 2.0.0 were keywords (like library, cell, instance, etc.), strings (delimited with double quotes), integer numbers, symbolic constants (e.g. GENERIC, TIE, RIPPER for cell types) and [...] "Identifiers", which are reference labels formed from a very restricted set of characters. EDIF 3.0.0 and 4.0.0 dropped the symbolic constants entirely, using keywords instead.So, the syntax of EDIF has a fairly simple foundation. A typical EDIF file looks like this: (edif fibex (edifVersion 2 0 0) (edifLevel 0) (keywordMap (keywordLevel 0)) (status (written (timeStamp 1995 1 1 1 1 1) (program [...] "xxx" [...] (version [...] "v1")))) (library xxx (edifLevel 0) (technology (numberDefinition (scale 1 (e 1 -6) (unit distance)))) (cell dff_4 (cellType generic) (view view1 (viewType netlist) (interface (port aset (direction INPUT)) (port clok (direction <b>INPUT))</b> ... (<b>cell</b> yyy (cellType generic) (view schematic_ (viewType netlist) (interface (port CLEAR (direction INPUT)) (port CLOCK (direction INPUT)) ... (contents (instance I_36_1 (viewRef view1 (cellRef dff_4))) (instance (rename I_36_3 [...] "I$3") (viewRef view1 (cellRef addsub_4))) ... (net CLEAR (joined (portRef CLEAR) (portRef aset (instanceRef I_36_1)) (portRef aset (instanceRef I_36_3)))) ...|$|E
5000|$|Multiple-Input Single-Output (MISO) processing: Alamouti {{pre-processing}} is optionally {{applied to}} pairs of OFDM symbol cells. Given [...] the <b>input</b> <b>cells,</b> [...] and [...] transmitter group 1 and 2 cells, the mapping is done as [...] and [...] for group 1, and as [...] and [...] for group 2 ...|$|R
5000|$|Where [...] is the {{activity}} of cell , and [...] is the preferred <b>input</b> for <b>cell</b> [...]|$|R
50|$|Confusion arises {{because the}} {{spreadsheet}} application (2) {{is an example}} of a reactive program, while the program effectively defined by the underlying spreadsheet (1) is typically not itself a reactive program. Semantically, the underlying spreadsheet (1) simply determines a calculation from a set of <b>input</b> <b>cells</b> to a set of output cells, and thus could be directly translated to a simple transformational calculation (i.e. function) in a traditional programming language.|$|R
40|$|This paper {{presents}} {{the design of}} the scheduler for an M &times; N input-queued multicast switch. It is assumed that each input maintains a single queue for arriving multicast cells and that only the cell at the head of line (HOL) can be observed and scheduled at one time. The scheduler is required to be work-conserving, which means that no output port may be idle {{as long as there is}} an <b>input</b> <b>cell</b> destined to it. Furthermore, the scheduler is required to be fair, which means that no <b>input</b> <b>cell</b> may be held at HOL for more than M cell times (M is the number of input ports). The aim is to find a work-conserving, fair policy that delivers maximum throughput and minimizes input queue latency. When a scheduling policy decides which cells to schedule, contention may require that it leave a residue of cells to be scheduled in the next cell time. The selection of where to place the residue uniquely defines the scheduling policy. It is demonstrated that a policy which always concentrates the residu [...] ...|$|E
40|$|The {{article is}} aimed to ATM {{multiplexor}} computer model utilisation. Based on simulation runs {{we try to}} review aspects of use a synchronous and asynchronous ATM multiplexors. ATM multiplexor is the input queuing model with three inputs. Synchronous multiplexor works without an input priority. Multiplexor inputs are served periodically. Asynchronous multiplexor model supports several queuing and priority mechanisms. CLR and CTD are basic performance parameters. <b>Input</b> <b>cell</b> flows are generated as IPP sources. The article refers to [1] which verifies the ATM synchronous multiplexor model functionality. The article is aimed to ATM multiplexor computer model utilisation. Based on simulation runs we try to review aspects of use a synchronous and asynchronous ATM multiplexors. ATM multiplexor is the input queuing model with three inputs. Synchronous multiplexor works without an input priority. Multiplexor inputs are served periodically. Asynchronous multiplexor model supports several queuing and priority mechanisms. CLR and CTD are basic performance parameters. <b>Input</b> <b>cell</b> flows are generated as IPP sources. The article refers to [1] which verifies the ATM synchronous multiplexor model functionality.   ...|$|E
40|$|The {{demand for}} network {{bandwidth}} is growing {{much faster than}} the increase in commercially available memory bandwidth, causing a growing interest in input-queued switches. Furthermore, {{an increase in the}} proportion of multicast traffic in today's networks makes it important that they support such traffic efficiently. This paper presents the design of the scheduler for an M &times; N input-queued multicast switch. It is assumed that: (i) Each inputmaintains a single queue for arriving multicast cells, and (ii) Only the cell atthehead of line (HOL) can be observed and scheduled at one time. The scheduler is required to be: (i) Work-conserving, which means that no output port may be idle {{as long as there is}} an <b>input</b> <b>cell</b> destined to it, and (ii) Fair, which means that no <b>input</b> <b>cell</b> may be held at HOL for more than a fixed number of cell times. The aim of our work is to find a work-conserving, fair policy that delivers maximum throughput and minimizes input queue latency,andyet is simple to implement in hardware. When asc [...] ...|$|E
50|$|The {{algorithm}} processes the <b>input</b> grid, <b>cell</b> by cell, as follows: Let's {{say that}} grid is a two-dimensional array.|$|R
3000|$|Using Hamming {{distance}} (HD) {{power dissipation}} of a QCA circuit can be estimated. Power dissipation is depends on HD between <b>input</b> <b>cells</b> to inverter cells {{as well as}} HD between majority voter gates (Liu et al. 2012). For an inverter when the input is changed from 0  →  0 or 1  →  1. In this case the HD will be 0, and the power dissipation by inverter at γ =  0.25 E [...]...|$|R
30|$|New {{interest}} in hybrid methods {{arises from the}} use of GAs. In 2015, Feng [13] analyzed the disadvantage of wavelet NNs and used GA to optimize the weight and threshold of NN. The GA has also been used to optimize NNs for different types of roads, to optimize links which connect <b>input</b> <b>cells</b> to hidden cells in the NN trained by Levenberg–Marquardt method [14] or to optimize the weights of the NN [15].|$|R
40|$|Abstract Linsker has {{reported}} {{the development of}} structured receptive fields in simulations using a Hebb-type synaptic plasticity rule in a feed-forward linear network. The synapses develop under dynamics determined by a matrix that {{is closely related to}} the covariance matrix of <b>input</b> <b>cell</b> activities. We analyse the dynamics of the learning rule in terms of the eigenvectors of this matrix. These eigenvectors represent independently evolving weight structures. Some general theorems are presented regarding the properties of these eigenvectors and their eigenvalues. For a general covariance matrix four principal parameter regimes are predicted...|$|E
40|$|This paper {{presents}} {{the design of}} the scheduler for an M#N input-queued multicast switch. It is assumed that each input maintains a single queue for arriving multicast cells and that only the cell at the head of line (HOL) can be observed and scheduled at one time. The scheduler is required to be work-conserving, which means that no output port may be idle {{as long as there is}} an <b>input</b> <b>cell</b> destined to it. Furthermore, the scheduler is required to be fair, which means that no <b>input</b> <b>cell</b> may be held at HOL for more than M cell times (M is the number of input ports). The aim is to find a work-conserving, fair policy that delivers maximum throughput and minimizes input queue latency. When a scheduling policy decides which cells to schedule, contention may require that it leave a residue of cells to be scheduled in the next cell time. The selection of where to place the residue uniquely defines the scheduling policy. It is demonstrated that a policy which always concentrates the residue, subject to our fairness constraint, always outperforms all other policies. We present one such policy, called TATRA, and analyze it geometrically. We also present a heuristic round-robin policy called mRRM that is simple to implement in hardware, fair, and performs quite well when compared to a concentrating algorithm...|$|E
40|$|Several {{strains of}} the enteropathogenic {{coronavirus}} transmissible gastroenteritis virus (TGEV) {{have been shown to}} replicate in alveolar macrophages maintained vitro. A distinct cytopathic effect was observed at multiplicity of infection>/ 0. 1. Infected cells released infectious virus. The extent of both virus production and cell destruction was highly dependent upon the virus input. At low <b>input,</b> <b>cell</b> viability was affected only slightly, and a delayed and persistent virus production could be observed. TGEV infection of macrophages also led to a marked synthesis of type I interferon. Thus, the possibility that alveolar macrophages act as an extra-intestinal target for TGEV must be considered...|$|E
40|$|We {{describe}} {{a system to}} study how the retina processes and encodes a visual image. The Readout System &quot; will allow the simultaneous detection of signals from hundreds of output cells in live retinal tissue as a visual image {{is focused on the}} <b>input</b> <b>cells.</b> The signals will be detected in real-time, with all spatial and temporal correlations recorded. The system will be based, in part, on the technology of silicon microstrip detectors. ...|$|R
5000|$|The {{underlying}} {{collection of}} cells, where each cell contains either a literal value or {{a formula that}} refers to other cells such as [...] "=B1+C1". This table of cells is effectively a computer program that determines how a set of output cells are computed from a set of <b>input</b> <b>cells.</b> This may be saved to a file, and this {{is often referred to}} as a [...] "spreadsheet" [...] (e.g. [...] "the budget spreadsheet").|$|R
40|$|Abstract—Comparator is {{the most}} {{frequent}} operation in many digital and scientific applications. Here {{in this paper we}} are simulating a low transistor count scalable digital comparator based on parallel prefix tree. Fastest comparators are designed by using the combinatorial logic gates, which results huge number of transistor count, and hence the area is also increased. So here we implemented the comparator using Gate Diffusion <b>Input</b> <b>Cells</b> to reduce the transistor count and hence the area of the circuit...|$|R
40|$|Neural Network is an {{information}} processing {{system that has}} certain characteristic in common with biological neural network. In development NN has been many applied in several surface, {{one of them is}} for forecasting. For the best application of NN, architecture has determined. One of methode to get optimal architecture NN is incremental contribution methods. This methods will to determine the size of hidden and <b>input</b> <b>cell</b> in the network with excluding respectively. One of the unit cell with a low incremental contribution will be exclution from network. The result shows that the incremental contribution methods is capable reducing the size of the network is propozed, so getting optimal architecture from network...|$|E
30|$|Other {{important}} component in QCA designing is the wire. In a QCA wire, {{the propagation of}} binary signal takes place from input to output due to the electrostatic interactions between cells. Since the polarization of each cell tends to align with that of its neighbors, a linear arrangement of standard cells is used to transmit binary information from one point to another [6, 7]. In this wire, all free cells align {{in the same direction}} as the driving cell (<b>input</b> <b>cell),</b> so the information contained in the state of the input is transmitted down the wire. Besides, the separation between dots and cells is a key parameter giving Coulombic effect in QCA application in conventional form.|$|E
30|$|For the evaluation, two {{prerecorded}} monkey spiking {{data files}} from macaque primary motor cortex (M 1) and dorsal premotor cortex (PMd) are fed to the BMM. The prototype implementation supports BMMs with continuous P-based and discrete NSLOC-based inputs. Thus, {{depending on the}} <b>input</b> <b>cell</b> type chosen, the discrete multiunit activity (MUA) values from the prerecorded spiking data are either processed by the binning operation as explained below for P cells or delivered directly as discrete input through the NSLOC units. P cell is a simple point process cell, so the binned input increases the voltage in the P cells, which makes the P cells fire once a threshold is reached, whereas NSLOC units generate spikes to corresponding ES cells at the times specified in the inputs.|$|E
50|$|Cells are sorted {{according}} to their tissue type and then by GFP fluorescence, and the cCRMs are recovered by PCR from double-positive sorted cells, and from total <b>input</b> <b>cells.</b> High-throughput sequencing of both populations then allows measuring the relative abundance of each cCRM in input and sorted populations; one can then assess the enrichment or depletion of each cCRM in double-positive <b>cells</b> versus <b>input</b> {{as a measure of}} activity in the CD2-positive cell type being tested.|$|R
5000|$|Colin Blakemore {{based his}} {{explanation}} on visual tilt effects. He postulated that a neuron's orientation selectivity should be sharpened when receiving inhibitory <b>input</b> from <b>cell's</b> whose optimal orientation is different.|$|R
40|$|We have {{established}} a transformation system for Dictyostelium discoideum. The transformation vector contains the protein coding region of the Tn 5 neomycin resistance gene fused to the proposed promoter of the Dictyostelium actin 8 gene; the vector also contains a sequence that acts as an autonomously replicating sequence (ars) in yeast. Using this vector, we can transform Dictyostelium vegetative amoebae to be resistant to aminoglycoside G 418 at a frequency of between 10 (- 6) and 10 (- 4) of the <b>input</b> <b>cells.</b> The transformed cell lines are stable and contain vector sequences integrated within chromosomal DNA...|$|R
40|$|An online {{calculator}} ([URL] for {{statistical analysis of}} spatial data is introduced. The calculator is applicable {{in a wide range}} of spatial research and for courses involving spatial data analysis. The present version of the calculator contains 35 web pages for statistical functions with several options and settings. The input data for most functions are pure Cartesian coordinates and variable values, which should be copied to the <b>input</b> <b>cell</b> on the page of a particular spatial operation. The source code for the computational part of all functions is freely available in C# programming language. Examples are given for thinning spatially dense observation points to a predefined minimum distance, for calculating spatial autocorrelations, for creating habitat suitability maps and for generalising movement data into spatio-temporal clusters. ...|$|E
40|$|The {{monitoring}} of traffic streams in ATM networks {{is one of}} the crucial actions whichare performed to avoid network congestion {{and to be able to}} guarantee the users a desired grade of service. In this paper, we derive the exact cell inter-departure time distribution from the peak cell rate monitor algorithm as proposed by the CCITT (ITU-TSS) in Draft Rec. I. 371 [7]. For <b>input</b> <b>cell</b> streams which follow a general independent distribution, we compute the distribution of the time that is expected by the monitor algorithm to pass until the next cell arrives. This distribution is derived by a discrete-time iteration and using this distribution, the cell inter-departure time distribution is given in closed form. We present some numerical examples which show how the inter-cell distributions are altered by passing the monitor algorithm...|$|E
40|$|Abstract — This paper {{presents}} {{the design of}} a scheduler for an input-queued multicast switch. It is assumed that: 1) each input maintains a single queue for arriving multicast cells and 2) only the cell at the head of line (HOL) can be observed and scheduled at one time. The scheduler is required to be: 1) workconserving, which means that no output port may be idle {{as long as there is}} an <b>input</b> <b>cell</b> destined to it and 2) fair, which means that no <b>input</b> <b>cell</b> may be held at HOL for more than a fixed number of cell times. The aim of our work is to find a work-conserving, fair policy that delivers maximum throughput and minimizes input queue latency, and yet is simple to implement in hardware. When a scheduling policy decides which cells to schedule, contention may require that it leave a residue of cells to be scheduled in the next cell time. The selection of where to place the residue uniquely defines the scheduling policy. Subject to a fairness constraint, we argue that a policy which always concentrates the residue on as few inputs as possible generally outperforms all other policies. We find that there is a tradeoff among concentration of residue (for high throughput), strictness of fairness (to prevent starvation), and implementational simplicity (for the design of high-speed switches). By mapping the general multicast switching problem onto a variation of the popular block-packing game Tetris, we are able to analyze, in an intuitive and geometric fashion, various scheduling policies which possess these attributes in different proportions. We present a novel scheduling policy, called TATRA, which performs extremely well and is strict in fairness. We also present a simple weight-based algorithm, called WBA, that is simple to implement in hardware, fair, and performs well when compared to a concentrating algorithm. Index Terms—ATM, high-speed routing, high-speed switching, input-queued switches, multicast, scheduling. I...|$|E
40|$|Recent {{experimental}} {{evidence suggests that}} synaptic plasticity depends on the precise timing of pre- and post-synaptic activity. In this paper, an iterative model for a multiplicative form of this spike-timing-dependent plasticity (mSTDP) is introduced. This model is incorporated into a neural network with many <b>input</b> <b>cells</b> coupled via excitation to a single output cell. Analysis of this network yields a criterion for the output cell to fire on every iteration, as well as general formulae for the steady-state output firing rate and the steady-state value to which all synaptic weights are driven by mSTDP. These characterize the basic state of network operation generated by mSTDP. 1...|$|R
40|$|Design of {{the first}} {{generation}} LCLS injector is nearing completion. Fabrication has begun and component installation is planned for 2006. We discuss the last modifications made on both the 1. 6 cell S-Band RF gun and the SLAC S-Band accelerating structures to minimize irreversible emittance growth. The mode separation between the 0 and {pi} modes was increased from 3. 4 MHz to 15 MHz. Dual feed and racetrack shapes have been incorporated in the full cell of the new gun. The linac sections were also modified to accommodate dual feeds and racetrack shapes in their <b>input</b> <b>cells.</b> PARMELA simulations indicating the need for these modifications are presented...|$|R
30|$|Input data {{requirements}} {{for each of}} the various mortality forecasting methods were assessed by compiling a table of both national-level and regional-level data inputs. At the regional scale the number of <b>input</b> data <b>cells</b> per subnational region was noted.|$|R
