5|21|Public
5000|$|Example 2: legacy code {{may have}} been {{compiled}} and tested on 32-bit architectures, but when compiled on 64-bit architectures new arithmetic problems may occur (e.g. invalid signedness tests, <b>invalid</b> <b>type</b> casts, etc.).|$|E
40|$|Abduction is {{a widely}} used but deductively <b>invalid</b> <b>type</b> of reasoning. In this paper I will develop a tool for the {{assessment}} of argumentation based on abduction {{that can be used to}} analyse and evaluate the type of argumentation as it occurs in institutionalized contexts like science and medical diagnosis. I will summarize the most important definitions of abduction and propose an argumentative pattern on the basis of a critical examination of two extant dialectical accounts of the argument scheme involved...|$|E
40|$|Abstract. This paper {{introduces}} YARRA, {{a conservative}} extension to C to protect applications from non-control data attacks. YARRA programmers specify their data integrity requirements by declaring critical data types and ascribing these critical types to important data structures. YARRA guarantees that such critical data is only written through pointers with the given static type. Any attempt {{to write to}} critical data through a pointer with an <b>invalid</b> <b>type</b> (perhaps because of a buffer overrun) is detected dynamically. We formalize YARRA’s semantics and prove the soundness of a program logic designed for use with the language. A key contribution {{is to show that}} YARRA’s semantics are strong enough to support sound local reasoning and the use of a frame rule, even across calls to unknown, unverified code. We eval-uate a prototype implementation of a compiler and runtime system for YARRA by using it to harden four common server applications against known non-control data vulnerabilities. We show that YARRA successfully defends the applications against these attacks. In our initial experiments, we find that the performance impact of YARRA is small, provided the amount of critical data is small and the application is not compute intensive...|$|E
5000|$|... {{function}} first(x: array|string) = x0 writeln(first(2, 3)) // prints 1 writeln(first("hello")) // prints h writeln(first(45)) // error, <b>invalid</b> parameter <b>type</b> 'int' ...|$|R
5000|$|There is no precomposed {{character}} {{to combine the}} acute accent with the letter q, striking [...] and then [...] is {{likely to result in}} ´q, with the accent and letter as separate characters. However, in some systems, the <b>invalid</b> <b>typing</b> sequence may be discarded. (By using the combining characters available in the Unicode character set, {{it may be possible to}} generate a combination that more or less looks like a q with an acute accent (q́), but that technique is quite distinct from the dead key functionality.) ...|$|R
40|$|Although the leaf-thin bracteates are {{the most}} fragile coins in {{monetary}} history, they were the main coin type for almost two centuries in large parts of medieval Europe. The usefulness of the bracteates {{can be linked to}} the contemporary monetary taxation policy. Medieval coins were frequently withdrawn by the coin issuer and re-minted, where people had to pay an exchange fee. Bracteates had several favourable characteristics for such a policy: 1) Low production costs; and 2) various pictures could be displayed given their relatively large diameter, making it easy to distinguish between valid and <b>invalid</b> <b>types.</b> The fragility was not a big problem, since the bracteates would not circulate for a long period. When monetization increased and it became more difficult to handle re-coinage (around 1300), the bracteates lost their function as the principal coin. However, for a further two centuries (1300 - 1500) they were used as small change to larger denominations...|$|R
40|$|We {{clarify the}} {{taxonomy}} and nomenclature of several species-group names and the family-group {{name for the}} anticheirine scarabs (Scarabaeidae: Rutelinae: Rutelini), a group that includes nearly 550 species and subspecies in 44 genera and subgenera. These clarifications are necessary due to taxonomic and nomenclatural inaccuracies in recent revisionary works. We provide a list of genera included in the anticheirine scarabs sensu Soula. Numerous nomenclatural changes are necessary due to <b>invalid</b> <b>type</b> designations or misspellings: the valid type species of Aequatoria Arrow is Chlorota associata Waterhouse; the valid type species of Chlorota Burmeister is Rutela terminata Le Peletier de Saint-Fargeau and Audinet-Serville; the valid type species of Dorysthetus Blanchard is Macraspis chlorophana Burmeister; the valid type species of Anticheira Eschscholtz is Scarabaeus virens Drury. Changes to the type species of Anticheira result in new combinations: Anticheira virens virens (Drury), new combination, Anticheira virens bleuzeni (Soula), new combination and Anticheira virens jossi (Soula), new combination. Some anticheirine species names were not associated with species descriptions or type designations, making these names nomina nuda and unavailable: “Chlorota smithi”, “Macraspis cincta guatemalensis”, “Parachlorota equatoriana”, “Parachlorota pardoi”, “Pseudothyridium (Megathyridium) bousqueti”, “Theuremaripa rivae brasiliensis” and “Thyridium cupriventre blanchardi”. Dorysthaetus rufipennis Dejean is a nomen nudum and an unavailable name. We correct numerous misspellings from Soula’s five volumes on anticheirine scarabs and provide a list to avoid propagation of these errors by future researchers. Eighteen names are unavailable infrasubspecifi c names, and thirty-six of Soula’s names were misspelled. These names confuse and obscure ruteline systematics. Lastly, we provide a comprehensive list of infrasubspecific names in the anticheirine scarabs and we establish these as available or unavailable names...|$|E
40|$|Modern {{applications}} contain {{libraries and}} components written by different people {{at different times}} in different languages, often including unsafe languages like C or C++. As a result, one bug, such as a buffer overflow, in any component, can compromise the security and reliability of every other component. To help mitigate these problems, we introduce YARRA, a conservative extension to C with mechanisms for enforcing data integrity and partial safety, even when code is linked against unknown C libraries or binaries. YARRA programmers specify their data integrity requirements by declaring critical data types and ascribing these critical types to important data structures. YARRA guarantees that such critical data is only written through pointers with the given static type. Any attempt to write to critical data through a pointer with an <b>invalid</b> <b>type</b> (perhaps because of a buffer overrun) is detected dynamically. We formalize YARRA’s semantics and prove the soundness of a program logic designed for use with the language. A key con-tribution {{is to show that}} YARRA’s semantics are strong enough to support sound local reasoning and the use of a frame rule, even across calls to unknown, unverified code. We also demonstrate that YARRA’s semantics can be implemented in several different ways, with different performance and pragmatic tradeoffs. In one imple-mentation, we perform a source-to-source program transformation to ensure correct execution. In a second implementation, we do not rely upon having access to the entire source code, but instead use conventional hardware permissions to protect critical data. We eval-uate our implementations using SPEC benchmarks to understand their performance. Additionally, we apply YARRA to four common applications with known non-control data vulnerabilities. We are able to use YARRA to defend against these attacks while sustaining a negligible impact on their end-to-end performance. 1...|$|E
40|$|Abstract Philosophers {{of science}} {{have given up}} on the quest for a silver bullet {{to put an end to}} all pseudoscience, as such a neat formal {{criterion}} to separate good science from its contenders has proven elusive. In the literature on critical thinking and in some philosophical quarters, however, this search for silver bullets lives on in definitions or argumentation schemes, on the basis of which one can identify bad or <b>invalid</b> <b>types</b> of reasoning, abstracting away from the specific content and dialectical context. Such shortcuts for debunking arguments are tempting, but alas, the promise is hardly if ever fulfilled. Different strands of research on the pragmatics of argu-mentation, probabilistic reasoning and ecological rationality have shown that almost every known type of fallacy is a close neighbor to sound inferences or acceptable moves in a debate. Nonetheless, the kernel idea of a fallacy as an erroneous type of argument is still retained by most authors. We outline a destructive dilemma we refer to as the Fallacy Fork: on the one hand, if fallacies are construed as demon-strably invalid form of reasoning, then they have very limited applicability in real life (few actual instances). On the other hand, if our definitions of fallacies ar...|$|R
5000|$|It {{should be}} able to {{showcase}} trends based on KPI values over the period of time and raise alarms when thresholds are crossed (for example alarms could be raised on a) Zero duration CDRs; b) Short duration calls; c) Long duration calls; d)Duration discrepancies; e) <b>Invalid</b> structure code/call <b>types</b> etc.) ...|$|R
40|$|We {{prove that}} for all 1 < p <∞, p not 2, the Lp spaces {{associated}} to two von Neumann algebras M,N are isometrically isomorphic {{if and only if}} M and N are Jordan *-isomorphic. This follows from a noncommutative Lp Banach-Stone theorem: a specific decomposition for surjective isometries of noncommutative Lp spaces. Comment: 14 pages, to appear in J. Funct. Anal. A step in the earlier proof was <b>invalid</b> for finite <b>type</b> I algebra...|$|R
40|$|Philosophers {{of science}} {{have given up}} on the quest for a silver bullet {{to put an end to}} all pseudoscience, as such a neat formal {{criterion}} to separate good science from its contenders has proven elusive. In the literature on critical thinking and in some philosophical quarters, however, this search for silver bullets lives on in the taxonomies of fallacies. The attractive idea is to have a handy list of abstract definitions or argumentation schemes, on the basis of which one can identify bad or <b>invalid</b> <b>types</b> of reasoning, abstracting away from the specific content and dialectical context. Such shortcuts for debunking arguments are tempting, but alas, the promise is hardly if ever fulfilled. Different strands of research on the pragmatics of argumentation, probabilistic reasoning and ecological rationality have shown that almost every known type of fallacy is a close neighbor to sound inferences or acceptable moves in a debate. Nonetheless, the kernel idea of a fallacy as an erroneous type of argument is still retained by most authors. We outline a destructive dilemma we refer to as the Fallacy Fork: on the one hand, if fallacies are construed as demonstrably invalid form of reasoning, then they have very limited applicability in real life. On the other hand, if our definitions of fallacies are sophisticated enough to capture real-life complexities, they can no longer be held up as an effective tool for discriminating good and bad forms of reasoning. As we bring our schematic “fallacies” in touch with reality, we seem to lose grip on normative questions. Even approaches that do not rely on argumentation schemes to identify fallacies fail to escape the Fallacy Fork, and run up against their own version of i...|$|R
5000|$|The genus was {{originally}} proposed by Czech mycologist Albert Pilát in 1941, but this publication is <b>invalid</b> because a <b>type</b> species was not designated, {{contrary to the}} rules of botanical nomenclature. He published the genus validly in 1953 with two species: Truncospora oboensis, and the type, T. ochroleuca. Leif Ryvarden placed the genus in synonymy with Perenniporia in 1972, but molecular studies have shown that Truncospora is distinct genetically, and comprises part of the [...] "core polyporoid clade", a grouping of fungi roughly equivalent to the family Polyporaceae.|$|R
40|$|This paper {{makes two}} {{contributions}} to the empirical matching literature. First, {{a recent study by}} Anderson and Burgess (2000) testing for endogenous competition among job seekers in a matching frame-work, is replicated with a richer and more accurate data set for Germany. Their results are confirmed and found to be surprisingly robust. Second, the matching framework is augmented by endogenous strategic hiring behavior on the side of vacancyposting firms. Neglecting job competition, the relevance of strategic hiring is shown using the same empirical strategy. At the same time, the test is shown to be <b>invalid</b> if both <b>types</b> of endogenous behavior are presen...|$|R
5000|$|The type {{species of}} [...] "Njalila", N. nasuta, was {{originally}} assigned to Dixeya, which was named by German paleontologist Friedrich von Huene in 1950 from Tanzania, Malawi, and Zambia. The type species of Dixeya, D. quadrata, was reclassified {{as a species}} of Aelurognathus in 1970. Although a second species had been established before the revision, the genus name Dixeya was considered <b>invalid</b> because its <b>type</b> belonged to another genus. The other species of Dixeya, D. nasuta, was not considered synonymous with Aelurognathus. It {{was placed in the}} genus Arctognathus. Moreover, since only the holotype specimen of D. quadrata was assigned to Aelurognathus, other specimens of the species were considered to belong to Arctognathus.|$|R
50|$|A {{large number}} of compile-time checks are {{supported}} to help avoid bugs {{that would not be}} detectable until run-time in some other languages or would require explicit checks {{to be added to the}} source code. For example, the syntax requires explicitly named closing of blocks to prevent errors due to mismatched end tokens. The adherence to strong typing allows detection of many common software errors (wrong parameters, range violations, <b>invalid</b> references, mismatched <b>types,</b> etc.) either during compile-time, or otherwise during run-time. As concurrency is part of the language specification, the compiler can in some cases detect potential deadlocks. Compilers also commonly check for misspelled identifiers, visibility of packages, redundant declarations, etc. and can provide warnings and useful suggestions on how to fix the error.|$|R
40|$|Omeka 2. 0. 1 is {{the first}} {{maintenance}} release for the 2. 0 series. It was released on February 21, 2013. Bugs Fixed Error messages from upgrading plugins were impossible to see Adding new checkbox inputs to an admin element form would improperly affect the HTML editor status (# 480, reported by Iwe Muiser) Spurious notice that triggered when loading views for some plugins (# 481, # 484, reported and fix contributed by Dave Widmer) Installer error on some systems when guessing ImageMagick path (# 482) The new version indicator was missing (# 485) New <b>invalid</b> Item <b>Types</b> were partially added (# 487, reported by Jeremy Boggs) Localization Internationalized the new search results page (reported and code contributed by Matti Lassila, # 474) Internationalized the item citation output (reported and code contributed by Matti Lassila, # 476) New translations for Tamil and Indonesian Many updates to the existing translations Addon Updates Plugins Exhibit Builder is updated to version 2. 0. 1, fixing issues with upgrading and duplicate page slugs. Coins is updated to version 2. 0. 1, resolving high memory and database usage problems with the previous version. Themes Thanks, Roy and Seasons are both updated to 2. 0. 1...|$|R
40|$|It is {{generally}} considered as self evident that the lifetime of our vacuum in the landscape of string theory cannot be much shorter than the current age of the universe. Here I show why this lower limit is <b>invalid.</b> A certain <b>type</b> of ``parallel universes'' is a necessary consequence of the string-landscape dynamics and might well allow us to ``survive'' vacuum decay. As a consequence our stringy vacuum's lifetime is empirically unconstrained and could be very short. Based on this counter-intuitive insight I propose a novel type of laboratory experiment that searches for an apparent violation of the quantum-mechanical Born rule by gravitational effects on vacuum decay. If the lifetime of our vacuum should {{turn out to be}} shorter than 6 x 10 ^{- 13 } seconds such an experiment is sufficiently sensitive to determine its value with state-of-the-art equipment. Comment: 13 pages, 2 figures, proposes a laboratory experimen...|$|R
40|$|We {{measured}} the fracture toughness of MDF panels with two different densities by using crack propagation experiments and energy-based fracture mechanics. The two challenges were {{to identify the}} energy associated with crack propagation and to measure actual crack lengths. Fracture energy calculations needed to account for crack-plane interference effects. Crack growth detection required digital image correlation (DIC) methods. The toughness of MDF depended on density and varied from Gc = 2650 J/m 2 for lower density to Gc = 5680 J/m 2 for higher density. By comparison of MDF experiments to prior experiments on unidirectional carbon fiber/polysulfone composites, neat polysulfone polymer, and Corian ® sheet product, particulate-filled composites, we derived a general scheme for fracture characterization of composites. The standard fracture mechanics methods in ASTM E 399 are <b>invalid</b> for certain <b>types</b> of composite cracking processes. For these materials, ASTM methods can be replaced by energy methods. The key experiments needed to determine when ASTM E 399 is invalid and which energy methods are appropriate are described...|$|R
5000|$|The processor(s) {{topology}} {{exposed by}} leaf Bh is a hierarchical one, {{but with the}} strange caveat that the order of (logical) levels in this hierarchy doesn't necessarily correspond the order in the physical hierarchy (SMT/core/package). However, every logical level can be queried as an ECX subleaf (of the Bh leaf) for its correspondence to a [...] "level type", which can be either SMT, core, or [...] "invalid". The level id space starts at 0 and is continuous, meaning that if a level id is invalid, all higher level ids will also be <b>invalid.</b> The level <b>type</b> is returned in bits 15:08 of ECX, {{while the number of}} logical processors at the level queried is returned in EBX. Finally, the connection between these levels and x2APIC ids is returned in EAX4:0 as the number of bits that the x2APIC id must be shifted in order to obtain a unique id at the next level.|$|R
5000|$|There are {{two types}} of error that can occur using {{hypothesis}} testing, rejecting a valid model called type I error or [...] "model builders risk" [...] and accepting an <b>invalid</b> model called <b>Type</b> II error, β, or [...] "model user's risk". The level of significance or α is equal the probability of type I error. If α is small then rejecting the null hypothesis is a strong conclusion. For example, if α = 0.05 and the null hypothesis is rejected there is only a 0.05 probability of rejecting a model that is valid. Decreasing the probability of a type II error is very important. The probability of correctly detecting an invalid model is 1 - β. The probability of a type II error is dependent of the sample size and the actual difference between the sample value and the observed value. Increasing the sample size decreases the risk of a type II error.|$|R
40|$|Published by and {{copyright}} of Progress in Electromagnetics Research M. The definitive {{version of}} this article is available at: [URL] this paper, the performance of conventional Uniplanar Compact Photonic Band Gap (UC-PBG) structures is investigated under different bending extents. The structure under study is operated as an Artificial Magnetic Conductor (AMC) in which performance is mainly characterized by its resonant frequency and bandwidth. Modelling and numerical analysis have been carried out using CST Microwave Studio simulation software which is based on Finite Integration Technique (FIT). Results show that different bending extents affect the AMC's performance which is specified by a shift to higher resonant frequencies and bandwidth degradation when the degree of bending is increased. Furthermore, we point out some important simulation tips to avoid inaccurate and/or <b>invalid</b> results. This <b>type</b> of study is important to evaluate the performance of such structures for conformal applications. To the best of the authors' knowledge, such type of systematic study is being reported for the first time. This research was funded in part by the National Science Foundation Grants (NSF EPSCoR) EPS- 0701890 and CNS- 0619069...|$|R
40|$|Feldmann (1970 : 249), {{quoting the}} results of Hustede (1960), who had shown that Bryopsis halymeniae Berthold (1882 : 497) was the {{gametophyte}} of a Derbesia sp. 1, pointed out that this species could {{not belong to the}} genus Bryopsis differing from it in chloroplasts with no pyrenoids and gametes without a stigma. On that basis, as well as because of its peculiar life cycle, he stated that Bryopsis halymeniae should be considered the type of a new genus: Bryopsidella. Even though Feldmann (1970) did not explicitely propose the new combination Bryopsidella halymeniae, such a binomial was reported by Gallardo et al. (1993 : 412, note 60) and by Boudouresque & Perret-Boudouresque (1987 : 83). The genus Bryopsidella, when proposed by Feldmann (1970), was invalid because no diagnosis was provided as required by Art. 38. 1 of Melbourne Code (McNeill et al. 2012). Moreover, it was <b>invalid</b> because the <b>type</b> species is not a validly published name as required by Art. 10. 3 of Melbourne Code (McNeill et al. 2012). In fact, Bryopsis halymeniae is invalid because it is accompanied only by habitat and locality information and not by a description or diagnosis, as required by Art. 38. 1 of Melbourne Code (McNeill et al. 2012) (Table 1). Moreover, Art. 38. 10 cannot be applied to that species in that no figures were provided by Berthold (1882). The fact that the species was invalid was not recognized in the Index Nominum Algarum [[URL] nor in AlgaeBase (Guiry & Guiry, 2014). Conversely, the invalid status of that species name was pointed out by Wynne (2005 : 252), who however, attributed Bryopsis halymeniae to “Berthold ex Funk (1927 : 330, fig. 17 f) ”. However, Funk gave no diagnosis of that species eithe...|$|R
40|$|Drug {{resistance}} in tuberculosis {{is a major}} public health challenge in developing countries. The limited data available on drug {{resistance in}} extra pulmonary tuberculosis stimulated us to design our study on anti-tuberculosis drug resistance pattern in cases of extra pulmonary tuberculosis in a tertiary referral hospital of North India. We performed Geno Type MTBDRplus assay in comparison with conventional drug susceptibility testing by proportion method to study the mutation patterns in rpoB, katG and inhA genes. A total of 510 extra pulmonary samples were included in this study. After the smear microscopy, all the specimens were subjected for culture on Lowenstein Jensen (LJ) media. Phenotypic drug susceptibility testing (DST) was performed on LJ media for all the MTB isolates and compared {{with the results of}} Geno Type MTBDRplus assay which was performed with the DNA isolated from the culture by conventional method. Of 510 specimens cultured, the total culture positivity obtained was 11. 8 % (60) encompassing 54 (10. 6 %) Mycobacterium tuberculosis and 6 (1. 2 %) non-tubercular mycobacteria (NTM). DST results by Geno Type MTBDRplus assay and solid culture methods were compared in 51 MTB isolates excluding the two Rif indeterminate and one <b>invalid</b> test. Geno <b>Type</b> MTBDRplus accurately identified 13 of 14 rifampicin-resistant strains, 14 of 15 isoniazid-resistant strains and 13 of 14 as multi drug resistant tuberculosis (MDR-TB) in comparison with conventional method. Sensitivity and specificity were 92. 86 % and 97. 30 % respectively for detection of RIF resistance, 93. 33 % and 94. 44 % respectively for detection of INH resistance, 92. 86 % and 97. 30 % respectively for detection of MDR-TB, while the overall concordance of Geno Type MTBDRplus assay with conventional DST was 94. 11 %. The turn-around time for performing Geno Type MTBDRplus assay test was 48 hours. The problem of MDR in extra pulmonary tuberculosis (EPTB) cannot be overlooked and due attention on patients should be given. Routine use of Geno Type MTBDRplus assay for the diagnosis of MDR-EPTB can substantially reduce the time between diagnosis and drug therapy. Culture along with Geno Type MTBDRplus assay could be a solution for rapid and accurate diagnosis of MDR-TB in low bacillary non sputum specimens...|$|R
40|$|Bugs Fixed Certain sorting options failed on MySQL 5. 7 (# 684) Tabbing on the admin {{interface}} {{could be}} broken when loading a page with a fragment specified Unselected record {{types in the}} search settings had the wrong IDs (# 698, contributed by @paxed) Collections show pages had the wrong title The tag interface showed an incorrect number of total tags (# 708, contributed by @luku) HTML 5 video embeds could end with the wrong closing tag (# 710, contributed by @luku) The item details toggle didn't work correctly on the first click (# 715, contributed by @luku) The API results per page label {{was associated with the}} wrong control for accessibility purposes Element texts could be deleted if they were saved multiple times for the same item in a single request <b>Invalid</b> record <b>types</b> on sitewide search could raise a notice (# 754) Errors that occurred when uninstalling a plugin were incorrectly hidden from view (# 740) Resources loaded in a different order in background jobs than in the web interface (# 725) An error occurred when printing the maximum file upload size on the Item form with some locales (like es_CO) (# 756) Improvements Batch Edit All: Batch editing can now edit an entire search result's worth of items, even if split across several pages (contributed by @Daniel-KM) New Item Advanced Search options AND/OR support for combining multiple searches "starts with" and "ends with" search types (# 688, contributed by @luku) "matches" regular expression search type (# 695, contributed by @Daniel-KM) [No Collection] is now an option for finding items that don't belong to a collection (# 693, contributed by @Daniel-KM) (# 746) Use Square Thumbnails appearance setting: Admins can now select whether themes use square or "normal" thumbnails by default without editing the theme files (# 763) Warnings presented to users when navigating away from pages with unsaved changes (# 771, thanks also to @Daniel-KM for # 722 and @luku for # 753) Additional wider version of admin theme added (# 751, contributed by @luku) New autoloader prevents many "white-screen" errors and otherwise consumed error messages from autoloaded files Site title on login page links to public side, not admin (# 646, contributed by @miniol) Admin collections show pages now include the list of output formats Improved ARIA labels for accessibility New "display_title" property to simplify getting a title suitable for use in labels and headings User zooming is now enabled for mobile devices in the admin (# 718, contributed by @luku) The Item API now allows for simple search Administrators can now allow the id attribute in the HTML Security Settings An option to choose the admin theme is now shown if the user has installed or created an alternative admin theme New ignore_unknown option for metadata() to allow the call to fail silently if Omeka cannot find the Element Set or Element the call refers to (# 712) The delete confirmation dialog title is now translatable (# 752, contributed by @luku) Mime type detection for "text" filetypes is improved (# 757, contributed by @Daniel-KM) Improved theme selection admin page display code (# 734, contributed by @Daniel-KM) Added item_next and item_previous filters for altering Omeka's default "Next Item" and "Previous Item" links (# 743) Changes The theme configuration page now redirects back to itself on save, not to the Themes page (# 744, contributed by @luku) TinyMCE's validation has been loosened (# 727, contributed by @doana) TinyMCE's conversion of "special characters" to HTML entities is restricted to otherwise-invisible whitespace only Shell command names are escaped with escapeshellarg, not escapeshellcmd. In particular, this should improve treatment of paths containing spaces as is common on Windows "Add Input" buttons on element form are now "button" type buttons instead of "submit" type, so they no longer submit the form in the case of some scripting problem Collections no longer attempt to show the "Text" Item Type Metadata element when showing a preview of the items in the collection The red top border on admin content is now simply red instead of being made out of an image The admin record views now check for the specific "delete" privilege before showing the Delete button (this affects only users who alter the default ACL) (# 750, contributed by @luku) The installer now checks for the "dom" and "filter" extensions before allowing install (# 673) External Libraries Zend Framework 1. 12. 20 getID 3 1. 9. 12 jQuery 1. 12. 4 TinyMCE 3. 5. 12 Bundled Plugins Exhibit Builder 3. 3. 3 Simple Pages 3. 0. 8 Bundled Themes Thanks, Roy 2. 4 Berlin 2. 4 Seasons 2. ...|$|R
40|$|The {{purpose of}} this {{dissertation}} was to empirically investigate the Type I error and power rates of four data transformations that produce a variety of non-normal distributions. Specifically, the transformations investigated were (a) the g-and-h, (b) the generalized lambda distribution (GLD), (c) the power method, and (d) the Burr families of distributions {{in the context of}} between-subjects and within-subjects analysis of variance (ANOVA). The traditional parametric F tests and their nonparametric counterparts, the Kruskal-Wallis (KW) and Friedman (FR) tests, were selected to be used in this investigation. The four data transformations produce non-normal distributions that have either valid or invalid probability density functions (PDFs). Specifically, the data generating procedures will produce distributions with valid PDFs if and only if the transformations are strictly increasing - otherwise the distributions are considered to be associated with invalid PDFs. As such, the primary objective {{of this study was to}} isolate and investigate the behaviors of the four data transformation procedures themselves while holding all other conditions constant (i. e., sample sizes, effect sizes, correlation levels, skew, kurtosis, random seed numbers, etc. all remain the same). The overall results of the Monte Carlo study generally suggest that when the distributions have valid probability density functions (PDFs) that the Type I error and power rates for the parametric (or nonparametric) tests were similar across all four data transformations. It is noted that there were some dissimilar results when the distributions were very skewed and near their associated boundary conditions for a valid PDF. These dissimilarities were most pronounced in the context of the KW and FR tests. In contrast, when the four transformations produced distributions with <b>invalid</b> PDFs, the <b>Type</b> I error and power rates were more frequently dissimilar for both the parametric F and nonparametric (KW, FR) tests. The dissimilarities were most pronounced when the distributions were skewed and heavy-tailed. For example, in the context of a parametric between subjects design, four groups of data were generated with (a) sample sizes of 10, (b) standardized effect size of 0. 50 between groups, (c) skew of 2. 5 and kurtosis of 60, (d) power method transformations generating distributions with invalid PDFs, and (e) g-and-h and GLD transformations both generating distributions with valid PDFs. The power results associated with the power method transformation showed that the F-test (KW test) was rejecting at a rate of. 32 (. 86). On the other hand, the power results associated with both the g-and-h and GLD transformations showed that the F-test (KW test) was rejecting at a rate of approximately. 19 (. 26). The primary recommendation of this study is that researchers conducting Monte Carlo studies in the context described herein should use data transformation procedures that produce valid PDFs. This recommendation is important to the extent that researchers using transformations that produce invalid PDFs increase the likelihood of limiting their study to the data generating procedure being used i. e. Type I error and power results may be substantially disparate between different procedures. Further, it also recommended that g-and-h, GLD, Burr, and fifth-order power method transformations be used if it is desired to generate distributions with extreme skew and/or heavy-tails whereas third-order polynomials should be avoided in this context...|$|R

