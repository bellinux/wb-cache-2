4|785|Public
50|$|The BMP file format, {{also known}} as bitmap image file or <b>device</b> <b>independent</b> <b>bitmap</b> (DIB) file format or simply a bitmap, is a raster {{graphics}} image file format used to store bitmap digital images, independently of the display device (such as a graphics adapter), especially on Microsoft Windows and OS/2 operating systems.|$|E
50|$|RTF {{supports}} {{inclusion of}} JPEG, Portable Network Graphics (PNG), Enhanced Metafile (EMF), Windows Metafile (WMF), Apple PICT, Windows Device-dependent bitmap, Windows <b>Device</b> <b>Independent</b> <b>bitmap</b> and OS/2 Metafile picture types in hexadecimal (the default) or binary format in a RTF file. Not {{all of these}} picture types are supported in all RTF readers. When a RTF document is opened in software that {{does not support the}} picture type of an inserted picture, such picture is not displayed at all.|$|E
50|$|Win32 {{introduced}} {{support for}} storing icon images {{of up to}} 16.7 million colors (Truecolor) and up to 256x256 pixels in dimensions. Windows 95 also introduced a new <b>Device</b> <b>Independent</b> <b>Bitmap</b> (DIB) engine. However, 256 color was the default icon color depth in Windows 95. It was possible to enable 65535 color (Highcolor) icons by either modifying the Shell Icon BPP value in the registry or by purchasing Microsoft Plus! for Windows 95. The Shell Icon Size value allows using larger icons in place of 32×32 icons and the Shell Small Icon Size value allows using custom sizes in place of 16×16 icons. Thus, a single icon file could store images of any size from 1×1 pixel up to 256×256 pixels (including non-square sizes) with 2 (rarely used),16, 256, 65535, or 16.7 million colors; but the shell could not display very large sized icons. The notification area of the Windows taskbar was limited to 16 color icons by default until Windows Me when it was updated to support high color icons.|$|E
50|$|In computing, WinG (pronounced Win Gee) is an {{application}} programming interface that is a port of Windows 95's <b>Device</b> <b>Independent</b> <b>Bitmaps</b> to provide faster graphics performance on Windows 3.x operating environments, and was initially positioned {{as a way to}} help game developers more easily port their DOS games to Microsoft Windows, although it was quickly discontinued in favor of DirectX.|$|R
5000|$|... misc-fixed is a {{collection}} of monospace bitmap fonts that is distributed with the X Window System. It is a set of <b>independent</b> <b>bitmap</b> fonts which—apart from all being sans-serif fonts—cannot be described as belonging to a single font family. The misc-fixed fonts were the first fonts available for the X Window System. Their individual origin is not attributed, but it is likely that many of them were created in the early or mid 1980s as part of MIT's Project Athena, or at its industrial partner, DEC. The misc-fixed fonts are in the public domain.|$|R
50|$|XDIME is an xHTML <b>Device</b> <b>Independent</b> Markup Extensions. The acronym {{originally}} {{stood for}} XHTML with <b>Device</b> <b>Independent</b> Markup Extensions. It is a <b>device</b> <b>independent</b> authoring language. It allows {{content to be}} created once but delivered to the myriad traditional and mobile devices that can connect to the Web. Device-specific characteristics of a web site are captured separately {{as a set of}} policies that tailor the user experience to the particular type of device being used. Page layout, styling and media, such as images, are examples of resources that are controlled by policies. Style-related policies make use of the W3C CSS 2 specification.|$|R
30|$|We {{obtain the}} {{spectrum}} analyzer traces {{for the two}} wireless signals between which the I-factor is to be calculated. Because I-factor {{is defined as the}} ratio of the received energy on a receiver channel to the radiated energy on a transmitter (interferer) channel, we have to obtain the interferer’s power spectral distribution using the spectrum analyzer. In our current implementation, we obtain, store, and process this information with <b>device</b> <b>independent</b> <b>bitmap</b> files. We use bitmap files because the spectrum analyzer available to us can export this data in bitmap format; however any other form of representation for the power spectral density data can be used with our method.|$|E
5000|$|Colour Engineering: Achieving <b>Device</b> <b>Independent</b> Colour, Edited by Phil Green andLindsay MacDonald ...|$|R
40|$|We {{show that}} in <b>device</b> <b>independent</b> quantum key {{distribution}} protocols the privacy of randomness is of crucial importance. For sublinear test sample sizes even the slightest guessing probability by an eavesdropper will completely compromise security. We show that a combined attack exploiting test sample and measurement choices compromises the security even with a linear size test sample and otherwise <b>device</b> <b>independent</b> security considerations. We explicitly derive the sample size needed to retrieve security {{as a function of}} the randomness quality. We demonstrate that exploiting features of genuinely higher dimensional systems one can reduce this weakness and provide <b>device</b> <b>independent</b> security more robust against weak randomness sources. Comment: 9 pages, 2 figure...|$|R
40|$|The goal of {{a general}} purpose color scanner is to {{determine}} the color of an object in a <b>device</b> <b>independent</b> color space, such as the CIE XYZ tristimulus space. Raw sensor measurements from scanners rarely correspond to CIE XYZ due to design and realizability constraints. The conversion of data from scanner RGB to a <b>device</b> <b>independent</b> color space introduces errors due to the non-colorimetric nature of the scanner and due to the noise present in measurements. This paper analyzes the relative contributions of these two components to color errors. This analysis allows the designer to determine the most cost effective device meeting required specifications. Keywords: color scanners, scanner design, <b>device</b> <b>independent</b> color, color filters. ...|$|R
40|$|Experimental {{detection}} of entanglement of an arbitrary state {{of a given}} bipartite system is crucial for exploring many areas of quantum information. But such a detection should be made in a <b>device</b> <b>independent</b> way if the preparation process {{of the state is}} considered to be faithful, in order to avoid {{detection of}} a separable state as entangled one. The recently developed scheme of detecting bipartite entanglement in a measurement <b>device</b> <b>independent</b> way [Phys. Rev. Lett 110, 060405 (2013) ] does require information about the state. Here by using Auguisiak et al. 's universal entanglement witness scheme for two-qubit states [Phys. Rev. A 77, 030301 (2008) ], we provide a universal detection scheme for two-qubit states in a measurement <b>device</b> <b>independent</b> way. We provide a set of universal witness operators for detecting NPT-ness(negative under partial transpose) of states in a measurement <b>device</b> <b>independent</b> way. We conjecture that no such universal entanglement witness exists for PPT(positive under partial transpose) entangled states. We also analyse the robustness of some of the experimental schemes of detecting entanglement in a measurement <b>device</b> <b>independent</b> way under the influence of noise in the inputs (from the referee) {{as well as in the}} measurement operator as envisazed in ref. [Phys. Rev. Lett 110, 060405 (2013) ]. Comment: Revised version; 14 pages; Latex; five eps figure; comments are welcom...|$|R
5000|$|A <b>device</b> <b>independent</b> {{architecture}} {{that allows the}} application to run on different devices without any change in application code.|$|R
5000|$|It is {{platform}} and <b>device</b> <b>independent</b> (because it {{is a virtual}} machine-based technology that runs on Mac OS X, Windows, and Linux) ...|$|R
40|$|Today’s web {{services}} {{not only have}} to be flexible, but also have to be <b>device</b> <b>independent</b> to support mobile devices such as WAP and PDAs. Supporting multiple web formats (e. g., WML, HTML, etc.) is still an open challenge. Most sites have to provide a separate application for every format and reuse is not common. We are working on a methodology and a tool to support the web developer in building flexible, <b>device</b> <b>independent</b> {{web services}}. 1. Introduction an...|$|R
50|$|Supplemental {{specifications}} provides <b>device</b> <b>independent</b> {{interface between}} application software and Super VGA hardware. Function numbers are assigned by VESA Software Standards Committee (SSC).|$|R
40|$|Having a {{flexible}} and expandable system of interconnecting modules which create <b>device</b> <b>independent</b> color image processing chains {{is a powerful}} tool for color science research and education. The objective of this research was to see if there existed a commercially available application which would provide the framework for such a system, learn that application, build a system of <b>device</b> <b>independent</b> imaging modules, and document the process so future developer 2 ̆ 7 s could easily expand the system. The Numerical Algorithms IRIS Explorer software proved to be the best fit for the system since it offered an intuitive user interface, a powerful set of default modules, and the capabilites for expansion through new module creation. With Explorer, a system of <b>device</b> <b>independent</b> color imaging modules were built, tested, and the module building process documented in this thesis meeting the objectives of the research...|$|R
50|$|The latest version, XDIME 2, {{is based}} on the W3C <b>Device</b> <b>Independent</b> Authoring Language (DIAL) specification. DIAL itself {{includes}} some of the latest W3C specifications, including XHTML 2.|$|R
5000|$|Nicolas Gisin {{contributed to}} {{relating}} non-locality {{to the security}} of quantum key distribution. This opened an entirely new field of research known as <b>Device</b> <b>Independent</b> Quantum Information Processing (DI-QIP).|$|R
40|$|How {{to remove}} {{detector}} side channel attacks {{has been a}} notoriously hard problem in quantum cryptography. Here, we propose a simple {{solution to this problem}} [...] -*measurement* <b>device</b> <b>independent</b> quantum key distribution. It not only removes all detector side channels, but also doubles the secure distance with conventional lasers. Our proposal can be implemented with standard optical components with low detection efficiency and highly lossy channels. In contrast to the previous solution of full <b>device</b> <b>independent</b> QKD, the realization of our idea does not require detectors of near unity detection efficiency in combination with a qubit amplifier (based on teleportation) or a quantum non-demolition measurement of the number of photons in a pulse. Furthermore, its key generation rate is many orders of magnitude higher than that based on full <b>device</b> <b>independent</b> QKD. The results show that long-distance quantum cryptography over say 200 km will remain secure even with seriously flawed detectors. Comment: 7 pages, two-column format, 4 figures in tota...|$|R
50|$|As {{part of the}} {{original}} compiler, a <b>device</b> <b>independent</b> terminal I/O module was created to allow use of any serial terminal (similar to Turbo Pascal's CRT unit), which remains to this day.|$|R
40|$|Porting {{computer}} games to new platforms {{can be a}} cumbersome work, since many parts of a game is platform specific. This {{is due to the}} fact that game developers try to maximise user's experience when playing a computer game, and to make the most of every device the game runs on. We use game and <b>device</b> <b>independent</b> interaction acts to describe user-game interaction for networked games that are accessed from many different <b>devices.</b> A <b>device</b> <b>independent</b> description of the game interactivity allows for remote access from different (semi) -generic interaction engines, as well as device optimisation for the same game application...|$|R
50|$|ZBasic {{featured}} <b>device</b> <b>independent</b> graphics: {{the same}} compiled code could work on different display resolutions and colors, {{and even in}} text mode. Original PC versions included graphical support up to EGA for MS-DOS.|$|R
5000|$|... (Generated via texi2dvi.) The <b>device</b> <b>independent</b> {{file format}} is output by the TeX {{typesetting}} system, {{and can be}} used for generating device-specific commands that can be viewed or printed; for example, translation to PostScript (ps files).|$|R
40|$|It {{has been}} pointed out that current {{protocols}} for <b>device</b> <b>independent</b> quantum key distribution can leak key to the adversary when devices are used repeatedly and that this issue has not been addressed. We introduce {{the notion of an}} insider-proof channel. This allows us to propose a means by which devices with memories could be reused from one run of a <b>device</b> <b>independent</b> quantum key distribution protocol to the next while bounding the leakage to Eve, under the assumption that one run of the protocol could be completed securely using devices with memories. Comment: 20 pages, version 2 : new presentation introducing the insider-proof channel as a cryptographic elemen...|$|R
40|$|We {{study the}} {{relation}} between semi and fully <b>device</b> <b>independent</b> protocols. As a tool, we use the correspondence between Bell inequalities and dimension witnesses. We present a method for converting the former into the latter and vice versa. This relation provides us with interesting results for both scenarios. First, we find new random number generation protocols with higher bit rates for both the semi and fully <b>device</b> <b>independent</b> cases. As a byproduct, we obtain whole new classes of Bell inequalities and dimension witnesses. Then, we show how optimization methods used in studies on Bell inequalities can be adopted for dimension witnesses. Comment: published versio...|$|R
5000|$|A {{part of the}} X colour {{system is}} the X Color Management System (xcms). This system was {{introduced}} with X11R6 Release 5 in 1991. This system consists of several additional features in xlib, found in the Xcms* series of functions. This system defines <b>device</b> <b>independent</b> color schemes which can be converted into device dependent RGB systems. The system consists of the xlib Xcms* functions and as well the X Device Color Characterization Convention (XDCCC) which describes how to convert the various <b>device</b> <b>independent</b> colour systems into device dependent RGB colour systems. This system supports the CIEXYZ, xyY, CIELUV and CIELAB and as well the TekHVC colour systems.http://insar.stanford.edu/~lharcke/programming/Xcms/, http://tronche.com/gui/x/xlib/color/ ...|$|R
5000|$|A strong <b>device</b> <b>independent</b> input/output {{model that}} allows the same {{commands}} and programs to access terminals, disk files, printers, magnetic and paper tapes, card readers and punches, floppy disks, network hosts, and an audio response unit (ARU).|$|R
50|$|The {{terminology}} <b>device</b> <b>independent</b> {{file format}} (DVI) is the file format of Donald Knuth's pioneering TeX system. The content {{of such a}} file can be interpreted at any resolution without any artifacts, even at very high resolutions not currently in use.|$|R
50|$|Because CMS {{programs}} and utilities don't provide a <b>device</b> <b>independent</b> stdin and stdout interface, CMS Pipelines {{has a built-in}} library of programs that can be called in a pipeline specification. These built-in programs interface to the operating system, and perform many utility functions.|$|R
50|$|The <b>Device</b> <b>Independent</b> X (DIX) is {{the part}} of the X.Org Server that interacts with clients and {{implements}} software rendering. Basically everything in the server except for the hw/ directory. The main loop and the event delivery are part of the DIX.|$|R
5000|$|Textform, a text-processing program {{developed}} at the University of Alberta's Computing Centre to support <b>device</b> <b>independent</b> output {{to a wide range}} of devices from line printers, to the Xerox 9700 page printers, to advanced phototypesetting equipment using fixed width and proportional fonts.|$|R
40|$|Characterization and {{estimation}} of <b>device</b> <b>independent</b> color co-ordinates of scanned or photographic images of through empirical models {{is a typical}} issue for commercial desktop scanners and cameras. As a domain of complex problem for optimising suitable color model to evaluate textiles and paints, we investigated the effect of different DPI and <b>device</b> <b>independent</b> color coordinate selection for color Characterization using 140 color patch standards of SGA Colorchecker on Fabric Eye D 2000 scanner. This paper extensively discusses the polynomial regression and neural network characterization techniques and their respective model performances in order to relate typical scanning devices to spectrophotometer i. e., get CIE XYZ/ L*a*b*/L*c*h* from RGB values of scanned image of for D 65 10 illuminant and observer. Department of ComputingInstitute of Textiles and Clothin...|$|R
40|$|In this work, {{we propose}} <b>device</b> <b>independent</b> true random numbers {{generation}} protocols based on non-inequality paradoxes such as Hardy's and Cabello's non-locality argument. The efficiency of generating randomness in our protocols are {{far better than}} any other proposed protocols certified by CHSH inequality or other non-locality test involving inequalities. Thus, highlighting non-inequality paradox as an important resource for <b>device</b> <b>independent</b> quantum information processing in particular generating true randomness. As a byproduct, we find that the non-local bound of the Cabello's argument with arbitrary dimension {{is the same as the}} one achieved in the qubits system. More interestingly, we propose a new dimension witness paradox based on the Cabello's argument, which can be used for constructing semi-device-independent true random numbers generation protocol...|$|R
40|$|We {{provide a}} new {{extension}} of entanglement witnesses for C^d_ 1 ⊗C^d_ 2 systems. Our construction preserves {{the properties of}} indecomposability and spanning property of entanglement witnesses. We show how our concept of extended entanglement witnesses is connected {{with the idea of}} measurement <b>device</b> <b>independent</b> entanglement witnesses...|$|R
5000|$|... dvips is a {{computer}} program that converts the <b>Device</b> <b>Independent</b> file format (DVI) output of TeX typography into a printable or otherwise presentable form. [...] dvips was written by Tomas Rokicki to produce printable PostScript files from DVI input, and is now commonly used for general DVI conversion.|$|R
40|$|ADIS (Accessibility and Device Independence System) is {{a system}} capable of {{generating}} accessible and <b>device</b> <b>independent</b> hypertext structures out of a single data repository. The system helps authors and maintainers of content in hypertext structure to handle accessibility and device independence without much effort. To achieve accessibility of websites ADIS computes an accessible version for every webpage. Device independence is achieved by means of content selection according to the client’s capabilities. ADIS additionally delivers an accessible version {{which can be used}} on all devices. ADIS is based on several free available tools and can be used to flexibly generate accessible and/or <b>device</b> <b>independent</b> content. A first version of ADIS is available in June 2005, the system will be finalized in December 2005 – thus ADIS is still work in progress...|$|R
