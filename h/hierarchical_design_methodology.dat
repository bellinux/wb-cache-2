11|10000|Public
50|$|Intel {{supports}} partial reconfiguration {{of their}} FPGA devices on 28 nm {{devices such as}} Stratix V, and on the 20 nm Arria 10 devices. The Intel FPGA partial reconfiguration flow for Arria 10 {{is based on the}} <b>hierarchical</b> <b>design</b> <b>methodology</b> in the Quartus Prime Pro software where users create physical partitions of the FPGA that can be reconfigured at runtime while the remainder of the design continues to operate. The Quartus Prime Pro software also support hierarchical partial reconfiguration and simulation of partial reconfiguration.|$|E
40|$|Summary. A {{practical}} {{design of}} non-trivial rule-based systems requires a systematic, structured and consistent approach. The paper focuses on selected issues in RBS knowledge engineering. Some ideas on combining knowledge engineering with software engineering are discussed. Furthermore, results of RBS design tools survey are enclosed. In the paper an original {{design and implementation}} methodology for RBS is also presented. It has been developed in the Mirella project. It is a top-down <b>hierarchical</b> <b>design</b> <b>methodology,</b> based on new knowledge representation methods (XTT and ARD), on-line logical system analysis in Prolog, and XMLbased knowledge encoding. Basing on the experience with XTT-based methodology, as well as tools supporting it, the paper discusses an extended <b>hierarchical</b> <b>design</b> <b>methodology</b> for RBS. A preview of the Hekate project, which aims at developing a hybrid knowledge engineering methodology is also given. ...|$|E
40|$|Nonpareil PublishersIn {{this paper}} we {{consider}} the problem of conflict avoidance for autonomous systems using a hierarchical control strategy that we establish using the notion of predicate consistent abstractions. We apply our proposed <b>hierarchical</b> <b>design</b> <b>methodology</b> to the case when a number of autonomous vehicles are asked to approach a single terminal in a computationally feasible, yet safe and orderly manner...|$|E
40|$|Embedded systems {{composed}} of {{hardware and software}} components are designed to interact with a physical environment in real-time {{in order to fulfill}} control objectives and system specifications. In this paper, we address the complex design challenges in embedded software by focusing on predictive and systematic <b>hierarchical</b> <b>design</b> <b>methodologies</b> which promote system verification and validation. First, we advocate a mix of top-down, <b>hierarchical</b> <b>design</b> and bottom-up, component-based design for complex control systems. Second, it is our point of view that at the level closest to the environment under control, the embedded software needs to be time-triggered for guaranteed safety; at the higher levels, we advocate an asynchronous hybrid controller design. We briefly illustrate our approach through an embedded software design for the control of a group of autonomous vehicles...|$|R
40|$|Pareto-optimal {{performance}} fronts {{have gained}} popularity as {{a representation of}} performance trade-offs of electronic circuits. They are also essential to support efficient bottom-up <b>hierarchical</b> <b>design</b> <b>methodologies.</b> Being such {{a key element in}} these methodologies, there have been many reported efforts to enhance the fronts with valuable information that goes beyond the nominal circuit behavior, such as the yield or the reconfiguration capabilities. However, the effect of layout parasitics is the factor that has been missing in the literature: the accuracy may be seriously degraded by layout parasitics not considered during the front generation. In this paper, we present a technique to generate layout-aware Pareto fronts that accurately accounts for the impact of both geometry and parasitics. Peer Reviewe...|$|R
40|$|Modern warfare {{requires}} the understanding {{and management of}} increasingly complex assemblages of resources. The Advanced Battlefield Architecture for Tactical Information Selection (ABATIS) is introduced. It provides a framework for testing various display strategies. Its design, which uses object-oriented and <b>hierarchical</b> <b>design</b> <b>methodologies,</b> is flexible and extensible. It assures that a working program can be rapidly developed for comparing alternate display strategies. This report defines an overall architecture for battlefield visualization and then focuses on a detailed design of its display layer, called the Process Centered Display (PCD). The design is specified using the Object Modeling Technique (OM) notation. The complete class diagrams for the PCD are presented and an illustrative example is given. 1...|$|R
40|$|A TOP-down Integrated Circuit Synthesis {{expert system}} (TOPICS) which {{is able to}} design CMOS {{operational}} amplifiers (op-amps) is under development. The synthesis {{is based on a}} <b>hierarchical</b> <b>design</b> <b>methodology</b> and {{due to the fact that}} interval analysis is used and all solutions will be found the partitioning and mapping of the design constraints on a normal operating range of a collection of subblocks will always yield a solution...|$|E
40|$|Due to the {{increasing}} complexity of VLSI systems and time-to-market requirements, efficient design methodologies are needed. Two design methodologies have emerged: the <b>hierarchical</b> <b>design</b> <b>methodology</b> and high-level synthesis. The <b>hierarchical</b> <b>design</b> <b>methodology</b> is employed to establish efficient design management while high-level synthesis is used mainly {{to cope with the}} timeto- market requirements. In this, the needs for efficient and accurate timing analysis have arisen. This dissertation describes an accurate high-level timing analysis framework for performance analysis, which supports <b>hierarchical</b> <b>design</b> <b>methodology</b> and promotes usability by high-level synthesis tasks. For hierarchical design, the timing analysis framework employs a two-phase analysis approach, the timing information preparation phase and the performance analysis phase. In addition, the flexible timing boundary model (FTBM) which can support timing information reuse, is used to represent the timing behaviour of circuit modules {{at all levels of the}} hierarchy. The timing information preparation phase is performed by the hierarchical module timing overlap technique (. HMTOT) which hierarchically composes timing information from modules defined by the FTBM. Once composed, the resultant FTBM provides the timing behaviour of the circuit that can be used in the performance analysis phase for both worst case delay estimation and input/output timing constraint analysis. In high-level synthesis, the HMTOT has been applied to develop the context sensitive in-process timing analyser (CIPTime) to drive high-level synthesis scheduling processes, and the high-level timing analysis technique HighTA. By using the FTBM, both CIPTime and HighTA can perform the analysis at the register transfer (RT) level. The advantages of the CIPTime are demonstrated by the better scheduling results produced from the scheduling technique ContSched that employs the CIPTime to estimate the delays of multicycle and chaining operations. In the HighTA, high-level false path elimination using information such as control/data flow graphs, operation schedules and resource assignments from highlevel synthesis is also included. The HighTA can estimate true path delays in the presence of false paths for the RT datapaths both before and after the actual datapaths are generated...|$|E
40|$|Examined is a {{methodology}} for hardware verification developed by Royal Signals and Radar Establishment (RSRE) {{in the context}} of the SRI International's Enhanced <b>Hierarchical</b> <b>Design</b> <b>Methodology</b> (EHDM) specification/verification system. The methodology utilizes a four-level specification hierarchy with the following levels: functional level, finite automata model, block model, and circuit level. The properties of a level are proved as theorems in the level below it. This methodology is applied to a 6 -bit counter problem and is critically examined. The specifications are written in EHDM's specification language, Extended Special, and the proofs are improving both the RSRE methodology and the EHDM system...|$|E
40|$|The {{specification}} and verification work {{is described}} in detail, {{and some of the}} problems and issues to be resolved in their application to Very Large Scale Integration VLSI systems are examined. The <b>hierarchical</b> <b>design</b> <b>methodologies</b> enable a system architect or design team to decompose a complex design into a formal hierarchy of levels of abstraction. The first step inprogram verification is tree formation. The next step after tree formation is the generation from the trees of the verification conditions themselves. The approach taken here is similar in spirit to the corresponding step in program verification but requires modeling of the semantics of circuit elements rather than program statements. The last step is that of proving the verification conditions using a mechanical theorem-prover...|$|R
40|$|A {{review of}} the device and circuit design {{complexity}} and limitations for VLSI is presented. VLSI device performance will be limited by second order device effects, interconnection line delay and current density and chip power dissipation. The complexity of VLSI circuit <b>design</b> will require <b>hierarchical</b> structured <b>design</b> <b>methodology</b> with special consideration of testability and more emphasis on redundancy. New organizations of logic function architectures and smart memories will evolve {{to take advantage of}} the topological properties of the VLSI silicon technology...|$|R
40|$|A mixed analog/digital ASIC {{from a real}} {{satellite}} application (a {{radiation detector}} front-end) hasbeen designed, simulated and processed according to a <b>hierarchical</b> top-down <b>design</b> <b>methodology.</b> CAD tools(commercial and academic) {{have been used as}} much as possible. The top-down methodology is discussed andillustrated by going through the different steps of the ASIC design. At each level the different choices and tradeoffs are briefly discussed and practical difficulties of top-down design are pointed out. One of the most importantproblems in top-down mixed-signal ASIC design-modeling and verification-is highlighted and discussed indetail...|$|R
40|$|The {{ability to}} improve the yield of {{integrated}} circuits through layout modification has been recognized, and several techniques for yield enhanced routing and compaction have been developed. Still, yield issues are rarely {{a factor in the}} choice of the floorplan mainly due to the tendency to focus on the more important timing and area objectives. Consequently, floorplanning tools have been developed with only these primary objectives in mind. We show in this paper {{that it is possible to}} generate a better floorplan with respect to yield, with very little penalty in the main objectives. We describe a constructive floorplanning approach which is based on analytical techniques and produces near optimal floorplans in terms of area utilization, wiring length and yield. 1. Introduction Floorplanning is an essential design step when a <b>hierarchical</b> <b>design</b> <b>methodology</b> is used. Floorplanning is the placement of modules when the design of the modules has not yet been completed. As a result, the s [...] ...|$|E
40|$|The problem {{formulation}} of a robot control system {{is dominated by}} the time-critical aspect. To achieve success in this time-critical domain, multiple processor implementations are necessary. Multiple processor implementations of a robot control system implies that system designers must use a different set of design heuristics, strategies, and rules than those from a monoprocessing environment. This paper discusses traditional hierarchical structure as a real-time design methodology and proposes a concurrent extension of the model to include virtual control loops. Using task decomposition, this concurrent <b>hierarchical</b> <b>design</b> <b>methodology</b> attempts to solve the partitioning of system components across multiple processors. The recent advent of Computer Aided Software Engineering (CASE) Tools offer the possibility to specify both the real-time and concurrent aspects of a system’s functionality. However, these CASE only offer the semantics in which to model real-time behavior. These CASE tools do not offer the strategies, heuristics and rules to assist in the development of design model. As a part of the concurrent real-time control methodology, rules will b...|$|E
40|$|A modular {{synthesis}} flow {{is essential}} for a scalable and <b>hierarchical</b> <b>design</b> <b>methodology.</b> This paper considers a particular modular flow where each module has interface methods and the internal behavior of the module is {{described in terms of}} a set of guarded atomic actions on the state elements of the module. A module can also read and update the state of other modules but only by invoking the interface methods of those modules. This paper extends the past work on hardware synthesis of a set of guarded atomic actions by Hoe and Arvind to modules of such actions. It presents an algorithm that, given the scheduling constraints on the interface methods of the called modules, derives the &quot;glue logic &quot; and the scheduling constraints for the interface methods of the calling module such that the atomicity of the guarded actions is preserved across module boundaries. Such modules provide reusable IP which facilitates “correctness by construction ” design methodology. It also reduces compile-times dramatically in comparison to the compilation that flattens all the modules first. Categories and Subject Descriptors B. 6. 3 [Logic Design]: Design Aids – automatic synthesis, hardware description languages...|$|E
40|$|The {{complete}} {{application of}} a <b>hierarchical</b> top-down <b>design</b> <b>methodology</b> to analog sensor interface front-ends is presented: from system level specifications down to implementation in silicon, including high-level synthesis, analog block generation and layout generation. A new approach for implementing accurate and fast power/area estimators for the different blocks in the architecture is described. These estimators provide the essential link between the high-level synthesis and the block generation in our hierarchical top-down methodology. The methodology is illustrated {{by means of the}} design of a complex and realistic example. Measurements results are included. status: publishe...|$|R
40|$|We have {{developed}} a methodology to automatically synthesize large <b>hierarchical</b> <b>designs.</b> This <b>methodology</b> combines the advantages of bottom-up compilation with top-down rebudgeting. Starting with only the Verilog source code, all required makefiles, synthesis scripts, and constraint files are automatically derived. An overconstraining leaf module time-budgeting method is used for initial synthesis. For subsequent synthesis runs, a top-level constraint file (perhaps manually generated) is used to automatically create constraints for leaf modules. Timing information is extracted from top-level timing reports. True timing budgets can be generated while avoiding the limitations of There are several basic techniques for compilation of large <b>hierarchical</b> <b>designs</b> [1]. All have their advantages and disadvantages. 1. 1 Top-down hierarchical compile This methodology uses a top-level constraint file and a simple hierarchical compile to generat...|$|R
40|$|National Fund of Scientific Research The {{complete}} {{application of}} a <b>hierarchical</b> top-down <b>design</b> <b>methodology</b> to analog sensor interface front-ends is presented: from system-level specifications down to implementation in silicon, including high-level synthesis, analog block generation and layout generation. A new approach for implementing accurate and fast power/area estimators for the different blocks in the architecture is described. These estimators provide the essential link between the high-level synthesis and the block generation in our hierarchical top-down methodology. The methodology is illustrated {{by means of the}} design of a complex and realistic example. Measurement results are included. 1...|$|R
40|$|The {{complexity}} of integrated circuits requires a <b>hierarchical</b> <b>design</b> <b>methodology</b> {{that allows the}} user to divide the problem into pieces, design each piece independently, and assemble the pieces into the complete system. The design herarchy brings out composition problems, problems that are a property of the assembly as a whole, not of one single instance in the hierarchy. Recent research has produced tools that automate part of the composition task - the logical connection of the pieces. However, these tools do not ensure that signals driven over these connections will be driven sufficiently to give reasonable cycle speed of the resulting chips. It is easily possible to specify an assembly in which a small-sized gate is required to drive an enormous load. Parasitic capacitance of the wiring made automatically by the logical connection tool can be the dominant source of delay, so assembly tools can actually worsen {{the performance of the}} circuit and hide this fact from the designer. When required to make large circuits, automated layout tools such as PLA generators can blindly make layouts that give abysmally poor performance. Here again, the delay is in a part of circuit that the designer did not specify, so it is hidden. Finding and correcting these problems is a difficult and time-consuming task in integrated circuit design, and one that consumes vastly more people's time and computer time than the simple assembly of the chip...|$|E
40|$|With {{the goal}} of {{building}} an <b>hierarchical</b> <b>design</b> <b>methodology</b> for quantum-dot cellular automata (QCA) circuits, we put forward a novel, theoretically sound, method for abstracting the behavior of circuit components in QCA circuit, such as majority logic, lines, wire-taps, cross-overs, inverters, and corners, using macromodels. Recognizing that the basic operation of QCA is probabilistic in na-ture, we propose probabilistic macromodels for standard QCA circuit elements based on conditional probability characterization, defined over the output states given the input states. Any circuit model is constructed by chaining together the individual logic element macromodels, forming a Bayesian network, defining a joint probability distribution over the whole circuit. We demonstrate three uses for these macromodel based circuits. First, the probabilistic macromodels allow us to model the logical function of QCA circuits at an abstract level – the “circuit ” level – above the current practice of layout level in a time and space efficient manner. We show that the circuit level model is orders of magnitude faster and requires less space than layout level models, making the design and testing of large QCA circuits efficient and relegating the costly full quantum-mechanical simulation of the temporal dynamics to a later stage in the design process. Second, the probabilistic macromodels abstract crucial device level characteristics such as polarization and low-energy error state configu-rations at the circuit level. We demonstrate how this macromodel based circuit level representation {{can be used to}} infer the ground state probabilities, i. e. cell polarizations, a crucial QCA parameter. This allows us to study the thermal behavior of QCA circuits at a higher level of abstraction. Third, we demonstrate the use of these macromodels for error analysis. We show that that low-energy state configurations of the macromodel circuit matches those of the layout level, thus allowing us to isolate weak points in circuits design at the circuit level itself...|$|E
40|$|International audienceThe {{evolution}} of silicon technologies has fundamentally changed the physical design EDA flow, {{which now has}} to go through a progressive refinement process where interconnections evolve seamlessly from logic to final detailed routing. Furthermore the level of integration reached makes mandatory the use of <b>hierarchical</b> enabled <b>design</b> <b>methodologies.</b> In this paper, we present Zephyr: an Elmore Delay Static Timing Analysis engine tightly integrated in the open academic Coriolis EDA physical design platform on which tools act as algorithmic engines operating on an integrated C++ database around which they consistently interact and collaborate. Coriolis provides high level C++ and Python APIs and a unified and consistent hierarchical VLSI data model through all the design steps from logic down to final layout. We discuss here more specifically the integration issues and concepts used to support timing analysis through the progressive refinement of <b>hierarchical</b> <b>designs...</b>|$|R
40|$|Rapid {{advances}} in semiconductor technology are motivating {{the development of}} computer-aided design tools to assist human designers at the higher levels of the design process. In particular, {{there is a need}} for tools that aid system-level design synthesis - the process of producing a detailed artifact satisfying high level specifications given a set of components. A knowledge-based approach that uses a <b>hierarchical</b> <b>design</b> synthesis <b>methodology</b> is described. M 1 is a knowledge-based system that implements the approach for the domain of single board computer design. A set of experiments which indicate M 1 's capabilities and the effectiveness of the approach in organizing and utilizing knowledge are presente...|$|R
40|$|Floorplanning is an {{essential}} <b>design</b> step for <b>hierarchical,</b> building-module <b>design</b> <b>methodology.</b> Floorplanning provides early feedback that evaluates architectural decisions, estimates chip areas, and estimates delay and congestion caused by wiring. As technology advances, design complexity is increasing and the circuit size is getting larger. To cope with the increasing <b>design</b> complexity, <b>hierarchical</b> <b>design</b> and intellectual property (IP) modules are widely used. This trend makes floorplanning much more critical {{to the quality of}} a very large-scale integration (VLSI) design than ever. This chapter starts with the formulation of the floorplanning problem. After the problem formulation, the two most popular approaches to floorplanning, simulated annealing and analytical formulations, are discussed. On the basis of simulated annealing, three popular floorplan representations, normalized Polished expression, B*-tree, and sequence pair, are further covered and compared. Some modern floorplanning issues such as soft modules, fixed-outline constraints, and large-scale designs are also addressed...|$|R
40|$|We {{propose a}} <b>hierarchical</b> mixed signal <b>design</b> <b>methodology</b> {{based on the}} {{principles}} of Platform-Based <b>Design</b> (PBD). The <b>methodology</b> is a meet-in-the-middle approach where design components are modeled bottom-up at various abstraction levels and performance constraints are mapped top-down to select among the available components the ones that best meet the constraints. The <b>design</b> <b>methodology</b> can seamlessly operate on both analog and digital designs, thus dealing with mixed signal designs in a consistent way. We demonstrate the effectiveness of the approach optimizing an 80 MS/s 14 bit pipelined Analog-to-Digital Converter (ADC) including digital calibration, yielding 64 % power reduction compared to the original hand optimized design...|$|R
40|$|Floorplanning is an {{important}} physical <b>design</b> step for <b>hierarchical,</b> building-block <b>design</b> <b>methodology.</b> When the circuit size get increases {{the complexity of the}} circuit also increases. To deal with the increasing design complexity the intellectual property (IP) modules are mostly used in floorplanning. This paper presents a Hybrid particle swarm optimization algorithm for floorplanning optimization. Here B*tree is used at the initial stage in order to avoid overlapping of modules and later, PSO algorithm along with the concept of crossover and mutation from Genetic algorithm is used to get optimal placement solution. The main objective of floorplanning is to minimize the chip area and interconnection wire length. The Experimental results on Microelectronic Center of North Carolina (MCNC) benchmark circuits shows that our algorithm performs better convergence than the other methods...|$|R
40|$|We have {{implemented}} {{a segment of}} an RF transmitter signal chain in discrete components using bipolar transistors. We formulated both a broadband amplifier and mixer as mathematical programs (MP) and extracted Pareto-optimal (PO) [1 - 3] tradeoff surfaces. Abstracting these PO surfaces {{in place of the}} blocks at the system level, we have demonstrated a new <b>hierarchical</b> system <b>design</b> <b>methodology.</b> Furthermore, the optimization, simulation, and measured results are consistent at all levels of hierarchy. Keywords: System design, optimization, geometric programming, analog circuits, Pareto-optimal. by William R. Sanchez. Thesis (M. Eng.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, June 2007. This electronic version was submitted by the student author. The certified thesis is available in the Institute Archives and Special Collections. "May 2007. "Includes bibliographical references (p. 79 - 82) ...|$|R
40|$|Abstract—A <b>hierarchical,</b> sensitivity-based ASIC <b>design</b> <b>methodology</b> is {{proposed}} and {{demonstrated in the}} implementation of power-performance optimal signal processing kernels for wireless applications. The design approach uses a systematic exploration of the power-performance design tradeoff space at the architecture, micro-architecture, and circuit levels. Energy-efficiency gains achieved via this methodology are exploited to accommodate flexibility to support multi-standard radio architectures. The methodology is exemplified in the selection of architecture and design of a flexible digital finite impulse response (FIR) filter. The flexible FIR filter consumes area and power that is only 2 to 4 times that of a dedicated ASIC FIR. I...|$|R
40|$|The {{problem of}} {{designing}} complex analog circuits is attacked using a <b>hierarchical</b> top-down, constraintdriven <b>design</b> <b>methodology.</b> In this methodology, constraints are propagated automatically from high-level speci cations to physical design through {{a sequence of}} gradual transformations. Constraint transformation is a critical step in the methodology, since it determines in large part {{the degree to which}} speci cations are met. In this paper we describe how constraint transformations can be e ciently carried out using hierarchical parameter modeling and constrained optimization techniques. The process supports complex high-level specication handling and accounts for second-order e ects, such as interconnect parasitics and mismatches. The suitability of the approach is demonstrated through an 4 th order active lter test case. 1...|$|R
40|$|Analytical target {{cascading}} (ATC) is a <b>hierarchical</b> multi-level <b>design</b> <b>methodology.</b> This {{approach is}} well suited to hierarchy decomposition in railway product. In 1999 Alexandrov and Lewis classes ATC as the same category than Collaborative Optimization (CO) that is applied only for bi-level optimiza-tion multidisciplinary systems. Tzevelekos et al. (2003) demonstrated that the ATC process is highly sensitive to numerical inaccuracies in the data communicated among the sub-problems. According {{to the state of}} the art, it is confirmed that for problems with unattainable targets, strict design consistency cannot be achieved with finite weighting factors. Then a new formulation is proposed to improve the ATC convergence. The weighted sum of deviation metric is transformed into a multi-objective formula-tiona. An original optimization problem with a single global optimal solution is used as a benchmark. Thereafter an optimal design of tram traction system is used as an application example in the aim to demonstrate the robustness of the algorithm. 2. Keywords: Multi-level optimization, Analytical target cascading, Multidisciplinary design opti-mization, Non-dominated sorting genetic algorithm, railway traction system...|$|R
40|$|International audienceThis paper {{presents}} a VHDL specification methodology aimed to extend structured <b>design</b> <b>methodologies</b> to the behavioral level. The {{goal is to}} develop VHDL modeling strategies in order to master the design and analysis of large and complex systems. Structured <b>design</b> <b>methodologies</b> are combined with AMICAL, a VHDL based behavioral synthesis tool, {{in order to allow}} <b>hierarchical</b> <b>design</b> and component re-use...|$|R
40|$|This paper {{deals with}} an {{environment}} for IC's layout, {{to act as}} a framework for the design of module generators for behavioral silicon compilation. It is built around an object oriented data manager that handles <b>hierarchical</b> <b>design,</b> and multiple representations, with emphasis on a safe <b>design</b> <b>methodology.</b> This manager also allows the use of externally defined elements, and the integration of tools written for other systems...|$|R
40|$|In {{addition}} to integrating different Intellectual Property cores, heterogeneous embedded systems provide several architecture knobs such as voltage, operating frequency, configuration, etc. {{that can be}} varied to optimize performance. Such flexibilities results in a large design space making system optimization a very challenging task. Moreover, such systems operate in mobile and other power constrained environments. Therefore, in {{addition to}} rapid exploration of a large design space a designer has to optimize both time and energy performance. To address these issues, we propose a <b>hierarchical</b> <b>design</b> space exploration <b>methodology.</b> Our methodology initially uses symbolic constraint satisfaction to rapidly prune the design space. This pruning process {{is followed by a}} system wide performance estimation to further reduce the number of candidate designs. Finally, detailed simulation using low-level simulators are performed to select an appropriate <b>design.</b> Our <b>methodology</b> is implemented by integrating two tools, DESERT and HiPerE, into the Model based Integrated simuLAtioN (MILAN) 1 framework. DESERT uses Ordered Binary Decision Diagrams based symbolic search to rapidly explore a large design space and identifies candidate designs that meet the user specified performance constraints. HiPerE provides rapid estimation of system wide energy and latency based on component level simulations and also facilitates energy optimization. MI-LAN provides the required modeling support for these tools and also facilitates component specific multi-granular simulations through seamless integration of various simulators...|$|R
40|$|Abstract — Floorplanning is an {{essential}} <b>design</b> step for <b>hierarchical</b> building module <b>design</b> <b>methodology.</b> Floorplanning provides early feedback that evaluates architectural decisions, estimates chip area, estimates delay and congestion caused by wiring. As technology advances, design complexity is increasing and the circuit size is getting larger. To cope with the increasing <b>design</b> complexity, <b>hierarchical</b> <b>design</b> and Intellectual Property modules are widely used. This makes floorplanning much more critical {{to the quality of}} a Very Large Scale Integration (VLSI) design. For many years, floorplanning is a critical step, as it sets up the ground work for a layout. However, it is computationally quite hard. The process of determining block shapes and positions with area minimization objective and aspect ratio requirement is referred to as floorplanning. Common strategy for blocks floorplanning is to determine in the first phase and then the relative location of the blocks to each other based on connection-cost criteria. In the second step, block sizing is performed with the goal of minimizing the overall chip area and the location of each block is finalized. From the computational point of view, VLSI floorplanning is NP-hard. The solution space will increase exponentially with the growth of circuits scale, thus it is difficult to find the optimal solution by exploring the global solution space. To handle this complexity swarm based optimization method has opted in this proposed work. A generalize solution has developed to take care of area as well as interconnection wire length. To achieve this weighted objective function has defined. The advantages of PSO like simplicity in implementation, not depends upon the characteristics of objective function and better performance have given support to include it as a solution method...|$|R
40|$|International audienceThis paper {{deals with}} <b>hierarchical</b> <b>design,</b> {{component}} re-use and more generally structured <b>design</b> <b>methodology</b> at the behavioral level. This methodology has two main concepts: hierarchy and regularity. Hierarchies {{are used for}} decomposing a complex design into more manageable sub-parts. Regularity is aimed at maximizing the re-use of already designed components and sub-systems. The methodology is illustrated using AMICAL, an architectural synthesis tool, and a design example, namely a proportional integral derivative. The design is decomposed hierarchically into a top controller using a set of sub-systems. AMICAL is then used {{for the design of}} one sub-system which is used in a second step as a functional unit, by AMICAL, for the synthesis of the full design...|$|R
40|$|A <b>hierarchical</b> {{automated}} <b>design</b> flow for low-energy direct-mapped {{signal processing}} integrated circuits is presented. A modular framework {{based on a}} combined dataflow graph and floorplan description drives automatic layout generation with commercial CAD tools. Automatic characterization of layout improves system-level estimates. Simplified physical <b>design</b> <b>methodologies</b> for low supply voltages are discussed. The flow is demonstrated on a 300 -k transistor test-chip, a time-division multiple-access baseband receiver, and a soft-output Viterbi decoder. An example of architectural comparison of energy efficiency is presented...|$|R
40|$|Abstract [...] This paper {{describes}} {{the use of}} a <b>hierarchical</b> <b>design</b> representation standard, CHDStd, as part of the architecture of the Chip <b>Hierarchical</b> <b>Design</b> System (CHDS). Details are given on CHDStd-based hierarchy mechanisms and processes required to support Forward Timing-Driven <b>Hierarchical</b> <b>Design</b> capabilities needed for chip design using 0. 25 u- 0. 18 u technologies and beyond. These capabilities solve some of the key challenges identified by the semiconductor industry’s Design Productivity Crisis. This paper identifies the role of hierarchy for handling difficult chip design information issues and for large complex chip design. I...|$|R
