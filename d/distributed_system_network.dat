8|10000|Public
50|$|The {{best case}} {{scenario}} {{is to use a}} local lineage store for every machine in the <b>distributed</b> <b>system</b> <b>network.</b> This allows the lineage store also to scale horizontally. In this design, the lineage of data transformations applied to the data on a particular machine is stored on the local lineage store of that specific machine. The lineage store typically stores association tables. Each actor is represented by its own association table. The rows are the associations themselves and columns represent inputs and outputs. This design solves 2 problems. It allows horizontal scaling of the lineage store. If a single centralized lineage store was used, then this information had to be carried over the network, which would cause additional network latency. The network latency is also avoided by the use of a distributed lineage store.|$|E
40|$|Abstract. In {{order to}} provide ubiquity and {{therefore}} a wide communication approach, many researchers have exploited solutions for fitting distributed system profiles into small devices with stringent memory requirements and low CPU speed. In this regard, {{research in the field}} of middleware for embedded systems has proliferated. In this paper we present an architecture that allows devices with limited memory resources participate in a <b>distributed</b> <b>system</b> <b>network</b> by means of a middleware framework. Through our model, devices with quite stringent memory requirements may become part of a network of CORBA technology-enabled services. In particular, we illustrate the working model by supporting IP-based network devices 1...|$|E
30|$|Coates et al. [56] {{leverage}} {{the relatively}} inexpensive computing {{power of a}} cluster of GPU servers. More specifically, they develop their own system (using neural networks) based on Commodity Off-The-Shelf High Performance Computing (COTS HPC) technology and introduce a high-speed communication infrastructure to coordinate distributed computations. The system is able to train 1 billion parameter networks on just 3 machines {{in a couple of}} days, and it can scale to networks with over 11 billion parameters using just 16 machines and where the scalability is comparable to that of DistBelief. In comparison to the computational resources used by DistBelief, the <b>distributed</b> <b>system</b> <b>network</b> based on COTS HPC is more generally available to a larger audience, making it a reasonable alternative for other Deep Learning experts exploring large-scale models.|$|E
5000|$|Distributed Computer and Computer <b>Networks</b> <b>Systems</b> (Modeling and Analysis, <b>Distributed</b> and Wireless <b>Systems,</b> <b>Distributed</b> Servers, Parallel and <b>Distributed</b> <b>Systems,</b> <b>Networks)</b> ...|$|R
5000|$|Systems (includes {{computer}} architecture, databases, <b>distributed</b> <b>systems,</b> <b>networks</b> and <b>networked</b> <b>systems,</b> operating systems, programming methodology, {{and software}} engineering among others) ...|$|R
3000|$|... {{research}} interests include <b>Distributed</b> <b>Systems,</b> Sensor <b>Networks,</b> IT Security, Energy Efficient Wireless Embedded [...]...|$|R
40|$|Now a day’s {{replication}} is {{an effective}} approach to improve the efficacy of distributed system, where large amount of data (terabytes or peta-bytes) is handled. An efficient replica technique {{is more effective than}} a shared <b>distributed</b> <b>system</b> (<b>network</b> attached storage, object based storage and storage area network) and common access point. In a distributed system, data access time depends on unreliable network bandwidth especially in desktop grid. The data transfer is a major bottleneck in data intensive distributed grid environment due to high latency and low and unreliable bandwidth. In such an environment, an effective scheduling and effective replica technique can reduce the amount of data transfer across the internet by dispatching a job to a node where the required data are present for its operation. As th...|$|E
40|$|AQUA is an {{integrated}} resource management architecture for an end-system that can deliver desired QOS to multimedia applications. The proposed architecture (called AQUA for Adaptive End-system Quality of Service Architecture) includes a common framework for managing resources such as CPU, network interface, memory, and bus bandwidth. Contributions of AQUA include an adaptation framework, QOS specification, resource managers, and an application-level QOS manager that performs application-based graceful adaptation when resource requirements change or the demand for resources exceeds available capacity. 1 Introduction Unique QOS (Quality-Of-Service) requirements of distributed multimedia applications have prompted innovative {{research in the area}} of network protocols, operating systems, and host-network interface architectures. The QOS requirements dictate that a distributed application must get guaranteed access and predictable service from resources in a <b>distributed</b> <b>system.</b> <b>Network</b> prot [...] ...|$|E
40|$|International Telemetering Conference Proceedings / October 22 - 25, 1984 / Riviera Hotel, Las Vegas, NevadaTelemetry data {{processing}} ground stations commonly unite dissimilar equipment {{into what is}} often a large disjoint series of synchronizers, specialized front end processors, and high performance back end data processors. With a few basic building blacks, small-tolarge uniform systems are being built that avoid this problem while hiding the task size from the end user yet allowing flexibility in the data acquisition and processing. This discussion focuses on the implementation of an integrated telemetry processing system with varying levels of complexity. The discussion covers the full spectrum from the simple processing element (single pc board) to the {{data processing}} substation (single instrument) to a full load sharing, redundant, <b>distributed</b> <b>system</b> (<b>network</b> of substations). Each level utilizes a different form of distributed processing yet adheres to an overall philosophy of date flow as opposed to fixed instruction sequencing...|$|E
5000|$|Terplan, K (1999). Applications for <b>Distributed</b> <b>Systems</b> and <b>Network</b> Management - Page 101 Google Books ...|$|R
40|$|Graduated with highest distinction. RESEARCH INTERESTS General: Computer and {{telecommunication}} networks, Internet {{quality of}} service and novel architectures, wireless networks, sensor networks, multimedia networking, peer-to-peer and <b>distributed</b> <b>systems,</b> <b>network</b> security. Current Focus: Internet inter- and intra-domain routing, wireless ad hoc routing, routing algorithms and architectures for heterogeneous networks, distributed sensor <b>networks,</b> resilient large-scale <b>distributed</b> <b>system</b> design, self-organizing and peer-to-peer systems, security attack detection and prevention, secure <b>networked</b> <b>system</b> design...|$|R
5000|$|Terplan, K (1999). [...] "Applications for <b>Distributed</b> <b>Systems</b> and <b>Network</b> Management" [...] - Page 101 Google Books ...|$|R
40|$|The Divergence Control Protocol Based on Predicted Profile allows {{cooperative}} processes deployed on a weaklyconnected {{environment to}} conciliate the offering of low response time to clients with {{the guarantee of}} a bounded consistency, despite characteristics of the underlying communication infrastructure. This paper presents how to decompose a global divergence bound into a set of local criteria that are locally checked at any invocation. We propose a protocol relying on these criteria to incrementally construct histories that preserve at any time, the global divergence bound between any replica and the "ideal state" of the replicated object. An implementation of the protocol is discussed. This paper reports a number of experiments conducted in order to evaluate the rationale {{and the performance of}} the proposed protocol. These experiments show that the protocol benefits a lot from the provision of a correct profile and outperforms intuitive cooperation protocols in large-scale settings. Keywords: <b>Distributed</b> <b>System,</b> <b>Network</b> Service, Replication Protocol, Divergence Control, Bounded Consistency...|$|E
40|$|Abstract-This paper {{describes}} the <b>distributed</b> <b>system,</b> <b>network</b> and software architecture, the application development environ-ment, the performance, {{and the early}} lessons learned on the ATM LAN testbed Mercuri established at the Honeywell Technology Center, to develop distributed multimedia technologies for real-time control applications. We have developed a client-server-based software architecture on Sun Sparcstation- 2 s connected by a Fore Systems ’ ASX- 100 ATM switch, with video processing handled by Parallax’s XVideo cards. The architecture enables network-transparent applications and provides simple primitives for multimedia capture, display, transmission, storage, and re-trieval. A real-time multimedia-in-the-loop control application was developed as the vehicle for testing the capabilities and performance of the network. Our test measurements focus on the end-user-level performance metrics such as message throughput and round-trip delay as well as video-frame jitter under no-load and load conditions. Our {{results show that the}} maximum burst throughput that can be supported at the user level is 48 Mbls using AAL 5, while round-trip delays for 4 -kbyte messages are about 3 ms. Our experience reveals a number of performance bottlenecks and open issues in using commercial ATM switches for practical applications. Our conclusions are: 1) For end-to-end performance, the primary bottlenecks are in the protocol processing at layers above ATM (as currently implemented) and the host operating-system’s performance for burst data transfers; 2) the current video-processing hardware and its integration with the host operating system are also severe limiting factors; and 3) besides performance issues, other issues that limit ATM for practical application and experimentation are the lack of analysis tools and the support for deadline-driven real-time traffic. I...|$|E
50|$|In {{addition}} to the expected functions of an operating system, DPPX included several functions which allowed for remote administration, such as Distributed Host Command Facility (DHCF), which allowed a Host Command Facility (HCF) user on a mainframe to log on in either full-screen mode or line mode to execute commands as though logged on locally, and <b>Distributed</b> <b>Systems</b> <b>Network</b> (or Node) Executive (DSNX), which allowed a <b>Distributed</b> <b>Systems</b> Executive (DSX) (later NetView/DM) job to manage files.|$|R
40|$|In {{this paper}} we study the k-station {{placement}} (k-SP, in short) problem on graphs. This problem has application to efficient multicasting in circuit-switched networks. We {{show that the}} problem is NP-complete and give a O(logn) approximation algorithm for it (n denotes the number of vertices of the graph). Moreover we show that the problem can be solved in polynomial time for trees. Keywords: Multicasting, <b>Distributed</b> <b>systems,</b> <b>Networks.</b> ...|$|R
50|$|Surton, Robert, Kenneth P. Birman, R van Renesse 2013. Non-Stop Routing for BGP with Application-Driven TCP Recovery. <b>Distributed</b> <b>Systems</b> and <b>Networks</b> (DSN), Budapest, June.|$|R
5000|$|Transit Wireless, a {{telecommunications}} specializing in <b>distributed</b> antenna <b>system</b> <b>networks</b> to provide {{coverage in the}} places that are unreachable by traditional cellular phone services ...|$|R
40|$|To lead in {{research}} and development of innovative solutions for advanced <b>distributed</b> software <b>systems</b> and in education of future computing leaders. AREAS OF RESEARCH INTEREST: Management emerging computing and software technologies, particularly those related to embedded systems, pervasive/ubiquitous computing, mobile computing, and Grid computing. XML (Extensible Markup Language) Web Services and their management. Integration of business process management and <b>distributed</b> <b>systems</b> management. Software engineering resulting in manageable/autonomic computing <b>systems.</b> Management of <b>distributed</b> <b>systems,</b> <b>networks,</b> services, and software applications. Software technologies for electronic (e-) and mobile (m-) business. EDUCATION...|$|R
40|$|<b>Distributed</b> <b>systems</b> and <b>networks</b> {{have been}} adopted by telecommunications, remote educations, businesses, armies and governments. A widely applied {{technique}} for <b>distributed</b> <b>systems</b> and <b>networks</b> is the single sign-on (SSO) which enables a user to use a unitary secure credential (or token) to access multiple computers and systems where he/she has access permissions. However, most existing SSO schemes have not been formally proved to satisfy credential privacy and soundness of credential based authentication. To overcome this drawback, we formalise the security model of single sign-on scheme with authenticated key exchange. Specially, we point out the difference between soundness and credential privacy, and define them together in one definition. Also, we propose a provably secure single sign-on authentication scheme, which satisfies soundness, preserves credential privacy, meets user anonymity, and supports session key exchange. The proposed scheme is very efficient so that it suits for mobile devices in <b>distributed</b> <b>systems</b> and <b>networks.</b> 2012 IEEE...|$|R
50|$|The Spread Toolkit is {{developed}} by Spread Concepts LLC, with much support by the <b>Distributed</b> <b>Systems</b> and <b>Networks</b> Lab (DSN) at Johns Hopkins University, and the Experimental <b>Networked</b> <b>Systems</b> Lab at George Washington University.|$|R
40|$|Queueing {{networks}} model workflow in <b>distributed</b> computing <b>systems</b> and <b>networks.</b> They predict throughput, queue length, response time, and bottlenecks with simple, fast algorithms. January 2008 Rev 7 / 7 / 08 Queueing networks model workflow in <b>distributed</b> computing <b>systems</b> and <b>networks.</b> They predict throughput, queue length, response time, and bottlenecks with simple, fast algorithms...|$|R
5000|$|Scalable Systems Focus Areas: Computer Architecture, Performance Modeling of Computer Systems, Low Power Design, Energy {{efficient}} architectures, exascale computing challenges, performance portability, compilers, programming languages <b>Distributed</b> <b>Systems</b> and <b>Networks,</b> Concurrent and Parallel Computing ...|$|R
40|$|Study of {{distributed}} computing principles and systems. Issues such as distributed architecture, process coordination, client-server computing, deadlock, <b>network</b> and <b>distributed</b> operating <b>systems,</b> <b>network</b> and <b>distributed</b> file <b>systems,</b> concurrency control and recovery of distributed transactions, and fault-tolerant computing, and real-time <b>distributed</b> <b>systems</b> are studied. Design and implementation projects related {{to some of}} these issues are also assigned...|$|R
40|$|This article {{presents}} a novel network interface hardware architecture, which enables clock synchronization in fault-tolerant <b>distributed</b> real-time <b>systems</b> with sub-srange accuracy. The proposed mechanism, which is applicable for any packet-oriented data network, inserts time information into data packets at {{the interface between}} the physical layer transceiver and the network controller upon packet transmission and receipt respectively. Local time is supplied by a high-resolution rate-adjustable adder-based clock, which also contains hardware support easing intervalbased external clock synchronization, like maintaining time and accuracy intervals and interfaces to GPS receivers. Keywords [...] - Clock synchronization, <b>distributed</b> <b>systems,</b> <b>network</b> interface, GPS. I...|$|R
40|$|International audienceA b-{{coloring}} of a graph is {{a proper}} coloring where each color admits {{at least one}} node (called dominating node) adjacent to every other used color. Such a coloring gives a partitioning of the graph in clusters for which every cluster has a clusterhead (the dominating node) {{adjacent to each other}} cluster. Such a decomposition is very interesting for large <b>distributed</b> <b>systems,</b> <b>networks,</b> [...] . In this paper we present a distributed algorithm to compute a b-coloring of a graph, and we propose an application for the routing in networks to illustrate our algorithm...|$|R
40|$|The {{ability to}} detect intruders in {{computer}} systems increases in importance as computers are increasingly integrated into the systems that we rely on for the correct functioning of society. This paper reviews the history of research in intrusion detection as performed in software {{in the context of}} operating systems for a single computer, a <b>distributed</b> <b>system,</b> or a <b>network</b> of computers. There are two basic approaches: anomaly detection and misuse detection. Both have been practiced since the 1980 s. Both have naturally scaled to use in <b>distributed</b> <b>systems</b> and <b>networks...</b>|$|R
40|$|Abstract: Several {{forms of}} {{collaborative}} and networked organisations have emerged {{due to increased}} alliances, outsourcing, globalisation and improvements in <b>distributed</b> information <b>systems.</b> <b>Networked</b> organisations {{have given rise to}} interoperability issues, both from a technical and business perspective. There is...|$|R
5000|$|The International Symposium on Distributed Computing (DISC) is {{an annual}} {{academic}} conference for refereed presentations, whose focus is the theory, design, analysis, implementation, {{and application of}} <b>distributed</b> <b>systems</b> and <b>networks.</b> The Symposium is organized {{in association with the}} European Association for Theoretical Computer Science (EATCS).|$|R
5000|$|SMesh is an 802.11 multi-hop {{wireless}} {{mesh network}} {{developed by the}} <b>Distributed</b> <b>System</b> and <b>Networks</b> Lab at Johns Hopkins University. A fast handoff scheme allows mobile clients to roam in the network without interruption in connectivity, a feature suitable for real-time applications, such as VoIP.|$|R
40|$|Monitoring of <b>distributed</b> <b>systems</b> for {{management}} purposes {{is a complex}} task aggravated by heterogeneity and distribution of resources and tools. This paper presents a method for monitoring <b>distributed</b> <b>systems</b> by applying concepts {{from the field of}} relational databases. The user may request information form the entire network by means of simple relational queries which are automatically optimized and implemented with flexible agents. This approach solves a large class of problems, adapts well to changes in the network, is not dependent on a central site and presents a usable example of flexible agent technology. The approach is illustrated by means of examples in service and <b>systems</b> management. Keywords: <b>distributed</b> <b>systems,</b> <b>network</b> and <b>systems</b> management, services, relational databases, flexible agents 1 Introduction Recent years have witnessed a rapid move from centralized to <b>distributed</b> <b>systems,</b> a trend called downsizing or rightsizing [HNG 94]. Apart from their undisputed [...] ...|$|R
40|$|Testbed (NEST) is a {{graphical}} {{environment for}} simulation and rapid-prototyping of <b>distributed</b> <b>networked</b> <b>systems</b> and protocols. Designers of <b>distributed</b> <b>networked</b> <b>systems</b> require {{the ability to}} study the systems operations {{under a variety of}} simulated network scenarios. For example, designers of a routing protocol need to study the steady-state performance features of the mechanism as well as its dynamic response to failure of links or switching nodes. Similarly, designer...|$|R
40|$|This paper {{proposes a}} {{framework}} for <b>distributed</b> <b>systems</b> management based {{on the concept of}} intelligent agents. The framework addresses problems resulting from the distribution of resources and services and from the high complexity of applications used to manage them and provides a methodology for a flexible, distributed realization of complex management tasks. The approach relies on well-known concepts, such as cooperative distributed problem solving and intelligent agents, and shows how we can combine these two concepts and incorporate them in standardized architectures of integrated management. Keywords: <b>distributed</b> <b>systems,</b> <b>network</b> and <b>systems</b> management, intelligent agents, distributed problem solving, management by delegation 1 Introduction Given the increase in complexity and distributionof communication resources, services, and applications, the difficulty of managing such a complex environment increases correspondingly. Contributing factors to this complexity are [HeAb [...] ...|$|R
40|$|Abstract: Middleware is a growing, {{multidisciplinary}} {{area that}} merges knowledge from diverse {{areas such as}} <b>distributed</b> <b>systems,</b> <b>networks</b> and, more recently, embedded systems. This paper {{presents the results of}} an extensive review of middleware related literature, and presents an overview of critical features that must be considered during middleware development. These features include: network independence, plug and play operation, quality of service provisioning, service locating and data routing, providing appropriate transactions, scheduling transactions, providing mechanisms for system recovery, and interoperability among multiple languages and middleware systems. We also present a brief overview of our own middleware system, and describe how the above features have influenced its development. 1. Introduction: In recent year...|$|R
40|$|This paper {{describes}} {{methods of}} optimizing a client/server <b>network</b> file <b>system</b> {{to take advantage}} of high bandwidth local area networks in a conventional distributed computing environment. The environment contains hardware that removes network and disk bandwidth bottlenecks. The remaining bottlenecks at clients include excessive context switching, inefficient data translation, and cumbersome data encapsulation methods. When these are removed, the null-write performance of a current implementation of Sun’s <b>Network</b> File <b>System</b> improves by 30 %. A prototype system including a high speed RAM disk demonstrates an 18 % improvement in overall write throughput. The prototype system fully utilizes the available peripheral bandwidth of the server. Keywords: <b>Distributed</b> <b>Systems,</b> <b>Network</b> File <b>Systems,</b> High Speed LAN...|$|R
5000|$|Failure {{transparency}} {{is one of}} {{the most}} difficult types of transparency to achieve since it is often difficult to determine whether a server has actually failed, or whether it is simply responding very slowly. [...] Additionally, it is generally impossible to achieve full failure transparency in a <b>distributed</b> <b>system</b> since <b>networks</b> are unreliable.|$|R
