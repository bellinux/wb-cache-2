43|176|Public
2500|$|Although {{some older}} sources {{have stated that}} Da Ponte adapted the {{libretto}} from Shakespeare's The Taming of the Shrew, {{this is not the}} case. According to Christophe Rousset, while some aspects of the opera's plot bear a superficial similarity to the play, it owes more to Goldoni's classic comedies of manners and to Da Ponte's libretti for Mozart's Così fan tutte and The Marriage of Figaro. Like The Marriage of Figaro, the action takes place over a 24-hour period, involves a domineering spouse, and ultimately results in a marriage saved through the servants' machinations. Like Così fan tutte, the story is set in a villa in Naples and involves a woman being brought [...] "down to earth" [...] by an oriental impostor (in the case of La capricciosa, a servant in disguise). Rousset also points out that Da Ponte follows Goldoni's practice of giving the characters names which evoke their personal traits. The name of the capricious woman of the title, Ciprigna, is a <b>double</b> <b>word</b> play on [...] "La Ciprigna" [...] (an Italian epithet for Venus) and the word [...] "inciprignire" [...] meaning [...] "to become angry and embittered", while her hapless husband's name, Bonario, evokes goodness. The name of Bonario's confidante and major domo, Fiuta, alludes to [...] "fiutare" [...] meaning [...] "to flatter". The names of the opera's young lovers, Valerio, Isabella, and Lelio, are the standard ones for such characters in commedia dell'arte plays. Captain Sbaraglia is likewise a commedia dell'arte character whose name derives from [...] "sbaraglio" [...] meaning [...] "disorder or confusion".|$|E
50|$|Smaller {{machines}} {{like the}} PDP-1/PDP-9/PDP-15 used 18-bit words, so a <b>double</b> <b>word</b> was 36 bits.|$|E
5000|$|Double-precision is {{the same}} except that the {{mantissa}} (fraction) field is wider and the double-precision number is stored in a <b>double</b> <b>word</b> (8 bytes): ...|$|E
5000|$|... xx,xxy,xyy,xxyx,xxyy,xyxx,xyxy,xyyx,xxyxx,xxyxy,xyxyy, {{as well as}} many <b>doubled</b> <b>words,</b> have avoidability index 3, {{though this}} list is not complete.|$|R
5000|$|Chapter 3 : Deals with [...] "frigid" [...] language. This {{occurs when}} one uses {{elaborate}} <b>double</b> <b>words,</b> archaic, and rare words, added descriptive words or phrases, and inappropriate metaphors (Bk. 3 3:1-4).|$|R
40|$|A <b>double</b> {{occurrence}} <b>word</b> w over {{a finite}} alphabet Σ {{is a word}} in which each alphabet letter appears exactly twice. Such words arise naturally {{in the study of}} topology, graph theory, and combinatorics. Recently, <b>double</b> occurrence <b>words</b> have been used for studying DNA recombination events. We develop formulas for counting and enu-merating several elementary classes of <b>double</b> occurrence <b>words</b> such as palindromic, irreducible, and strongly-irreducible words. ...|$|R
5000|$|The {{rows and}} columns of any <b>double</b> <b>word</b> square can be {{transposed}} to form another valid square. For example, the order 4 square above {{may also be}} written as: ...|$|E
5000|$|Word {{rectangles}} {{are based}} on the same idea as <b>double</b> <b>word</b> squares, but the horizontal and vertical words are of a different length. Here are 4&times;8 and 5&times;7 examples: ...|$|E
5000|$|The Scrabble board, a 15-by-15 grid, {{includes}} 164 squares {{that have}} neither word nor letter multiplier. The remainder have attributes such as double letter, triple letter, <b>double</b> <b>word,</b> and triple word ...|$|E
40|$|In {{the present}} paper we {{consider}} biologically motivated reduction operations on <b>double</b> occurrence <b>words.</b> Then we define the nesting index of a <b>double</b> occurrence <b>word</b> {{to be the least}} number of reduction operations it takes for a word to be reduced to the empty word. We use chord diagrams and circle graphs as tools to study the nesting index of <b>double</b> occurrence <b>words.</b> Comment: Submitted to the proceedings of the Fourty-fourth Southeastern International Conference on Combinatorics, Graph Theory, and Computin...|$|R
5000|$|In Thai, mai yamok (...) {{represents}} a <b>doubled</b> <b>word.</b> This {{used to be}} written as Thai numeral two (๒) and the form changed over time. In Thai, a repeated word could be used either to emphasize or to soften {{the meaning of the}} original word.|$|R
5000|$|Extended-precision (quadruple-precision) {{was added}} to the System/370 series and was {{available}} on some S/360 models (S/360-85, -195, and others by special request or simulated by OS software). The extended-precision mantissa (fraction) field is wider, and the extended-precision number is stored as two <b>double</b> <b>words</b> (16 bytes): ...|$|R
5000|$|There {{are three}} storage fields {{reserved}} for I/O; a <b>double</b> <b>word</b> I/O old PSW, a doubleword I/O new PSW and a fullword Channel Address Word (CAW). Performing an I/O normally requires the following: ...|$|E
5000|$|Furthermore, {{independent}} storage sections provided two-way (H75) or four-way (I75, J75) interleaving {{of memory}} access. Even with only two-way interleaving, [...] "an effective sequential access rate of 400 nanoseconds per <b>double</b> <b>word</b> (eight bytes) is possible." ...|$|E
50|$|The {{instruction}} set consists of single and <b>double</b> <b>word</b> instructions.Operands can be immediate, direct or indirect. Immediate operands areencoded {{directly in the}} instruction as a literal value. Direct operandsare encoded as {{the address of the}} operand. Indirect operands encode theaddress of the word containing a pointer to the operand.|$|E
25|$|Stack {{manipulation}} in X# {{is performed}} using + and - prefixes, where + pushes a register, value, constant or all registers onto the stack and - pops a value to some register. All constants are pushed on stack as <b>double</b> <b>words,</b> unless stated otherwise (pushing single bytes is not supported).|$|R
50|$|The Nord-10 had 160 registers, {{of which}} 128 were {{available}} to programs, eight {{on each of the}} 16 program levels. Six of those registers were general registers, one was the program counter, and the other contained status information. Floating point operations were standard. The instructions could operate on five different formats, a bit, an 8-bit byte, 16-bit <b>words,</b> 32-bit <b>double</b> <b>words,</b> and 48-bit floating point words.|$|R
40|$|Table 1 : 46 words (6 lines × 7. 6 words/line) Figure 1 : 338 <b>words</b> (<b>double</b> column, 18 -word caption) Figure 2 : 344 <b>words</b> (<b>double</b> column, 24 -word caption) Figure 3 : 340 <b>words</b> (<b>double</b> column, 20 -word caption) Figure 4 : 170 words (single column, 10 -word caption) Figure 5 : 173 words (single column, 13 -word caption) Figure 6 : 171 words (single column, 11 -word caption...|$|R
5000|$|... def fib (...) : a, b = 0L, 1L # The 'L's {{make the}} numbers <b>double</b> <b>word</b> length (typically 64 bits) while true: yield b a, b = b, a + b# Print the first 5 {{numbers in the}} series:for index as int, element in zip(range(5), fib (...) [...] ): print("${index+1}: ${element}") ...|$|E
5000|$|A common {{misconception}} is {{that the}} 50-point bonus received for using all seven tiles is multiplied if a <b>double</b> <b>word</b> score (DWS) or triple word score (TWS) is used. This is not the case: for example, TRAINER(S) played at 1A (with the T on the TWS) without forming additional words scores [...] points.|$|E
5000|$|One {{interesting}} {{feature is}} that the last four index registers (X12 ... X15) and the first four accumulators (A0 ... A3) overlap, allowing data to be interpreted either way in these registers. This also results in four unassigned accumulators (A15+1 ... A15+4) {{that can only be}} accessed by their memory address (<b>double</b> <b>word</b> instructions on A15 do operate on A15+1).|$|E
50|$|The opmask {{registers}} {{are normally}} 16 bits wide, {{but can be}} up to 64 bits with the AVX-512BW extension. How many of the bits are actually used, though, depends on the vector type of the instructions masked. For the 32-bit single float or <b>double</b> <b>words,</b> 16 bits are used to mask the 16 elements in a 512-bit register. For double float and quad words, at most 8 mask bits are used.|$|R
40|$|A {{model for}} DNA {{recombination}} uses 4 -valent rigid vertex graphs, called assembly graphs. An assembly graph, similarly to {{the projection of}} knots, {{can be associated with}} an unsigned Gauss code, or <b>double</b> occurrence <b>word.</b> We define biologically motivated reductions that act on <b>double</b> occurrence <b>words</b> and, in turn, on their associated assembly graphs. For every <b>double</b> occurrence <b>word</b> w there is a sequence of reduction operations that may be applied to w so that what remains is the empty word, [epsilon]. Then the nesting index of a word w, denoted by NI(w), is defined to to be the least number of reduction operations necessary to reduce w to [epsilon]. The nesting index is the first property of assembly graphs that we study. We use chord diagrams as tools in our study of the nesting index. We observe two <b>double</b> occurrence <b>words</b> that correspond to the same circle graph, but that have arbitrarily large differences in nesting index values. In 2012, Buck et al. considered the cellular embeddings of assembly graphs into orientable surfaces. The genus range of an assembly graph [Gamma], denoted gr([Gamma]), was defined to be the set of integers g where g is the genus of an orientable surface F into which [Gamma] cellularly embeds. The genus range is the second property of assembly graphs that we study. We generalize the notion of the genus range to that of the genus spectrum, where for each g [isin] gr([Gamma]) we consider the number of orientable surfaces F obtained from [Gamma] by a special construction, called a ribbon graph construction, that have genus g. By considering this more general notion we {{gain a better understanding of}} the genus range property. Lastly, we show how one can obtain the genus spectrum of a <b>double</b> occurrence <b>word</b> from the genus spectrums of its irreducible parts, i. e., its double occurrence subwords. In the final chapter we consider constructions of <b>double</b> occurrence <b>words</b> that recognize certain values for nesting index and genus range. In general, we find that for arbitrary values of nesting index [ge] 2 and genus range, there is a <b>double</b> occurrence <b>word</b> that recognizes those values...|$|R
40|$|AbstractLet S be a <b>double</b> {{occurrence}} <b>word,</b> and let MS be the word’s interlacement matrix, {{regarded as}} a matrix over GF(2). Gauss addressed the question of which <b>double</b> occurrence <b>words</b> are realizable by generic closed curves in the plane. We reformulate answers given by Rosenstiehl and by de Fraysseix and Ossona de Mendez to give new graph-theoretic and algebraic characterizations of realizable words. Our algebraic characterization is especially pleasing: S is realizable {{if and only if}} there exists a diagonal matrix DS such that MS+DS is idempotent over GF(2) ...|$|R
50|$|However, the {{original}} Greek has the <b>double</b> <b>word</b> format {{shown in the}} KJV. The Slavonic Enoch states that a double yes or a double no were themselves forms of oath. By this understanding Jesus is not banning all oaths, but is stating that only this one form of oath is permissible. France believes the double words are simply a Semiticism that indicates the word {{is meant to be}} used on its own.|$|E
5000|$|<b>Double</b> <b>word</b> squares are {{somewhat}} {{more difficult to}} find than ordinary word squares, with the largest known fully legitimate English examples (dictionary words only) being of order 8. Puzzlers.org gives an order 8 example dating from 1953, but this contains six place names. Jeff Grant's example in the February 1992 Word Ways is an improvement, having just two proper nouns ("Aloisias", a plural of the personal name Aloisia, a feminine form of Aloysius, and [...] "Thamnata", a Biblical place-name): ...|$|E
50|$|<b>Double</b> <b>Word</b> Score - The {{contestant}} {{is shown}} a five or six-letter word, and is allowed 45 seconds {{to make as}} many words (must be at least three letters in length) from the letters of that word {{as he or she}} can. The player must state the word, and then spell it. Each word is worth $25. In addition, {{there is at least one}} other five or six-letter word that can be made from all the letters of the base word; for each word the contestant makes using all the letters in the base word, they win a further $100.|$|E
40|$|Let S be a <b>double</b> {{occurrence}} <b>word,</b> and let M_S be the word's interlacement matrix, {{regarded as}} a matrix over GF(2). Gauss addressed the question of which <b>double</b> occurrence <b>words</b> are realizable by generic closed curves in the plane. We reformulate answers given by Rosenstiehl and by de Fraysseix and Ossona de Mendez to give new graph-theoretic and algebraic characterizations of realizable words. Our algebraic characterization is especially pleasing: S is realizable {{if and only if}} there exists a diagonal matrix D_S such that M_S+D_S is idempotent over GF(2). Comment: 4 pages, 1 figur...|$|R
30|$|The {{parameter}} is copied in %rbx (1). The code affectation of new {{is located}} at (2), directly followed by the credential check function call (3). Then, (4) invokes the credential commit function and returns from the system call. Finally, let us recall that Linux core kernel virtual address space is not randomized. Furthermore, physical addresses can be trivially deduced from virtual one with the following bitwise function: f(a)=a∧¬ 0 xffffffff 80000000. Also, we can note that instruction at 0 xffffffff 81086998 is 4 B aligned, which makes DMA easier because it is also aligned to <b>double</b> <b>words.</b>|$|R
5000|$|Every TIFF file {{begins with}} a two-byte {{indicator}} of byte order: [...] "" [...] for little-endian (a.k.a. [...] "Intel byte ordering", circa 1980) or [...] "" [...] for big-endian (a.k.a. [...] "Motorola byte ordering", circa 1980) byte ordering. The next two-byte word contains the format version number, which has always been 42 for every version of TIFF (e.g., TIFF v5.0 and TIFF v6.0).All <b>words,</b> <b>double</b> <b>words,</b> etc., in the TIFF file {{are assumed to be}} in the indicated byte order. The TIFF 6.0 specification states that compliant TIFF readers must support both byte orders ( [...] and [...] ); writers may use either.|$|R
5000|$|Intel, by {{the first}} quarter of 2005, {{released}} a new Prescott core with 6x0 numbering, codenamed [...] "Prescott 2M". Prescott 2M is also sometimes known by the name of its Xeon derivative, [...] "Irwindale". It features Intel 64, the XD Bit, EIST (Enhanced Intel SpeedStep Technology), Tm2 (for processors at 3.6 GHz and above), and 2 MB of L2 cache. However, higher cache latency and the <b>double</b> <b>word</b> size, if using Intel 64 mode, negated any advantage that added cache introduced. Rather than being a targeted speed boost the double size cache was intended to provide the same space and hence performance for 64-bit mode operations.|$|E
50|$|Certain high scoring words, such as {{words with}} doubled Z's (e.g. FUZZ, JAZZ, DAZZLE) that are {{impossible}} to make in Scrabble without using blanks, can be played. The word KNICKKNACK, with 4 K's, is impossible to play in Scrabble because there is only 1 K and only 2 blanks - {{but it is possible}} to play this word in Super Scrabble. With quadruple letter scores spaced only three squares away from a <b>double</b> <b>word</b> score, {{it is not uncommon to}} see a single play score over one hundred points, even without a fifty-point bonus. Guarding against such plays becomes vital to strategy. However, due to the larger size of the board, this becomes increasingly difficult, especially late in the game.|$|E
5000|$|Many of {{the same}} {{strategies}} that are applied in standard Scrabble play can be utilized in this version. Premiums play {{a larger role in}} Super Scrabble, due to both the presence of quadruple letter and word scores, and also because {{near the edge of the}} board, <b>double</b> <b>word</b> scores are spaced closely together, making it much easier to score a [...] "double-double". In addition, opportunities for bingos are increased due to the three extra squares in each direction. For the same reason, hooks can play a larger part in strategy (a hook is a letter that can be played at the start or end of a word already on the board and as part {{of the same}} move in a new word in the cross direction).|$|E
6000|$|... "O! {{there are}} <b>double</b> <b>words</b> for everything: {{the word that}} swells, the word that belittles; you cannot fight me with a word!" [...] said he. [...] "You {{said the other day}} that I relied on your conscience: were I in your humour of detraction, I might say I built upon your vanity. It is your {{pretension}} to be un homme de parole; 'tis mine not to accept defeat. Call it vanity, call it virtue, call it greatness of soul--what signifies the expression? But recognise in each of us a common strain: that we both live for an idea." ...|$|R
40|$|We {{associate}} {{a family}} of cluster X-varieties to the dual Poisson-Lie group G* of a complex semi-simple Lie group G of adjoint type given with the standard Poisson structure. This family is described by the W-permutohedron associated to the Lie algebra g of G: vertices being labeled by cluster X-varieties and edges by new Poisson birational isomorphisms, on appropriate seed X-tori, called saltation. The underlying combinatorics {{is based on a}} factorization of the Fomin-Zelevinsky twist maps into mutations and other new Poisson birational isomorphisms on seed X-tori called tropicalmutations, associated to an enrichment of the combinatorics on <b>double</b> <b>words</b> of the Weyl group W of G...|$|R
50|$|The {{earliest}} writing style programs {{checked for}} wordy, , clichéd, or misused phrases in a text. This process {{was based on}} simple pattern matching. The heart {{of the program was}} a list of many hundreds or thousands of phrases that are considered poor writing by many experts. The list of questionable phrases included alternative wording for each phrase. The checking program would simply break text into sentences, check for any matches in the phrase dictionary, flag suspect phrases and show an alternative. These programs could also perform some mechanical checks. For example, they would typically flag <b>doubled</b> <b>words,</b> <b>doubled</b> punctuation, some capitalization errors, and other simple mechanical mistakes.|$|R
