87|30|Public
5000|$|... yEd, a free Java-based <b>graph</b> <b>editor,</b> {{supports}} import {{from and}} export to GML.|$|E
5000|$|... #Caption: [...] All 4 MOF {{levels for}} Entity-Relationship Diagrams {{displayed}} in the ConceptBase <b>Graph</b> <b>Editor</b> ...|$|E
50|$|The <b>Graph</b> <b>Editor</b> is {{used for}} editing motion through {{creating}} keyframes; this is extremely useful in pose-to-pose animation.|$|E
40|$|Abstract. Conceptual Graphs are a {{powerful}} visual knowledge representation language. In this paper {{we are interested}} in the use of Conceptual Graphs in the setting of Ontology Based Data Access, and, more specifically, in reasoning in the presence of inconsistency. We present different explanation heuristics of query answering under inconsistency and show how they can be implemented under the Conceptual <b>Graphs</b> <b>editor</b> COGUI. ...|$|R
40|$|Graphviz is a {{heterogeneous}} collection of graph drawing tools containing batch layout programs (dot, neato, fdp, twopi); {{a platform for}} incremental layout (Dynagraph); customizable <b>graph</b> <b>editors</b> (dotty, Grappa); a server for including graphs in Web pages (Webdot); support for graphs as COM objects (Montage); utility programs useful in graph visualization; and libraries for attributed graphs. The software is available under an Open Source license. The article [1] provides {{a detailed description of}} the package. ...|$|R
50|$|SHAZAM is {{currently}} available in four editions. SHAZAM Command Line Edition (SHAZAMD and SHAZAMQ) are text user interface versions that allow batch processing. They operate in double and quad precisions. SHAZAM Standard Edition (SHAZAMW) adds a native Windows application that incorporates a multiple document interface (MDI) interface including command, data, matrix, <b>graph</b> <b>editors</b> and a Workspace viewer along with integrated online help, samples and examples. SHAZAM Professional Edition (SHAZAMP) adds menu and wizard driven facilities for executing SHAZAM techniques, a data connector with SQL editor {{as well as}} an integrated debugger.|$|R
5000|$|... yEd, a {{widespread}} <b>graph</b> <b>editor</b> that uses GraphML as its native file format (but ports, hypergraphs not supported and limited nested graphs support).|$|E
50|$|A Chord {{network with}} 1000 nodes, whose node Ids are {{randomly}} built. This output is obtained loading the output file into the yEd <b>graph</b> <b>editor,</b> included {{into the current}} PlanetSim distribution.|$|E
50|$|Rigi is an {{interactive}} <b>graph</b> <b>editor</b> tool for software reverse engineering using the white box method, i.e. necessitating source code, {{thus it is}} mainly aimed at program comprehension. Rigi is distributed by its main author, Hausi A. Müller and the Rigi research group at the University of Victoria.|$|E
40|$|We present {{concepts}} for {{the implementation}} of hierarchical graphs, which can be used as basis {{for the implementation}} of tools for graphical formal description techniques (gFDT) like SDL or statecharts. Our approach provides a strong modularity of a specification by a loose coupling between different hierarchy levels and it serves for a rapid development of interactive editors for gFDTs by a special technique of describing hierarchy. Furthermore, this technique allows the reuse of <b>graph</b> <b>editors</b> in different applications. Our concepts are explained by means of the graphical design tool Moby/plc for a special class of real-time automata, called PLC-Automata. ...|$|R
40|$|Generating Graphical Editors for Graph-like Data Structures Many modern {{applications}} favor {{one or more}} {{graphical diagram}} editors, of which – despite their different look & feel and problem domains – on a closer look many have very similar functionality. Examples are UML class diagrams, finite automata, electronic circuit diagrams, or network charts. Their similarity is, that in an abstract way they all work on, edit and display a <b>graph.</b> These <b>editors</b> and diagram viewers are mostly implemented by hand. Although this work is not very often done from scratch but rather {{with the help of}} some object oriented framework, it remains a complex task with usually high development costs. This diploma thesis focuses on how the development and maintenance cost for this kind of graphical editors can be reduced. The problem is addressed in three steps: We analyze example applications, extracting and structuring classes of requirements for <b>graph</b> <b>editors</b> to examine and clearly define the problem domain. We develop a description language that allows to define and fully specify a graph edito...|$|R
40|$|Precise {{alignment}} of graphical objects {{and the creation}} of accurate layouts are crucial activities in many applications, such as graphics design tools, presentation software or <b>graph</b> <b>editors.</b> Surface computing is very promising for these application domains but not fully explored yet. In this paper we contribute two tools which support layout tasks on interactive displays: interactive grids and multi-touch alignment guides. Both tools allow the precise positioning of graphical objects in a flexible and fluent way by multi-touch input. Direct bimanual interaction and physical metaphors are applied to arrange objects along straight lines and curves. A formative user evaluation showed promising results with regard to a productive and easy use of the tools. Author Keyword...|$|R
5000|$|NooJ is a {{linguistic}} development environment software {{as well as}} a corpus processor constructed by Max Silberztein. NooJ allows linguists to construct the four classes of the Chomsky-Schützenberger hierarchy of generative grammars: [...] Finite-State Grammars, [...] Context-Free Grammars, [...] Context-Sensitive Grammars as well as [...] Unrestricted Grammars, using either a text editor (e.g. to write down regular expressions), or a <b>Graph</b> <b>editor.</b>|$|E
40|$|There are {{increasing}} demands for graphics-oriented software packages for graph theory teaching and research. G-Net, a departmental research project headed by Dr. Jay Bagga, {{is an effort}} to create a software package that comprises of a graph database, a <b>graph</b> <b>editor,</b> 'and a collection of graph algorithms. Also, with widespread use of the World Wide Web, the <b>graph</b> <b>editor</b> should be accessible through the Web. Taking these issues into consideration Jedit (Java <b>Graph</b> <b>editor)</b> is developed. This thesis concentrates on the design and implementation of a <b>graph</b> <b>editor</b> and a graph object (Jgraph). Jgraph is developed in java to implement the graph algorithms in future. One of the unique features of this <b>graph</b> <b>editor</b> is that it can be used as stand-alone application or as an applet for the Web. In addition, it also provides a friendly user interface. Department of Computer ScienceThesis (M. S. ...|$|E
40|$|The Graph Layout Toolkit and the <b>Graph</b> <b>Editor</b> Toolkit are portable, {{flexible}} toolkits for graph {{layout and}} graph editing systems. The Graph Layout Toolkit contains four highly customizable layout algorithms, and supports hierarchical graphs. The <b>Graph</b> <b>Editor</b> Toolkit is a tightly coupled interactive front {{end to the}} Graph Layout Toolkit...|$|E
40|$|The main aim of {{this thesis}} is to perform {{analytical}} methods for estimating {{the most commonly used}} survival distributions. There are introduced the maximum likelihood estimates of the parameters for the exponential, log-normal, gamma, logistic, Gumbel and Weibull distributions without data censored. For some distributions are mentioned probability plotting and how to estimate parameters with method of least squares or by method of moments. There are discussed tests of goodness of the best fitting distribution. Two tests are based on log-likelihood function and another on test of hypothesis. Practical part of this paper forms application programmed in VBA in MS Excel. Main part of this application includes: module for probability calculations, <b>graphs</b> <b>editor</b> and module for data analysis...|$|R
40|$|We {{describe}} a data structure for efficiently maintaining views of dynamic graphs. A view evolves from a base graph by the contraction of subgraphs that are recursively defined by an associated (static) hierarchy. Our data structure provides methods to refine and coarsen the view interactively, while the base graph {{is subject to}} node and edge insertions or deletions. So far efficient solutions for this problem did not allow insertion or deletion of graph nodes. Providing these operations, our data structure is better suited for the use in <b>graph</b> <b>editors,</b> because all common operations on the base graph are supported; it helps in exploring and editing large, hierarchically structured graphs, e. g., network traffic graphs, biochemical pathways, road maps, or the web graph. ...|$|R
40|$|Segment {{endpoint}} visibility graph is {{a representation}} scheme for art gallery problems, guard problems, and other shortest path or shortest circuit problems. In {{the research of}} visibility graphs, drawing graphs is a time-consuming task. VGE (Visibility <b>Graphs</b> <b>Editor)</b> is developed for visibility graphs reseacheres to create and modify graphs interactively in X-window environment. Appropriate graphics user interface allows the researcher to edit a graph, save and open a file, and make a hard copy of a graph. VGE is developed in C under X-window environment and using EZD[3] graphics tool. The thesis also discusses the uses of EZD. Although it is still only a prototype, VGE is a successful tool for analyzing visibility graphs. Department of Computer ScienceThesis (M. S. ...|$|R
40|$|Abstract. This paper {{presents}} {{an analysis of}} natural movement in Latin dance and a synthesis of dance motions making use of the outcome. The isolation movement of shoulders and hips in Latin dance was extracted quantitatively, and a dance animation with different isolation levels was synthesized, using a motion <b>graph</b> <b>editor.</b> ...|$|E
40|$|There is an {{increasing}} demand for a computer graphics - oriented software package for graph theory teaching and research. G-Net, a department research project headed by Dr. Kunwarjit Bagga, {{is an effort to}} create a computer software that contains a graph theory database, a <b>graph</b> <b>editor,</b> and a collection of algorithms to be executed on the graphs. This thesis concentrates on the design and implementation of a <b>graph</b> <b>editor</b> - GrapliPerfect. Graphs have been widely used to model many other phenomena. In this thesis, computer generated graphics images are used to represent graphs. This modeling relation between graphs and graphics is analyzed, and its role in the design and implementation of GraphPerfect is discussed in the thesis. To enhance the friendliness of the user interface, a simplified window system is presented. Department of Computer ScienceThesis (M. S. ...|$|E
40|$|BIOCHAM is {{presented}} with a user friendly graphical interface, that is {{easy to use and}} gives the user richer experience throughout his work. The current release of its graphical user interface has a SBGN compliant Reaction <b>Graph</b> <b>Editor</b> for drawing and editing biochemical networks. It also offers export features to SBML and other formats. |$|E
40|$|International audienceThis paper {{reports on}} the ongoing effort in {{building}} an RDF ontology for the de-facto standard conceptual model for library catalogs. We motivate our work by a concrete real world application and demonstrate how using the CoGui Conceptual <b>Graphs</b> ontology <b>editor</b> will highly benefit the task...|$|R
40|$|This paper {{describes}} a interchangable file format for storing graphs in a file, {{as it is}} used by the GraphEd system. This format combines an adjacency list with embedded graphical information. It is designed as an extendible format and provides facilities such that other programs can easily add their own information in their own format. 1 Introduction With the devopment of several <b>graph</b> <b>editors</b> and <b>graph</b> manipulation packages, such as GraphEd [2, 3], EDGE [7], VEGA, vcg [6], gem, dot, graphbase [5], or daVinci [1], several formats for storing graphs have been implemented. However, nearly each tool uses its own format, and almost all of them are pairwise incompatible. Exceptions are VCG which uses EDGE's format, and gem uses GraphEd's format. As a consequence, it is quite difficult to exchange graphs between different tools. Not only the syntax is different, there are also several semantic differences: ffl Some formats support only directed or only undirected graphs. ffl Some formats [...] ...|$|R
40|$|Nowadays, many {{database}} {{systems are}} available {{but they may}} not be optimized for storing time series data. Monitoring DIRAC jobs would be better done using a database optimised for storing time series data. So far it was done using a MySQL database, which is not well suited for such an application. Therefore alternatives have been investigated. Choosing an appropriate database for storing huge amounts of time series data is not trivial as one must take into account different aspects such as manageability, scalability and extensibility. We compared the performance of Elasticsearch, OpenTSDB (based on HBase) and InfluxDB NoSQL databases, using the same set of machines and the same data. We also evaluated the effort required for maintaining them. Using the LHCb Workload Management System (WMS), based on DIRAC as a use case we set up a new monitoring system, in parallel with the current MySQL system, and we stored the same data into the databases under test. We evaluated Grafana (for OpenTSDB) and Kibana (for ElasticSearch) metrics and <b>graph</b> <b>editors</b> for creating dashboards, {{in order to have a}} clear picture on the usability of each candidate. In this paper we present the results of this study and the performance of the selected technology. We also give an outlook of other potential applications of NoSQL databases within the DIRAC project...|$|R
40|$|This {{bachelor}} {{thesis is}} engaged in concept and implementation of <b>graph</b> <b>editor,</b> which is connected with concrete information system using protocol XML-RPC. The application is created using programming language Python and its graphic library Python Imaging Library. Graphic user interface is realized by GTK+ or more precisely by PyGTK, its application program interface for Python...|$|E
40|$|We {{describe}} DiGraph, a customisable <b>graph</b> <b>editor</b> {{that has}} been built using the Tcl/Tk programming system. We show how DiGraph can be customised {{to act as a}} programming environment for the Hathi- 2 transputer machine. We also discuss how DiGraph {{could be used as a}} base for building programming environments to other parallel/distributed systems that use point-to-point message passing...|$|E
40|$|Introduction We have {{developed}} formal specifications for a <b>Graph</b> <b>Editor</b> using IFAD VDM-SL Toolbox version 2. 3. 1 [1, 2]. Section 2 provides an informal {{description of the}} graph editor; Section 3 contains the formal specifications. The specifications have been checked using the syntax checker and the static semantics checker of the toolset. The L a T E X code generator of the toolset was used to generate the L a T E X documents. 2 Statement of the Problem Our goal is to specify and design a <b>Graph</b> <b>Editor.</b> The editor {{can be used to}} create and manipulate several geometric objects. The design can be verified by observing the behavior of the editor while actually drawing and manipulating the objects on the screen. Following sections describe the informal requirements of the editor, a system model for it and its formal specifications in VDM-SL. 2. 1 Geometrical Obje...|$|E
40|$|Graphviz is a {{heterogeneous}} collection of graph drawing tools containing batch layout programs (dot, neato, fdp, twopi); {{a platform for}} incremental layout (Dynagraph); customizable <b>graph</b> <b>editors</b> (dotty, Grappa); a server for including graphs in Web pages (WebDot); support for graphs as COM objects (Montage); utility programs useful in graph visualization; and libraries for attributed graphs. The software is available under an Open Source license. The article[1] provides {{a detailed description of}} the package. The Graphviz software began with a precursor of dot in 1988, followed by neato in the early 90 ’s. The features expanded greatly over the years, driven by user request. Graphviz became Open Source in 2000, and was recently distributed on about 500, 000 CDROMs as an add-on package for the SUSE Linux release, and is redistributed by Debian, Mandrake, SourceForge, and soon OpenBSD. 2 Areas of Application Thanks to the variety of components available and its open, “toolkit ” design, Graphviz supports a wide variety of applications. The foremost application is probably presentation layouts, such as including graphs in papers. As stream processors, the Graphviz tools can be used as co-processes with interactive components to provide dynamic layouts for debuggers, process monitors, program analysis software, etc. Graphviz tools have been adopted as a visualization service by the W 3 C Resource Description Framewor...|$|R
40|$|Abstract: In this paper, {{software}} architectures {{and architecture}} styles are modeled with attributed typed graphs and graph grammars respectively. Accordingly, dynamic reconfigurations of software architectures are modeled with graph transformations. Based {{on such a}} modeling, a supporting environment is constructed twofold. Firstly, the visual manipulation of the graphical representation of software architectures is supported with a <b>graph</b> grammar-enabled <b>editor.</b> Secondly, the graphical architecture model is reified as a runtime software architecture object built into the physical running system, through which graph transformations of the architecture model is then naturally reflected as dynamic reconfigurations of the running system...|$|R
50|$|Sanders {{received}} his Ph.D. in algorithms, combinatorics, and optimization from Georgia Tech in 1993 {{under the guidance}} of professor Robin Thomas. He was the <b>Graph</b> Theory Resources <b>editor</b> of www.graphtheory.com. Sanders is a quantitative strategist at Renaissance Technologies. He has been on the faculty of the mathematics departments of the Ohio State University and Princeton University.|$|R
40|$|Embedded {{real-time}} {{applications in}} communication systems have significant timing constraints, thus requiring multiple computation units. Manually exploring the potential parallelism of an application deployed on multi-core architectures is greatly time-consuming. This paper presents an open source Eclipse-based framework {{which aims to}} facilitate the exploration and development processes in this context. The framework includes a generic <b>graph</b> <b>editor</b> (Graphiti), a graph transformation library (SDF 4 J) and an automatic mapper/scheduler tool with simulation and code generation capabilities (PREESM). The input of the framework is composed of a scenario description and two graphs, one graph describes an algorithm and the second graph describes an architecture. The rapid prototyping results of a 3 GPP Long Term Evolution (LTE) algorithm on a multi-core digital signal processor illustrate both the features and the capabilities of this framework. Index Terms — Rapid prototyping, static scheduling, automatic code generation, generic <b>graph</b> <b>editor,</b> LTE 1...|$|E
40|$|VGJ is an {{automated}} system capable of converting a textual description or {{a drawing of}} a graph into a well organized and readable layout of the graph. VGJ (visualizing graphs with Java), includes a <b>graph</b> <b>editor</b> {{and a set of}} algorithms that will automatically layout and draw a graph. The graph drawing package can be accessed through the web at: www. tufts. edu/ mccreary/graph_drawing. htm...|$|E
40|$|This paper {{describes}} GET (<b>Graph</b> <b>Editor</b> and Tools), a tool {{based on}} Sowa's conceptual structures, {{which can be}} used for generic knowledge acquisition and representation. The system enabled the acquisition of semantic information (restrictions) for a lexicon used by a semantic interpreter for Portuguese sentences featuring some deduction capabilities. GET also enables the graphical representation of conceptual relations by incorporating an X-Windows based editor...|$|E
40|$|Introduction to the Simulation Task This task {{involves}} the design & {{development of a}} set of tools which constitutes the Simulation Tool of parallel machines in a Software Environment for Parallel Programming. The Simulation Task has been considered from two points of view: ffl Part A - Parallel Systems Simulation (University Autonoma of Barcelona) A set of Tools developed to allow to the user the study and performance analysis of parallel systems by simulation. These tools are: Event Driven Simulator (directed by events), Hardware <b>Editor,</b> Mapping <b>Editor,</b> <b>Graph</b> and Parameters <b>Editor,</b> Replay Tool, Parameters Estimation Tool. ffl Part B - PVM Simulation (University of Westminster) A toolset which combines a graphical design tool (PVMGraph), a simulation facility, and a visualisation tool (PVMVis). The main objective for this project is the design & implementation of these tools in order to allows to the user works with a friendly Paralle...|$|R
30|$|The {{first step}} of the process is to {{describe}} both the target algorithm and the target architecture <b>graphs.</b> A graphical <b>editor</b> reduces the development time required to create, modify and edit those graphs. The role of Graphiti [21] is to support the creation of algorithm and architecture graphs for the proposed framework. Graphiti can also be quickly configured to support any type of file formats used for generic graph descriptions.|$|R
40|$|The {{study of}} orthographic {{variants}} {{as exemplified by}} the Benedictines of St. Jerome in vol. XIII of their critical edition of the Vulgate {{is of particular interest}} to Hispanists for the phonetic traits suggested by MSS written hispane and hispanissime, and of general interest because it challenges the connotation of certain <b>graphs</b> considered by <b>editors</b> of early Romance texts as learned and opens up the problem of the interpretation of Latin abbreviations in vernacular context...|$|R
