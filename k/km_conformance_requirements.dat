0|199|Public
40|$|This document, the JMF ICS, {{defines the}} <b>conformance</b> <b>requirements</b> {{that relate to}} {{communication}} using JMF. This document specifies two Conformance Levels of <b>Conformance</b> <b>Requirements.</b> These levels mainly differ {{in the type of}} communication between the Manager and the Worker and include the <b>conformance</b> <b>requirements</b> for Hot Folders and JMF Messages. This version applies to interactions using JDF 1. 3...|$|R
40|$|This {{document}} {{is the first}} of a series of ICS (Interoperability Conformance Specification) documents. Each ICS defines a set of <b>Conformance</b> <b>Requirements</b> that a conforming JDF-enabled Product must meet in order to achieve interoperability with other conforming JDF-enabled Products. This document, the Base ICS, defines the <b>Conformance</b> <b>Requirements</b> that are common to all other ICSs, i. e. those <b>Conformance</b> <b>Requirements</b> that have been factored out of the other ICSs and placed in this ICS. This document specifies two Conformance Levels of <b>Conformance</b> <b>Requirements.</b> These levels mainly differ in the method of providing / accessing Referenced Files between the Manager and the Worker and include the <b>Conformance</b> <b>Requirements</b> for Hot Folders, string Attributes, and specific JDF Elements. This version applies to interactions using [JDF 1. 4 a]...|$|R
40|$|This {{document}} {{is the first}} of a series of Interoperability Conformance Specification (ICS) documents. Each ICS defines a set of <b>conformance</b> <b>requirements</b> that a conforming JDF-enabled product must meet in order to achieve interoperability with other conforming JDF-enabled products. This document, the Base ICS, defines the <b>conformance</b> <b>requirements</b> that are common to all other ICS’s, i. e. those <b>conformance</b> <b>requirements</b> that have been factored out of the other ICS’s and placed in this ICS. This document specifies three Conformance Levels of <b>Conformance</b> <b>Requirements.</b> These levels mainly differ in the type of communication between the Manager and the Worker and include the <b>conformance</b> <b>requirements</b> for Hot Folders, string Attributes, specific JDF Elements and specific JMF Messages. The JMF Commands include: SubmitQueueEntry, ReturnQueueEntry, an...|$|R
5000|$|... 3rd Edition (October 2005) - {{clarification}} of various <b>conformance</b> <b>requirements</b> {{and of the}} interaction between content objects and the runtime environment for sequencing; some new <b>conformance</b> <b>requirements</b> to improve interoperability.|$|R
5000|$|Support all {{relevant}} <b>Conformance</b> <b>Requirements</b> defined within the OpenAjax Alliance's collection of specifications ...|$|R
50|$|Compliance Requirements - {{detailed}} {{list of the}} <b>conformance</b> <b>requirements</b> {{that are}} verified by the ADL SCORM conformance test suite.|$|R
50|$|Java EE {{is defined}} by its specification. As with other Java Community Process specifications, {{providers}} must meet certain <b>conformance</b> <b>requirements</b> in order to declare their products as Java EE compliant.|$|R
40|$|This CIP 4 JDF Interoperability Conformance Specification (ICS) {{defines the}} {{interoperability}} requirements for JDF Sheet-Fed Offset Printing. This ICS defines the <b>Conformance</b> <b>Requirements</b> for an {{implementation of a}} JDF Device that consumes Job Tickets for sheet-fed offset printing, and returns the Job Tickets. This ICS defines tw...|$|R
5000|$|To {{ensure that}} actual {{implementations}} of such standardised features are interoperable, the standardisation bodies also create so called test specifications. These document detail exact procedures {{on how to}} test that an implementation under test acts according to <b>conformance</b> <b>requirements.</b> Important test specifications for the (U)SIM interface are: ...|$|R
50|$|In his seminal article No Silver Bullet, Fred Brooks {{points out}} that the complexity, <b>conformance</b> <b>requirements,</b> changeability, and invisibility of {{software}} results in inherent and essential variation that cannot be removed. This implies that SPC is less effective in the domain of software development than in, e.g., manufacturing.|$|R
40|$|International audienceThis paper {{presents}} an ontological method {{aimed at the}} capitalisation and organisation of conformance-related knowledge for semi-automatic checking model of the conformance of construction projects against a set of <b>conformance</b> <b>requirements.</b> We start by {{developing a method for}} knowledge representation of explicit knowledge taking part in checking, and capitalisation of tacit knowledge defining checking practices. Then we explain our approach for classification, organisation and retrieval of <b>conformance</b> <b>requirements</b> and propose an approach for scheduling these requirements to optimise the checking process. Finally, we introduce our reasoning model that is based on matching graph representations of construction projects and conformance queries, and interpret the acquired results in terms of conformance checking in construction. To validate our approach, we describe a prototype illustrating its feasibility, and discuss ongoing works and perspectives of our research...|$|R
5000|$|... 896.4-1993 IEEE Standard for <b>Conformance</b> Test <b>Requirements</b> for Futurebus+ ...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes the registration of media types for the ECMAScript and JavaScript programming languages and <b>conformance</b> <b>requirements</b> for implementations of these types...|$|R
5000|$|A {{cornerstone}} of OpenAjax Alliance activities {{is the definition}} of OpenAjax Conformance. OpenAjax Conformance is shorthand for the set of <b>conformance</b> <b>requirements</b> that the OpenAjax Alliance places on Ajax technologies, products and applications. By using Ajax products that support OpenAjax Conformance, OpenAjax claims that IT managers and Web developers would notice the following benefits: ...|$|R
40|$|This CIP 4 JDF Interoperability Conformance Specification (ICS) {{specifies}} the <b>Conformance</b> <b>Requirements</b> for {{a subset}} of JDF defined as Level 0 Digital Printing. This subset is useful for {{black and white and}} limited color digital printing systems with “traditional ” office finishing features such as stapling and collation. It encompasses {{a subset of}} IPP semantics [IPP-std]...|$|R
50|$|The {{first part}} gives an {{overview}} with particular reference to SMBus, {{while the second}} part goes into detail about all the commands defined for PMBus devices. There are both standardized commands and manufacturer specific commands. <b>Conformance</b> <b>requirements</b> for PMBus are minimal, and are described in Part I of the specification. See the PMBus 1.1 specification for full details.|$|R
40|$|This CIP 4 JDF Interoperability Conformance Specification (ICS) {{defines the}} {{interoperability}} requirements for JDF Commercial WebPrinting (Web/Rotary Offset Printing). This ICS defines the <b>Conformance</b> <b>Requirements</b> for an {{implementation of a}} JDF Device that consumes Job Tickets for commercial WebPrinting, and returns the Job Tickets. This ICS defines two conformance Levels. The first level, describes the conventional plate handling and the second describes direct imagining on a press...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. This document describes the registration of media types for the Ogg container format and <b>conformance</b> <b>requirements</b> for implementations o...|$|R
5000|$|The {{definition}} of quality is <b>conformance</b> to <b>requirements</b> (requirements meaning both {{the product and}} the customer's requirements):#The system of quality is prevention ...|$|R
50|$|When {{a product}} is {{submitted}} to Avnu Alliance for certification, it is tested against over 400 pages of <b>conformance</b> <b>requirements,</b> which combine IEEE 802.1 standard requirements with additional requirements developed by Avnu. Any issues the product may have are then reported to the manufacturer. After fixing any outstanding issues, the manufacturer can submit the product to Avnu for official approval and {{permission to use the}} Avnu certification logo on the product and any accompanying marketing efforts.|$|R
50|$|NIEM is a {{reference}} model. This means {{it is not}} a rigid standard that must be used exactly as it is in its entirety. NIEM was designed as a core set of building blocks that are used as a consistent baseline for creating exchange documents and transactions across government. While an XML Schema rendering of the entire model exists, {{it is not a}} <b>requirement</b> for NIEM <b>conformance</b> that this entire schema be used for validation. Nonetheless, there are several <b>conformance</b> <b>requirements.</b>|$|R
5000|$|In APs {{with several}} Conformance Classes the top data model {{is divided into}} subsets, one for each <b>Conformance</b> Class.The <b>requirements</b> of a {{conformant}} STEP application are: ...|$|R
5000|$|... #Subtitle level 2: iSCSI <b>Conformance</b> Testing Tool <b>Requirement</b> ...|$|R
40|$|With the {{completion}} of Java Data Mining (JSR- 73), customers and vendors now have available a powerful standard to enable applications with data mining, both through Java and Web services. In this paper, we introduce Java Data Mining with examples highlighting both the Java and Web services interfaces. We discuss <b>conformance</b> <b>requirements</b> using the Technology Compatibility Kit (TCK) for vendors implementing the standard. Lastly, we comment on likely features for the next release of JDM. The expert group is now forming for Java Data Mining 2. 0 as the JCP Executive Committee approved JSR- 247...|$|R
50|$|Testing {{is often}} either logical testing or {{physical}} testing. The test procedures may involve other criteria from mathematical testing or chemical testing. Beyond simple <b>conformance</b> other <b>requirements</b> for efficiency, interoperability or compliance may apply.|$|R
40|$|This CIP 4 JDF Interoperability Conformance Specification (ICS) {{specifies}} {{three levels}} of <b>Conformance</b> <b>Requirements</b> (levels 0 to 2) for a subset of JDF defined for Integrated Digital Printing (IDP). Black and white, Highlight Color, or color simplex and duplexing digital printing systems are assumed with OPTIONAL in-line finishing capabilities. It encompasses quick print and production printing IPP semantics [IPP-std]. This ICS contains {{the contents of the}} Digital Printing Job UsageCounter Resource (DPJUCR) ICS [DPJUCR-ICS] indicated with Light Green fill and is the Master Copy for the DPJUCR ICS. If another ICS uses the DPJUCR ICS, then the Light Green fill sections will be copied into it...|$|R
5000|$|In 1993 {{the third}} {{version of the}} {{standard}} was released. Its name was then changed to [...] "DICOM". New service classes were defined, network support added and the Conformance Statement was introduced. Officially, {{the latest version of}} the standard is still 3.0. It has been constantly updated and extended since 1993, but most changes are forward and backward compatible, except in rare cases where the original specification was not interoperable or conflicted with another standard. The standard should be referenced without specification of the date of release of a particular edition, except when specific <b>conformance</b> <b>requirements</b> are invoked that depend on a particular change (e.g., to reference a retired feature).|$|R
2500|$|The {{manufacturing}} perspective represents {{quality as}} <b>conformance</b> to <b>requirements.</b> This aspect of quality is stressed by standards such as ISO 9001, which defines quality as [...] "the {{degree to which}} a set of inherent characteristics fulfills requirements" [...] (ISO/IEC 9001).|$|R
40|$|The {{information}} retrieval service describes an activity between two applications: an initiating application, the client and a responding application, the server. The server is associated {{with one or more}} databases. Communication between client and server is carried out by the Z 39. 50 protocol. The protocol specifies format and procedures governing the exchange of messages between client and server. Thus enabling a client to request that the server search a data base and identify records that meets specified criteria and retrieve {{some or all of the}} identified records. This paper describes the protocol procedures, protocol model, rules of extensibility, general and specific <b>conformance</b> <b>requirements</b> and detail requirements for the protocol addresses communication between the client and server...|$|R
50|$|Software {{development}} is a continuous learning process based on iterations when writing code. Software design is a problem solving process involving the developers writing the code {{and what they have}} learned. Software value is measured in fitness for use and not in <b>conformance</b> to <b>requirements.</b>|$|R
5000|$|Design Verification* Design {{adequacy}} and <b>conformance</b> to Software <b>Requirements</b> and Interfaces* Internal and External Consistency* Verification of Feasibility and Maintenance ...|$|R
50|$|Verification by Analysis - The {{analysis}} {{verification method}} applies to verification by investigation, mathematical calculations, logical evaluation, and calculations using classical textbook methods or accepted general use computer methods. Analysis includes sampling and correlating measured data and observed test results with calculated expected values to establish <b>conformance</b> with <b>requirements.</b>|$|R
40|$|Abstract. Most {{information}} {{systems that are}} driven by process models (e. g., workflow management systems) record events in event logs, also known as transaction logs or audit trails. We consider processes that not only keep track of their history in a log, but also {{make decisions based on}} this log. Extending our previous work on history-dependent Petri nets we propose and evaluate a methodology for modelling processes by such nets and show how history-dependent nets can combine modelling comfort with analysability. 1 Introduction and a Motivating Example Modern enterprise {{information systems}} commonly record information on the ongoing processes as series of events, known as logs. Such information might be useful to ensure quality of the processes or of the software, or might even form a legal <b>conformance</b> <b>requirement.</b> Moreover, numerous business processes involv...|$|R
40|$|AP Issues Feedback Industrial Need ATS Review AIM Review Report Qualified AIM Develop Application Reference Model (ARM) Develop Application Interpreted Model (AIM) Develop AP Define <b>Conformance</b> <b>Requirements</b> AP Validation Management Reports AP Issues Feedback Abstract Test Suite & Validate Test Requirements Candidate AP Summary Sheet Purposes Validation Test Suite (AAM) Submit AP to Standards Body Report PICS {{proforma}} Conform clause NIIIP Reference Architecture: Concepts and Guidelines NIIIP Reference Architecture Page 24 Cycle 0 Figure 7 : STEP Data Objects STEP Data {{objects are}} supported by a potentially large number of AIM objects. In addition, STEP Data Objects interact with STEP Services. STEP Services represent the applications {{that the members of}} an industrial virtual enterprise use to develop and share product data. The figure shows applications and objects that have been identified in the AAM's and ARM's of AP 203 and AP 210. The [...] ...|$|R
40|$|Abstract An {{architecture}} is a specification {{of the components}} of a system and the communication between them. Systems are constrained to conform to an architecture. An architecture should guarantee certain behavioral properties of a conforming system, i. e., one whose components are configured according to the architecture. An architecture should also be useful in various ways during the process of building a system. This paper presents three alternative concepts of architecture: object connection architecture, interface connection architecture, and plug and socket architecture. We describe different concepts of interface and connection that are needed {{for each of the three}} kinds of architecture, and different <b>conformance</b> <b>requirements</b> of each kind. Simple examples are used to compare the usefulness of each kind of architecture in guaranteeing properties of conforming systems, and in correctly modifying a conforming system. In comparing the three architecture concepts the principle of [...] ...|$|R
40|$|In this paper, we {{consider}} the problem on conformance testing of communication protocols which are modeled by labeled transition systems. The <b>conformance</b> <b>requirements</b> of specifications are represented as the trace equivalence relation and derived test suites have finite behavior and provide well-defined fault coverage. For this problem, we first give a testing framework and then, based on the state identification technique, we present a test generation method. The advantages of our method over other methods are that it not only ensures trace equivalence {{in a class of}} implementations whose state numbers are bounded by a known integer, but also requires no transformation of LTSs to input/output finite state machines. KEYWORDS: Conformance relations, labeled transition systems, protocol conformance testing and software testing. 1 Introduction One of important issues of conformance testing is to derive useful tests for communication protocols specified in labeled transition systems (LT [...] ...|$|R
