5|56|Public
40|$|In Isabelle, {{there are}} several {{possibilities}} when one wants to support partial functions. One could put Isabelle to its intended use by directly embedding a logic of partial functions in Isabelle's meta-logic. Alternatively, one could investigate partial functions in one of Isabelle's already well-developed object logics, e. g., ZF or HOL. In this paper we pursue the second approach and describe miscellaneous support for partiality found in the HOL instantiation of Isabelle. This support ranges from (1) underspecification and lifting in a recursive function <b>definition</b> <b>package,</b> (2) inductive definitions, to (3) HOLCF, an embedding of domain theory. All approaches are illustrated by relatively large examples...|$|E
40|$|Equations is a plugin for the Coq proof {{assistant}} {{which provides}} a notation for defining programs by dependent pattern-matching and well-founded recursion and derives useful proof principles for demonstrating properties about them. We present here an improved design and rewriting of its implementation that avoids the use of axioms and reliance on L tac programming, providing a feature-rich function <b>definition</b> <b>package</b> for Coq as a definitional extension to the Coq kernel. At {{the core of the}} system is a simplifier for dependent equalities that can be reused to define enhanced versions of the dependent elimination tactics of Coq, namely dependent destruction and inversion. We introduce verified optimizations of the simplifier that allow generating smaller and simpler Eqations definitions and proof terms for these tactics in general. We demonstrate the applicability of the tool on a medium-sized example of a reflective decision procedure...|$|E
40|$|We {{describe}} here HOL-ML, an encoding of {{a subset}} of SML and its dynamic semantics (as described by The Definition of Standard ML) in HOL. This encoding, {{which is the first}} stage in a project that will include typechecking and SML Modules, allows the formal study of the evaluation of a real programming language including state and control constructs (exceptions). In this paper we describe the subset of SML that we encoded and the semantic objects needed for its evaluation. We explain how we defined the evaluation rules and how we proved that evaluation is deterministic. We describe briefly the next step, which is to define a larger language that includes type declarations and to define the typechecking rules on it. Finally, we give a short description of the mutually recursive type <b>definition</b> <b>package</b> that we wrote to enable us to define the types we needed to create the HOL-ML grammar. 1 Introduction This paper describes HOL-ML, our encoding of the dynamic Core of SML in [...] ...|$|E
50|$|These two <b>definitions</b> of <b>package</b> are exclusive. In other words, it is {{possible}} to have classes of a different package of the file that contains it.|$|R
40|$|Abstract. We {{show that}} certain {{input-output}} relations, termed inductive invariants are of central importance for termination proofs of algorithms defined by nested recursion. Inductive invariants {{can be used}} to enhance recursive function <b>definition</b> <b>packages</b> in higher-order logic mechanizations. We demonstrate the usefulness of inductive invariants on a large example of the BDD algorithm Apply. Finally, we introduce a related concept of inductive fixpoints with the property that for every functional in higher-order logic there exists a largest partial function that is such a fixpoint. ...|$|R
50|$|For the 2009 season, a new Atlantic Championship high <b>definition</b> {{television}} <b>package</b> {{was announced}} on HDNet, which features {{live coverage of}} certain events, and replays of others.|$|R
40|$|A {{complete}} {{definition of}} the scope of a project upfront during early stages ensures smooth and successful implementation during the project execution. This research identifies and prioritises project scope definition elements for public buildings in Saudi Arabia. Elements that could significantly contribute to complete project scope <b>definition</b> <b>package</b> at pre-project planning stage are identified and their interrelationship determined and prioritised. Using the Project Definition Rating Index (PDRI) as a basis, the study uses analytical network process (ANP) technique based on data obtained from project managers who have been involved in public sector projects in Saudi Arabia. Data collection and analysis was conducted in three steps. The first step involved identification of scope definition elements while the second involved an investigation into interrelationships among the elements. In the third step, ANP was used to determine the weight of the elements ’ importance in terms of contribution to project scope definition completeness. Finally, Pareto analysis was used to prioritise and assess the distribution pattern of the elements. The outcome from this research is the prioritisation of project scope definition elements for public building projects in Saudi Arabia. The prioritised list developed indicates the importance of project scope definition elements. It should help project management teams identify elements to consider when evaluating project scope definition for completeness at the pre-project planning stage...|$|E
40|$|The {{study program}} was {{contracted}} to evaluate concepts of hybrid propulsion, select the most optimum, and prepare a conceptual design package. Further, this study required preparation of a technology <b>definition</b> <b>package</b> to identify hybrid propulsion enabling technologies and planning to acquire that technology in Phase 2 and demonstrate that technology in Phase 3. Researchers evaluated two design philosophies for Hybrid Rocket Booster (HRB) selection. The first is an ASRM modified hybrid wherein as many components/designs as possible were used {{from the present}} Advanced Solid Rocket Motor (ASRM) design. The second was an entirely new hybrid optimized booster using ASRM criteria {{as a point of}} departure, i. e., diameter, thrust time curve, launch facilities, and external tank attach points. Researchers selected the new design based on the logic of optimizing a hybrid booster to provide NASA with a next generation vehicle in lieu of an interim advancement over the ASRM. The enabling technologies for hybrid propulsion are applicable to either and vehicle design may be selected at a downstream point (Phase 3) at NASA's discretion. The completion of these studies resulted in ranking the various concepts of boosters from the RSRM to a turbopump fed (TF) hybrid. The scoring resulting from the Figure of Merit (FOM) scoring system clearly shows a natural growth path where the turbopump fed solid liquid staged combustion hybrid provides maximized payload and the highest safety, reliability, and low life cycle costing...|$|E
50|$|Atlantic Championship races have {{previously}} been shown on multiple networks, including SPEED. For 2009, {{a new high}} <b>definition</b> television <b>package</b> was announced on HDNet, which features live coverage of certain events, and replays of others.|$|R
40|$|Today China {{faces the}} issue of overcrowded urban spaces. Booming {{automobile}} ownership is causing massive traffic congestion. Even though public transportation has been promoted and regarded as mainstream within the society, I believe that private vehicles do not necessarily {{need to be a}} controversial option in the future. The design process included background research, user <b>definition,</b> <b>packaging</b> studies, ideation, digital form development and context visualization. All these were carefully executed to ensure a sensible and creative result. The proposed concept vehicle envisions greater technical efficiency combined with environmental responsibility. A sports car that is the ultimate carpooling solution during weekdays and a fun getaway drive for the weekends. </p...|$|R
40|$|Packaging of {{information}} is one of development and innovation to improve library services. <b>Definition</b> of <b>packaging</b> information is a process to reprocess the existing information from one form to another better and interesting, The purpose of packaging {{of information}} is to bring information resources to users for easy, precise and quick. In this paper described the shapes, stages {{of the process of}} packaging activities informasidan also the added value obtained for the library...|$|R
50|$|Under V the IPC system {{appears to}} be conceptually modeled on remote {{procedure}} calls (RPC) from the client application's perspective. The client application imported an interface definition file containing information about the calls supported by the kernel, or other applications, and then used this <b>definition</b> to <b>package</b> up requests. When called, the kernel would immediately take over, examine the results, and pass the information {{off to the right}} handler, potentially within the kernel itself. Any results were then handed back through the kernel to the client.|$|R
5000|$|The Ada {{programming}} language allows source code {{to be broken}} up into library <b>packages</b> containing <b>definitions</b> of data and algorithms {{that can be used}} by programs or other library <b>packages.</b> The <b>definitions</b> in a <b>package</b> are made visible by a with clause. For example, if the line [...] - ...|$|R
40|$|This report {{consists}} of 3 major parts: 1) an overview on the trends and market expectations, 2) the <b>definition</b> of communicative <b>packaging</b> concepts for perishable products, 3) {{the implementation of}} the first packaging concept {{in the form of a}} case study: the tomato production and distribution chain from Europe to the USA market...|$|R
25|$|These {{provisions}} are enabled by the “Line Types” <b>definitions</b> (“Guidelines for <b>Packaging</b> Machinery Automation v3.1 {{available on the}} OMAC website) created by the OMAC Packaging Workgroup, and leveraging the ISA-88 State Model concepts. PackML definitions are intended to make machines more serviceable and easier to redeploy. PackML concepts are also finding application in the other discrete control environments such as converting, assembled products, machine tools, and robotics.|$|R
40|$|Abstract. Using {{the notions}} of unique fixed point, {{converging}} equivalence relation, and contracting function, we generalize the technique of well-founded recursion. We are able to define functions in the Isabelle theorem prover that recursively call themselves {{an infinite number of}} times. In particular, we can easily define recursive functions that operate over coinductively-defined types, such as infinite lists. Previously in Isabelle such functions could only be defined corecursively, or had to operate over types containing &quot;extra &quot; bottom-elements. We conclude the paper by showing that the functions for filtering and flattening infinite lists have simple recursive definitions. 1 Well-founded recursion Rather than specify recursive functions by possibly inconsistent axioms, several higher order logic (HOL) theorem provers[3, 9, 12] provide well-founded recursive function <b>definition</b> <b>packages,</b> where new functions can be defined conservatively. Recursive functions are defined by giving a series of pattern matching reduction rules, and a well-founded relation. For example, the map function applies a function f pointwise to each element of a finite list. This function can be defined using well-founded recursion: map:: (ff! fi) ! ff list! fi list map f [] = [] map f (x#xs) = (f x) # (map f xs) The first rule states that map applied to the empty list, denoted by [], is equal to the empty list. The second rule states that map applied to a list constructed out of the head element x and tail list xs, denoted by x#xs, is equal to the list formed by applying f to x and map f to xs recursively. To define a function using well-founded recursion, the user must also supply a well-founded relation on one of the function's arguments...|$|R
50|$|PackageForge {{works by}} {{providing}} a graphical interface towards the Symbian <b>package</b> <b>definition</b> files (.pkg). The developer provides information about the package, like the vendor, package name, version and what application files to include. After the package has been defined, the package is compiled and built into a Symbian installation file (.sis) which is then ready to be uploaded to the Nokia OVI store or for direct installation on a phone.|$|R
5000|$|Classica HD is an Italian {{television}} channel devoted to classical music, opera, ballet and jazz. It broadcasts concerts, documentaries and interviews for 20 {{hours a day}} on Sky Italia. From 2013 the channel has only been available in High <b>definition</b> on basic <b>package.</b> Classica had been owned by Vivendi up until the switch to HDTV format when was {{taken up by the}} German company Unitel GmbH & Co.KG.|$|R
5000|$|These {{provisions}} are enabled by the “Line Types” <b>definitions</b> (“Guidelines for <b>Packaging</b> Machinery Automation v3.1 {{available on the}} OMAC website) created by the OMAC Packaging Workgroup, and leveraging the ISA-88 State Model concepts. PackML definitions are intended to make machines more serviceable and easier to redeploy. [...] PackML concepts are also finding application in the other discrete control environments such as converting, assembled products, machine tools, and robotics.|$|R
50|$|BuildAMation is {{extensible}} {{by means}} of defining packages. Packages are any directory containing a special bam folder, which contains files that BuildAMation uses. The files required are an XML file, called the <b>package</b> <b>definition</b> file, which resides directly in the bam folder, which describes the package dependencies. Also, in a Scripts subdirectory of bam, there are C# files that exposes what the current package does. Packages can be logically grouped into repositories.|$|R
50|$|The App-V client {{receives}} virtual application <b>package</b> <b>definitions</b> {{in several}} ways. When configured to receive from a Full App-V Infrastructure Server, this occurs automatically on logon, or a timer, and is {{initiated by the}} App-V Client. It also may be sent instructions via a client API, which is used by System Center deployments, the virtual msi, and stand-alone methods. The App-V 5.x client API is PowerShell based, while the 4.x client uses a proprietary sftmime interface.|$|R
40|$|Abstract. The {{notion of}} {{compliance}} {{is meant to}} facilitate tool interoperability. UML 2 offers 4 compliance levels. Level Li+ 1 is obtained from Level Li through an operation called package merge. Package merge is intended to allow modeling concepts defined at one level to be extended with new features. To ensure interoperability, package merge has to ensure compatibility: the XMI representation of {{the result of the}} merge has to be compatible with that of the original package. UML 2 lacks a precise and comprehensive <b>definition</b> of <b>package</b> merge. This paper reports on our work to understand and formalize package merge. Its main result is that package merge as defined in UML 2. 1 does not ensure compatibility. To expose the problem and possible remedies more clearly, we present this result in terms of a very general classification of model extension mechanisms. ...|$|R
40|$|An {{international}} intercomparison on the calibration {{of reference}} solar cells and PV modules {{was carried out}} in 1987 to 1989. Results of comprehensive measurements by the participants on 8 reference cells in a single-cell package, 6 reference cells in a multi-cell package, and 6 PV modules are presented. Amorphous Si, monocrystalline Si and multicrystalline Si technologies were included in the round robin. A pyranometer circulated with the reference cells allowed pyranometer calibration uncertainties to be evaluated. As the standardization of calibration methods and reference devices is desired by the International Electrotechnical Commission, this intercomparison examined whether the many primary calibration methods evaluated were accurate enough and suitable for wild use. The effects of the <b>definition</b> and <b>packaging</b> of primary reference devices on the achievable uncertainties of the calibration in the chain from cell to module are discussed...|$|R
40|$|CMS {{has adopted}} S-LINK 64 (1) as the {{standard}} interface between the detector front end readout and the central Data Acquisition (DAQ) system. The S-LINK 64 is a specification of a FIFO-like interface. This includes mechanical descrip-tions of connector and daughter board format and electrical signal <b>definition.</b> The hardware/software <b>package</b> described in this paper (FEDkit) emulates the central DAQ side of this interface at the data rate required by the final DAQ system. The performance, integration with the CMS DAQ software framework, and plans for future developments for the DAQ input interface are also presente...|$|R
40|$|Package {{extension}} and template mechanisms were originally proposed {{as part of}} the Catalysis method. It has since been suggested that they can be used to capture patterns and for aspect-oriented modelling and metamodelling. This paper provides a rigorous metamodel <b>definition</b> of the <b>package</b> extension mechanism. It turns out that the definition is more subtle than one might at first think, and some of the subtleties are exposed in the paper. The paper concludes with an overview of how the core definition may be expanded to include templates and to deal with a richer base language. Tool implementation is also discussed...|$|R
5000|$|There are {{different}} ways how a SIS file can be created. The basic {{approach is to}} create a <b>package</b> <b>definition</b> file (.pkg) that contains information about the package like the vendor, package name and what files to include in the package. Then use the makesis and signsis utilities that processes the [...]pkg file and creates the actual SIS file. Other alternatives are to use the Carbide.c++ IDE that automatically builds the SIS file as part of the build process or to graphically define and create the installation package using PackageForge.The Windows utility SISContents is able to convert various file formats.|$|R
40|$|Sustainability in the {{packaging}} domain is receiving increasing attention, however, internationally {{there is no}} clear understanding about what constitutes ‘sustainable packaging’. This paper presents a draft <b>definition</b> of sustainable <b>packaging.</b> The <b>definition</b> aims to reconcile the valuable roles played by packaging in social and economic systems, while also acknowledging the need to meet ambitious environmental goals. It introduces the goal (sustainable development) as well as key ideas such as the need to consider the product/packaging system as a whole and to consider the entire product life cycle. It considers the three elements of sustainability: the economic or commercial functions that packaging fulfils, and its social and environmental functions. It also differentiates between different levels of concern, i. e. from the macro levels of society (prosperity and well-being), the intermediate levels of the product/packaging system (efficiency and effectiveness including product waste prevention) to the micro levels of packaging materials (closed cycles or zero waste) and packaging components (safe or non-toxic). In conjunction with the <b>definition,</b> the Sustainable <b>Packaging</b> Alliance in close cooperation with Australian based (including global) companies, is developing a Packaging Impact Quick Evaluation Tool (PIQET ©). PIQET © will be a decision support tool that provides packaging technologists and managers with hands-on input for defining company packaging strategies, selecting materials for packaging redesign or packaging innovation, and specifying packaging for procurement of incoming goods. This presentation outlines the early developments of PIQET ©. Corresponding author...|$|R
40|$|SummaryThere are {{apparent}} inconsistencies in clinical urgency categorisation {{among the states}} and territories, so recent national reporting of comparable elective surgery waiting times data has not used the national data on clinical urgency category. Variation in the recording of waiting times for patients who are not ready for care, for example, for planned follow-up surgery, has also been apparent. The Expert Panel established by governments to report on elective surgery and emergency access targets noted this variation in its report to the Council of Australian Governments (COAG) in July 2011. In this report, it recommended to COAG that, {{in order to develop}} consistent national elective surgery categories, the Australian Institute of Health and Welfare (AIHW) work with the Royal Australasian College of Surgeons (RACS) to, as a matter of urgency, develop national definitions for elective surgery categories, including not ready for care. This report was submitted to the Standing Council on Health (SCoH) in December 2012 by the AIHW and the RACS in response to a request from the Council following the Expert Panel 2 ̆ 7 s recommendation. It was informed by extensive advice and inputs from representatives of the Australian Government, state and territory health authorities, surgical specialty and other clinical stakeholder groups, and health consumer groups. It was also informed by comments from the Australian Health Ministers 2 ̆ 7 Advisory Council and the Council of Australian Governments 2 ̆ 7 Expert Panel for the Review of Elective Surgery and Emergency Access Targets. The national elective surgery urgency category <b>definitions</b> <b>package</b> The proposed approach to improve the consistency and comparability of elective surgery urgency categories comprises a package of six integrated components: A statement of an overarching principle for urgency category assignment: Patients who require an elective procedure should be assigned an urgency category by the treating clinician. The urgency category should be: Appropriate to the patient and their clinical situationNot influenced by the availability of hospital or surgeon resources. Simplified, time-based urgency category definitions. A listing of the usual urgency categories for higher volume procedures, to be developed by surgical specialty groups. Comparative information disseminated about urgency categorisation. 2 ̆ 7 Treat in turn 2 ̆ 7 as a principle for elective surgery management. Clarified approaches for patients who are not ready for surgery, because of clinical or personal reasons...|$|R
40|$|Problem <b>definition</b> is a <b>package</b> {{of ideas}} that includes, at least implicitly, {{an account of the}} causes and {{consequences}} of undesirable circumstances and a theory about how to improve them. As such, it serves as the overture to policymaking, {{as an integral part of}} the process of policymaking, and as a policy outcome. In each of these roles it seems to exert influence on government action. Distinguishing among the roles clarifies the nature of that influence. A case study examines the transition from one problem definition to another in the domain of information collection by the federal government. The rise of the Paperwork Reduction definition illustrates the variety of ways in which problem definition has powerful consequences...|$|R
40|$|The TanDEM-X Ground Segment Baseline Definition (GSBD) {{constitutes}} the formal technical {{response to the}} TanDEM-X Mission Requirements. It {{is an element of}} the TanDEM-X design definition file (DDF) and is complemented by the management file that includes work <b>package</b> <b>definitions,</b> planning and costs. The TanDEM-X Ground Segment Baseline Definition establishes the TanDEM-X ground segment facilities and services that need to be provided in order to fulfil the requirements stated in the TanDEM-X Mission Requirements Document (MRD). It consists of the technical definition of the ground segment, including its architecture, implementation baseline and operations. All the assumptions made for this technical baseline and the interfaces required to major internal and external systems are also specified. ...|$|R
40|$|A {{reaction}} {{package of}} 100 chemical reactions and attendant reaction rate constants defined for the autoignition and combustion of four carbonaceous fuels, CH 4, CH 3 OH, C 2 H 6, and C 2 H 5 OH. <b>Definition</b> of the <b>package</b> was made primarily {{by means of}} comparison between trial calculations and experimental data for the autoignition of CH 4. Autoignition and combustion {{of each of these}} four fuels was calculated under three sets of conditions realistic for hypersonic flight applications, for comparison to hydrogen fuel, particularly with respect to formation of nitric oxide. Results show that, for all of the fuels including hydrogen, if NO production is a significant problem, compromise must be made between approaching equilibrium heat release and approaching equilibrium NO concentration...|$|R
40|$|ITC/USA 2011 Conference Proceedings / The Forty-Seventh Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2011 / Bally's Las Vegas, Las Vegas, NevadaXidML is an open, vendor neutral, XML based {{standard}} for the FTI community used to capture the metadata associated with flight test instrumentation and data acquisition networks. This paper discusses the difference between metadata and meta-metadata, how these concepts apply to XidML and an optional schema, XdefML. The paper also describes how Settings and their validation may be applied to a Generic <b>package</b> <b>definition.</b> Some examples are given of how the current version XdefML can be leveraged to auto-generate graphical user interfaces that are both feature rich and incorporate sophisticated error checking and data validation...|$|R
40|$|This {{document}} defines UML-like {{packages for}} SOCCA (Specification of Coordinated and Cooperative Activities). The packages structure and encapsulate the classes of a (SOCCA) model. Please use the primary author's contact address: hoen@wi. LeidenUniv. nl 1 Contents 1 Introduction 3 2 Z 4 3 SOCCA with Packages 5 3. 1 Identity............................. 6 3. 2 Basic Class Definition..................... 7 3. 3 Meta Relationships....................... 8 3. 4 Potential Inheritance...................... 9 3. 5 Packages............................. 11 3. 5. 1 The Basic <b>Package</b> <b>Definition.............</b> 11 3. 5. 2 Working with the Package Parts........... 12 3. 5. 3 Indentities of the Package Parts............ 14 3. 5. 4 The Tree-Like Structure of a Package........ 15 3. 5. 5 The Owner of a Package Element........... 16 3. 5. 6 Pack [...] ...|$|R
40|$|The {{industrial}} logistics is {{a fundamental}} pillar {{for the survival of}} companies in the actual increasingly competitive market. It is not exclusively about controlling the flow of external material between suppliers and the company, but for developing a detailed study of how to plan, control, handle and package those materials as well. Logistics activities must ensure the maximum efficiency in using corporate resources once they do not add value to the final product. The creation of a logistic plan, for each piece of the company’s production, has to adapt the demand parameters, seasonal or not, in the timeline. Thus, the <b>definition</b> of <b>packaging</b> (transportation and consumption) must adjust in accordance with the demand, in order to allow the logistic planning to work, constantly, with order of economy batches. The packaging calculation for each part in every demand can become well complicated due to the large amount of parts in the production process. Automating the calculation process for choosing the right package for each piece is an effective method in logistics planning. This article will expose a simple and practical mathematical model for automating the packaging calculation and a logic program, created in Visual Basic language in the Excel software, used for creating graphic designs that show how the packages are being filled...|$|R
40|$|We {{present an}} {{enrichment}} of the Anna specification language for Ada aimed at dealing {{not only with}} functional specification of packages but also with non-functional information about them. By non-functional information we mean information about efficiency, reliability and, in general, any software attribute measuring somehow the quality of software (perhaps in a subjective manner). We divide this information into three kinds: definition of non-functional properties, statement of non-functional behaviour and statement of non-functional requirements; like Anna annotations, all of this information appears in Ada packages and package bodies and their syntax is close to Ada constructs. Non-functional information may be considered not only as valuable comments, but also as an input for an algorithm capable of selecting the "best" package body for every <b>package</b> <b>definition</b> in a program, the "best" meaning the one that fits the set of non-functional requirements of the package in the program...|$|R
40|$|UML is {{the first}} OO {{modeling}} language with a useful modularization and information hiding concept. It supports nesting, import, and refinement of so-called packages. This paper translates UML's informal <b>package</b> <b>definition</b> into predicate logic formulas and solves some open problems concerning the visibility of exported and imported modeling elements. Furthermore, the formulas will {{be transformed into a}} specification based on PROgrammed Graph REwriting Systems. We will very briefly sketch how a graphical UML editor can be generated from this PROGRES specification. 1 Introduction After about 20 years of research and development, object-oriented (OO) modeling methods and notations have reached a certain degree of maturity and acceptance. They are no longer the occult science of a small number of OO gurus, but the widely accepted approach for analysis (OOA) and design (OOD) of software (hardware) systems. Popular OO methods [...] - like Booch (1994), OMT (Rumbaugh et al. (1991)), or OOSE ( [...] ...|$|R
