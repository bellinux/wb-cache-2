6|2|Public
40|$|Multistage switch {{interconnects}} like banyan switches are preferred in {{high speed}} networks for their cascadable structure and suitability for VLSI implementation. However {{most of these}} switch implementations are monolithic in nature and do not provide flexibility of <b>dynamic</b> <b>re-routing</b> of cells from active ports through idle ports. In this paper we take a critical look at a basic 8 × 8 benes switch {{from the perspective of}} identifying smaller blocks which can be pipelined in space and temporally multiplexed to exploit hardware reuse. A topological analysis of a 8 × 8 benes switch is carried out to identify mutually exclusive path sets that can be overlayed for hardware reuse. Based on this analysis we arrive at a basic building block called X-Structure, using which a 8 × 8 switch is constructed. The X-structure supports <b>dynamic</b> <b>re-routing</b> of cells and power down mode. A communication controller is designed using the the X-Structure based ATM switch at its core. A performance evaluation of the switch indicates a power saving of 66. 66 % due to hardware reuse, an 18. 6 % increase in hardware utilization and an aggregate throughput of 2. 66 Gbps for a 8 × 8 switch...|$|E
40|$|Abstract — We {{present a}} {{solution}} that enables robots to operate in long-duration missions with minimal interruption for recharging or refreshing other resources. Consider a set of deployed “task robots ” that request resources (e. g. batteries) from a distribution center, which can deploy “delivery robots” to fulfill those requests. We address the scheduling problem with multiple incoming time-bound requests from the task robots. Our proposed framework incorporates priorities on working robots that can be adjusted by a human operator during scheduling, since mission priorities can change over time. The framework allows a relaxed delivery schedule when available resources are scant and permits <b>dynamic</b> <b>re-routing</b> of delivery robots. The problem is posed as {{a variant of the}} Vehicle Routing Problem with Time Windows, and solved as a Mixed Integer Quadratic Program using a branch and bound based solver. We present the specific case of a battery distribution system and validate the results in simulation. I...|$|E
40|$|To {{adapt to}} {{continuously}} changing workloads in networks, {{components of the}} running network services {{may need to be}} replicated (scaling the network service) and allocated to physical resources (placement) dynamically, also necessitating <b>dynamic</b> <b>re-routing</b> of flows between service components. In this paper, we propose JASPER, a fully automated approach to jointly optimizing scaling, placement, and routing for complex network services, consisting of multiple (virtualized) components. JASPER handles multiple network services that share the same substrate network; services can be dynamically added or removed and dynamic workload changes are handled. Our approach lets service designers specify their services on a high level of abstraction using service templates. From the service templates and a description of the substrate network, JASPER automatically makes scaling, placement and routing decisions, enabling quick reaction to changes. We formalize the problem, analyze its complexity, and develop two algorithms to solve it. Extensive empirical results show the applicability and effectiveness of the proposed approach...|$|E
40|$|Abstract—We {{demonstrate}} the impact, {{both positive and}} negative, of a <b>dynamic</b> vehicle <b>re-routing</b> mechanism {{that is based on}} real-time traffic information. For this, we employ a simulative prototype implementing a Traffic Information System (TIS) operating in an urban setting. The simulative prototype can be interacted with in real time to manually introduce traffic obstructions in the running simulation. The effects of these obstructions and the impact of <b>dynamic</b> vehicle <b>re-routing</b> can then be observed. In particular, we integrated the Adaptive Traffic Beacon (ATB) protocol within our Vehicles in Network Simulation (Veins) framework. Vehicles use ATB to continuously exchange part of their knowledge bases in the form of periodical beacons, the interval of which is dynamically adapting to the estimated usefulness of information and to channel conditions. This way, the average channel utilization is continuously optimized, and over-use avoided, at all times. I...|$|R
40|$|AbstractThis work {{describes}} {{an approach to}} determine the current travel times on freeways based on the detection and re-identification of Bluetooth devices onboard of vehicles using stationary roadside Bluetooth detection technology. It also aims at using this information for the traffic state determination of a whole freeway network {{with the goal of}} a fast and reliable dynamic net control in incident situations. Based on a four year experience in a Bluetooth detector test bed in Northern Bavaria, Germany, and after the evaluation of hundreds of millions of single detections, the technology as well as the developed algorithms for validation and evaluation of the data show their feasibility in practical use, especially in areas with a low density of stationary detectors like inductive loops. The data-driven part of the approach is divided into three subsequent steps. These steps are the determination of travel times, the data filtering and validation of plausible travel times and the automatic incident detection. The determination of travel time is based on the time stamp of the detection of a Bluetooth device with the shortest estimated distance to the position of the Bluetooth detector. For the data filtering the “Time Dependent Comparison to Neighbor Values Filter” will be applied. This filter allows for a fast and reliable differentiation between unrealistic (due to stops, detours, back and return trips etc.) and plausible travel time values for a certain segment of the freeway and is based on a method to validate if the determined travel time is in a plausibility threshold corridor defined by the values of the previous and the next neighboring travel times. The outcome is a detailed travel time information for the whole freeway network which is used for an automatic incident detection, which was developed and calibrated within this research project. This includes the detection of the start of an incident as well as the end of an incident. The result is continuous information about the prevailing travel times and a fast and reliable traffic state information for all segments, which allows for a <b>dynamic</b> large-scale <b>re-routing</b> in the Bavarian freeway network in case of congestions or other disturbances of the traffic flow...|$|R
40|$|The {{problem of}} optimal data {{gathering}} in {{wireless sensor networks}} (WSNs) is addressed by means of optimization techniques. The goal of this work is to lay the foundations to develop algorithms and techniques that minimize the data gathering latency {{and at the same}} time balance the energy consumption among the nodes, so as to maximize the network lifetime. Following an incremental-complexity approach, several mathematical programming problems are proposed with focus on different network performance metrics. First, the static routing problem is formulated for large and dense WSNs. Optimal data-gathering trees are analyzed and the effects of several sensor capabilities and constraints are discussed, e. g., radio power constraints, energy consumption model, and data aggregation functionalities. Then, <b>dynamic</b> <b>re-routing</b> and scheduling are considered. An accurate network model is proposed that captures the tradeoff between the data gathering latency and the energy consumption, by modeling the interactions among the routing, medium access control and physical layers. For each problem, extensive simulation results are provided. The proposed models provide a deeper insight into the problem of timely and energy efficient data gathering. Useful guidelines for the design of efficient WSNs are derived and discussed. (c) 2006 Elsevier B. V. All rights reserved...|$|E
40|$|Study {{fault-tolerance}} RF {{communication in}} multi-hop routing environments, develop robust <b>dynamic</b> <b>re-routing</b> software architecture by combination of LEGO / RCX kits and Motes This {{aim of this}} project is to do a fault tolerance analysis of a multi-hop routing environment and propose an algorithm for the same. Specifically, we aim at the following aspects of sensor networks: Sensor networks are very common in areas like environment monitoring, system monitoring, etc. Lot of research {{work has been done}} in proposing routing algorithms in multi-hop sensor networks. The main disadvantage of multi-hop sensor networks is that the overall power consumption increases in the sparse network due to large distance transmission. Also there can be several retransmission due to increase in transmission errors. Data mule is an approach to reduce these issues in case of sparse sensor networks. Data mule is a mobile agent which travels around the network along a fixed path and communicates with each sensor nodes, gathers data from these nodes and delivers to the gateway system (which can be a computer). In this case, the sensor nodes need not do long range transmission and save power considerably. The data mule approach itself has its own drawbacks such as increased latency i...|$|E
40|$|Managing the {{interval}} between arrival aircraft is {{a major part of}} the en route and TRACON controller s job. In an effort to reduce controller workload and low altitude vectoring, algorithms have been developed to allow pilots to take responsibility for, achieve and maintain proper spacing. Additionally, algorithms have been developed to create dynamic weather-free arrival routes in the presence of convective weather. In a recent study we examined an algorithm to handle <b>dynamic</b> <b>re-routing</b> in the presence of convective weather and two distinct spacing algorithms. The spacing algorithms originated from different core algorithms; both were enhanced with trajectory intent data for the study. These two algorithms were used simultaneously in a human-in-the-loop (HITL) simulation where pilots performed weather-impacted arrival operations into Louisville International Airport while also performing interval management (IM) on some trials. The controllers retained responsibility for separation and for managing the en route airspace and some trials managing IM. The goal was a stress test of dynamic arrival algorithms with ground and airborne spacing concepts. The flight deck spacing algorithms or controller managed spacing not only had to be robust to the dynamic nature of aircraft re-routing around weather but also had to be compatible with two alternative algorithms for achieving the spacing goal. Flight deck interval management spacing in this simulation provided a clear reduction in controller workload relative to when controllers were responsible for spacing the aircraft. At the same time, spacing was much less variable with the flight deck automated spacing. Even though the approaches taken by the two spacing algorithms to achieve {{the interval}} management goals were slightly different they seem to be simpatico in achieving the interval management goal of 130 sec by the TRACON boundary...|$|E

