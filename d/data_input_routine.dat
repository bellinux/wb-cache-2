1|10000|Public
40|$|Analysis of the multi-nerve impulses {{by means}} of {{electrophysiological}} method has become {{important to understand the}} parallel information processing in the nervous system. We have previously reported the multi-impulse analyzing system by using the microcomputer (MEK 6800 D-II) and additional electronic circuits. Impulses from two nerve cells or more were classified according to their amplitude. That was executed by machine language program. The system operated sufficiently to analyze the impulses recorded in nerve bundle from mechanoreceptors on the crayfish antennule. However, there were a few problems in the system. The one was a slight time lag of the peak discriminator which detected the peak time of an impulse and triggered A-D converter. The other was flicker of realtime display caused by sequential time sharing between <b>data</b> <b>input</b> <b>routine</b> and display one. Those problems are improved in the present new system. The former is overcome by using the peak hold circuit in place of the peak discriminator, and the latter by introducing the interrupt technique when both impulse height and interspike interval are gotten into the microcomputer. An additional microcomputer (CBM) which can execute BASIC program is connected with the previous one in order to supply the lack of programing flexibility on the machine language system. The connection between those two microcomputer consists of a control line and 8 -bit bidirectional data bus. By using the only one control line, the program for data transfer is made as simple as possible. Then, the new system is made to reconcile processing speed in machine language system and flexibility in BASIC system. Furthermore, CBM 3032 have an input-output port based on the standard IEEE 488 bus. A X-Y plotter (WX 4671) is connected with this port through an interface circuit. All of the experimental result can be printed out by the plotter. The present multi-impulse analyzing system possesses sufficient accuracy and flexibility. The system can be used not only in our electrophysiological experiment but also in one of another nervous system...|$|E
40|$|The {{history of}} the {{development}} of the NASTRAN computer program, a general purpose finite element code for structural analysis, is described. The need for research programs to improve analysis of structures, and the writing of a computer program to give numerical solutions for shell behavior, were the impetus for the program design. The use of finite elements to obtain engineering solutions was introduced. The architecture, solution structure, DMAP language, decomposition technique for banded matrices with active columns, general purpose plotter, engineering <b>data</b> <b>inputs,</b> elastic element <b>routines,</b> programmer manuals, of NASTRAN's system design are described...|$|R
40|$|This report {{documents}} {{the usage of}} the routine FITS, which provides au-tomated fits of various analytical, commonly used probability models from <b>input</b> <b>data.</b> This <b>routine</b> is intended to complement the previously distributed rou-tine, FITTING, documented in RMS Report 14 (Winterstein et al, 1994). The FITTING routine implements relatively complex, four-moment distribu-tion models, whose parameters are fit with numerical optimization routines. While these four-moment fits can be quite useful and faithful to the observed data, their complexity can make them difficult to automate within standard fitting algorithms. In contrast, the routine FITS is intended to provide more robust (lower moment) fits of simpler, more conventional distribution forms. For each database of interest, the routine estimates the distribution of annual max-imum response, based on the data values and the duration, T, over whic...|$|R
40|$|It {{is clear}} that methods are mixed in practice. Problems don’t come {{labelled}} as simulation, optimisation, forecasting, or with some other methodological name. In practice, there’s a job {{to be done and}} the analyst {{must find a way to}} do it. For over 20 years, optimisation within discrete simulations has been a fertile field of research. Employing time series methods to analyse simulation output and to model <b>input</b> <b>data</b> is <b>routine.</b> Thus, in one sense, we should not be too exercised by the very idea that methods are usefully mixed in research either. Climbing to a higher level, it is likely to be rare that major decisions are made solely on the basis of a few simulation runs. A model is likely to be one element of a decision making process that leads people to see that a particular course of action is either desirable, or less undesirable than alternatives. ...|$|R
5000|$|The PMD 85-2 {{introduced}} some {{improvements in}} BASIC, some in <b>input</b> <b>routines</b> (for instance, key autorepeat), {{a much more}} ergonomic keyboard (but much less mechanically reliable) and also terminal mode. Some of the changes caused it to be not completely backward compatible.|$|R
40|$|A new hand- or finger-mounted <b>data</b> <b>input</b> {{device is}} pre-sented, using {{traditional}} touch-typing skills as method of (al-phabetic) character input thus providing an ultra-portable solution for “quiet ” <b>data</b> <b>input</b> into portable computer sys-tems. The presented keyboard independent touch-typing de-vice (KITTY) offers high <b>data</b> <b>input</b> rates and a virtually zero learning curve for new users. ...|$|R
40|$|Keyword {{directed}} {{free format}} <b>input</b> <b>routine,</b> {{which has been}} used in large neutronics codes, is described. The routine also sets up variable dimension addresses for use with side entry calls. In addition, as a program debugging aid, a labelled printer dump facility is provided. The suite of routines has been used on IBM 360 computers...|$|R
5000|$|A {{write to}} this {{register}} will reset bits 5 through 7 of SKSTAT which are latches to 1. The latches flag keyboard overrun, Serial <b>data</b> <b>input</b> overrun, and Serial <b>data</b> <b>input</b> frame error.|$|R
5000|$|The default BIOS {{keyboard}} routines simply ignore SysRq {{and return}} without taking action. So did the MS-DOS <b>input</b> <b>routines.</b> [...] The keyboard routines in libraries supplied with many high-level languages followed suit. Although {{it is still}} included on most PC keyboards manufactured, and though it is used by some debugging software, the key is of no use {{for the vast majority}} of users.|$|R
50|$|<b>Input</b> <b>data</b> is {{classified}} into two categories: relative <b>input</b> <b>data</b> and absolute <b>input</b> <b>data.</b>|$|R
5000|$|Data: widgets for <b>data</b> <b>input,</b> <b>data</b> filtering, sampling, imputation, feature {{manipulation}} and feature selection ...|$|R
50|$|Serial port <b>data</b> <b>input</b> byte.|$|R
40|$|We {{describe}} {{the new version}} (v 2. 49 t) of the code HFODD which solves the nuclear Skyrme Hartree-Fock (HF) or Skyrme Hartree-Fock-Bogolyubov (HFB) problem by using the Cartesian deformed harmonic-oscillator basis. In the new version, we have implemented the following physics features: (i) the isospin mixing and projection, (ii) the finite temperature formalism for the HFB and HF+BCS methods, (iii) the Lipkin translational energy correction method, (iv) the calculation of the shell correction. A number of specific numerical methods have also been implemented {{in order to deal}} with large-scale multi-constraint calculations and hardware limitations: (i) the two-basis method for the HFB method, (ii) the Augmented Lagrangian Method (ALM) for multi-constraint calculations, (iii) the linear constraint method based on the approximation of the RPA matrix for multi-constraint calculations, (iv) an interface with the axial and parity-conserving Skyrme-HFB code HFBTHO, (v) the mixing of the HF or HFB matrix elements instead of the HF fields. Special care has been paid to using the code on massively parallel leadership class computers. For this purpose, the following features are now available with this version: (i) the Message Passing Interface (MPI) framework, (ii) scalable <b>input</b> <b>data</b> <b>routines,</b> (iii) multi-threading via OpenMP pragmas, (iv) parallel diagonalization of the HFB matrix in the simplex breaking case using the ScaLAPACK library. Finally, several little significant errors of the previous published version were corrected. Comment: Accepted for publication to Computer Physics Communications. Program files re-submitted to Comp. Phys. Comm. Program Library after correction of several minor bug...|$|R
5000|$|WebAGRIS is a {{multilingual}} Web-based {{system for}} distributed <b>data</b> <b>input,</b> processing and dissemination (through the Internet or on CD-Rom), of agricultural bibliographic information. It {{is based on}} common standards of <b>data</b> <b>input</b> and dissemination formats (XML, HTML, ISO2709), as well as subject categorization schema and AGROVOC.|$|R
50|$|The OpenGL Utility Toolkit (GLUT) is {{a library}} of {{utilities}} for OpenGL programs, which primarily perform system-level I/O with the host operating system. Functions performed include window definition, window control, and monitoring of keyboard and mouse <b>input.</b> <b>Routines</b> for drawing a number of geometric primitives (both in solid and wireframe mode) are also provided, including cubes, spheres and the Utah teapot. GLUT also has some limited support for creating pop-up menus.|$|R
50|$|Check for {{transcription}} {{errors in}} <b>data</b> <b>input</b> and reference.|$|R
30|$|<b>Data</b> <b>input</b> {{preparation}} in SimStadt {{is reduced to}} preparing the CityGML file with information regarding building age and building usage; in case of TRNSYS, all <b>data</b> <b>inputs</b> must be put manually in detail which is time consuming. In an application over several buildings or whole districts, SimStadt performs much faster.|$|R
40|$|The {{development}} and validation {{of a new}} altimeter wind speed model will be presented. This algorithm provides a direct mapping of TOPEX-measured backscatter and significant wave height to 10 m wind speed. A large scatterometer/altimeter crossover data set was assembled to develop the routine and several large ancillary data sets have been assembled for validation purposes. Validation results suggest that this two <b>input</b> <b>routine</b> provides marginal, yet measurable improvements over the standard single-parameter MCW algorithm...|$|R
30|$|<b>Input</b> <b>data</b> {{requirements}} {{for each of}} the various mortality forecasting methods were assessed by compiling a table of both national-level and regional-level <b>data</b> <b>inputs.</b> At the regional scale the number of <b>input</b> <b>data</b> cells per subnational region was noted.|$|R
5000|$|... #Caption: <b>Data</b> <b>input</b> form, {{showing the}} general {{structure}} of ZOG syntax ...|$|R
5000|$|In NetWeaver Developer, data links {{prompt the}} user for <b>data</b> <b>input.</b>|$|R
5000|$|... {{an input}} module to handle <b>data</b> <b>input</b> (from probes or packet sniffer) ...|$|R
40|$|The EP 16 VC is a {{differential}} receiver/driver. The {{device is}} functionally {{equivalent to the}} EP 16 and LVEP 16 devices but with high gain and enable output. The EP 16 VC provides an EN input which is synchronized with the <b>data</b> <b>input</b> (D) signal {{in a way that}} provides glitchless gating of the QHG and QHG outputs. When the EN signal is LOW, the input is passed to the outputs and the data output equals the <b>data</b> <b>input.</b> When the <b>data</b> <b>input</b> is HIGH and EN goes HIGH, it will force the QHG LOW and the QHG HIGH on the next negative transition of the <b>data</b> <b>input.</b> If the <b>data</b> <b>input</b> is LOW when the EN goes HIGH, the next data transition to a HIGH is ignored and QHG remains LOW and QHG remains HIGH. The next positive transition of the <b>data</b> <b>input</b> is not passed on to the data outputs under these conditions. The QHG and QHG outputs remain in their disabled state as long as the EN input is held HIGH. The EN input has no influence on the Q output and the <b>data</b> <b>input</b> is passed on (inverted) to this output whether EN is HIGH or LOW. This configuration is ideal for crystal oscillator applications where the oscillator can be free running and gated on and off synchronously without adding extra counts to the output. The VBB/D pin is internally dedicated and available for differential interconnect. VBB/D may rebias AC coupled inputs. When used, decouple VBB/D and VCC via a 0. 01 �F capacitor and limit current sourcing or sinking to 1. 5 mA. When not used, VBB/D should be left open. The 100 Series contains temperature compensation...|$|R
50|$|The <b>data</b> <b>input</b> form invites every {{contributor}} of new articles to list sources.|$|R
40|$|Computer Programming and Computer Systems imparts a "reading knowledge? of {{computer}} systems. This book describes {{the aspects of}} machine-language programming, monitor systems, computer hardware, and advanced programming that every thorough programmer should be acquainted with. This text discusses the automatic electronic digital computers, symbolic language, Reverse Polish Notation, and Fortran into assembly language. The routine for reading blocked tapes, dimension statements in subroutines, general-purpose <b>input</b> <b>routine,</b> and efficient use of memory are also elaborated. This publication is inte...|$|R
50|$|The <b>data</b> <b>input</b> to any {{of those}} hash {{algorithms}} is described somewhere around https://github.com/ipfs/go-ipfs/tree/master/merkledag.|$|R
5000|$|Data object model, {{database}} generation through object-relational mapping, {{suite of}} customizable <b>data</b> <b>input</b> controls.|$|R
50|$|PFA {{document}} is designed covering all the functionality {{required by the}} business {{and how it is}} addressed in the application.It covers all the <b>data</b> <b>inputs,</b> <b>data</b> processing and data outputs.|$|R
3000|$|... {{insertion}} of collected <b>data</b> (<b>input</b> parameters) in the model, thus obtaining the simulated consumption; [...]...|$|R
5000|$|It is an {{optional}} bit-flipper (the deciding input chooses whether to invert the <b>data</b> <b>input).</b>|$|R
5000|$|Network {{communications}} - {{the managing}} of <b>data</b> <b>inputs</b> and outputs for local and internet gameplay.|$|R
5000|$|Potential {{hydrological}} <b>data</b> <b>input</b> for assimilation {{into local}} distributed runoff models, regional flood plain studies/planning ...|$|R
5000|$|In {{addition}} to the mandatory simulation inputs listed above, there are several additional optional <b>data</b> <b>inputs.</b>|$|R
40|$|This talk {{gives an}} {{overview}} of the collaborative featrues of JuSER and it's sister systems. After a short introduction of the publications database and the institutional repository, and why they should interact, the main topic are the private collections, known in Jülich as institute collections, and how they {{can be used in a}} scientific publication workflow. <b>Input</b> <b>routines</b> are outlined with a special emphasise on the possiblity to import data. Finally a short introduction to groups and baskets is given...|$|R
50|$|Both <b>data</b> <b>input</b> {{and control}} input is active. The output value will be 1 and current will {{flow through the}} element. In this case, the <b>input</b> <b>data</b> {{is sent to the}} output.|$|R
40|$|<b>Input</b> <b>Data</b> Management (IDM) {{is a time}} {{consuming}} and costly process for Discrete Event Simulation (DES) projects. <b>Input</b> <b>Data</b> Management is considered {{as the basis of}} real-time process simulation (Bergmann, Stelzer and Strassburger, 2011). According to Bengtsson et al. (2009), <b>data</b> <b>input</b> phase constitutes on the average about 31...|$|R
