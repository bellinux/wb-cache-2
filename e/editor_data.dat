14|161|Public
25|$|Alphabetical, numeric, and {{punctuation}} {{keys are}} used in the same fashion as a typewriter keyboard to enter their respective symbol into a word processing program, text <b>editor,</b> <b>data</b> spreadsheet, or other program. Many of these keys will produce different symbols when modifier keys or shift keys are pressed. The alphabetic characters become uppercase when the shift key or Caps Lock key is depressed. The numeric characters become symbols or punctuation marks when the shift key is depressed. The alphabetical, numeric, and punctuation keys can also have other functions when they are pressed {{at the same time as}} some modifier keys.|$|E
50|$|Introduced in 2007 as Extreme Form, Form.com {{is built}} {{to collect and}} {{distribute}} data on web and mobile forms, then generate reports. The product is frequently used to digitally reproduce existing paper forms and processes. Features include a customizable design, drag-and-drop <b>editor,</b> <b>data</b> routing workflows, API integration, web portal, and support from the WorldAPP team.|$|E
50|$|OpenESB {{offers a}} set of {{graphical}} tools to ease complex SOA and integration developments. Powerful XLM, XML Schema, WSDL, BPEL <b>editor,</b> <b>data</b> mapping and Composition Applications graphical editors are proposed with OpenESB. Similarly, build, deploy, un-deploy, run, test and debug tasks are managed by graphical tools. OpenESB provides the best ergonomics for ESB and SOA developments.|$|E
5000|$|FileMapper - allows to edit large data objects {{stored in}} {{database}} {{by means of}} appropriate <b>editors.</b> <b>Data</b> are being extracted from the database to temporary file and can be handled as usual file by proper application. File saving synchronizes the database immediately.|$|R
5000|$|President: Joshua Hatch, Assistant Managing <b>Editor</b> for <b>Data</b> and Interactives, Chronicle of Higher Education, Chronicle of Philanthropy; ...|$|R
25|$|FiveThirtyEight {{launched}} its ESPN-owned stage on March 17, 2014. As of July, {{it had a}} staff of 20 writers, <b>editors,</b> <b>data</b> visualization specialists, and others. By March 2016, this staff had nearly doubled to 37 listed on the masthead, and 7 listed as contributors. The site produced articles under 5 headings: politics, economics, science and health, (cultural) life, and sports. In addition to feature articles it produced podcasts {{on a range of}} subjects.|$|R
50|$|The main {{interface}} for algorithm design in Grasshopper is the node-based <b>editor.</b> <b>Data</b> is passed from component to component via connecting wires which always connect an output grip with an input grip. Data {{can either be}} defined locally as a constant, {{or it can be}} imported from the Rhino document or a file on the computer. Data is always stored in parameters, which can either be free-floating or attached to a component as input and outputs objects.|$|E
50|$|Office RT modifies or {{excludes}} other {{various features}} for compatibility reasons or resource reduction. To save disk space; templates, clip art, and language packs are downloaded online rather than stored locally. Other excluded features include {{the removal of}} support for third-party code such as macros/VBA/ActiveX controls, the removal of support for older media formats and narration in PowerPoint, editing of equations generated with the legacy Equation <b>Editor,</b> <b>data</b> models in Excel (PivotCharts, PivotTables, and QueryTables are unaffected), searching embedded media files in OneNote, along with data loss prevention, Group Policy support, and creating e-mails with information rights management in Outlook.|$|E
5000|$|Penguin Land, {{known as}} Doki Doki Penguin Land Uchū Daibōken (lit. [...] "Thump Thump Penguin Land: Great Outer Space Adventure") in Japan, is a Sega Master System {{game and the}} second game in the Doki Doki Penguin Land series. In this game you play as a penguin going through a puzzle {{platformer}} stage and try to guide your egg around the polar bears, rocks and other hazards {{to the end of}} the stage. The game has a total of 50 stages and a level editor which can save up to 15 additional levels. The level <b>editor</b> <b>data</b> is stored on the game's battery back-up RAM.|$|E
5000|$|... dot15926 Editor (Open source {{ontology}} <b>editor</b> for <b>data</b> compliant {{to engineering}} ontology standard ISO 15926. Allows Python scripting and pattern-based data analysis. Supports extensions.) ...|$|R
50|$|<b>Editor</b> {{can change}} <b>data</b> of general and city.|$|R
50|$|As the {{official}} pre-game editor {{included in the}} game was poor, some USM users produced enhanced pre-game <b>editors.</b> USM <b>Data</b> <b>Editor</b> (USMDE or UDE), of which {{the official}} web site {{was included in the}} USM Online web site (usm.footymanager.net), was called as the best editor. USMDE includes various features for USM98 editing, e.g., creating players, editing hidden stats, add-on file support for easy data update by USM fans, beta-released save game editing.|$|R
50|$|Generally once a map {{has been}} preprocessed it cannot be re-edited {{in a normal}} fashion because the {{original}} brushes have been cut into small pieces. Instead the original map <b>editor</b> <b>data</b> with the brushes is retained and used to create new versions of the map. But {{it is possible to}} edit a processed map by opening it in a special vertex editor and editing the raw vertex data, or to add or remove individual triangle faces. Though difficult, this technique was occasionally used by cheaters to create windows in walls, to see normally hidden enemies approaching from behind doors and walls, and resulted in an anti-cheat mechanism used in recent 3D games that calculates a checksum for each file used in the game, to detect players using potentially hacked map files.|$|E
50|$|Alphabetical, numeric, and {{punctuation}} {{keys are}} used in the same fashion as a typewriter keyboard to enter their respective symbol into a word processing program, text <b>editor,</b> <b>data</b> spreadsheet, or other program. Many of these keys will produce different symbols when modifier keys or shift keys are pressed. The alphabetic characters become uppercase when the shift key or Caps Lock key is depressed. The numeric characters become symbols or punctuation marks when the shift key is depressed. The alphabetical, numeric, and punctuation keys can also have other functions when they are pressed {{at the same time as}} some modifier keys.The Space bar is a horizontal bar in the lowermost row, which is significantly wider than other keys. Like the alphanumeric characters, it is also descended from the mechanical typewriter. Its main purpose is to enter the space between words during typing. It is large enough so that a thumb from either hand can use it easily. Depending on the operating system, when the space bar is used with a modifier key such as the control key, it may have functions such as resizing or closing the current window, half-spacing, or backspacing. In computer games and other applications the key has myriad uses in addition to its normal purpose in typing, such as jumping and adding marks to check boxes. In certain programs for playback of digital video, the space bar is used for pausing and resuming the playback.|$|E
40|$|The MIT-Scheme program developmentenvironment {{includes}} a general-purpose text editor, Edwin. Edwin provides an integrated platform {{for a number}} of tools useful to a software engineer. Such tools are easily written in Edwin's extension language, Edwin Scheme [...] - Scheme augmented with <b>editor</b> <b>data</b> types...|$|E
5000|$|CocoStudio: {{a closed}} source toolkit based on Cocos2d-x, {{containing}} UI Editor, Animation Editor, Scene <b>Editor</b> and <b>Data</b> <b>Editor,</b> together forming a complete system; the former two are tools mainly for artists {{while the latter}} are two mainly for designers. This is a closed source project developed by Chukong Technologies. Its latest version is 3.10 while is compatible with cocos2d-X 3.10. It supports C++. In April 2016 it was deprecated and replaced with Cocos Creator.|$|R
40|$|Work done on {{a project}} to design an {{automatic}} system for computer program documentation aids was made to determine what existing programs could be used effectively to document computer programs. Results of the study {{are included in the}} form of an extensive bibliography and working papers on appropriate operating systems, text <b>editors,</b> program <b>editors,</b> <b>data</b> structures, standards, decision tables, flowchart systems, and proprietary documentation aids. The preliminary design for an automated documentation system is also included. An actual program has been documented in detail to demonstrate the types of output that can be produced by the proposed system...|$|R
50|$|Vera Pawlowsky-Glahn, Antonella Buccianti (<b>Editors),</b> 2011. Compositional <b>Data</b> Analysis: Theory and Applications. Wiley, p. 400.|$|R
40|$|This thesis {{describes}} {{the design and}} implementation {{of a new and}} efficient data structure used for the workfiles of multiuser line-oriented text editors. One of the design objectives is the ability to use the editor (i. e. CHEF) as an editing server in a local ring network with a dedicated disk for the storage of users' workfiles. This objective is facilitated because the data structure allows random disk blocks to be used for the workfiles. This allows the editor to exist stand-alone without the need for an underlying file system. The structure of the workfiles is a determining factor for the efficiency of storage and speed of any editor and it {{is just as important as}} the command language and other user level features of editors historical development of such data structures in a number of editors is described, and 6 general categories are developed. The advantages and disadvantages of each category are discussed and the main problems in the design of <b>editor</b> <b>data</b> structures are distinguished. The CHEF <b>editor</b> <b>data</b> structure, which solves most of these problems, is studied in detail. The new data structure, which is in fact a logical development of the CHEF data structure, brings further improvements and increases the performance. This is shown by experimental results. Some advanced features which are facilitated by the new data structure are: backup of pointers for undoing a command, garbage collection of text storage space and unused pointer values, and a recovery technique. The data structure can be used in two different environments: on top of a file system, and with a dedicated disk. However it will show a better performance with a dedicated disk...|$|E
40|$|The {{objective}} {{of this research was}} to integrated the SGI (Geographical Information System developed in the National Institute of Space Research- INPE) in the relational data base system. The methodology has involved a development of external programs for the optimization of the map preparing process in the SGI and the integration of SGI to Dbase III Plus data base. The methodology involved the basic studies of programming and operation of the SGI. Some tools were defined to providing this study: graphical interface, programming interface, general reclassifier and SGI specific and <b>editor</b> <b>data.</b> These preliminary tests using SGI integrated to Dbase III Plus data base have demonstrated a great performance of the mapping process and a otimization of the operational process. Pages: 390 - 39...|$|E
40|$|The MIT-Scheme program {{development}} environment includes a general-purpose text editor, Edwin. Edwin provides an integrated platform {{for a number}} of tools useful to a software engineer. Such tools are easily written in Edwin's extension language, Edwin Scheme [...] - Scheme augmented with <b>editor</b> <b>data</b> types. Edwin is very similar in appearance and behavior to another general-purpose text editor, GNU Emacs. Like Edwin, GNU Emacs provides a number of useful tools, written in its extension language, Emacs Lisp. The popularity of GNU Emacs, combined with its easy extensibility, has lead to a large and growing library of tools and enhancements written by GNU Emacs users worldwide. The goal of this thesis is to allow Edwin users {{to take advantage of this}} enormous library of Emacs Lisp code. The size and complexity of the Emacs and Edwin systems makes realization of this goal impossible given the resources available to this project. Instead, a useful compromise was sought. From the beginning, thi [...] ...|$|E
50|$|WinHex is a disk {{editor and}} a hex <b>editor</b> useful in <b>data</b> {{recovery}} and forensics.|$|R
50|$|Jennifer LaFleur: LaFleur is {{the senior}} <b>editor</b> for <b>data</b> journalism at The Center for Investigative Reporting. Previously, she was the {{director}} of computer-assisted reporting for the non-profit organization ProPublica and the computer-assisted reporting editor at The Dallas Morning News.|$|R
5000|$|Mike Pentz, Milo Shott, Francis Aprahamian (<b>editor),</b> Handling Experimental <b>Data.</b> Open University Press, 1988, 96 pp[...]|$|R
40|$|The steady {{increase}} in the power and complexity of modern computer systems has encouraged the implementation of automatic file migration systems which move files dynamically between mass storage devices and disk in response to user reference patterns. Using information describing thirteen months of text <b>editor</b> <b>data</b> set file references, (analyzed in detail {{in the first part}} of this paper), they develop and evaluation algorithms for the selection of files to be moved from disk to mass storage. They find that algorithms based on both the file size and the time since the file was last used work well. The best realizable algorithms tested condition on the empirical distribution of the times between file references. Acceptable results are also obtained by selecting for replacement that file whose size times time to last reference is maximal. Comparisons are made with a number of standard algorithms developed for paging, such as Working Set. Sufficient information (parameter values, fitted equations) is provided that our algorithms may be easily implemented on other systems...|$|E
40|$|In master theses {{hypertext}} graphical {{user interface}} definition using high abstraction level declarative syntax is analyzed and architecture model is suggested. Suggested architecture defines {{graphical user interface}} using high abstraction level elements. Basic element set of more than 20 elements is defined, declarative XML notation is suggested and graphical user interface library for HTML is developed with JavaScript to ensure much faster and easier standard-based graphical user interface development. Provided method has no public analogues yet and is suggested for complex graphic user interfaces. Experimental studies proved that declarative syntax and high abstraction level can reduce programming language code from 3. 1 times on trivial GUI elements to 204. 1 times on complex GUI solutions. Studies have showed that {{when the number of}} HTML elements composing graphical user interface grows, even better effectiveness can be achieved. Developed architecture is integrated in software development model where graphical user interface and logic are semi-automated using UML model. Traditional text editor is changed by data driven design tool, use-cases are developed using graphical <b>editor,</b> <b>data</b> infrastructure is build from the model and solution is delivered in several programming technologies...|$|E
50|$|In September 2008 the Statgraphics Online {{version was}} released. Statgraphics Online is a {{statistical}} package that runs within a web browser. Users can enter data {{directly into the}} <b>data</b> <b>editor</b> or import <b>data</b> from text files, Excel files, or other formats. The calculations are performed remotely on a web server and the results returned to the user's browser as HTML with embedded graphics images.|$|R
40|$|Linked Data {{builds a}} machine-processable Web of Data {{based on a}} large and growing number of RDF {{datasets}} and typed links among them. For the human user, Web-based interfaces were developed to enable browsing and editing Linked Data that is stored as native RDF. However, the majority of data on the current Web is stored in Relational Databases (RDB). This is a challenge for Linked Data browsers and especially for Linked <b>Data</b> <b>editors.</b> In this paper, we present UpLink which is {{to the best of}} our knowledge the first Linked <b>Data</b> <b>editor</b> for RDB-to-RDF <b>data,</b> i. e., RDF data that is mapped on demand from a RDB. We further present usage scenarios to demonstrate that UpLink supports the basic CRUD operations for editing Linked Data...|$|R
5000|$|Nineteenth-century society {{essays in}} the use of {{quantitative}} methods for the study of social <b>data,</b> <b>editor,</b> Cambridge University Press 1972, ...|$|R
30|$|Ethical {{restrictions}} prevent public {{sharing of}} <b>data.</b> <b>Editors,</b> reviewers, and interested researchers should contact {{the corresponding author}} to request data access.|$|R
40|$|Variational data {{assimilation}} for parameter estimation: {{application to}} a simple morphodynamic model by P. J. Smith, S. L. Dance, M. J. Baines, N. K. Nichols and T. R. ScottOcean Dynamics manuscript No. (will be inserted by the <b>editor)</b> Variational <b>data</b> assimilation for parameter estimation: application {{to a simple}} morphodynamic mode...|$|R
30|$|Ethical {{restrictions}} prevent public {{sharing of}} <b>data.</b> <b>Editors,</b> reviewers and interested researchers should contact {{the corresponding author}} or dairesearchdata@charite.de to request data access.|$|R
50|$|<b>Data</b> <b>editor</b> allow storing up to 3 lists with 42 items per list. The list {{values are}} used in {{statistic}} modes as sample points.|$|R
5000|$|<b>Editors</b> and Astrological <b>data</b> {{collectors}} {{contribute to}} Astrodatabank entries. [...] Entries are first {{reviewed by the}} main editor for reliability and notability, before publication.|$|R
5000|$|R. Reiter (1978). On closed world data bases. In H. Gallaire and J. Minker, <b>editors,</b> Logic and <b>Data</b> Bases, pages 119-140. Plenum., New York.|$|R
50|$|Antonella Buccianti, G. Mateu-Figueras, Vera Pawlowsky-Glahn (<b>Editors),</b> 2006. Compositional <b>Data</b> Analysis in the Geosciences: From Theory to Practice. Geological Society of London special publication, 212 p.|$|R
