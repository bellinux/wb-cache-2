7346|10000|Public
5|$|Python was {{conceived}} {{in the late}} 1980s, and its implementation began in December 1989 by Guido van Rossum at Centrum Wiskunde & Informatica (CWI) in the Netherlands as a successor to the ABC language (itself inspired by SETL) capable of exception handling and <b>interfacing</b> with the operating system Amoeba. Van Rossum is Python's principal author, and his continuing central role in deciding the direction of Python {{is reflected in the}} title given to him by the Python community, Benevolent Dictator For Life (BDFL).|$|E
5|$|The Power Delivery Specification defines six fixed power {{profiles}} for {{the power}} sources. PD-aware devices implement a flexible power management scheme by <b>interfacing</b> with the power source through a bidirectional data channel and requesting {{a certain level of}} electrical power, variable up to 5A and 20V depending on supported profile. The power configuration protocol uses a 24MHz BFSK-coded transmission channel on the VBUS line.|$|E
5|$|Interdigital {{filters are}} {{another form of}} coupled-line filter. Each section of line is about λ/4 in length and is {{terminated}} in a short-circuit at one end only, the other end being left open-circuit. The end which is short-circuited alternates on each line section. This topology is straightforward to implement in planar technologies, but also particularly lends itself to a mechanical assembly of lines fixed inside a metal case. The lines can be either circular rods or rectangular bars, and <b>interfacing</b> to a coaxial format line is easy. As with the parallel-coupled line filter, {{the advantage of a}} mechanical arrangement that does not require insulators for support is that dielectric losses are eliminated. The spacing requirement between lines is not as stringent as in the parallel line structure; as such, higher fractional bandwidths can be achieved, and Q values as low as 1.4 are possible.|$|E
5000|$|A COM component's <b>interfaces</b> are {{required}} to exhibit the reflexive, symmetric, and transitive properties. The reflexive property refers to the ability for the [...] call on a given <b>interface</b> with the <b>interface's</b> ID to return the same instance of the <b>interface.</b> The symmetric property requires that when <b>interface</b> B is retrieved from <b>interface</b> A via , <b>interface</b> A is retrievable from <b>interface</b> B as well. The transitive property requires that if <b>interface</b> B is obtainable from <b>interface</b> A and <b>interface</b> C is obtainable from <b>interface</b> B, then <b>interface</b> C should be retrievable from <b>interface</b> A.|$|R
40|$|<b>Interface</b> {{builders}} are popular tools for designing and developing graphical user <b>interfaces.</b> These tools, however, are engineering-centered; they operate mainly on windows and widgets. A typical <b>interface</b> builder {{does not offer}} any specific support for user-centered <b>interface</b> design, a methodology recognized as critical for effective user <b>interface</b> design. We present MOBILE (Model-Based <b>Interface</b> Layout Editor) an <b>interface</b> building tool that fully supports user-centered design and that guides the <b>interface</b> building process by using user-task models and a knowledge base of <b>interface</b> design guidelines. The approach in MOBILE has the important added benefit of being useful in both top-down and bottom-up <b>interface</b> design strategies. Keywords Model-based <b>interface</b> development, task models, <b>interface</b> builders, user-centered <b>interface</b> design, user <b>interface</b> development tools...|$|R
40|$|This book {{covers the}} design, {{evaluation}} and development process for interactive human computer <b>interfaces</b> including user <b>interface</b> design principles, task analysis, <b>interface</b> design methods, auditory <b>interfaces,</b> haptics, user <b>interface</b> evaluation, usability testing prototyping, issues in <b>interface</b> construction, <b>interface</b> evaluation, World Wide Web and mobile device <b>interface</b> issues. The book {{is ideal for}} the student that wants {{to learn how to}} use prototyping tools as part of the <b>interface</b> design and how to evaluate an <b>interface</b> and its interaction quality by using usability testing techniques...|$|R
5|$|The game's {{heads-up display}} simulates {{the inside of}} Samus' helmet, and {{features}} a radar, map, ammunition gauge and health meter. The player can change visors to enable new abilities such as X-ray vision, collecting information on many items, creatures and enemies, and <b>interfacing</b> with certain mechanisms such as force fields and elevators. Corruption also includes a hint system that periodically displays on-screen instructions and navigation assistance. The game also has {{the addition of the}} Hypermode, a feature in which health is drained to give temporary invincibility and more powerful attacks. After a certain amount of time, the player will enter Corrupt Hypermode, and if not stopped leads to a non-standard game over due to Samus being overtaken by Phazon. Another new feature is the Command Visor, which allows Samus to summon remotely her gunship from a suitable landing site to save the game, or travel to another destination quickly. During the progress of the game, new abilities can be obtained to allow it to perform aerial attacks against enemy targets and transport heavy objects.|$|E
25|$|<b>Interfacing</b> directly.|$|E
25|$|A {{book about}} <b>interfacing</b> OpenGL with Microsoft Windows.|$|E
40|$|Nowadays, {{information}} system creation process consists of several different actions, {{one of those}} actions – web <b>interface</b> design. Web <b>interface</b> design process requires a good methodology, to make web <b>interface</b> process better, quicker, flexible and satisfy other web <b>interface</b> design criterions. RUP (Rational Unified Process) don’t present any special creation process of internet web <b>interface.</b> Frequently web <b>interface</b> design process lies in the head of it’s designers. There are no full methodology of web <b>interface</b> design process in one place, only some web <b>interface</b> advices or articles about one or other web <b>interface</b> process steps could be found. The goal of this work {{is to make a}} methodology of web <b>interface</b> design and implement it for internet service provider system. Methodology also would be useful for companies which participate in web <b>interface</b> design process, also in school or university study process, or like a guide for any web <b>interface</b> designer. The developed methodology for web <b>interface</b> design was used for implementing internet service provider system web <b>interface,</b> system design process and redesign above-mentioned system web <b>interface</b> for measuring process times. Methodology of web <b>interface</b> design, reduce web <b>interface</b> design process time, help to make web <b>interface</b> design process easier, more flexible and understandable for web <b>interface</b> designer, also certain better web <b>interface</b> appearance independence from system functional part, with possibility to change web <b>interface</b> appearance without changing rest of system parts...|$|R
50|$|UsiXML (USer <b>Interface</b> eXtensible Markup Language) is an XML-based {{specification}} language for user <b>interface</b> design. It supports {{the description of}} UI for multiple contexts of use such as Character User <b>Interfaces</b> (CUIs), Graphical User <b>Interfaces</b> (GUIs), Auditory User <b>Interfaces,</b> and Multimodal User <b>Interfaces.</b>|$|R
50|$|<b>Interface</b> bytes come {{in three}} kinds: global <b>interface</b> bytes {{apply to all}} protocols; {{specific}} <b>interface</b> bytes apply to a specific protocol; and structural <b>interface</b> bytes introduce further <b>interface</b> bytes, and protocols.|$|R
25|$|A {{book about}} X11 <b>interfacing</b> and OpenGL Utility Toolkit (GLUT).|$|E
25|$|More {{software}} for <b>interfacing</b> is required, {{there is a}} potential for performance loss.|$|E
25|$|DirectInput: for <b>interfacing</b> with {{input devices}} {{including}} keyboards, mice, joysticks, or other game controllers. Deprecated after version 8 {{in favor of}} XInput for Xbox 360 controllers or standard WM_INPUT window message processing for keyboard and mouse input.|$|E
30|$|Network <b>interface</b> {{identification}} (NI-ID) (12 bits): This is an identifier {{assigned to}} each <b>interface</b> of either the MAC address of a network <b>interface</b> on the edge router or the {{virtual local area network}} (VLAN) ID of a virtual <b>interface</b> if the edge router uses VLAN <b>interfaces.</b> The NI-ID specifies which subnet a traffic flow comes from. Currently, a router can equip 802.1 Q VLAN <b>interfaces,</b> which means that multiple virtual <b>interfaces</b> can be used on one physical network <b>interface.</b> Although VLAN <b>interfaces,</b> which share one physical <b>interface,</b> have the same MAC address, each VLAN <b>interface</b> has a unique VLAN ID so that a router distinguishes VLAN <b>interfaces</b> by their VLAN IDs. If a network <b>interface</b> is a VLAN <b>interface,</b> a NI-ID is assigned to its VLAN ID instead of the MAC address shared with another VLAN <b>interface.</b> A 12 -bit NI-ID, expressed in the range from 0 to 4, 095, is sufficient to represent all possible network <b>interfaces</b> and VLANs on an edge router. An edge router keeps an NI-ID table and numbers the <b>interfaces</b> from 0 to 4, 095. Each NI-ID table entry consists of an NI-ID and the MAC address of a network <b>interface</b> card. If VLAN <b>interfaces</b> are used, then the entry in the NI-ID table consists of an NI-ID and a VLAN ID. Table  2 shows the NI-ID table of an edge router which uses VLAN <b>interfaces</b> on a physical <b>interface</b> whose MAC address is ‘C’.|$|R
40|$|While {{graphical}} <b>interfaces</b> {{have provided}} a host of advantages {{to the majority of}} computer users, they have created a significant barrier to blind computer users. To meet the needs of these users, a methodology for transforming graphical <b>interfaces</b> into nonvisual <b>interfaces</b> has been developed. In this design, the salient components of graphical <b>interfaces</b> are transformed into auditory <b>interfaces.</b> Based on a hierarchical model of the graphical <b>interface,</b> the auditory <b>interface</b> utilizes auditory icons to convey <b>interface</b> objects. Users navigate the <b>interface</b> by traversing its hierarchical structure. This design results in a usable <b>interface</b> that meets the needs of blind users while providin...|$|R
50|$|IDispatch is the <b>interface</b> that {{exposes the}} OLE Automation protocol. It {{is one of}} the {{standard}} <b>interfaces</b> that can be exposed by COM objects. COM distinguishes between three <b>interface</b> types: custom that are VTABLE-based IUnknown <b>interfaces,</b> dispatch that are IDispatch <b>interfaces</b> supporting introspection, and dual <b>interfaces</b> supporting both types.|$|R
25|$|Each Category rating also {{specifies}} maximum safe transient voltages {{for selected}} measuring ranges in the meter. Category-rated meters also feature protections from over-current faults. On meters that allow <b>interfacing</b> with computers, optical isolation {{may be used}} to protect attached equipment against high voltage in the measured circuit.|$|E
25|$|In 2001, The OpenEEG Project was {{initiated}} {{by a group}} of DIY neuroscientists and engineers. The ModularEEG was the primary device created the OpenEEG community; it was a 6-channel signal capture board that cost between $200 and $400 to make at home. The OpenEEG Project marked a significant moment in the emergence of DIY brain-computer <b>interfacing.</b>|$|E
25|$|Close to {{fourteen}} hundred buses {{move people}} through the campus each day. An extension of Line 1 Yonge–University of the Toronto subway {{is scheduled to open}} December 17, 2017. It will run directly under the campus, creating new stations at Keele Street and Finch Avenue (as Finch West station), at the centre of campus (as York University station), and at Steeles Avenue, <b>interfacing</b> with York Regional Transit (as Pioneer Village station).|$|E
5000|$|Support Universal Host Controller <b>Interface</b> (UHCI), Open Host Controller <b>Interface</b> (OHCI), Enhanced Host Controller <b>Interface</b> (EHCI), and Extensible Host Controller <b>Interface</b> (xHCI) ...|$|R
50|$|A Turing switch {{consists}} of a switched fabric, one or more ingress <b>interfaces</b> (also referred to as sources), one or more egress <b>interfaces</b> (sinks), and a decision procedure to determine an egress <b>interface</b> given an ingress <b>interface.</b> <b>Interfaces</b> are {{sometimes referred to as}} ports. A packet (cell or switched unit) arrives at an ingress <b>interface,</b> the appropriate egress <b>interface</b> is determined by the decision procedure, and the packet is then transported across the switching fabric to the egress <b>interface.</b> A packet is a symbol or sequence of 1's and 0's. An ingress <b>interface</b> is connected to an ingress line and an egress <b>interface</b> to an egress line. The ingress line is said to feed the ingress interface; the egress <b>interface</b> feeds the egress line.|$|R
40|$|Three {{different}} <b>interfaces</b> {{were used}} to browse a large (1296 items) table of contents. A fully expanded stable <b>interface,</b> expand/contract <b>interface,</b> and multi-pane <b>interface</b> were studied in a between-groups experiment with 41 novice participants. Nine timed fact retrieval tasks were performed, each task is analyzed and discussed separately. We found that both the expand/contract and multi-pane <b>interfaces</b> produced significantly faster times than the stable <b>interface</b> for many tasks using this large hierarchy; other advantages of the expand/contract and multi-pane <b>interfaces</b> over the stable <b>interface</b> are discussed. The animation characteristics of the expand/contract <b>interface</b> appear {{to play a major}} role. Refinements to the multi-pane and expand/contract <b>interfaces</b> are suggested. A predictive model for measuring navigation effort of each <b>interface</b> is presented. (Also cross-referenced as CAR-TR- 539...|$|R
25|$|The first 4.0 {{engines in}} 1987 had a RENIX (Renault/Bendix) engine {{management}} system considered quite advanced for their time. A knock sensor allowed the ECU to control spark advance in response to fuel octane and engine load. Unfortunately, there are few scan tools capable of <b>interfacing</b> with the system to pull diagnostics codes. RENIX systems also have no permanent memory for diagnostics codes thus making the diagnosis of intermittent problems more difficult.|$|E
25|$|Some {{rule-based}} specification {{systems and}} their associated network generation and simulation tools {{have been designed}} to accommodate spatial heterogeneity, in order to allow for the realistic simulation of interactions within biological compartments. For instance, the Simmune project includes a spatial component: Users can specify their multi-state biomolecules and interactions within membranes or compartments of arbitrary shape. The reaction volume is then divided into <b>interfacing</b> voxels, and a separate reaction network generated for each of these subvolumes.|$|E
25|$|Whilst {{no other}} {{dedicated}} violin-to-MIDI {{systems have been}} manufactured, more generic pitch-to-MIDI systems like those from Roland, and Yamaha {{can be adapted to}} use standard electric violin output. Most systems allow only monophonic operationonly one pitch can be detected and digitised at a timebut through the use of proprietary pickups, some limited MIDI polyphony can be achieved. Some pitch to MIDI interfaces from Axon/TerraTec will give full per string polyphony, <b>interfacing</b> with the multi-pin output from the Zeta MIDI pickup.|$|E
40|$|It {{is found}} that Si/Si and Si/SiO 2 <b>interfaces</b> exhibit {{different}} <b>interface</b> charge properties when bonded at comparable temperatures and surface treatments. Thermally grown oxides were bonded to bare silicon surfaces and the bonded Si/SiO 2 <b>interface</b> was investigated on MOS-structures by the C - V technique. <b>Interfaces</b> prepared at {{temperatures in the}} range 900 - 1100 °c exhibited U-shaped <b>interface</b> state densities. Si/Si samples were prepared using a hydrophilizing surface treatment before wafer bonding. At the same annealing temperatures, the <b>interface</b> state densities of the bonded Si/Si <b>interfaces</b> were in the range 10 11 - 10 13 cm - 2 eV - 1. Si/Si <b>interfaces</b> {{are found to be}} very sensitive to prebond chemical treatment, while Si/SiO 2 <b>interfaces</b> are not. Native oxides at bonded silicon <b>interfaces</b> have a more pronounced influence on Si/Si <b>interfaces</b> than on Si/SiO 2 <b>interface...</b>|$|R
40|$|Users submit queries to {{an online}} {{database}} via its query <b>interface.</b> Query <b>interface</b> parsing, which is im-portant for many applications, understands the query capabilities of a query <b>interface.</b> Since most query <b>interfaces</b> are organized hierarchically, {{we present a}} novel query <b>interface</b> parsing method, StatParser (Sta-tistical Parser), to automatically extract the hierarchical query capabilities of query <b>interfaces.</b> StatParser automatically learns from a set of parsed query <b>interfaces</b> and parses new query <b>interfaces.</b> StatParser starts from a small grammar and enhances the grammar {{with a set of}} probabilities learned from parsed query <b>interfaces</b> under the maximum-entropy principle. Given a new query <b>interface,</b> the probability-enhanced grammar identifies the parse tree with the largest global probability to be the query capabilities of the query <b>interface.</b> Experimental results show that StatParser very accurately extracts the query capabilities and can effectively overcome the problems of existing query <b>interface</b> parsers...|$|R
50|$|YMF711 (OPL3-SA2): Based on OPL3-SA, it adds Plug and Play ISA compatibility, 10-pin <b>interface</b> {{supports}} 16-bit port address decode (top 4 bits), EEPROM <b>interface,</b> Zoomed video port, CPU and DAC <b>interface</b> for OPL4-ML, modem <b>interface,</b> or IDE CD-ROM <b>interface.</b>|$|R
25|$|A {{proposed}} {{but not yet}} implemented method {{consists of}} building QCA devices out of single molecules. The expected advantages of such a method include: highly symmetric QCA cell structure, very high switching speeds, extremely high device density, operation at room temperature, and even the possibility of mass-producing devices by means of self-assembly. A number of technical challenges, including choice of molecules, the design of proper <b>interfacing</b> mechanisms, and clocking technology remain to be solved before this method can be implemented.|$|E
25|$|To prevent {{wrinkles}} and other problems, the fabric must be stabilized. The method of stabilizing {{depends on the}} type of machine, the fabric type, and the design density. For example, knits and large designs typically require firm stabilization. There are many methods for stabilizing fabric, but most often one or more additional pieces of material called stabilizers or <b>interfacing</b> are added beneath or on top of the fabric, or both. Stabilizer types include cut-away, tear-away, solvy water-soluble, heat-n-gone, filmoplast, and open mesh, sometimes in various combinations.|$|E
25|$|Because {{these early}} drum {{machines}} came {{out before the}} introduction of MIDI in 1983, they {{use a variety of}} methods of having their rhythms synchronized to other electronic devices. Some used a method of synchronization called DIN-sync, or Sync-24. Some of these machines also output analog CV/Gate voltages {{that could be used to}} synchronize or control analog synthesizers and other music equipment. The Oberheim DMX came with a feature allowing it to be synchronized to its proprietary Oberheim Parallel Buss <b>interfacing</b> system, developed prior to the introduction of MIDI.|$|E
50|$|A typical Camera <b>Interface</b> {{would support}} {{at least a}} {{parallel}} <b>interface</b> although these days many camera <b>interfaces</b> are beginning to support the MIPI CSI <b>interface.</b>|$|R
50|$|Photos has two <b>interfaces,</b> a {{management}} <b>interface</b> and a viewing <b>interface.</b>|$|R
5000|$|Routers forward {{traffic that}} enters on an input <b>interface</b> and leaves on an output <b>interface,</b> subject to {{filtering}} {{and other local}} rules. While routers usually forward from one physical (e.g., Ethernet, serial) to another physical <b>interface,</b> {{it is also possible}} to define multiple logical <b>interfaces</b> on a physical <b>interface.</b> A physical Ethernet <b>interface,</b> for example, can have logical <b>interfaces</b> in several virtual LANs defined by IEEE 802.1Q VLAN headers.|$|R
