0|1972|Public
40|$|Pointer swizzling is the {{conversion}} of database <b>objects</b> between an <b>external</b> form (<b>object</b> <b>identifiers)</b> and an internal form (direct memory pointers). Swizzling is used in some object-oriented databases, persistent object stores, and persistent and database programming language implementations to speed manipulation of memory resident data. Here we describe a simplifying model of application behavior, revealing those aspects where swizzling is most relevant in both benefits and costs. The model {{has a number of}} parameters, whichwehavemeasured for a particular instance of the Mneme persistent object store, varying the swizzling technique used. The results confirm most of the intuitive, qualitative tradeoffs, with the quantitative data showing that some performance differences between schemes are smaller than might be expected. However, there are some interesting effects that run counter to naive intuition, most of which we explain using deeper analysis of the algorithms and data struc [...] ...|$|R
40|$|Amalgamated logic {{programming}} {{can be used}} to express relationships between two theories which can be interpreted as a transformation from one theory to another, so providing a form of logical update. In a system representing objects as theories this can explain state updates of objects but it does not account properly for <b>object</b> <b>identifiers.</b> We describe a notion of rebinding for <b>object</b> <b>identifiers,</b> and for primitive names of theories in general, which accounts for the change to <b>object</b> <b>identifiers...</b>|$|R
40|$|Purpose: The status {{which many}} {{programs}} for <b>object</b> <b>identifier</b> are not incompatible {{with each other}} has become a bottleneck for integrating logistics resources. Scholars have done some relevant studies in terms of coding and conversion mechanisms, but the problem still has not got a better solution. The {{purpose of this study}} is to research how to make the <b>object</b> <b>identifier</b> programs Compatible. Design/methodology/approach: Author proposed <b>object</b> unified <b>identifier</b> (OUID) method based on OID and introduced the standard identification code in it, according to the problems of <b>object</b> <b>identifier</b> in logistics resource integration. And the paper further designed the acquisition process of the resource basic information and location information, and analyzed application environment of <b>object</b> unified <b>identifier</b> based on OID. Findings: OUID made up for the lack of location information in conversion mechanism, and avoided to promote new unified identifier standards at the same time. The supplement of the application environment provided an important support to solve the problems of poor communication caused by non-unified <b>object</b> <b>identifier</b> in the process of logistics resource integration. Originality/value: Using this method, each identification systems not only keep its own territory, but also can compatible with other <b>object</b> <b>identifier.</b> </p...|$|R
5000|$|Electronic {{documents}} {{may have}} a digital <b>object</b> <b>identifier</b> (DOI).|$|R
5000|$|In Microsoft's COM and DCOM, OBJREFs have an <b>object</b> <b>identifier</b> (OID) field.|$|R
5000|$|... id-ad-dvcs <b>OBJECT</b> <b>IDENTIFIER</b> ::= {iso(1) identified-organization(3)dod(6) internet(1) security(5) mechanisms(5) pkix(7) ad(48) 4} ...|$|R
5000|$|... id-kp-dvcs <b>OBJECT</b> <b>IDENTIFIER</b> ::= {iso(1) identified-organization(3)dod(6) internet(1) security(5) mechanisms(5) pkix(7) kp(3) 10} ...|$|R
5000|$|... id-mod-dvcs <b>OBJECT</b> <b>IDENTIFIER</b> ::= {iso(1) identified-organization(3)dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) 15} ...|$|R
5000|$|The list of {{certificate}} policy <b>object</b> <b>identifiers</b> (OIDs) {{acceptable to the}} relying party (or any); ...|$|R
5000|$|... other names, {{given as}} a General Name: a {{registered}} <b>Object</b> <b>identifier</b> {{followed by a}} value ...|$|R
5000|$|... 17 October 1996 - The {{mechanism}} is assigned the <b>object</b> <b>identifier</b> 1.3.6.1.5.5.2 and is abbreviated snego.|$|R
50|$|Internet Explorer {{versions}} 5 and 6 did {{not define}} the XMLHttpRequest <b>object</b> <b>identifier</b> in their scripting languages as the XMLHttpRequest identifier itself was not standard {{at the time}} of their releases. Backward compatibility can be achieved through object detection if the XMLHttpRequest identifier does not exist. Microsoft added the XMLHttpRequest <b>object</b> <b>identifier</b> to its scripting languages in Internet Explorer 7.0 released in October 2006.|$|R
50|$|An <b>object</b> <b>identifier</b> (or <b>object</b> ID or OID) uniquely {{identifies}} a {{managed object}} in the MIB hierarchy.|$|R
5000|$|Object IDs {{come from}} the set of all <b>object</b> <b>identifiers</b> {{allocated}} {{according to the rules}} specified in ASN.1.|$|R
25|$|The DOI syntax is a NISO standard, first {{standardised}} in 2000, ANSI/NISO Z39.842005 Syntax for the Digital <b>Object</b> <b>Identifier.</b>|$|R
50|$|ISO/IEC 6523 {{forms the}} basis of OSI naming under ISO/IEC 8348. It also forms the 1.3 <b>object</b> <b>identifier</b> (OID) tree.|$|R
50|$|<b>Object</b> <b>identifiers</b> use a {{style of}} dot-decimal {{notation}} to represent an arbitrarily deep hierarchy of objects identified by decimal numbers.|$|R
50|$|In {{order to}} be able to import {{elements}} from dvcs the following <b>object</b> <b>identifier</b> is used as an ASN.1 module identifier.|$|R
5000|$|The command snmpget {{uses the}} snmpget {{application}} to retrieve information {{associated with a}} specific <b>object</b> <b>identifier</b> (OID) from a target device.|$|R
40|$|Scientific {{databases}} {{are used}} to accession objects representing the results of scientific inquiry, such as genes and DNA sequences. These objects must have stable identifiers {{that can be used}} as references in scientific papers and other databases. The requirement for stable <b>object</b> <b>identifiers,</b> however, conflicts with the tendency of scientific data to evolve over time. We present in this paper version management facilities that allow scientific databases to achieve a balance between stable <b>object</b> <b>identifiers</b> and evolving data. 1 Introduction Scientific databases are increasingly being used to accession objects representing the results of scientific inquiry, such as genes and DNA sequences. Accessioning involves providing these <b>objects</b> with stable <b>identifiers</b> that can be included as references in publications (e. g., journal papers) and other scientific databases. This requirement for stable <b>object</b> <b>identifiers</b> can conflict with the tendency of scientific data to evolve over time. By t [...] ...|$|R
5000|$|An <b>object</b> <b>identifier</b> (OID) may {{be given}} on the command line. This OID {{specifies}} which portion of the <b>object</b> <b>identifier</b> space will be searched using GETNEXT requests. All variables in the subtree below the given OID are queried and their values presented to the user. If no OID argument is present, snmpwalk will search the subtree rooted at SNMPv2-SMI::mib-2 (including any MIB object values from other MIB modules, that are defined as lying within this subtree).|$|R
25|$|DOI is a {{registered}} URI under the info URI scheme specified by IETF RFC 4452. info:doi/ is the infoURI Namespace of Digital <b>Object</b> <b>Identifiers.</b>|$|R
5000|$|Preview {{window on}} the right {{displaying}} the title, journal name, abstract summary, authors, volume, publication year, publisher, source and the article's digital <b>object</b> <b>identifier</b> ...|$|R
50|$|If {{you create}} two axes, {{one must be}} the column axis and one must be the row axis, {{although}} it doesn't matter in which order they appear within the query. If you create a query that has only one axis, {{it must be the}} column axis. The square brackets around the particular <b>object</b> <b>identifier</b> are optional as long as the <b>object</b> <b>identifier</b> {{is not one of the}} reserved words and does not otherwise contain any characters other than letters, numbers or underscores.|$|R
5000|$|S Ross and M Hedstrom, 2005, ‘Preservation Research and Sustainable Digital Libraries’, International Journal of Digital Libraries, Vol 5.4, 317-325. Digital <b>Object</b> <b>Identifier</b> (DOI) 10.1007/s00799-004-0099-3, [...]|$|R
50|$|In May 2012, the Library {{launched}} DataCite Canada, a data {{registration service}} that allows Canadian data centres to register research data sets and assign Digital <b>Object</b> <b>Identifiers</b> (DOIs).|$|R
50|$|PDC is {{a member}} of CrossRef and {{integrates}} digital <b>object</b> <b>identifiers</b> into all journals it publishes. PDC also participates in CrossRef's Cited-By Linking and CrossMark version control services.|$|R
5000|$|... "Power System State Estimation" [...] Smith, O.J.M.; IEEE Transactions on Power Apparatus and Systems Volume PAS-89, Issue 3, Part-I, March 1970 Page(s):363 - 379, Digital <b>Object</b> <b>Identifier</b> 10.1109/TPAS.1970.292713 http://ieeexplore.ieee.org/search/freesrchabstract.jsp?arnumber=4074062&isnumber=4074057&punumber=10669&k2dockey=4074062@ieeejrns&query=%28smith%2C+o.+j.+m.%29+%3Cin%3E+metadata&pos=2 ...|$|R
5000|$|... "Large Low-Cost Single-Phase Semi-hex Motors" [...] by Otto J.M. Smith, IEEE Transactions on Energy Conversion, Vol 14, No. 4, December 1999, pp 1353 - 1358 Digital <b>Object</b> <b>Identifier</b> 10.1109/60.815072 http://ieeexplore.ieee.org/search/freesrchabstract.jsp?arnumber=815072&isnumber=17640&punumber=60&k2dockey=815072@ieeejrns&query=%28smith%2C+o.+j.+m.%29+%3Cin%3E+metadata&pos=0 ...|$|R
5000|$|Some Handle System namespaces define special {{presentation}} rules. For example, Digital <b>Object</b> <b>Identifiers,</b> {{which represent}} {{a high percentage}} of the extant handles, are usually presented with a [...] "doi:" [...] prefix: [...]|$|R
5000|$|... "Sparse Solutions Using Hash Storage" [...] Smith, O.J.M.; Makani, K.; Krishna, L.; IEEE Transactions on Power Apparatus and Systems, Volume PAS-91, Issue 4, July 1972 Page(s):1396 - 1404, Digital <b>Object</b> <b>Identifier</b> 10.1109/TPAS.1972.293271 http://ieeexplore.ieee.org/search/freesrchabstract.jsp?arnumber=4074867&isnumber=4074854&punumber=10669&k2dockey=4074867@ieeejrns&query=%28smith%2C+o.+j.+m.%29+%3Cin%3E+metadata&pos=4 ...|$|R
5000|$|Attribute Types—Define an <b>object</b> <b>identifier</b> (OID) {{and a set}} {{of names}} that may be used to refer to a given attribute, and {{associates}} that attribute with a syntax and set of matching rules.|$|R
50|$|There are {{a number}} of {{challenges}} to address when integrating data from different sources. The challenges can be classified into four groups: text/data mismatch, <b>object</b> <b>identifiers</b> and schema mismatch, abstraction level mismatch, data accuracy.|$|R
5000|$|In computing, <b>object</b> <b>{{identifier}}s</b> or OIDs are an identifier mechanism standardized by the International Telecommunications Union (ITU) and ISO/IEC for naming any object, concept, or [...] "thing" [...] with a globally unambiguous persistent name.|$|R
50|$|As of July, 2017, EIDR {{contains}} over 1.2 {{million records}} (up 45% from late 2015), including 172K movies, and 547K episodes of over 24K TV series.EIDR is an {{implementation of a}} Digital <b>Object</b> <b>Identifier</b> (DOI).|$|R
50|$|Object {{stores are}} similar to key/value stores in two respects. First, the <b>object</b> <b>identifier</b> or URL (the {{equivalent}} of the key) can be an arbitrary string. Second, data is may be of an arbitrary size.|$|R
