7|0|Public
5000|$|Nominations {{are invited}} from prison {{governors}} and directors across the UK and {{winners of the}} main £3,000 prize to date include <b>KeepOut</b> [...] (2013) and PrisonWorks [...] (2014). Also highly commended, and winners of the £1,000 runner-up prizes to date, were Theatre Nemo (2013) and The Forgiveness Project (2014).|$|E
40|$|EXOSIMS is an {{open-source}} simulation {{tool for}} parametric modeling of the detection yield and characterization of exoplanets. EXOSIMS {{has been adopted}} by the Exoplanet Exploration Programs Standards Definition and Evaluation Team (ExSDET) as a common mechanism for comparison of exoplanet mission concept studies. To ensure trustworthiness of the tool, we developed a validation test plan that leverages the Python-language unit-test framework, utilizes integration tests for selected module interactions, and performs end-to-end crossvalidation with other yield tools. This paper presents the test methods and results, with the physics-based tests such as photometry and integration time calculation treated in detail and the functional tests treated summarily. The test case utilized a 4 m unobscured telescope with an idealized coronagraph and an exoplanet population from the IPAC radial velocity (RV) exoplanet catalog. The known RV planets were set at quadrature to allow deterministic validation of the calculation of physical parameters, such as working angle, photon counts and integration time. The observing <b>keepout</b> region was tested by generating plots and movies of the targets and the <b>keepout</b> zone over a year. Although the <b>keepout</b> integration test required the interpretation of a user, the test revealed problems in the L 2 halo orbit and the parameterization of <b>keepout</b> applied to some solar system bodies, which the development team was able to address. The validation testing of EXOSIMS was performed iteratively with the developers of EXOSIMS and resulted in a more robust, stable, and trustworthy tool that the exoplanet community can use to simulate exoplanet direct-detection missions from probe class, to WFIRST, up to large mission concepts such as HabEx and LUVOIR...|$|E
40|$|We {{intend to}} study multiagent {{learning}} in stochastic games {{by developing a}} multiagent system for the game of <b>keepout,</b> and studying the effects of cooperation in the performance. We would study if in case of multiple agents, cooperating agents perform better that independent agents. We would vary the ways of cooperation and study its effects. We would like to infer if bearing the costs of cooperation pays off by better performance. In this report we present the developments uptil now and the future work we intend to do. 1 Problem Statement We shall deal with the stochastic game of <b>KeepOut</b> in multiagent setting. In <b>KeepOut</b> there are two teams (attackers and defenders). Any one of the attackers have to reach in a target area, which is a circle in {{the centre of the}} arena, and the defenders have to prevent the attackers from doing so. This is a team game where a team can also have one or more agents. It would be interesting to study the effects of cooperation in the performance of the teams. We would study the performance under varying ways of cooperation suggested by Tan [3]: • communicating instantaneous information such as actions or rewards • communicating episodes experienced by agents • communicate learned decision policies Figure 1 : Arena setup for the problem statement. The attacker and defender robots are shown with the “A ” and “D ” tags respectively. White lines depicting their distance from the ball and direction of heading are also shown. ...|$|E
40|$|The aim of {{this study}} is to explore the {{phenomenon}} of cooperative learning in multiple agent stochastic game of <b>Keepout.</b> We intend to investigate whether for a given number of reinforcement learning agents, can cooperative agents outperform independent agents who do not communicate during learning. In that regard, we would like to work towards quantifying the benefits of cooperation in different ways like sharing instantaneous information, episodic experiences and learned knowledge after bearing the cost of cooperation. This report presents the work done in this regard upto now and associated future plans. 1 Introduction: Learning i...|$|E
40|$|The Moon {{offers a}} stable {{platform}} with excellent seeing conditions for astronomical obsen_tions. Some troublesome {{aspects of the}} lunar environment {{will need to be}} overcome to mali_e the full potential of the Moon as an observatory site. Mia'gation of negative effects of vacuum, thermal radiation, dust, and micrometeorite impact is feas_le u 4 th careful engineering and operational planning. Shields against impact, dust, and solar radiation need to be developed. Means of restoffng degraded surfaces are probably essential for optical and thermal control surfaces d_loyed in longdifetime lunar fax'ilities. Precursor missions should be planned to validate and enhance the understana_ng of the lunar environment (e. g., dust behavior uqthout and u$th human preserrce) and to determine environmental effects on surfaces and components. Precursor missions should generate data useful in establishing <b>keepout</b> zones around observatory facih_ies where rocket launches and landings, mining and veln'cular traffic could be detrimental to observatory olX, ration. 1745...|$|E
40|$|NASA’s decadal survey {{determined}} that simultaneous measurements from a 3 D volume of space are advantageous {{for a variety}} of studies in space physics and Earth science. Therefore, swarm concepts with multiple spacecraft in close proximity are a growing topic of interest in the small satellite community. Among the capabilities needed for swarm missions is a means to maintain operator-specified geometry, alignment, or separation. Swarm stationkeeping poses a planning challenge due to the limited scalability of ground resources. To address scalable control of orbital dynamics, we introduce SODA – Swarm Orbital Dynamics Advisor – a tool that accepts high-level configuration commands and provides the orbital maneuvers needed to achieve the desired type of swarm relative motion. Rather than conventional path planning, SODA’s innovation is the use of artificial potential functions to define boundaries and <b>keepout</b> regions. The software architecture includes high fidelity propagation, accommodates manual or automated inputs, displays motion animations, and returns maneuver commands and analytical results. Currently, two swarm types are enabled: in-train distribution and an ellipsoid volume container. Additional swarm types, simulation applications, and orbital destinations are in planning stages...|$|E

