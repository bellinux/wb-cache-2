7|165|Public
5000|$|PT bit 2: <b>Explicit</b> <b>forward</b> <b>{{congestion}}</b> <b>indication</b> (EFCI); 1 = {{network congestion}} experienced ...|$|E
50|$|Dr. Jain is the {{co-inventor}} of the DEC-bit {{scheme for}} congestion avoidance in computer networks {{which has been}} adapted for implementation in Frame Relay networks as {{forward explicit congestion notification}} (FECN), ATM Networks as <b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Indication</b> (EFCI), and TCP/IP networks as Explicit Congestion Notification(ECN).|$|E
40|$|Rate based {{congestion}} control promises effective traffic management for ABR service class suitable to data communications in ATM networks. The rate based {{congestion control}} algorithm dynamically regulates transmission rate of source end system according to feedback {{information from the}} network. In this paper, we described two rate based congestion control algorithms, <b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Indication</b> (EFCI) and Explicit Rate Indication Congestion Avoidance (ERICA) developed by ATM forum. From the simulation results, we can observe that, both have cell drop problem at intermediate switch in ATM network. We then propose an improvement to ERICA scheme to overcome this proble...|$|E
40|$|It {{has been}} found {{recently}} that feedback in an ATM network is useful {{in the long run}} to alleviate congestion. This general conclusion, although theoretically important, does not address the practical concern aa to how the network behaves when it is adjusting itself in short to medium range. The work reported in this paper is motivated by this practical concern. A new feedback based dynamic traffic control mechanism (called balanced mechanism) is proposed and compared with the pure PCC and an existing feedback based mechanism, known aa <b>Explicit</b> <b>Forward</b> <b>Congestion</b> Notification (EFCN). It is shown that the balanced mechanism outperforms both PCC and the EFCN...|$|R
40|$|ATM {{networks}} {{are seen as}} the most likely technology for implementing the National Information Infrastructure (NII). Successful ATM deployment relies on effective flow control for ABR traffic. In this paper we evaluate {{the performance of the}} Explicit Proportional Rate Control Algorithm (EPRCA) in a Wide Area Network (WAN) made up of both Explicit Rate (ER) and <b>Explicit</b> <b>Forward</b> <b>Congestion</b> Indicator (EFCI) switches. MPEG video traces from MPEG- 2 encoded video streams are used to generate VBR traffic. Available Bit Rate (ABR) and Variable Bit Rate (VBR) sources are used to simulate the real world environment in which EPRCA will be required to operate (transient state). The performance of EPRCA is evaluated in terms of throughput, buffer occupancy, fairness, and fast convergence. 1 Introduction Asynchronous Transfer Mode (ATM) is slated to become the protocol on which the information superhighway will rely to transfer voice, data and video. A great deal of research has already gone into AT [...] ...|$|R
40|$|We {{propose a}} scheme for {{congestion}} avoidance in networks using a connectionless protocol {{at the network}} layer. The scheme uses feedback from the network to the users of the network. The interesting challenge for the scheme {{is to use a}} minimal amount of feedback (one bit in each packet) from the network to adjust the amount of traffic allowed into the network. The servers in the network detect congestion and set a <b>congestion</b> <b>indication</b> bit on packets flowing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back to the users through the transport level acknowledgement. The scheme is distributed [...] ...|$|R
40|$|Traffic {{management}} and congestion control are key issues in ATM networks. Congestion control schemes promises effective traffic {{management and}} it uses feedback {{information from the}} network to specify the maximum rate at which each source can transmit cells in to the network. In this paper, we considered an <b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Indication</b> (EFCI) Congestion scheme, developed by ATM forum for ATM networks. This scheme has cell drop problem at intermediate switch and allowed cell rate at source terminals oscillates from lower values to higher values and vice versa. An enhancement to EFCI scheme is proposed. The simulation results shows that enhanced EFCI scheme gives better results than basic EFCI scheme...|$|E
40|$|This paper {{evaluates the}} {{performance}} of different rate-based congestion control schemes for ABR services over broadband satellite networks (BSNs) interworking with ATM/BISDNs. The <b>explicit</b> <b>forward</b> <b>congestion</b> <b>indication</b> (EFCI) and explicit rate (ER) schemes are considered on their own in single loop end-to-end control. It is shown that the long feedback delay over satellite leads to sluggish control and large buffer requirements. To improve performance, delay-based modifications to the EFCI and ER schemes, known as DBCI and DBER schemes, are proposed to dynamically adjust the rate adaptation parameters according to the feedback delay. Simulation {{results show that the}} proposed DBCI and DBER schemes effectively reduces buffer congestion and starvation, without significantly reducing link utilization and fairness in the system. 1...|$|E
40|$|In {{this paper}} we {{investigate}} {{the performances of}} the EFCI-based (<b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Indication)</b> and ER-based (Explicit Rate) algorithms for the rate-based flow control of the ABR (Available Bit Rate) traffic in an ATM network. We {{consider the case of}} two switches in tandem. We present several definitions of bottleneck, and provide conditions that determine whether the first, the second or both queues are bottleneck. We show that it is not necessarily the queue with the slowest transmission rate that is "responsible" for a bottleneck. We derive analytic formulas for the maximum queue length. We compare our results to those obtained by approximating a network by a simpler one, containing only the bottleneck switch. We show that the maximum queue lengths under the approximating approach may largely underestimate the ones obtained in the real network...|$|E
50|$|FECN means <b>forward</b> <b>explicit</b> <b>congestion</b> notification. The FECN bit {{can be set}} to 1 to {{indicate}} that congestion was experienced {{in the direction of}} the frame transmission, so it informs the destination that congestion has occurred.BECN means backwards explicit congestion notification. The BECN bit can be set to 1 {{to indicate}} that congestion was experienced in the network in the direction opposite of the frame transmission, so it informs the sender that congestion has occurred.|$|R
40|$|Transmission control {{protocol}} (TCP), the widely used transport protocol in the Internet, assumes that packet losses are because of congestion. Wireless networks have higher error rates than wired networks; TCP misinterprets the error losses as congestion and wrongly invokes congestion control algorithms. In the proposed scheme, {{we show that}} by using <b>congestion</b> <b>indication</b> feedback from the network, performance of TCP can be improved in network paths containing wireless links. The routers in the network detect congestion and set a <b>congestion</b> <b>indication</b> bit on packets owing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back to the users through the transport-level acknowledgement. When the sender encounters a packet loss, explicit <b>congestion</b> <b>indication</b> feedback received for the packets sent {{before and after the}} packet dropped are used to identify the state of the network at the time of drop. If the network is identi ed as not congested when the packet was lost and the recent <b>congestion</b> <b>indication</b> feedback is also low, then the packet is considered to be lost because of transmission error. We compared our scheme against TCP-Reno which assumes that all packet losses are because of congestion. Under low congestion in the network, our scheme can lead to signi cant throughput improvement...|$|R
40|$|Due to the {{character}} of the original source materials and the nature of batch digitization, quality control issues may be present in this document. Please report any quality issues you encounter to digital@library. tamu. edu, referencing the URI of the item. Includes bibliographical references (leaves 36 - 37). Issued also on microfiche from Lange Micrographics. Transmission control protocol (TCP), the widely used transport protocol in the Internet, assumes that packet losses are because of congestion. Wireless networks have higher error rates than wired networks; TCP misinterprets the error losses as congestion and wrongly invokes congestion control algorithms. In the proposed scheme, we show that by using <b>congestion</b> <b>indication</b> feedback from the network, performance of TCP can be improved in network paths containing wireless links. The routers in the network detect congestion and set a <b>congestion</b> <b>indication</b> bit on packets flowing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back to the users through the transport-level acknowledgement. When the sender encounters a packet loss, explicit <b>congestion</b> <b>indication</b> feedback received for the packets sent before and after the packet dropped are used to identify the state of the network at the time of drop. If the network is identified as not congested when the packet was lost and the recent <b>congestion</b> <b>indication</b> feedback is also low, then the packet is considered to be lost because of transmission error. We compared our scheme against TCP-Reno which assumes that all packet losses are because of congestion. Under low congestion in the network, our scheme can lead to significant throughput improvement...|$|R
40|$|We study both {{correctness}} {{and performance}} of the source/destination protocol of the Available Bit Rate (ABR) service in Asynchronous Transfer Mode (ATM) networks. Although the basic source/destination protocol for congestion management is relatively simple, the protocol specification has to cope with several "real-world" cases such as failures and delayed/lost feedback which may introduce complexity. Rigorous proofs of the correct functioning of the protocol based on a formal specification is necessary. We use a formal Extended Finite State Machine (EFSM) model {{to show that the}} ABR source/destination protocol is free of live-locks, so that under all conditions both Resource Management (RM) and data cells will be transmitted. We also show that the network options of <b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Indication</b> (EFCI) and Explicit Rate (ER) interoperate correctly. While ensuring the correct functioning of the protocol, it is essential that pathological situations do not result in abysmal perf [...] ...|$|E
40|$|We {{propose a}} scheme for {{congestion}} avoidance in networks using a connectionless protocol {{at the network}} layer. The scheme uses feedback from the network to the users of the network. The interesting challenge for the scheme {{is to use a}} minimal amount of feedback (one bit in each packet) from the network to adjust the amount of traffic allowed into the network. The servers in the network detect congestion and set a <b>congestion</b> <b>indication</b> bit on packets flowing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back to the users through the transport level acknowledgement. The scheme is distributed, adapts to the dynamic state of the network, converges to the optimal operating point, is quite simple to implement, and has low overhead while operational. The scheme also addresses a very important aspect of fairness in the service provided to the various sources utilizing the network. The scheme attempts to maintain fairness in service provided to multiple sources. This paper presents the scheme and the analysis that went into the choice of the various decision mechanisms. We also address the performance of the scheme under transient changes in the network and for pathological conditions...|$|R
40|$|Digital Equipment Corporation We {{propose a}} scheme for {{congestion}} auoidunce in networks using a connectionless protocol {{at the network}} layer. The scheme uses a minimal amount of feedback from the network to the users, who adjust the amount of traffic allowed into the network. The routers in the network detect congestion and set a congestion-indication bit on packets flowing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back to the users through the transport-level acknowledgment. The scheme is distributed, adapts to the dynamic state of the network, converges to the optimal operating point, is quite simple to implement, and has low overhead. The scheme maintains fairness in service provided to multiple sources. This paper presents the scheme and the analysis {{that went into the}} choice of the various decision mechanisms. We also address the performance of the scheme under transient changes in the network and pathological overload conditions...|$|R
40|$|We {{propose a}} scheme Car congesliort {{avoidance}} in networks using a connectiortless prot,ocol at the neLwork layer. The scheme uses feedback from Lhe network to the {{users of the}} network. The interesting challenge for the scheme {{is to use a}} minimal anlount of feedback (one bit in each packet) from the network to adjust LII ~ amount. of trafic allowed into the network. The servers in the network detect congestion a. nd set, a congestion indicalion. bit on packets flowing in the <b>forward</b> direction. The <b>congestion</b> <b>indication</b> is communicated back Lo the users throngh the transport level acknowledgement. The scheme is distribuLed, adapt,s to the dynalllic state of the net,work, converges to the optimal operaLing point, is quite sirn-ple to implement, and has low overhead while opcralionaf. The scheme also addresses a very important aspect of fairness in the service provided to the various sources utilizing the network. The scheme atLempLs Lo mainlain fairness in service provided Lo mufliple sources. This paper presents the schelne and tile ana. lysis that went inlo Lhe clmice of Lhe various decision mechanisms. We also address I,he perfornlance of lhe schetne under tra. nsirllt changes in Lhe network and for palhological conditions. ...|$|R
40|$|Ethernet is {{replacing}} the traditional storage networking technologies like Fiber Channel and Infiniband in Datacenters. The key feature of these traditional technologies {{that make them}} suitable for datacenter is their low-loss low-delay operation. Consequently IEEE 802. 1 standards committee is developing new specification for congestion management for Ethernet in datacenter networks. Backward Congestion Notification (BCN) and <b>Forward</b> <b>Explicit</b> <b>Congestion</b> Notification (FECN) are two proposals. Each of the proposals has its own advantages and disadvantages. FECN outperforms BCN in fairness and response time while BCN is {{able to respond to}} sudden increases in load in less than a round trip time. In this paper, we propose an enhanced version of FECN that takes the best of both proposals and adds BCN if there is a sudden severe congestion. It is shown that E-FECN performs better than the previous proposals. 1...|$|R
50|$|Upon {{receiving}} an IP packet with the Congestion Experienced codepoint, the TCP receiver echoes back this <b>congestion</b> <b>indication</b> using the ECE flag in the TCP header. When an endpoint receives a TCP segment with the ECE bit it reduces its congestion window {{as for a}} packet drop. It then acknowledges the <b>congestion</b> <b>indication</b> by sending a segment with the CWR bit set.|$|R
50|$|When the {{destination}} replies, the corresponding ACK includes {{a bit of}} congestion. The sender receives the ACK and calculates how many packets it received with the <b>congestion</b> <b>indication</b> bit set to one. If {{less than half of}} the packets in the last window had the <b>congestion</b> <b>indication</b> bit set, then the window is increased linearly. Otherwise, the window is decreased exponentially.|$|R
50|$|Without ECN, <b>congestion</b> <b>indication</b> echo is {{achieved}} indirectly by {{the detection of}} lost packets. With ECN, the congestion is indicated by setting the ECN field within an IP packet to CE and is echoed back by the receiver to the transmitter by setting proper bits in the header of the transport protocol. For example, when using TCP, the <b>congestion</b> <b>indication</b> is echoed back by setting the ECE bit.|$|R
50|$|By {{providing}} endpoints with <b>congestion</b> <b>indication</b> {{before the}} queue is full, AQM disciplines {{are able to}} maintain a shorter queue length than drop-tail queues, which combats bufferbloat and reduces network latency.|$|R
40|$|Mathematical {{models of}} {{congestion}} control capture the <b>congestion</b> <b>indication</b> mechanism at the router {{in two different}} ways: rate-based models, where the queue-length at the router does not explicitly appear in the model, and queue-based models, where the queue length at the router is explicitly {{a part of the}} model. Even though most <b>congestion</b> <b>indication</b> mechanisms use the queue length to compute the packet marking or dropping probability to indicate congestion, we argue that, depending upon the choice of the parameters of the AQM scheme, one would obtain a rate-based model or a rate-and-queue-based model as the deterministic limit of a stochastic system with a large number of users...|$|R
5000|$|Congestion may {{be handled}} {{only by the}} transmitter, but since it {{is known to have}} {{happened}} only after a packet was sent, there must be an echo of the <b>congestion</b> <b>indication</b> by the receiver to the transmitter.|$|R
40|$|We compare {{between the}} binary <b>congestion</b> <b>indication</b> scheme and the {{explicit}} rate indication scheme proposed for congestion control of ATM's available bit rate service (ABR). The fairness {{problems of the}} binary <b>congestion</b> <b>indication</b> scheme that arise when mixing long and short distance traffic are investigated. Our simulations suggest that the unfairness noticed in this case towards the long distance traffic mainly results from {{the difference in the}} number of the traversed hops and not from the difference in propagation delay. We also introduce a simple approach with which this unfairness can be avoided. This approach is based on setting the multiple decrease factor in an inverse relation to the number of the traversed hops...|$|R
40|$|We {{consider}} a simple model of parallel TCP connections defined as follows. There are N connections competing for a bottleneck of fixed capacity. Each connection {{is assumed to}} increase its send rate linearly in time in absence of <b>congestion</b> <b>indication</b> and otherwise decreases its rate to a fraction β of the current send rate. Whenever aggregate send rate of the connections hits the link capacity, a single connection is signalled a <b>congestion</b> <b>indication.</b> Under the prevailing assumptions, and assuming only in addition a mild stability condition, we obtain that the throughput is the factor of the link capacity, 1 − 1 /(1 + const N), with const =(1 + β) /(1 − β). This result appears to be previously unknown; despite simplicity of its final form, it is not immediate. The result is of practical importance as it elucidates the throughpu...|$|R
50|$|Conventionally, TCP/IP {{networks}} signal congestion {{by dropping}} packets. When ECN is successfully negotiated, an ECN-aware router may set a {{mark in the}} IP header instead of dropping a packet in order to signal impending congestion. The receiver of the packet echoes the <b>congestion</b> <b>indication</b> to the sender, which reduces its transmission rate as if it detected a dropped packet.|$|R
5000|$|A simple {{example of}} <b>explicit</b> <b>forwarding</b> in Java: an {{instance}} of [...] forwards calls to the [...] method of its [...] field: ...|$|R
5000|$|The {{approximation}} operator {{represents the}} numerical scheme used. For a simple <b>explicit</b> <b>forward</b> euler scheme with step witdth [...] this would be: ...|$|R
5000|$|Unlike other stochastically fair queuing disciplines, such as SFQ (Stochastic Fairness Queuing), SFB can be {{implemented}} using a bloom filter rather than a hash table, which dramatically reduces its storage requirements {{when the number of}} flows is large.When a flow's drop/mark probability reaches 1, the flow has been shown to not react to <b>congestion</b> <b>indications</b> from the network. Such an inelastic flow is put in a [...] "penalty box", and rate-limited.|$|R
5000|$|TCP {{supports}} ECN {{using three}} flags in the TCP header. The first one, the Nonce Sum (NS), {{is used to}} protect against accidental or malicious concealment of marked packets from the TCP sender. [...] The other two bits are used to echo back the <b>congestion</b> <b>indication</b> (i.e. signal the sender {{to reduce the amount}} of information it sends) and to acknowledge that the congestion-indication echoing was received. These are the ECN-Echo (ECE) and Congestion Window Reduced (CWR) bits.|$|R
40|$|To provide {{high-quality}} service {{under heavy}} user loads, the Internet depends on congestion avoidance mechanisms {{implemented in the}} transport-layer such as the transmission-control protocol (TCP). However, many TCP implementations don’t include—either deliberately or by accident— a congestion avoidance mechanism. Moreover, {{a growing number of}} user datagram protocol (UDP) -based applications running on the Internet don’t back off properly when they receive <b>congestion</b> <b>indications.</b> As a result, these applications aggressively use more bandwidth than other TCP-compatible flows. Therefore, it’s necessary to have router mechanism...|$|R
50|$|When {{a router}} wants to signal {{congestion}} to the sender, it adds {{a bit in}} the header of packets sent. When a packet arrives at the router, the router calculates the average queue length for the last (busy + idle) period plus the current busy period. (The router is busy when it is transmitting packets, and idle otherwise). When the average queue length exceeds 1, then the router sets the <b>congestion</b> <b>indication</b> bit in the packet header of arriving packets.|$|R
40|$|We {{observe that}} even when the system {{throughput}} is relatively stable, end users of media-streaming applications do not necessarily experience smooth throughput, due to the unsynchronized window adjustments triggered by random <b>congestion</b> <b>indications.</b> We analyze and evaluate {{the negative impact of}} random window adjustments on smoothness, short-term fairness, and long-term fairness. We further propose an experimental congestion avoidance mechanism, namely TCP (,,,), based on coordinated window adjustments. The flow-level smoothness is enhanced significantly for media-streaming applications, without a cost on fairness and responsiveness. Responsiveness is even boosted when bandwidth is underutilized...|$|R
50|$|Under Georgia Governor Sonny Perdue's Fast <b>Forward</b> <b>Congestion</b> Relief program, the HERO {{program was}} expanded. Before the 2005 expansion, the HERO program {{consisted}} of 48 operators; in May 2009 there were nearly 90 {{positions in the}} program, 2015 there were 110 operators. This expansion {{as well as several}} others since added new routes to the HERO coverage area.As of 2015, GDOT's fleet of 90 HERO trucks cover over 420 miles of roads.|$|R
40|$|Abstract—We {{observe that}} even when the system {{throughput}} is relatively stable, end users of media-streaming applications do not necessarily experience smooth throughput, due to the unsyn-chronized window adjustments triggered by random <b>congestion</b> <b>indications.</b> We analyze and evaluate {{the negative impact of}} random window adjustments on smoothness, short-term fairness, and long-term fairness. We further propose an experimental congestion avoidance mechanism, namely TCP (,,,), based on coordinated window adjustments. The flow-level smoothness is enhanced significantly for media-streaming applications, without a cost on fairness and responsiveness. Responsiveness is even boosted when bandwidth is underutilized. Index Terms—Congestion control, fairness, multimedia commu-nication, smoothness, transport protocols. I...|$|R
40|$|The {{growth of}} network {{intensive}} Internet applications has made gateway congestion control a high priority. The IETF Performance and Congestion Control Working Group surveyed and reviewed gateway congestion control and avoidance approaches {{in a series}} of meetings during 1988 and 1989. The {{purpose of this paper is}} to present our review of the congestion control approaches, as a way of encouraging new discussion and experimentation. Included in the survey are Source Quench, Random Drop, <b>Congestion</b> <b>Indication</b> (DEC Bit), and Fair Queueing. The task remains for Internet implementors to determine and agree on the most effective mechanisms for controlling gateway congestion...|$|R
