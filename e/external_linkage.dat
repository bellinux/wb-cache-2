32|202|Public
2500|$|... module extension: {{for support}} of <b>external</b> <b>linkage,</b> [...] two {{mechanisms}} were proposed, bottom-up definition modules, {{a more powerful}} version of the facilities from ALGOL 68-R and top-down holes, similar to the ENVIRON and USING clauses from ALGOL 68C ...|$|E
50|$|On more {{advanced}} magnetos the cam ring can be rotated by an <b>external</b> <b>linkage</b> {{to alter the}} ignition timing.|$|E
5000|$|... extern int overShared = 1; /* This one has <b>external</b> <b>linkage</b> (not * {{limited to}} this {{compilation}} unit). [...] */ ...|$|E
40|$|This paper {{examines}} {{the effects of}} different types of cross border <b>external</b> <b>linkages</b> on innovation. Using Taiwan as the empirical setting, we examine how the effects of <b>external</b> <b>linkages</b> on innovation vary {{depending on the type of}} linkages (joint Venture, licensing, acquisition, etc.) as well as the type of innovation (radical versus incremental). Our result is robust to both patents and R&D based measures of innovation. Two recent econometric approaches for causal inferences are applied in order to tackle possible endogeneity between <b>external</b> <b>linkages</b> and innovation. Our evidences suggest that <b>external</b> <b>linkages</b> have positive effect on innovation. The benefit of a linkage, however, depends on a firm’s ability to utilize the linkage to exploit a particular set of complementary assets. These results are robust to a variety of statistical techniques and measures...|$|R
5000|$|A {{networked}} NGO sector {{with strong}} internal and <b>external</b> <b>linkages</b> to other actors ...|$|R
3000|$|H 3 : SMEs {{with greater}} {{perceived}} customer benefit {{are more likely}} to experience improve <b>external</b> <b>linkages</b> benefit [...]...|$|R
5000|$|Function [...] is {{declared}} in two files, with its function body defined in demo2.c. Via linkage, [...] called in [...] inside demo1.c refers to [...] in demo2.c. This {{is an example}} of <b>external</b> <b>linkage</b> for a function.|$|E
5000|$|... module extension: {{for support}} of <b>external</b> <b>linkage,</b> two {{mechanisms}} were proposed, bottom-up definition modules, {{a more powerful}} version of the facilities from ALGOL 68-R and top-down holes, similar to the [...] and [...] clauses from ALGOL 68C ...|$|E
5000|$|The SMG-68 is a [...]68 caliber {{version of}} the SMG-60, {{configured}} for semi-automatic operation, and featuring a removable barrel. Tippmann offered a trade-in for SMG-68's to be converted into 68 Specials, by adding a front bolt and <b>external</b> <b>linkage</b> arm.|$|E
40|$|Innovativeness is an {{important}} competitive advantage for many companies in Finland. The purpose of this thesis {{is to find out}} how <b>external</b> <b>linkages</b> of multinational companies operating in Finland impact the perceived innovativeness in these companies. Previous research done on <b>external</b> <b>linkages</b> is still quite fragmented as the whole field is quite new in academic literature. This topic is contemporary in terms of most recent theories in international business and investigating the whole area of research has obvious managerial implications. Analysis is based on quantitative data gathered from the largest companies in Finland. The statistical methods used in this thesis are factor analyses and multiple linear regression modeling. The main finding of this thesis is that the business partner role seems to have some significance over the benefits of receiving resources from <b>external</b> <b>linkages</b> which is {{an important}} signal for further research. Otherwise, not enough evidence of making a conclusive decision whether <b>external</b> <b>linkages</b> of multinational companies contribute to innovativeness in these companies was found. The main limitation to this was the small sample size which limited the number of statistically significant variables in the analysis...|$|R
40|$|This paper {{shows that}} network linkage is an {{important}} determinant of location choice in foreign direct investment (FDI). Network linkages are divided into internal (intra-firm) and <b>external</b> (inter-firm) <b>linkages.</b> <b>External</b> <b>linkages</b> are further separated into strategic and relational linkages. We found that Taiwanese firms are keen on making <b>external</b> <b>linkages,</b> but are indifferent to, or incapable of, making internal linkages through FDI. Strategic linkages motivate Taiwanese FDI in the United States, while relational linkages facilitate Taiwanese FDI in Southeast Asia and China. Small firms are more sensitive to relational linkages than large firms in their choice of FDI location. © 1998 JIBS. Journal of International Business Studies (1998) 29, 445 – 467...|$|R
40|$|As {{business}} environments {{become even}} more competitive, project teams are required {{to make an effort}} to operate <b>external</b> <b>linkages</b> from within an organization or across organizational boundaries. Nevertheless, some members boundary-span less extensively, isolating themselves and their project teams from external environments. Our study examines why some members boundary-span more or less through the framework of group attachment theory. Data from 521 project-team members in construction and engineering industries revealed that the more individuals worry about their project team’s acceptance (group attachment anxiety), {{the more likely they are}} to perceive intergroup competition, and thus put more efforts into operating <b>external</b> <b>linkages</b> and resources to help their own teams outperform competitors. In contrast, a tendency to distrust their project teams (group attachment avoidance) generates members’ negative construal of their team’s external image, and thus fewer efforts are made at operating <b>external</b> <b>linkages.</b> Thus, project leaders and members with high group-attachment-anxiety may be best qualified for external tasks...|$|R
50|$|In C, {{scope is}} {{traditionally}} known as linkage or visibility, particularly for variables. C is a lexically scoped language with global scope (known as <b>external</b> <b>linkage),</b> {{a form of}} module scope or file scope (known as internal linkage), and local scope (within a function); within a function scopes can further be nested via block scope. However, standard C does not support nested functions.|$|E
5000|$|The C {{language}} {{does not}} have a [...] keyword. However, variables declared outside a function have [...] "file scope," [...] meaning they are visible within the file. Variables declared with file scope are visible between their declaration {{and the end of the}} compilation unit ( [...] file) (unless shadowed by a like-named object in a nearer scope, such as a local variable); and they implicitly have <b>external</b> <b>linkage</b> and are thus visible to not only the [...] file or compilation unit containing their declarations but also to every other compilation unit that is linked to form the complete program. Note that not specifying [...] is the same as specifying : the default is <b>external</b> <b>linkage.</b> <b>External</b> <b>linkage,</b> however, is not sufficient for such a variable's use in other files: for a compilation unit to correctly access such a global variable, it will need to know its type. This is accomplished by declaring the variable in each file using the [...] keyword. (It will be declared in each file but may be defined in only one.) Such [...] declarations are often placed in a shared header file, since it is common practice for all [...]c files in a project to include at least one [...] file: the standard header file [...] is an example, making the [...] variable accessible to all modules in a project. Where this global access mechanism is judged problematic, it can be disabled using the [...] keyword which restricts a variable to file scope, and will cause attempts to import it with [...] to raise a compilation (or linking) error.|$|E
5000|$|Static {{libraries}} can {{be easily}} created in C or in C++. These two languages provide storage-class specifiers for indicating external or internal linkage, {{in addition to providing}} other features. To create such a library, the exported functions/procedures and other objects variables must be specified for <b>external</b> <b>linkage</b> (i.e. by not using the C [...] keyword). Static library filenames usually have a [...] ".a" [...] extension on Unix-like systems and [...] ".lib" [...] on Microsoft Windows.|$|E
40|$|This {{dissertation}} is a {{study of}} strategy in thin industries, a class of industries whose members include the aircraft industry, jet engines, heavy electrical equipment, and diesel locomotives. These industries {{have a number of}} common features which inter-relate to produce a unique configuration. Foremost among the attributes that make up this configuration is the sparsity and magnitude of transactions on which the industry must subsist. The {{decrease in the number of}} transactions, and the increase in their size, results in a "thin" industry. The sparsity and size of transactions combine to produce complex, unstable, and highly interconnected environments. These environmental conditions motivate firms to develop <b>external</b> <b>linkages</b> with other organizations. The successful management of <b>external</b> <b>linkages</b> will frequently depend on knowledge and experience obtained in previous relationships. Many of the problems created by <b>external</b> <b>linkages</b> can only be resolved once they are formed. At the same time, the knowledge required to resolve these problems calls for previous experience. The dissertation is divided into two parts. In the first three chapters we explore thin industries as a type and as an environment. In the remaining three chapters we look at the ramifications of interorganizational learning on the management of <b>external</b> <b>linkages.</b> In the concluding chapter we discuss the implications of thin industries to the study and practice of strategic management. Three issues in particular are singled out: the decline of organizational autonomy, the limits of competition, and new directions for theory building. (Abstract shortened by UMI. ...|$|R
40|$|In recent years, East Asian economies {{have been}} rapidly developing. The {{reason is that}} firms have been {{successfully}} achieving product and process innovation by introducing advanced technologies and know-how from MNCs. In order to enhance innovation, firms have to own technology, capability and ICT use. In particular, collaborations with outside organizations such as MNCs (Multi-national corporations), universities, public organizations, local firms are indispensable for firms in developing economies. Authors 2 ̆ 019 previous research clarified <b>external</b> <b>linkages</b> enhance innovation capability and ICT use, and innovation capability and ICT use promote product innovation in ASEAN firms. These studies analyzed under what conditions firms can promote absorptive capability if they had <b>external</b> <b>linkages.</b> Whether or how absorptive capacity affected innovation capability and ICT use were not explained there. Based on survey data from four ASEAN economies such as Indonesia, the Philippines, Thailand, and Vietnam, from 2013 to 2014, this study clarifies how absorptive capacity, ICTs, and innovation capability such as QC and cross-functional team enhance product innovation by using SEM (Structural equation modeling). As a result, the following causality from <b>external</b> <b>linkages</b> (origin) to innovation (final outcome) is demonstrated: (i) absorptive capacity is enhanced by <b>external</b> <b>linkages</b> such as local firms, public organizations, and universities; (ii) absorptive capacity enhances innovation capability; (iii) innovation capability enhances ICT use; and (iv) innovation capability and ICT use promote product innovation. These {{are similar to those}} of authors 2 ̆ 019 previous research. Since data are different, it is difficult to compare the results, but the robustness of the results is demonstrated...|$|R
40|$|This paper {{examines}} {{the impact of}} innovation {{on the performance of}} US business service firms. We distinguish between different levels of innovation (new-to-market and new-to-firm) in our analysis, and allow explicitly for sample selection issues. Reflecting the literature, which highlights the importance of external interaction in service innovation, we pay particular attention to the role of <b>external</b> innovation <b>linkages</b> and their effect on business performance. We find that the presence of service innovation and its extent has a consistently positive effect on growth, but no effect on productivity. There is evidence that the growth effect of innovation can be attributed, at least in part, to the <b>external</b> <b>linkages</b> maintained by innovators in the process of innovation. <b>External</b> <b>linkages</b> have an overwhelmingly positive effect on (innovator) firm performance, regardless of whether innovation is measured as a discrete or continuous variable, and regardless of the level of innovation considered. ...|$|R
50|$|The {{third phase}} was {{to face the}} lower level {{external}} threats with a strategy of strategic denial under total people's defence concept. Current military leadership has successfully dealt with 17 major insurgent groups, whose 'return to legal fold' {{in the past decade}} has remarkably decreased the internal threats to state security, at least for the short and medium terms, even though threat perception of the possibility of <b>external</b> <b>linkage</b> to internal problems, perceived as being motivated by the continuing human rights violations, religious suppression and ethnic cleansing, remains high.|$|E
50|$|Translation units {{define a}} scope, roughly file scope, and {{functioning}} similarly to module scope; in C terminology this {{is referred to}} as internal linkage, {{which is one of the}} two forms of linkage in C. Names (functions and variables) declared outside of a function block may be visible either only within a given translation unit, in which case they are said to have internal linkage - they are not visible to the linker - or may be visible to other object files, in which case they are said to have <b>external</b> <b>linkage,</b> and are visible to the linker.|$|E
50|$|The {{lifetime}} and visibility of a variable {{are determined by}} its storage class. There are three types of lifetimes in C: static (program execution), automatic (block execution, allocated on the stack), and manual (allocated on the heap). Only static and automatic are supported for variables and handled by the compiler, while manually allocated memory must be tracked manually across different variables. There are three levels of visibility in C: <b>external</b> <b>linkage</b> (global), internal linkage (roughly file), and block scope (which includes functions); block scopes can be nested, and different levels of internal linkage is possible by use of includes. Internal linkage in C is visibility at the translation unit level, namely a source file after being processed by the C preprocessor, notably including all relevant includes.|$|E
40|$|The paper {{analyses}} {{small and}} medium firms' perceptions on contract enforcement along food chain in central region of Hungary using survey data. We find that 59 per cent of respondents {{believe that they}} could use court to enforce contracts with their partner. However we do not find significant differences along food chain. Our estimations suggest that contractual specificity and firm attributes, <b>external</b> <b>linkages,</b> efficiency of legal systems factors, buyer and seller specifc factors significantly influence the opinion on contract enforcement. Interestingly, the impact of branch specific characteristics has, no impacts. Acceptance of financial loss {{can be explained by}} contractual specificity, <b>external</b> <b>linkages,</b> efficiency of legal systems. Buyer, seller and industry characteristics has not played role in the explanation of financial losses...|$|R
40|$|This thesis {{examines}} the innovative performance of 206 U. S. business service firms. Undeniably, a need exists for better {{comprehension of the}} service sector of developed economies. This research takes a unique view by applying a synthesis approach to studying innovation and attempts to build under a proposed strategic innovation paradigm. A quantitative method is utilised via questionnaire in which all major types of innovation are under examination including: product and service, organisational, and technology-driven innovations. Essential ideas for this conceptual framework encapsulate a new mode of understanding service innovation. Basically, the structure of this analysis encompasses the likelihood of innovation and determining the extent of innovation, while also attempting {{to shed light on}} the factors which determine the impact of innovation on performance among service firms. What differentiates this research is its focus on customer-driven service firms in addition to other <b>external</b> <b>linkages.</b> A synopsis of the findings suggest that <b>external</b> <b>linkages,</b> particularly with customers, suppliers and strategic alliances or joint ventures, significantly affect innovation performance with regard to the introduction of new services. Service firms which incorporate formal and informal R&D experience significant increases in the extent of new-to-market and new-to-firm innovations. Additionally, the results show that customer-driven service firms experience greater productivity and growth. Furthermore, the findings suggest that <b>external</b> <b>linkages</b> assist service firm performance. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|As India {{continues}} to pursue calibrated globalisation and expand <b>external</b> <b>linkages,</b> {{this is an}} opportune time to develop robust economic partnership with Taiwan, an economy with a GDP of over US$ 300 billion and a per capita income of US $ 14, 000. Taiwan, economic partnership, East Asia, International Economic Relationships, Economics...|$|R
50|$|If {{the name}} has <b>external</b> <b>linkage,</b> the entity that name denotes may be {{referred}} to from another translation unit using a distinct declaration for that same name, and from other scopes within the same translation unit using distinct declarations. Were the name given internal linkage, such a declaration would denote a distinct entity, although using the same name, but its entity could {{be referred to}} by distinct declarations within the same translation unit. A name that has no linkage at all cannot be referred to from declarations in different scopes, not even from within the same translation unit. Examples of such names are parameters of functions and local variables. The details differ between C (where only objects and functions - but not types - have linkage) and C++ and between this simplified overview.|$|E
50|$|This {{second phase}} of the {{doctrine}} was to suppress insurgency with people's war and the perception of threats to state security was more of internal threats. During this phase, <b>external</b> <b>linkage</b> of internal problems and direct external threats were minimised by the foreign policy based on isolation. It was common view of the commanders that unless insurgency was suppressed, foreign interference would be highly probable, therefore counterinsurgency became the core of the new military doctrine and strategy. Beginning in 1961, the Directorate of Military Training took charge the research for national defence planning, military doctrine and strategy for both internal and external threats. This included reviews of international and domestic political situations, studies of the potential sources of conflicts, collection of information for strategic planning and defining the possible routes of foreign invasion.|$|E
5000|$|C distinguishes {{two kinds}} of {{definitions}} of [...] functions: ordinary external definitions (where extern is explicitly used) and inline definitions. C++, on the other hand, provides only inline definitions for inline functions. An inline definition is similar to an internal one, in that it can coexist in the same program with one external definition {{and any number of}} internal and inline definitions of the same function in other translation units, all of which can differ. This is a separate consideration from the linkage of the function, but not an independent one. C compilers are afforded the discretion to choose between using inline and external definitions of the same function when both are visible. C++, however, requires that if a function with <b>external</b> <b>linkage</b> is declared inline in any translation unit then it must be so declared (and therefore also defined) in every translation unit where it is used, and that all the definitions of that function be identical.|$|E
50|$|The {{institution}} conducts {{research in}} which it generates new technologies packaged or demonstrated designed to help farmers improve farming techniques. Extension programs are conducted through local and <b>external</b> <b>linkages.</b> Its MOSCAT-Farmers’ Information and Technology Services Center in collaboration with PCARRD and NOMCARRD has been open to serve clients needing information and technology services.|$|R
40|$|We {{explore how}} {{openness}} {{in terms of}} <b>external</b> <b>linkages</b> generates learning effects, which enable firms to generate more innovation outputs from any given breadth of <b>external</b> <b>linkages.</b> Openness to <b>external</b> knowledge sources, whether through search activity or <b>linkages</b> to <b>external</b> partners in new product development, involves a process of interaction and information processing. Such activities {{are likely to be}} subject to a learning process, as firms learn which knowledge sources and collaborative linkages are most useful to their particular needs, and which partnerships are most effective in delivering innovation performance. Using panel data from Irish manufacturing plants, we find evidence of such learning effects: establishments with substantial experience of external collaborations in previous periods derive more innovation output from openness in the current period. © 2013 The Authors. Strategic Management Journal published by John Wiley & Sons Ltd...|$|R
40|$|In {{this paper}} we develop an {{approach}} that may be helpful in analysing {{a variety of issues}} related to the evolution of corporate activity. We analyse the firm as an integrated system concerned with the management and organisation of internal and <b>external</b> <b>linkages</b> between businesses, with the emergence of co-operative behaviour as an endogenous feature of growing systems...|$|R
5000|$|The 68 Special was {{an inline}} poppet valve design. It was a {{retrofit}} of the SMG-60/68, designed to fire from a hopper instead of clips. The rear {{half of the}} body is identical to the SMG (early conversions even retained the [...] "SMG 68" [...] sticker), while the front half was cut off and replaced with a hopper fed breach. A bolt and <b>external</b> <b>linkage</b> arm was also added. One interesting feature about this gun is that the hammer can be moved out of position into a safety position preventing the gun from being able to fire, like the PMI-3/VM-68 and firearms such as the Sten and MP40. It had a built in back bottle setup that ran on liquid [...] and was very inefficient, due to the small valve and heavy hammer (nearly 1 pound). It {{was one of the first}} semi-auto markers on the market, and cycled at 6 balls per second - very fast considering the loader technology at the time.|$|E
5000|$|In the C and C++ {{programming}} languages, {{an inline}} function is one qualified with the keyword this serves two purposes. Firstly, {{it serves as}} a compiler directive that suggests (but does not require) that the compiler substitute the body of the function inline by performing inline expansion, i.e. by inserting the function code at the address of each function call, thereby saving the overhead of a function call. In this respect it is analogous to the [...] storage class specifier, which similarly provides an optimization hint.The second purpose of [...] is to change linkage behavior; the details of this are complicated. This is necessary due to the C/C++ separate compilation + linkage model, specifically because the definition (body) of the function must be duplicated in all translation units where it is used, to allow inlining during compiling, which, if the function has <b>external</b> <b>linkage,</b> causes a collision during linking (it violates uniqueness of external symbols). C and C++ (and dialects such as GNU C and Visual C++) resolve this in different ways.|$|E
40|$|ABSTRACT (of submission) In this paper, {{we discuss}} the {{proposed}} RDF schema and <b>external</b> <b>linkage</b> of the German Environmental Specimen Bank (ESB). The schema is based on SCOVO and SKOS with some powerful extensions. The submission raises several strategic SCOVO design issues that are currently subject of discussion in the Linked Data community. At the time of submission, the ESB has been published with less SCOVO extensions (like in example 3) in a test version. Categories and Subject Descriptor...|$|E
40|$|Should {{developers}} {{of a new}} product that requires collaboration focus on internal integration of departments using cross-functional teams or on <b>external</b> <b>linkages</b> with suppliers and customers? While both types of integration can help, our recent international study of new product development (NPD) practices suggest that internal integration will affect time and product performance differently than external integration...|$|R
40|$|This paper {{focuses on}} the {{existence}} of <b>external</b> knowledge <b>linkages</b> in SMEs by stressing their differences with those used in large enterprises. Four <b>external</b> knowledge <b>linkages</b> were considered (search strategies, external R&D, research collaboration, and protection mechanisms) and their impact on innovative performance in terms of generating innovative revenue is empirically examined. Findings show that differences between SMEs and large enterprises exist. status: publishe...|$|R
40|$|This {{empirical}} investigation {{reports on}} the role of drivers of dynamic learning mechanisms (DLMs) in exploiting dynamic capabilities (DCs) of market and hierarchy governance structures. Using a sample of 367 Taiwanese market and 210 South Korean hierarchy organizations, this study differentiates the role of drivers of DLMs in these organizations to provide more robust insights into DCs exploitation in polar governance structures. This study posits that learning intent and embedded learning are important primary antecedent drivers of DCs exploitation. The findings reveal that manager integration power, <b>external</b> <b>linkages,</b> codification of experience, and ambiguity are key drivers of DCs exploitation in market governance structures. <b>External</b> <b>linkages,</b> repeated practice, codification of experience, and ambiguity are key drivers of DCs exploitation in hierarchy governance structures. These results show that DCs exist in specialized learning routines and that DCs exploitation is based on organizational DLMs. This study highlights an influential innovation routine view of DCs exploitation and proposes a clear theoretical model of DCs exploitation via the exploitation of various drivers of DLMs. Dynamic capabilities Market Hierarchy Learning Routine...|$|R
