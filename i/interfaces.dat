10000|10000|Public
5|$|Endpoints {{are grouped}} into <b>{{interface}}s</b> and each interface {{is associated with}} a single device function. An exception to this is endpoint zero, which is used for device configuration and is not associated with any interface. A single device function composed of independently controlled <b>interfaces</b> is called a composite device. A composite device only has a single device address because the host only assigns a device address to a function.|$|E
5|$|FreeBSD has {{implemented}} {{a number of}} Microsoft Windows native NDIS kernel <b>interfaces</b> to allow FreeBSD to run Windows-only network drivers.|$|E
5|$|New {{standard}} descriptor {{was added}} that allows associating multiple <b>interfaces</b> {{with a single}} device function.|$|E
40|$|ABSTRACT: This paper {{details the}} design and {{implementation}} of SoC’s UART-SPI <b>interface.</b> The UART-SPI <b>interface</b> provides usage for the universal asynchronous receiver/transmitter (UART) to serial peripheral <b>interface</b> (SPI). This <b>interface</b> {{can be used to}} communicate to SPI slave devices from a PC with UART port. The <b>interface</b> consists of three blocks: the UART <b>interface,</b> the UART-SPI <b>interfacing</b> block and the SPI Master <b>interface</b> and slave is <b>interface</b> with master...|$|R
40|$|Nowadays, {{information}} system creation process consists of several different actions, {{one of those}} actions – web <b>interface</b> design. Web <b>interface</b> design process requires a good methodology, to make web <b>interface</b> process better, quicker, flexible and satisfy other web <b>interface</b> design criterions. RUP (Rational Unified Process) don’t present any special creation process of internet web <b>interface.</b> Frequently web <b>interface</b> design process lies in the head of it’s designers. There are no full methodology of web <b>interface</b> design process in one place, only some web <b>interface</b> advices or articles about one or other web <b>interface</b> process steps could be found. The goal of this work {{is to make a}} methodology of web <b>interface</b> design and implement it for internet service provider system. Methodology also would be useful for companies which participate in web <b>interface</b> design process, also in school or university study process, or like a guide for any web <b>interface</b> designer. The developed methodology for web <b>interface</b> design was used for implementing internet service provider system web <b>interface,</b> system design process and redesign above-mentioned system web <b>interface</b> for measuring process times. Methodology of web <b>interface</b> design, reduce web <b>interface</b> design process time, help to make web <b>interface</b> design process easier, more flexible and understandable for web <b>interface</b> designer, also certain better web <b>interface</b> appearance independence from system functional part, with possibility to change web <b>interface</b> appearance without changing rest of system parts...|$|R
50|$|<b>Interface</b> bytes come {{in three}} kinds: global <b>interface</b> bytes {{apply to all}} protocols; {{specific}} <b>interface</b> bytes apply to a specific protocol; and structural <b>interface</b> bytes introduce further <b>interface</b> bytes, and protocols.|$|R
5|$|PHP 5 {{introduced}} {{private and}} protected member variables and methods, along with abstract classes, final classes, abstract methods, and final methods. It also introduced a standard way of declaring constructors and destructors, {{similar to that}} of other object-oriented languages such as C++, and a standard exception handling model. Furthermore, PHP 5 added <b>interfaces</b> and allowed for multiple <b>interfaces</b> to be implemented. There are special <b>interfaces</b> that allow objects to interact with the runtime system. Objects implementing ArrayAccess can be used with array syntax and objects implementing Iterator or IteratorAggregate can be used with the foreach language construct. There is no virtual table feature in the engine, so static variables are bound with a name instead of a reference at compile time.|$|E
5|$|The Standard PHP Library (SPL) {{attempts}} to solve standard problems and implements efficient data access <b>interfaces</b> and classes.|$|E
5|$|Unlike C++, C# {{does not}} support {{multiple}} inheritance, although a class can implement any number of <b>interfaces.</b> This was a design decision by the language's lead architect to avoid complication and simplify architectural requirements throughout CLI. When implementing multiple <b>interfaces</b> that contain a method with the same signature, C# allows implementing each method depending on which interface that method is being called through, or, like Java, allows implementing the method once, and have that be the one invocation on a call through any of the class's <b>interfaces.</b>|$|E
5000|$|Support Universal Host Controller <b>Interface</b> (UHCI), Open Host Controller <b>Interface</b> (OHCI), Enhanced Host Controller <b>Interface</b> (EHCI), and Extensible Host Controller <b>Interface</b> (xHCI) ...|$|R
50|$|YMF711 (OPL3-SA2): Based on OPL3-SA, it adds Plug and Play ISA compatibility, 10-pin <b>interface</b> {{supports}} 16-bit port address decode (top 4 bits), EEPROM <b>interface,</b> Zoomed video port, CPU and DAC <b>interface</b> for OPL4-ML, modem <b>interface,</b> or IDE CD-ROM <b>interface.</b>|$|R
40|$|Methods for {{measuring}} and predicting <b>interface</b> bond stresses and <b>interface</b> bond strength are described. Geometric and material variables which influence <b>interface</b> stress and <b>interface</b> bond strength are identified. The dependence of composite fracture surface characteristics on bond strength is illustrated. Parameters for selecting constituents to yield specified <b>interface</b> bond strength are recommended. Includes bibliographical references (p. 21 - 25). Methods {{for measuring}} and predicting <b>interface</b> bond stresses and <b>interface</b> bond strength are described. Geometric and material variables which influence <b>interface</b> stress and <b>interface</b> bond strength are identified. The dependence of composite fracture surface characteristics on bond strength is illustrated. Parameters for selecting constituents to yield specified <b>interface</b> bond strength are recommended. Mode of access: Internet...|$|R
5|$|CCSR at the University of Surrey is the UK's {{largest and}} most {{well-known}} academic research centre in Mobile and Satellite Communication Systems and historically it has a unique research approach on both satellite as well as terrestrial mobile communication systems. The research activities within the group encompass all levels of communication systems, from antennas & propagation, air <b>interfaces,</b> PHY, MAC, networking layer up to the service support platforms and distributed applications and user <b>interfaces.</b> It is a major participant in European Union Information Science and Technology (IST) projects.|$|E
5|$|Graphical user <b>interfaces</b> (GUIs) may be {{developed}} using Perl. For example, Perl/Tk and WxPerl {{are commonly used}} to enable user interaction with Perl scripts. Such interaction may be synchronous or asynchronous, using callbacks to update the GUI.|$|E
5|$|The tablebases of all endgames {{with up to}} six {{pieces are}} {{available}} for free download, and may also be queried using web <b>interfaces</b> (see the external links below). Nalimov tablebase requires more than one terabyte of storage space.|$|E
50|$|In {{computer}} {{networking and}} computer architecture, a northbound <b>interface</b> of a component is an <b>interface</b> that conceptualizes {{the lower level}} details (e.g., data or functions) used by, or in, the component. A northbound <b>interface</b> is used to <b>interface</b> with higher level layers using the southbound <b>interface</b> of the higher level component(s). In architectural overviews, the northbound <b>interface</b> is normally drawn {{at the top of}} the component it is defined in, hence the name northbound <b>interface.</b>|$|R
5000|$|PCI <b>interface,</b> USB <b>interface,</b> Ultra ATA 66, AC'98 audio controller, IEEE 1394 <b>interface</b> ...|$|R
40|$|Abstract. There exist a few works {{concerning}} the soft imperfect <b>interface</b> {{characterized by the}} discontinuity of displacements. Actually, there is another type of imperfect <b>interface,</b> namely the stiff imperfect <b>interface.</b> In this work, the model of stiff imperfect <b>interface</b> is proposed. Then the interaction of a screw dislocation with stiff imperfect <b>interface</b> is studied. The force acting on a screw dislocation due {{to the presence of}} the stiff imperfect <b>interface</b> is formulated. The results show that the interacting force varies between that for a rigid contact <b>interface</b> and that for an ideal contact <b>interface...</b>|$|R
25|$|<b>Interfaces</b> {{and classes}} {{are allowed to}} extend {{multiple}} <b>interfaces.</b>|$|E
25|$|What {{follows is}} a list of <b>interfaces,</b> grouped by the object that usually needs to {{implement}} them. <b>Interfaces</b> usually implemented by the OLE object are usually called on by the OLE container, and vice versa. Note that in the following list indentation indicates interface inheritance. All non-indented <b>interfaces</b> derive from IUnknown.|$|E
25|$|OLE {{objects and}} {{containers}} are implemented {{on top of}} the Component Object Model; they are objects that can implement <b>interfaces</b> to export their functionality. Only the IOleObject interface is compulsory, but other <b>interfaces</b> may also need to be implemented if the functionality exported by those <b>interfaces</b> is required.|$|E
40|$|A unified {{understanding}} on Fully Depleted SOI (FDSOI) N-Channel MOSFET {{hot carrier}} degradation is presented using a novel methodology and devices fabricated on SIMOX substrate. We measured traditionally reported front gate threshold voltage shift and de-coupled {{front and back}} gate threshold voltage shifts by accumulating the opposite <b>interface.</b> Interpretation of the experimental results are provided on floating body, bipolar breakdown and series parasitic source/drain resistance (R ds) debiasing effects on hot carrier degradation. At low drain bias, device degradation {{is dominated by the}} coupling of back <b>interface</b> degradation to the front <b>interface.</b> Back <b>interface</b> is degraded by the hole trapping and <b>interface</b> states generation simultaneously. Front <b>interface</b> is degraded by the <b>interface</b> states generation. At moderate drain bias, floating body induced shift in threshold voltage is dominant despite moderate front <b>interface</b> states generation. At high V ds, <b>interface</b> states generation at the back <b>interface</b> and the competing hole trapping and <b>interface</b> states generation at the front <b>interface</b> are observed...|$|R
40|$|Nowadays, {{grouting}} {{pressure is}} considered {{as an important}} issue as it provides better <b>interface</b> strength than gravity grouting in case of cast in situ soil-cement grout <b>interface,</b> like soil-nail and soil-pile <b>interface.</b> In the present study, a series of <b>interface</b> direct shear tests is performed on highly pressure grouted soil-cement <b>interface</b> under different matric suctions and net stresses. The experimental results indicate that grouting pressure, matric suction and overburden stress have interactional significant influence on the <b>interface</b> behaviour of soil-cement <b>interface.</b> The shear strength increases with net stress at both saturated and unsaturated conditions for pressure grouted soil-cement <b>interface.</b> Similar to soil, the <b>interface</b> shear strength envelopes for a given suction are approximately linear. The apparent <b>interface</b> friction angle and adhesion intercept increase with matric suction. As compared with gravity grouted <b>interface,</b> the apparent <b>interface</b> friction angle decreases for higher pressure grouting at different matric suctions. Also, the strength of highly pressure grouted <b>interface</b> is greater at lower suction range, but lower at higher suction range. Department of Civil and Environmental Engineerin...|$|R
5000|$|... where PA(i + 1|i) is the {{probability}} for trajectories, coming from state A and crossing <b>interface</b> i, to reach <b>interface</b> i + 1. Here <b>interface</b> 0 defines state A and <b>interface</b> n defines state B. The factor Φ1,0 is the flux through the <b>interface</b> closest to A. By making this <b>interface</b> close enough, the quantity can be computed {{with a standard}} simulation, as the crossing event through this <b>interface</b> is not a rare event any more.|$|R
25|$|Many {{oscilloscopes}} today {{provide one}} or more external <b>interfaces</b> to allow remote instrument control by external software. These <b>interfaces</b> (or buses) include GPIB, Ethernet, serial port, and USB.|$|E
25|$|The {{ability to}} track a person's {{movements}} and determine what gestures {{they may be}} performing can be achieved through various tools. The kinetic user <b>interfaces</b> (KUIs) are an emerging type of user <b>interfaces</b> that allow users to interact with computing devices through the motion of objects and bodies. Examples of KUIs include tangible user <b>interfaces</b> and motion-aware games such as Wii and Microsoft's Kinect,and other interactive projects.|$|E
25|$|Human-machine <b>interfaces</b> (HMI) or {{computer}} human <b>interfaces</b> (CHI), {{formerly known as}} man-machine <b>interfaces,</b> are usually employed to communicate with PLCs and other computers. Service personnel who monitor and control through HMIs can be called by different names. In industrial process and manufacturing environments, they are called operators or something similar. In boiler houses and central utilities departments they are called stationary engineers.|$|E
50|$|General Purpose Serial <b>Interface,</b> {{also known}} as GPSI, 7-wire <b>interface,</b> or 7WS, is a 7 wire {{communications}} <b>interface.</b> It is used as an <b>interface</b> between Ethernet MAC and PHY blocks.|$|R
50|$|A {{number of}} robot <b>interface</b> server / {{simulators}} support the iRobot Create. Most notably, the Player Project has long included a device <b>interface</b> for the Roomba, {{and developed a}} Create <b>interface</b> in Player 2.1. The Universal Real-time Behavior <b>Interface</b> (URBI) environment also contains a Create <b>interface.</b>|$|R
5000|$|SDI (single {{document}} <b>interface)</b> or tabbed MDI (multiple document <b>interface)</b> modes, PMDI (pseudo multi-window <b>interface)</b> ...|$|R
25|$|<b>Interfaces</b> are data {{structures}} that contain member definitions with no actual implementation. A variable of an interface type is {{a reference to}} an instance of a class which implements this interface. See <b>Interfaces.</b>|$|E
25|$|There {{have also}} been {{experiments}} in humans using non-invasive neuroimaging technologies as <b>interfaces.</b> The substantial majority of published BCI work involves noninvasive EEG-based BCIs. Noninvasive EEG-based technologies and <b>interfaces</b> {{have been used for}} a much broader variety of applications. Although EEG-based <b>interfaces</b> are easy to wear and do not require surgery, they have relatively poor spatial resolution and cannot effectively use higher-frequency signals because the skull dampens signals, dispersing and blurring the electromagnetic waves created by the neurons. EEG-based <b>interfaces</b> also require some time and effort prior to each usage session, whereas non-EEG-based ones, as well as invasive ones require no prior-usage training. Overall, the best BCI for each user depends on numerous factors.|$|E
25|$|Graphical user <b>interfaces</b> {{exist for}} sudo, notably kdesudo, and gksudo. Other user <b>interfaces</b> are not {{directly}} built on sudo, but provide similar temporary privilege elevation for administrative purposes, such as User Account Control in Microsoft Windows and Mac OS X Authorization Services.|$|E
40|$|This {{paper is}} a demo {{proposal}} for a new musical <b>interface</b> based on a DNA-like double-helix and concepts in character generation. It contains {{a description of the}} <b>interface,</b> motivations behind developing such an <b>interface,</b> various mappings of the <b>interface</b> to musical applications, and the requirements to demo the <b>interface...</b>|$|R
50|$|<b>Interface</b> Builder {{provides}} palettes, or collections, of user <b>interface</b> {{objects to}} an Objective-C developer. These user <b>interface</b> objects contain items like text fields, data tables, sliders, and pop-up menus. <b>Interface</b> Builder's palettes are completely extensible, meaning any developer can develop new objects and add palettes to <b>Interface</b> Builder.|$|R
50|$|The <b>interface</b> {{between the}} Application Entity and the Data Link Layer is called A-interface. The <b>interface</b> between the Data Link Layer and the {{physical}} layer is called Medium Independent <b>Interface</b> (MII). The <b>interface</b> between the physical layer and the actual transmission medium is called Medium Dependent <b>Interface</b> (MDI).|$|R
