33|2|Public
5000|$|... #Caption: Insecure {{encryption}} of {{an image}} {{as a result of}} <b>electronic</b> <b>codebook</b> mode encoding.|$|E
50|$|The {{simplest}} of the encryption modes is the <b>Electronic</b> <b>Codebook</b> (ECB) mode (named after conventional physical Codebooks). The message {{is divided into}} blocks, and each block is encrypted separately.|$|E
50|$|A BSI {{specification}} document about Pluto gives these numbers: 64 bit block size, 160 bit key size. Supported modes: <b>Electronic</b> <b>Codebook</b> (ECB), Cipher Block Chaining (CBC), Cipher Feedback (CFB)/Output Feedback (OFB) with 1,8,16,32 or 64 bits.|$|E
40|$|Proposed scheme under {{development}} for transmission of vector-quantized digital video images, vector quantizer codebook updated to adapt quantizer to changing signal statistics. Intended {{to be realized}} with <b>electronic</b> neural network. <b>Codebook,</b> which consists of patterns constituting video images, will undergo training during operation and scheme will develop codebooks ordered during training. System enables coding more compact, more immune to noise, and supports variable rate compression...|$|R
40|$|This session {{will provide}} the tools needed to guide {{improvements}} in clinical practice via outcomes research. Through the analysis of routinely collected clinical data, the attendee will be guided {{through the process of}} data extraction from <b>electronic</b> medical records, <b>codebook</b> development, database development and management, and statistical analyses. This session will provide examples of how to do a retrospective analysis of outcomes clinical data for specific upper extremity conditions (i. e. Lateral Epicondylitis, de Quervain 2 ̆ 7 s tendonitis), although the process learned can be applied to any disorder of the hand. The goal is to use existing data to improve clinical outcomes...|$|R
50|$|<b>Electronic</b> <b>codebook</b> and cipher-block {{chaining}} (CBC) mode {{are examples}} of block cipher mode of operation. Block cipher modes for symmetric-key encryption algorithms require plain text input that is a multiple of the block size, so messages {{may have to be}} padded to bring them to this length.|$|E
50|$|The {{problem is}} {{analogous}} to that of using block ciphers in the <b>electronic</b> <b>codebook</b> (ECB) mode, but instead of whole blocks, only the first block in different sectors are identical. The problem can be relatively easily eliminated by making the IVs unpredictable with, for example, ESSIV.|$|E
50|$|In the counter-electronic {{codebook}} mode, the Cascaded Cipher uses {{full strength}} AES-128 in counter mode {{to generate a}} secure key stream and supplies this key-stream to a reduced round Serpent in <b>electronic</b> <b>codebook</b> mode to encrypt each plaintext block. To increase performance, each inner key stream block is reused several times to encrypt multiple blocks.|$|E
50|$|In {{principle}} any block-oriented {{block cipher}} {{mode of operation}} can be used, but stream-cipher-like modes can already be applied to messages of arbitrary length without padding, so they do not benefit from this technique. The common modes of operation that are coupled with ciphertext stealing are <b>Electronic</b> <b>Codebook</b> (ECB) and Cipher Block Chaining (CBC).|$|E
50|$|A modern {{block cipher}} can be {{run in a}} mode {{similar to that of}} Playfair, where the same block (in Playfair, a pair of letters) always encrypts to the same bit of ciphertext: in our example, CO will always come out as OW. Indeed, many poorly written {{encryption}} programs use just this technique, called <b>Electronic</b> <b>Codebook,</b> or ECB.|$|E
50|$|Properties of an IV {{depend on}} the {{cryptographic}} scheme used. A basic requirement is uniqueness, which means that no IV may be reused under the same key. For block ciphers, repeated IV values devolve the encryption scheme into <b>electronic</b> <b>codebook</b> mode: equal IV and equal plaintext result in equal ciphertext. In stream cipher encryption uniqueness is crucially important as plaintext may be trivially recovered otherwise.|$|E
50|$|Chiasmus is {{a secret}} German {{government}} block cipher that was leaked by reverse engineering. It became notorious for its dilettant use in the BSI's software GSTOOL, which used it in insecure <b>Electronic</b> <b>Codebook</b> (ECB) mode and generated the key with a pseudo random number generator initialized to the current system time, which means an effective key length that can easily be broken by brute force. The BSI tried to prevent the publication of these findings with legal threats.|$|E
5000|$|While the BATON {{algorithm}} {{itself is}} secret (as {{is the case}} with all algorithms in the NSA's Suite A), the public PKCS#11 standard includes some general information about how it is used. It has a 320-bit key and uses a 128-bit block in most modes, and also supports a 96-bit <b>electronic</b> <b>codebook</b> mode. 160 bits of the key are checksum material. It supports a [...] "shuffle" [...] mode of operation, like the NSA cipher JUNIPER. It may use up to 192 bits as an initialization vector, regardless of the block size.|$|E
50|$|A {{block cipher}} by itself allows {{encryption}} only {{of a single}} data block of the cipher's block length. For a variable-length message, the data must first be partitioned into separate cipher blocks. In the simplest case, known as the <b>electronic</b> <b>codebook</b> (ECB) mode, a message is first split into separate blocks of the cipher's block size (possibly extending the last block with padding bits), and then each block is encrypted and decrypted independently. However, such a naive method is generally insecure because equal plaintext blocks will always generate equal ciphertext blocks (for the same key), so patterns in the plaintext message become evident in the ciphertext output.|$|E
50|$|Technical {{details of}} the Rambutan {{algorithm}} are secret. Security researcher Bruce Schneier describes it as being a stream cipher (linear feedback shift register) based cryptosystem with 5 shift registers each of around 80 bits, and a key size of 112 bits. RAMBUTAN-I communications chips (which implement a secure X.25 based communications system) are made by approved contractors Racal and Baltimore Technologies/Zergo Ltd. CESG later specified RAMBUTAN-II, an enhanced system with backward compatibility with existing RAMBUTAN-I infrastructure. The RAMBUTAN-II chip is a 64-pin quad ceramic pack chip, which implements the <b>electronic</b> <b>codebook,</b> cipher block chaining, and output feedback operating modes (each in 64 bits) and the cipher feedback mode in 1 or 8 bits. Schneier suggests that these modes may indicate Rambutan is a block cipher rather than a stream. The three 64 bit modes operate at 88 megabits/second.|$|E
50|$|To hide {{patterns}} in encrypted data while avoiding the re-issuing {{of a new}} key after each block cipher invocation, a method is needed to randomize the input data. In 1980, the NIST published a national standard document designated Federal Information Processing Standard(FIPS) PUB 81, which specified four so-called block cipher modes of operation, each describing a different solution for encrypting a set of input blocks. The first mode implements the simple strategy described above, and was specified as the <b>electronic</b> <b>codebook</b> (ECB) mode. In contrast, {{each of the other}} modes describe a process where ciphertext from one block encryption step gets intermixed with the data from the next encryption step. To initiate this process, an additional input value is required to be mixed with the first block, and which is referred to as an initialization vector. For example, the cipher-block chaining (CBC) mode requires a random value of the cipher's block size as additional input, and adds it to the first plaintext block before subsequent encryption. In turn, the ciphertext produced in the first encryption step is added to the second plaintext block, and so on. The ultimate goal for encryption schemes is to provide semantic security: by this property, it is practically impossible for an attacker to draw any knowledge from observed ciphertext. It can be shown that each of the three additional modes specified by the NIST are semantically secure under so-called chosen-plaintext attacks.|$|E
40|$|Abstract—Evaluating {{classifier}} {{performance is}} a critical problem in pattern recognition and machine learning. In this paper pattern recognition techniques were applied to identify encryption algorithms. Four different block cipher algorithms were considered, DES, IDEA, AES, and RC 2 operating in (<b>Electronic</b> <b>Codebook)</b> ECB mode. Eight different classification techniques were used for this purpose, these are: Naïv...|$|E
40|$|Modern {{computers}} have graphics cards with much higher theoretical efficiency than conventional CPU. The paper presents application possibilities GPU CUDA acceleration for encryption {{of data using}} the new architecture tailored to the 3 DES algorithm, characterized by increased security compared to the normal DES. The algorithm used in ECB mode (<b>Electronic</b> <b>Codebook),</b> in which 64 -bit data blocks are encrypted independently by stream processors (CUDA cores). Comment: 4 pages, 4 figure...|$|E
40|$|In this paper, the cryptanalytic {{strength}} of two HwangRao Secret Error-Correcting Code (SECC) schemes is examined under a known-plaintext attack. In particular, {{we found the}} existence of key information redundancy in all SECCs used in the <b>electronic</b> <b>codebook</b> (ECB) mode. Also, our investigations indicate the existence of synergism in the SECC schemes, that is, the security of SECC (containing three transformations, # and E and P) is much stronger than the individual {{strength of}} either # or E or P. ...|$|E
40|$|This thesis {{deals with}} design and {{implementation}} of AES and DES encryption architectures for embedded systems. Architectures are implemented in VHDL language and design for FPGA technology. The proposed implementations are mapped on the Xilinx Spartan 3 technology. Both architectures are applied in simple ECB (<b>Electronic</b> <b>Codebook)</b> scheme with cache memories. A maximum throughput of design DES architecture 370 Mbps is achived with clock frequency of 104 MHz. The throughput of AES architecture at the maximum clock frequency of 118 MHz is 228 Mbps. Compared to software implementations for embedded systems, we achieve significantly higher throughput for both architectures...|$|E
40|$|Randomness of {{the output}} {{is one of}} the {{significant}} factors in measuring the security of any cryptographic algorithm. Non-random block cipher is vulnerable to any type of attack. This paper presents the National Institute of Standard and Technology (NIST) statistical tests of the Blowfish algorithm to investigate its randomness. Blowfish algorithm with <b>Electronic</b> <b>Codebook</b> (ECB) and Cipher Block Chaining (CBC) modes were conducted for these tests. In addition, comparisons between them were introduced. The analysis showed that Blowfish algorithm with ECB mode was inappropriate with data such as text and image files which have large strings of identical bytes. This inconsistency is due to the majority of the 188 statistical tests of NIST statistical tests failing in all rounds...|$|E
40|$|Abstract—GPU is {{continuing}} its trend of vastly outperforming CPU while becoming more general purpose. In {{order to improve}} the efficiency of AES algorithm, this paper proposed a CUDA implementation of <b>Electronic</b> <b>Codebook</b> (ECB) mode encoding process and Cipher Feedback (CBC) mode decoding process on GPU. In our implementation, the frequently accessed T-boxes were allocated on on-chip shared memory and the granularity that one thread handles a 16 Bytes AES block was adopted. Finally, we achieved the highest performance of around 60 Gbps throughput on NVIDIA Tesla C 2050 GPU, which runs up to 50 times faster than a sequential implementation based on Intel Core i 7 - 920 2. 66 GHz CPU. In addition, we discussed the optimization under some practical application scenarios such as overlapping GPU processing and data transfer. Keywords-CUDA; GPU; AES; Electronic Codebook; Cipher Feedback; parellel computin...|$|E
40|$|It {{has been}} shown that the {{encrypted}} information or ciphertext produced by symmetric-key block ciphers with <b>Electronic</b> <b>codebook</b> mode is vulnerable to ciphertext searching, replay, insertion and deletionbecause it encrypts each block independently. To compensate for this, each block of the encrypted information should be encrypted dependently. The encrypted information should be operated with aspecial mode. The operation mode should be changed. This paper analysis what an operational mode of block ciphers needs to feedback exactly and proposes a simple real-time changing operation modetechnique that extends the existing mode changing opportunity. The new change operation mode technique considers the sign differences between the intra-feedback information and the public-feedbackinformation, and then adaptively determines the corresponding change operation mode factor for each data block. This mode hopping technique for mobile streaming security is highly suitable for recent block computing in future various environments...|$|E
40|$|Introduction The {{details of}} the {{formerly}} Soviet (now Russian) encryption algorithm were published in GOST 28147 - 89 [5]. The aim of the designers was to provide an encryption algorithm with a flexible level of security. The algorithm {{is an example of}} DES-type cryptosystem with a drastically simplified key scheduling. It encrypts 64 -bit messages into 64 -bit cryptograms using 256 -bit keys. The GOST document [5] recommends the following four modes: simple substitution mode (<b>electronic</b> <b>codebook</b> mode), stream mode called the (Γ-mode in [5]), stream mode with feedback, and authentication mode. 2 The description of the GOST algorithm The GOST algorithm consists of 32 iterations (twice more than for the DES). A single iteration is shown in Figure 1. There are two secret components in the algorithm: the 256 -bit cryptographic key K and the definition of S-boxes S 1; : : :; S 8. The cryptographic ke...|$|E
40|$|Graduation date: 2005 Symmetric key block ciphers, such as AES, {{are well}} known and {{frequently}} used. There are five confidentiality modes of operation that are currently recommended for use with a symmetric key block cipher algorithm: <b>Electronic</b> <b>Codebook</b> (ECB), Cipher Block Chaining (CBC), Cipher Feedback (CFB), Output Feedback (OFB), and Counter (CTR). This paper investigates extending the block cipher modes of operation using multiple symmetric keys. Unlike traditional multiple-key encryption techniques, each block of plaintext is encrypted using a single key. The key used to encrypt a block is selected by the corresponding entry of a sequence. Each sequence entry {{represents one of the}} independent keys in the set. This paper also explores a variety of applications of this technique. Possible applications include establishing a type of covert channel, customizing message encryption at the block level, and expanding a string of pseudo-random numbers. Simulations have been constructed to illustrate the concepts...|$|E
40|$|We {{propose a}} key {{feedback}} {{mode of operation}} for the AES algorithm Rijndael (or any other block cipher), giving e#cient synchronous keystream generators. We show that if the block cipher possesses simple properties, normally accepted to exist in any secure block cipher, then also the generator is secure. 1 Introduction For confidentiality, the strongest notion of security that we can hope to achieve in practice is so called semantic security : whatever computational {{information that can be}} non-trivially derived from an encryption, E(m), should also be possible to obtain even without E(m). This notion was put forward in the seminal work by Goldwasser and Micali [9]. In the asymmetric case, we know that semantic security is impossible by deterministic systems, but [9] showed how to achieve it by probabilistic means. For (symmetric) block ciphers, we can easily see that the most obvious way of using it, <b>Electronic</b> <b>Codebook</b> Mode (ECB), is not semantically secure either. For instance, it is [...] ...|$|E
40|$|Abstract. We {{present the}} eXtended Ciphertext Block Chaining (XCBC) and the eXtended <b>Electronic</b> <b>Codebook</b> (XECB) {{encryption}} schemes or modes of encryption that can detect encrypted-message forgeries with high probability even when used with typical noncryptographic Manipulation Detection Code (MDC) functions (e. g., bitwise exclusive-or and cyclic redundancy code (CRC) functions). These modes detectencrypted-message forgeries atlow costin performance, power, and implementation, and preserve both message secrecy and integrity {{in a single}} pass over the message data. Their performance and security scale directly with those of the underlying block cipher function. We also present the XECB message authentication (XECB-MAC) modes that have all the operational properties of the XOR-MAC modes (e. g., fully parallel and pipelined operation, incremental updates, and out-oforder verification), and have better performance. They are intended for use either stand-alone or with encryption modes that have similar properties (e. g., counter-based XOR encryption). However, the XECB-MAC modes have higher upper bounds on the probability of adversary’s success in producing a forgery than the XOR-MAC modes...|$|E
40|$|In this paper, {{we made a}} {{comprehensive}} performance evaluative study of a secured MIMO Orthogonal Frequency-Division Multiplexing wireless communication system with implementation of two pre channel equalization techniques such as Pre-Minimum Mean Square Error (Pre-MMSE) and Pre-Zero Forcing (Pre-ZF) under QPSK and QAM digital modulations. The simulated system deploys three channel coding techniques (1 / 2 -rated Convolutional, CRC and BCH). In the present simulated system, text message transmission has been secured with concatenated implementation of <b>Electronic</b> <b>Codebook</b> (ECB) and Cipher Feedback (CFB) cryptographic algorithm. It is anticipated from the numerical results that the pre-ZF channel equalization based MIMO OFDM wireless communication system outperforms in QAM digital modulation and BCH channel coding under AWGN and Raleigh fading channels. In Pre-MMSE/pre-ZF channel equalization scheme, the system shows comparatively worst performance in convolutional channel coding scheme with QAM/QPSK digital modulation. It has been observed {{from the present study}} that the system performance deteriorates with increase in noise power as compared to signal power...|$|E
40|$|In this chapter, we {{show how}} {{security}} protocols can be attacked by exploiting the underlying block cipher modes of operation. We first present a comprehensive {{treatment of the}} properties and weaknesses of standard modes of operation. We then show why all modes of operation {{should not be used}} with public-key ciphers in public-key security protocols. This includes the cipher block chaining (CBC) mode when there is no integrity protection of the initialisation vector (IV). In particular, we show that it is possible in such instances to replace a block at the beginning, middle, or end of a CBC-encrypted message. We further demonstrate that the security of the <b>electronic</b> <b>codebook</b> (ECB) mode, and show that in the absence of integrity, one could exploit this to aid in known- and chosen- IV attacks. Finally, we present chosen-IV slide attacks on counter (CTR) and output feedback (OFB) modes of operation. Our results show that protocol implementers should carefully select modes of operation. Our results show that protocol implementers should carefully select modes of operation, be aware of the pitfalls in each of these modes, and incorporate countermeasures in their protocols to overcome them. It is also important to realize that modes of operation only provide confidentiality, and that when used in the context of security protocols, these modes should be combined with authentication and integrity protection techniques...|$|E
40|$|Includes bibliographical {{references}} (pages 89) CRYPTO is a computer-aided {{laboratory for}} cryptographic experiments. It {{is designed to}} aid students in learning the concepts and techniques of cryptography {{which is one of}} the most effective methods of data communication security. It is also useful for anyone who is interested in experimenting with different encryption and decryption algorithms or cryptanalytic methods. The laboratory consists of four menu driven parts: encryption, decryption, statistical tests and cryptanalysis. The following encryption-decryption algorithms are included: Caesar cipher, random monoalphabetic substitution, polyalphabetic substitution (Vigenere), "railfence" transposition, "columnar" transposition, and the DES <b>electronic</b> <b>codebook,</b> output feedback, and cipher-block chaining modes. For all of these, the user can enter the plaintext and choose the key, or the default plaintext and keys may be used. For the DES, the user can vary the number of iterations performed. The quality of the ciphertext can be evaluated by applying three chi-square based statistical tests: characters of the alphabet frequency, binary transition frequency, binary run distribution. Cryptanalysis can be performed by trial and error, using character frequencies for guidance, for all of the algorithms except the DES. Suggestions for future expansion and improvements of the CRYPTO laboratory are included along with a bibliography of books and articles on cryptographic techniques and their application. Included in this report are a description of CRYPTO, a user's manual, and printouts of the CRYPTO software written in Turbo Pascal...|$|E
40|$|Abstract. We present several {{constructions of}} tweakable enciphering schemes which use a single {{encryption}} layer between {{two layers of}} universal hash function computation. The earliest known construction of this type is due to Naor and Reingold, where the encryption layer is the <b>electronic</b> <b>codebook</b> mode. A more recent work of this type is TET and is due to Halevi at Crypto 2007. We present a new construction Ψ of an invertible block-wise almost universal hash function. Using this we construct a tweakable enciphering scheme HEH. For variable length messages HEH has better efficiency than TET, while for fixed length messages HEH provides better key agility. HEH can only handle messages whose lengths are multiples of the block length. To tackle this, we define variants of Ψ and present a construction HEH ∗ which can handle partial blocks. We show that the basic universal hash function can be combined with the counter mode of operation and the output feedback (OFB) mode to obtain new tweakable enciphering schemes of the hash-Ctr-hash and the hash-OFB-hash type. The hash-Ctrhash type construction improves upon previous work, while the hash-OFB-hash construction is the first proposal using the OFB mode. An important feature of our work {{is to show that}} a new class of polynomials defined by Bernstein can be used to construct the universal hash function. This results in an improvement of efficiency of the hashing layers by almost a factor of two. From a practical point of view, our constructions provide the currently best known algorithms for disk encryption protocols. ...|$|E
40|$|The Advanced Encryption Standard (AES) is a {{symmetric}} key block cipher {{approved by the}} National Institute of Standards and Technology (NIST). AES replaced the Data Encryption Standard (DES) as a standard encryption algorithm within the United States government. It is widely used in both software and hardware applications and transactions. Different confidentiality modes of operation allow a {{symmetric key}} block cipher to provide additional data confidentiality by altering the output in respect to previously processed input data. These modes include Cipher Block Chaining, Cipher Feedback, Output Feedback and Counter modes. <b>Electronic</b> <b>Codebook</b> (ECB) mode does not enhance the confidentiality of the original cipher. This thesis presents an implementation of AES on a field-programmable gate array (FPGA). The design improves upon similar implementations that only employ ECB mode by supporting all five confidentiality modes of operation. The unified design supports all applicable key sizes and offers competitive throughput and resource utilization compared to designs lacking additional confidentiality modes. The design occupies 7452 slices of a Xilinx Virtex-II Pro XC 2 VP 50 and features a maximum clock speed of 56. 3 MHz. Throughputs up to 480. 427 Mbps, 423. 906 Mbps and 379. 284 Mbps for 128 -bit, 192 -bit and 256 -bit keys are produced for all five modes of operation. A straightforward level of key agility allows encryption and decryption operations to proceed uninterrupted {{at the expense of}} throughput. This feature is ideal when it is necessary to change the key for each block of data. A physical hardware prototype of the design is employed as further demonstration of the design's functional abilities...|$|E
40|$|Tyt. z ekranu tytułowego. Praca doktorska. Akademia Górniczo-Hutnicza im. Stanisława Staszica (Kraków), 2012. Zawiera bibliogr. Dostępna także w wersji drukowanej. Tryb dostępu: Internet. Basic vulnerabilities, network attacks, {{physical}} security, sniffing, spoofing, Spanning Tree Protocol vulnerabilities, attacks for Virtual Local Area Networks, {{attacks against}} IP protocol, IPSec protocol, TCP Protocol security aspects, ICMP vulnerabilities, attacks for wireless networks, services, port scanning, SNMP Protocol, Domain Name Servers, tunneling issues, cryptographic algorithms, symmetric-key encryption, Data Encryption Standard, triple DES, substitution box theory, Advanced Encryption Standard, blowfish algorithm, Block Rivest Ciphers, RC 2, RC 5, RC 6, block cipher modes of operation, ECB, <b>Electronic</b> <b>Codebook,</b> CBC, Cipher Block Chaining, OFB, Output Feedback, other cipher block modes, RC 4, public-key encryption, Diffie-Hellman key exchange protocol, ElGamal algorithm, RSA algorithm, elliptic curves cryptography, one way hash functions, MD 5, SHA- 1, SHA- 2 hash functions, trust models, Secure Socket Layer, X. 509 certificates, Public Key Infrastructure, SSH trust model, Kerberos protocol, remote functions calls, Remote Procedure Call, Remote Method Invocation, Common Object Request Broker Architecture, XML-RPC, Representational State Transfer, REST, Simple Object Access Protocol, proposition of Secure Remote Protocol, assumptions {{of a new}} SRP Protocol, high level architecture of SRP, data representation in SRP, network frames, Secure Interface Description Language, features and application of SRP protocol, SRP implementation in Java, quality of the code, security implementation guidelines for remote protocols, cryptography-related stuffs, Authentication, Authorization, Accounting, denial-of-service, input validation, race conditions, third party software, unsafe functions, Static Analysis Tools, security-related tests, security assessment, performance results, license, l license for SRP, Code generator, components of the SRP implementation in Java, main types for SRP protocol, packet structure, Exceptions, Byte Array Utils, Config, Logger classes, connectors, cryptographic stuffs, generated cod...|$|E
40|$|Modern Internet {{protocols}} support several {{modes of}} operation in encryption tasks for data confidentialityto keep up with varied environments and provide the various choices, such as multi-mode IPSec support. To begin with we will provide a brief background on the {{modes of operation}} for symmetric-key blockciphers. Different block cipher modes of operation have distinct characteristics. For example, the cipherblock chaining (CBC) mode is suitable for operating environments that require self-synchronizingcapabilities, and the output feedback (OFB) mode requires encryption modules only. When usingsymmetric-key block cipher algorithms such as the Advanced Encryption Standard (AES), usersperforming information encryption often encounter difficulties selecting a suitable mode of operation. This paper describes a structure for analyzing the block operation mode combination. This unifiedoperation structure (UOS) combines existing common and popular block modes of operation. UOS doesmulti-mode of operation with most existing popular symmetric-key block ciphers and do not only consistof encryption mode such as <b>electronic</b> <b>codebook</b> (ECB) mode, cipher block chaining (CBC) mode, cipherfeedback (CFB) mode and output feedback (OFB) mode, that provides confidentiality but also messageauthentication mode such as the cipher block chaining message authentication code (CBC-MAC) incryptography. In Cloud Computing, information exchange frequently via the Internet and on-demand. This research provides an overview and information useful for approaching low-resource hardwareimplementation, which is proper to ubiquitous computing devices such as a sensor mote or an RFID tag. The use of the method is discussed and an example is given. This provides a common solution for multimodeand this is very suitable for ubiquitous computing with several resources and environments. Thisstudy indicates a more effectively organized structure for symmetric-key block ciphers to improve theirapplication scenarios. We can get that it is flexible in modern communication applications...|$|E
40|$|The {{following}} {{articles were}} removed due to copyright restrictions: Ahmad, N., Hasan, R. (2013) "A 0. 8 V 0. 23 nW 1. 5 ns full-swing pass-transistor XOR gate in 130 nm CMOS", Active and passive electronic components, 1 - 6; Ahmad, N., Rezaul Hasan, S. M., (2012) "Efficient integrated AES crypto-processor architecture for 8 -bit stream cipher", Electronic Letters, IET, 48 : 23, 1456 - 1457; Ahmad, N., Rezaul Hasan, S. M. (2013) "Low-power compact composite field AES S-Box/Inv S-Box design in 65 nm CMOS using Novel XOR Gate", Integration, the VLSI Journal, 46 : 4, 333 - 345; Ahmad, N., Hasan, R. (2012) "Topology of 2 input subnanowatt XOR gate in 65 nm CMOS technology," in Proceedings of IEEE International Conference on Semiconductor Electronics 2012 (ICSE 2012), Sept. 19 - 21, Kuala Lumpur, Malaysia, 597 - 599; Ahmad, N., Rezaul Hasan, S. M. (2011) "Decomposition method for AES Mix Column and Inv Mix Column VLSI architecture optimization", Proceedings 18 th Electronics New Zealand Conference, Palmerston North, New Zealand, 91 - 94; Ahmad, N., Hasan, R. (2011) "A new design of XOR-XNOR gates for low power application", Proceedings 2011 IEEE International Conference on Electronic Devices, Systems and Applications (ICEDSA), 25 - 27 Apr, Kuala Lumpur, Malaysia, 45 - 49. Implementations of the Advanced Encryption Standard (AES) have rapidly grown in various applications including telecommunications, finance and networks {{that require a}} low power consumption and low cost design. Presented in this thesis is a new 8 -bit stream cipher architecture core for an {{application specific integrated circuit}} AES crypto-processor. The chip area and power are optimised along with high throughput by employing circuit-level techniques, resource sharing and low supply voltage. The proposed design includes a novel S-box/ InvS-box, MixColumn/ InvMixColumn and ShiftRow/ InvShiftRow with a novel low power Exclusive OR (XOR) gate applied to all sub systems to minimise the power consumption. It is implemented in a 130 nm CMOS process and supports both encryption and decryption in <b>Electronic</b> <b>Codebook</b> Mode (EBC) using 128 -bit keys with a throughput of 0. 05 Gbit/s (at 100 MHz clock). This design utilises 3152 gate equivalents, including an on-the-fly key scheduling unit along with 4. 23 μW/MHz power consumption. The area of the chip is 640 μm× 325 μm (0. 208 square mm), excluding the bonding pads. Compared to other 8 -bit implementations, the proposed design achieves a smaller chip size along with higher throughput and lower power dissipation. This thesis also describes a new fault detection scheme for S-box/ InvS-box that is parity prediction based to protect the key from fault attacks...|$|E

