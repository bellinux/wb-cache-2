6|255|Public
3000|$|After {{getting the}} {{required}} <b>intersecting</b> <b>edge,</b> {{the next step}} is to check whether the crack propagates along the diagonal. This is realized by the condition, ϕ _ 1 < [...]...|$|E
3000|$|... diag-tol, {{then the}} non-diagonal node of the <b>intersecting</b> <b>edge</b> {{will be the}} next new tip node. In either cases, all the new tip nodes (if there are {{multiple}} cracks, each crack tip will have its own new tip node) are stored in R_ale. Moreover, the distance between the intersection point and the new tip nodes, marked as δ_ale in the figure, are computed and will be used in the next step.|$|E
30|$|The {{first step}} is to {{identify}} all the elements that are connected to the current tip node (Fig.  4). Among the edges of these elements, the edge that is intersected by the propagation vector is found. This <b>intersecting</b> <b>edge</b> is drawn with a thick continuous line in Fig.  4. Then the angles formed by the line joining the current tip node to the edge nodes, and the crack propagation direction are calculated (ϕ _ 1 and ϕ _ 2 in figure).|$|E
5000|$|Set , [...] and [...] Now [...] {{has many}} (more than [...] ) complicatedly <b>intersecting</b> <b>edges,</b> but {{discrepancy}} zero.|$|R
50|$|Branko Grünbaum {{identified}} two primary definitions used by Kepler, one being the regular star polygons with <b>intersecting</b> <b>edges</b> that don't generate new vertices, {{and the second}} being simple isotoxal concave polygons.|$|R
50|$|One {{simple way}} of finding whether {{the point is}} inside or outside a simple polygon is to test how many times a ray, {{starting}} from the point and going in any fixed direction, <b>intersects</b> the <b>edges</b> of the polygon. If the point is {{on the outside of}} the polygon the ray will <b>intersect</b> its <b>edge</b> an even number of times. If the point is on the inside of the polygon then it will <b>intersect</b> the <b>edge</b> an odd number of times. Unfortunately, this method won't work if the point is on the edge of the polygon.|$|R
40|$|Atomistic {{simulations}} of an accelerating edge dislocation {{were carried out}} to {{study the effects of}} drag and inertia. Using an embedded atom potential for nickel, the Peierls stress, the effective mass and the drag coefficient of an edge dislocation were determined for different temperatures and stresses in a simple slab geometry. The effect of { 1 1 1 } surfaces on an <b>intersecting</b> <b>edge</b> dislocation were studied by appropriately cutting the slab. A dislocation intersecting a surface stap was used as a model system to demonstrate the importance of inertial effects for dynamically overcoming short range obstacles. Significant effects were found even at room temperature. A simple model based on the dislocation-obstacle interaction energies was used to describe the findings...|$|E
30|$|One more {{interesting}} question which arises {{here is that}} why there is no undercutting observed at the concave corner, even though these corners are also formed by the intersection of two { 111 } planes. If we closely observe the concave and convex corners (Figure  3), we can easily notice {{the difference in the}} bond structure at the <b>intersecting</b> <b>edge.</b> The silicon atoms belonging to a convex edge consist of dangling bonds (Figure  3 (d)), while the atoms belonging to the concave corner (Figure  3 (c)) do not contain any dangling bond (i.e. all the bonds are engaged). The reason behind this is that the crystallographic structure of silicon arranges the atoms at the two types of corners (i.e. convex and concave) {{in such a way that}} the convex edged silicon atoms have one dangling bond, while the concave cornered silicon atoms have all their bonds engaged and thus there is no dangling bond. The absence of the dangling bond at the concave corner restricts undercutting, however the etching occurs parallel to the { 111 } planes. This is a very simple way of explaining why a convex corner is more vulnerable to undercutting whereas there is no-undercutting at the concave corner.|$|E
40|$|Finite element {{formulation}} {{based on}} compatible, assumed displacement {{fields and the}} principle of stationary potential energy is applied to analyze edge-stiffened plates. Shear deformation is considered {{in the formulation of}} the plate bending and beam bending elements by allowing independent interpolation for displacements and rotations. In addition to bending deformation, plane stress action is superposed on the plate element, while torsion and axial deformation are incorporated in the beam element, so that structural interaction between plate and edge beam elements can be facilitated. By enforcing compatible displacements and rotations across the interface between plate and beam elements, the degrees-of-freedom in one element can be related to the degrees-of-freedom of the adjoining element of a different type. Accordingly, the stiffness matrix and equivalent load vector are transformed to correspond to the common degrees-of-freedom as a result of invariance of the potential energy. By means of the direct stiffness method, the global equilibrium equation is thus established and solved by a frontal solution subroutine. Special features are introduced into the solution subroutine in order to handle varying degrees-of-freedom per node in an element and multiple loading cases. In addition, the speed of input-output transfer between in-core and peripheral storage is optimized. Convergence studies on displacements and stresses show that the current formulation with the program is capable of analyzing shear-flexible structures. The formulation allows convergence of shear-rigid solutions as a limiting case by making use of the selective reduced integration scheme when formulating individual elements. Graphs are presented to aid the design of edge-stiffened plates with two adjacent edges clamped and others cast with <b>intersecting</b> <b>edge</b> beams...|$|E
25|$|The golden ratio {{plays an}} {{important}} role in the geometry of pentagrams. Each intersection of edges sections other edges in the golden ratio. Also, the ratio of the length of the shorter segment to the segment bounded by the two <b>intersecting</b> <b>edges</b> (a side of the pentagon in the pentagram's center) is , as the four-color illustration shows.|$|R
50|$|The marching cubes {{algorithm}} {{was first}} published in the 1987 SIGGRAPH proceedings by Lorensen and Cline, and it creates a surface by <b>intersecting</b> the <b>edges</b> of a data volume grid with the volume contour. Where the surface <b>intersects</b> the <b>edge</b> the algorithm creates a vertex. By using a table of different triangles depending on different patterns of edge intersections the algorithm can create a surface. This algorithm has solutions for implementation both on the CPU and on the GPU.|$|R
2500|$|... {{plays an}} {{important}} role in regular pentagons and pentagrams. Each intersection of edges sections the edges in the golden ratio: the ratio of the length of the edge to the longer segment is φ, as is the length of the longer segment to the shorter. Also, the ratio of the length of the shorter segment to the segment bounded by the two <b>intersecting</b> <b>edges</b> (a side of the pentagon in the pentagram's center) is φ. As the four-color illustration shows: ...|$|R
40|$|This paper investigates a new {{direction}} {{in the area of}} cluster planarity by addressing the following question: Let G be a graph along with a hierarchy of vertex clusters, where clusters can partially intersect. Does G admit a drawing where each cluster is inside a simple closed region, no two <b>edges</b> <b>intersect,</b> and no <b>edge</b> <b>intersects</b> a region twice? We investigate the interplay between this problem and the classical cluster planarity testing problem where clusters are not allowed to partially intersect. Characterizations, models, and algorithms are discussed...|$|R
40|$|We {{present a}} method for 3 D {{junction}} interpretation. The interpretations include location, number of edges, and their orientations. Prerequisites are 2 D interpretations of junctions in a general format found in stereo pairs. These junctions must be sets of <b>intersecting</b> <b>edges</b> and not occlusion events. We give {{a method for}} matching such 2 D junctions that uses the semantics of the junctions. Using calibrated cameras we further show how to determine 3 D junction location and 3 D edge orientation. The nal 3 D interpretations allow for ambiguities. ...|$|R
5000|$|The golden ratio, φ = (1 + √5) / 2 ≈ 1.618, satisfyingplays an {{important}} role in regular pentagons and pentagrams. Each intersection of edges sections the edges in the golden ratio: the ratio of the length of the edge to the longer segment is φ, as is the length of the longer segment to the shorter. Also, the ratio of the length of the shorter segment to the segment bounded by the two <b>intersecting</b> <b>edges</b> (a side of the pentagon in the pentagram's center) is φ. As the four-color illustration shows: ...|$|R
30|$|Figure 5 f {{shows the}} picked edges, the source point in green, the {{straight}} lines, and blue points representing the intersection. In this example, 60 % {{of the lines}} <b>intersected</b> the <b>edges.</b>|$|R
40|$|We {{prove that}} any AVL tree admits a linear-area planar straight-line grid strictly-upward drawing, that is, a drawing in which (a) no two <b>edges</b> <b>intersect,</b> (b) each <b>edge</b> is mapped {{into a single}} straight-line segment, (c) each node is mapped into a point with integer coordinates, and (d) each node is placed below its parent...|$|R
40|$|The need of {{effective}} drawings for non-planar dense graphs {{is motivated by}} the wealth of applications in which they occur, including social network analysis, security visualization and web clustering engines, {{just to name a}} few. One common issue graph drawings are affected by is the visual clutter due to the high number of (possibly <b>intersecting)</b> <b>edges</b> to display. Confluent drawings address this problem by bundling groups of edges sharing the same path, resulting in a representation with less edges and no edge intersections. In this paper we describe how to create a confluent drawing of a graph from its rectangular dual and we show two important advantages of this approach...|$|R
50|$|Illinois State Highways 9, 47, and 54 <b>intersect</b> on the <b>edge</b> of Gibson City.|$|R
2500|$|Because [...] is {{a simple}} planar, i.e. it may be {{embedded}} in the plane without <b>intersecting</b> <b>edges,</b> {{and it does not}} have two vertices sharing more than one edge, and it doesn't have loops, then it can be shown (using the Euler characteristic of the plane) that it must have a vertex shared by at most five edges. (Note: This is the only place where the five-color condition is used in the proof. If this technique is used to prove the four-color theorem, it will fail on this step. In fact, an icosahedral graph is 5-regular and planar, and thus does not have a vertex shared by at most four edges.) Find such a vertex, and call it [...]|$|R
40|$|Abstract. We {{prove that}} there are no n-agonal musquashes for n odd, apart from the {{standard}} ones. This completes the classification of musquashes. An n-agonal musquash is a planar drawing of the n-gon, with consecutive edges e 1, [...] .,en, such that each pair of edges meets precisely once, either at a vertex or at a transverse crossing, and if <b>edge</b> e 1 <b>intersects</b> <b>edges</b> in the following order: ek 1, [...] .,ekn− 3, then for all i = 2, [...] .,n, <b>edge</b> ei <b>intersects</b> <b>edges</b> in the following order: ek 1 +i− 1, [...] .,ekn− 3 +i− 1, where the edge subscripts are computed modulo n. For n odd, the standard n-agonal musquash has the n-th roots of unity as its vertices and for each k, edge ek goes from e (k− 1) (1 −n) πi/n to e k(1 −n) πi/n. Figure 1. The standard pentagonal musquash This paper is the sequel to [2], in which we showed {{that there are}} no n-agonal musquashes with n even and n> 6. In this present paper we exploit the same ideas in order to complete the classification of musquashes. We maintain the notation and terminology of [2]. By stereographic projection, we regard musquashes as being drawn on the 2 -sphere S 2. We regard two musquashes as being equivalent if one can be obtained from the other by a homeomorphism of S 2; this equivalence is also called geotopy [3]. Theorem. For n odd, every n-agonal musquash is equivalent to the standard one. Before proving this theorem, let us make some remarks concerning the notion of equivalence. First, recall that given a musquash M, and an orientation of M...|$|R
40|$|AbstractA {{hypergraph}} H is linear if no {{two distinct}} <b>edges</b> of H <b>intersect</b> {{in more than}} one vertex and loopless if no edge has size one. A q-edge-colouring of H is a colouring of the edges of H with q colours such that <b>intersecting</b> <b>edges</b> receive different colours. We use ΔH to denote the maximum degree of H. A well-known conjecture of Erdős, Farber and Lovász is equivalent to the statement that every loopless linear hypergraph on n vertices can be n-edge-coloured. In this paper we show that the conjecture is true when the partial hypergraph S of H determined by the edges of size at least three can be ΔS-edge-coloured and satisfies ΔS⩽ 3. In particular, the conjecture holds when S is unimodular and ΔS⩽ 3...|$|R
40|$|Consider {{a problem}} {{where we are}} given a bipartite graph H with {{vertices}} arranged on two horizontal lines in the plane, such that {{the two sets of}} vertices placed on the two lines form a bipartition of H. We additionally require that H admits a perfect matching and assume that edges of H are embedded in the plane as segments. The goal is to compute the minimal number of <b>intersecting</b> <b>edges</b> in a perfect matching in H. The problem stems from so-called token swapping problems, introduced by Yamanaka et al. [3] and generalized by Bonnet, Miltzow and Rzazewski [1]. We show that our problem, equivalent to one of the special cases of one of the token swapping problems, is NP-complete...|$|R
40|$|In 1973 P. Erdős and L. Lovász {{noticed that}} any {{hypergraph}} whose <b>edges</b> are pairwise <b>intersecting</b> has chromatic number 2 or 3. In the first case, such hypergraph may have {{any number of}} edges. However, Erdős and Lovász proved that in the second case, the number of edges is bounded from above. For example, if a hypergraph is n -uniform, has pairwise <b>intersecting</b> <b>edges,</b> and has chromatic number 3, then the number of its edges does not exceed n^n. Recently D. D. Cherkashin improved this bound (see Ch). In this paper, we further improve it in the case {{when the number of}} vertices of an n-uniform hypergraph is bounded from above by n^m with some m = m(n). Comment: 6 page...|$|R
40|$|A {{hypergraph}} H is linear if no {{two distinct}} <b>edges</b> of H <b>intersect</b> {{in more than}} one vertex and loopless if no edge has size one. A q-edge-colouring of H is a colouring of the edges of H with q colours such that <b>intersecting</b> <b>edges</b> receive different colours. We use ∆H to denote the maximum degree of H. A well known conjecture of Erdös, Farber and Lovász is equivalent to the statement that every loopless linear hypergraph on n vertices can be n-edge-coloured. In this note we show that the conjecture is true when the partial hypergraph S of H determined by the edges of size at least three can be ∆S-edge-coloured and satisfies ∆S ≤ 3. In particular, the conjecture holds when S is unimodular and ∆S ≤ 3. 1 Introduction an...|$|R
40|$|AbstractA graph {{embedded}} on {{a surface}} is n-representative if every nontrivial closed {{curve in the}} surface which does not <b>intersect</b> <b>edges</b> of the embedding must contain at least n vertices of the graph. The property of being n-representative on a surface is closed upward under minor inclusion; hence, {{by the results of}} N. Robertson and P. D. Seymour (Graph minors. VIII. A Kuratowski theorem for general surfaces, submitted for publication), the set of minor minimal n-representative embeddings on a surface is finite up to isomorphism. The property of being minor minimal n-representative is invariant under Y-Δ operations. The set of minor minimal 2 and 3 representative embeddings on the projective plane are found. These embeddings are used to produce the topologically minimal 2 and 3 representative projective embeddings...|$|R
25|$|A {{planar graph}} is a graph whose {{vertices}} and edges {{can be drawn}} in a plane such that no two of the <b>edges</b> <b>intersect.</b>|$|R
40|$|Abstract—In {{this paper}} a new {{algorithm}} to generate random simple polygons from a given {{set of points}} in a two dimensional plane is designed. The proposed algorithm uses a genetic algorithm to generate polygons with few vertices. A new merge algorithm is presented which converts any two polygons into a simple polygon. This algorithm at first changes two polygons into a polygonal chain and then the polygonal chain is converted into a simple polygon. The process of converting a polygonal chain into a simple polygon {{is based on the}} removal of <b>intersecting</b> <b>edges.</b> The experiments results show that the proposed algorithm has the ability to generate a great number of different simple polygons and has better performance in comparison to celebrated algorithms such as space partitioning and steady growth. Keywords—Divide and conquer, genetic algorithm, merge polygons, Random simple polygon generation. I...|$|R
40|$|AbstractWe {{treat the}} theory of {{numerical}} quadrature over a square using an m 2 copy Q(m) ƒ of a one-point quadrature rule. For some integrand functions the quadrature error Q(m) ƒ − Iƒ may be expressed as an asymptotic expansion in inverse powers of m or other simple functions of m. We determine {{in some cases the}} nature of this expansion and derive integral representations for both the coefficients and the remainder term. In this part we deal only with smooth functions and those having algebraic line singularities along edges. In some of these cases the form is already known but some of the integral representations are new. These results form the basis for Part II in which new expansions, for integrands having algebraic singularities along <b>intersecting</b> <b>edges</b> and point algebraic singularities at the vertices will be presented...|$|R
40|$|In this article, we {{describe}} {{the design of a}} program that allows users to create their personal shoe soles. The program has a backend which generates different components of the sole, such as the treads, the surface, the insole pattern and the contour (where the sole will be connected {{to the rest of the}} shoe). Instead of the traditio-nal fixed grids, we use Voronoi diagrams, which have another aesthetic appeal and which allow influencing the dynamic behavior of the sole. This program shows an example of the possibilities of digital fabrication (3 D printing) for the personalization of material properties and behavior when combined with mathematical algorithms. Moreover, we highlight our approach and interesting algorithmic aspects like <b>intersecting</b> <b>edges</b> and contours, generating Voronoi diagrams, finding polygons, solving the Chinese postman problem, and solving the travelling salesman problem...|$|R
40|$|This paper {{presents}} a novel system for 3 D scene reconstruction and obstacle detection for visually impaired people, {{which is based}} on Microsoft Kinect. From the depth image of Kinect a 3 D point cloud is calculated. By using both, the depth image and the point cloud a gradient and RANSAC based plane segmentation algorithm is applied. After the segmentation the planes are combined to objects based on their <b>intersecting</b> <b>edges.</b> For each object a cuboid shaped bounding box is calculated. Based on experiments the accuracy of the presented system is evaluated. The achieved accuracy is in the range of few centimeters and thus sufficient for obstacle detection. Besides, the paper gives an overview about already existing navigation aids for visually impaired people and the presented system is compared to a state of the art system...|$|R
50|$|Self-intersecting polygons {{are also}} {{sometimes}} included among the complex polygons. Vertices are only counted {{at the ends}} of edges, not where <b>edges</b> <b>intersect</b> in space.|$|R
40|$|The edge-insertion {{paradigm}} improves a triangulation of {{a finite}} point set in R² iteratively {{by adding a}} new <b>edge,</b> deleting <b>intersecting</b> old <b>edges,</b> and retriangulating the resulting two polygonal regions. After presenting an abstract view of the paradigm, this paper shows {{that it can be}} used to obtain polynomial time algorithms for several types of optimal triangulations...|$|R
3000|$|... where n is {{the number}} of VOI <b>edges</b> <b>intersected</b> by the voxel. The spill-out {{fraction}} from a VOI can be approximated as being proportional to area [...]...|$|R
50|$|If {{the three}} {{intersecting}} hyperbolic paraboloids are drawn far {{enough that they}} <b>intersect</b> along the <b>edges</b> of a tetrahedron, then the result is as shown in Figure 4.|$|R
40|$|A {{geometric}} hypergraph H is {{a collection}} of i-dimensional simplices, called hyperedges or, simply, edges, induced by some (i + 1) -tuples of a vertex set V in general position in d-space. The topological structure of geometric graphs, i. e., the case d = 2; i = 1, has been studied extensively, and it proved to be instrumental for the solution {{of a wide range of}} problems in combinatorial and computational geometry. They include the k-set problem, proximity questions, bounding the number of incidences between points and lines, designing various efficient graph drawing algorithms, etc. In this paper, we make an attempt to generalize some of these tools to higher dimensions. We will mainly consider extremal problems of the following type. What is the largest number of edges (i-simplices) that a geometric hypergraph of n vertices can have without containing certain forbidden configurations? In particular, we discuss the special cases when the forbidden configurations are k <b>intersecting</b> <b>edges</b> [...] ...|$|R
