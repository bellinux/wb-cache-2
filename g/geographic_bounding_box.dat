1|2291|Public
30|$|During {{the export}} process, {{a list of}} GMLIDs of the {{top-level}} features satisfying the user-defined filter criteria i.e. feature class types and <b>geographic</b> <b>bounding</b> <b>box</b> etc. are first queried from the database. In the subsequent step, a worker pool containing a number worker threads is constructed and each GMLID is processed by a worker thread for creating a citygml 4 j object from the CityGML feature content queried from the respective database tables. In the last step, the citygml 4 j objects are marshalled to XML elements and written to a CityGML instance document. This is illustrated {{in the center and}} lower part of Fig.  11.|$|E
40|$|Abstract. After being a {{pilot track}} in 2005, GeoCLEF {{advanced}} to {{be a regular}} track within CLEF 2006. The purpose of GeoCLEF is to test and evaluate cross-language geographic information retrieval (GIR) : retrieval for topics with a geographic specification. For GeoCLEF 2006, twenty-five search topics were defined by the organizing groups for searching English, German, Portuguese and Spanish document collections. Topics were translated into English, German, Portuguese, Spanish and Japanese. Several topics in 2006 were significantly more geographically challenging than in 2005. Seventeen groups submitted 149 runs (up from eleven groups and 117 runs in GeoCLEF 2005). The groups {{used a variety of}} approaches, including <b>geographic</b> <b>bounding</b> <b>boxes,</b> named entity extraction and external knowledge bases (geographic thesauri and ontologies and gazetteers). ...|$|R
40|$|Principal {{component}} analysis (PCA) {{is commonly used}} to compute a <b>bounding</b> <b>box</b> of a point set in R d. The popularity of this heuristic lies in its speed, easy implementation and {{in the fact that}} usually, PCA <b>bounding</b> <b>boxes</b> quite well approximate the minimumvolume <b>bounding</b> <b>boxes.</b> We present examples of discrete points sets in the plane, showing that the worst case ratio of the volume of the PCA <b>bounding</b> <b>box</b> and the volume of the minimum-volume <b>bounding</b> <b>box</b> tends to infinity. Thus, we concentrate our attention on PCA <b>bounding</b> <b>boxes</b> for continuous sets, especially for the convex hull of a point set. Here, we contribute lower bounds on the approximation factor of PCA <b>bounding</b> <b>boxes</b> of convex sets in arbitrary dimension, and upper bounds in R² and R³...|$|R
40|$|Principle {{component}} analysis (PCA) {{is commonly used}} to compute a <b>bounding</b> <b>box</b> of a point set in R d. The popularity of this heuristic lies in its speed, easy implementation and {{in the fact that}} usually, PCA <b>bounding</b> <b>boxes</b> quite well approximate the minimum-volume <b>bounding</b> <b>boxes.</b> In this paper we give a lower bound on the approximation factor of PCA <b>bounding</b> <b>boxes</b> of convex polytopes in arbitrary dimension, and an upper bound on the approximation factor of PCA <b>bounding</b> <b>boxes</b> of convex polygons in R²...|$|R
50|$|The {{arbitrarily}} oriented minimum <b>bounding</b> <b>box</b> is {{the minimum}} <b>bounding</b> <b>box,</b> calculated subject to no constraints {{as to the}} orientation of the result. Minimum <b>bounding</b> <b>box</b> algorithms based on the rotating calipers method can be used to find the minimum-area or minimum-perimeter <b>bounding</b> <b>box</b> of a two-dimensional convex polygon in linear time, and of a two-dimensional point set {{in the time it takes}} to construct its convex hull followed by a linear-time computation. A three-dimensional rotating calipers algorithm can find the minimum-volume arbitrarily-oriented <b>bounding</b> <b>box</b> of a three-dimensional point set in cubic time.|$|R
50|$|It is also {{possible}} to approximate the minimum <b>bounding</b> <b>box</b> volume, to within any constant factor greater than one, in linear time. The algorithm for doing this involves finding an approximation to {{the diameter of the}} point set, and using a box oriented towards this diameter as an initial approximation to the minimum volume <b>bounding</b> <b>box.</b> Then, this initial <b>bounding</b> <b>box</b> is partitioned into a grid of smaller cubes, and grid points near the boundary of the convex hull of the input are used as a coreset, a small set of points whose optimum <b>bounding</b> <b>box</b> approximates the optimum <b>bounding</b> <b>box</b> of the original input. Finally, O'Rourke's algorithm is applied to find the exact optimum <b>bounding</b> <b>box</b> of this coreset.|$|R
3000|$|The target face <b>bounding</b> <b>boxes</b> for the BioID, HELEN, MUCT, 300 W, and Menpo {{datasets}} were computed. The {{ground truth}} <b>bounding</b> <b>box</b> {{was determined by}} the extremes of the ground truth landmarks for each image, i.e. the minimum and maximum values for x and y. A face was labelled as detected if the <b>bounding</b> <b>box</b> returned by the detector and the ground truth <b>bounding</b> <b>box</b> overlapped by at least 50 % [...]...|$|R
30|$|CUHK 03 dataset [7] {{contains}} 14, 097 {{images of}} 1467 identities. Each identity is captured by two cameras on the CUHK campus and has 9.6 images in average. There {{are two kinds}} of <b>bounding</b> <b>boxes,</b> i.e., labeled <b>bounding</b> <b>box</b> and detected <b>bounding</b> <b>box.</b> We evaluate the proposed LEDF using the detected <b>bounding</b> <b>box.</b> The detected <b>bounding</b> <b>box</b> possesses some misalignments and part missing, which is closer to the realistic performance. According to the experimental setting in [6, 7], we partition this dataset into a training set of 1367 pedestrians and a test set of 100 pedestrians, and the performance of single-shot setting is reported with 20 random splits.|$|R
30|$|We use a <b>bounding</b> <b>box</b> {{extended}} by 25 % in area (50 % in each dimension) {{compared to the}} tight <b>bounding</b> <b>box</b> of the blobs. This is necessary to get enough pixels from the external blob neighborhood. Then, from this point on, we consider that <b>bounding</b> <b>box</b> means the extended one.|$|R
50|$|<b>Bounding</b> <b>boxes</b> (or <b>Bounding</b> volumes) {{are most}} often a 2D {{rectangle}} or 3D cuboid, but other shapes are possible. The bounding diamond, the minimum bounding parallelogram, the convex hull, the bounding circle or bounding ball, and the bounding ellipse have all been tried, but <b>bounding</b> <b>boxes</b> remain the most popular due to their simplicity. <b>Bounding</b> <b>boxes</b> are typically used in the early (pruning) stage of collision detection, so that only objects with overlapping <b>bounding</b> <b>boxes</b> need be compared in detail.|$|R
40|$|A minimum <b>bounding</b> <b>box</b> is the {{smallest}} enclosing rectangle of an object aligned {{to a set of}} axis. It is represented by 4 parameters corresponding to the (x, y) coordinates in space that define the lower left and upper right vertices of its perimeter. Its variant, the rotated minimum <b>bounding</b> <b>box</b> can be represented by adding an additional parameter to store the rotational information. Figure 1. A minimum <b>bounding</b> <b>box</b> for a complex planar object. The minimum <b>bounding</b> <b>box</b> is most predominantly used as an approximation object in spatial indexes like the R-Tree and its variants. It is also used quite frequently in the areas of object intersection and collision detection. HISTORICAL BACKGROUND The minimum <b>bounding</b> <b>box</b> was first introduced as an approximation tool for spatial indexing by Guttman in [2]. Guttman’s idea was to have each index record in a leaf node of an R-Tree be identified by {{the smallest}} enclosing rectangle that spatially contains the n-dimensional data object and a pointer to the file containing the actual representation of the object. It has since {{become one of the most}} frequently used approximation techniques for spatial indexes. The minimum <b>bounding</b> <b>box</b> is one of the most popular approximation methods in spatial access methods. The reason for its popularity is its simple representation. It only requires two points to represent a minimum <b>bounding</b> <b>box,</b> whereas the object the minimum <b>bounding</b> <b>box</b> represents may be many orders of magnitude more complex. Many spatial data structures have been developed to take advantage of minimum <b>bounding</b> <b>box</b> approximations. The most common are the R-Tree and its variations. SCIENTIFIC FUNDAMENTALS Minimum <b>bounding</b> <b>boxes</b> are designed to be a general, intuitive approach to approximating a complex object. This allows them to be applied to a number of problems from varying disciplines. The exact algorithm for computing a minimum <b>bounding</b> <b>box</b> in two dimensions is as follows...|$|R
40|$|<b>Bounding</b> <b>boxes</b> {{are used}} in many {{applications}} for simplification of point sets or complex shapes. For example, in computer graphics, <b>bounding</b> <b>boxes</b> are used to maintain hierarchical data structures for fast rendering of a scene or for collision detection. Additional applications include those in shape analysis and shape simplification, or in statistics, for storing and performing range-search queries on a large database of samples. A frequently used heuristic for computing a <b>bounding</b> <b>box</b> {{of a set of}} points is based on principal component analysis. The principal components of the point set define the axes of the <b>bounding</b> <b>box.</b> Once the axis directions are given, the dimension of the <b>bounding</b> <b>box</b> is easily found by the extreme values of the projection of the points on the corresponding axis. Computing a PCA <b>bounding</b> <b>box</b> of a discrete point set in Rd depends linearly on the number of points. The popularity of this heuristic, besides its speed, lies in its easy implementation and in the fact that usually PCA <b>bounding</b> <b>boxes</b> are tight-fitting...|$|R
40|$|DE 10106023 A UPAB: 20021108 NOVELTY - The {{collision}} detection involves first forming hierarchical binary <b>bounding</b> <b>box</b> trees with axially parallel <b>bounding</b> <b>boxes</b> and {{data in the}} respective object coordination system. From the tree structures the relative positions of the objects can be determined by carrying out a transformation {{on one of the}} objects. Then a simultaneous traversing of the tree structures is carried out. By testing for overlapping of the <b>bounding</b> <b>boxes</b> and polygons contained in them, it can be determined whether the objects will collide. In the <b>bounding</b> <b>box</b> tree structures, each <b>bounding</b> <b>box</b> pair has a lower hierarchical position. DETAILED DESCRIPTION - For {{collision detection}}, where <b>bounding</b> <b>boxes</b> of the objects overlap an auxiliary <b>bounding</b> <b>box</b> is calculated which is aligned with the coordinate system of the first object and surrounds the second object as closely as possible. INDEPENDENT CLAIMS also cover an apparatus for carrying out the method. USE - Especially for use in robot control, computer animation systems and virtual reality systems. ADVANTAGE - The system allows very fast collision detection whilst requiring very little memory space...|$|R
30|$|These first {{stages of}} {{detection}} output {{a list of}} areas of attention in which pedestrians can be potentially detected. Each area of attention is labelled using a <b>bounding</b> <b>box.</b> A symmetry-based approach is further used to refine this rough result in order to resize <b>bounding</b> <b>boxes</b> or to separate <b>bounding</b> <b>boxes</b> that can contain more pedestrians.|$|R
5000|$|In many {{applications}} the <b>bounding</b> <b>box</b> is {{aligned with the}} axes of the co-ordinate system, and it is then known as an axis-aligned <b>bounding</b> <b>box</b> (...) [...] To distinguish the general case from an AABB, an arbitrary <b>bounding</b> <b>box</b> is sometimes called an oriented <b>bounding</b> <b>box</b> (...) , or an [...] when an existing object's local coordinate system is used. AABBs are much simpler to test for intersection than OBBs, but have the disadvantage that when the model is rotated they cannot be simply rotated with it, but need to be recomputed.|$|R
25|$|The {{bounding}} diamond, {{the minimum}} bounding parallelogram, the convex hull, the bounding circle or bounding ball, and the bounding ellipse {{have all been}} tried, but <b>bounding</b> <b>boxes</b> remain the most popular due to their simplicity. <b>Bounding</b> <b>boxes</b> are typically used in the early (pruning) stage of collision detection, so that only objects with overlapping <b>bounding</b> <b>boxes</b> need be compared in detail.|$|R
30|$|Because {{initial stages}} of the {{pedestrian}} detection system provide a <b>bounding</b> <b>box</b> for each detected object, the snake initial position can be chosen as the <b>bounding</b> <b>box</b> contour; then, a contracting behavior should be impressed, to force the snake to move inside the <b>bounding</b> <b>box.</b> Other energies must also be introduced to make the snake stop when the object contour is reached.|$|R
40|$|Abstract. A novel {{tracking}} algorithm {{that can}} track a highly non-rigid target robustly is proposed {{using a new}} <b>bounding</b> <b>box</b> representation called the Double <b>Bounding</b> <b>Box</b> (DBB). In the DBB, a target is de-scribed by {{the combination of the}} Inner <b>Bounding</b> <b>Box</b> (IBB) and the Outer <b>Bounding</b> <b>Box</b> (OBB). Then our objective of visual tracking is changed to find the IBB and OBB instead of a single <b>bounding</b> <b>box,</b> where the IBB and OBB can be easily obtained by the Dempster-Shafer (DS) theory. If the target is highly non-rigid, any single <b>bounding</b> <b>box</b> cannot include all foreground regions while excluding all background re-gions. Using the DBB, our method does not directly handle the ambigu-ous regions, which include both the foreground and background regions. Hence, it can solve the inherent ambiguity of the single <b>bounding</b> <b>box</b> representation and thus can track highly non-rigid targets robustly. Our method finally finds the best state of the target using a new Constrained Markov Chain Monte Carlo (CMCMC) -based sampling method with the constraint that the OBB should include the IBB. Experimental results show that our method tracks non-rigid targets accurately and robustly, and outperforms state-of-the-art methods. ...|$|R
50|$|The minimum <b>bounding</b> <b>box</b> of a {{point set}} {{is the same as}} the minimum <b>bounding</b> <b>box</b> of its convex hull, a fact which may be used heuristically to speed up computation.|$|R
40|$|Most {{contemporary}} object detection approaches assume each object {{instance in}} the training data to be uniquely represented by a single <b>bounding</b> <b>box.</b> In this paper, we go beyond this conventional view by allowing an object instance to be described by multiple <b>bounding</b> <b>boxes.</b> The new <b>bounding</b> <b>box</b> annotations are determined based on the alignment of an object instance with the other training instances in the dataset. Our proposal enables the training data to be reused multiple times for training richer multi-component category models. We operationalize this idea by two complementary operations: <b>bounding</b> <b>box</b> shrinking, which finds subregions of an object instance that could be shared; and <b>bounding</b> <b>box</b> enlarging, which enlarges object instances to include local contextual cues. We empirically validate our approach on the PASCAL VOC detection dataset. ...|$|R
40|$|Bounding Volumes {{for complex}} objects have been mostly inaccurate. A recent {{bounding}} volume called the tribox is {{an improvement over}} the <b>bounding</b> <b>box.</b> I propose the oriented tribox (OTB) and show {{that it is an}} even tighter bound than the tribox. Keywords: tribox, oriented <b>bounding</b> <b>box,</b> <b>bounding</b> volumes. CR Classication: I. 3. 5 [Computer Graphics]: Computational Geometry and Object Modeling { surface and object representations 1 1 Introduction Bounding volumes for complex objects are inaccurate. This can cause problems when trying to represent them quickly or when using them for collision detection. I propose a new bounding volume. The algorithm is implemented and tested in Matlab. Results show that my bounding volume is better than others. 2 Previous Work 2. 1 <b>Bounding</b> <b>Box</b> A <b>bounding</b> <b>box</b> is the simplest bounding volume for an object. It encloses a complex object at the extremities of the object, where each surface of the box is parallel with each coordinate axis. <b>Bounding</b> <b>box</b> [...] ...|$|R
30|$|We will {{demonstrate}} that using only <b>bounding</b> <b>box</b> coordinates, we can perform a 3 D {{reconstruction of the}} <b>bounding</b> <b>box</b> positions. If the camera’s internal parameters are not known, i.e., {{we are working with}} an uncalibrated camera, the 3 D positions can be computed only up to a scale transformation. Nevertheless, we will see that actual 3 D coordinates are irrelevant for <b>bounding</b> <b>box</b> interpolation, and so, no camera calibration is needed.|$|R
3000|$|Given the segmentation, the <b>bounding</b> <b>boxes</b> of blobs with {{at least}} a certain area are {{detected}} using the approach described in [18]. Then, a recursive process is undertaken to join <b>boxes</b> into larger <b>bounding</b> <b>boxes</b> which satisfy d [...]...|$|R
40|$|Abstract — A {{new method}} of word {{segmentation}} for document images is presented. The method uses the <b>bounding</b> <b>box</b> regions to enclose the letters (characters) {{of the words}} and then the resulting letter spaces are progressively filled to merge the character <b>bounding</b> <b>boxes</b> {{to get the word}} <b>bounding</b> <b>boxes.</b> The method holds good for inclined and irregularly distributed words. The proposed method completely avoids the line segmentation process which normally precedes word segmentation in traditional methods...|$|R
40|$|We propose an {{unsupervised}} {{framework for}} recognizing animals in videos using subtitles. In this framework, the alignment between animals and their names {{is performed using}} an Expectation Maximization algorithm which is adapted to two very dierent circumstances- 1) when the <b>bounding</b> <b>boxes</b> are available and 2) when the frame {{as a whole is}} used instead of <b>bounding</b> <b>boxes.</b> With the goal of maximizing precision, recall and F-measure, the experiments compare a multitude of natural language processing approaches and visual features when associating animal names in the subtitles with visual patterns. The proposed unsupervised methods obtain 83. 1 % F 1 using <b>bounding</b> <b>boxes</b> and 65. 7 % F 1 without <b>bounding</b> <b>boxes</b> in a fully automated pipeline. status: publishe...|$|R
30|$|Similar to SSD, <b>bounding</b> <b>boxes</b> {{are applied}} to each layer. In order to {{identify}} the small object from the background, intuitively, {{we go through the}} images and the feature maps from the top layer to the bottom one. As the feature map sizes and the image resolution differ a lot, we need to delicately assign the <b>bounding</b> <b>boxes</b> to facilitate the processing. For the purpose of image segmentation, the <b>bounding</b> <b>boxes</b> are determined not only by the layer but also by the cell. Note that <b>bounding</b> <b>boxes</b> cannot always recognize the targets exactly, we put more boxes in cell from low-resolution layers and less in high-resolution ones. Generally, four offsets are given in related to every single <b>bounding</b> <b>box</b> of each cell. In this case, however the size of cell varies, the objects can be defined more effectively. As a result, the proposed model becomes new feature maps for expediting small objects detection.|$|R
40|$|The {{area covered}} by a 3 D <b>bounding</b> <b>box</b> after {{projection}} onto the screen is relevant for view-dependent algorithms in real-time and photorealistic rendering. We describe a fast method to compute the accurate 2 D area of a 3 D oriented <b>bounding</b> <b>box,</b> and show {{how it can be}} computed equally fast or faster than its approximation with a 2 D <b>bounding</b> <b>box</b> enclosing the projected 3 D <b>bounding</b> <b>box.</b> 1. Introduction Computer graphics algorithms using heuristics, like level of detail (LOD) selection algorithms, make it sometimes necessary to estimate the area an object covers on the screen after perspective projection [1]. Doing this exactly would require fist drawing the object and then counting the covered pixels, which is quite infeasible for real-time applications. Instead, oftentimes a <b>bounding</b> <b>box</b> (bbox) is used as a rough estimate: The bbox of the object is projected to the screen, and its size is taken. Another application area are view-dependent hierarchical radiosity algorithms, where a f [...] ...|$|R
3000|$|We can {{extract the}} <b>bounding</b> <b>box</b> {{of the object}} in the {{surveillance}} video, using the background subtraction method of adaptive Gaussian mixture model [16, 17]. The <b>bounding</b> <b>box</b> {{is referred to as}} an object region. We transform the object region from [...]...|$|R
30|$|These {{two steps}} in the processing, barely, take into account {{specific}} features of pedestrians; in fact, only symmetrical and size considerations are used to compute the list of <b>bounding</b> <b>boxes.</b> Therefore, independent validation modules are {{used to evaluate the}} presence of human shapes inside the <b>bounding</b> <b>boxes.</b> These stages exploit specific pedestrian characteristics to discard false positives from the list of <b>bounding</b> <b>boxes.</b> In the following paragraphs the two validators shown as bold in Figure 2 are described and detailed.|$|R
30|$|In this paper, {{we propose}} an {{alternative}} method to propagate <b>bounding</b> <b>box</b> annotations between key frames. For that reason, we will analyze here {{the most popular}} software packages for video annotation at the <b>bounding</b> <b>box</b> level, focusing on the propagation algorithms proposed in each.|$|R
30|$|CUHK 03 {{database}} [20] includes 14, 097 {{images of}} 1467 identities which is captured by six cameras over {{months in the}} Chinese University of Hong Kong (CUHK) campus. Each pedestrian is observed by two disjoint camera views and has an average of 4.8 images in each view. The database provides two kinds of <b>bounding</b> <b>boxes,</b> i.e., manually annotated <b>bounding</b> <b>boxes</b> and <b>bounding</b> <b>boxes</b> detected by DPM [25]. Since DPM {{is closer to the}} realistic setting, we evaluate the proposed DFBP on the <b>bounding</b> <b>box</b> detected by DMP. We separate the database into training data including 1367 pedestrians and test data including 100 pedestrians. This partitioning is independently implemented 10 times, and the average is reported. We evaluate the proposed DFBP by the single-query setting and multiple-query setting.|$|R
40|$|It is {{sometimes}} {{necessary to determine}} the optimal value for a direction dependent quantity. Using a search technique based on Powell's quadratic convergent method such an optimal direction can be approximated. The necessary geometric transformations in n-dimensional space are introduced. As an example we consider the approximation of the minimum <b>bounding</b> <b>box</b> {{of a set of}} three-dimensional points. Minimum <b>bounding</b> <b>boxes</b> can significantly improve accuracy and efficiency of the calculations in modern brachytherapy treatment planning of the volumes of objects or the dose distribution inside an object. A covariance matrix based approximation method for the minimum <b>bounding</b> <b>box</b> is compared with the results of the search method. The benefits of the use of optimal oriented <b>bounding</b> <b>boxes</b> in brachytherapy treatment planning systems are demonstrated and discussed...|$|R
30|$|The {{algorithm}} proposed {{is compared}} with other <b>bounding</b> <b>box</b> interpolation methods described in the literature, using a set of selected videos modeling different types of object and camera motion. Experiments show that {{the accuracy of the}} interpolated <b>bounding</b> <b>boxes</b> is higher than the accuracy of the other evaluated methods, especially when considering rigid objects. The main goal of this paper is related with the <b>bounding</b> <b>box</b> interpolation step, and we believe that our design can be integrated seamlessly with any annotation tool already developed.|$|R
40|$|Abstract. Deep {{convolutional}} {{neural networks}} are currently applied to computer vision tasks, especially object detection. Due {{to the large}} di-mensionality of the output space, four dimensions per <b>bounding</b> <b>box</b> of an object, classification techniques do not apply easily. We propose to adapt a structured loss function for neural network training which di-rectly maximizes overlap of the prediction with ground truth <b>bounding</b> <b>boxes.</b> We show how this structured loss can be implemented efficiently, and demonstrate <b>bounding</b> <b>box</b> prediction {{on two of the}} Pascal VOC 2007 classes...|$|R
30|$|We tested {{unsupervised}} classification on both databases using feature F 1. Mirroring the experimental validation in [12], we considered a 27 -frame sequence {{for each of}} the Weizmann videos, and a 17 -frame sequence for KTH videos. We used the same <b>bounding</b> <b>box</b> data as in [12]. In particular, in the Weizmann dataset the fixed-size <b>bounding</b> <b>boxes</b> can be trivially extracted by considering a simple background subtraction algorithm. In the more challenging KTH dataset, <b>bounding</b> <b>boxes</b> for all frames are linearly interpolated from known initial and final positions.|$|R
40|$|Few {{geospatial}} data representations are more basic than the bounding box; a rectangle surrounding a geographic feature or dataset. <b>Bounding</b> <b>boxes</b> {{are a key}} component of geospatial metadata and {{lie at the heart of}} many computational geometry algorithms as well as spatial indexing systems. Despite their ubiquity and common use, <b>bounding</b> <b>boxes</b> are more complicated than they first appear. The phrase that ?spatial is special? applies to this humble representation as well as to more sophisticated geospatial representations. This paper explores the nuances of correctly understanding, using, and interpreting <b>bounding</b> <b>boxes...</b>|$|R
