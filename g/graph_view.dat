55|369|Public
40|$|Advanced {{technical}} applications like routing {{systems or}} electrical network management systems introduce {{the need for}} complex manipulations of large size graphs. Efficiently supporting this requirement is now regarded as a key feature of future database systems. This paper proposes an abstraction mechanism, called Database <b>Graph</b> <b>View,</b> to define and manipulate various kinds of graphs stored in either relational, object oriented or file systems. A database <b>graph</b> <b>view</b> provides a functional definition of a graph which allows its manipulation independently of its physical organization. Derivation operators are proposed to define new graph views upon existing ones. These operators permit the composition, in a single <b>graph</b> <b>view,</b> of graphs having different node and edge types and different implementations. The <b>graph</b> <b>view</b> mechanism comes with an execution model where both set-oriented and pipelined execution of graph operators can be expressed. The <b>graph</b> <b>view</b> operators form a library which can be integrated in database systems or applications managing persistent data with no repercussion on the data organization. ...|$|E
40|$|Ontology is {{important}} in sharing and reusing knowledge. It also {{plays a crucial role}} in the development of Semantic Web. The paper discusses the DL(Description Logic) and <b>graph</b> <b>view</b> on ontology. Different perspectives have different models and approaches on ontology mapping. The paper presents how the two different approaches handle ontology mapping, respectively. We argue that a combination of the two views can lead to a better solution in ontology mapping...|$|E
40|$|A {{wealth of}} {{information}} has recently become available as browsable RDF data on the Web, but the selection of client applications to interact with this Linked Data remains limited. We show how to browse Linked Data with FenÂ¿re, a Free and Open Source Software RDF browser and editor that employs a <b>graph</b> <b>view</b> and focuses on an engaging and interactive browsing experience. This sets FenÂ¿re apart from previous table- and outline-based Linked Data browsers...|$|E
40|$|Abstract: This {{paper is}} the {{following}} up of our work on coassociativity breaking and oriented graphs. Firstly, we show that there exists a left-structure on Slq(2) {{which is also a}} Hopf algebra and which is entangled by the coassociativity breaking equation to the usual one. Secondly, we show that the n 2 -De Bruijn oriented <b>graphs,</b> <b>viewed</b> as Markov co-dialgebras, can be paved by n oriented <b>graphs,</b> <b>viewed</b> as coassociative coalgebras. ...|$|R
40|$|A data {{warehouse}} collects and maintains integrated information from heterogeneous data sources for OLAP and decision support. An important task in {{data warehouse}} design is {{the selection of}} views to materialize, {{in order to minimize}} the response time and maintenance cost of generalized project-select-join (GPSJ) queries. We discuss how to construct GPSJ <b>view</b> <b>graphs.</b> GPSJ <b>view</b> <b>graphs</b> are directed acyclic graphs, used to compactly encode and represent different possible ways of evaluating a set of GPSJ queries. Our <b>view</b> <b>graph</b> construction algorithm, GPSJVIEWGRAPHBUILDER, incrementally constructs GPSJ <b>view</b> <b>graphs</b> based on a set of merge rules. We provide a set of merging rules to construct GPSJ <b>view</b> <b>graphs</b> in the presence of duplicate sensitive and insensitive aggregates. The merging algorithm used in GPSJVIEWGRAPH-BUILDER ensures that each node is correctly added to the <b>view</b> <b>graph,</b> and employs the merge rules to ensure that relationships between nodes from different queries are incorporated into the <b>view</b> <b>graph...</b>|$|R
5000|$|Histogramming and <b>graphing</b> to <b>view</b> {{and analyze}} {{distributions}} and functions, ...|$|R
40|$|International audienceWe {{introduce}} the Convex Circuit-Free coloration and Convex Circuit-Free chromatic numberView the MathML source of an oriented <b>graph</b> <b>View</b> the MathML source and establish various basic results. We {{show that the}} problem of deciding if an oriented graph verifies View the MathML source is NP-complete if k≥ 3, and polynomial if k≤ 2. We introduce an algorithm which finds the optimal convex circuit-free coloration for tournaments, and characterize the tournaments that are vertex-critical for the convex circuit-free coloration...|$|E
40|$|International audienceThis paper {{proposes a}} generic cost {{framework}} for query optimization in an XML-based mediation system called XLive, which integrates distributed, heterogeneous and autonomous data sources. Our approach relies on cost annotation on an XQuery logical representation called Tree <b>Graph</b> <b>View</b> (TGV). A generic cost communication language {{is used to}} give an XML-based uniform format for cost communication within the XLive system. This cost framework is suitable for various search strategies to choose the best execution plan {{for the sake of}} minimizing the execution cost...|$|E
40|$|Let Kless-than-or-equals, slantGless-than-or-equals, slantAut(K), where K {{is one of}} the 26 {{sporadic}} finite simple groups, and let tset membership, variantG be an involution and X=tG. The commuting involution <b>graph</b> <b>View</b> the MathML source has X as its vertex {{set with}} two distinct elements of X joined by an edge whenever they commute in G. For most of the sporadic simple groups, we compute the diameter of View the MathML source and give detailed information about the elements at a given distance from a fixed involution t...|$|E
40|$|Abstract. Although the Linked Data {{paradigm}} is extremely popular, {{and there is}} immense amount of Linked Open Data available worldwide, the human ex-ploration of these datasets is limited. In our work we try to evolve a generic platform called LODmilla for exploring and editing Linked Open Data. Our aim is to enable the extraction and sharing of data associations (or information) hid-den in Linked Open Data. LODmilla is an open web application supporting <b>graph</b> <b>views,</b> <b>graph</b> searching and many other commodity features for surfing over Linked Data...|$|R
40|$|We {{show that}} the problem of the {{existence}} of universal graphs with specified forbidden subgraphs can be systematically reduced to certain critical cases by a simple pruning technique which simplifies the underlying structure of the forbidden <b>graphs,</b> <b>viewed</b> as trees of blocks. As an application, we characterize the trees T for which a universal countable T-free graph exists...|$|R
40|$|We {{describe}} three weight systems {{arising from}} the intersection graphs of chord diagrams (also known as circle graphs). These derive from the determinant and rank of the adjacency matrix of the <b>graph,</b> <b>viewed</b> over Z 2, and from the rank of a ”marked” adjacency matrix. We show that these weight systems are exactly those given by the Conway, HOMFLYPT and Kauffman polynomials, respectively...|$|R
40|$|Abstract. Model transformations are pivotal {{artifacts}} in model-driven software projects. As with any software product, maintenance significantly {{contributes to the}} lifecycle costs. This is particularly true for model transformations. We present Transformation Analysis, a tool that supplements existing transformation editors under Eclipse with a <b>graph</b> <b>view</b> on the program’s data and control dependencies. The tool {{has been designed to}} extract and deliver select information to maintainers to help them understand behavior and locate relevant code quicker. To accomplish this goal, the integrated view is interactively navigable and offers preconfigured filter criteria. ...|$|E
40|$|This paper {{describes}} {{the implementation of}} external memory single-pair and single-source path algorithms in a database context, callable from SQL as table functions. The algorithms used are based on Jing, Huang and Rundensteiner's HEPV approach [4] and Chan and Zhang's diskSP algorithm [1]. Both use some degree of precomputation to accelerate path processing. Our implementations of these algorithms are evaluated with particular reference to response time, storage requirements and shortestpath optimality. We test using road system data from the Tiger/Line files [6], stored in relational database tables that support a <b>graph</b> <b>view</b> over the data. ...|$|E
40|$|How to {{efficiently}} process queries in an heterogeneous {{and distributed}} data integration environment {{is an interesting}} and unsolved topic. Our research project proposes an approach for providing a generic cost framework for query optimization in an XML-based mediation system called XLive, which integrates heterogeneous data sources. Our approach relies on cost annotation on an XQuery logical representation called Tree <b>Graph</b> <b>View</b> (TGV). A generic language is used to define an XML-based uniform format for cost communication within the XLive system. This cost framework is suitable for various search strategies to choose the best execution plan for minimizing the execution cost...|$|E
50|$|In the 2D and 3D <b>graph</b> <b>views,</b> {{functions}} can {{evaluated and}} plotted. Currently KAlgebra only supports 3D graphs explicitly dependent {{only on the}} x and y. Both views support defining the viewpoint. The user can hover their cursor over a line and find the exact X and Y values for 2D graphs, as well as create a live tangent line.|$|R
40|$|We {{introduce}} {{the notion of}} an asymptotic triangulation of the annulus. We show that asymptotic triangulations can be mutated as the usual triangulations and describe their exchange <b>graph.</b> <b>Viewing</b> asymptotic triangulations as limits of triangulations under the action of the mapping class group, we compactify the exchange graph of the triangulations of the annulus. The cases of tubes are also considered. Comment: 14 page...|$|R
40|$|Nowadays, graph {{databases}} {{are employed}} when relationships between entities {{are in the}} scope of database queries to avoid performance-critical join operations of relational databases. Graph queries are used to query and modify graphs stored in graph databases. Graph queries employ graph pattern matching that is NP-complete for subgraph isomorphism. <b>Graph</b> database <b>views</b> can be employed that keep ready answers in terms of precalculated graph pattern matches for often stated and complex graph queries to increase query performance. However, such <b>graph</b> database <b>views</b> must be kept consistent with the graphs stored in the graph database. In this paper, we describe how to use incremental graph pattern matching as technique for maintaining <b>graph</b> database <b>views.</b> We present an incremental maintenance algorithm for <b>graph</b> database <b>views,</b> which works for imperatively and declaratively specified graph queries. The evaluation shows that our maintenance algorithm scales {{when the number of}} nodes and edges stored in the graph database increases. Furthermore, our evaluation shows that our approach can outperform existing approaches for the incremental maintenance of graph query results. Comment: In Proceedings GaM 2016, arXiv: 1612. 0105...|$|R
40|$|We have {{investigated}} path query algorithms which can provide efficient retrieval of paths in graph views of relational data. One advantage of supporting such a <b>graph</b> <b>view</b> {{is that it}} has the potential to support queries of the form “what is the relationship between object A and object B?”. Such path queries are not possible with a conventional relational design, but if supported would enable knowledge extraction from the data. We describe the path query algorithm we have implemented, and report the results of testing the algorithm on a graph of biological data of over 700000 nodes and 800000 edges...|$|E
40|$|We {{propose a}} new style of writing graph {{algorithms}} in functional languages {{which is based on}} an alternative view of graphs as inductively defined data types. We show how this graph model can be implemented efficiently, and then we demonstrate how graph algorithms can be succinctly given by recursive function definitions based on the inductive <b>graph</b> <b>view.</b> We also regard this as a contribution to the teaching of algorithms and data structures in functional languages since we can use the functional-style graph algorithms instead of the imperative algorithms that are dominant today. Keywords: Graphs in Functional Languages, Recursive Graph Algorithms, Teaching Graph Algorithms in Functional Language...|$|E
40|$|The SHriMP (Simple Hierarchical Multi-Perspective) {{visualization}} {{technique was}} designed to enhance how people browse and explore complex information spaces. SHriMP uses a nested <b>graph</b> <b>view</b> to present information that is hierarchically structured. It introduces the concept of nested interchangeable views to allow a user to explore multiple perspectives of information {{at different levels of}} abstraction. SHriMP combines a hypertext following metaphor with animated panning and zooming motions over the nested graph to provide continuous orientation and contextual cues for the user. In this demo, we show how these ideas are proving useful in the areas of software visualization, knowledge management and flow diagram visualization...|$|E
40|$|Part 3 : StorageInternational audienceA {{growing number}} of {{applications}} store and analyze graph-structured data. These applications impose challenging infrastructure demands due to a need for scalable, high-throughput, and low-latency graph processing. Existing state-of-the-art storage systems and data processing systems are limited {{in at least one}} of these dimensions, and simply layering these technologies is inadequate. We present Concerto, a graph store based on distributed, in-memory data structures. In addition to enabling efficient graph traversals by co-locating graph nodes and associated edges where possible, Concerto provides transactional updates while scaling to hundreds of nodes. Concerto introduces <b>graph</b> <b>views</b> to denote sub-graphs on which user-defined functions can be invoked. Using <b>graph</b> <b>views,</b> programmers can perform event-driven analysis and dynamically optimize application performance. Our results show that Concerto is significantly faster than in-memory MySQL, in-memory Neo 4 j, and GemFire for graph insertions as well as graph queries. We demonstrate the utility of Concerto’s features in the design of two real-world applications: real-time incident impact analysis on a road network and targeted advertising in a social network...|$|R
40|$|Abstract: We {{show that}} there exists a left-structure on Slq(2) and on SUq(2) {{which is also a}} coassociative coalgebra and which is {{entangled}} by the coassociativity breaking equation to the usual one. Moreover we yield an infinity of examples of dialgebras and we show that the geometric support of some Markov co-dialgebras, called the (n 2, 1) -De Bruijn graph can be tiled by directed <b>graphs,</b> <b>viewed</b> as geometric supports of coassociative coalgebras. ...|$|R
30|$|We noticed that, in the Resources view, the {{information}} is often too condensed. For instance, if several processes are using the CPUs, it can become tedious to distinguish them. Therefore, this situation is worse in the FVS view, because more layers come into play. For this reason, we developed a new filter system in Trace Compass that allows developers of time <b>graph</b> <b>views</b> to highlight any part of their view, depending on information contained in their data model.|$|R
40|$|Rexplore {{is a novel}} {{system that}} {{integrates}} semantic technologies, data mining techniques, and visual analytics to provide an innovative environment for making sense of scholarly data. Its functionalities include: i) a variety of views {{to make sense of}} important trends in research; ii) a novel semantic approach for characterising research topics; iii) a very fine-grained expert search with detailed multi-dimensional parameters; iv) an innovative <b>graph</b> <b>view</b> to relate a variety of academic entities; iv) the ability to detect and explore the main communities within a research topic; v) the ability to analyse research performance at different levels of abstraction, including individual researchers, organizations, countries, and research communities...|$|E
40|$|International audienceTree Pattern Queries[sihem 2002,jagadish 2001] are {{now well}} {{admitted}} for modeling parts of XML Queries. Actual works only {{focus on a}} small subpart of XQuery specifications and are not well adapted for evaluation in a distributed heterogeneous environment. In this paper, we propose the TGV (Tree <b>Graph</b> <b>View)</b> model for XQuery processing. The TGV model extends the Tree Pattern representation {{in order to make}} it intuitive, has support for full untyped-XQuery queries, and for optimization and evaluation. Several types of Tree Pattern are manipulated to handle all XQuery requirements. Links between Tree Patterns are called hyperlinks in order to apply transformations on results. The TGV has been implemented in a mediator system called XLive...|$|E
40|$|R. Häggkvist {{proved that}} every 3 -regular bipartite graph of order 2 n with no {{component}} isomorphic to the Heawood graph decomposes the complete bipartite graph K 6 n, 6 n. In (Cichacz and Fronček, 2009) [2] {{the first two}} authors established a necessary and sufficient condition {{for the existence of}} a factorization of the complete bipartite graph Kn,n into certain families of 3 -regular graphs of order 2 n. In this paper we tackle the problem of decompositions of Kn,n into certain 3 -regular graphs called generalized prisms. We will show that certain families of 3 -regular graphs of order 2 n decompose the complete bipartite <b>graph</b> <b>View</b> the MathML source. Web of Science 34111010...|$|E
40|$|In a graph {{structure}} G = (V, E 1, E 2 … Ek), {{the capacity}} of a vertex c(v) {{is the number of}} different Ei edges incident at v. In this paper, we have made an attempt to answer the problem of examining the graph structures for which sum of vertex capacities is equal to sum of number of relations and the number of edges in the structure for some families of <b>graphs</b> <b>viewed</b> as <b>graph</b> structures...|$|R
40|$|The <b>viewing</b> <b>graph</b> {{represents}} {{a set of}} views that are re-lated by pairwise relative geometries. In the context of Structure-from-Motion (SfM), the <b>viewing</b> <b>graph</b> is the in-put to the incremental or global estimation pipeline. Much effort has been put towards developing robust algorithms to overcome potentially inaccurate relative geometries in the <b>viewing</b> <b>graph</b> during SfM. In this paper, we take a fun-damentally different approach to SfM and instead focus on {{improving the quality of}} the <b>viewing</b> <b>graph</b> before apply-ing SfM. Our main contribution is a novel optimization that improves the quality of the relative geometries in the view-ing graph by enforcing loop consistency constraints with the epipolar point transfer. We show that this optimization greatly improves the accuracy of relative poses in the view-ing graph and removes the need for filtering steps or robust algorithms typically used in global SfM methods. In addi-tion, the optimized <b>viewing</b> <b>graph</b> can be used to efficiently calibrate cameras at scale. We combine our <b>viewing</b> <b>graph</b> optimization and focal length calibration into a global SfM pipeline that is more efficient than existing approaches. To our knowledge, ours is the first global SfM pipeline capable of handling uncalibrated image sets. 1...|$|R
40|$|Qualification work "Graph dynamic Visualization" {{describes}} the graph dynamic {{and development of}} display tool. Tool is designed to represent the changes in graph on a timeline. This allows the user to visually create the graph, change it and create <b>views,</b> saving all <b>graph</b> changes, and fetch information on the displayed <b>graph</b> <b>views</b> of the files. The tool is created in programming languageJava. The development is fully documented, including the requirement specification, design and testing. Keywords: graphs, dynamic graphs, graph display, Java...|$|R
40|$|Abstract. Extending {{relational}} database functionality to include data mining primitives is one step towards the greater goal of more closely integrated database and mining systems. This paper describes one such extension, where database technology {{is used to}} implement path queries over a <b>graph</b> <b>view</b> of relational data. Partial-path information is pre-computed and stored in a compressed binary format in an SQL data type. Path querying is implemented using SQL table functions, thus enabling the retrieved path tables to be manipulated within SQL queries {{in the same way}} as standard relational tables. The functions are evaluated with particular reference to response time, storage requirements and shortest-path optimality, using road system data representing relationships between over 2. 8 million entities. ...|$|E
40|$|Visualizing {{large-scale}} online {{social network}} is a challenging yet essential task. This paper presents HiMap, {{a system that}} visualizes it by clustered graph via hierarchical grouping and summarization. HiMap employs a novel adaptive data loading technique to accurately control the visual density of each <b>graph</b> <b>view,</b> and along with the optimized layout algorithm and the two kinds of edge bundling methods, to effectively avoid the visual clutter commonly found in previous social network visualization tools. HiMap also provides an integrated suite of interactions to allow the users to easily navigate the social map with smooth and coherent view transitions to keep their momentum. Finally, we confirm the effectiveness of HiMap algorithms through graph-travesal based evaluations...|$|E
40|$|The United States Geological Survey (USGS) and the Pacific Northwest Geodetic Array (PANGA) at Central Washington University monitor {{real-time}} GPS measurements {{along the}} Cascadia Subduction Zone. This data {{is critical for}} researching and monitoring earthquake activity. Hundreds of monitoring stations throughout the Pacific Northwest collect this data. Previously, only a few minutes’ worth of data was viewable at a time. Our team developed software for observing, virtually, shifts in the earth’s plates in up to 24 -hour time intervals. This application provides {{a map of the}} GPS monitoring stations from which the PANGA team streams live data, along with a <b>graph</b> <b>view</b> to monitor the streaming movement. Additionally, the application runs independently on each user’s system while minimizing the amount of necessary memory space during its execution...|$|E
40|$|We {{describe}} {{a tool that}} enables users to record and visualise runtime behaviour of software applications developed in Java. The execution trace, stored {{in the form of}} an XML file is visualized using 3 D call graphs that are an extension of the Cone Tree information visualisation technique. This tool gives the user the ability to create several call <b>graph</b> <b>views</b> from a program’s execution trace, providing additional representations of the program execution to both novice and expert programmers for the purposes of program execution analysis. ...|$|R
40|$|Abstract. <b>Graphs,</b> <b>viewed</b> as {{one-dimensional}} simplicial complexes, can {{be given}} harmonic structures satisfying the Brelot axioms. In this paper, we describe all possible harmonic structures on graphs. We determine those har-monic structures which induce discrete harmonic structures when restricted to the set of vertices. Conversely, given a discrete harmonic structure {{on the set of}} vertices and an arbitrarily prescribed harmonic structure on each edge, we determine when these structures yield a harmonic structure on the graph. In addition, we provide a variety of interesting examples. 1...|$|R
5000|$|The lemma {{asserts that}} the number of regions is maximal if all [...] "inner" [...] {{intersection}}s of chords are simple (exactly two chords pass through each point of intersection in the interior). This will be the case if the points on the circle are chosen [...] "in general position". Under this assumption of [...] "generic intersection", the number of regions can also be determined in a non-inductive way, using the formula for the Euler characteristic of a connected planar <b>graph</b> (<b>viewed</b> here as a graph embedded in the 2-sphere S 2).|$|R
