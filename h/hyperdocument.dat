85|51|Public
5|$|At Tymshare, Engelbart {{soon found}} himself marginalized and relegated to obscurity. Operational {{concerns}} at Tymshare overrode Engelbart's {{desire to do}} further research. Various executives, first at Tymshare and later at McDonnell Douglas, which acquired Tymshare in 1984, expressed interest in his ideas, but never committed the funds or the people to further develop them. His interest inside of McDonnell Douglas {{was focused on the}} enormous knowledge management and IT requirements involved in the life cycle of an aerospace program, which served to strengthen Engelbart's resolve to motivate the information technology arena toward global interoperability and an open <b>hyperdocument</b> system. Engelbart retired from McDonnell Douglas in 1986, determined to pursue his work free from commercial pressure.|$|E
40|$|This article {{represents}} {{the making of}} a digital pedagogical material, more specifically, a <b>hyperdocument.</b> It shows a concept model, a navigation model and, the set up of a <b>hyperdocument.</b> It gives the concept of the navigation routes once these are directly linked with the aim of learning. Also, it describes a comparison of the navigation context of a <b>hyperdocument</b> to the pedagogical working method. Finally, it shows the set up of a project of a <b>hyperdocument</b> which has didactic goals and is used as support for the learning process about the great navigations: The way to India. Making a <b>hyperdocument,</b> pedagogically aimed, means create and develop ways that make the student interact actively with the technology in order to generate learning...|$|E
40|$|The Computers Architecture <b>hyperdocument</b> was {{developed}} to support students learning. It has two main parts: the first one, the initiation level, focuses on computers architecture contents, and the second one, the advanced level, is organised according to Cognitive Flexibility Theory. This paper presents Cognitive Flexibility Theory and its application to the <b>hyperdocument</b> Computers Architecture. Then, it describes the <b>hyperdocument</b> and the usability tests conducted...|$|E
40|$|Describes how {{the authors}} applied an XSLT engine (4 Suite’s Python <b>hyperdocuments</b> managed by a generic link {{management}} system developed by DataChannel. This implementation experience demonstrates {{that it is}} both easy and useful to bind XSL processing not business objects, in this case, abstract <b>hyperdocuments.</b> Discusses the grove- and hyperlinking-specific XSL and XPath extensions created, how XPath expressions were bound to groves and <b>hyperdocuments,</b> and {{the details of how}} the implementation was accomplished. Discusses possible future directions and potentials. Provides samples of working <b>hyperdocuments,</b> style sheets, and the resulting output...|$|R
40|$|In {{this paper}} {{attention}} {{is drawn to}} the rapidly increasing use of <b>hyperdocuments</b> to archive and access environmental data resources, and the spatial extensions required to explore and link together these data sets are discussed. To illustrate how such environmental hyper documents can be created, a prototype system called the Scolt Multimedia Project (SMP) is introduced and the tool used to explore it, called SMPviewer, is described. Also, the uses and applications of environmental <b>hyperdocuments</b> are presented and their merits vis-�-vis geographical information systems are discussed. ...|$|R
40|$|To {{improve the}} {{readability}} of <b>hyperdocuments,</b> {{it is not}} sufficient to concentrate on navigation without supporting comprehension. Focusing on this widely neglected issue in hypertext research, interface design has to reduce the mental effort for comprehension which depends on the coherence and the mental workload required from the reader for concurrent activities such as navigation and orientation. Facilitating comprehension of <b>hyperdocuments</b> can be accomplished by coping with three issues: how to impose a coherent structure on the document, how to convey that structure to the reader, and how to support navigation and orientation. In this paper, we describe an approach which specifies these general issues for designing hypertext interfaces in more detail. Based on the resulting comprehensive issue structure, we describe SPI [...] a reader interface which demonstrates the close relationship between special design elements for structuring <b>hyperdocuments</b> and their presentation on the screen [...] . ...|$|R
40|$| <b>hyperdocument</b> and the {{usability}} tests conducted...|$|E
40|$| <b>hyperdocument</b> Computers Architecture. Then, it {{describes}} the|$|E
40|$|The Computers Architecture <b>hyperdocument</b> was {{developed}} to support|$|E
40|$|This paper {{addresses}} {{the issue of}} how <b>hyperdocuments,</b> accessible via electronic books (E-books) which are read using the World Wide Web, can be endowed with features that enable the personalisation of the interaction process that takes place between the reader and the E-book itself. We introduce a novel, abstract approach to modelling the personalisation of <b>hyperdocuments.</b> This approach aims to make available to readers, features that allow them to interact with these documents in a manner much closer to that of owners of paper-based ones. This research is based upon a formal characterisation of personalisable hyperlink-based interaction. This characterisation is unique in formally modelling a rich set of user-initiated personalisation actions that allow users to come closer to satisfying their specific, often dynamic, information retrieval goals...|$|R
40|$|We {{propose a}} very usual {{software}} engineering {{approach to the}} development of hyperlink structures which form the basis for navigation in <b>hyperdocuments.</b> Our approach uses standard UML, algebraic specification and object-oriented implementation to cover the construction of hyperlink structures, from design through to specification and realization...|$|R
40|$|The Multimedia Information Presentation System (MIPS) {{will allow}} {{end-users}} to browse multimedia information {{presented in a}} user-friendly and consistent manner. In its most powerful configuration, it will allow the end-user to formulate queries which are interpreted, analysed, and despatched by the system to heterogeneous distributed external data sources, and to view a coherent and customized presentation of the data retrieved as answers. Data are stored in, or referenced from, a set of <b>hyperdocuments</b> conforming to the ISO standards HyTime and SGML. The <b>hyperdocuments</b> constitute an information web which may be dynamically expanded to accommodate retrieved data. The web navigation structure, structure of information nodes, specification of presentation mechanisms, specification of presentation tools, and data are separable and potentially reusable for different applications, different activities within an application, or different environments. We outline the intended functionality and [...] ...|$|R
40|$|The HySCharts {{environment}} (<b>Hyperdocument</b> System Based on StateCharts) {{supports the}} formal specification of hyperdocuments using a novel formalism called HMBS (<b>Hyperdocument</b> Model Based on Statecharts). This paper presents the HySCharts system architecture, {{with emphasis on}} its underlying model and on the functionality of its authoring and browsing modules. HMBS is a statechart-based, navigation-oriented model for <b>hyperdocument</b> specification that uses the structure and execution semantics of statecharts to specify both the structural organization and the browsing semantics of a <b>hyperdocument.</b> The formal definition of HMBS and its associated browsing semantics are introduced. A discussion {{of the system and}} its capabilities, as supported by the model, is also provided. Keywords: hypermedia system, hypermedia model, statecharts, HMBS, hierarchical views, HySCharts. 1. Introduction As software products, hypermedia applications and hyperdocuments can greatly benefit from models and meth [...] ...|$|E
40|$|The {{purpose of}} this study was to develop and {{implement}} a hypertext documentation system in an industrial laboratory and to evaluate its usefulness by participative observation and a questionnaire. Existing word-processing test method documentation was converted directly into a hypertext format or "hyperdocument. " The <b>hyperdocument</b> was designed and structured according to principals found in the literature of hypertext. It was evaluated for three months in a chemical plant quality assurance laboratory where 16 people were employed who used the <b>hyperdocument.</b> The <b>hyperdocument</b> was made available for use, but the laboratory's paper documentation was still available. Observations, discussions, and a questionnaire were used to collect the data. Participants tended to like the <b>hyperdocument,</b> they found it easy to learn how to operate, easy to use, and most said it was useful. They tended, however, to use it infrequently. <b>Hyperdocument</b> maintenance was found to be somewhat time consuming, but not unreasonably difficult. It was concluded, therefore, that: (1) the design and structuring principals given in hypertext literature led to an easy-to-use product; (2) maintenance was not too difficult; and (3) the <b>hyperdocument</b> was a useful and effective tool for documenting test methods in a laboratory. A copy of the evaluation questionnaire is included. (Contains 26 references.) (Author/TMK) Reproductions supplied by EDRS are the best that can be made from the original document...|$|E
40|$|The {{purpose of}} Doug Engelbart's Open <b>Hyperdocument</b> System (OHS) is to enable {{applications}} to implement sophisticated hyperlinking functionality in an interoperable manner. In {{order to achieve}} this, {{there must be a}} standard architecture for representing hyperdocuments. Experience suggests that such an architecture be based on a graph-based data model, consisting of nodes with properties and typed links. In this paper, we briefly introduce the OHS, and explain the advantages of a graph-based data model, exploring the notion of a <b>hyperdocument.</b> Using a threaded forum discussion as an example, we show how to represent a <b>hyperdocument</b> using a graph-based data model, and ho...|$|E
40|$|Abstract 1 In this paper, {{we shall}} attempt {{to justify the}} need for an {{evolving}} conception of hypermedia systems and its formalisation. We propose graph theory, predicate logic, temporal logic and Petri nets to support evolution in hypermedia systems. A semantic-dynamic model based on these formalisms is presented. It provides a complete, adaptive and evolving control of development and maintenance of <b>hyperdocuments</b> and an understandable navigation. 1...|$|R
40|$|This paper {{addresses}} the principles suggested by Cognitive Flexibility Theory to represent knowledge in such away that {{the acquisition of}} advanced knowledge in complex and ill-structured domains is facilitated and cognitive flexibility is developed. Moreover, we describe the Cognitive Flexibility Theory, its assumptions, recommendations and the <b>hyperdocuments</b> developed following its principles. We conclude by commenting the theory based on the studies {{carried out by the}} author...|$|R
40|$|In {{this chapter}} {{we argue that}} <b>hyperdocuments</b> {{administered}} bydigital libraries have to be structured according to standardized storage and exchange formats {{in order to allow}} for the manipulation functionality required in digital library construction, maintenance and use. We demonstrate how SGML and its extension, HyTime, can play this structuring role, and howmultimedia documents structured accordingly can be stored, changed and maintained in the object-oriented database system VODAK. Using th...|$|R
40|$|Hyperdocuments present special {{requirements}} for integration with lifecycle and versioning systems. These requirements {{can best be}} summarized as "versioned linking", something not addressed by merely versioning the storage objects involved. The overriding challenge in versioned linking is resolving the correct version {{at the end of}} a link [...] where "correct " is defined by arbitrary business policy. This challenge can be addressed by 1) being able to precisely model a versioned <b>hyperdocument</b> system and 2) having rich enough versioning semantics to support the desired business policy. SnapCM is a versioning model that provides clear version and version-aware reference semantics that can be used to satisfy both of these needs. This paper presents three models that build on each other. The first is a partial object model for hyperdocuments. This first model isn't a complete <b>hyperdocument</b> model, but rather contains only the types and specification necessary to support the two models that follow. The second model defines a versioned <b>hyperdocument</b> model by extending both the first model and SnapCM. The third model extends the versioned <b>hyperdocument</b> model to include specifications for RTDs (Referent Tracking Documents). These models enable us to satisfy both of the versioned linking challenges. They provide well-defined support for <b>hyperdocument</b> lifecycle systems by describing a coherent object model to describe both the <b>hyperdocument</b> and SnapCM versioning domains. These models also provide rich business policy support based on SnapCM's ResolutionPolicy semantics...|$|E
40|$|Most {{hypertext}} systems used in {{the field}} embed some form of mark-up in each <b>hyperdocument</b> in order to represent the hypertext structure. Indeed, more generally, most document preparation systems use this approach. Hypertext researchers, on the other hand, say that {{the structure of a}} <b>hyperdocument</b> should be separate from its content. This paper investigates whether the two approaches, embedded v. separate, are really at odds with one another, and describes a technology for combining some of the benefits of both...|$|E
40|$|As {{hypertext}} systems proliferate and as networks {{become more}} ubiquitous, an important {{problem is to}} determine how to provide <b>hyperdocument</b> interoperability. Instead of taking the approach of standardizing, and implementing, a large and complex set of browsing features gleaned from some "union" of existing systems, we present an approach that allows each document to encode its own browsing semantics in the links of the <b>hyperdocument.</b> Any implementation offering the "follow link" operation can then simulate the intent of the author. The method requires a mental shift in how a <b>hyperdocument</b> is viewed abstractly. Instead of treating the links of a document as defining a static directed graph, they are thought of as defining an abstract program, termed the links-automaton of the document. A branching temporal logic notation, termed HTL*, is introduced for specifying properties a document should exhibit during browsing. An automated program verification technique called model checking is [...] ...|$|E
40|$|This paper {{describes}} a technique for integrating several (many) virtual hyperbooks {{in a digital}} library. We consider a virtual hyperbook model that comprises a domain ontology. By interconnecting the hyperbook's ontologies, we can create a multi-point of view ontology that {{describes a}} set of hyperbooks. A hypertext interface specification language can use this ontology to construct new semantically and narratively coherent <b>hyperdocuments</b> based {{on the content of}} several hyperbooks...|$|R
40|$|As sharing {{documents}} through theWorldWideWeb {{has been}} recently and constantly increasing, {{the need for}} creating <b>hyperdocuments</b> to make them accessible and retrievable via the internet, in formats such as HTML and SGML/XML, has also been rapidly rising. Nevertheless, only a few works have been done on the conversion of paper documents into <b>hyperdocuments.</b> Moreover, most of these studies have concentrated on the direct conversion of single-column document images that include only text and image objects. In this paper, we propose two methods for converting complex multi-column document images into HTML documents, and a method for generating a structured table of contents page based on the logical structure analysis of the document image. Experiments with various kinds of multi-column document images show that, by using the proposed methods, their corresponding HTML documents can be generated in the same visual layout {{as that of the}} document images, and their structured table of contents page can be also produced with the hierarchically ordered section titles hyperlinked to the contents. 2001 Pattern Recognition Society...|$|R
40|$|Adaptive Hypermedia Systems (AHS) can be {{regarded}} as the integration of intelligent tutoring systems and hypermedia systems. A Hypermedia System is collection of linked nodes (<b>hyperdocuments),</b> which have links through which the student can traverse to other nodes [Brusilovsky, 96], [De Bra, 98]. In Intelligent Tutoring Systems (ITS) the content or presentation is modified based on the interactions between the student and the system. ITSs incorporate artificial intelligence techniques so that th...|$|R
40|$|In {{this paper}} {{we present a}} navigation-oriented model for <b>hyperdocument</b> {{specification}} based on statecharts. The HMBS (Hypertext Model Based on Statecharts) model uses the structure and execution semantics of statecharts to specify both the structural organization and the browsing semantics of a <b>hyperdocument.</b> The formal definition of the model is presented, {{as well as its}} associated browsing semantics. A short discussion on the model's capabilities is also provided. A prototype hypertext system which implements HMBS as its underlying model for <b>hyperdocument</b> authoring and browsing is introduced, and some examples are presented that illustrate the application of the model. KEYWORDS: Hypertext Document Model, Statecharts, Browsing Semantics, HMBS, Hierarchical Views 1 INTRODUCTION Over the last few years there has been a remarkable increase in the use of hypertext technology and the WWW (World Wide Web) {{for a wide variety of}} purposes ranging from advertising and marketing to collaborati [...] ...|$|E
40|$|The {{architecture}} of hyperdocuments is described using an object-oriented approach and first order logic. The architectural description focusses on the static behavior of linkable document, {{it is based}} on persistent data the properties of which are described using mechanisms from logic programming. It is shown how to build up specialization hierarchies and generic document classes. The semantics of a <b>hyperdocument</b> is given compositionally through the semantics of its document parts. 1. Introduction A <b>hyperdocument</b> is characterized by the underlying documents and the possible order in which these documents may be perused. This suggests a separation in the specification of these two aspects: the structure of a document should be specified separately from the way the entire document may be read. Specifying the document structure and the control flow separateley, however, requires a way of linking these descriptions for a specific <b>hyperdocument,</b> hence a third component is required which li [...] ...|$|E
40|$|When users {{navigate}} through hyperdocuments {{they may}} or may not easily get lost. Many factors influence this potential problem, including the structure of the <b>hyperdocument,</b> the navigation aids offered by the hypertext system, and the spatial memory and abilities of the user. Several formal hypertext models have been defined in literature [HS 90, SF 90, L 90, BHK 92] but they do not define how to determine which hypertext structures are easy to navigate through and which are likely to cause disorientation. In [BRS 92, V 94] some metrics for hypertext structures have been defined along with suggestions for "reasonable" values for these metrics. We revisit these metrics and show that they cannot be used to measure the "ease" of browsing through a <b>hyperdocument.</b> We therefore propose navigational metrics that take into account not only the link structure of a <b>hyperdocument</b> but also the chosen starting point for a browsing session and the backtracking which virtually all hypertext systems offer. [...] ...|$|E
40|$|This {{paper was}} {{motivated}} by the strong need of preparing instructional materials in electronic support (CD-Rom and others) or its diffusion through information nets (internet), as well by the scarcity of research studies, under a constructivist view, {{in the area of}} Earth sciences. We tried to investigate whether there is a relationship between the type of hypertextual organization of information and the resulting type of learning and/or reasoning, attempting to understand which are the best solutions in terms of hypermedia documents construction. In order to support theoretically our study we used the theories of meaningful learning and cognitive flexibility. Two <b>hyperdocuments,</b> constructed with similar contents but different organization (hierarchically and in network) were applied to a sample of 31 students (14 5 o 16 years). In the construction of the <b>hyperdocuments</b> studies by Chi et al. on conceptual change were also taken into account. Research findings suggest that hierarchical hypertextual structure seems to favor subordinate and superordinate meaningful learning associated to descriptive and classificative reasonings. However, the network hipertextual structure, while favoring cognitive flexibility, might stimulate progressive differentiation and integrative reconciliation promoting combinatorial learning associated to interpretive and explicative reasonings...|$|R
40|$|In {{this paper}} we informally explain a new Trellis model that {{incorporates}} colored tokens into the previously-described timed-Petri-net-based definition. We give examples of using Trellis to define protocols for Computer Supported Cooperative Work (CSCW). We then explain an interesting analog to procedure call {{we have developed}} for subdocument invocation in collaborative <b>hyperdocuments.</b> Trellis prototype implementations are based around a client-server architecture and interpret their specifications. Consequently they provide an environment for the rapid prototyping and incremental development of multi-user distributed protocols, and for groupware based on such protocols...|$|R
40|$|The several deep {{changes that}} {{happened}} in the context of worldwide communication, especially related to the science and technology areas, resulted in an extraordinary increase in the production and exchange of information in many knowledge fields. In the history of humanity, several communication technologies were used in the development of societies, the writing process being {{one of the most important}} and, afterwards, printing press with its important changes in the documentation and transmission of knowledge. This article describes a panoramic view about knowledge transmission through the times, since the predominance of oral tradition up to the advent of <b>hyperdocuments...</b>|$|R
40|$|Browsing {{through a}} <b>hyperdocument</b> {{often leads to}} {{orientation}} problems: "you don't know where you are, you are lost in hyperspace". Although {{some of these problems}} may be diminished by specific browsing tools, such as fish-eye views and history mechanisms, most problems are embedded {{in the structure of the}} <b>hyperdocument.</b> In order to detect and analyze potential problems in the use of a <b>hyperdocument,</b> we reduce different types of browsing actions to a unified and well know formalism : the Petri net. In this paper we use the object-oriented model from [3] to describe hyperdocuments. This model, unlike other reference models [5, 6, 9], describes objects using a number of different description layers: these layers are not fixed by the model, and none of them are excluded from the model. In order to use Petri nets to describe browsing, the operations dealing with the hierarchical structure of objects (composites, towers and cities) are translated into operations that are equivalent to the sim [...] ...|$|E
40|$|Algebraic {{specification}} methods, well-known in {{the area}} of programming languages, are adapted to present a tailored framework for hyperdocuments and <b>hyperdocument</b> systems. In this framework, a <b>hyperdocument</b> is defined via its abstract syntax, which is a variablefree term of a suitable constructor-based signature. Both the representation in a markup language and the graphical presentation on the screen as well as further representations are elements of particular algebraic interpretations of the same signature. This technique allows the application of well-known methods from the field of compiler construction to the development of <b>hyperdocument</b> systems. Ideas for its implementation in the functional language Haskell are roughly drafted. It is shown how XML-based markup languages with schemas and stylesheets can be defined in terms of this framework and how this framework can be extended so that it can deal with partially specified documents, called semi documents. These semi documents can be automatically adapted to the users ’ needs, which e. g. is helpful to ensure accessibility. ...|$|E
40|$|This paper {{introduces}} XHMBS (the eXtended <b>Hyperdocument</b> Model Based on Statecharts) {{to support}} the formal specification of general hypermedia applications. XHMBS uses a novel formalism called hypercharts as its underlying model for specifying the navigational structure, browsing semantics and synchronization requirements of a <b>hyperdocument.</b> Hypercharts are statecharts extended with additional mechanisms for describing the time sequencing and information synchronization requirements typical of multimedia. The extensions incorporated into hypercharts {{are based on the}} major characteristics of some Petri net based multimedia models, and make it an alternative to such models for multimedia and hypermedia specification. XHMBS provides facilities for defining the structure of a hypermedia application in terms of nodes and links and also for describing the temporal behavior of dynamic data streams contained in nodes. The model incorporates presentation and communication channels for describing [...] ...|$|E
40|$|This paper studies {{mechanisms}} {{involved in}} {{various kinds of}} interaction in urban heritage cybertexts – grouped in navigational spaces, including computer games, databases and <b>hyperdocuments</b> – in order to reflect on {{how they can be}} improved both {{from the point of view}} of interaction. Therefore it also helps to contribute to the development of a laguage able to describe more accurately the works within the field of urban heritage digital representation. Also the production of such works is examined for improvement, especially the activity of writing the script, considering that this author is seldom involved in the programming and modeling. [Full paper in Portuguese...|$|R
40|$|This paper {{focuses on}} {{ownership}} transfer via personalisation as a value-adding strategy for advanced learning technology. It contributes {{an approach to}} endowing hyperlink-based systems (e. g., for learning) with features that enable the personalisation of the interactions between users and the system that embodies the learning material. A framework for the personalisation of <b>hyperdocuments</b> is defined that aims to make available to users of, e. g., electronic learning materials, features {{that allow them to}} interact with these documents in a manner much closer to that of owners of paper-based ones, while still benefitting from the ability to traverse contextual links and to exploit the computational environment in which the material is embedded...|$|R
40|$|Edinburgh, ScotlandDue to {{the growing}} {{complexity}} of modern hypertext applications, current hypertext systems require new mechanisms to supportauthoring and user navigation through large sets of documents connected by links. A general solution is to extend hypertextsystems to cater for semantics of application domains. This requires new hypertext models providing strongly typed documentsand links. Such models have been proposed and put to use in systems such as HDM and MacWeb to facilitate authoring of largehypertexts. In addition, Gram and MORE use typing and graph-based hypertext schemas for querying <b>hyperdocuments.</b> In thispaper, we will show how query languages could be further exploited for designing sophisticated general query-based navigationmechanisms. We illustrate our examples using the Gram model and describe an implementation with the hypermedia systemMulticard connected to the object-oriented database management system O 2...|$|R
