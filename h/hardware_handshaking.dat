10|2|Public
2500|$|The {{built-in}} display was a one-bit black-and-white, [...] CRT with a fixed {{resolution of}} 512×342 pixels, establishing the desktop publishing standard of 72 PPI. Expansion and networking were achieved using two non-standard RS-422 DE-9 serial ports named [...] "printer" [...] and [...] "modem"; {{they did not}} support <b>hardware</b> <b>handshaking.</b> An external floppy disk drive could be added using a proprietary connector (19-pin D-sub). The keyboard and mouse used simple proprietary protocols, allowing some third-party upgrades. The original keyboard had no arrow keys, numeric keypad or function keys. This was an intentional decision by Apple, as these keys were common on older platforms and {{it was thought that}} the addition of these keys would encourage software developers to simply port their existing applications to the Mac, rather than design new ones around the GUI paradigm. Later, Apple would make a numeric keypad available for the Macintosh 128K. The keyboard sold with the newer Macintosh Plus model would include the numeric keypad and arrow keys, but still no function keys. As with the Apple Lisa before it, the mouse had a single button. Standard headphones could also be connected to a monaural jack. Apple also offered their 300 and 1200bit/s modems originally released for the Apple II line. Initially, the only printer available was the Apple ImageWriter, a dot matrix printer which was designed to produce 144dpi WYSIWYG output from the Mac's 72dpi screen. Eventually, the LaserWriter and other printers were capable of being connected using AppleTalk, Apple's built-in networking system.|$|E
50|$|Lynx {{supports}} CTS/RTS <b>hardware</b> <b>handshaking.</b> This type of handshaking {{is generally}} required when using Lynx {{at high speeds}} (9600 baud or faster). Modems such as the ATI 2400etc, the USR HST 14400, and other MNP or buffered modems require this type of handshaking.|$|E
5000|$|Most of {{the pins}} from the RJ-45 plug should be {{connected}} to a normal RS-232 interface configured for an asynchronous communication mode of 9600 baud with 8 data bits, 1 stop bits and no parity. <b>Hardware</b> <b>handshaking</b> for flow control (CTS as an input to Slave) {{is not required to}} support this protocol but is recommended. The equipment jack pinout for this jack is as follows: ...|$|E
5000|$|In many {{circumstances}} a transmitter {{might be}} able to send data faster than the receiver is able to process it. To cope with this, serial lines often incorporate a [...] "handshaking" [...] method, usual distinguished between <b>hardware</b> and software <b>handshaking.</b>|$|R
5000|$|Each {{manufacturer}} {{tended to}} add new commands to handle emerging needs, often incompatible with other modems. For example, setting up <b>hardware</b> or software <b>handshaking</b> often required many different commands for different modems. This undermined the handy universality {{of the basic}} Hayes command set.|$|R
50|$|The {{simplest}} type {{of serial}} cable has no <b>hardware</b> <b>handshaking.</b> This cable has only {{the data and}} signal ground wires connected. All of the other pins have no connection. With this type of cable flow control has to be implemented in the software. The use of this cable is restricted to data-traffic only on its cross-connected Rx and Tx lines. This cable {{can also be used}} in devices that do not need or make use of modem control signals.|$|E
50|$|<b>Hardware</b> <b>handshaking</b> is {{done with}} extra signals, often the RS-232 RTS/CTS or DTR/DSR signal circuits. Generally, the RTS and CTS are turned off and on from {{alternate}} ends to control data flow, for instance when a buffer is almost full. DTR and DSR are usually {{on all the time}} and, per the RS-232 standard and its successors, are used to signal from each end that the other equipment is actually present and powered-up. However, manufacturers have over the years built many devices that implemented non-standard variations on the standard, for example, printers that use DTR as flow control.|$|E
5000|$|Software {{handshaking}} is {{done for}} example with ASCII control characters XON/XOFF to control the flow of data. The XON and XOFF characters are sent by the receiver to the sender to control when the sender will send data, that is, these characters go {{in the opposite direction}} to the data being sent. The circuit starts in the [...] "sending allowed" [...] state. When the receiver's buffers approach capacity, the receiver sends the XOFF character to tell the sender to stop sending data. Later, after the receiver has emptied its buffers, it sends an XON character to tell the sender to resume transmission. It is an example of in-band signaling, where control information is sent over the same channel as its data. The advantage of <b>hardware</b> <b>handshaking</b> is that it can be extremely fast; it doesn't impose any particular meaning such as ASCII on the transferred data; and it is stateless. Its disadvantage is that it requires more hardware and cabling, and these must be compatible at both ends. The advantage of software handshaking is that it can be done with absent or incompatible <b>hardware</b> <b>handshaking</b> circuits and cabling. The disadvantage, common to all in-band control signaling, is that it introduces complexities in ensuring that a) control messages get through even when data messages are blocked, and b) data can never be mistaken for control signals. The former is normally dealt with by the operating system or device driver; the latter normally by ensuring that control codes are [...] "escaped" [...] (such as in the Kermit protocol) or omitted by design (such as in ANSI terminal control). If no handshaking is employed, an overrun receiver might simply fail to receive data from the transmitter. Approaches for preventing this include reducing the speed of the connection so that the receiver can always keep up; increasing the size of buffers so it can keep up averaged over a longer time; using delays after time-consuming operations (e.g. in termcap) or employing a mechanism to resend data which has been corrupted (e.g., TCP).|$|E
5000|$|The {{built-in}} display was a one-bit black-and-white, 9 in CRT with a fixed {{resolution of}} 512×342 pixels, establishing the desktop publishing standard of 72 PPI. Expansion and networking were achieved using two non-standard RS-422 DE-9 serial ports named [...] "printer" [...] and [...] "modem"; {{they did not}} support <b>hardware</b> <b>handshaking.</b> An external floppy disk drive could be added using a proprietary connector (19-pin D-sub). The keyboard and mouse used simple proprietary protocols, allowing some third-party upgrades. The original keyboard had no arrow keys, numeric keypad or function keys. This was an intentional decision by Apple, as these keys were common on older platforms and {{it was thought that}} the addition of these keys would encourage software developers to simply port their existing applications to the Mac, rather than design new ones around the GUI paradigm. Later, Apple would make a numeric keypad available for the Macintosh 128K. The keyboard sold with the newer Macintosh Plus model would include the numeric keypad and arrow keys, but still no function keys. As with the Apple Lisa before it, the mouse had a single button. Standard headphones could also be connected to a monaural jack. Apple also offered their 300 and 1200 bit/s modems originally released for the Apple II line. Initially, the only printer available was the Apple ImageWriter, a dot matrix printer which was designed to produce 144 dpi WYSIWYG output from the Mac's 72 dpi screen. Eventually, the LaserWriter and other printers were capable of being connected using AppleTalk, Apple's built-in networking system.|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe {{objective of this}} thesis research was the design and implementation of an RS- 232 compatible, bi-directional, full duplex, fiber optic interface with provision for <b>hardware</b> <b>handshaking.</b> Results show that active handshaking lines can be successfully multiplexed, converted to light, transmitted, received, reconverted and demultiplexed pleisiochronously for data communications at 19. 2 kilobaud. Use of wavelength division multiplexing and optical duplexing enabled the reduction of individual fiber optic lines required from four uni-directional single frequency fibers to two bi-directional fibers at three operating wavelengths. [URL] United States Arm...|$|E
40|$|Proceeding of: 1998 IEEE Nuclear Science Symposium and Medical Imaging Conference, Toronto, Ont., 08 - 14 Nov. 1998 The CAMAC {{standard}} offers flexibility {{by providing}} {{power and a}} data bus for various modules, but it {{is limited to a}} 1 Mword/sec bandwidth. LeCroy Research CAMAC modules with an auxiliary data bus, FERA, provide a 10 Mwordsec data transfer without CAMAC controller intervention. We have used a National Instruments digital 1 / 0 board (PCI-DIO- 32 HS) as a FERA bus-to-host bridge. The board provides <b>hardware</b> <b>handshaking,</b> a 20 Mword/sec bandwidth, bus master scatter-gather DMA, and can control up to 2 FERA busses asynchronously. Multiple boards may reside on the same PCI or Compact PCI bus. A 300 MHz Pentium I 1 running Windows NT 4. 0 sustains > 3. 4 MB/sec throughput in 8255 emulation mode. These capabilities are being exploited in our prototype small animal planar and PET imaging system where 32 ADC channels (16 bits each) and 3 scaler channels (32 bits each) define an event. Publicad...|$|E
40|$|The FT 2232 D is a dual USB to serial UART or FIFO {{interface}} {{with the following}} advanced features: Single chip USB to dual channel serial / parallel ports {{with a variety of}} configurations. Entire USB protocol handled on the chip. No USB specific firmware programming required. Transfer Data Rate 300 to 3 Mbaud. USB to parallel FIFO transfer data rate up to 1 megabyte / second. Multi-Protocol Synchronous Serial Engine (MPSSE) to simplify synchronous serial protocol (USB to JTAG, USB to I 2 C, USB to SPI) design. CPU-style FIFO interface mode simplifies CPU interface design. MCU host bus emulation mode configuration option. Fast Opto-Isolated serial interface option. FTDI‟s royalty-free Virtual Com Port (VCP) and Direct (D 2 XX) drivers eliminate the requirement for USB driver development in most cases. Highly integrated design includes 3. 3 V LDO regulator for USB I/O, integrated POR function and on chip clock multiplier PLL (6 MHz – 48 MHz). Asynchronous serial UART interface option with full <b>hardware</b> <b>handshaking</b> and modem interface signals. Enhanced bit-bang Mode interface option with RD # and WR # strobes. Configurable I/O drive strength. Fully assisted hardware or X-On / X-Off software handshaking. UART Interface supports 7 / 8 bit data, 1 / 2 stop bits, and Odd/Even/Mark/Space/No Parity. Operational configuration mode and USB Description strings configurable in external EEPROM over the USB interface. Low operating and USB suspend current. Supports bus powered, self powered and high-power bus powered USB configurations. UHCI/OHCI/EHCI host controller compatible. USB 2. 0 Full Speed (12 Mbits/Second) compatible. Extended- 40 °C to 85 °C industrial operating temperature range. Compact 48 -LD Lead Free LQFP package + 4. 35 V to + 5. 25 V single supply operating voltage range. Dedicated Windows DLLs available for USB t...|$|E

