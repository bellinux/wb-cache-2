0|10000|Public
3000|$|... to its neighbours. The {{recipient}} nodes {{answer with}} the <b>hash</b> <b>values</b> <b>of</b> the <b>certificates</b> contained in their repositories.|$|R
3000|$|... {{computing}} <b>hash</b> <b>value</b> <b>of</b> keywords. SimHash {{is applied}} to get the <b>hash</b> <b>value</b> <b>of</b> each keyword, and then transform (keyword, weight) into (hash, weight).|$|R
30|$|H(s) - <b>hash</b> <b>value</b> <b>of</b> sector s.|$|R
5000|$|In OTPW {{a one-way}} <b>hash</b> <b>value</b> <b>of</b> every single {{password}} {{is stored in}} a potentially widely readable file in the user’s home directory. For instance, <b>hash</b> <b>values</b> <b>of</b> 300 passwords (a typical A4 page) require only a four kilobyte long [...]otpw file, a typically negligible amount of storage space.|$|R
5000|$|<b>Hash</b> <b>values</b> <b>of</b> empty string. Kupyna-256("") 0x cd5101d1ccdf0d1d1f4ada56e888cd724ca1a0838a3521e7131d4fb78d0f5eb6 Kupyna-512("") 0x 656b2f4cd71462388b64a37043ea55dbe445d452aecd46c3298343314ef04019 \ bcfa3f04265a9857f91be91fce197096187ceda78c9c1c021c294a0689198538 ...|$|R
5000|$|<b>Hash</b> <b>values</b> <b>of</b> empty string. Streebog-256("") 0x 3f539a213e97c802cc229d474c6aa32a825a360b2a933a949fd925208d9ce1bb Streebog-512("") 0x 8e945da209aa869f0455928529bcae4679e9873ab707b55315f56ceb98bef0a7 \ 362f715528356ee83cda5f2aac4c6ad2ba3a715c1bcd81cb8e9f90bf4c1c1a8a ...|$|R
5000|$|<b>Hash</b> <b>values</b> <b>of</b> empty string. Skein-256-256("") 0x c8877087da56e072870daa843f176e9453115929094c3a40c463a196c29bf7ba Skein-512-256("") 0x 39ccc4554a8b31853b9de7a1fe638a24cce6b35a55f2431009e18780335d2621 Skein-512-512("") 0x bc5b4c50925519c290cc634277ae3d6257212395cba733bbad37a4af0fa06af41fca7903d06564fea7a2d3730dbdb80c1f85562dfcc070334ea4d1d9e72cba7a ...|$|R
5000|$|HashKeeper compares <b>hash</b> <b>values</b> <b>of</b> {{known to}} be good files against the <b>hash</b> <b>values</b> <b>of</b> files on a {{computer}} system. Where those values match [...] "{{known to be}} good" [...] files, the examiner can say, with substantial certainty, that the corresponding files on the computer system have been previously identified as known to be good and therefore {{do not need to}} be examined.|$|R
30|$|HaID: HaID <b>value</b> is the <b>hash</b> <b>value</b> <b>of</b> ID {{used for}} {{identifying}} or addressing the tag.|$|R
5000|$|<b>Hash</b> <b>values</b> <b>of</b> empty string. Grøstl-224("") 0x f2e180fb5947be964cd584e22e496242c6a329c577fc4ce8c36d34c3 Grøstl-256("") 0x 1a52d11d550039be16107f9c58db9ebcc417f16f736adb2502567119f0083467 Grøstl-384("") 0x ac353c1095ace21439251007862d6c62f829ddbe6de4f78e68d310a9205a736d8b11d99bffe448f57a1cfa2934f044a5 Grøstl-512("") 0x 6d3ad29d279110eef3adbd66de2a0345a77baede1557f5d099fce0c03d6dc2ba8e6d4a6633dfbd66053c20faa87d1a11f39a7fbe4a6c2f009801370308fc4ad8 ...|$|R
5000|$|Created by the National Drug Intelligence Center (NDIC)—a {{component}} of the United States Department of Justice—in 1996, {{it was the first}} large scale source for <b>hash</b> <b>values</b> <b>of</b> [...] "known to be good" [...] and [...] "known to be bad" [...] files. HashKeeper was, and still is, the only community effort based upon the belief that members of state, national, and international law enforcement agencies can be trusted to submit properly categorized <b>hash</b> <b>values.</b> One <b>of</b> the first community sources of [...] "known to be good" [...] <b>hash</b> <b>values</b> was the United States Internal Revenue Service. The first source of [...] "known to be bad" [...] <b>hash</b> <b>values</b> was the Luxembourg Police who contributed <b>hash</b> <b>values</b> <b>of</b> recognized child pornography.|$|R
30|$|The {{endorsement}} peer {{returns the}} public data, including the <b>hash</b> <b>value</b> <b>of</b> the private data key-value pair, to the client.|$|R
5000|$|KMV {{algorithm}} can {{be implemented}} in [...] memory bits space. Each <b>hash</b> <b>value</b> requires space <b>of</b> order [...] memory bits. There are <b>hash</b> <b>values</b> <b>of</b> the order [...] The access time can be reduced if we store the t <b>hash</b> <b>values</b> in a binary tree. Thus the time complexity will be reduced to [...]|$|R
3000|$|Front-end module {{calculate}} the <b>hash</b> <b>value</b> <b>of</b> self, encrypt the value using a secret key {{and send it}} to MVM [...]...|$|R
40|$|Nowadays most {{audio content}} {{identification}} systems {{are based on}} watermarking technology. In this paper we present a different technology, referred to as robust audio hashing. By extracting robust features and translating them into a bit string, we get an object called a robust hash. Content can then be identified by comparing <b>hash</b> <b>values</b> <b>of</b> a received audio clip with the <b>hash</b> <b>values</b> <b>of</b> previously stored original audio clips. A distinguishing feature of the proposed hash scheme {{is its ability to}} extract a bit string for every so many milliseconds. More precisely, for every windowed time interval a <b>hash</b> <b>value</b> <b>of</b> 32 bits is computed by thresholding energy differences of several frequency bands. A sequence <b>of</b> 256 <b>hash</b> <b>values,</b> corresponding to approximately 3 seconds of audio, can uniquely identify a song. Experimental results show that the proposed scheme is robust against severe compression, but bit errors do occur. This implies that searching and matching is a non-trivial task for large databases...|$|R
30|$|Content packing {{protocol}} (CPP). Digital content will be encoded by CS firstly, then CS encrypts user’s information, calculates the <b>hash</b> <b>value</b> <b>of</b> these contents, and signatures the <b>hash</b> <b>value,</b> finally, CS pack {{all above}} information {{and send it}} to the requestor.|$|R
5000|$|<b>Hash</b> <b>values</b> <b>of</b> {{an empty}} string (i.e., a zero-length input text). [...] 0x d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f [...] 0x e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 [...] 0x 38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b [...] 0x cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e [...] 0x 6ed0dd02806fa89e25de060c19d3ac86cabb87d6a0ddd05c333b84f4 [...] 0x c672b8d1ef56ed28ab87c3622c5114069bdd3ad7b8f9737498d0c01ecef0967a ...|$|R
50|$|Various MD5-related RFC errata {{have been}} published. In 2009, the United States Cyber Command used an MD5 <b>hash</b> <b>value</b> <b>of</b> their mission {{statement}} {{as a part}} of their official emblem.|$|R
50|$|CAdES-LT: {{are built}} by direct {{incorporation}} to CAdES-T signatures conformant to the T-Level, a long-term-validation attribute containing <b>values</b> <b>of</b> <b>certificates</b> and <b>values</b> <b>of</b> <b>certificate</b> revocation status used {{to validate the}} signature.|$|R
50|$|A five node hash {{calendar}} {{cluster is}} {{a component of}} Keyless Signature Infrastructure (KSI), each leaf in the hash calendar being the aggregate <b>hash</b> <b>value</b> <b>of</b> a globally distributed hash tree.|$|R
30|$|In this research, the SAMS was {{proposed}} for authenticating mobile devices using a blockchain {{in order to}} trust the resource information of the mobile devices in the MRM resource pool. The SAMS creates blocks based on the <b>hash</b> <b>value</b> <b>of</b> the master node in the MRM and the <b>hash</b> <b>value</b> <b>of</b> the resource information in the subordinate client node, and it forms blockchain by creating and connecting <b>hash</b> <b>values</b> and blocks when client nodes are added. To evaluate {{the performance of the}} SAMS, it was applied to the MRM and the connection of unauthorized devices was artificially attempted. The results confirmed that unauthorized devices cannot access and falsify data in the SAMS.|$|R
5000|$|To {{avoid this}} method of cheating, the lockstep {{protocol}} requires each player to first announce a [...] "commitment" [...] (e.g. <b>hash</b> <b>value</b> <b>of</b> the action); this commitment is a representation of an action that: ...|$|R
30|$|The current {{implementation}} employs MD 5 {{to generate}} <b>hash</b> <b>values</b> <b>of</b> sectors. MD 5 and SHA- 1 are vulnerable against collision attacks [55, 56]. If the attackers {{can make a}} false file or a malicious program that has <b>hash</b> <b>values</b> <b>of</b> sectors identical to those of known-good files (e.g., known-good system files) and if the LogDrive framework is used for excluding fragments of known-good files by using white lists (not black lists), the system {{will not be able}} to detect the malicious file created by the attacker. To prevent the attack, the MD 5 hash algorithm should be replaced with collision-resistant hash algorithms such as SHA- 256 or SHA- 512.|$|R
5000|$|... #Caption: An {{example of}} a binary hash tree. Hashes 0-0 and 0-1 are the <b>hash</b> <b>values</b> <b>of</b> data blocks L1 and L2, respectively, and hash 0 is the hash of the {{concatenation}} of hashes 0-0 and 0-1.|$|R
30|$|Memory {{usage of}} DPM {{approach}} in the edge router. Since marking process on the edge router by the DPM approach only stores the <b>hash</b> <b>value</b> <b>of</b> the ingress IP address, router’s memory overhead in DPM algorithms is negligible.|$|R
5000|$|Colors are {{assigned}} to Nodes based on the <b>hash</b> <b>value</b> <b>of</b> the node's id. Hash functions such as SHA-1 are used {{to ensure that the}} size of each group is about [...] and is under [...] with high probability.|$|R
30|$|In this paper, the Secure Authentication Management human-centric Scheme (SAMS) is proposed, {{which uses}} {{blockchain}} to authenticate mobile devices and trust the resource {{information in the}} mobile devices participating in the MRM resource pool. The SAMS creates blocks based on the <b>hash</b> <b>value</b> <b>of</b> the master node and the <b>hash</b> <b>value</b> <b>of</b> the resource information in the subordinate client nodes in the MRM, and it then forms blockchain by connecting the <b>hash</b> <b>values</b> and blocks when the client nodes are added. Devices {{that have not been}} authenticated through the SAMS in the MRM cannot access or falsify data. This research evaluates the performance of the SAMS by applying the SAMS to the MRM and verifying the impossibility of data falsification by malicious users accessing the SAMS for human-centric aspect.|$|R
3000|$|So, if ai is {{a member}} of set A, all bits {{corresponding}} to the <b>hash</b> <b>value</b> <b>of</b> ai are set to 1 in the resulting Bloom filter V. The following program tests whether an element belongs to set A: [...]...|$|R
5000|$|The {{first step}} of {{generating}} the public key [...] is to generate [...] private/public key pairs [...] of some one-time signature scheme (such as the Lamport signature scheme). For each , a <b>hash</b> <b>value</b> <b>of</b> the public key [...] is computed.|$|R
50|$|The 128-bit <b>hash</b> <b>value</b> <b>of</b> any {{message is}} formed by padding it to a {{multiple}} of the block length (128 bits or 16 bytes) and adding a 16-byte checksum to it. For the actual calculation, a 48-byte auxiliary block and a 256-byte S-table generated indirectly from the digits of the fractional part of pi are used (see nothing up my sleeve number). The algorithm runs through a loop where it permutes each byte in the auxiliary block 18 times for every 16 input bytes processed. Once all of the blocks of the (lengthened) message have been processed, the first partial block of the auxiliary block becomes the <b>hash</b> <b>value</b> <b>of</b> the message.|$|R
40|$|Abstract––Digital {{forensics}} tools frequently use {{to calculate}} the <b>hash</b> <b>value</b> <b>of</b> digital evidence drive. MD 5 and SHA hash function is used in digital forensic tools to calculate and verify that a data set has not been altered, due to the application of various evidence collection and analysis tools and procedures. Additionally, due to {{the impact on the}} personal life of the subject of an investigation, verification of the correct operation of tools and procedures is critical. This paper discusses the significance <b>of</b> <b>hash</b> <b>value</b> in digital forensic for the digital evidence. The research conducts six possible different cases as an experiment to generate and verify the <b>hash</b> <b>value</b> <b>of</b> test drive using forensic tool to demonstrate the importance <b>of</b> <b>hash</b> <b>value</b> in digital forensic. Additionally, unreliable results can be obtained because of the improper use of the application of the tools. Keywords––MD 5; SHA; digital forensic; hash function. I...|$|R
30|$|Then, {{data server}} accesses c data blocks {{and uses the}} public key to {{generate}} a proof of possession composed of a tag and a <b>hashed</b> <b>value</b> <b>of</b> r. Notice that the data server cannot generate a valid possession proof without accessing the data file.|$|R
40|$|Abstract. The j-lanes tree hashing is a tree {{mode that}} splits an input message to j slices, computes j {{independent}} digests of each slice, and outputs the <b>hash</b> <b>value</b> <b>of</b> their concatenation. The j-pointers tree hashing {{is a similar}} tree mode that re-ceives, as input, j pointers to j messages (or slices of a single message), com-putes their digests and outputs the <b>hash</b> <b>value</b> <b>of</b> their concatenation. Such modes have parallelization capabilities on a hashing process that is serial by na-ture. As a result, they have performance advantage on modern processor archi-tectures. This paper provides precise specifications for these hashing modes, proposes a setup for appropriate IV’s definition, and demonstrates their perfor-mance on the latest processors. Our hope {{is that it would}} be useful for standard-ization of these modes...|$|R
5000|$|Let h be a hash {{function}} that maps {{the members of}} [...] and [...] to distinct integers, and for any set S define [...] to be the member [...] of [...] with the minimum <b>value</b> <b>of</b> [...] Then [...] exactly when the minimum <b>hash</b> <b>value</b> <b>of</b> the union [...] lies in the intersection [...]Therefore, ...|$|R
30|$|For {{the core}} {{confidential}} information within each organization, the organization performs asymmetric encryption and transmits hash {{of data to}} the blockchain. This approach should also {{be part of the}} Hyperledger Fabric’s privacy protection mechanism. In addition, the storage model for private data should be further designed. At present, Hyperledger’s storage of private data is stored in the privacy database of the peer. Once the private data is copied to the database outside the chain, the linked database data will be deleted, leaving only the <b>hash</b> <b>value</b> <b>of</b> the private data to prove the existence of the transaction. However, this approach makes it impossible to fully exploit the traceability of the blockchain, and the final traceability is only the hash of the transaction data, which cannot be verified on the chain. Therefore, the local database should also establish a corresponding <b>hash</b> <b>value</b> <b>of</b> the privacy transaction data and implement mapping with the privacy database on the chain to achieve traceability based on the same <b>hash</b> <b>value.</b>|$|R
40|$|Abstract. Peer-to-Peer (P 2 P) Information Retrieval {{framework}} {{consists of}} a peer to peer network of nodes, which voluntarily agree to share their resources by joining the network. While joining these nodes construct the active peer list. Each peer maintains a B+ tree containing IP <b>hash</b> <b>values.</b> The files are distributed over the peer to peer network based on the keywords. The files are initially uploaded into the target node based on the closest match between the <b>hash</b> <b>values</b> <b>of</b> the IP address of the node and the keywords used to index the file. While searching, the target node is identified by finding the closest match between the <b>hash</b> <b>value</b> <b>of</b> the keyword and the IP address hash from the B+ tree stored in the peers. After identifying the target node, the references to desired document is retrieved by searching a B+ tree indexed using keywords. The proposed framework uses Hadoop cluster to extract keywords from the files to be uploaded in the desire...|$|R
