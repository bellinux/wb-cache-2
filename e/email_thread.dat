28|56|Public
5000|$|Podesta did {{not respond}} in the <b>email</b> <b>thread.</b> Palmieri said she [...] "didn't {{recognize}} (the email) ... {{but we are not}} going to fact check each of the emails that were stolen, hacked by Russian lead efforts in an effort to hurt our campaign." ...|$|E
50|$|Every {{member of}} AVP {{receives}} a nickname to be patched onto his garage shirt at his second {{concert with the}} group. Traditionally, a secret <b>email</b> <b>thread</b> is created behind those receiving their new nicknames, {{and the rest of}} the group decides on a name. Nicknames can be anything from the person's last name to something completely bizarre.|$|E
5000|$|The Center for American Progress {{attracted}} controversy for email chains [...] "attacking {{two major}} faith groups--evangelicals and Catholics" [...] during the Wikileaks hack of 2011 emails. [...] The email chains were between Communications Director Jennifer Palmieri, Clinton campaign chair John Podesta and John Halpin from the Center for American Progress. Podesta {{did not respond}} in the <b>email</b> <b>thread.</b>|$|E
40|$|Question-answer pairs {{extracted}} from <b>email</b> <b>threads</b> can help construct summaries of the thread, {{as well as}} inform semantic-based assistance with email. Previous work dedicated to <b>email</b> <b>threads</b> extracts only questions in interrogative form. We extend the scope of question and answer detection and pairing to encompass also questions in imperative and declarative forms, and to operate at sentence-level fidelity. Building on prior work, our methods are based on learned models over a set of features that include the content, context, and structure of <b>email</b> <b>threads.</b> For two large email corpora, we show that our methods balance precision and recall in extracting question-answer pairs, while maintaining a modest computation time. ...|$|R
40|$|We {{describe}} the email summarization interface system {{we have developed}} that allows users to summarize and categorize email conversations from email clients such as Microsoft Outlook. The sytem which can be seamlessly integrated into a user’s email client employs a client-server architecture. With the client sending incoming emails to the server for preprocessing, a user can make various on-the-fly requests such as categorization of individual emails, categorization of <b>email</b> <b>threads,</b> summarization of individual emails and summarization of <b>email</b> <b>threads.</b> Summarization can be performed in two modes. For <b>email</b> <b>threads</b> without questionanswer exchanges, extractive summaries are generated. For others, extractive sentences are augmented with sentences from automatically detected question-answer pairs. ...|$|R
40|$|In this paper, we {{describe}} some new visualization methods for <b>email</b> <b>threads.</b> The methods concatenate initial message texts, or full texts shorn of extraneous material, into logical groupings embedded in, or closely aligned with, thread structure representations. The results {{are intended to}} provide useful thread overviews, and to enable coherent, efficient reading of <b>thread</b> content. Keywords <b>Email</b> archives, <b>email</b> <b>threads,</b> computer mediated communication, tree visualization, trees, narrow trees, treetables, <b>email</b> message analysis, <b>threading,</b> overview + detail, focus + contex...|$|R
5000|$|A [...] "Crown prosecutor" [...] (likely a {{reference}} to Chaika) was mentioned in an email chain released on 11 July 2017 by the son of then Republican Presidential nominee Donald Trump, Don Jr, {{in regards to the}} Russian government and their alleged attempts to provide damaging information during the U.S. Presidential election of 2016. The <b>email</b> <b>thread</b> resulted in the Trump campaign-Russian meeting of June 2016.|$|E
50|$|With the {{invention}} of email for ARPANET in 1972, communication through a computer to distant geographies became substantially easier. Listserve, which allow a multitude of respondents to interact with an <b>email</b> <b>thread</b> and Bulletin Boards, an online representation of the community bulletin boards commonly found on campuses, were introduced contemporary with one another. These three tools along with USENET provided the tools for rudimentary online communities to begin to coalesce around health related topics.|$|E
5000|$|Carmon was a Jezebel {{staff writer}} from 2009 to 2011. She wrote a post calling The Daily Show a [...] "boys' club where women's {{contributions}} are often ignored and dismissed." [...] The {{women of the}} Daily Show responded by publishing an open letter defending their workplace. Carmon posted a week-long <b>email</b> <b>thread</b> with the Daily Show publicist in response to allegations that she had failed to provide adequate time for comment. Two years later, Carmon noted her appreciation for changes at The Daily Show since the controversy.|$|E
40|$|While {{automatic}} classification of email {{is obviously a}} useful task to study, it is not obvious how to best utilize the rich metadata specific to email {{to improve the quality}} of the classification. In this paper, we propose a simple algorithm for using <b>email</b> <b>threads</b> to improve the precision of a personal email assistant’s automatic folder classification. We evaluate the approach on a large email dataset, and confirm the intuition that <b>email</b> <b>threads</b> can be used for high precision but low recall. Futhermore, we experimentally verify the intuition that using threads is hampered in its improvement of a classifier by the redundancy of their information. ...|$|R
40|$|In {{my thesis}} I propose a data-oriented study on how social power {{relations}} between participants {{manifest in the}} language and structure of online written dialogs. I propose that there are different types of power relations and they are different in the ways they are expressed and revealed in dialog and across different languages, genres and domains. So far, I have defined four types of power and annotated them in corporate <b>email</b> <b>threads</b> in English and found support that they in fact manifest differently in the threads. Using dialog and language features, I have built a system to predict participants possessing these types of power within <b>email</b> <b>threads.</b> I intend to extend this system to other languages, genres and domains and to improve it’s performance using deeper linguistic analysis. ...|$|R
500|$|... iOS 10 also changes how <b>email</b> <b>threading</b> works, {{by placing}} the oldest email at the top by default. An option in Settings lets users revert to the {{previous}} threading system with the most recent message on top. Additionally, the new threaded conversations allow users to tap a message to see a scrollable stream of messages inside the thread.|$|R
5000|$|In a June 7 email {{there was}} {{agreement}} that the material would be delivered to Trump Jr. by an unnamed [...] "Russian government attorney". At the meeting, Goldstone introduced this person as Moscow-based attorney Natalia Veselnitskaya. She stated {{that she was not}} a government official, however she is known to have ties to the Russian government. According to Goldstone, she had planned to be in New York for a court appearance on June 9. Trump Jr. offered an in-person meeting that afternoon, which Goldstone confirmed. Trump Jr. forwarded the <b>email</b> <b>thread</b> to Kushner and Manafort.|$|E
40|$|Email {{has become}} a part of most people’s lives, and the ever {{increasing}} amount of messages people receive can lead to email overload. We attempt to mitigate this problem using <b>email</b> <b>thread</b> summarization. Summaries can be used for things other than just replacing an incoming email message. They can be used in the business world as a form of corporate memory, or to allow a new team member an easy way to catch up on an ongoing conversation. Email threads are of particular interest to summarization because they contain much structural redundancy due to their conversational nature. Our <b>email</b> <b>thread</b> summarization approach uses machine learning to pick which sentences from the <b>email</b> <b>thread</b> to use in the summary. A machine learning summarizer must be trained using previously labeled data, i. e. manually created summaries. After being trained our summarization algorithm can generate summaries that on average contain over 70 % of the same sentences as human annotators. We show that labeling some key features such as speech acts, meta sentences, and subjectivity can improve performance to over 80 % weighted recall...|$|E
40|$|Annotated email corpora are {{necessary}} for evaluation and training of machine learning summarization techniques. The scarcity of corpora has been a limiting factor for research in this field. We describe our process of creating a new annotated <b>email</b> <b>thread</b> corpus that will be made publicly available. We present the trade-offs of the different annotation methods that could be used...|$|E
40|$|Summarizing <b>threads</b> of <b>email</b> is {{different}} from summarizing other types of written communication as it has an inherent dialog structure. We present initial research which shows that sentence extraction techniques can work for <b>email</b> <b>threads</b> as well, but profit from email-specific features. In addition, {{the presentation of the}} summary should take into account the dialogic structure of email communication. ...|$|R
5000|$|... iOS 10 also changes how <b>email</b> <b>threading</b> works, {{by placing}} the oldest email at the top by default. An option in Settings lets users revert to the {{previous}} threading system with the most recent message on top. Additionally, the new threaded conversations allow users to tap a message to see a scrollable stream of messages inside the thread.|$|R
40|$|This paper {{introduces}} a new email dataset, consisting of both single and <b>thread</b> <b>emails,</b> manually annotated with summaries and key-words. A total of 349 <b>emails</b> and <b>threads</b> have been annotated. The dataset {{is our first}} step toward developing automatic methods for summarization and keyword extraction from emails. We describe the email corpus, along with the annotation interface, annotator guide-lines, and agreement studies...|$|R
40|$|Machine {{learning}} summarizers and the ClueWordSummarizer are {{two different}} approaches to summarizing email threads. These approaches are compared to show which is a more viable solution under different conditions. The current results show that both approaches perform com-parably. With some possible improvement to features, machine learning has the po-tential to create more accurate summaries. Future directions for <b>email</b> <b>thread</b> summa-rization are discussed. ...|$|E
40|$|In this paper, {{we examine}} the {{application}} of various grouping techniques to help improve the efficiency and reduce the costs involved in an electronic discovery process. Specifically, we create coherent groups of email documents which characterize either a syntactic theme, a semantic theme or an <b>email</b> <b>thread.</b> All such grouped documents can be reviewed together leading to a faster and more consistent review of documents. Syntactic grouping of emails is based on near duplicate detection whereas semantic grouping is based on identifying concepts in the email content using information extraction. <b>Email</b> <b>thread</b> detection is achieved {{using a combination of}} segmentation and near duplicate detection. We present experimental results on the Enron corpus that suggest that these approaches can significantly reduce the review time and show that high precision and recall in identifying the groups can be achieved. We also describe how these techniques are integrated into the IBM eDiscovery Analyzer product offering. 1...|$|E
40|$|<b>Email</b> <b>thread</b> {{reassembly}} is {{the task}} of linking messages by parentchild relationships. In this paper, we present two approaches to address this problem. One exploits previously undocumented header information from the Microsoft Exchange Protocol. The other uses string similarity metrics and a heuristic algorithm to reassemble threads {{in the absence of}} header information. The pros and cons of both methods are discussed. The similarity matching method is evaluated using the Enron email corpus and found to perform well. 1...|$|E
50|$|In {{their study}} of {{computer-mediated}} communication in the workplace, Yates, Orlikowski and Woerner (2003) draw upon Erickson's (2000) work on genre ecologies to suggest a communicative ecology can be identified by the types and frequencies of communicative practices, such as <b>email</b> <b>threading</b> activities. Their version of communicative ecology is influenced by members of a workplace engaging in common activities, {{the length of time}} over which interaction takes place, whether communication media is synchronous or asynchronous and members' linguistic or cultural background.|$|R
5000|$|In this version, {{participants}} {{engage in}} a [...] "conspiracy" [...] where all participants work together to select a gift for a single participant without that participant's direct involvement or knowledge. Many such individual [...] "conspiracies" [...] run concurrently, one for each participant. <b>Email</b> <b>threads</b> or web apps are commonly used to manage each [...] "conspiracy" [...] until a consensus is made, wherein the gift is purchased by a decided upon participant and given at a later date. A common theme of Conspiracy Santa is collectively learning about participants, making it popular for workplaces and schools.|$|R
50|$|Outlook Groups is an {{application}} for Windows Phone, Windows 10 Mobile, Android and iOS {{that can be used}} with an Office 365 domain Microsoft Account, e.g. a work or school account. It is designed to take existing <b>email</b> <b>threads</b> and turn them into a group-style conversation. The app lets users create groups, mention their contacts, share Office documents via OneDrive and work on them together, and participate in an email conversation. The app also allows the finding and joining of other Outlook Groups. It was tested internally at Microsoft and launched September 18 for Windows Phone 8.1 and Windows 10 Mobile users.|$|R
40|$|In {{this paper}} {{we present a}} regression-based machine {{learning}} approach to <b>email</b> <b>thread</b> summarization. The regression model is {{able to take advantage}} of multiple gold-standard annotations for training purposes, in contrast to most work with binary classifiers. We also investigate the usefulness of novel features such as speech acts. This paper also introduces a newly created and publicly available email corpus for summarization research. We show that regression-based classifiers perform better than binary classifiers because they preserve more information about annotator judgements. In our comparison between different regression-based classifiers, we found that Bagging and Gaussian Processes have the highest weighted recall...|$|E
40|$|We present two {{approaches}} to <b>email</b> <b>thread</b> summarization: Collective Message Summarization (CMS) applies a multi-document summarization approach, while Individual Message Summarization (IMS) treats {{the problem as}} a sequence of single-document summarization tasks. Both approaches are implemented in our general framework driven by sentence compression. Instead of a purely extractive approach, we employ linguistic and statistical methods to generate multiple compressions, and then select from those candidates to produce a final summary. We demonstrate our techniques on the Enron collection—a very challenging corpus because of the highly technical language. Results suggest that CMS represents a better approach and additional findings {{pave the way for}} future explorations. ...|$|E
40|$|Thread disentanglement is {{the task}} of sep-arating out conversations whose thread {{structure}} is implicit, distorted, or lost. In this paper, we perform <b>email</b> <b>thread</b> dis-entanglement through pairwise classifica-tion, using text similarity measures on non-quoted texts in emails. We show that i) content text similarity metrics out-perform style and structure text similar-ity metrics in both a class-balanced and class-imbalanced setting, and ii) although feature performance {{is dependent on the}} semantic similarity of the corpus, con-tent features are still effective even when controlling for semantic similarity. We make available the Enron Threads Corpus, a newly-extracted corpus of 70, 178 multi-email threads with emails from the Enron Email Corpus. ...|$|E
40|$|We {{present a}} case study {{describing}} the process and resulting design for the bluemail conversation viewer: a web-based mashup between social networking information and <b>email</b> <b>threads</b> within a corporate setting. In particular, we {{look closely at the}} role design played when adjoined to an agile development process. We discuss the benefits and trade-offs from working in highly iterative and modestly scoped development cycles. In our experience, establishing an equally significant design role served as a valuable means to maintain strategic focus across many parallel development activities. Additionally, we talk about how the nature of agile development and the broad reach of email enabled frequent user input to continuously ignite design direction...|$|R
50|$|During the {{sentencing}} trial in March 2006, Judge Leonie Brinkema learned that Martin contacted seven FAA witnesses {{in an apparent}} violation of a court order. Martin denied any wrongdoing in connection with her work on the Moussaoui trial. There {{was no one in}} the courtroom during the 2006 hearings of March 13, 14, and 21 to represent her interests, to cross-examine the witnesses, or otherwise proffer other evidence and other <b>email</b> <b>threads</b> never seen by the court between Carla Martin and Assistant U.S. Attorney David J. Novak, evidence that would have rebutted the pervasive misrepresentations and mischaracterizations of her work made by the prosecutors and the court.|$|R
40|$|Abstract- This {{article is}} aimed at {{describing}} the ideology of Islam in the Indonesian linguistic politeness system. The population was the emails posted to the mailing list {{by the members of}} Indonesian Moslem Society in America (IMSA) and the topic of discussion was Islam. The reason for choosing the topic is that it has potential to reveal expressions of linguistic politeness even as it encourages participation of the members, since it is a topic of interest to everyone. The sample was the <b>email</b> <b>threads</b> triggered by an article entitled „Mendeteksi virus liberal ‟ (Detecting the liberal virus), which followed by four, more-focused topics of discussion derived from the first, chronologically...|$|R
40|$|This paper {{describes}} Thread Arcs, a novel interactive visualization technique {{designed to}} help people use threads found in <b>email.</b> <b>Thread</b> Arcs combine the chronology of messages with the branching tree structure of a conversational thread in a mixed-model visualization [Venolia and Neustaedter 2003] that is stable and compact. By quickly scanning and interacting with Thread Arcs, people can see various attributes of conversations and find relevant messages in them easily. We tested this technique against other visualization techniques with users ’ own email in a functional prototype email client. Thread Arcs proved an excellent match for the types of threads found in users ’ email and for the qualities users wanted in small-scale visualizations...|$|E
30|$|Throughout the year, as we {{read and}} {{discussed}} {{the content and}} tone of listserv conversations, we noticed that feedback loops sometimes developed: participants might raise a concern to the group, others would provide suggestions, and then the original participant would report back after testing out the collegial suggestions. We also noticed a surprising degree of emotion in the messages being exchanged. For instance, when a participant reported feeling discouraged by their students’ level of engagement, others responded not only with ideas but also with emotional support and encouragement. Such social exchanges prompted our interest in not just the frequency but the content of listserv messages. We realized that social network analysis (SNA) methods might best capture the evolving nature of connected conversations in an <b>email</b> <b>thread.</b>|$|E
40|$|This work {{concerns}} automatic topic segmentation of email conversations. We {{present a}} corpus of email threads manually annotated with topics, and evaluate annotator reliability. To our knowledge, {{this is the}} first such email corpus. We show how the existing topic segmentation models (i. e., Lexical Chain Segmenter (LCSeg) and Latent Dirichlet Allocation (LDA)) which are solely based on lexical information, can be applied to emails. By pointing out where these methods fail and what any desired model should consider, we propose two novel extensions of the models that not only use lexical information but also exploit finer level conversation structure in a principled way. Empirical evaluation shows that LCSeg is a better model than LDA for segmenting an <b>email</b> <b>thread</b> into topical clusters and incorporating conversation structure into these models improves the performance significantly. ...|$|E
40|$|We are {{interested}} in improving the summarization of conversations by using domain adaptation. Since very few email corpora have been annotated for summarization purposes, we attempt to leverage the labeled data available in the multiparty meetings domain for the summarization of <b>email</b> <b>threads.</b> In this paper, we compare several approaches to supervised domain adaptation using out-ofdomain labeled data, and also try to use unlabeled data in the target domain through semi-supervised domain adaptation. From {{the results of our}} experiments, we conclude that with some in-domain labeled data, training in-domain with no adaptation is most effective, but that when there is no labeled in-domain data, domain adaptation algorithms such as structural correspondence learning can improve summarization. ...|$|R
40|$|In {{this paper}} we present Semanta [...] a fully-implemented system {{supporting}} Semantic Email Processes, {{integrated into the}} existing technical landscape and using existing email transport technology. By applying Speech Act Theory, knowledge about these processes can be made explicit, enabling machines to support email users with correctly interpreting, handling and keeping track of email messages, visualizing <b>email</b> <b>threads</b> and workflows, and extracting tasks and appointments from email messages. Whereas complex theoretical models and semantics are hidden beneath a simple user interface, the enabled functionalities are clear for the users to see and take advantage of. The system’s evaluation proved that our experiment with Semanta has indeed been successful and that semantic technology can be applied as an extra layer to existing technology, thus bringing its benefits into everyday computer usage...|$|R
5000|$|The IETF spfbis working group, {{tasked with}} {{reworking}} the SPF specification aiming for [...] "Proposed Standard" [...] status {{in a new}} RFC, during April 2013 appeared to have reached consensus around deprecating SPF type 99 in favour of continued TXT record usage. People from the DNSEXT working group strongly opposed this {{in a series of}} <b>email</b> <b>threads</b> on spfbis, dnsext, and IETF general discussion mailing lists. The spfbis working group chair requested an end to that torrent of protest, since the discussion on the resource record type (RRTYPE) in the working group was terminated long ago, a move that was seen as trying to silence the protests by some fierce DNS purists. An independent draft was proposed later, documenting how the spurious recursion to TXT records is characterized in the current Internet.|$|R
