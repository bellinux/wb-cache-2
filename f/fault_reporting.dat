41|341|Public
5|$|A mock-up was {{manufactured}} in Japan after Kawasaki won the contract. It was shipped to Singapore {{and put on}} public display during the 1984 National Exhibition held in November 1984 at World Trade Centre. The mock-up featured three choices of seating arrangements and colour schemes; {{members of the public}} were invited to give feedback on these options. The finalised interior design of the C151 trains consisted of a fully longitudinal seating arrangement. The bucket seats were made of plastic; glass partitions separated the seating areas from the passenger doors. Strap lines for standing passengers were installed in the middle of every car. The colour scheme of each adjacent car's interior is distinct to make car identification in cases of <b>fault</b> <b>reporting</b> easier for passengers. Originally the colour scheme of the driving trailer cars was orange, that of the second and fifth motor cars was blue, and that of the two centre motor cars was green. There were nine seats between two doors; this was reduced to seven after the first round of refurbishment.|$|E
50|$|This {{concept is}} {{applicable}} to mission critical systems that incorporate active redundancy and <b>fault</b> <b>reporting.</b> It is also applicable to non-mission critical systems that lack redundancy and <b>fault</b> <b>reporting.</b>|$|E
50|$|<b>Fault</b> <b>reporting</b> {{eliminates}} {{maintenance costs}} associated manual diagnostic testing.|$|E
5000|$|Checking any <b>fault</b> <b>reports</b> {{to limit}} {{possible}} hardware problems prior to test ...|$|R
40|$|Analysis {{techniques}} from safety-critical development, such as PHA or HazOp, {{shall be}} used on DAIM, a system used at IME for starting, delivering and finishing master thesis. Documents to be analyzed are from the specification and design phase of the system development. The results obtained from using these techniques shall be compared with existing <b>fault</b> <b>reports</b> with actual <b>faults</b> as have been discovered in the system. These <b>fault</b> <b>reports</b> shall also be treated and analyzed...|$|R
5000|$|In Australia, {{there are}} {{numerous}} satirical news websites including The Shovel, The Betoota Advocate, The (Un)Australian, The <b>Fault</b> <b>Report,</b> The Sauce and The Tunnel Presents. The Shovel mainly satirizes the Australian political and social culture and The Betoota Advocate satirizes the political right and Australian journalism. In February 2015, The Betoota Advocate shot to fame after the publication's editor's sneaked in to the media scrum outside Parliament House in Canberra during a leadership spill motion and managed to interview some of Australia's most high-profile media personalities and politicians, posing as legitimate journalists. The fallout from The Betoota Advocate stunt {{has led to a}} security increase surrounding parliamentary media and screening of all crew. The <b>Fault</b> <b>Report</b> [...] was established in 2014 and also has a political editorial focus. British-born Australian author John Birmingham once described The <b>Fault</b> <b>Report</b> as, [...] "Like The Onion. But with Vegemite", on his blog Cheeseburger Gothic. The Tunnel Presents, which has been online since June 2011, is by Brisbane-based satire writing team The Tunnel and has political and social satire stories with a Queensland focus.|$|R
50|$|This {{concept is}} related to {{condition-based}} maintenance and <b>fault</b> <b>reporting.</b>|$|E
5000|$|... less {{reliable}} than equipment with <b>fault</b> <b>reporting</b> associated with CBM ...|$|E
50|$|All modern {{computers}} {{provide the}} following when an existing feature is enabled via <b>fault</b> <b>reporting.</b>|$|E
40|$|Abstract. Improving {{software}} processes {{relies on}} the ability to analyze previous projects and derive which parts of the process that should be focused on for improvement. All software projects encounter software faults during development and have to put much effort into locating and fixing these. A lot of information is produced when handling <b>faults,</b> through <b>fault</b> <b>reports.</b> This paper reports a study of <b>fault</b> <b>reports</b> from industrial projects, where we seek a better understanding of faults that have been reported during development and how this may affect the quality of the system. We investigated the fault profiles of five business-critical industrial projects by data mining to explore if there were significant trends in the way faults appear in these systems. We wanted to see if any types of faults dominate, and whether some types of <b>faults</b> were <b>reported</b> as being more severe than others. Our findings show that one specific fault type is generally dominant across reports from all projects, and that some fault types are rated as more severe than others. From this we could propose that the organization studied should increase effort in the design phase in order to improve software quality. ...|$|R
25|$|Maintenance on the ICE trains {{is carried}} out in special ICE {{workshops}} located in Basel, Berlin, Cologne, Dortmund, Frankfurt, Hamburg, Leipzig and Munich. The train is worked upon at up to four levels {{at a time and}} <b>fault</b> <b>reports</b> are sent to the workshops in advance by the on-board computer system to keep maintenance time at a minimum.|$|R
40|$|Abstract. Faults {{introduced}} into systems during development are costly to fix, and especially so for business-critical systems. These systems are developed using common development practices, but have high requirements for dependability. This paper reports {{on an ongoing}} investigation of <b>fault</b> <b>reports</b> from Norwegian IT companies, where {{the aim is to}} seek a better understanding on faults that have been found during development and how this may affect the quality of the system. Our objective in this paper is to investigate the fault profiles of four business-critical commercial projects to explore if there are differences in the way faults appear in different systems. We have conducted an empirical study by collecting <b>fault</b> <b>reports</b> from several industrial projects, comparing findings from projects where components and reuse have been core strategies with more traditional development projects. Findings show that some specific fault types are generally dominant across reports from all projects, and that some fault types are rated as more severe than others. 1...|$|R
50|$|<b>Fault</b> <b>reporting</b> is a {{maintenance}} concept that increases operational availability and that reduces operating cost through three mechanisms.|$|E
50|$|Active {{redundancy}} can {{be integrated}} with <b>fault</b> <b>reporting</b> to reduce down time to a few minutes per year.|$|E
5000|$|Diagnostic {{down time}} is {{required}} to identify {{the amount of time}} spent perform maintenance when <b>fault</b> <b>reporting</b> does not support condition-based maintenance.|$|E
40|$|In this master thesis we have {{analyzed}} the software system DAIM, {{which is a}} web-based delivery system used at NTNU in connection with master theses and master students, with respect to software faults. Based on the documentation from the design stage of the DAIM project we have performed a technique called Preliminary Hazard Analysis (PHA), which is an analysis technique from safety-critical development. The results from this analysis have been compared with existing <b>fault</b> <b>reports</b> containing actual <b>faults</b> discovered in the system. Some of the intention behind our work has been to find if hazards identified with PHA {{can be related to}} actual faults found in the <b>fault</b> <b>reports.</b> In [17] it is stated that correcting software faults in later phases of the software development is much more expensive than in earlier phases and we have performed the PHA to see if some of the faults could have been avoided. We found that there were some connections between some of the faults and hazards identified, but the results were not entirely as expected. In our previous work we did a similar kind of analysis as we have done in this work regarding the analysis of <b>fault</b> <b>reports</b> and we have compared the results from our previous work with some of the results that we have obtained from this work to see how the distribution of fault types varies between the projects. The results showed that there were several differences between the projects, but some similarities were also discovered. </p...|$|R
50|$|In network {{management}}, {{fault management}} is {{the set of}} functions that detect, isolate, and correct malfunctions in a telecommunications network, compensate for environmental changes, and include maintaining and examining error logs, accepting and acting on error detection notifications, tracing and identifying faults, carrying out sequences of diagnostics tests, correcting <b>faults,</b> <b>reporting</b> error conditions, and localizing and tracing faults by examining and manipulating database information.|$|R
40|$|A rule-based, {{system-level}} {{fault detection}} and diagnostic (FDD) method for HVAC systems was developed. It functions as an interface between multiple, equipment-specific FDD tools and a human operator. The method resolves and prioritizes conflicting <b>fault</b> <b>reports</b> from equipment-specific FDD tools, performs FDD {{at the system}} level, and presents an integrated view of an HVAC systemâ€™s fault status to an operator. A simulation study to test and evaluate the method was conducted...|$|R
50|$|As another example, {{enabling}} <b>fault</b> <b>reporting</b> for Internet network packet delivery failure {{will increase}} network loading when {{the network is}} already busy, and that will cause total network outage.|$|E
50|$|<b>Fault</b> <b>reporting</b> is {{localised}} {{and system}} failure is generally only uncovered {{as a consequence}} of customer complaint. The fixed telecommunications network consists {{of a wide variety of}} mostly old technologies, some of which are obsolete.|$|E
50|$|Other {{kinds of}} <b>fault</b> <b>reporting</b> {{involves}} painting green, yellow, and red zones onto temperature gages, pressure gages, flow gages, vibration sensors, strain gages, and similar sensors. Remote viewing {{can be implemented}} using a video camera.|$|E
50|$|EESL is {{successfully}} {{implementing the}} energy efficiency schemes like UJALA (Unnat Jyoti by Affordable LEDs for All), Street Light National Programme (SLNP), National Energy Efficient fan distribution programme, Efficient Buildings programme. EESL is also implementing the worldâ€™s largest Agricultural Demand Side Management programme (AgDSM) wherein the Energy Efficient Pumpsets (EEPS) with Smart control Panel are being distributed to farmers free of cost. Smart control panels would enable facilities like remote (Mobile based) start/ Stop, <b>fault</b> <b>report</b> by SMS, etc.|$|R
30|$|The MapReduce P 2 P {{framework}} {{can also}} be applied to distributed computing applications, especially applications running on P 2 P networks. These applications process large amount of data on distributed workstations on the Internet. We apply this framework to improve the computation component of DisCaRia, a distributed case-based reasoning (CBR) system for resolving faults in network and communication systemsÂ [28, 29, 30, 31, 32, 33]. DisCaRia takes advantage of P 2 P technology to extend the conventional CBR systemsÂ [3], thus exploring problem solving knowledge resources in distributed environments, such as expert communities, ticket tracking systems (TTSs), forums and archives. Each peer contains an independent CBR component and exploits knowledge resources in parallel; the system therefore enhances the performance of managing huge datasets on various peers {{and the quality of}} various output solutions. The main disadvantage of DisCaRia is high computation cost and low efficiency of the computation component as the size of fault datasets increases. Note that <b>fault</b> <b>reports</b> contain several symptoms, error messages, distinct keywords, etc. MapReduce operations can deal with this problem by processing a large number of <b>fault</b> <b>reports</b> on various peers quickly and efficiently.|$|R
50|$|In 14% {{of deaths}} {{there was a}} {{regulator}} <b>fault</b> <b>reported,</b> and in 1% the regulator was misused. Subsequent testing of the regulators showed {{that most of the}} problems were caused by leaks resulting in inhalation of salt water, but in some cases there was excessive breathing resistance following a mechanical dysfunction. In a few cases the regulator failed catastrophically, or the hose burst. The difficulty of breathing from the regulator was often aggravated by other factors such as panic, exhaustion or badly adjusted buoyancy.|$|R
50|$|The {{historic}} AN/UYK-43 architecture includes active redundancy. It includes multiple processors, multiple memory banks, {{and multiple}} input-output devices with interfaces for multiple disk drives. Power-on self test firmware incorporates features that reconfigure software loading {{in order to}} bypass failure. This allows it to run in degraded mode with failed processors, failed memory, failed disk drives, and failed input/output devices. Remote status boards perform <b>fault</b> <b>reporting.</b>|$|E
50|$|<b>Fault</b> <b>reporting</b> is an {{optional}} feature {{that can be}} forwarded to remote displays using simple configuration setting in all modern computing equipment. The system level of reporting that is appropriate for Condition Based Maintenance are critical, alert, and emergency, which indicate software termination due to failure. Specific failure reporting, like interface failure, can be integrated into applications linked with these reporting systems. There is no development cost if these are incorporated into designs.|$|E
50|$|A mock-up was {{manufactured}} in Japan after Kawasaki won the contract. It was shipped to Singapore {{and put on}} public display during the 1984 National Exhibition held in November 1984 at World Trade Centre. The mock-up featured three choices of seating arrangements and colour schemes; {{members of the public}} were invited to give feedback on these options. The finalised interior design of the C151 trains consisted of a fully longitudinal seating arrangement. The bucket seats were made of plastic; glass partitions separated the seating areas from the passenger doors. Strap lines for standing passengers were installed in the middle of every car. The colour scheme of each adjacent car's interior is distinct to make car identification in cases of <b>fault</b> <b>reporting</b> easier for passengers. Originally the colour scheme of the driving trailer cars was orange, that of the second and fifth motor cars was blue, and that of the two centre motor cars was green. There were nine seats between two doors; this was reduced to seven after the first round of refurbishment.|$|E
50|$|This {{requires}} automatic <b>fault</b> {{detection and}} <b>reporting.</b>|$|R
5000|$|... #Subtitle level 2: 2006-2010: EPA, CDC, expert <b>reports</b> <b>faulted</b> ...|$|R
40|$|This paper {{discusses}} Structural Health Monitoring (SHM) {{design as}} a subsystem to the Integrated Vehicle Health Management (IVHM) system of an aircraft. Starting with detection and tracking of damage using active interrogation by elastic waves, {{we discuss the}} damage estimation in an SHM system as a Member System within Honeywellâ€™s Central Maintenance Computer (CMC) IVHM. The additional SHM data integration described includes: spatio-temporal filtering, damage reporting, and generation of the BIT <b>fault</b> <b>reports</b> in the CMC Member System format. The approach is illustrated for data collected on bonded composite repair patches experiencing crack growth due to cyclic loading...|$|R
40|$|The {{traditional}} Automatic Test Equipment (ATE) {{systems are}} insufficient {{to cope with}} the challenges of testing more and more complex avionics systems. In this study, we propose a general method for module automatic testing in the avionics test platform based on PXI bus. We apply virtual instrument technology to realize the automatic testing and the <b>fault</b> <b>reporting</b> of signal performance. Taking the avionics bus ARINC 429 as an example, we introduce the architecture of automatic test system as well as the implementation of algorithms in Lab VIEW. The comprehensive experiments show the proposed method can effectively accomplish the automatic testing and <b>fault</b> <b>reporting</b> of signal performance. It greatly improves the generality and reliability of ATE in avionics systems...|$|E
40|$|A good {{interaction}} between public administrations and citizens is imperative in modern smart cities. Semantic web technologies can aid in achieving such a goal. We present a smart urban <b>fault</b> <b>reporting</b> web platform to help citizens in reporting common urban problems, such as street faults, potholes or broken street lights, {{and to support}} the local public administration in responding and fixing those problems quickly. The tool {{is based on a}} semantic data model designed for the city, which integrates several distinct data sources, opportunely re-engineered to meet the principles of the Semantic Web and linked open data. The platform supports the whole process of road maintenance, from the <b>fault</b> <b>reporting</b> to the management of maintenance activities. The integration of multiple data sources enables increasing interoperability and heterogeneous information retrieval, thus favoring the development of effective smart urban <b>fault</b> <b>reporting</b> services. Our platform was evaluated in a real case study: a complete urban reporting and road maintenance system has been developed for the municipality of Catania. Our approach is completely generalizable and can be adopted by and customized for other cities. The final goal is to stimulate smart maintenance services in the "cities of the future"...|$|E
40|$|International audienceWe {{consider}} {{a group of}} players who perform tasks repeatedly. The players are nodes of a communication network and observe their neighbors' actions. Players have partial knowledge of the network and only know their set of neighbors. We study the existence of protocols for fault reporting: whenever a player chooses a faulty action, the communication protocol starts and the output publicly reveals {{the identity of the}} faulty player. We consider two setups. In the first one, players do not share authentication keys. We show that existence of a protocol for <b>fault</b> <b>reporting</b> is equivalent to the 2 -vertex-connectedness of the network: no single vertex deletion disconnects the graph. In the second setup, we allow players to share authentication keys. We show that existence of a distribution of the keys and of a protocol for <b>fault</b> <b>reporting</b> is equivalent to the 2 -edge-connectedness of the network: no single edge deletion disconnects the graph. We give applications to the implementation of socially optimal outcomes in repeated games...|$|E
40|$|Reliability {{analyses}} of software systems often {{focus only on}} the number of <b>faults</b> <b>reported</b> against the software. Using a broader set of metrics, such as problem resolution times and field software usage levels, can provide a more compre-hensive view of the product. Some of these metrics are more readily available for open source products. We analyzed a suite of FEDORA releases and obtained some interest-ing findings. For example, we show that traditional relia-bility models may be used to predict problem rates across releases. We also show that security related reports tend to have a different profile than non-security related problem reporting and repair...|$|R
40|$|Todayâ€™s {{construction}} buildings {{contain more}} advanced technologies than before. The development of newer and stricter regulations {{to the construction}} industry makes the door environment more and more complex. In large construction projects the door environment is held up as a major challenge to get to in a good way. It turned out after a discussion with one project manager and a site manager at NCC, that the door environment is difficult to get right in major construction projects and it often causes many error reports in to the aftermarket after that the final inspection is completed. Interviews have been done with key figures in the building process at NCC and Akademiska hus. A study on a university building for around 3500 students and with 300 workplaces was made. There {{were a lot of}} data with <b>fault</b> <b>reports</b> to the go trough to find <b>fault</b> <b>report</b> from doors and be analyzed and statistic. The results from the data collection showed that many fault messages on the doors in was caused by the door operator. And from the interviews the content was clear that the coordination has to be good to have a functioning and a good door environment. One part that can contribute to a better door environment is to plan space for possible door operator over the door. Another part is that the construction documents which production workers are working with, is {{to find a way to}} always have the latest documents in hand...|$|R
5000|$|<b>Fault</b> Management - <b>Report</b> errors {{from the}} device, query about status of device ...|$|R
