15|465|Public
50|$|<b>Flow</b> <b>computers</b> are {{available}} as completely programmable devices {{using a variety}} of software tools or as configurable devices using manufacturer's specific configuration software packages to set up interfaces to gas chromatographs, gas ultrasonic meters, liquid provers, flow control valves, PLC, DCS, SCADA and industry-recognized HMI supervisory systems. Modbus/TCP is a standard offering via Ethernet interfaces from some <b>flow</b> <b>computers,</b> although other communications protocols, such as OLE are supported by some <b>flow</b> <b>computers.</b> Security issues are very significant in SCADA system development using <b>flow</b> <b>computers.</b>|$|E
50|$|A key {{component}} in custody transfer systems, <b>flow</b> <b>computers</b> can be approved to metrological and quality standards such as OIML R117-1 for liquids, EN12405 for gas, WELMEC 7.2 for software development, and ISO 9001:2008. These are considered key selection criteria for <b>flow</b> <b>computers</b> that are installed in Europe, Middle East, Asia and also Latin America.|$|E
50|$|<b>Flow</b> <b>computers</b> {{generally}} {{need the}} base conditions for each flow meter to be configured.|$|E
40|$|A data <b>flow</b> <b>computer</b> is {{a highly}} {{concurrent}} and asynchronous multiprocessor due to its fundamentally new architecture. It has no program counter and is not sequential. Instructions execute whenever their operands are available to them. Because of this data-activated instruction execution, multiple instructions can execute concurrently. The project for this thesis was the simulation of a data <b>flow</b> <b>computer.</b> A graph language and machine language were defined; then a simulator was written which reads and executes a machine language program in the asynchronous and concurrent manner of a data <b>flow</b> <b>computer...</b>|$|R
5000|$|In {{addition}} to providing volumetric, mass and energy flow data, the gas <b>flow</b> <b>computer</b> also provides date and time, instantaneous, hourly and daily data. The gas <b>flow</b> <b>computer</b> typically stores date/time stamped volume records in RAM for up to 35 days {{in order to provide}} sufficient time for a host system to retrieve the records as well as to allow time for human intervention if this retrieval fails to occur. The <b>flow</b> <b>computer</b> generally tracks modifications to flow parameters (e.g. orifice plate size or gas analysis data) in an [...] "Audit Trail" [...] that identifies the modified parameter, the time and date of the value change, the old and new values, and may identify the person making the change. The data log format and contents vary slightly by <b>flow</b> <b>computer</b> manufacturer, with all manufacturers designing to a specification outlined by the American Petroleum Institute.|$|R
50|$|API MPMS Chapter 21â€”Chapters 21.1 - Electronic Gas Systems, and Chapter 21.2 - Liquid Electronic Systems {{address the}} ability to audit and verify the {{information}} produced by a <b>flow</b> <b>computer,</b> and defines the data which a <b>flow</b> <b>computer</b> should retain, the items which should be audited if modified, the reports which the system will be capable of producing and the methodologies to follow.|$|R
50|$|Algorithms one {{can expect}} to see {{implemented}} in a typical gas flow computer are AGA Report No. 3, AGA Report No. 7, AGA Report No. 8 in the U.S. market. Internationally, ISO 5167-1:2003 and other ISO gas standard equivalents are in widespread use. Additional to natural gas, some <b>flow</b> <b>computers</b> offer an array of density calculations for steam, oxygen, hydrogen, nitrogen, and ethylene. Complex algorithms and Equations of State for wide ranges of hydrocarbon fluids and petrochemicals can also be found in liquid <b>flow</b> <b>computers.</b> API MPMS Chapter 11.1 (2004), NIST 1045 and IUPAC for ethylene measurement, GPA TP-27 for LPGs and NGLs are amongst an array of calculations performed by liquid <b>flow</b> <b>computers.</b> Other corrections specific to particular types or manufacturers of flow meters may also be implemented. <b>Flow</b> <b>computers</b> can include meter viscosity linearization functions for various meter types such as helical turbine meters, and interface serially with ultrasonic meters to obtain flow and diagnostic data.|$|E
40|$|This paper {{describes}} about Data <b>Flow</b> <b>Computers.</b> The dataflow {{model of}} computation offers an attractive alternative to control flow in extracting parallelism from programs. The {{execution of a}} dataflow instruction {{is based on the}} availability of its operand(s); hence, the synchronization of parallel activities is implicit in the dataflow model. Instructions in the dataflow model do not impose any constraints on sequencing except for the data dependencies in the program...|$|E
40|$|Abstract: Multiprocessor {{systems are}} {{possible}} to use for parallel computation related to association and classification tasks. For efficient solution above described tasks are used neural networks in which computation is processed in sense of data-driven executing. Similar model is used in data <b>flow</b> <b>computers</b> also. This article describes abilities of transformation neural networks to computation model applied in Neural DF data flow system assigned for solution of classification tasks with neural networks...|$|E
40|$|A {{processing}} element and {{a structure}} element of data <b>flow</b> <b>computer</b> SIGMA-I for scientif ic computat ions is now operational. The elements are evaluated for several benchmark programs. For eff ic ient execution of loop constructs, the st icky token mechanism which holds loop invariants is evaluated and exhibits a remarkable effect. From the standpoint that {{performance of a}} single processor of a data <b>flow</b> <b>computer</b> must be {{comparable to that of}} a Von Neumann computer, comparison of both computers is d iscussed and improvement of th...|$|R
40|$|Two {{methods of}} {{measuring}} total energy flow have been compared with one another. The first method uses a <b>flow</b> <b>computer</b> which has as inputs the pressure, temperature, and pressure differential from an orifice meter. This method also uses continuous measurements of relative density and calorific value. The output from the <b>flow</b> <b>computer</b> is the instananeous energy flow. The second method uses a new energy flowmeter that is under development. It directly measures energy flow without measuring either calorific value of volumetric flow. This energy flowmeter {{has been operating}} in a test mode for about one year at a field metering site. In this paper {{some of the most}} recent experimental results are presented. ...|$|R
5000|$|A <b>flow</b> <b>computer</b> is an {{electronic}} computer which implements algorithms using the analog and digital signals received from flow meters, temperature, pressure and density transmitters {{to which it}} is connected into volumes at base conditions. They are used for custody or fiscal transfer.|$|R
40|$|The {{demands for}} {{concurrent}} operation within {{a computer system}} and the representation of parallelism in programming languages have yielded {{a new form of}} program representation known as data flow (DENN 74, DENN 75, TREL 82 a). A new model based on data flow principles for parallel computations and parallel computer systems is presented. Necessary conditions for liveness and deadlock freeness in data flow graphs are derived. The data flow graph is used as a model to represent asynchronous concurrent computer architectures including data <b>flow</b> <b>computers...</b>|$|E
40|$|Among {{the highly}} {{parallel}} computing architectures required for advanced scientific computation, those designated 'MIMD' and 'SIMD' have yielded {{the best results}} to date. The present development status evaluation of such architectures shown neither to have attained a decisive advantage in most near-homogeneous problems' treatment; {{in the cases of}} problems involving numerous dissimilar parts, however, such currently speculative architectures as 'neural networks' or 'data flow' machines may be entailed. Data <b>flow</b> <b>computers</b> are the most practical form of MIMD fine-grained parallel computers yet conceived; they automatically solve the problem of assigning virtual processors to the real processors in the machine...|$|E
40|$|The FASTER project Run-Time System Manager offloads programmers from {{low-level}} operations {{by performing}} task placement, scheduling, and dynamic FPGA reconfiguration. It also manages device fragmentation, configuration caching, pre-fetching and reuse, bitstream compression, and optimizes the system thermal and power footprints. We propose a micro-reconfiguration aware, configuration content agnostic ISA interface and a technology independent Task Configuration Microcode format targeting Maxeler Data <b>Flow</b> <b>computers</b> and Xilinx XUPV 5 platforms. We achieve improved resource utilization with negligible performance overhead. Up to 4 Gbps for DMA transfers, {{and up to}} 3 Gbps for FPGA reconfiguration on Xilinx Virtex- 5 / 6 devices is achieved...|$|E
40|$|This {{product was}} {{deployed}} on the Trans-Siberian pipelineThis presentation discusses {{some of the}} problems in accurate measurement of the flow rate of hydrocarbon gas; briefly reviews the limitations of analogue solutions; and finally presents a viable solution that employs a microprocessor-based gas <b>flow</b> <b>computer...</b>|$|R
40|$|This paper {{presents}} {{a method of}} producing shaded images of terrain at an extremely fast rate by exploiting parallelism. The architecture of the Data <b>Flow</b> <b>Computer</b> is explained along with an appropriate "program" to compute the images. It is shown how shaded images of terrain can be computed in less than one-tenth of a second using a moderate-sized Data <b>Flow</b> <b>Computer.</b> This report describes research done at the Artificial Intelligence Laboratory of the Massachusetts Institute of Technology. Support for the laboratory's artificial intelligence research is provided {{in part by the}} Advanced Research Projects Agency of the Department of Defense under Office of Naval Research contract N 00014 - 75 -C- 0643. MIT Artificial Intelligence Laboratory Department of Defense Advanced Research Projects Agenc...|$|R
50|$|In his {{graduate}} work at MIT, Rumbaugh {{contributed to the}} development of data <b>flow</b> <b>computer</b> architecture. His thesis described parallel programming language, parallel processor computer and a basis for a network architecture, which orients itself at data flow. Rumbaugh made further contributions to Object Modeling Technique, IDEF4, the Rational Unified Process and Unified Modeling Language.|$|R
40|$|Data <b>flow</b> <b>computers</b> are {{high-speed}} {{machines in}} which an instruction is executed as soon as all its operands are available. This paper describes the EXtended MANchester (EXMAN) data flow computer which incorporates three major extensions to the basic Manchester machine. As extensions we provide a multiple matching units scheme, an efficient, implementation of array data structure, and a facility to concurrently execute reentrant routines. A simulator for the EXMAN computer has been coded in the discrete event simulation language, SIMULA 67, on the DEC 1090 system. Performance analysis {{studies have been conducted}} on the simulated EXMAN computer to study the effectiveness of the proposed extensions. The performance experiments have been carried out using three sample problems: matrix multiplication, Bresenham's line drawing algorithm, and the polygon scan-conversion algorithm...|$|E
40|$|In {{the past}} decade, energy {{monitoring}} {{has become an}} invaluable part of energy conservation programs. A fully implemented and effective monitoring program provides management with the assurance that all other elements of their energy management program are performing properly and, if not, what actions to take. In 1973, total energy monitoring programs were virtually non-existent. During the past twelve years, rising energy costs have called into being significant new concepts and innovations for monitoring energy. This paper presents a progress report on the state-of-the-art in energy monitoring. It investigates the technological breakthroughs achieved in transducers, micro- processor-based <b>flow</b> <b>computers</b> and a PC-based data acquisition system. These technical advances did not exist a decade ago, and their presence is uniquely tied {{to the need to}} measure and to control energy...|$|E
40|$|We {{introduce}} a scheduling model, inspired by data <b>flow</b> <b>computers,</b> {{in which the}} overhead incurred in a system as well as computation time are described explicitly. Using this model, we provide algorithms for partitioning programs so as to minimize their completion time. In the traditional data flow paradigm, every instruction is considered a "task", and it is scheduled for execution as early as possible. Implementations of this scheme, however, involve overheads which affect the running time of the programs. We propose to partition the program into larger grains, each containing one or more instructions, such that scheduling those grains would result in minimizing the completion time. Our model accounts for both the overhead incurred when executing a program and the actual execution time of its instructions. Within this framework we derive lower and upper bounds on the execution time of programs represented as trees and DAGs. We provide algorithms for optimally partitioning [...] ...|$|E
40|$|Abstract. This paper {{presents}} {{a method of}} producing shaded images of terrain at an extremely fast rate by exploiting parallelism. The architecture of the Data <b>Flow</b> <b>Computer</b> is explained along with an appropriate "program " to compute the images. It is shown how shaded images of terrain can be. computed in less than one-tenth of a second using...|$|R
40|$|The {{durability}} of the SSME turbine is strongly {{affected by the}} temperature profile leaving the preburner. A reacting <b>flow</b> <b>computer</b> model to predict the turbine inlet temperature profile was used. Calculations were made by using a reacting flow code, to assess {{the sensitivity of the}} turbine inlet temperature profile to variations in the flow entering the SSME preburner...|$|R
5000|$|Other input {{parameters}} include contract hour {{as well as}} location latitude and altitude above sea level, isentropic exponent and type of materials used in the metering device to optimize the accuracy of calculations. In summary the gas <b>flow</b> <b>computer</b> requires approximately 30 initial {{input parameters}} in conjunction with [...] "near realtime" [...] gas flow, pressure and temperature sensing.|$|R
40|$|Data flow is {{a mode of}} {{parallel}} computation in which parallelism in a program can be exploited at the fine grained as well as macro level. A data flow computer executes a data dependency graph rather than the program counter controlled sequence of instructions executed by conventional machines. Nonprocedural languages appear to be especially appropriate high level languages for data <b>flow</b> <b>computers.</b> Nonprocedural languages have only two statement forms: data description and assertion. The assertions enumerate the relationships among the data. A data dependency graph is also a suitable representation for a nonprocedural language program (or specification). This research is concerned with translating the dependency graph form of a specification to a program graph for a data flow machine. Specifications in the MODEL language are translated into an intermediate form, the data flow template. The template is a language-independent representation of the specification. The template is then translated into a data flow language (Manchester Dataflow) for the Manchester University machine. The translation consists of creating an array graph to represent the specification; generating the data flo...|$|E
40|$|Many novel {{computer}} architectures like array and multiprocessors which achieve high performance {{through the use}} of concurrency exploit variations of the von Neumann model of computation. The effective utilization of the machines makes special demands on programmers and their programming languages, such as the structuring of data into vectors or the partitioning of programs into concurrent processes. In comparison, the data flow model of computation demands only that the principle of structured programming be followed. A data flow program, often represented as a data flow graph, is a program that expresses a computation by indicating the data dependencies among operators. A data flow computer is a machine designed to take advantage of concurrency in data flow graphs by executing data independent operations in parallel. In this paper, we discuss the design of a high level language (DFL: Data Flow Language) suitable for data <b>flow</b> <b>computers.</b> Some sample procedures in DFL are presented. The implementation aspects have not been discussed in detail since there are no new problems encountered. The language DFL embodies the concepts of functional programming, but in appearance closely resembles Pascal. The language is a better vehicle than the data flow graph for expressing a parallel algorithm. The compiler has been implemented on a DEC 1090 system in Pascal...|$|E
40|$|Big data {{processing}} {{is becoming a}} reality in numerous real-world applications. With {{the emergence of new}} data intensive technologies and increasing amounts of data, new computing concepts are needed. The integration of big data producing technologies, such as wireless sensor networks, Internet of Things, and cloud computing, into cyber-physical systems is reducing the available time to find the appropriate solutions. This paper presents one possible solution for the coming exascale big {{data processing}}: a data flow computing concept. The performance of data flow systems that are processing big data should not be measured with the measures defined for the prevailing control flow systems. A new benchmarking methodology is proposed, which integrates the performance issues of speed, area, and power needed to execute the task. The computer ranking would look different if the new benchmarking methodologies were used; data flow systems would outperform control flow systems. This statement is backed by the recent results gained from implementations of specialized algorithms and applications in data flow systems. They show considerable factors of speedup, space savings, and power reductions regarding the implementations of the same in control <b>flow</b> <b>computers.</b> In our view, the next step of data flow computing development should be a move from specialized to more general algorithms and applications. Peer ReviewedPostprint (published version...|$|E
5000|$|Originally the gas <b>flow</b> <b>computer</b> was a {{mechanical}} (1920s technology) or later a pneumatic or hydraulic computing module (1940s technology {{used to the}} early 1990s but still available {{from a number of}} suppliers), subsequently superseded in most applications by an electronic module, as the primary elements switched from transmitting the measured variables from pneumatic or hydraulic pressure signals to electric current as explosion-proof (1960s technology to present)) and then intrinsically safe (1970s to present) transmitters (with low-power transistor circuitry) became available, that simply provided a dedicated gas <b>flow</b> <b>computer</b> function. Today [...] "gas flow computers" [...] as such have become uncommon, since gas flow computing is a subfunction of a data acquisition and control program implemented with programmable logic controller (PLCs) and remote terminal unit (RTUs); with the rise of smart transmitters in the early 1980s, these functions have also been incorporated within the field transmitters themselves.|$|R
40|$|Computational fluid {{dynamics}} (CFD) {{is one of}} the branches of fluid mechanics that uses numerical methods and algorithms to solve and analyse problems that involve fluid <b>flows.</b> <b>Computers</b> are used to perform the millions of calculations required to simulate the interaction of liquids and gases with surfaces defined by boundary conditions. This book presents topical research in the study of computational {{fluid dynamics}}...|$|R
40|$|Accurate {{measurement}} of hydrocarbon gas in 2 and 3 m pipelines using AGA 9 correctionThe paper discusses {{the problems in}} accurate {{measurement of}} the flow rate of hydrocarbon gas and presents a viable solution that employs a microprocessor - based gas <b>flow</b> <b>computer.</b> The intended application of this instrument is the custody transfer of natural gas. The computational accuracy {{is plus or minus}} 0. 05...|$|R
40|$|AbstractThe {{concepts}} of a data <b>flow</b> and sequential <b>computers</b> are confronted using models {{written in the}} functional language Miranda. 11 Miranda is a trademark of Research Software Ltd. A unified approach to both schemes of processing is presented together with {{an example of a}} simple problem, unsolvable sequentially, but easy for a data <b>flow</b> <b>computer.</b> Although these models have been designed to explain the concepts to students, they can be also used by researchers in comparative studies and general experiments. The model of a data flow machine seems to be especially useful, as hardware implementations are not widely available...|$|R
40|$|Modern {{computer-aided}} designing software {{provides the}} possibility to improve precision, productivity and to organize the information <b>flow.</b> <b>Computer</b> systems allow making two-dimensional and three-dimensional product illustrations and visualizations. To {{learn how to use}} the CAD/CAM systems, there are several systems taught at the Institute of Textile Materials Technologies and Design. The systems providing full garment development and production cycle are important for the manufacturing and, hence, for educational purposes...|$|R
50|$|As the {{differential}} pressure {{is not directly}} proportional to the gas flow rate, a <b>flow</b> <b>computer</b> algorithm is required to convert {{the differential}} pressure reading into a flow rate (may include square root extraction to linearize the input). Since gas is compressible and affected by temperature, the gas temperature and pressure must also be monitored and compared to a specified standard temperature and pressure within the algorithm. This {{is referred to as}} volumetric flow measurement.|$|R
40|$|An {{examination}} of the potential <b>flow</b> <b>computer</b> code VSAERO to model leading edge separation over a delta wing is examined. Recent improvements to the code suggest {{that it may be}} capable of predicting pressure coefficients on the body. Investigation showed that although that code does predict the vortex roll-up, the pressure coefficients have significant error. The program is currently unsatisfactory, but with some additional development it may become a useful tool for this application...|$|R
50|$|Next {{we need to}} {{calculate}} mass flow AGA3 based upon the specific gravity of the gas. Since a natural gas stream contains a mix of various hydrocarbon gases of different specific gravities, mole percentages must be determined via a gas sample analysis. Note also that the mixed gas stream will also contain some inert gases such as nitrogen and carbon dioxide. Therefore the gas <b>flow</b> <b>computer</b> also requires the entry of mole percentages for each gas component.|$|R
40|$|The {{time-dependent}} three-dimensional incompressible Navier-Stokes equations {{are used}} to study the mechanisms and developing structures comprising the later stages of the transition to turbulence in plane channel <b>flow.</b> <b>Computer</b> animated <b>flow</b> visualizatons are employed using three-dimensional vortex lines and other graphical representations. The flow visualizations clearly show the development of organized structures such as vortex loops, horse-show vortices, and vortex rings. It is noted {{that the development of}} these structures is similar to the bursting process found in turbulent channel flow...|$|R
