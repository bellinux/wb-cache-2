19|1482|Public
500|$|For natural {{language}} plaintext, there will typically {{be only one}} plausible decryption, although for extremely short plaintexts, multiple candidates are possible. For example, the ciphertext MPQY could, plausibly, <b>decrypt</b> <b>to</b> either [...] "aden" [...] or [...] "know" [...] (assuming the plaintext is in English); similarly, [...] "ALIIP" [...] to [...] "dolls" [...] or [...] "wheel"; and [...] "AFCCP" [...] to [...] "jolly" [...] or [...] "cheer" [...] (see also unicity distance).|$|E
5000|$|The {{product of}} two ciphertexts will <b>decrypt</b> <b>to</b> {{the sum of}} their {{corresponding}} plaintexts, ...|$|E
5000|$|An {{encrypted}} plaintext {{raised to}} the power of another plaintext will <b>decrypt</b> <b>to</b> the product of the two plaintexts, ...|$|E
5000|$|Malleability is a {{property}} of some cryptographic algorithms. An encryption algorithm is [...] "malleable" [...] {{if it is}} possible for an adversary to transform a ciphertext into another ciphertext which <b>decrypts</b> <b>to</b> a related plaintext. That is, given an encryption of a plaintext , it is possible to generate another ciphertext which <b>decrypts</b> <b>to</b> , for a known function , without necessarily knowing or learning [...]|$|R
40|$|Over {{the last}} few years, Secured {{transmission}} of data {{has been a major}} issue in data communication. This project mainly concerns about the security of confidential information and data transmission using public key cryptography with Genetic Algorithm in order to provide confidentiality, authentication, integrity and non-repudiation of the messages. First, an algorithm is developed and implemented to generate a key pair (Private and public Key). A plain text is encrypted using the Public Key of receiver to produce an intermediate cipher. The intermediate cipher is again encrypted using genetic algorithm to produce final cipher. The final cipher first <b>decrypted</b> <b>to</b> produce the intermediate cipher which in turn <b>decrypted</b> <b>to</b> get the plain text using the Private key of the receiver or vice versa...|$|R
5000|$|Sent to the Fedje area, Venturer {{was then}} ordered {{on the basis}} of Enigma <b>decrypts</b> <b>to</b> seek, {{intercept}} and destroy [...] which was in the area. U-864 was carrying a cargo of 65 tonnes of mercury and Messerschmitt Me 262 Junkers Jumo 004B jet engine parts to Japan, a mission code-named Operation Caesar.|$|R
5000|$|The {{product of}} a {{ciphertext}} with a plaintext raising [...] will <b>decrypt</b> <b>to</b> {{the sum of the}} corresponding plaintexts, ...|$|E
5000|$|More generally, an {{encrypted}} plaintext {{raised to}} a constant k will <b>decrypt</b> <b>to</b> {{the product of}} the plaintext and the constant, ...|$|E
5000|$|If {{the length}} of the message happens not to be {{divisible}} by five, it may be padded at the end with [...] "nulls". These can be any characters that <b>decrypt</b> <b>to</b> obvious nonsense, so the receiver can easily spot them and discard them.|$|E
50|$|In order <b>to</b> <b>decrypt</b> a DVD-Video, {{the player}} reads the disc-key-block and uses its player-key <b>to</b> <b>decrypt</b> the disc-key. Thereafter, the player reads the title-keys and decrypts {{them with the}} disc-key. A {{different}} title-key can be assigned for the Video Manager and for each Video Title Set. The title-keys are used <b>to</b> <b>decrypt</b> the Packs.|$|R
30|$|If {{the patient}} then uses the local key <b>to</b> <b>decrypt,</b> the {{convergence}} key kP is obtained {{and if the}} convergence key is used <b>to</b> <b>decrypt,</b> the plaintext PHR is obtained.|$|R
5000|$|Pn−1 = Decrypt (K, En−1). <b>Decrypt</b> En−1 <b>to</b> create Pn−1. This reverses {{encryption}} step 1.|$|R
50|$|Occasionally, Ribbentrop would {{forward a}} <b>decrypt</b> <b>to</b> the Führers HQ for Hitlers attention, {{but in the}} highly {{competitive}} world of wartime German intelligence, where knowledge and control of resources was power, there was little incentive to circulate the product to a wider audience and {{it is unlikely that}} Ribbentrop shared his decrypts with other departments.|$|E
5000|$|For natural {{language}} plaintext, there will typically {{be only one}} plausible decryption, although for extremely short plaintexts, multiple candidates are possible. For example, the ciphertext MPQY could, plausibly, <b>decrypt</b> <b>to</b> either [...] "aden" [...] or [...] "know" [...] (assuming the plaintext is in English); similarly, [...] "ALIIP" [...] to [...] "dolls" [...] or [...] "wheel"; and [...] "AFCCP" [...] to [...] "jolly" [...] or [...] "cheer" [...] (see also unicity distance).|$|E
50|$|Cryptanalysis of Playfair {{is similar}} to that of four-square and two-square ciphers, though the {{relative}} simplicity of the Playfair system makes identifying candidate plaintext strings easier. Most notably, a Playfair digraph and its reverse (e.g. AB and BA) will <b>decrypt</b> <b>to</b> the same letter pattern in the plaintext (e.g. RE and ER). In English, there are many words which contain these reversed digraphs such as REceivER and DEpartED. Identifying nearby reversed digraphs in the ciphertext and matching the pattern to a list of known plaintext words containing the pattern is an easy way to generate possible plaintext strings with which to begin constructing the key.|$|E
3000|$|... {{before making}} Initial private key {{generation}} query, Temporal private key generation query and <b>Decrypt</b> query <b>to</b> Simulator.|$|R
5000|$|Dn = Decrypt (K, Cn−1). <b>Decrypt</b> Cn−1 <b>to</b> create Dn. This undoes step 4 of the {{encryption}} process.|$|R
50|$|Clausen had an authorising {{letter from}} Stimson informing {{witnesses}} {{he had the}} necessary clearances to require their cooperation, but he was often lied to until he produced copies of about 40 top secret ‘Magic’ <b>decrypts,</b> <b>to</b> prove he had the proper clearance. Previously they had been required to lie under oath to protect the secret of 'Magic'. He wore the decrypts in a self-destructing bomb pouch to satisfy security concerns.|$|R
5000|$|Normally, ciphertexts <b>decrypt</b> <b>to</b> {{a single}} {{plaintext}} that {{is intended to}} be kept secret. However, one form of deniable encryption allows its users to decrypt the ciphertext to produce a different (innocuous but plausible) plaintext and plausibly claim that it is what they encrypted. The holder of the ciphertext {{will not be able to}} differentiate between the true plaintext, and the bogus-claim plaintext. In general, decrypting one ciphertext to multiple plaintexts is not possible unless the key is as large as the plaintext, so this is not practical for most purposes. [...] However, some schemes allow decryption to decoy plaintexts that are close to the original in some metric (such as edit distance).|$|E
50|$|In 2006, Bittau, Handley, and Lackey {{showed that}} the 802.11 {{protocol}} itself can be used against WEP to enable earlier attacks that were previously thought impractical. After eavesdropping a single packet, an attacker can rapidly bootstrap {{to be able to}} transmit arbitrary data. The eavesdropped packet can then be decrypted one byte at a time (by transmitting about 128 packets per byte to <b>decrypt)</b> <b>to</b> discover the local network IP addresses. Finally, if the 802.11 network is connected to the Internet, the attacker can use 802.11 fragmentation to replay eavesdropped packets while crafting a new IP header onto them. The access point can then be used to decrypt these packets and relay them on to a buddy on the Internet, allowing real-time decryption of WEP traffic within a minute of eavesdropping the first packet.|$|E
40|$|In [D 08] a Visual Cryptography System for {{internet}} banking based on Dice Codings was presented. In this system each user has a key-transparency, {{working as a}} One-Time Pad, which allows him to decrypt the ciphertext. Key-transparency, ciphertext and plaintext consist of ten segments each with nine points. Decryption is done pointwise. Points of the key-transparency are linked by a ’NOT XOR ’ function with their respective ciphertext’s counterparts and <b>decrypt</b> <b>to</b> a ’point ’ or ’no point ’ plaintext. Since each segment consists of nine ’points ’ or ’no points ’ digits from ’ 0 ’ to ’ 9 ’ can be represented by a plaintext segment. If the key-transparency is used multiple times, we show that conclusions about it can be drawn. More precisely, the scope of key-transparencies {{can be reduced to}} the one used and its inverse. Our attack makes use of the fact, that each plaintext has to consist of all digits from ’ 0 ’ to ’ 9 ’. Thus, plaintexts which include the same digit twice are invalid. Therefore, we are able to exclude key-transparencies which would <b>decrypt</b> <b>to</b> an invalid plaintext. Since two segments can be attacked independently from the remaining eight segments, our proof of concept code only attacks two segments. 20 000 iterations suggest that 70 (90) key-transparencie...|$|E
50|$|The {{earliest}} PALs {{were little}} more than locks introduced into the control and firing systems of a nuclear weapon, that would inhibit either the detonation, or the removal of safety features of the weapon. More recent innovations have included encrypted firing parameters, which must be <b>decrypted</b> <b>to</b> properly detonate the warhead, plus anti-tamper systems which intentionally mis-detonate the weapon, destroying it without giving rise to a nuclear explosion.|$|R
50|$|The {{function}} of the Room 40 program was compromised by the Admiralty's insistence upon interpreting Room 40 information in its own way. Room 40 operators were permitted <b>to</b> <b>decrypt</b> but not <b>to</b> interpret the information they acquired.|$|R
50|$|Sometime in November 1943, Golos met in New York City {{with key}} {{figures of the}} Perlo group, a group working in several {{government}} departments and agencies in Washington, D.C. The group {{was already in the}} service of Browder. Later that same month, after a series of heart attacks over the previous two years, Golos died in bed in Bentley's arms. Bentley then took over his operations (thus the reference in the <b>decrypts</b> <b>to</b> him as a “former” colleague).|$|R
40|$|International audienceWe {{propose a}} {{methodology}} to construct verifiable random functions from {{a class of}} identity based key encapsulation mechanisms (IB-KEM) that we call VRF suitable. Informally, an IB-KEM is VRF suitable if it provides what we call unique decryption (i. e. given a ciphertext C produced with respect to an identity ID, all the secret keys corresponding to identity ID′, <b>decrypt</b> <b>to</b> the same value, even if ID≠ID′) and it satisfies an additional property that we call pseudorandom decapsulation. In a nutshell, pseudorandom decapsulation means that if one decrypts a ciphertext C, produced with respect to an identity ID, using the decryption key corresponding to any other identity ID′ the resulting value looks random to a polynomially bounded observer. Interestingly, we show that most known IB-KEMs already achieve pseudorandom decapsulation. Our construction is of interest both from a theoretical and a practical perspective. Indeed, apart from establishing a connection between two seemingly unrelated primitives, our methodology is direct in the sense that, in contrast to most previous constructions, it avoids the inefficient Goldreich-Levin hardcore bit transformation...|$|E
40|$|Abstract The {{ballast water}} may be {{discharged}} into another sea area with marine organisms, it caused problems {{to disturb the}} marine ecosystem. So, in order to remove these environmental risk factors, the IMO has mandated the installation of BWTS to the all ships. Our monitoring system diagnose and predict a failure of BWTS by analyzing the sensor information of BWTS collected from which the ships scattered in the ocean of several. This paper presents the design and implementation of communication modules for BWTS remote monitoring considering the satellite communication charge fee. In the our study, we implemented the safety and cost-saving communication modules by LabVIEW program. The collected sensor informations is encrypted and compressed by LabVIEW modules running on RIO. Then they will be transfer to the land server and will be <b>decrypt</b> <b>to</b> enable monitoring in the land server. For the verification, we build the test modules which can verify from collecting the sensor data to consuming them in the monitoring server. We carried out 20 times for the data pattern in all of case. So, w...|$|E
40|$|Abstract. This paper {{introduces}} and {{explores the}} new concept of Time-Specific Encryption (TSE). In (Plain) TSE, a Time Server broadcasts a key {{at the beginning}} of each time unit, a Time Instant Key (TIK). The sender of a message can specify any time interval during the encryption process; the receiver can <b>decrypt</b> <b>to</b> recover the message only if it has a TIK that corresponds to a time in that interval. We extend Plain TSE to the public-key and identity-based settings, where receivers are additionally equipped with private keys and either public keys or identities, and where decryption now requires the use of the private key as well as an appropriate TIK. We introduce security models for the plain, public-key and identitybased settings. We also provide constructions for schemes in the different settings, showing how to obtain Plain TSE using identity-based techniques, how to combine Plain TSE with public-key and identity-based encryption schemes, and how to build schemes that are chosen-ciphertext secure from schemes that are chosen-plaintext secure. Finally, we suggest applications for our new primitive, and discuss its relationships with existing primitives, such as Timed-Release Encryption and Broadcast Encryption...|$|E
5000|$|Intellectuals such as İlhan Selçuk (allegedly {{linked with}} the 9 March coup plans) and Uğur Mumcu were {{tortured}} there. Several Ziverbey victims confirmed that the interrogators introduced themselves as [...] "Counter-Guerrillas", above the law, and entitled to kill. Under duress to write an apologetic statement, Selçuk famously revealed his plight using a modified acrostic which <b>decrypted</b> <b>to</b> [...] "I am under torture". The key letter {{was the first of}} the penultimate word of each sentence in his statement.|$|R
50|$|Block ciphers in the cipher block {{chaining}} mode of operation, for example, are partly malleable: flipping {{a bit in}} a ciphertext block will completely mangle the plaintext it <b>decrypts</b> <b>to,</b> but {{will result in the}} same bit being flipped in the plaintext of the next block. This allows an attacker to 'sacrifice' one block of plaintext in order to change some data in the next one, possibly managing to maliciously alter the message. This is essentially the core idea of padding oracle attack on CBC, which allows the attacker <b>to</b> <b>decrypt</b> almost entire ciphertext without knowing the key. For this and many other reasons, using message authentication codes is needed to guard against any method of tampering.|$|R
5000|$|Xn−1 = Decrypt (K, En−1). <b>Decrypt</b> En−1 <b>to</b> create Xn−1. This reverses {{encryption}} step 2. Xn−1 is {{the same}} as in the encryption process.|$|R
40|$|Errata List There {{have been}} several pieces of {{technical}} errata for this paper since it was first published. This copy of the paper contains corrected proofs, but earlier copies will contain the following errors: An issue was identified with the original construction given in Section 6. The original proposed construction makes the implicit assumption that because the encryption scheme (G, E, D) is deterministic there exists only ciphertext C 2 C such that D(C, sk) = x for every x. This assumption is false. We solve this problem by adding an extra step to the decryption algorithm, between the original steps 2 and 3. This new step is defined as: 3. Check that C = E(x, pk). If not, output? and halt. Note that this step is unnecessary if there exists only one ciphertext that corresponds to each message {{or if it is}} computationally infeasible for an attacker to find two ciphertexts that <b>decrypt</b> <b>to</b> give the same value. It was pointed out (by Nigel Smart of the University of Bristol) that the proof of security for the generalised PSEC-KEM construction given in Section 5 requires a plaintext-ciphertext checking oracle. This was not originally stated in the theorem. This means that, in terms of assumptions, the original constructions of Sections 6 and 7 are optimal. It was pointed out (by James Birkett of Royal Holloway, University of London) that the proof of Theorem 2 given in Appendix A contains numerous small errors. In particular, the two simulated oracles do not give consistent responses to attacker queries, thereby allowing the attacker to distinguish between the cases where he is dealing with proper and simulated decryption oracles...|$|E
40|$|With the {{increasing}} dependency of database for data storage, many sensitive data such as personal information data {{and credit card}} information data are being stored inside a database. These data is so valuable that it attracts unauthorized personnel to gain access for obtaining the data for further usage. Even though the network infrastructure nowadays is protected with different kind of security measures, there is none of them is able to block all the threats perfectly. Therefore, the data {{needs to be able}} to protect its confidentiality even though all measures have been failed. This is where the importance of cryptography in protecting the data confidentiality even the data is in the hands of the attacker. Cryptography can be implemented in different kind of methods to secure the database. The purpose of this study is to develop a cryptosystem that is able to implement cryptography to the data before storing them into the database. This implementation has been strengthened by introducing two approaches which are the classification of types of data using Key Family and the classification of data encryption key status according to the activation time. Key Family separates types of data such as personal information data and credit card information data. Both families use different data encryption key to encrypt and <b>decrypt</b> <b>to</b> limit the access of the attacker if one of the key is obtained. The state of data encryption key is determined by the activation date which the key which has the latest time will be activated and the old ones will be expired. This will prevent the key remains too long for encryption and decryption which poses risks for threats to break the key. This system is developed using Java programming language with the use of Java Cryptography Extension for the cryptography process. MySQL database is used as the protected database where all the data in the database is encrypted for protection. Finally, it is hope that this system can provide better security for data confidentiality and also become the last line defense of data towards the attack...|$|E
40|$|In a {{world that}} is {{increasingly}} relying on digital technologies, the ability to securely communicate and distribute information is of crucial importance. Cryptography {{plays a key role in}} this context and the research presented in this thesis focuses on developing cryptographic primitives whose properties address more closely the needs of users. We start by considering the notion of robustness in public-key encryption, a property which models the idea that a ciphertext should not <b>decrypt</b> <b>to</b> a valid mes- sage under two different keys. In contexts where anonymity is relevant, robustness is likely to be needed as well, since a user cannot tell from the ciphertext if it is intended for him or not. We develop and study new notions of robustness, relating them to one another and showing how to achieve them. We then consider the important issue of protecting users' privacy in broadcast encryption. Broadcast encryption (BE) is a cryptographic primitive designed to efficiently broadcast an encrypted message to a target set of users that can decrypt it. Its extensive real-life application to radio, television and web-casting renders BE an extremely interesting area. However, all the work so far has striven for efficiency, focusing in particular on solutions which achieve short ciphertexts, while very little attention has been given to anonymity. To address this issue, we formally define anonymous broadcast encryption, which guarantees recipient-anonymity, and we provide generic constructions to achieve it from public-key, identity-based and attribute-based encryption. Furthermore, we present techniques to improve the efficiency of our constructions. Finally, we develop a new primitive, called time-specific encryption (TSE), which allows us to include the important element of time in the encryption and decryption processes. In TSE, the sender is able to specify during what time interval a ciphertext can be decrypted by a receiver. This is a relevant property since information may become useless after a certain point, sensitive data may not be released before a particular time, or we may wish to enable access to information for only a limited period. We define security models for various flavours of TSE and provide efficient instantiations for all of them. These results represent our efforts in developing public-key encryption schemes with enhanced properties, whilst maintaining the delicate balance between security and efficiency. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|E
2500|$|In 2006, Sanborn {{announced}} that he had made an error in passage 2, and confirmed that the last passage of the plaintext was WESTXLAYERTWO, and not WESTIDBYROWS. Sanborn had inadvertently omitted a letter S in the crypt text. [...] By rotating the keyword <b>to</b> BSCISSAA it <b>decrypts</b> <b>to</b> WESTPLAYERTWO. The significance of this is that WESTXLAYERTWO is the original plain text. It was intentional that WESTIDBYROWS was discovered at a later stage by following a clue to manipulate the letter(s) X.|$|R
3000|$|If (x y)∈{(x_ 1 y_ 1),(x_ 2 y_ 2),..., (x_t- 1 y_t- 1)}, [...] the {{algorithm}} <b>decrypts</b> x <b>to</b> get id of the user. Otherwise, {{the algorithm}} computes {{the secret of}} INS (t,n) [...] by interpolating with t points {(x y),(x_ 1 y_ 1),(x_ 2 y_ 2),..., (x_t- 1 y_t- 1)}. [...] If the recovered secret is equal to f(0), the algorithm <b>decrypts</b> x <b>to</b> get id of the user. If not, SK is not issued by the system and cannot be traced.|$|R
50|$|In 2006, Sanborn {{announced}} that he had made an error in passage 2, and confirmed that the last passage of the plaintext was WESTXLAYERTWO, and not WESTIDBYROWS. Sanborn had inadvertently omitted a letter S in the crypt text. By rotating the keyword <b>to</b> BSCISSAA it <b>decrypts</b> <b>to</b> WESTPLAYERTWO. The significance of this is that WESTXLAYERTWO is the original plain text. It was intentional that WESTIDBYROWS was discovered at a later stage by following a clue to manipulate the letter(s) X.|$|R
