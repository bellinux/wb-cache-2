1949|2081|Public
25|$|<b>Knowledge</b> <b>Engineering</b> Environment (KEE) used {{an object}} system called UNITS and {{integrated}} {{it with an}} inference engine and a truth maintenance system (ATMS).|$|E
25|$|It wasn't {{long before}} the frame {{communities}} and the rule-based researchers {{realized that there was}} synergy between their approaches. Frames were good for representing the real world, described as classes, subclasses, slots (data values) with various constraints on possible values. Rules were good for representing and utilizing complex logic such as the process to make a medical diagnosis. Integrated systems were developed that combined Frames and Rules. One of the most powerful and well known was the 1983 <b>Knowledge</b> <b>Engineering</b> Environment (KEE) from Intellicorp. KEE had a complete rule engine with forward and backward chaining. It also had a complete frame based knowledge base with triggers, slots (data values), inheritance, and message passing. Although message passing originated in the object-oriented community rather than AI it was quickly embraced by AI researchers as well in environments such as KEE and in the operating systems for Lisp machines from Symbolics, Xerox, and Texas Instruments.|$|E
500|$|The {{power of}} expert systems {{came from the}} expert {{knowledge}} they contained. They {{were part of a}} new direction in AI research that had been gaining ground throughout the 70s. [...] "AI researchers were beginning to suspect—reluctantly, for it violated the scientific canon of parsimony—that intelligence might very well be based on the ability to use large amounts of diverse knowledge in different ways," [...] writes Pamela McCorduck. [...] "he great lesson from the 1970s was that intelligent behavior depended very much on dealing with knowledge, sometimes quite detailed knowledge, of a domain where a given task lay". Knowledge based systems and <b>knowledge</b> <b>engineering</b> became a major focus of AI research in the 1980s.|$|E
40|$|The {{impact of}} {{globalization}} on business has forced most industries {{to become more}} innovative and implement newer strategies to retain market leadership and growth with the desired profitability. The retention of corporate <b>engineering</b> <b>knowledge</b> and rules is also critical because of the aging workforce. <b>Knowledge</b> based <b>engineering</b> {{is a concept that}} allows for the retention of corporate knowledge as initiate-level engineers and designers enter the workforce. <b>Knowledge</b> based <b>engineering</b> is a complex concept that increases the productivity and product quality in any industry. Computer aided design (CAD) {{is one of the main}} roots and plays an important role in <b>knowledge</b> based <b>engineering.</b> This paper addresses the role of computer aided design at its integration with <b>knowledge</b> based <b>engineering</b> to make it more flexible, transparent, and standardized while working in a corporate environment. To motivate the discussion the authors have used a setting that is used to design a new product in a plastic manufacturing plant...|$|R
5000|$|... 81% {{stated that}} their <b>knowledge</b> of <b>engineering</b> had increased; ...|$|R
25|$|For {{associate}} {{degree program}} in Marine Engineering further subjects {{are added to}} the mandatory subjects which include Internal Combustion Engines <b>Knowledge,</b> General <b>Engineering</b> <b>Knowledge,</b> Workshop Practice, Applied Mechanics, Applied Thermodynamics, Electro-technology, Instrumentation and Control Systems, Naval Architecture and Ship Construction and Machine Drawing.|$|R
2500|$|Knowledge {{representation}} and <b>knowledge</b> <b>engineering</b> {{are central to}} AI research. Many of the problems machines are expected to solve will require extensive knowledge about the world. Among the things that AI needs to represent are: objects, properties, categories and relations between objects; situations, events, states and time; causes and effects; knowledge about knowledge (what we know about what other people know); and many other, less well researched domains. A representation of [...] "what exists" [...] is an ontology: the set of objects, relations, concepts, and properties formally described so that software agents can interpret them. The semantics of these are captured as description logic concepts, roles, and individuals, and typically implemented as classes, properties, and individuals in the Web Ontology Language. The most general ontologies are called upper ontologies, which attempt to provide a foundation for all other knowledge by acting as mediators between domain ontologies that cover specific knowledge about a particular knowledge domain (field of interest or area of concern). Such formal knowledge representations are suitable for content-based indexing and retrieval, scene interpretation, clinical decision support, knowledge discovery via automated reasoning (inferring new statements based on explicitly stated knowledge), etc. Video events are often represented as SWRL rules, which can be used, among others, to automatically generate subtitles for constrained videos.|$|E
5000|$|Terminology and <b>Knowledge</b> <b>Engineering.</b> Proceedings of the 5th International Congress on Terminology and <b>Knowledge</b> <b>Engineering</b> TKE'99. TermNet, Wien 1999, [...]|$|E
5000|$|An Integrated and Collaborative Framework for Business Design: A <b>Knowledge</b> <b>Engineering</b> Approach and <b>Knowledge</b> <b>Engineering,</b> Volume 42, No. 1, Jan 2005, pp 157-179 ...|$|E
5000|$|Fifth, he re-classifies <b>engineering</b> <b>knowledge</b> itself. <b>Knowledge</b> {{generated}} by <b>engineering</b> may normally be categorized by phases such as design, production or operations. Another {{way to think}} about <b>engineering</b> <b>knowledge</b> categories is descriptive knowledge, prescriptive knowledge and tacit knowledge. He adds Gilbert Ryle's terms [...] "knowing that" [...] and [...] "knowing how" [...] to illustrate the aim of each knowledge category. [...] "Knowing what or that" [...] to do in engineering is a mixture of descriptive and prescriptive knowledge. [...] "Knowing how" [...] to do it is a mixture of prescriptive and tacit knowledge. Thus, these case studies show the need for all three kinds of <b>knowledge</b> in <b>engineering.</b>|$|R
5000|$|... 9 Suryanto, H. and Compton, P. Invented Predicates to Reduce <b>Knowledge</b> Acquisition. in <b>Engineering</b> <b>Knowledge</b> in the Age of the Semantic Web (EKAW 2004). Whittleburg Hall, UK: Springer, p. 293-306, 2004.|$|R
5000|$|<b>Knowledge</b> Based <b>Engineering</b> {{department}} at the Faculty of Aerospace Engineering of the Delft University of Technology ...|$|R
5000|$|C Chandra and C V Ramamoorthy. An Evaluation of <b>Knowledge</b> <b>Engineering</b> Approaches to the Maintenance of Evolutionary Software. International Journal of Software Engineer- ing and <b>Knowledge</b> <b>Engineering</b> (...) , 8(1):3-20, 1998.|$|E
50|$|A <b>knowledge</b> <b>engineering</b> workbench.|$|E
50|$|A {{methodology}} for managing <b>knowledge</b> <b>engineering</b> projects.|$|E
40|$|The {{development}} of complex product-service combinations challenges the existing practices for <b>engineering</b> <b>knowledge</b> management. The {{objective of the}} paper is to highlight how such practices need to change to meet the engineers’ demand for knowledge when developing “functions” instead of merely hardware. It further proposes <b>Knowledge</b> Enabled <b>Engineering</b> (KEE) as an umbrella term that collects <b>engineering</b> <b>knowledge</b> management methods and tools inspired by the second wave of knowledge management, and that are aimed to meet needs of today’s modern <b>knowledge</b> workers in <b>engineering</b> organizations. The current state of readiness of these approaches is eventually described together with results from verification and validation activities. Model Driven Development and Decision Support (MD 3 S) KK...|$|R
5000|$|H. G. H. Kearns (1902-1986), an {{entomologist}} with {{a strong}} <b>knowledge</b> of <b>engineering,</b> was born in Friern Barnet.|$|R
40|$|Walter G. Vincenti, in {{his book}} "What {{engineers}} know and how they know it", has proposed a taxonomy of <b>engineering</b> <b>knowledge.</b> Software <b>Engineering,</b> as a discipline, is certainly not yet as mature as other engineering disciplines, and some authors have even challenged the notion that Software Engineering is indeed engineering. To investigate this issue, Vincenti’s categories of <b>engineering</b> <b>knowledge</b> are {{used to analyze the}} SWEBOK (Software <b>Engineering</b> Body of <b>Knowledge)</b> Guide from an engineering perspective. This paper presents an overview of the Vincent’si categories of <b>engineering</b> <b>knowledge,</b> followed by an analysis of the engineering design concept in Vincenti vs. the design concept in the SWEBOK Guide: this highlights in particular the fact that Vincenti’s engineering design concept {{is not limited to the}} design phase knowledge area in the SWEBOK Guide, but that it pervades many of the SWEBOK knowledge areas. Finally, the SWEBOK Software Quality knowledge area is selected as a case study, and analyzed using Vincenti’s classification of <b>engineering</b> <b>knowledge...</b>|$|R
5000|$|<b>Knowledge</b> <b>Engineering</b> and Discovery Research Institute (KEDRI) ...|$|E
50|$|<b>Knowledge</b> <b>Engineering</b> is a {{field of}} {{computer}} science which offers a significant body of work on problem-solving methods. Problem-solving methods are patterns of reasoning that are applied to solve specific problems. The work on problem abstractions within <b>knowledge</b> <b>engineering</b> can therefore {{provide a basis for}} research in software engineering.|$|E
50|$|The International Journal of Software Engineering and <b>Knowledge</b> <b>Engineering</b> {{was founded}} in 1991 and is {{published}} by World Scientific, covering areas relating to software engineering and <b>knowledge</b> <b>engineering</b> and the connections between the two disciplines. Topics covered include object-oriented systems, rapid prototyping, logic programming, and software and knowledge-ware maintenance.|$|E
30|$|In addition, 80 % of the {{participants}} addressed the importance of acquiring <b>knowledge</b> in <b>engineering</b> and technology in order to successfully carry out activities.|$|R
3000|$|Q 1 : Is a multi-dimensional or a uni-dimensional {{structure}} {{more adequate}} for the modelling of the physical-technical prior <b>knowledge</b> of <b>engineering</b> students? [...]...|$|R
40|$|This paper aims {{to present}} {{software}} engineering ontology as software <b>engineering</b> <b>knowledge</b> representation for a multi-site software development. It {{will not only}} facilitate the capturing of software <b>engineering</b> <b>knowledge</b> but also enhance the sharing of software <b>engineering</b> <b>knowledge</b> across geographically multiple software development sites. The software engineering ontology assists in defining information for the exchange of semantic project data and {{is used as a}} communication framework. Its end users are software engineers sharing software <b>engineering</b> domain <b>knowledge</b> as well as software engineering project data...|$|R
5000|$|The TOVE {{enterprise}} {{models is}} presented by Fox et al. (1995) as second generation <b>knowledge</b> <b>engineering</b> approach. A first generation <b>knowledge</b> <b>engineering</b> approach [...] "is extracting rules from experts, while second generation is ontology engineering: They develop comprehensive ontologies {{for all the}} aspects of an organization they find necessary (necessity is decided based on competency requirements to the model, i.e., what are the questions the model will have to answer, either by ordinary look-up or by deduction). The background of TOVE is clearly <b>knowledge</b> <b>engineering</b> {{and to some degree}} Computer Integrated Manufacturing".|$|E
5000|$|... #Article: International Journal of Software Engineering and <b>Knowledge</b> <b>Engineering</b> ...|$|E
5000|$|GECAD - <b>Knowledge</b> <b>Engineering</b> and Decision Support Research Center http://www.gecad.isep.ipp.pt/ ...|$|E
5000|$|Collaborative {{distributed}} <b>engineering</b> <b>knowledge</b> {{discovery and}} exploitation ...|$|R
5000|$|... modern {{information}} systems, <b>knowledge</b> {{and information}} <b>engineering</b> ...|$|R
5000|$|Collect {{information}} to reduce future failures, capture <b>engineering</b> <b>knowledge</b> ...|$|R
5000|$|Beynon-Davies P. (1992). <b>Knowledge</b> <b>Engineering</b> for Information Systems. McGraw-Hill, Basingstoke.|$|E
5000|$|Master of Science (M.Sc) in Computer System and <b>Knowledge</b> <b>Engineering</b> ...|$|E
5000|$|Innovation - <b>Knowledge</b> <b>engineering</b> - Knowledge {{management}} - Semantic web ...|$|E
50|$|The Engineering Academy is {{a unique}} {{opportunity}} {{for high school students}} to explore their interest in the field of engineering. The goal of the program is to inform and excite students about the potential ofa career in engineering. Courses include Engineering Principles & Systems and Engineering Computer Applications and are meant to form a strong foundation of <b>engineering</b> <b>knowledge.</b> Advanced <b>Engineering</b> Internship is also offered in which students are able to work alongside professional engineers.|$|R
5000|$|Editorial Board, IEEE Trans. on <b>Knowledge</b> and Data <b>Engineering</b> (TKDE), IEEE ...|$|R
5000|$|... e. Field Engineer Training. To impart basic <b>knowledge</b> {{on field}} <b>engineering.</b>|$|R
