6|166|Public
5000|$|Files had various types, like {{text files}} and <b>index</b> <b>sequential</b> data files.|$|E
40|$|The {{performance}} of batched search {{when applied to}} <b>index</b> <b>sequential</b> files is studied. Analysis provides exact formulae {{for the cost of}} searching when batching is applied {{as a function of the}} magnitude of the query and time. The analysis takes into account (a) accesses to the overflow area only, and (b) accesses to both primary and overflow area, as well as whether the records of the query are (a) distinct, or (b) nondistinct. Batched search is compared with the simple on-line search and a proposal is stated concerning the reorganization of <b>index</b> <b>sequential</b> files...|$|E
40|$|Prompted by the Aspinall EIS, {{the purpose}} of this report is to provide a preliminary, {{comparative}} analysis of Gunnison River flow sequences generated using a nonparametric K-Nearest Neighbor (KNN) bootstrap approach and the currently used <b>Index</b> <b>Sequential</b> Method (ISM). The observed data utilized in this work spans 1938 to 1997 and i...|$|E
50|$|Full {{function}} databases can {{be accessed}} {{by a variety of}} methods, although Hierarchical Direct (HDAM) and Hierarchical Indexed Direct (HIDAM) dominate. The other formats are Simple Hierarchical <b>Indexed</b> <b>Sequential</b> (SHISAM), Hierarchical Sequential (HSAM), and Hierarchical <b>Indexed</b> <b>Sequential</b> (HISAM).|$|R
5000|$|Simple Hierarchical <b>Indexed</b> <b>Sequential</b> Access Method (SHISAM).|$|R
50|$|IBM Informix C-ISAM (also C-ISAM or cisam) is an X/Open {{standards-compliant}} API to an <b>Indexed</b> <b>Sequential</b> Access Method or ISAM.|$|R
40|$|A {{model for}} an <b>index</b> <b>sequential</b> file {{employing}} multiple overflow chains per bucket is developed. This model {{is used to}} analyse the effects of insertions and deletions {{on the cost of}} successful and unsuccessful search in terms of block accesses. Numerical results are obtained illustrating the performance. The performance is also compared with that of an ISAM file using only one overflow chain per bucket...|$|E
40|$|Abstract — One of {{the most}} {{frequent}} operation performed on database is searching. To perform this operation we have different kinds of searching algorithms, {{some of which are}} Binary Search, <b>Index</b> <b>Sequential</b> Access Method (ISAM), but these and all other searching algorithms work only on data, which are previously sorted. An efficient algorithm is required {{in order to make the}} searching algorithm fast and efficient. This research paper presents a new sorting algorithm named as “Optimized Selection Sort Algorithm, OSSA”. OSSA is designed to perform sorting quickly and more effectively as compared to the existing version of selection sort. The introduction of OSSA version of selection sort algorithm for sorting the data stored in database instead of existing selection sort algorithm will provide an opportunity to the users to save almost 50 % of their operation time with almost 100 % accuracy...|$|E
40|$|This paper {{combines}} {{two major}} strands of literature: structural breaks and Taylor rules. At first, I propose a nonstandard t-test statistic for detecting multiple level and trend breaks of I(0) series by supplying theoretical and limit-distribution critical values obtained from Montecarlo experimentation. Thereafter, I introduce a forward-looking Taylor rule {{expressed as a}} dynamic model which allows for multiple breaks and reaction-function coefficients of the leads of inflation, of the output gap and of an equity market <b>index.</b> <b>Sequential</b> GMM estimation of the model, applied to the Effective Federal Funds Rate for the period 1984 : 01 - 2001 : 06, produces three main interesting results: the existence of significant structural breaks, the substantial role played by inflation in the FOMC decisions and a marked equity targeting policy approach. Such results reveal departures from rationality, determined by structured and unstructured uncertainty, which the Fed systematically attempts at reducing by administering inflation scares and misinformation about the actual Phillips curve, {{in order to keep}} the output and equity markets under control. ...|$|E
50|$|Sequential {{placement}} (not to {{be confused}} with <b>indexed</b> <b>sequential),</b> simply places each new record {{at the end of the}} area. This option is rarely used.|$|R
50|$|ESE is an <b>Indexed</b> <b>Sequential</b> Access Method (ISAM) {{data storage}} {{technology}} from Microsoft. ESE is notably {{a core of}} Microsoft Exchange Server and Active Directory. Its purpose is to allow applications to store and retrieve data via <b>indexed</b> and <b>sequential</b> access. Windows Mail and Desktop Search in the Windows Vista operating system also make use of ESE to store indexes and property information respectively.|$|R
50|$|Extensible Storage Engine (ESE), {{also known}} as JET Blue, is an ISAM (<b>indexed</b> <b>sequential</b> access method) data storage {{technology}} from Microsoft. ESE {{is the core of}} Microsoft Exchange Server, Active Directory, Branch Cache, and Windows Search. It's also used by a number of Windows components including Windows Update client and Help and Support Center. Its purpose is to allow applications to store and retrieve data via <b>indexed</b> and <b>sequential</b> access.|$|R
40|$|This {{retrieval}} system builds, updates, retrieves, and performs basic statistical analyses on blood, urine, and diet parameters for the M 071 and M 073 Skylab and Apollo experiments. This system permits data entry from cards {{to build an}} <b>indexed</b> <b>sequential</b> file. Programs are easily modified for specialized analyses...|$|R
5000|$|ISAM (an {{acronym for}} <b>indexed</b> <b>sequential</b> access method) {{is a method}} for creating, maintaining, and {{manipulating}} indexes of key-fields extracted from random data file records to achieve fast retrieval of required file records. IBM developed ISAM for mainframe computers. Today the term is used for several related concepts: ...|$|R
50|$|Btrieve is a {{database}} developed by Pervasive Software. The architecture of Btrieve {{has been designed}} with record management in mind. This means that Btrieve only deals with the underlying record creation, data retrieval, record updating and data deletion primitives. Together with the MicroKernel Database Engine it uses ISAM, <b>Indexed</b> <b>Sequential</b> Access Method, as its underlying storage mechanism.|$|R
40|$|ISAM {{refers to}} <b>Indexed</b> <b>Sequential</b> Access Mode. Under this 13; records can be created/accussed modified, based on any {{particular}} data field called index key. This facility {{is not available}} as a built-in procedure in C language. 13; 13; This highly useful feature is implemented in C as an enhancement keeping in mind the users who need this facility...|$|R
5000|$|For OS/360, the DCB's [...] {{parameter}} specifies how {{the data}} set is organized. It may be physically <b>sequential</b> ("PS"), <b>indexed</b> <b>sequential</b> ("IS"), partitioned ("PO"), or Direct Access ("DA"). Data sets on tape may only be DSORG=PS. The choice of organization depends on how the data is to be accessed, and in particular, how {{it is to be}} updated.|$|R
40|$|Among many {{existing}} distance {{measures for}} time series data, Dynamic Time Warping (DTW) distance {{has been recognized}} as one of the most accurate and suitable distance measures due to its flexibility in sequence alignment. However, DTW distance calculation is computationally intensive. Especially in very large time series databases, sequential scan through the entire database is definitely impractical, even with random access that exploits some index structures since high dimensionality of time series data incurs extremely high I/O cost. More specifically, a sequential structure consumes high CPU but low I/O costs, while an index structure requires low CPU but high I/O costs. In this work, we therefore propose a novel <b>indexed</b> <b>sequential</b> structure called TWIST (Time Warping in <b>Indexed</b> <b>Sequential</b> sTructure) which benefits from both <b>sequential</b> access and <b>index</b> structure. When a query sequence is issued, TWIST calculates lower bounding distances between a group of candidate sequences and the query sequence, and then identifies the data access order in advance, hence reducing a great number of both sequential and random accesses. Impressively, our <b>indexed</b> <b>sequential</b> structure achieves significant speedup in a querying process by a few orders of magnitude. In addition, our method shows superiority over existing rival methods in terms of query processing time, number of page accesses, and storage requirement with no false dismissal guaranteed. Comment: Submitted to Data Mining and Knowledge Discovery (DMKD). 33 pages, 19 figures, and 8 table...|$|R
25|$|Btrieve is a {{transactional}} database (navigational database) software product. It {{is based}} on <b>Indexed</b> <b>Sequential</b> Access Method (ISAM), which {{is a way of}} storing data for fast retrieval. There have been several versions of the product for MS-DOS, Linux, older versions of Microsoft Windows, Windows 98, Windows NT, Windows 2000, Windows XP, Windows Server 2003, 32-bit IBM OS/2 and for Novell NetWare.|$|R
5000|$|At its core, c-treeACE uses a record-oriented, <b>Indexed</b> <b>Sequential</b> Access Method (ISAM) {{structure}} offering {{high speed}} indexing mechanisms over those files. Developers can use these direct access methods {{to design the}} data and index structures that closely parallel {{the needs of their}} application. This paradigm is sometimes referred to as an application-specific database [...] or an embedded database because of the tightly coupled nature of the application and database.|$|R
50|$|DMSII {{provided}} an ISAM (<b>indexed</b> <b>sequential</b> access method) model for data access, transaction isolation and database-recovery capabilities. The database schema {{was written in}} the proprietary Data and Structure Definition Language (DASDL). The DASDL source code was compiled with a system utility into a file containing the metadata for the database (known as the description file). A database-utility program would use the database description file to create the remaining components of the database.|$|R
40|$|In Old Babylonian Sumerian literature, the {{temporal}} phrases u₄-ba and u₄-bi-a typically occur in complementary distribution. Previous analyses {{have focused on}} morphological disparity to differentiate the two. The present paper considers pragmatic functions within a larger discourse structure, analyzing them as discourse markers, specifically temporal connectives. In this study based on a corpus analysis of Old Babylonian literary compositions, I argue that in Sumerian discourse, u₄-ba primarily marks perspectival shifts and refocusing, and u₄-bi-a <b>indexes</b> <b>sequential</b> and consequential action...|$|R
50|$|The KSDS {{organization}} {{was designed to}} replace ISAM, the <b>Indexed</b> <b>Sequential</b> Access Method. Changes in disk technology had meant that searching for data in ISAM data sets had become very inefficient. It was also difficult to move ISAM data sets as there were embedded pointers to physical disk locations which became invalid if the data set was moved. IBM also provided a compatibility interface to allow programs coded to use ISAM to use a KSDS instead.|$|R
50|$|An {{important}} {{challenge for}} harnessing {{the power of}} a midrange computer is interacting with an online user and providing ease of use. So what if your customer file has a million records... can your computer operator find the right one quickly? Concepts such as ISAM (<b>Indexed</b> <b>Sequential</b> Access Method) have been around {{since the early days of}} computing. Using a display format, with colors, blinking fields, command keys, and scrolling functions, an operator can quickly adjust to advanced programs and become more effective.|$|R
5000|$|The OS 2200 {{database}} {{managers are}} all part of the Universal Data System (UDS). UDS provides a common control structure for multiple different data models. Flat files (<b>sequential,</b> multi-keyed <b>indexed</b> <b>sequential</b> - MSAM, and fixed-block), network (DMS), and relational (RDMS) data models all share a common locking, recovery, and clustering mechanism. OS 2200 applications can use any mixtures of these data models along with the high-volume transaction file system within the same program while retaining a single common recovery mechanism.|$|R
25|$|There {{are three}} modules to Jet: One is the Native Jet ISAM Driver, a {{dynamic link library}} (DLL) that can {{directly}} manipulate Microsoft Access database files (MDB) using <b>Indexed</b> <b>Sequential</b> Access Method (ISAM). Another one of the modules contains the ISAM Drivers, DLLs that allow access {{to a variety of}} ISAM databases, among them xBase, Paradox, Btrieve and FoxPro, depending on the version of Jet. The final module is the Data Access Objects (DAO) DLL. DAO provides an API that allows programmers to access JET databases using any programming language.|$|R
50|$|The Durango F-85 was {{an early}} {{personal}} computer introduced in September 1978 by Durango Systems Corporation, a company started in 1977 by George E. Comstock, John M. Scandalios and Charles L. Waggoner, all formerly of Diablo Systems. The F-85 could run its own multitasking operating system called DX-85M, which included an integral <b>Indexed</b> <b>Sequential</b> (ISAM) file system and per-task file locking, or alternatively CP/M-80. DX-85M utilized a text configuration file named CONFIG.SYS five years before this filename was used for a similar purpose under MS-DOS/PC DOS 2.0 in 1983.|$|R
50|$|There {{are three}} modules to Jet: One is the Native Jet ISAM Driver, a {{dynamic link library}} (DLL) that can {{directly}} manipulate Microsoft Access database files (MDB) using <b>Indexed</b> <b>Sequential</b> Access Method (ISAM). Another one of the modules contains the ISAM Drivers, DLLs that allow access {{to a variety of}} ISAM databases, among them xBase, Paradox, Btrieve and FoxPro, depending on the version of Jet. The final module is the Data Access Objects (DAO) DLL. DAO provides an API that allows programmers to access JET databases using any programming language.|$|R
25|$|There {{were three}} modules to Jet. One was the Native Jet ISAM Driver, a Jet {{dynamic link library}} (DLL) that could {{directly}} manipulate Microsoft Access database files (MDB), which was a modified form of an <b>Indexed</b> <b>Sequential</b> Access Method (ISAM) database. Another one of the modules were the ISAM Drivers, DLLs that allowed access to ISAM databases, among them being Xbase, Paradox, Btrieve and FoxPro files. The final module was the Data Access Objects (DAO) DLL, DAO allowed programmers access to the Jet engine. It was basically an object-oriented data language used by Access Basic and Visual Basic application developers to access Jet.|$|R
5000|$|The {{first step}} was to create a format. This command allowed the user to type a form {{directly}} onto the screen, using fixed text for headings, and indicating where variable data fields would get populated from the data file. The format could be associated with a data file created by an existing application, or used to create a new one by entering records interactively. v1.0 supported only sequential files, but search performance was predictably terrible, and multi-key <b>indexed</b> <b>sequential</b> files were quickly added in v2.0. Once the format was created and associated with a file, the user employed intuitive commands such as: ...|$|R
5000|$|The same {{facilities}} (access methods) as DOS/360 {{for reading}} and writing files (<b>sequential,</b> <b>indexed</b> and direct) and for data communications (BTAM).|$|R
5000|$|Locality often {{occurs because}} code {{contains}} loops {{that tend to}} reference arrays or other data structures by <b>indices.</b> <b>Sequential</b> locality, a special case of spatial locality, occurs when relevant data elements are arranged and accessed linearly. For example, the simple traversal of elements in a one-dimensional array, from the base address to the highest element would exploit the sequential locality of the array in memory. [...] The more general equidistant locality occurs when the linear traversal is over a longer area of adjacent data structures with identical structure and size, accessing mutually corresponding elements of each structure rather than each entire structure. This is the case when a matrix is represented as a sequential matrix of rows and the requirement is to access a single column of the matrix.|$|R
40|$|Abstract — In this paper, a {{new method}} is {{proposed}} {{to determine the}} best locations of DG units mainly based on reliability <b>indices.</b> <b>Sequential</b> Monte Carlo simulation (sMCs) is utilized to calculate the reliability indices. One of the main advantages of using sMCs in bulk power system reliability analysis is the ability to provide reliability index probability distributions in addition to the expected values of the index. This method can also provide information about the uncertainty related to a definite level of system reliability. Then, the AHP method is used to select the best plans based on reliability indices and some other alternatives including power loss and voltage profile. The results show that the proposed method finds the optimal locations of DG units considering enhancement of criteria with and without uncertainties of reliability and load demand...|$|R
5000|$|IBM {{hoped that}} Virtual storage access method (VSAM) would replace its earlier <b>sequential,</b> <b>indexed</b> and direct access methods as it {{provided}} improved versions of these: ...|$|R
40|$|Abstract—High {{birefringence}} (0 3 0 4) {{and relatively}} low-viscosity liquid crystal mixtures containing isoth-iocyanato tolane and isothiocyanato terphenyl liquid crystals are developed. A twisted-nematic (TN) 1. 6 - m thin cell for color-sequential {{liquid crystal display}} with 1 -ms response time is demonstrated. <b>Index</b> Terms—Color <b>sequential</b> display, high-birefringence liquid crystals, liquid crystal display (LCD), response time. I...|$|R
40|$|Although files with {{variable}} length records are very frequent in actual databases due to {{variable length}} fields, missing attribute values, multiple values of an attribute and compression, {{little has been}} reported in the literature about file structures appropriate for variable length records. In this paper we describe and analyze several overflow handling techniques for the case when records are of variable length. We develop analytic models that take into account variable length records and study the performance in the context of <b>indexed</b> <b>sequential</b> (ISAM) files. We also propose a new overflow handling technique and show that it provides an incremental reorganization capability appropriate for handling variable length records. Analytic results demonstrate that its performance is better than the performance of previous methods, The overflow handling techniques and the analytic methods developed in this paper are also applicable to other file structures with variable length records that require overtlow handling...|$|R
