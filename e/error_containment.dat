34|16|Public
50|$|To achieve <b>error</b> <b>containment,</b> ICER {{produces}} the compressed bitstream in separate pieces or segments {{that can be}} decoded independently. These segments represent rectangular regions of the original image, but are defined in the transform domain.|$|E
40|$|The time-triggered System-on-a-Chip (SoC) {{architecture}} {{provides a}} generic multicore system platform {{for a family}} of composable and dependable giga-scale SoCs. It supports the integration of multiple application subsystems of different criticality levels within a single hardware platform. A pivotal property of the architecture is the integrated <b>error</b> <b>containment,</b> which facilitates modular certification, robustness, and composability. By dividing the complete SoC into physically separated components that interact exclusively by the timely exchange of messages on a timetriggered Network-on-a-Chip (NoC), we achieve <b>error</b> <b>containment</b> for both computational and communication resources. The time-triggered design allows protecting the access to the NoC with guardians that are associated with each component. Based on the protection of the time-triggered NoC with inherent predictability and determinism, the architecture also enables <b>error</b> <b>containment</b> for faulty computational results. These value message failures can be masked using active redundancy (e. g., off-chip and on-chip Triple Modular Redundancy (TMR)) or detected using diagnostic assertions on messages. The design of the <b>error</b> <b>containment</b> mechanisms systematically follows a categorization of significant fault classes that an SoC is subject to (e. g., physical/design, transient/permanent). Evidence for the effectiveness of the <b>error</b> <b>containment</b> mechanisms is available through experimental data from a prototype implementation...|$|E
40|$|Assistant {{professors in}} Electronics and Communication Engineering,VELTECH,Chennai- 600062. CAN Networks {{presents}} and analysis {{a performance of}} a <b>Error</b> <b>containment</b> capabilities and fault tolerance {{with a focus on}} Controller Area Network based automotive systems with the Stochastic Activity Networks (SANs). This paper illustrates the method by modeling a simple <b>error</b> <b>containment</b> capabilities of a CAN Bus and a CANcentrate Star topology by using Fiber optic Cable in CAN Networks and quantitatively compares their reliability, <b>error</b> <b>containment</b> capabilities and fault tolerance under permanent hardware faults. And showing that even in cases where the worst case analysis deems the system unschedulable, it may be proven to satisfy its timing requirements with a sufficiently high probability. By this analysis the performance of CAN Network and error resilience will be highly increased and to get accurate output...|$|E
5000|$|Its {{features}} include good scalability, clean fault <b>containment,</b> <b>error</b> detection and failover. The ServerNet architecture specification defines {{a connection between}} nodes, either processor or high performance I/O nodes such as storage devices.|$|R
3000|$|A {{definition}} of failure modes is fundamental {{for the design}} of the CAN router as well as for <b>error</b> handling and <b>containment</b> of these failures. The following failure modes, which are subcategories of the arbitrary failure mode, are assumed for the CAN segments: [...]...|$|R
30|$|Today, the {{healthcare}} service industry has a priority on reducing cost, and improving operational efficiency, {{quality of care}} service, safety, and customer satisfaction. Healthcare leaders and managers strive to invest in advanced systems and/or technologies with the expectations for improved quality of care and reduced medical <b>error</b> and cost <b>containment.</b> Healthcare service, however, is a complex system and has many challenges.|$|R
40|$|The {{vulnerability}} of the current and future processors towards transient errors caused by particle strikes {{is expected to increase}} rapidly because of exponential growth rate of on-chip transistors, the lower voltages and the shrinking feature size. This encourages innovation in the direction of finding new techniques for providing robustness in logic and memories that allow meeting the desired failures in-time (FIT) budget in future chip multiprocessors (CMPs) present in embedded systems. In embedded systems two aspects of robustness, error detection and containment, are of paramount importance. This paper proposes a light-weight and scalable architecture that uses acoustic wave detectors for error detection and contains errors at the core level. We show how selectively applying <b>error</b> <b>containment</b> can reduce the number of detectors required for <b>error</b> <b>containment.</b> We observe that by using 17 detectors we can achieve <b>error</b> <b>containment</b> coverage of 97. 8 %. © 2014 IEEE. Peer ReviewedPostprint (published version...|$|E
40|$|<b>Error</b> <b>containment</b> is an {{important}} concept in fault tolerant system design, and techniques like voting are applied to mask erroneous outputs, thus preventing their propagation. In this presentation we will use the example of DARTS, a fault-tolerant distributed clock generation scheme in hardware, to demonstrate that metastability is a substantial threat to <b>error</b> <b>containment.</b> We will illustrate how metastability can originate and propagate such that a single fault may upset the system. The main conclusion is that modeling efforts on all design levels are definitely {{required in order to}} mitigate and quantify the deteriorating effect of metastability on system dependability...|$|E
40|$|Data {{compression}} has {{the potential}} for increasing the risk of data loss. It can also cause bit error propagation, resulting in catastrophic failures. There are a number of approaches possible for containing error propagation due to data compression: (1) data retransmission; (2) data interpolation; (3) error containment; and (4) error correction. The most fruitful techniques will be ones where <b>error</b> <b>containment</b> and error correction are integrated with data compression to provide optimal performance for both. The <b>error</b> <b>containment</b> characteristics of existing compression schemes should be analyzed for their behavior under different data and error conditions. The error tolerance requirements of different data sets need to be understood, so guidelines can then be developed for matching error requirements to suitable compression algorithms...|$|E
40|$|This paper {{considers}} the containment control problem for multi-agent systems with general linear dynamics and multiple leaders whose control inputs are possibly nonzero and time varying. Based {{on the relative}} states of neighboring agents, a distributed static continuous controller is designed, under which the <b>containment</b> <b>error</b> is uniformly ultimately bounded and the upper bound of the <b>containment</b> <b>error</b> can be made arbitrarily small, if the subgraph associated with the followers is undirected and for each follower there exists at least one leader that has a directed path to that follower. It is noted that {{the design of the}} static controller requires the knowledge of the eigenvalues of the Laplacian matrix and the upper bounds of the leaders' control inputs. In order to remove these requirements, a distributed adaptive continuous controller is further proposed, which can be designed and implemented by each follower in a fully distributed fashion. Extensions to the case where only local output information is available are discussed. Comment: 16 pages, 4 figures. arXiv admin note: text overlap with arXiv: 1312. 737...|$|R
25|$|The heavy-handed policing, {{including}} the use of tear gas on peaceful protesters, inspired tens of thousands of citizens to join the protests in Admiralty that night. <b>Containment</b> <b>errors</b> by the police– the closure of Tamar Park and Admiralty Station– caused a spill-over {{to other parts of the}} city, including Wan Chai, Causeway Bay and Mong Kok. 3,000 protesters occupied a road in Mong Kok and 1,000 went to Causeway Bay. The total number of protesters on the streets swelled to 80,000, at times considerably exceeding 100,000.|$|R
40|$|This report {{describes}} Architecture Analysis & Design Language (AADL) {{models for}} a diverse set of fault-tolerant, embedded data networks and describes {{the methods and}} tools used to created these models. It also includes error models per the AADL Error Annex. Some networks were modeled using <b>Error</b> Detection Isolation <b>Containment</b> Types (EDICT). This report gives a brief description {{for each of the}} networks, a description of its modeling, the model itself, and evaluations of the tools used for creating the models. The methodology includes a naming convention that supports a systematic way to enumerate all of the potential failure modes...|$|R
40|$|In this paper, we {{revisit the}} problem of {{software}} fault tolerance in distributed systems. In particular, we propose an extension of a message-driven confidence-driven (MDCD) protocol we have developed for <b>error</b> <b>containment</b> and recovery in {{a particular type of}} distributed embedded system. More specifically, we augment the original MDCD protocol by introducing the method of "finegrained confidence adjustment," which enables us to remove the architectural restrictions. The dynamic nature of the MDCD approach gives it a number of desirable characteristics. First, this approach does not impose any restrictions on interactions among application software components or require costly message-exchange based process coordination /synchronization. Second, the algorithms allow redundancies to be applied only to low-confidence or critical interacting software components in a distributed system, permitting flexible realization of software fault tolerance. Finally, the dynamic <b>error</b> <b>containment</b> and recovery mechanisms are transparent to the application and ready to be implemented by generic middleware...|$|E
40|$|Components (in-house or pre-fabricated) are {{increasingly}} being used {{to reduce the cost}} of software development. Given that these components may not have not been developed with dependability as a driver, the components need to be adapted to deal with errors coming from their environment. To achieve this, <b>error</b> <b>containment</b> wrappers are often added to increase the robustness of such components...|$|E
40|$|Components (in-house or pre-fabricated) are {{increasingly}} being used {{to reduce the cost}} of software development. Given that these components may not have not been developed with dependability as a driver, the components need to be adapted to deal with errors coming from their environment. To achieve this, <b>error</b> <b>containment</b> wrappers are often added to increase the robustness of such components. Adopting a gray-box perspective of software, we first present a modular approach for specifying and verifying embedded software made from components, based on concepts from category theory. This modular approach allows the system designer to check for semantic compatibility. To generate the <b>error</b> <b>containment</b> wrappers needed for adaptation, we subsequently present an algorithm that systematically generates the required wrappers. Using the information obtained through wrapper design, we develop an approach to identify relevant test cases to test individual components. We further exploit the modularity of the specification to identify the relevant test cases to perform testing at different levels of SW abstraction...|$|E
40|$|Abstract: TTP/C and FlexRay are two {{protocols}} {{that have}} been designed for use in time-triggered systems for safety-critical applications. This paper investigates the fault-containment and error-detection mechanisms of safety-critical time-triggered systems {{that are based on}} these two protocols. The following critical failure modes of a fault-containment region are introduced and analyzed in detail: babbling idiot failures, masquerading failures, slightly-off-specification (SOS) failures, crash/omission (CO) failures, and massive transient disturbances. After a short description of the two time-triggered protocols TTP/C and FlexRay this paper tries to show how the two protocols handle these failure modes at the architecture level. Key Words: fault <b>containment,</b> <b>error</b> detection, time-triggered protocols, FlexRay, TTP/C, safety-critical system...|$|R
40|$|This report {{provides}} perspectives {{gained by}} reviewing 75 Individual Plant Examination (IPE) submittals pertaining to 108 {{nuclear power plant}} units. IPEs are probabilistic analyses that estimate the core damage frequency (CDF) and containment performance for accidents initiated by internal events (including internal flooding, but excluding internal fire). The U. S. Nuclear Regulatory Commission (NRC), Office of Nuclear Regulatory Research, reviewed the WE submittals {{with the objective of}} gaining perspectives in three major areas: (1) improvements made to individual plants {{as a result of their}} IPEs and the collective results of the IPE program, (2) plant-specific design and operational features and modeling assumptions that significantly affect the estimates of CDF and containment performance, and (3) strengths and weaknesses of the models and methods used in the IPEs. These perspectives are gained by assessing the core damage and containment performance results, including overall CDF, accident sequences, dominant contributions to component failure and human <b>error,</b> and <b>containment</b> failure modes. In particular, these results are assessed in relation to the design and operational characteristics of the various reactor and containment types, and by comparing the IPEs to probabilistic risk assessment characteristics. Methods, data, boundary conditions, and assumptions used in the IPEs are considered in understanding the differences and similarities observed among the various types of plants...|$|R
50|$|Students led {{a strike}} against the NPCSC's {{decision}} beginning on 22 September 2014, and the Hong Kong Federation of Students and Scholarism started protesting outside the government headquarters on 26 September 2014. On 28 September, the Occupy Central with Love and Peace movement announced {{the beginning of}} their civil disobedience campaign. Students {{and other members of the}} public demonstrated outside government headquarters, and some began to occupy several major city intersections. Protesters blocked both east-west arterial routes in northern Hong Kong Island near Admiralty. Police tactics - including the use of tear gas - and triad attacks on protesters led more citizens to join the protests and to occupy Causeway Bay and Mong Kok. The number of protesters peaked at more than 100,000 at any given time, overwhelming the police thus causing <b>containment</b> <b>errors.</b>|$|R
40|$|The {{composition}} of large embedded computer systems out of heterogenous clusters requires gateways that resolve property mismatches between networks with different communication protocols and diverse computational models. At the same time, fault and <b>error</b> <b>containment</b> mechanisms {{are needed in}} order to prevent common mode failures that could be induced by the propagation of faults between clusters. This paper presents gateways to systematically tackle these challenges. The introduced gateways contain structured collections of time-sensitive variables associated with timing information (called a realtime database). The real-time database facilitates fault and <b>error</b> <b>containment</b> by temporally decoupling clusters. For accessing the real-time database from attached networks, we introduce network adaptors that ensure compliance with temporal specifications expressed using state machines with timing constraints. The containment of faults within clusters is of particular importance for mixed-criticality systems and increases the robustness of the overall systems. The proposed solution is experimentally evaluated in an example system with a time-triggered Ethernet network and a Controller Area Network (CAN). </p...|$|E
40|$|Abstract — The {{composition}} of large embedded computer systems out of heterogenous clusters requires gateways that resolve property mismatches between networks with different communication protocols and diverse computational models. At the same time, fault and <b>error</b> <b>containment</b> mechanisms {{are needed in}} order to prevent common mode failures that could be induced by the propagation of faults between clusters. This paper presents gateways to systematically tackle these challenges. The introduced gateways contain structured collections of time-sensitive variables associated with timing information (called a realtime database). The real-time database facilitates fault and <b>error</b> <b>containment</b> by temporally decoupling clusters. For accessing the real-time database from attached networks, we introduce network adaptors that ensure compliance with temporal specifications expressed using state machines with timing constraints. The containment of faults within clusters is of particular importance for mixed-criticality systems and increases the robustness of the overall systems. The proposed solution is experimentally evaluated in an example system with a time-triggered Ethernet network and a Controller Area Network (CAN). Index Terms — gateways, fault containment, error containmen...|$|E
40|$|To assure {{dependable}} onboard evolution, we {{have developed}} a methodology called guarded software upgrading (GSU). In this paper, we focus on a low-cost approach to <b>error</b> <b>containment</b> and recovery for GSU. To ensure low development cost, we exploit inherent system resource redundancies as the fault tolerance means. In order {{to mitigate the effect}} of residual software faults at low performance cost, we take a crucial step in devising <b>error</b> <b>containment</b> and recovery methods by introducing the "confidencedriven " notion. This notion complements the message-driven (or "communication-induced") approach employed by a number of existing checkpointing protocols for tolerating hardware faults. In particular, we discriminate between the individual software components with respect to our confidence in their reliability, and keep track of changes of our confidence (due to knowledge about potential process state contamination) in particular processes. This, in turn, enables the individual processes in the spaceborne distributed system to make decisions locally, at run-time, on whether to establish a checkpoint upon message passing and whether to roll back or roll forward during error recovery. The resulting message-driven confidence-driven approach enables cost-effective checkpointing and cascading-rollback free recovery...|$|E
40|$|With the {{functionality}} of most {{embedded systems}} based on software (SW), interactions amongst SW modules arise, resulting in error propagation across SW them. During SW development, {{it would be}} helpful to have a framework that clearly demonstrates the <b>error</b> propagation and <b>containment</b> capabilities of the different SW components. In this paper, we assess the impact of inter-modular error propagation. Adopting a white-box SW approach, we make the following contributions: (a) we study and characterize the error propagation process and derive a set of metrics that quantitatively represents the inter-modular SW interactions, (b) we use a real embedded target system used in an aircraft arrestment system to perform fault-injection experiments to obtain experimental values for the metrics proposed, (c) we show how the set of metrics can be used to obtain the required analytical framework for error propagation analysis. We find that the derived analytical framework establishes a very close correla [...] ...|$|R
40|$|We {{propose a}} novel {{approach}} for runtime verification on computers {{with a large number}} of computation cores, without any hardware extension to mainstream PC environment. The goal of the approach is making use of all hardware resources to decouple the computational overhead of traditional race checkers via parallelizing the runtime verification. We distinguish between two kinds of computational overhead: (i) overhead caused by monitoring, and (ii) overhead due to the verification algorithm(s). So far, runtime verification algorithms have been designed to run on the same threads as the code being monitored and both (i) and (ii) contribute to the slowdown of the program being monitored. The framework we propose allows us to carry out (ii) on separate, dedicated cores and threads. As a result, the program being monitored only experiences slowdown due to (i) and plus the communication of the events to be monitored. There exists related work showing that with some inexpensive hardware support (i) can be reduced to negligible levels. By parallelizing analyses our experiments show that they run as fast as the program being monitored, but on separate computational resources, one can potentially use this approach for monitoring, <b>error</b> detection, <b>containment,</b> and recovery from errors. As a demonstration of concept, we investigate runtime monitoring for concurrency bugs, in particular, data race detection. We use a few CPU threads and a large number of cores on a GPU to minimize the slowdown of the application on which race detection is being run. 1...|$|R
5000|$|Later that morning, protests {{escalated}} {{as police}} blocked {{roads and bridges}} entering Tim Mei Avenue. Protest leaders urged citizens to come to Admiralty to encircle the police. Tensions rose at the junction of Tim Mei Avenue and Harcourt Road after the police used pepper spray. As night fell, armed riot police advanced from Wan Chai towards Admiralty and unfurled a banner that stated [...] "Warning, Tear Smoke". Seconds later, at around 6 pm, shots of tear gas were fired. The heavy-handed policing, {{including the use of}} tear gas on peaceful protesters, inspired tens of thousands of citizens to join the protests in Admiralty that night. <b>Containment</b> <b>errors</b> by the police - the closure of Tamar Park and Admiralty Station - caused a spill-over {{to other parts of the}} city, including Wan Chai, Causeway Bay and Mong Kok. 3,000 protesters occupied a road in Mong Kok and 1,000 went to Causeway Bay. The total number of protesters on the streets swelled to 80,000, at times considerably exceeding 100,000.|$|R
40|$|Many {{computer}} systems today need {{to operate with}} high availability. These include web servers, network and telephony devices such as routers and switches, e-commerce applications, and many others. No software is defect free, and neither is {{the environment in which}} the software operates. As a result errors happen. To prevent errors from causing failures they must be mitigated. A cornerstone of error mitigation is <b>error</b> <b>containment.</b> The goal is to limit the parts of the system that the error infects with its incorrectness. This pattern discusses ways of containing errors. The patterns in this paper describe ways to limit error propagation through the containment of errors. <b>Error</b> <b>containment</b> is one of the four phases of fault tolerance. The others are fault detection, error recovery and fault treatment. The objective is to tolerate faults that exist in the system to allow general system operation to continue. An aspect of tolerating them is to limit their effects. Errors {{in one part of the}} system should not cause errors in other parts of the system. These patterns describe steps to stop the propagation of errors from one part to another. A system failure occurs when the delivered service no longer complies with th...|$|E
40|$|This paper {{addresses}} the structure-and-motion problem, that requires to find camera motion and 3 D struc- ture from point matches. A new pipeline, dubbed Samantha, is presented, that departs from the prevailing sequential paradigm and embraces instead a hierarchical approach. This method has several advantages, like a provably lower computational complexity, which {{is necessary to}} achieve true scalability, and better <b>error</b> <b>containment,</b> leading to more stability and less drift. Moreover, a practical autocalibration procedure allows to process images without ancillary information. Experiments with real data assess the accuracy and the computational efficiency of the method. Comment: Accepted for publication in CVI...|$|E
40|$|We {{present in}} this paper an {{extension}} of the messagedriven confidence-driven framework that we developed for onboard guarded software upgrading. The purpose of this work is to provide the framework with the capability of protecting distributed software upgrades that involve messagepassing interface changes. To achieve this goal, we propose an approach to clustering the components involved in software upgrades and those involved in message-passing interface changes, such that from outside the cluster all those components can be perceived collectively as one virtual low-confidence component. Moreover, we develop a confidence-driven mechanism that enables combined use of sender- and receiver-side message logging for efficient, fine-grained <b>error</b> <b>containment</b> and recovery. The paper provides a detailed algorithm description...|$|E
40|$|This report {{provides}} perspectives {{gained by}} reviewing 75 Individual Plant Examination (IPE) submittals pertaining to 108 {{nuclear power plant}} units. IPEs are probabilistic analyses that estimate the core damage frequency (CDF) and containment performance for accidents initiated by internal events. The US Nuclear Regulatory Commission (NRC) reviewed the IPE submittals {{with the objective of}} gaining perspectives in three major areas: (1) improvements made to individual plants {{as a result of their}} IPEs and the collective results of the IPE program, (2) plant-specific design and operational features and modeling assumptions that significantly affect the estimates of CDF and containment performance, and (3) strengths and weaknesses of the models and methods used in the IPEs. These perspectives are gained by assessing the core damage and containment performance results, including overall CDF, accident sequences, dominant contributions to component failure and human <b>error,</b> and <b>containment</b> failure modes. Methods, data, boundary conditions, and assumptions used in the IPEs are considered in understanding the differences and similarities observed among the various types of plants. This report is divided into three volumes containing six parts. Part 1 is a summary report of the key perspectives gained in each of the areas identified above, with a discussion of the NRC`s overall conclusions and observations. Part 2 discusses key perspectives regarding the impact of the IPE Program on reactor safety. Part 3 discusses perspectives gained from the IPE results regarding CDF, containment performance, and human actions. Part 4 discusses perspectives regarding the IPE models and methods. Part 5 discusses additional IPE perspectives. Part 6 contains Appendices A, B and C which provide the references of the information from the IPEs, updated PRA results, and public comments on draft NUREG- 1560 respectively...|$|R
40|$|ABSTRACT Objective: to {{identify}} {{the relationship between the}} workload of the nursing team and the occurrence of patient safety incidents linked to nursing care in a public hospital in Chile. Method: quantitative, analytical, cross-sectional research through review of medical records. The estimation of workload in Intensive Care Units (ICUs) was performed using the Therapeutic Interventions Scoring System (TISS- 28) and for the other services, we used the nurse/patient and nursing assistant/patient ratios. Descriptive univariate and multivariate analysis were performed. For the multivariate analysis we used principal component analysis and Pearson correlation. Results: 879 post-discharge clinical records and the workload of 85 nurses and 157 nursing assistants were analyzed. The overall incident rate was 71. 1 %. It was found a high positive correlation between variables workload (r = 0. 9611 to r = 0. 9919) and rate of falls (r = 0. 8770). The medication <b>error</b> rates, mechanical <b>containment</b> incidents and self-removal of invasive devices were not correlated with the workload. Conclusions: the workload was high in all units except the intermediate care unit. Only the rate of falls was associated with the workload...|$|R
40|$|As {{the feature}} size scales down to deep {{nanometer}} regimes, it has enabled the designers to fabricate chips with billions of transistors. The availability of such abundant computational resources {{on a single}} chip {{has made it possible}} to design chips with multiple computational cores, resulting in the inception of Chip Multiprocessors (CMPs). The widespread use of CMPs has resulted in a paradigm shift from computation-centric architectures to communication-centric architectures. With the continuous {{increase in the number of}} cores that can be fabricated on a single chip, communication between the cores has become a crucial factor in its overall performance. Network-on-Chip (NoC) paradigm has evolved into a standard on-chip interconnection network that can efficiently handle the strict communication requirements between the cores on a chip. The components of an NoC include routers, that facilitate routing of data between multiple cores and links that provide raw bandwidth for data traversal. While diminishing feature size has made it possible to integrate billions of transistors on a chip, the advantage of multiple cores has been marred with the waning reliability of transistors. Components of an NoC are not immune to the increasing number of hard faults and soft errors emanating due to extreme miniaturization of transistor sizes. Faults in an NoC result in significant ramifications such as isolation of healthy cores, deadlock, data corruption, packet loss and increased packet latency, all of which have a severe impact on the performance of a chip. This has stimulated the need to design resilient and fault tolerant NoCs. This thesis handles the issue of fault tolerance in NoC routers. Within the NoC router, the focus is specifically on the router pipeline that is responsible for the smooth flow of packets. In this thesis we propose two different fault tolerant architectures that can continue to operate in the presence of faults. In addition to these two architectures, we also propose a new reliability metric for evaluating soft error tolerant techniques targeted towards the control logic of the NoC router pipeline. First, we present Shield, a fault tolerant NoC router architecture that is capable of handling both hard faults and soft errors in its pipeline. Shield uses techniques such as spatial redundancy, exploitation of idle resources and bypassing a faulty resource to achieve hard fault tolerance. The use of these techniques reveals that Shield is six times more reliable than baseline-unprotected router. To handle soft errors, Shield uses selective hardening technique that includes hardening specific gates of the router pipeline to increase its soft error tolerance. To quantify soft error tolerance improvement, we propose a new metric called Soft Error Improvement Factor (SEIF) and use it to show that Shield’s soft error tolerance is three times better than that of the baseline-unprotected router. Then, we present Soft Error Tolerant NoC Router (STNR), a low overhead fault tolerating NoC router architecture that can tolerate soft errors in the control logic of its pipeline. STNR achieves soft error tolerance based on the idea of dual execution, comparison and rollback. It exploits idle cycles in the router pipeline to perform redundant computation and comparison necessary for soft error detection. Upon the detection of a soft error, the pipeline is rolled back to the stage that got affected by the soft error. Salient features of STNR include high level of soft <b>error</b> detection, fault <b>containment</b> and minimum impact on latency. Simulations show that STNR has been able to detect all injected single soft errors in the router pipeline. To perform a quantitative comparison between STNR and other existing similar architectures, we propose a new reliability metric called Metric for Soft error Tolerance (MST) in this thesis. MST is unique in the aspect that it encompasses four crucial factors namely, soft error tolerance, area overhead, power overhead and pipeline latency overhead into a single metric. Analysis using MST shows that STNR provides better reliability while incurring low overhead compared to existing architectures...|$|R
40|$|There {{are many}} {{economic}} and technical arguments for {{the reduction of}} the number of Electronic Control Units (ECUs) aboard a car. One of the key obstacles to achieve this goal is the limited composability, fault isolation and <b>error</b> <b>containment</b> of today’s singleprocessor architectures. However, significant changes in the chip architecture are taking place in order to manage the synchronization, energy dissipation, and fault-handling requirements of emerging billion transistor SoCs (systems-on-a-chip). The single processor architecture is replaced by multi-core SoCs that communicate via networks-on-chip (NoC). These emerging multi-core SoCs provide an ideal execution environment for the integration of multiple automotive ECUs into a single SoC. This paper presents a model-based software development method for designing applications using these multi-core SoCs. 1...|$|E
40|$|In safety-critical systems, {{software}} safety analysis aims to provide {{confidence that the}} risk associated with the software is acceptable. Accidents in safety-critical systems are usually associated with the occurrence of multiple failures in the system components, or {{with the lack of}} adequate <b>error</b> <b>containment</b> mechanisms. The process of safety analysis can be enhanced if the appropriate abstractions are provided for the modelling and analysis of the system components and their interactions. This paper shows how a co-operative object-oriented approach can be used in the analysis of the safety properties of a system by focusing on the interactions between its components. The feasibility of the approach is demonstrated in terms of a case study which deals with the safety procedures associated with the launching and flight of a sounding rocket...|$|E
40|$|In a safety-critical {{real time}} system it is {{important}} to prevent the babbling idiot failure (BIF), which is characterized by a faulty node transmitting arbitrary messages at random points in time. However, existing communication systems based on flexible time division multiple access (FTDMA), whose development was driven explicitly by the new needs of future in-car control applications involving safety-critical functions, do not provide any efficient solution to avoid the BIF. Therefore, a bus guardian (BC) solution is presented to avoid the BIF in a FTDMA based communication system in this paper. The supervision algorithm of the proposed BC is presented along with the node architecture necessary for implementing the presented technique. Results of performance evaluation show that the proposed BC can enforce the <b>error</b> <b>containment</b> in the time domain of FTDMA based systems and help to make them appropriate for safety-critical applications. IEE...|$|E
40|$|Memory error {{exploits}} {{rank among}} the most serious security threats. Of the plethora of memory <b>error</b> <b>containment</b> solutions proposed over the years, most {{have proven to be}} too weak in practice. Multi-Variant eXecution (MVX) solutions can potentially detect arbitrary memory error exploits via divergent behavior observed in diversified program variants running in parallel. However, none have found practical applicability in security due to their non-trivial performance limitations. In this paper, we present MvArmor, an MVX system that uses hardware-assisted process virtualization to monitor variants for divergent behavior in an efficient yet secure way. To provide comprehensive protection against memory error exploits, MvArmor relies on a new MVX-aware variant generation strategy. The system supports user-configurable security policies to tune the performance-security trade-off. Our analysis shows that MvArmor can counter many classes of modern attacks at the cost of modest performance overhead, even with conservative detection policies...|$|E
40|$|Abstract: This paper {{considers}} the modeling and compensator design for Self-ServoWriting (SSW) in disk drives. An Iterative Learning Control (ILC) based scheme is established {{to deal with}} radial error propagation and {{improve the quality of}} written tracks. In the proposed scheme, a feedback controller for track following is first designed to achieve good disturbance attenuation. Then, an ILC structure is applied to generate an external signal, which is injected into the feedback loop in order to compensate for the written-in errors in the previous track while the next track is written. As a result, the error propagation can be contained. The learning controller is synthesized by solving Linear Matrix Inequality (LMI) equations to ensure the stability and monotonic convergence of the control algorithm. Simulation results show the effectiveness of the proposed scheme on the <b>error</b> <b>containment</b> which results in good quality written tracks. 1...|$|E
40|$|Standardized and {{reusable}} software (SW) objects (or SW components - in-house or pre-fabricated) {{are increasingly}} being used {{to reduce the cost}} of software (SW) development. Given that the basic components may not have been developed with dependability as primary driver, these components need to be adapted to deal with errors from their environment. To achieve this, <b>error</b> <b>containment</b> wrappers are added to increase the reliability of the components. In this paper, we first present a modular specification approach using fault intolerant components, based on the concepts of category theory. We further introduce the concept of wrapper consistency, based upon which, we present an algorithm that systematically generates globally consistent fault containment wrappers for each component, to make them fault tolerant. Subsequently, we enhance the initial modular specification to deal with the wrapped components, and show that safety properties of the system are preserved under composition only if the wrappers are globally consistent...|$|E
