10|121|Public
50|$|Riders {{from this}} {{classification}} may compete {{at a higher}} <b>functionality</b> <b>class,</b> but they must declare their intention {{to do so by}} end of the year for competitions in the following year.|$|E
5000|$|Equipment usage {{for this}} class differs based on rider profile. In general, {{competitors}} in this grade use a snaffle bit. [...] Riders may use their voice {{to guide the}} horse during competition provided they do so in moderation. [...] Riders from this classification may compete at a higher <b>functionality</b> <b>class,</b> but they must declare their intention {{to do so by}} end of the year for competitions in the following year.|$|E
5000|$|SCPI {{was defined}} as an {{additional}} layer {{on top of the}} IEEE 488.2-1987 specification [...] "Standard Codes, Formats, Protocols, and Common Commands". The standard specifies a common syntax, command structure, and data formats, to be used with all instruments. It introduced generic commands (such as [...] and [...] ) that could be used with any instrument. These commands are grouped into subsystems. SCPI also defines several classes of instruments. For example, any controllable power supply would implement the same [...] base <b>functionality</b> <b>class.</b> Instrument classes specify which subsystems they implement, as well as any instrument-specific features.|$|E
40|$|This {{document}} is a deliverable item from Joint Task 1 (JT 01) whose {{terms of reference}} are defined in the Joint Workplan for cooperation on Security of Information Systems [1]. The objectives of JT 01 are to: (a) Establish {{a common set of}} security <b>functionality</b> <b>classes,</b> representative of international and regional market-driven needs. (b) Develop a common approach to the creation of profiles from these security <b>functionality</b> <b>classes</b> consistent with current regional and international activities. (c) Create guidelines to support the prototyping of such profiles and their interpretability. This document describes methods for relating security <b>functionality</b> <b>classes</b> being proposed by various security evaluation criteria standardization efforts and security sub-profile specifications stemming from profiling of Open Systems standards. It is intended to fulfil item "b" of the JT 01 workplan, "Description of the approach for expressing <b>functionality</b> <b>classes</b> with regard to OSE stand [...] ...|$|R
40|$|This {{paper is}} the first work product of Joint Task 1 (JT 01) defined in the Joint Workplan for {{cooperation}} on Security of Information Systems [1]. The objectives of JT 01 are to: (a) Establish {{a common set of}} security <b>functionality</b> <b>classes,</b> representative of international and regional market-driven needs. (b) Develop a common approach to the creation of profiles from these security <b>functionality</b> <b>classes</b> consistent with current regional and international activities. (c) Create guidelines to support the prototyping of such profiles and their interoperability. This paper provides a base for common understanding of critical terms and concepts. It discusses the efforts and terms used in the four major Information Technology Security efforts: (a) The U. S. Department of Defense Trusted Computer System Evaluation Criteria (TCSEC) [2], also known as the Orange Book. (b) The European Information Technology Security Evaluation Criteria (ITSEC) [3]. (c) The Canadian Trusted Computer Product Evaluati [...] ...|$|R
5000|$|A class does zero or more roles, which add {{the ability}} to add pre-defined <b>functionality</b> to <b>classes</b> without subclassing.|$|R
5000|$|Equipment usage {{for this}} class differs based on rider profile. In general, {{competitors}} in this grade use a snaffle bit. [...] Riders may use their voice {{to guide the}} horse during competition provided they do so in moderation. [...] Riders from this classification may compete at a higher <b>functionality</b> <b>class,</b> but they must declare their intention {{to do so by}} end of the year for competitions in the following year. [...] Grade 2 para-dressage riders with Profiles 8, 10a/b, 11a/b, 14, 17a, 18a, 27, 31a/b, and 32 are allowed to have a hard hand hold. Grade 2 para-dressage riders with Profile 14, and 27 are allowed to use a connecting rein bar.|$|E
40|$|ITSEC {{included}} example functionality classes, {{the structure}} of which appeared to only cater for Objectives and SEFs at C 2. This SIN includes additional information in order to set Objectives and SEFs in context, and bring {{the concept of a}} <b>functionality</b> <b>class</b> into line with current thinking. Additionally, a generic suitability analysis and baseline binding analysis have been included for completeness...|$|E
40|$|This paper {{presents}} {{a new approach}} for security evaluation criteria of network-based IT systems. The Extended Commercially Oriented <b>Functionality</b> <b>Class</b> (E-COFC) addresses a minimum set of security functionalities for the commercial market to reduce technical complexity and to allow timely and cost-effective application. The standard addresses today's commercial requirements and its various legal concerns. In contrast to state-of-the artapproaches, such as the Common Criteria, the standard addresses the contractual relationships upon which business processes are based on. The E-COFC is considered as a baseline standard commercial enterprises can measure against. 1...|$|E
5000|$|The {{following}} keywords {{are implemented}} in uC++ to provide extended <b>functionality</b> on <b>class</b> implementations, exception handling capabilities, and scheduling: ...|$|R
5000|$|Decorator pattern: add {{additional}} <b>functionality</b> to a <b>class</b> at runtime where subclassing {{would result}} in an exponential rise of new classes ...|$|R
50|$|Following the {{approach}} of object oriented programming, each Embedded Wizard project consists of classes which implement a certain part of the design and/or <b>functionality.</b> The <b>class</b> library of Embedded Wizard, called Mosaic, is part of every project and provides the basic functionality for visual objects, for focus handling, layouting, event handling and more.|$|R
40|$|LL TR- 078. DOC 28 - 02 - 00 10, 04. Brief History After the ECMA Technical Committee TC 36 "IT Security " had {{completed}} {{the development of the}} Standard ECMA- 271 "Extended Commercially Oriented <b>Functionality</b> <b>Class</b> for Security Evaluation (E- COFC) " it was quite natural to continue with the development of a Protection Profile, i. e. a Profile that combines the functional criteria of the E- COFC with a set of assurance criteria. It was decided to use the Common Criteria for this purpose, since these criteria {{were in the process of}} being standardized by ISO/IEC JTC 1 /SC 27. Due to the active support of the US National Institute of Standardization and Technology (NIST) in TC 36 it was possible to build this profile, based on the Public Business Class of E- COFC. Starting point and basis of th...|$|E
40|$|December 1993. This {{standard}} was {{a contribution to}} the ongoing harmonization process for internationally accepted security evaluation criteria, called Common Criteria. Standard ECMA- 205 provided a set of functional criteria, which was based on commercial requirements with the additional intention in mind to make security evaluation easier and therefore more economical. Many world wide operating computer manufacturers supported this approach. After completion of Standard ECMA- 205, ECMA TC 36 (IT Security) continued its work to extend the Standard into the area of interconnected systems. This work had to consider network security as well as commercial requirements for secure electronic business and secure electronic shopping and services. This new standard is based on the COFC and provides additional functionalities for an enterprise internal network of interconnected systems, for secure electronic business within a closed user group, and for secure electronic shopping and services via a communication line or network. The standard takes aspects of protection against misuse, espionage, fraud etc. into account, but also legal aspects to secure business operations against denial of actually performed business actions. Standard ECMA- 271 is called “Extended Commercially Oriented <b>Functionality</b> <b>Class</b> for Security Evaluation (E- COFC) “. The standard is based on ECMA- 205 (COFC) and then hierarchically built up with the Enterprise Business class as first layer, the Contract Business Class as second layer and the Public Business Class as third layer...|$|E
40|$|Protein {{sequences}} {{are essential}} for encoding molecular structures and functions. Consequently, biologists invest substantial resources and time discovering functional patterns in proteins. Using high-throughput technologies, biologists are generating an increasing amount of data. Thus, the major challenge in biosequencing today {{is the ability to}} conduct data analysis in an effi cient and productive manner. Conserved amino acids in proteins reveal important functional domains within protein families. Conversely, less conserved amino acid variations within these protein sequence patterns reveal areas of evolutionary and functional divergence. Exploring protein families using existing methods such as multiple sequence alignment is computationally expensive, thus pattern search is used. However, at present, combinatorial methods of pattern search generate a large set of solutions, and probabilistic methods require richer representations. They require biological ground truth of the input sequences, such as gene name or taxonomic species, as class labels based on traditional classi fication practice to train a model for predicting unknown sequences. However, these algorithms are inherently biased by mislabelling and {{may not be able to}} reveal class characteristics in a detailed and succinct manner. A novel pattern representation called an Aligned Pattern Cluster (AP Cluster) as developed in this dissertation is compact yet rich. It captures conservations and variations of amino acids and covers more sequences with lower entropy and greatly reduces the number of patterns. AP Clusters contain statistically signi cant patterns with variations; their importance has been confi rmed by the following biological evidences: 1) Most of the discovered AP Clusters correspond to binding segments while their aligned columns correspond to binding sites as verifi ed by pFam, PROSITE, and the three-dimensional structure. 2) By compacting strong correlated functional information together, AP Clusters are able to reveal class characteristics for taxonomical classes, gene classes and other functional classes, or incorrect class labelling. 3) Co-occurrence of AP Clusters on the same homologous protein sequences are spatially close in the protein's three-dimensional structure. These results demonstrate the power and usefulness of AP Clusters. They bring in similar statistically signifi cance patterns with variation together and align them to reveal protein regional <b>functionality,</b> <b>class</b> characteristics, binding and interacting sites for the study of protein-protein and protein-drug interactions, for diff erentiation of cancer tumour types, targeted gene therapy as well as for drug target discovery. 1 yea...|$|E
50|$|In {{computer}} programming, a trait is {{a concept}} used in object-oriented programming, which represents a set of methods {{that can be used}} to extend the <b>functionality</b> of a <b>class.</b>|$|R
50|$|The {{classes in}} the library could also {{be divided into two}} groups by whether it {{implements}} low-level or high-level operations. The classes that deal with low-level stuff are called stream buffers. They operate on characters without providing any formatting <b>functionality.</b> These <b>classes</b> are very rarely used directly. The high-level classes are called streams and provide various formatting capabilities. They are built on top of stream buffers.|$|R
40|$|For {{some time}} now, the {{development}} {{community has been}} praising such practices as unit testing, coding standard enforcement, metrics measurement, and Design by Contract TM. When implemented, these techniques can dramatically improve product reliability and reduce development time and cost. However, until now, these practices have required so much work that few developers could actually adopt them. Jtest ® removes this obstacle for Java TM developers by automating these beneficial techniques. When performing unit testing, Jtest automatically creates and executes test cases that verify <b>class</b> <b>functionality</b> and <b>class</b> construction; when statically analyzing code, Jtest enforces coding standards that prevent errors and measure metrics that help pinpoint complicated (and thus error-prone) areas of code. By automating these practices, Jtest {{makes it easy for}} even the most time-pressed developers to incorporate them into their development processes and reap the rewards they offer...|$|R
40|$|Web应用服务器为多层分布式企业级应用的开发、部署、集成、运行和维护提供了通用的基础设施。随着在网络计算环境下用户规模和数据量的增长，单个Web应用服务器往往不能满足性能、可靠性等方面的需求，需要借助集群技术以提高分布式系统的可用性、可扩展性和处理性能。可靠的集群通信是Web应用服务器信息交互的基础，然而目前应用服务器产品的集群通信系统普遍存在着自适应能力低、容错性较差、可重配能力不足等问题。本文围绕上述问题，探讨了Web应用服务器集群通信系统的设计与实现。首先，本文研究了维持集群结构一致性和正确性的关键问题。分析了Web应用服务器集群结构的应用需求，实现了自适应动态拓扑结构，在集群成员间维持拓扑视图的一致性，完成动态加入和优雅退出操作。提出了分布式对等管理机制，避免了性能和可用性瓶颈。利用管理服务器心跳信号侦测同名集群，通过管理服务器自动降级合并同名集群，保证集群的单一性。实现了失效监测链，在任意服务器失效情况下能够在有限时间内重组集群，同时在管理服务器失效后重新选举管理服务器，增强了集群的整体可用性。其次，本文研究了Web应用服务器集群消息传输的三类模型：PUB／SUB模型、恒定点一点传输模型和临时点一点传输模型，实现了基于集群协作的优化可靠多播，利用滑动窗口进行流控制。在局域网环境下扩展了GossiP算法，实现了分布式消息确认机制，同时依据动态拓扑视图的实时更新避免失效实例对消息的阻塞，在不可靠多播协议的基础上实现了消息的可靠传输。最后，本文描述了可灵活重配的集群通信系统CCSAS的具体实现。CCSAS利用XML结构化对象模型和Java虚拟机的运行时动态绑定机制，根据可配置组件参数和运行策略实现功能类实例的动态加载，赋予集群管理者灵活更改集群结构、备份策略、负载平衡机制等运行时规则的能力，实现了高度柔性的集群。论文的研究成果已应用于中科院软件所自主开发的基于J 2 EE规范的Web应用服务器OnceAs中。目前，OnceAs已成功用于电子政务、电子商务和ERP系统等领域。Web {{application}} server(WAS) {{provides a}} common infrastructure for the development, deployment, integration, running {{and maintenance of}} multi-tier distributed enterprise applications. With the increase of user number and data volume in network computing environment, a single WAS cannot always satisfy the need for performance and reliability. It is necessary to improve the availability, scalability and processing capability of WAS with clustering technology. Reliable cluster communication is the base of WAS information exchange. However, there still exist problems such as low adaptability, deficient fault tolerance and lack of configurability in most cluster communication systems of today's application servers. This thesis focuses on these problems and studies the design and implementation of web application server cluster communication system. Firstly, this thesis studies the key issues of maintaining the consistency and correctness of cluster structure. It analyzes the application requirements of WAS cluster structure and implements an adaptive dynamic topology. The consistency of topology views is kept around the cluster members and graceful joining and leaving operations are performed. This thesis brings about a distributed noncentral management mechanism to avoid performance and availability bottleneck. Homonymous clusters are detected through heartbeat signals and merged by automatic administrative server degradation to keep the uniqueness of clusters. A fail-detect chain is implemented to reorganize the cluster in a limited {{period of time in}} case that any number of servers would fail. And a new administrative server would be selected if the original failed, which greatly improves the whole availability of clusters. Secondly, this thesis studies three types of models of WAS cluster message transport: PUB/SUB model, constant peer-to-peer model and temporary peer-to-peer model. It implements the optimized multicast based on cluster cooperation and uses sliding windows to fulfill flow-control. Gossip algorithm is extended in the LAN environment to facilitate the distributed message acknowledgement. Real-time update of dynamic topology view is used to prevent failed instances to block message transfer. Thus, reliable message exchange is implemented on top of unreliable multicast protocols. At last, this thesis describes the implementation of the flexibly configurable cluster communication system - CCS AS. In CCS AS, XML structural object model and Java dynamic binding mechanism are used to dynamically load instances of <b>functionality</b> <b>class</b> according to the component parameters and runtime policies, which grants the administrator of cluster capabilities of flexibly changing runtime rules such as cluster structure, backup policy and load balancing method. A cluster with great flexibility is achieved in this way. The CCSAS cluster communication system has been integrated in the J 2 EE web application server OnceAS which is developed independently by the Institute of Software, Chinese Academy of Sciences. Now OnceAS has been widely used in such fields as E-Government, E-Commerce and ERR...|$|E
50|$|Inheritance: The {{ability for}} a class to extend or {{override}} <b>functionality</b> of another <b>class.</b> The so-called subclass has a whole section that is derived (inherited) from the superclass and then {{it has its own}} set of functions and data.|$|R
5000|$|Code reusability: Mixins {{are useful}} when a {{programmer}} wants to share <b>functionality</b> between different <b>classes.</b> Instead of {{repeating the same}} code over and over again, the common functionality can simply be grouped into a mixin and then inherited into each class that requires it.|$|R
5|$|Windows 10 harmonizes {{the user}} {{experience}} and <b>functionality</b> between different <b>classes</b> of device, and addresses shortcomings in the user interface that {{were introduced in}} Windows 8. Windows 10 Mobile, the successor to Windows Phone 8.1, shares some user interface elements and apps with its PC counterpart.|$|R
40|$|Abstract − This paper {{describes}} a control architecture design {{and a system}} integration strategy for the autonomous service robot PSR(Public Service Robot). The PSR is under development at the KIST(Korea Institute of Science and Technology) for service tasks in public spaces such as office buildings and hospitals. The proposed control architecture is designed by tripodal frameworks, which are layered <b>functionality</b> diagram, <b>class</b> diagram, and configuration diagram. The tripodal schematic design clearly points out the way of integrating various hardware and software components. The developed strategy is implemented on the PSR and successfully tested. 1...|$|R
50|$|Prosthetic fitting and <b>functionality</b> in this <b>class</b> can differ {{depending}} on where, between {{the knee and}} hip, the amputation exists. The lower the amputation, the greater the lever the prosthetic user has using prosthesis and the more control they have in its usage. The higher the amputation, the less control they have. This can result in problems with balance.|$|R
40|$|Software birthmarks {{are unique}} and native {{characteristics}} of every software component. Two components having similar birthmarks {{indicate that they}} are similar in functionality, structure and implementation. Questions addressed in this paper include: Which are similar class files? Can they be gathered into one class file? What are major <b>functionalities</b> among <b>class</b> files? To answer to these questions, this paper analyzed the similarity of birthmarks for all pairs of classes in ArgoUML, and visualized them using Multi-Dimensional Scaling (MDS). As a result, three pairs of very similar class files, which seem {{to be made by}} copy-and-paste programming, were identified. Also, four major functionalities were identified in the MDS space...|$|R
40|$|This is a class {{file for}} MSU theses and dissertations. It {{is based on}} the memoir class, and {{therefore}} supports all of the <b>functionality</b> of that <b>class.</b> It should generate a document which meets all the basic formatting requirements laid out by the Formatting Guide For Submission of Master’s Theses and Doctoral Dissertations (2012) produced by the Graduate School, includin...|$|R
40|$|Semiplenamides are anandamide-like {{fatty acid}} amide {{metabolites}} previously isolated from a marine cyanobacterium that display a range of biological activity. Novel syn-aldol/dehydration methodology has been developed for the stereoselective synthesis of the core (E) -alpha, beta-unsaturated amide <b>functionality</b> of this <b>class</b> of natural product, and employed for the efficient synthesis of semi-plenamide C. (c) 2005 Elsevier Ltd. All rights reserved...|$|R
5000|$|The Framework Class Library (FCL) is a {{standard}} library and Microsoft's [...]NET Framework implementation of the Standard Libraries as defined in the Common Language Infrastructure. The FCL {{is a collection of}} reusable classes, interfaces and value types. The Base Class Library (BCL) is the core of the FCL and provides the most fundamental <b>functionality,</b> which includes <b>classes</b> in namespaces , , , , , , [...] and [...]|$|R
40|$|Hierarchically ordered porous {{materials}} have drawn intense attention {{owing to the}} drastically enlarged surface area, the defined multiscale porous structure, and the new route of introducing additional <b>functionality.</b> This <b>class</b> of materials present significant potential {{in the fields of}} molecular separation, catalysis, micro-reactors, tissue engineering, photonic bandgap (PBG) materials, and phononic bandgap materials. Binary colloidal crystal, a binary crystal structure formed by two sizes of colloidal particles, has proven to be an excellent template for fabricating hierarchically ordered {{porous materials}}. In this paper, we demonstrate the horizontal deposition method 18 as a facile approach to the growth of bCCs 19. The large-area bCCs were subsequently used as templates for forming hierarchical macroporous structures. No Full Tex...|$|R
40|$|The report {{gives some}} {{background}} {{information about the}} most important finite element classes in Diffpack. Parts of the class definitions are shown and explained. The classes FieldFE, FiniteElement, ElmMatVec, ElmItgRules, DegFreeFE and LinEqAdm are covered. Contents 1 Introduction 1 2 The basic finite element assembly algorithm 1 2. 1 The numerical problem............................. 2 2. 2 Developing a program.............................. 2 2. 3 Increasing the abstraction level......................... 5 3 The finite element field class 9 3. 1 Basic <b>functionality</b> of <b>class</b> FieldFE...................... 9 3. 2 The FieldFE::operator=(FuncField&) function............... 11 3. 3 Interpolating a finite element field........................ 12 3. 4 Converting a finite difference field to finite element field............ 14 3. 5 Finite diffe [...] ...|$|R
40|$|The ALICE Central Trigger Processor (CTP) at the CERN LHC {{has been}} {{upgraded}} for LHC Run 2, {{to improve the}} Transition Radiation Detector (TRD) data-taking efficiency and to improve the physics performance of ALICE. There is a new additional CTP interaction record sent using a new second Detector Data Link (DDL), a 2 GB DDR 3 memory and an extension of <b>functionality</b> for <b>classes.</b> The CTP switch has been incorporated directly onto the new LM 0 board. A design proposal for an ALICE CTP upgrade for LHC Run 3 is also presented. Part of the development is a low latency high bandwidth interface whose purpose is to minimize an overall trigger latency...|$|R
50|$|To support Simple Service Discovery Protocol (SSDP) and WS-Discovery, and for {{extensible}} discovery {{to support}} other protocols, Windows Vista includes the Function Discovery API. Function Discovery {{serves as an}} abstraction layer between applications and devices, allowing applications to discover devices by referencing the device's function, rather than by its bus type or {{the nature of its}} connection. The Function Discovery API aims to create applications that enumerate system resources, use devices of a specific type and discover and manage lists of devices or objects, which are sorted by <b>functionality</b> or <b>class,</b> whether local or network connected. Function Discovery supports an extensible discovery provider model. Vendors can also create a custom provider to expose resources through Function Discovery.|$|R
40|$|Cohesion and {{coupling}} {{are considered}} amongst {{the most important}} properties to evaluate {{the quality of a}} design. In the context of OO software development, cohesion means relatedness of the public <b>functionality</b> of a <b>class</b> whereas coupling stands for the degree of dependence of a class on other classes in OO system. In this thesis, a new metric has been proposed that measures the class cohesion on the basis of relative relatedness of the public methods to the overall public <b>functionality</b> of a <b>class.</b> The proposed metric for class cohesion uses a new concept of subset tree to determine relative relatedness of the public methods to the overall public <b>functionality</b> of a <b>class.</b> A set of metrics has been proposed for measuring class coupling based on three types of UML relationships, namely association, inheritance and dependency. The reasonable metrics to measure cohesion and coupling are supposed to share the same set of input data. Sharing of input data by the metrics encourages the idea for the existence of mutual relationships between them. Based on potential relationships research questions have been formed. An attempt is made to find answers of these questions {{with the help of an}} experiment on OO system FileZilla. Mutual relationships between class cohesion and class coupling have been analyzed statistically while considering OO metrics for size and reuse. Relationships among the pairs of metrics have been discussed and results are drawn in accordance with observed correlation coefficients. A study on Software evolution with the help of class cohesion and class coupling metrics has also been performed and observed trends have been analyzed...|$|R
40|$|Introduction Software {{applications}} {{have been}} growing {{for the last two}} decades in terms of size, complexity, diversity and importance, transforming them from one-person/short-term assignments to several-persons/long-term projects. In this context, the viability of applications is strongly dependent on the organization of the software and on howquickly changes can be implemented. Researchers havebeenaware of these problems, and have come up with solutions such as object-oriented programming and programming language independentinterface definitions (IDLs). Object-oriented programming provides a natural modeling of the world based on objects and relations between them. Objects are grouped into sets of objects with similar <b>functionality,</b> called <b>classes.</b> Object-oriented programming also allows a particular kind of reuse by subclassing. Interface definition languages address other problems, suchasentity specification and collaboration between software components from differentvendors...|$|R
5000|$|... rCOS was {{originally}} developed by He Jifeng, Zhiming Liu and Xiaoshan Li at UNU-IIST in Macau, {{and consists of}} a unified multi-view modeling notation with a theory of relational semantic and graph-based operational semantics, a refinement calculus and tool support for model construction, model analysis and verification, and model transformations. Model transformations automate refinement rules and design patterns and generate conditions as proof obligations. rCOS support multiple dimensional modeling: models {{at different levels of}} abstraction related by refinement relations, hierarchy of compositions of components, and models of different views of the system (interaction protocols of components, reactive behaviors of components, data <b>functionality,</b> and <b>class</b> structures and data types). Components are composed and integrated based on their models of interfaces to support third party composition.|$|R
50|$|The {{nature of}} a person's amputations in this class can effect their {{physiology}} and sports performance. Prosthetic fitting and <b>functionality</b> in this <b>class</b> can differ depending on where, between the knee and hip, the amputation exists. The lower the amputation, the greater the lever the prosthetic user has using prosthesis and the more control they have in its usage. The higher the amputation, the less control they have. This can result in problems with balance.|$|R
