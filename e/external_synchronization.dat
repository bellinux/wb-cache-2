48|69|Public
2500|$|From {{experience}} by inertial scenarios (i.e. measurements in inertial frames), Langevin observers synchronize their clocks by standard Einstein convention or by slow clock synchronization, respectively (both internal synchronizations). For a certain Langevin observer this method works perfectly. Within its immediate vicinity clocks are synchronized and light propagates isotropic in space. But the experience when the observers try to synchronize their clocks along a closed path in space is puzzling: {{there are always}} at least two neighboring clocks which have different times. To remedy the situation, the observers agree on an <b>external</b> <b>synchronization</b> procedure (coordinate time t — or for ring-riding observers, a proper coordinate time for a fixed radius r). By this agreement, Langevin observers riding on a rigidly rotating disk will conclude from measurements of small distances between themselves that the geometry of the disk is non-Euclidean. [...] Regardless of which method they use, they will conclude that the geometry is well approximated by a certain Riemannian metric, namely the Langevin-Landau-Lifschitz metric. [...] This is in turn very well approximated by the geometry of the hyperbolic plane (with the negative curvatures -3ω2 and -3ω2r2, respectively). [...] But if these observers measure larger distances, they will obtain different results, depending upon which method of measurement they use! [...] In all such cases, however, they will most likely obtain results which are inconsistent with any Riemannian metric. In particular, if they use the simplest notion of distance, radar distance, owing to various effects such as the asymmetry already noted, they will conclude that the [...] "geometry" [...] of the disk is not only non-Euclidean, it is non-Riemannian.|$|E
5000|$|ECMA-407 uses modern {{tools such}} as {{loudness}} according to ITU-R or the European Broadcasting Union and electronic fingerprint that allow internal and <b>external</b> <b>synchronization,</b> for example, with video, with additional services or with [...] "second screens".|$|E
50|$|A {{more subtle}} {{advantage}} is that by storing a tag {{in the same place}} as the pointer, it is often possible to guarantee the atomicity of an operation that updates both the pointer and its tag without <b>external</b> <b>synchronization</b> mechanisms. This can be an extremely large performance gain, especially in operating systems.|$|E
30|$|The {{substation}} area {{protection and control}} functions shall be realized without depending on <b>external</b> time <b>synchronization</b> system to the greatest extent [10, 11].|$|R
5000|$|<b>External</b> clock <b>synchronization</b> by {{choosing}} a [...] "preferred" [...] reference frame (like the CMB) {{and using the}} clocks of this frame to synchronize the clocks in all other frames ("absolute" [...] synchronization).|$|R
40|$|This paper 1 {{provides}} {{a description of}} our Network Time Interface M-Module (NTI) supporting very-high accuracy <b>external</b> clock <b>synchronization</b> by hardware. The NTI is built around our custom Universal Time Coordinated Synchronization Unit VLSI chip (UTCSUASIC), which contains {{the core of the}} hardware support required for interval-based clock synchronization: A state and rate adjustable clock device, locally maintained accuracy intervals, interfaces to GPS receivers, and various timestamping features. Designed for maximum network and CPU independence, our NTI {{provides a}} turn-key solution for adding highresolution synchronized clocks to distributed real-time systems built upon hardware with M-Module interfaces. Keywords: <b>external</b> clock <b>synchronization,</b> hardware support, fault-tolerant distributed real-time systems, interval-based paradigm, M-Modules, GPS, VLSI. 1 Introduction Designing distributed fault-tolerant real-time applications is usually considerably simplified when [...] ...|$|R
50|$|Other {{terms for}} self-synchronizing code are {{synchronized}} code or, ambiguously, comma-free code. A self-synchronizing code permits the proper framing of transmitted code words provided that no uncorrected errors {{occur in the}} symbol stream; <b>external</b> <b>synchronization</b> is not required. Self-synchronizing codes also allow recovery from uncorrected errors in the stream; with most prefix codes, an uncorrected error in a single bit may propagate errors further in the stream and make the subsequent data corrupted.|$|E
50|$|In {{addition}} to the six digital audio channels, three data/control channels were provided. One SMPTE time code channel and another channel for MIDI control signals offered flexibility for performing theater automation or <b>external</b> <b>synchronization</b> of equipment. The third data channel, an identification track, could used to record a variety of user-defined parameters specific to the film (such as curtain opening/closing, seat movement or lighting effects.) In {{view of the fact}} that the CDS system was available for only two years before its complete withdrawal from the market, no use of the SMPTE time code or MIDI channels was ever implemented.|$|E
5000|$|On 2 November 2010, David Harris {{posted the}} {{following}} message regarding {{the progress of}} developmenton the newest release of Pegasus Mail, PMail Version 5.0: Progress continues on the new contacts manager for Pegasus Mail version 5. The new contact manager uses an SQL-based back-end for storage, and offers an incredibly rich range of attributes and options: it will exist alongside the now aging Pegasus Mail address book format, and while existing address books will continue to work, {{there will also be}} options to import their contents into the new contact manager database. The new code has been designed heavily with <b>external</b> <b>synchronization</b> in mind, but at least initially, we will not be including any built-in synchronization clients: there is an extensive API that other developers can use to perform synchronization (down to the attribute level) though, and as real-world usage solidifies after release, we will evaluate what synchronization clients might be most appropriate to provide as standard options. We hope to release an initial version of Pegasus Mail version 5 with the new contact manager in place either late in December this year, or early in 2011. A subsequent version with the entirely-new message store I have been working on for over a year will follow at a later stage. I'm personally very excited about the new contact manager - I believe it could have an enormous impact on the way many people work in a world of e-mail overload ...|$|E
40|$|This paper {{provides}} an overview of specification and implementation of an ASIC running under the acronym UTCLIENT that supports <b>external</b> clock <b>synchronization</b> by hardware. It incorporates an adder-based clock to maintain local time, facilities to timestamp packets containing synchronization data, interfaces to GPS receivers and provides moderate application support...|$|R
40|$|High {{accurate}} <b>external</b> clock <b>synchronization</b> {{can only}} be achieved with adequate hardware support. We analyze the requirements yielding a specification and implementation of an ASIC running under the acronym UTCSU. It incorporates adder-based clocks to maintain both local time and accuracy, facilities to timestamp packets containing synchronization data, interfaces to couple GPS receivers, moderate application support, and self-test machinery. These novel clocks are distinguished by their fine grained rate adjustability and their hardware support for linear continuous amortization. Apart from addressing design and engineering issues of this chip, the paper provides a basic programming model as well. Keywords: Real-time systems, <b>external</b> clock <b>synchronization,</b> Universal Time Coordinated (UTC), adder-based clock (ABC), linear continuous amortization, accuracy intervals, Application Specific Integrated Circuit (ASIC), Very high speed integrated circuit Hardware Description Language (VHD [...] ...|$|R
40|$|High-accuracy <b>external</b> clock <b>synchronization</b> {{can only}} be {{achieved}} with adequate hardware support. We analyze the requirements and present the specification and implementation of an ASIC running under the acronym UTCSU dedicated to that purpose. It is built around an elaborated local clock, {{which is based on}} an adder driven by a fixed-frequency oscillator. This novel clock design allows a fine grained rate adjustability apt for maintaining both local time with linear continuous amortization and accuracy information as needed in interval-based clock synchronization. Additional features incorporated in our UTCSU are facilities to timestamp clock synchronization data packets, interfaces to couple GPS receivers, some application support as well as sophisticated self-test machinery. Apart from addressing design and engineering issues of the chip, we also provide a basic programming model. Keywords: Real-time systems, <b>external</b> clock <b>synchronization,</b> Universal Time Coordinated (UTC), Adder- [...] ...|$|R
5000|$|From {{experience}} by inertial scenarios (i.e. measurements in inertial frames), Langevin observers synchronize their clocks by standard Einstein convention or by slow clock synchronization, respectively (both internal synchronizations). For a certain Langevin observer this method works perfectly. Within its immediate vicinity clocks are synchronized and light propagates isotropic in space. But the experience when the observers try to synchronize their clocks along a closed path in space is puzzling: {{there are always}} at least two neighboring clocks which have different times. So, to remedy the situation, the observers agree on an <b>external</b> <b>synchronization</b> procedure (coordinate time t — or for ring riding observers, a proper coordinate time for a fixed radius r, respectively). By this agreement, Langevin observers riding on a rigidly rotating disk will conclude from measurements of small distances between themselves that the geometry of the disk is non-Euclidean. Regardless of which method they use, they will conclude that the geometry is well approximated by a certain Riemannian metric, namely the Langevin-Landau-Lifschitz metric. This is in turn very well approximated by the geometry of the hyperbolic plane (with the negative curvatures -3 ω2 and -3 ω2 r2, respectively). But if these observers measure larger distances, they will obtain different results, depending upon which method of measurement they use! In all such cases, however, they will most likely obtain results which are inconsistent with any Riemannian metric. In particular, if they use the simplest notion of distance, radar distance, owing to various effects such as the asymmetry already noted, they will conclude that the [...] "geometry" [...] of the disk is not only non-Euclidean, it is non-Riemannian.|$|E
40|$|Abstract. We expect {{interfaces}} in programming languages {{to expose}} essential {{parts of the}} objects ’ internal synchronization as well as required <b>external</b> <b>synchronization.</b> Clients need this information to provide required and avoid conflicting synchronization. We propose a mixed static and dynamic token-based approach to uniformly specify internal and <b>external</b> <b>synchronization</b> in a simplified Java-like language. This concept gives us much flexibility on token management, ensures race-free programs without any need for complete aliasing information, and supports static type checking of synchronization using a rich notion of subtyping. ...|$|E
40|$|A novel {{architecture}} is proposed for future multi-terabit Internet Protocol routers, employing multiple cascaded stages of optical switching and buffering. <b>External</b> <b>synchronization</b> is not required, and a voidfilling algorithm simplifies hardware requirements. Optical Architecture for Multi-Terabit IP Router...|$|E
30|$|Wide area {{protection}} and control functions shall be realized without depending on <b>external</b> time <b>synchronization</b> system to the greatest extent. In case time synchronization system is adopted, such as Big Dipper or GPS satellite time synchronization, Big Dipper system for time synchronization shall prevail. If allowed by conditions, the ground time synchronization system is recommended.|$|R
40|$|In {{this paper}} {{we present a}} wide area {{distributed}} sys-tem using a content-based publish/subscribe communi-cation middleware which can deterministically detect and report failures with respect to timely message deliv-ery. Our approach does not require external clock syn-chronization nor does it impose any constraints on the publish/subscribe middleware. We show that our sys-tem performs better and is safer than when using NTP for <b>external</b> clock <b>synchronization.</b> 1...|$|R
30|$|The {{wide area}} {{protection}} and control system of 220 kV and above levels takes regional stability control system as the main body. The stability control system is configured by layers and regions. The equipment configuration and installation location of master station, slave station, and execution station shall meet the requirements in the security and stability control of grids. If the existing regional security and stability control system requires without depending on <b>external</b> time <b>synchronization,</b> such requirements shall be followed.|$|R
40|$|International audienceIn this article, an {{internal}} and an <b>external</b> <b>synchronization</b> have been investigated, {{in the presence}} of uncertain parameters. The proposed controller is designed to synchronize the movement of robot group following the same desired trajectory. To this effect, using a consensus algorithm, we provide an adaptive control under two different schemes. In the mutual synchronization topology, robots network requires only local neighbor-to- neighbor information exchange between robots. The interaction topology of agents network is represented using an undirected graph. However the objective of the <b>external</b> <b>synchronization</b> coordinated scheme is to design interconnections and feedback controllers for slaves, such that their positions and velocities synchronize to those of the leader robot. It's assumed that robots in cooperation or in coordination have the same joints number and equivalent joint work spaces...|$|E
40|$|Abstract: The paper {{presents}} {{experimental results}} on <b>external</b> <b>synchronization</b> for under-way replenishment of ships through a back-to-back comparison between experimental results and ideal simulations. The experiments illustrate exponential convergence of the closed-loop errors for position keeping, and uniform ultimate boundedness of the closed-loop errors during trajectory tracking. Copyright © 2004 IFA...|$|E
30|$|Finally, {{we would}} like to see if trace {{synchronization}} can be directly achieved by matching regular message exchanges, without requiring an <b>external</b> <b>synchronization</b> process that adds time-consuming messages exchanges, just like we can synchronize traces by looking at existing TCP exchanges. Although this approach would lose its generality, the overall performance would be slightly improved.|$|E
30|$|The {{substation}} area {{protection and control}} device acquires sampling values via network switch. In order to ensure data synchronization, some functions depend on <b>external</b> clock <b>synchronization.</b> IRIG-B code is generally adopted for time synchronization, and IEEE 1588 mode may also be adopted. When the time synchronization system in the substation loses big dipper or GPS satellite signal, its master clock shall have time keeping function, and the precision of time can {{meet the requirements of}} relevant protection and control functions [9].|$|R
40|$|The present paper {{presents}} a methodology to identify regularities in motion trajectories and encode {{them into a}} reduced order model. The model has been developed for being trained with real data captured during the execution of complex and articulated motions, having several phases each. The presented model possesses relevant features that make it adequate for motion representation, among these we will discuss: stability, generalization, optimization, adaptation and <b>external</b> dynamic <b>synchronization.</b> Practical examples taken from ball throwing and catching will be given. 1...|$|R
40|$|Abstract. This paper? {{provides}} {{a description of}} our Network Time Interface M-Module (NTI) supporting high-accuracy <b>external</b> clock <b>synchronization</b> by hardware. The NTI is built around our custom Universal Time Coordinated Synchronization Unit VLSI chip (UTCSU-ASIC), which contains most of the hardware support required for interval-based clock synchronization: A state and rate adjustable clock device with a high resolution, automatically maintained accuracy intervals, interfaces to GPS receivers, and various timestamping features. Designed for maximum network controller and CPU independence, our NTI {{provides a}} turn-key solution for adding synchronized clocks to distributed real-time systems built upon hardware with M-Module interfaces. ...|$|R
40|$|We {{consider}} sub-Poissonian single-mode laser with <b>external</b> <b>synchronization</b> {{and analyze}} its applicability {{to the problems}} of quantum information. Using Heisenberg-Langevin theory we calculate the quadrature variances of the field emitted by this laser. It is shown that such systems can demonstrate strong quadrature squeezing. Taking into account that the emitted field is temporally multi-mode the application of such sources to multichannel quantum teleportation and dense coding protocols is discussed. Comment: 14 pages, 7 figure...|$|E
40|$|Electromagnetic wave {{generation}} {{processes in}} the hybrid log-periodic microstripe antenna on the dielectric substrate integrated with field-effect transistor are experimentally studied in the frequency range of 6 ? 20 GHz. The possibility of synchronization and power combining in the array consisting of antenna-coupled oscillators placed on the common dielectric substrate is investigated. It is shown that the considerable increasing the generation efficiency and power combining {{can be obtained by}} using the <b>external</b> <b>synchronization</b> signal or quasi-optical design of the array...|$|E
40|$|The paper {{presents}} {{experimental results}} on rendezvous control of ships using synchronization techniques. In particular, recent results on <b>external</b> <b>synchronization</b> for underway replenishment of ships are verified through a back-to-back comparison between experimental results and ideal simulations. The experiments illustrate that the synchronization controller yields exponential convergence of the closed-loop errors for position keeping, and uniform ultimate boundedness of the closed-loop errors during trajectory tracking. The gain tuning process is motivated, {{and the effects}} of measurement noise and environmental disturbances on the control scheme performance are discussed...|$|E
40|$|Abstract: A {{key issue}} in one-way delay {{measurement}} is {{the removal of}} relative clock offset in the situation of without <b>external</b> clock <b>synchronization</b> mechanisms for the end-to-end hosts. Most researches {{are based on the}} assumption that the clock skew retains constant and without clock adjustments and drifts during measurement. But in fact, it is found that end system clock might be subject to gradual or instantaneous clock adjustments and frequency adjustments in operation. In this paper, with the time series segmentation technology, we discuss the detection of clock dynamics in one-way delay measurement. Two algorithms are proposed to estimate the relativ...|$|R
40|$|This paper {{provides}} {{a description of}} our Network Time Interface M-Module (NTI) supporting high-accuracy <b>external</b> clock <b>synchronization</b> by hardware. The NTI is built around our custom Universal Time Coordinated Synchronization Unit VLSI chip (UTCSU-ASIC), which contains most of the hardware support required for interval-based clock synchronization: A state and rate adjustable clock device with a high resolution, automatically maintained accuracy intervals, interfaces to GPS receivers, and various timestamping features. Designed for maximum network controller and CPU independence, our NTI {{provides a}} turn-key solution for adding synchronized clocks to distributed real-time systems built upon hardware with M-Module interfaces...|$|R
40|$|This article {{presents}} a novel network interface hardware architecture, which enables clock synchronization in fault-tolerant distributed real-time systems with sub-srange accuracy. The proposed mechanism, which is applicable for any packet-oriented data network, inserts time information into data packets at {{the interface between}} the physical layer transceiver and the network controller upon packet transmission and receipt respectively. Local time is supplied by a high-resolution rate-adjustable adder-based clock, which also contains hardware support easing intervalbased <b>external</b> clock <b>synchronization,</b> like maintaining time and accuracy intervals and interfaces to GPS receivers. Keywords [...] - Clock synchronization, distributed systems, network interface, GPS. I...|$|R
40|$|AbstractProtocol testing {{leads to}} the {{synchronization}} problem should test sequences be applied to multiple distanced testers, namely under the multiparty configuration. This paper presents a novel synchronization paradigm which seamlessly unifies two synchronization techniques, self-synchroniable sequences and <b>external</b> <b>synchronization</b> operations, {{by means of the}} state expansion transformation. In the paradigm, the protocol specification is first transformed into a state expansion digraph with two pieces of datum augmented. They are: 1. (a) a zero cost assigned to each synchronization-problem-free crossing from one transition to another transition, and 2. (b) a weighted cost assigned to each <b>external</b> <b>synchronization</b> operation whenever the synchronization is deemed necessary. On the basis of the state expansion transformation, synchronizable, optimal sequences for testing can be efficiently derived. To demonstrate the viability of the proposed paradigm, we present the generations of two synchronizable sequences, namely the synchronizable preamble and the synchronizable distinguishing sequence, which have previously been used for the testing of the correctness of a protocol's transition. The paper also shows that the complexities of the two sequences generations are also polynomial-bounded, i. e., O((np 2) log(np)) and O((n 2 p 2) log(np)), respectively, where n and p are the numbers of states and input symbols of the protocol specification...|$|E
40|$|A novel {{architecture}} is proposed for future multi-terabit IP (internet protocol) routers, employing multiple cascaded stages of optical switching and buffering. WDM is used within the node to facilitate its operation. <b>External</b> <b>synchronization</b> is not required, and a void-filling algorithm {{is used to}} simplify hardware requirements. Packet priorities are not implemented in {{the current version of}} the switch, and the issue of header table lookup is not considered. Performance with respect to packet loss is studied by simulation, demonstrating that this multi-stage concept results in substantial hardware reduction...|$|E
40|$|Wide {{input voltage}} range from 4. 5 V to 36 V Low minimum on time of 50 ns typical Maximum load current of 1 A High {{efficiency}} {{of up to}} 94 % Adjustable output down to 0. 6 V ± 1 % output voltage accuracy Adjustable switching frequency from 300 kHz to 1 MHz <b>External</b> <b>synchronization</b> from 300 kHz to 1 MHz Pulse skip mode or forced fixed frequency mode Precision enable input pin (EN) Open-drain power good Internal soft start Overcurrent-limit protection Shutdown current of less than 15 µA UVLO and thermal shutdow...|$|E
40|$|Ths paper {{provides}} an overview of the results of a con-tinuous, 2 -month experimental evaluation of all tim-ing data provided by several GPS receivers. The pri-mary purpose of this experiment was to provide mea-surement data facilitating fault modeling in our project SynUTC’, which aims at <b>external</b> clock <b>synchronization</b> in fault-tolerant distributed real-time systems. As ex-pected, the GPS receivers under test exhibited a wide variety of failures, ranging from transient omissions up to considerable deviations of the timing signals pro-vided. Whereas those findings justify the appropriate-ness of our basic failure assumptions, it became never-theless apparent that rerunning the experiment for a longer duration and with new brands/models of GPS receivers is advisabl...|$|R
40|$|Clock {{synchronization}} is {{an extremely}} important requirement of wireless sensor networks(WSNs). There are many application scenarios such as weather monitoring and forecasting etc. where <b>external</b> clock <b>synchronization</b> may be required because WSN itself may consists of components which are not connected to each other. A usual approach for <b>external</b> clock <b>synchronization</b> in WSNs is to synchronize the clock of a reference node with an external source such as UTC, and the remaining nodes synchronize with the reference node using an internal clock synchronization protocol. In order to provide highly accurate time, both the offset and the drift rate of each clock with respect to reference node are estimated from time to time, and these are used for getting correct time from local clock reading. A problem with {{this approach is that}} it is difficult to estimate the offset of a clock with respect to the reference node when drift rate of clocks varies over a period of time. In this paper, we first propose a novel internal clock synchronization protocol based on weighted averaging technique, which synchronizes all the clocks of a WSN to a reference node periodically. We call this protocol weighted average based internal clock synchronization(WICS) protocol. Based on this protocol, we then propose our weighted average based external clock synchronization(WECS) protocol. We have analyzed the proposed protocols for maximum synchronization error and shown that it is always upper bounded. Extensive simulation studies of the proposed protocols have been carried out using Castalia simulator. Simulation results validate our theoretical claim that the maximum synchronization error is always upper bounded and also show that the proposed protocols perform better in comparison to other protocols in terms of synchronization accuracy. A prototype implementation of the proposed internal clock synchronization protocol using a few TelosB motes also validates our claim...|$|R
40|$|Wireless Sensor Networks (WSNs) {{consist of}} a large number of {{resource}} constrained sensor nodes equipped with various sensing devices which can monitor events in the real world. There are various applications such as environmental monitoring, target tracking forest fire detection, etc., which require clock synchronization among the sensor nodes with certain accuracy. However, a major constraint in the design of clock synchronization protocols in WSNs is that sensor nodes of WSNs have limited energy and computing resources. Clock synchronization process in the WSNs is carried out at each sensor node either synchronously, i. e., periodically during the same real-time interval, which we call synchronization phase, or asynchronously, i. e., independently without worrying about what other nodes are doing for clock synchronization. A disadvantage of asynchronous clock synchronization protocols is that they require the sensor nodes to remain awake all the time. Therefore, they cannot be integrated with any sleep-wakeup scheduling scheme of sensor nodes, which is a major technique to reduce energy consumption in WSNs. On the other hand, synchronous clock synchronization protocols can be easily integrated with the synchronous sleep-wakeup scheduling scheme of sensor nodes, and at the same time, they can provide support to achieve sleep-wakeup scheduling of sensor nodes. Essentially, there are two ways to synchronize the clocks of a WSN, viz. internal clock <b>synchronization</b> and <b>external</b> clock <b>synchronization.</b> The existing approaches to internal clock synchronization in WSNs are mostly hop-by-hop in nature, which is difficult to maintain. There are also many application scenarios where <b>external</b> clock <b>synchronization</b> is the only option to synchronize the clocks of a WSN. Besides, it is also desired that the internal clock synchronization protocol used is fault-tolerant to message loss and node failures. Moreover, when the external source fails or reference node fails, the <b>external</b> clock <b>synchronization</b> protocol should revert back to internal clock synchronization protocol with/without using any reference node. Towards this goal, first we propose three fully distributed synchronous clock synchronization protocols, called Energy Efficient and Fault-tolerant Clock Synchronization (EFCS) protocol, Weighted Average Based Internal Clock Synchronization (WICS) protocol, and Weighted Average Based <b>External</b> Clock <b>Synchronization</b> (WECS) protocol, for WSNs making use of peer-to-peer approach. These three protocols are dynamically interchangeable depending upon the availability of external source or reference nodes. In order to ensure consistency of the synchronization error in the long run, the neighboring nodes need to be synchronized with each other at about the same real time, which requires that the synchronization phases of the neighboring nodes always overlap with each other. To realize this objective, we propose a novel technique of pullback, which ensures that the synchronization phases of the neighboring nodes always overlap. In order to further improve the synchronization accuracy of the EFCS, WICS, and WECS protocol, we have proposed a generic technique which can be applied to any of these protocols, and the improved protocols are referred as IEFCS, IWICS, and IWECS respectively. We then give an argument to show that the synchronization error in the improved protocols is much less than that in the original protocols. We have analyzed these protocols for bounds on synchronization error, and shown that the synchronization error is always upper bounded. We have evaluated the performance of these protocols through simulation and experimental studies, and shown that the synchronization accuracy achieved by these protocols is of the order of a few clock ticks even in very large networks. The proposed protocols make use of estimated drift rate to provide logical time from the physical clock value at any instant and at the same time ensure the monotonicity of logical time even though physical clock is updated at the end of each synchronization phase. We have also proposed an energy aware routing protocol with sleep scheduling, which can be integrated with the proposed clock synchronization protocols to reduce energy consumption in WSNs further...|$|R
