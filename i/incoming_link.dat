41|210|Public
50|$|Some {{other words}} for {{backlink}} are <b>incoming</b> <b>link,</b> inbound link, inlink, inward link, and citation.|$|E
50|$|A Refback {{is simply}} the usage of the HTTP {{referrer}} header to discover incoming links. Whenever a browser traverses an <b>incoming</b> <b>link</b> from Site A (originator) to Site B (receptor) the browser will send a referrer value indicating the URL from where the user came. Site B might publish a link to Site A after visiting Site A and extracting relevant information from Site A such as the title, meta information, the link text, and so on.|$|E
40|$|Abstract — Grouping Website News on Similarity link using Page-rank Algorithm is {{classifying}} data {{based on}} similarity. With this grouping, user can easily know which website {{that contains a}} lot of news from a website news. Page-rank algorithm is an algorithm that are rarely used in data mining. Page-rank will find where the links come from. First, Page-rank algorithm will search <b>incoming</b> <b>link</b> each news article then the <b>incoming</b> <b>link</b> will stored in array. After that <b>incoming</b> <b>link</b> will be group by similarity. So, links that are already grouped will produce a recommendation. Final results of this grouping process is a recommendation for the reader. The reader can know any links that has a high degree of similarity links which linking in on the each article link...|$|E
30|$|Number of {{citations}} (<b>incoming</b> <b>links).</b>|$|R
50|$|Johnson often redirects <b>incoming</b> <b>links</b> from sites {{critical}} of LGF to the Israel Defense Forces homepage.|$|R
5000|$|Technorati has an {{authority}} rating based on <b>incoming</b> <b>links</b> to blogs {{that it has}} found in its Blogosphere ...|$|R
40|$|We study a {{group of}} mobile agents {{operating}} on an arbitrary unknown distributed system. One of the nodes of the distributed system is extremely harmful and destroys any incoming agent without notification. The task of exploring the distributed system and locating the harmful node, Black hole search, has been studied with various modifications. We are studying {{the effects of the}} knowledge of <b>incoming</b> <b>link</b> {{on the size of the}} optimal solution. When an agent enters a node, the information which port leads back can be given to it. We refer to this as to the knowledge of <b>incoming</b> <b>link.</b> In previous research, it was always assumed that the agent is given this information. In this paper we study arbitrary, unknown distributed systems without the knowledge of <b>incoming</b> <b>link.</b> Agents are asynchronous and they com-municate via whiteboards. We present a lower bound on the size of the optimal solution, proving that at least ∆ 2 +∆ 2 + 1 agents are necessary to locate the black hole. We provide an algorithm for black hole search with-out the knowledge of <b>incoming</b> <b>link</b> as well. We prove that this algorithm is correct, and that it uses...|$|E
40|$|Abstract. In this paper, {{we study}} the {{correlation}} between <b>incoming</b> <b>link</b> of users on Twitter, a micro-blogging website online social. Finding the influential user can apply to recommend users to follow their interest’s businesses domain. To analyze and find characteristic of the influential users for applying to improve the performance of recommender system. We use user’s Twitter posts from any solution into predefined business types. In this paper, we propose solution to applied user selection by comparing among three parameters: (1) the number of relevant posts (NumRP) (2) the number of <b>incoming</b> <b>link</b> from business follower (NumUFI) (3) the number of <b>incoming</b> <b>link</b> from every follower (NumTI). Each parameter is ranked and incremental organized into three groups of each parameter: (1) Top- 100 (2) Top- 200 and (3) Top- 300. After that, we applied posts of selected users to build classification model. Comparison between among three user selection parameters and three user groups. From the experimental results, the performance of NumRP yielded the F-measure higher than NumUFI and NumTI respectively. In addition, users who organized into Top- 100 user group of each user selection method are influential users...|$|E
30|$|The {{self-interference}} problem {{arises in}} wireless networks when a node transmits and receives simultaneously {{in the same}} frequency band. The main reason for this problem is the huge imbalance between the transmitted signal power and the received signal power of nodes. Typically, the transmitted signal strength is few order of magnitude larger than the received signal strength. Thus, when a node transmits and receives simultaneously in the same channel, the useful signal at the receiver of the <b>incoming</b> <b>link</b> is overwhelmed by the transmitted signal of the node itself. As a result, the signal-to-interference-and-noise-ratio (SINR) values at the <b>incoming</b> <b>link</b> of a node that simultaneously transmits in the same channel is very small. Therefore, the self-interference problem plays {{a central role in}} link scheduling and rate/power control in wireless networks.|$|E
40|$|This paper {{investigates the}} {{properties}} of central or core political blogs. They can be located as clusters of blogs whose members have many <b>incoming</b> <b>links.</b> Other blogs form clouds around them {{in the sense that}} they link the core blogs. A case study records Greek political blogs and their <b>incoming</b> <b>links</b> reported through their blogrolls. The adjacency matrix from the blogs’ social network is analyzed and clusters are located. Three of them, those with the larger numbers of <b>incoming</b> <b>links,</b> may be considered to be central. Next, four measures of influence are used to test the influence of the central blogs. The findings suggest that there are many kinds of central blogs, influential and non-influential, and high influence does not always involve high hyperlinking...|$|R
50|$|In early incarnations, when Google's {{algorithm}} {{relied on}} <b>incoming</b> <b>links</b> {{as an indicator}} of website success, Black Hat SEOs manipulated website rankings by creating link-building schemes, such as building subsidiary websites to send links to a primary website. With an abundance of <b>incoming</b> <b>links,</b> the prime website outranked many reputable sites. However, the conflicts of being devalued by major search engines while building links could be caused by web owners using other black hat strategies. Black hat link building refers explicitly to the process of acquiring as many links as possible with minimal effort.|$|R
50|$|A network can be {{constructed}} of nodes representing authors and links indicating references to published papers. Outgoing links indicate who the author cited and <b>incoming</b> <b>links</b> indicate who cited the author.|$|R
3000|$|The {{second set}} of 3 D topologies is 3 D Yao and reverse Yao graph (YYG), a {{directed}} graph, which guarantees that both node in-degree and node out-degree are at most k. The basic idea is to apply reverse 3 D Yao structure on YG to bound the node in-degree. Node u chooses a node v from each 3 D cone, if there is any, so the <b>incoming</b> <b>link</b> [...]...|$|E
30|$|In this case, the {{production}} {{responsibilities of the}} unreliable nodes 2 and 3 are reduced, and the more reliable Nodes 4 and 6 ’s responsibilities are increased. Node 1, which is the assembler node, preserves its <b>incoming</b> <b>link</b> degree of 3; however {{the total number of}} links in the network has increased from 10 to 12. The overall product distribution is more even than the initial solution, which is facilitated by additional linkages between plants.|$|E
40|$|This work {{considers}} {{the problem of}} prioritizing the inbound TCP traffic of an organization network. The objective is to allocate dynamically a specific share of the <b>incoming</b> <b>link</b> bandwidth to a high priority inbound TCP traffic. However, if the high priority TCP traffic does not fully use its dedicated share, the low priority TCP traffic may {{take advantage of the}} unused bandwidth. Up to today, a network administrator has no control over the inbound traffic if the Internet Service Provider does not offer some QoS mechanism. Three different techniques [...] ...|$|E
40|$|In this paper, we {{consider}} the problem of community detection in directed networks by using probabilistic models. Most existing probabilistic models for community detection are either symmetric in which <b>incoming</b> <b>links</b> and outgoing links are treated equally or conditional in which only one type (i. e., either incoming or outgoing) of links is modeled. We present a probabilistic model for directed network community detection that aims to model both <b>incoming</b> <b>links</b> and outgoing links simultaneously and differentially. In particular, we introduce latent variables node productivity and node popularity to explicitly capture outgoing <b>links</b> and <b>incoming</b> <b>links,</b> respectively. We demonstrate the generality of the proposed framework by showing that both symmetric models and conditional models for community detection {{can be derived from}} the proposed framework as special cases, leading to better understanding of the existing models. We derive efficient EM algorithms for computing the maximum likelihood solutions to the proposed models. Extensive empirical studies verify the effectiveness of the new models as well as the insights obtained from the unified framework...|$|R
3000|$|... (n)={l∈E|n=r(l)} be {{the sets}} of {{outgoing}} and <b>incoming</b> <b>links</b> of node n, respectively. Let Γ be {{the set of}} all source and destination pairs in the network. In other words, (s,d)∈Γ denotes a unicast session.|$|R
5000|$|... ==Other activities== Although {{not well}} known outside of China, Xu is popular domestically: in mid-2006, her Chinese-{{language}} blog had the most <b>incoming</b> <b>links</b> of any blog in any language on the Internet, according to blog search engine Technorati.|$|R
40|$|Abstract: Active network {{tomography}} {{includes several}} interesting statistical inverse problems {{that arise in}} the context of computer and communication networks. The primary goal in these problems is to recover link-level information about quality-of-service parameters from aggregate end-to-end data measured on paths across the network. The estimation and monitoring of these parameters are of considerable interest to network engineers and Internet service providers. This paper provides a review of the inverse problems and recent research on inference for loss rates and delay distributions. Some new results on parametric inference for delay distributions are developed. The results are illustrated using a network application related to Internet telephony. 1. The Inverse Problems Consider a tree T = {V, E} with a set of nodes V and a set of links or edges E. Figure 1 shows two examples: a simple two-layer symmetric binary tree on the left and a more general four-layer tree on the right. Each member of E is a directed link numbered after the node at its terminus. V includes a root node 0, a set of receiver or destination nodes R and a set of internal nodes I. All transmissions on the tree are initiated at the root node. The internal nodes have a single <b>incoming</b> <b>link</b> and at least two outgoing links (children). The receiver nodes have a single <b>incoming</b> <b>link</b> but n...|$|E
40|$|Abstract: The {{analysis}} of computer and communication networks {{gives rise to}} some interesting inverse problems. This paper is concerned with active network tomography where {{the goal is to}} recover information about quality-of-service (QoS) parameters at the link level from aggregate data measured on end-toend network paths. The estimation and monitoring of QoS parameters, such as loss rates and delays, are of considerable interest to network engineers and Internet service providers. The paper provides a review of the inverse problems and recent research on inference for loss rates and delay distributions. Some new results on parametric inference for delay distributions are also developed. In addition, a real application on Internet telephony is discussed. 1. The inverse problems Consider a topology with a tree structure defined as follows: T = {V, E} has a set of nodes V and a set of links or edges E. Figure 1 shows two examples, a simple two-layer symmetric binary tree on the left and a more general four-layer tree on the right. Each member of E is a directed link numbered after the node at its terminus. V includes a (single) root node 0, a set of receiver or destination nodes R, and a set of internal nodes I. The internal nodes have a single <b>incoming</b> <b>link</b> and at least two outgoing links (children). The receiver nodes have a single <b>incoming</b> <b>link</b> but no children. For the tree on the right panel of Figure 1, R...|$|E
40|$|A rate {{adaptation}} buffer {{is used in}} communications networks at the interface between two consecutive links, when {{the speed of the}} <b>incoming</b> <b>link</b> exceeds the speed of the outgoing link, in order to avoid excessive cell loss. In this paper we examine the performance of such a buffer in the case that the ratio between the input rate and the output rate takes an integer value, {{as well as in the}} more general case that this ratio takes any rational value greater than one (which allows among other things an evaluation of our results in case of a small mismatch between input and output rates) ...|$|E
25|$|Taking {{distances}} from or {{to all other}} nodes is irrelevant in undirected graphs, whereas it can produce totally different results in directed graphs (e.g. a website can have a high closeness centrality from outgoing link, but low closeness centrality from <b>incoming</b> <b>links).</b>|$|R
50|$|How often Googlebot will crawl a site {{depends on}} the crawl budget. Crawl budget is an {{estimation}} of how often a website is updated. A site's crawl budget is determined by how many <b>incoming</b> <b>links</b> it has and how frequent the site is updated.|$|R
3000|$|... (when no {{self-interference}} cancelation {{technique is}} employed). Thus, the SINR values at the <b>incoming</b> <b>links</b> of a node that simultaneously transmits {{in the same}} channel are very small and the convergence of Algorithm 2 becomes very slow if it starts with an initial SINR guess [...]...|$|R
30|$|In this paper, the MapReduce {{implementation}} of the PageRank algorithm proposed in [16] is modified as shown in Algorithm 2. The inputs of the map function are the page id p as the key, and its linkage set N_p and ranking score R_p as the value. The map function divides the rank of page among its links evenly, and emits records with the id l and rank contribution R_l for each link. The reduce function accumulates the rank contributions of each <b>incoming</b> <b>link</b> to the page, and emits records with the page id and its updated ranking score. The updated ranking score and the linkage set of each page are then passed as input to the next iteration.|$|E
40|$|Modern {{parallel}} {{and distributed}} applications {{have a wide}} range of communication characteristics and performance requirements. This paper presents the Programmable Routing Controller (PRC), a custom ASIC that supports flexible network policies to accommodate diverse application requirements. By dedicating a small programmable processor to each <b>incoming</b> <b>link,</b> the PRC can implement wormhole, virtual cut-through, and packet switching, as well as hybrid schemes, under a variety of unicast and multicast routing algorithms. The PRC can support several applications or traffic types simultaneously by implementing multiple routing-switching microcode routines. 1 Introduction In parallel and distributed systems, efficient communication enables fine-grained cooperation between processing nodes. Maximizing system performance requires matching application characteristics with a suitable network design. However, applications employ a wide variety of communication paradigms that affect the quantity [...] ...|$|E
40|$|We {{consider}} {{the problem of}} prioritizing the incoming TCP traffic on a link. The objective is to allocate dynamically a specific share of the <b>incoming</b> <b>link</b> bandwidth to a high priority TCP traffic. However, if the high priority TCP traffic does not fully use this dedicated share, the low priority TCP traffic may {{take advantage of the}} unused bandwidth. Up to today, a network administrator has no control on the incoming traffic if the network service does not provide some QoS mechanisms. In this report, we describe three techniques that would allow a network administrator to priori-tize and allocate dynamically the bandwidth without any cooperation from the human, software, or hardware resources of the Internet Service Provider (ISP). No change in the TCP code is required. ...|$|E
50|$|Search Link Optimization (SLO) is {{a process}} by which {{internal}} and external <b>incoming</b> <b>links</b> are optimized for search engine algorithms to determine the relevance of web page content. Relevant anchor text integration, text that contains keywords for optimizing a web page, is key to this process.|$|R
50|$|Scrapers {{tend to be}} {{associated}} with link farms and are sometimes perceived as the same thing, when multiple scrapers link to the same target site. A frequent target victim site might be accused of link-farm participation, due to the artificial pattern of <b>incoming</b> <b>links</b> to a victim website, linked from multiple scraper sites.|$|R
40|$|The {{steady-state}} throughput {{of general}} network coding node is investigated, when data is transmitted in packets {{based on the}} stop-and-wait automatic repeat request (SW-ARQ) error-control scheme. The general network coding node has H number of <b>incoming</b> <b>links</b> that provide packets for forming the coded packets transmitted by one outgoing link. Each of the <b>incoming</b> and outgoing <b>links</b> is assumed to have some buffers for storing the temporary data packets. The state transition of the general network coding node is modelled by a finite state machine, and its steady-state throughput is derived based on the properties of discrete-time Markov chain. Furthermore, the throughput performance of the general network coding node is investigated either by simulations or by evaluation of the expressions derived in this paper. Our performance {{results show that the}} analytical expressions obtained can be well justified by the simulation results. Furthermore, it can be shown that the packet error rate, the amount of buffer and the number of <b>incoming</b> <b>links</b> may impose significant impact on the achievable throughput of the general network coding nodes...|$|R
3000|$|... of 21.60 s. Every {{intersection}} has {{a traffic}} light with a green time of 25 s for each phase. Each phase corresponds {{to a set of}} allowed movements. In the 6 × 6 grid network, there are two phases at each intersection, i.e., one for each <b>incoming</b> <b>link.</b> The picture on the right in Figure 3 illustrates the two phases of an intersection. In the movement model implemented in SUMOa (see Section ‘Simulation’), traffic lights are necessary in order to allow vehicles from all directions to cross an intersection. Otherwise, one direction is prioritized by the simulator and the vehicles on other directions {{have to wait until the}} intersection gets empty to cross it. This effect could generate misleading results of our reinforcement learning approach for road pricing.|$|E
40|$|Abstract—In this paper, we {{introduce}} {{the concept of}} Independent Directed Acyclic Graphs (IDAGs) to achieve resilient multipath routing. Link-independent (Node-independent) DAGs satisfy the property that any path from a source to the root on one DAG is link-disjoint (node-disjoint) with any path from the source to the root on the other DAG. Given a network, we develop polynomial time algorithms to compute link-independent and node-independent DAGs. The algorithm developed in this paper: (1) achieves multipath routing; (2) guarantees recovery from single link failure; (3) utilizes all possible edges; and (4) achieves all these with at most one bit per packet as overhead when routing is based on destination address and <b>incoming</b> <b>link.</b> We demonstrate {{the effectiveness of the}} proposed IDAGs approach by comparing key performance indices to that of the independent trees technique. I...|$|E
40|$|Abstract. Previous work in {{hypertext}} classification {{has resulted}} in two principal approaches for incorporating information about the graph properties of the Web into the training of a classifier. The first approach uses the complete text of the neighboring pages, whereas the second approach uses only their class labels. In this paper, we argue that both approaches are unsatisfactory: the first one brings in too much irrelevant information, while the second approach is too coarse by abstracting the entire page into a single class label. We argue that one needs to focus on relevant parts of predecessor pages, namely on {{the region in the}} neighborhood of the origin of an <b>incoming</b> <b>link.</b> To this end, we will investigate different ways for extracting such features, and compare several different techniques for using them in a text classifier. ...|$|E
30|$|PageRank [8, 33] is an {{iterative}} algorithm that calculates {{the ranking}} score for web pages. It iteratively calculates {{the rank of}} each web page p based on the rank of its <b>incoming</b> <b>links</b> (the set of pages that points to p). The algorithm stops when the termination condition is met (e.g., a specified number of iterations is performed).|$|R
40|$|One {{aspect of}} {{research}} in the area of bootstrapping of cold start users in trust-aware recommender systems is on guiding new users find trusted users in the trust network. In this paper we examine the question “Which type of users do cold start users actually trust? ” We analyze the users trusted by cold start users in the Epinions dataset (Massa & Avesani, 2006 a). We examine the set of trusted users on the basis of four critical parameters: number of outgoing <b>links,</b> number of <b>incoming</b> <b>links,</b> number of items rated and a hybrid parameter defined as preference score. We also experimentally evaluate the impact of the four parameters on prediction accuracy. Our analysis shows that cold start users will more likely trust a user with higher number of <b>incoming</b> <b>links</b> as a trusted user even though trusting users with high preference score would result in better prediction accuracy...|$|R
3000|$|... in YG has the {{smallest}} length among all <b>incoming</b> <b>links</b> from YG in that cone {{as shown in}} Figure 3 c. Similar idea {{has been used for}} 2 D networks by [16, 19, 57]. Algorithm 3 shows the detailed algorithm. 3 D YYG can be built locally and efficiently with only 1 -hop neighbor information and linear number of messages.|$|R
