0|2584|Public
50|$|<b>Decoding</b> <b>Time</b> <b>Stamps</b> (DTS), additionally, are {{required}} because of B-frames. With B-frames {{in the video}} stream, adjacent frames have to be encoded and decoded out-of-order (re-ordered frames). DTS is quite similar to PTS, but instead of just handling sequential frames, it contains the proper time-stamps to tell the decoder when to decode and display the next B-frame (types of frames explained below), ahead of its anchor (P- or I-) frame. Without B-frames in the video, PTS and DTS values are identical.|$|R
50|$|It is {{therefore}} {{necessary for the}} player to first decode the next I- or P- anchor frame sequentially after the B-frame, before the B-frame can be decoded and displayed. This means decoding B-frames requires larger data buffers and causes an increased delay on both decoding and during encoding. This also necessitates the <b>decoding</b> <b>time</b> <b>stamps</b> (DTS) feature in the container/system stream (see above). As such, B-frames have long been subject of much controversy, they are often avoided in videos, and are sometimes not fully supported by hardware decoders.|$|R
40|$|International Telemetering Conference Proceedings / October 25 - 28, 1999 / Riviera Hotel and Convention Center, Las Vegas, NevadaThis paper {{describes}} the PTP EX, a 160 Mbps Telemetry and Command front-end system, which {{takes advantage of}} the state-of-the-art in networking and software technology, and the rapid development in PC components and FPGA design. Applications for the PTP EX include High-rate Remote Sensing Ground Stations, Satellite/Payload Integration and Testing, High-rate Bit Error Rate Test (BERT) System and High-rate Digital Recorder/Playback System. The PTP EX Interface Board, the MONARCH-EX PCI High Speed Frame Synchronizer/Telemetry Simulator with Reed-Solomon Encoder/Decoder, is designed with the following key capabilities: · 160 Mbps serial input for CCSDS Frame Processing (Frame Synchronization, Derandomization, CRC, Reed-Solomon <b>decoding,</b> <b>time</b> <b>stamping,</b> quality annotation, filtering, routing, and stripping); · 160 Mbps disk logging of Reed-Solomon corrected CCSDS frames with simultaneous real-time processing of spacecraft engineering data and ancillary payload data; · Onboard CCSDS Telemetry Simulation with 160 Mbps serial output (Sync Pattern, background pattern, ID counter, <b>time</b> <b>stamp,</b> CRC, Reed-Solomon encoding, Randomization, and Convolutional encoding); · Bit Error Rate Testing up to 160 Mbps (Pseudo-random transmitter and receiver with bit error counter). The innovative architecture of the MONARCH-EX allows for simultaneous logging of a high-rate data stream and real-time telemetry processing. The MONARCH-EX is also designed with the latest in field-programmable gate array (FPGA) technology. FPGAs allow the board to be reprogrammed quickly and easily to perform different functions. Thus, the same hardware can be used for both Telemetry processing and simulation, and BERT applications. The PTP EX also {{takes advantage of the}} latest advances in off-the-shelf PC computing and technology, including Windows NT, Pentium II, PCI, Gigabit Ethernet, and RAID subsystems. Avtec Systems, Inc. is leveraging the PTP EX {{to take advantage of the}} continuous improvement in high-end PC server components...|$|R
40|$|DE 10308138 A UPAB: 20040813 NOVELTY - A central studio clock outputs a <b>time</b> <b>stamp</b> (TC) during image recording, and the <b>time</b> <b>stamp</b> {{is applied}} in each {{picture of the}} {{individual}} video sequences at the transmitter side. The video sequences are encoded and grouped, and elementary streams are divided by a transport stream multiplexer. A presentation <b>time</b> <b>stamp</b> is formed from the system clock, the <b>decoding</b> delay <b>time</b> and the image length. DETAILED DESCRIPTION - An INDEPENDENT CLAIM is included for a further method of synchronizing two or more MPEG- 2 encoded video sequences. USE - For digital multi-projection systems, such as in cinemas for film presentations or in large events or advertising, trade fairs etc. ADVANTAGE - Correct and reliable synchronization is possible for large amounts of transmitted data, even when the sequences are from different storage media or started at different times...|$|R
50|$|Vic Coin {{propose a}} {{solution}} that starts with a <b>time</b> <b>stamp</b> server. A <b>time</b> <b>stamp</b> server starts with taking a hash of a block of items to be <b>time</b> <b>stamped</b> and widely publishing the hash, such as in a newspaper or Usenet post. The <b>time</b> <b>stamp</b> provides assurance that the data in question must have existed at the time, {{in order to get}} into the hash. Each <b>time</b> <b>stamp</b> includes the previous <b>time</b> <b>stamp</b> in its hash, forming a chain, with each additional <b>time</b> <b>stamp</b> in forcing the ones before it.|$|R
40|$|Wireless sensor {{networks}} (WSNs) {{have emerged}} as an interesting and important research area {{in the last few}} years. As in all distributed systems, time synchronization {{plays a key role in}} wireless sensor networks. Time synchronization is realized by those messages that are time-stamped. But there are several delay times during transmission after <b>time</b> <b>stamping.</b> These delay <b>times</b> are uncertain and contribute directly to synchronization error. The uncertainties include encoding <b>time,</b> <b>decoding</b> <b>time,</b> propagation time, and system calls. In addition to the uncertainties, clock drift is also a main source of time synchronization error. In this thesis, we propose a time synchronization protocol and study the influence of clock drift and uncertainties on various time synchronization protocols. We compare and evaluate the performance of our proposed protocol to previous works with clock drift and various uncertainties. In addition, we study how those protocols can reduce or eliminate the effect of th...|$|R
40|$|The paper aims {{to analyze}} the {{importance}} of digital <b>time</b> <b>stamping</b> service and digital <b>time</b> <b>stamping</b> systems components, organization requirements for implementing digital <b>stamp</b> service system. <b>Time</b> <b>stamping</b> helps significantly increase the level of confidence currently required in a public-key infrastructure by {{making it possible to}} track timing of signing the documents. Therefore <b>time</b> <b>stamping</b> in many cases is becoming ultimate evidence resolving the status of documents. The paper describes following <b>Time</b> <b>stamping</b> System components - NMI and TSU interface, <b>Time</b> <b>stamping</b> unit (TSU), Archive, User interface, Control system, VPN router. The paper reflects findings from EC funded 6 th Framework project BALTICTIME (IST- 027751) ...|$|R
40|$|New {{software}} {{has been}} added to IOC core to maintain <b>time</b> <b>stamps.</b> The new software has the ability to maintain <b>time</b> <b>stamps</b> over all IOCs on a network. The {{purpose of this paper is}} to explain how EPICS will synchronize the <b>time</b> <b>stamps.</b> In addition, this paper will explain how to configure and use the new EPICS <b>time</b> <b>stamp</b> support software...|$|R
5000|$|At 03:14:08 UTC on Tuesday, 19 January 2038, 32-bit {{versions}} of the Unix <b>time</b> <b>stamp</b> will cease to work, as it will overflow the largest value that can be held in a signed 32-bit number (7FFFFFFF16 or 2,147,483,647). Before this moment, software using 32-bit <b>time</b> <b>stamps</b> will need to adopt a new convention for <b>time</b> <b>stamps,</b> and file formats using 32-bit <b>time</b> <b>stamps</b> {{will need to be}} changed to support larger <b>time</b> <b>stamps</b> or a different epoch. If unchanged, the next second will be incorrectly interpreted as 20:45:52 Friday 13 December 1901 UTC.|$|R
5000|$|... 1890: The Accurate <b>Time</b> <b>Stamp</b> Company (later {{renamed the}} Standard <b>Time</b> <b>Stamp</b> Company)- A Complete Automatic Time-Dating Stamp.|$|R
30|$|Since H-F and H-R 1 {{used both}} word and PM {{sequences}} as an input when trained the models, they used much longer training time than {{other types of}} RNNLMs. Their <b>decoding</b> <b>times</b> are also almost twice when compared with other models. H-R 2 which takes a single hybrid sequence of words and PMs as its input has the lowest training and <b>decoding</b> <b>time</b> among all RNNLM variations. When compared among three hybrid RNNLM variations, both the training and <b>decoding</b> <b>time</b> can be saved {{by more than half}} in H-R 2 without affecting recognition accuracy. When compared with the 4 -gram LM, which has about 6 min training time and 17 min <b>decoding</b> <b>time,</b> all RNNLMs have much longer training time but have faster <b>decoding</b> <b>time</b> while also achieve better recognition results. The 4 -gram LM has longer <b>decoding</b> <b>time</b> due to its larger vocabulary size.|$|R
5000|$|After {{receiving}} a request, pushing the request {{in its own}} request queue (ordered by <b>time</b> <b>stamps)</b> and reply with a <b>time</b> <b>stamp.</b>|$|R
40|$|Abstract- The <b>time</b> <b>stamp</b> {{service is}} a network time service {{providing}} <b>time</b> <b>stamp</b> to a specific byte sequence sent to a <b>time</b> <b>stamp</b> authority / appliance (TSA). The accuracy of the provided <b>time</b> <b>stamp</b> shall be specified by the TSA and should be calibrated. This paper discusses methods for calibration of TSA using a calibration computer and {{taking into account the}} impact of the network. The methods have been tested on an experimental TSA placed in different distances from the calibration computer and in different networks. I...|$|R
30|$|A uniform {{distribution}} was assumed {{for the demand}} release profile, i.e. RP 1. The total demand was uniformly spread over 60  min of the simulation period with a <b>time</b> <b>stamp</b> value of 5  min. For the first four <b>time</b> <b>stamps,</b> 9  % of the total volume was released, and in the remaining 8 <b>time</b> <b>stamps</b> 8  % were released.|$|R
40|$|<b>Time</b> <b>stamping</b> is a {{technique}} used to prove the existence of certain digital data prior to a specific point in time. With the recent development of electronic commerce, <b>time</b> <b>stamping</b> is now widely recognized as an important technique used to ensure the integrity of digital data {{for a long time}} period. Various <b>time</b> <b>stamping</b> schemes and services have been proposed...|$|R
30|$|Average <b>decoding</b> <b>times</b> {{generally}} {{increase with}} the size of a fuzzy vault. Hence, a fusion of the most discriminative parts of two iris-codes to one of the size of a single iris-code is preferable, in order to maintain reasonable <b>decoding</b> <b>times.</b>|$|R
50|$|Traditionally manual {{systems were}} used {{that rely on}} highly skilled people laboriously adding up paper cards which have <b>times</b> <b>stamped</b> onto them using a <b>time</b> <b>stamping</b> machine such as the Bundy Clock. <b>Time</b> <b>stamping</b> {{machines}} were used {{for over a century}} but have since been phased out and replaced with cheaper automated systems which eliminate the need for payroll staff to manually input employee hours.|$|R
40|$|Pattern Searching is more {{important}} task during the searching process in records or web or large amount data. In traditional searching operations the patterns are stored in an array and store <b>time</b> <b>stamp</b> anyway. We introduced new algorithm so called as temporal pattern search and it maintains same types in different events and <b>time</b> <b>stamps.</b> It performs binary search using appropriate <b>time</b> <b>stamps.</b> It highly and efficiently works in personal histories...|$|R
40|$|This report {{talks about}} a network protocol: <b>Time</b> <b>Stamp</b> Protocol (TSP). Time-stamping {{is a set of}} {{techniques}} enabling one to ascertain whether an electronic document was created or signed at a certain time. First the report introduces the concept of <b>Time</b> <b>Stamp</b> Protocol (TSP), <b>Time</b> <b>Stamp</b> Services(TSS), <b>Time</b> <b>Stamp</b> Authority (TSA). Then the report gives out a design and implementation of this protocol. Last the report give the testing result and conclusion. 1. Overview Time-stamping is a set of techniques enabling one to ascertain whether an electronic document was created or signed at (or before) a certain time. In practice, most of the time-stamping systems use a trusted third party called Time-Stamping Authority (TSA). <b>Time</b> <b>stamp</b> is a digital attestation of the TSA that an identified electronic document, has been presented to TSA at a certain time. [7...|$|R
40|$|This paper {{presents}} {{a new approach}} to <b>time</b> <b>stamp</b> messages in underwater acoustic communication. Message <b>time</b> <b>stamping</b> is a widely used method for synchronizing two clocks over a cabled or wireless communication, by exchanging time information in pilot messages. In this work we use a National Instruments Field-Programmable Gate Array (FPGA) for performing deterministic hardware <b>time</b> <b>stamp</b> of windowed acquired data, and then we apply a software detection of frame information inside this acquisition window. Frame <b>time</b> <b>stamp</b> in conjunction with global time reference enclosed in the message, provide enough information for achieving synchronization accuracy between two clocks below few microseconds. Peer ReviewedPostprint (published version...|$|R
40|$|<b>Time</b> <b>stamp</b> {{superimposed}} {{on the video}} frames {{can be used as}} indices for video indexing and retrieval systems. Some applications use it for speed detection of objects. In this paper, we propose a <b>time</b> <b>stamp</b> detection approach based on edge detection method. Furthermore, we apply temporal properties of video frames so that <b>time</b> <b>stamp</b> can be located quickly. We also propose our digit recognition module to test the performance. Experimental results show that our approach can detect <b>time</b> <b>stamp</b> location accurately. The proposed approach can discriminate between date and time, and it can extract time with sub-second of precision. The recognition rate is also high enough to be used practically. 1...|$|R
40|$|Abstract: Pattern Searching is more {{important}} task during the searching process in records or web or large amount data. In traditional searching operations the patterns are stored in an array and store <b>time</b> <b>stamp</b> anyway. We introduced new algorithm so called as temporal pattern search and it maintains same types in different events and <b>time</b> <b>stamps.</b> It performs binary search using appropriate <b>time</b> <b>stamps.</b> It highly and efficiently works in personal histories. I...|$|R
40|$|<b>Time</b> <b>stamps</b> in videos play an {{important}} role in video clustering and retrieval. For digital camcorders, <b>time</b> <b>stamp</b> is separately stored in the video stream using some specific bytes, thus it can be accessed easily. However, for analog camcorders, <b>time</b> <b>stamp</b> is superimposed on the video frame and mixed into the video data, thus we cannot extract it directly. Furthermore, extraction of <b>time</b> <b>stamp</b> in home videos is much harder than that of ordinary videotext due to the poor quality of the video. In this paper, we propose a robust and efficient <b>time</b> <b>stamp</b> detection and recognition system for analog home videos. To deal with the special difficulties, we propose two approaches, which can remarkably improve the overall system performance. The final outputs are shot boundaries with the corresponding time indices, which are detected and recognized by the proposed system. These results can be used as metadata for further video processing...|$|R
40|$|Abstract. In this {{document}} a new <b>time</b> <b>stamping</b> system with linear chaining is presented. It has the characteristic {{that there is}} a symmetric situation between the computation of the <b>time</b> <b>stamp</b> of a given document, and the control of its integrity. This is obtained through the use of of a new “baby step giant step ” algorithm that is introduced and applied. The equation for computing a <b>time</b> <b>stamp,</b> is a variable in the number of older timestamps used to compute the actual one. It is safer than the one used in other methods. It has also the characteristic that it establish a logarithmic link between any <b>time</b> <b>stamp</b> in the cycle and the last one that is characteristic of the cycle. The availability is very high as no intermediate computations are required. The algorithm is named LILO as an abbreviation for linear logarithmic. From its properties it follows that the data for checking a <b>time</b> <b>stamp</b> is logarithmic in volume and is independent of the position of the document in the cycle, whether it be for delivering a <b>time</b> <b>stamp</b> or checking the integrity of a <b>time</b> <b>stamp.</b> Another characteristic of the system is that it has a detection and time localization of attempts to modify timestamps. A generalization using arbitrary arithmetic bases of integers is sketched. ...|$|R
50|$|All {{commands}} are time-stamped, and tags {{store the}} first <b>time</b> <b>stamp</b> received after entering an interrogator. The stored <b>time</b> <b>stamp</b> defines precisely when the tag first entered the interrogator {{and provides a}} high-resolution method of determining tag order, which is decoupled from the speed of identification. Tag temporary settings, such as the <b>time</b> <b>stamp,</b> are stored in temporary random-access memory (TRAM) that retains data contents during power outages caused by switching of the powering field in orientation-insensitive interrogators.|$|R
40|$|In {{this paper}} we {{describe}} {{an approach to}} exploit temporal uncertainty in parallel and distributed simulation by utilizing time intervals rather than precise <b>time</b> <b>stamps.</b> Unlike previously published work that propose new message ordering semantics, our approach is based on conservative, <b>time</b> <b>stamp</b> order execution and enhancing the lookahead of the simulation by pre-drawing random numbers from a distribution that models temporal uncertainty. The advantages of this approach are that it allows time intervals to be exploited using a conventional <b>Time</b> <b>Stamp</b> Order (TSO) delivery mechanism, and it offers the modeler greater statistical control over the assigned <b>time</b> <b>stamps.</b> An implementation {{of this approach is}} described and initial performance measurements are presented. 1...|$|R
40|$|This paper {{presents}} a web-based architecture for providing digital <b>time</b> <b>stamping</b> services. <b>Time</b> <b>stamping</b> services are typically divided into schemes which rely on unconditionally trusted <b>Time</b> <b>Stamping</b> Authorities (TSAs) and schemes which do not, namely {{the so called}} linking schemes. The proposed architecture relies on a multi-tier structure. The middle-tier exposes digital <b>time</b> <b>stamping</b> functions behind a unified interface. The specific scheme implemented in the back-end (i. e. trusted TSA or linking scheme) is hidden to the clients. Services are made available via Web services technology. We discuss the main issues we had to address, and motivate our implementation choices. A prototype of the proposed architecture has been developed and used for conducting interoperability tests...|$|R
30|$|When Wireshark conducts {{capturing}} operation, a <b>time</b> <b>stamp</b> value will {{be drawn}} out from the libcap/WinPcap library. This <b>time</b> <b>stamp</b> is then stored together with the trace file so that the packet arrival time can be indicated when the file is opened.|$|R
5000|$|... {{where the}} {{difference}} TAI−UTC is in seconds. JDUTC can in turn be computed from any epoch-based <b>time</b> <b>stamp,</b> {{by adding the}} Julian date of the epoch to the <b>time</b> <b>stamp</b> in days. For example, if [...] is a Unix timestamp in seconds, then ...|$|R
40|$|Mining Frequent Patterns in {{transaction}} database TD {{has been}} studied extensively in data mining research. However, most of the existing frequent pattern mining algorithm does not consider the <b>time</b> <b>stamps</b> associated with the transactions. Temporal periodicity of pattern appearance {{can be regarded as}} an important criterion for measuring the interestingness of frequent patterns in several applications. In this paper, we extend the existing frequent pattern mining framework {{to take into account the}} <b>time</b> <b>stamp</b> as periodicity i. e., the <b>time</b> <b>stamp</b> fro...|$|R
40|$|In this paper, {{we present}} a method to predict per-frame <b>decoding</b> <b>times</b> of modern video decoder algorithms. By {{examining}} especially the MPEG- 1, MPEG- 2, and MPEG- 4 pt. 2 algorithms, we developed a generic model for these decoders, which also applies {{to a wide range}} of other decoders. From this model, we derived a method to predict <b>decoding</b> <b>times</b> with an up-to-now unmatched accuracy while keeping the overhead low. We show the effectiveness of this method with an example implementation and compare the resulting predictions with the actual <b>decoding</b> <b>times</b> using video material from commercial DVDs. 1...|$|R
3000|$|... b. <b>Time</b> <b>Stamp</b> Assignment: Nodes must <b>time</b> <b>stamp</b> the packets {{waiting to}} be sent over a certain channel; in case the {{destination}} channel is busy, the older packets must be discarded to avoid saturation. Therefore, {{it is possible to}} control the length of the buffers.|$|R
40|$|Theoretical {{analysis}} has long indicated that feedback improves the error exponent {{but not the}} capacity of single-user memoryless channels. Recently Polyanskiy et al. studied the benefit of variable-length feedback with termination (VLFT) codes in the non-asymptotic regime. In that work, achievability {{is based on an}} infinite length random code and decoding is attempted at every symbol. The coding rate backoff from capacity due to channel dispersion is greatly reduced with feedback, allowing capacity to be approached with surprisingly small expected latency. This paper is mainly concerned with VLFT codes based on finite-length codes and decoding attempts only at certain specified <b>decoding</b> <b>times.</b> The penalties of using a finite block-length N and a sequence of specified <b>decoding</b> <b>times</b> are studied. This paper shows that properly scaling N with the expected latency can achieve the same performance up to constant terms as with N = ∞. The penalty introduced by periodic <b>decoding</b> <b>times</b> is a linear term of the interval between <b>decoding</b> <b>times</b> and hence the performance approaches capacity as the expected latency grows if the interval between <b>decoding</b> <b>times</b> grows sub-linearly with the expected latency. Comment: 8 pages. A shorten version is submitted to ISIT 201...|$|R
50|$|A {{transport}} stream may contain multiple programs and each program may {{have its own}} time base. The time bases of different programs within a {{transport stream}} may be different. Because PTSs apply to the decoding of individual elementary streams, they reside in the PES packet layer of both the transport streams and program streams. End-to-end synchronization occurs when encoders save <b>time</b> <b>stamps</b> at capture <b>time,</b> when the <b>time</b> <b>stamps</b> propagate with associated coded data to decoders, and when decoders use those <b>time</b> <b>stamps</b> to schedule presentations.|$|R
5000|$|Complete, {{standards}} based, consistent, {{accurate and}} <b>time</b> <b>stamped.</b>|$|R
30|$|If {{there is}} no module that knows all the routes, the older packet is selected. This is {{possible}} since every packet introduced into the system is provided with a <b>time</b> <b>stamp</b> by its respective source. If the <b>time</b> <b>stamp</b> is identical, the system randomly selects one of the packets.|$|R
