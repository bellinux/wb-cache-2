10000|10000|Public
5|$|Never shall I <b>forget</b> that night, {{the first}} night in camp, which has turned my life into one long night, seven times cursed and seven times sealed. Never shall I <b>forget</b> that smoke. Never shall I <b>forget</b> the little faces of the children, whose bodies I saw turned into wreaths of smoke beneath a silent blue sky.|$|E
5|$|Never shall I <b>forget</b> that nocturnal silence which {{deprived}} me, for all eternity, of {{the desire}} to live. Never shall I <b>forget</b> those moments which murdered my God and my soul and turned my dreams to dust. Never shall I <b>forget</b> these things, even if I am condemned to live as long as God Himself. Never.|$|E
5|$|Credits {{adapted from}} Don't <b>Forget</b> liner notes.|$|E
40|$|Across 3 {{experiments}} {{we examined}} the interplay of part-list cuing and <b>forgetting,</b> employing 3 different methods to induce episodic <b>forgetting</b> { list-method directed <b>forgetting,</b> context-dependent <b>forgetting,</b> and proactive interference. For each form of <b>forgetting,</b> participants were asked at test to recall the target items of a previously studied list, in the presence or {{the absence of the}} list's remaining items serving as retrieval cues. We found such part-list cuing to amplify the <b>forgetting</b> in proactive interference but to diminish the <b>forgetting</b> in list-method directed <b>forgetting</b> and context-dependent <b>forgetting.</b> These results show that the effects of part-list cuing on <b>forgotten</b> memories depend critically on the circumstances surrounding the <b>forgetting.</b> If the <b>forgetting</b> reflects impaired access to the original encoding context, as has been suggested in list-method directed <b>forgetting</b> and context-dependent <b>forgetting</b> (but not in proactive interference), part-list cues improve access to <b>forgotten</b> memories; if the <b>forgetting</b> does not reflect such a contextual effect, no such beneficial effects emerge and access to <b>forgotten</b> memories may even be impaired...|$|R
2500|$|Ndzi rivele – I <b>Forgot,</b> U rivele – you <b>forgot,</b> Va rivele – they <b>forgot,</b> ...|$|R
40|$|We {{address the}} problem of term {{elimination}} in DL-Lite ontologies by adopting techniques from classical <b>forgetting</b> theory. Specifically, we generalize our previous results on <b>forgetting</b> in DL-Lite_core TBox to <b>forgetting</b> in DL-Lite_bool KBs. We also introduce query-based <b>forgetting,</b> a parameterized definition of <b>forgetting,</b> which provides a unifying framework for defining and comparing different definitions of <b>forgetting</b> in DL-Lite ontologies. Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|R
5|$|Henry Robert Burke. , Lest We <b>Forget</b> Communications. Retrieved on January 3, 2008.|$|E
5|$|I can't <b>forget</b> {{the feeling}} of your sweat upon my skin.|$|E
5|$|Never shall I <b>forget</b> those flames which {{consumed}} {{my faith}} forever.|$|E
50|$|Directed <b>forgetting</b> {{is another}} name for Motivated <b>Forgetting,</b> meaning that one is <b>forgetting</b> {{consciously}} any recent experience that was unwanted.|$|R
40|$|Two {{experiments}} studied how the age {{at which}} words are acquired (Age of Acquisition, AoA) modulates <b>forgetting.</b> Experiment 1 employed the retrieval-practice paradigm to test the effect of AoA on the incidental <b>forgetting</b> that emerges after solving competition during retrieval (i. e., retrieval-induced <b>forgetting,</b> RIF). Standard RIF appeared with late-acquired words, but this effect disappeared with early-acquired words. Experiment 2 evaluated the effect of AoA on intentional <b>forgetting</b> by employing the list-method directed <b>forgetting</b> paradigm. Results showed a standard directed <b>forgetting</b> effect only when the to-be-forgotten words were late-acquired words. These findings point to the prominent role of AoA in <b>forgetting</b> processes...|$|R
5000|$|... "We {{have been}} told from a high quarter," [...] he said, [...] "to avoid such subjects, unless we wish to rekindle the flames of Smithfield, now long <b>forgotten.</b> Long <b>forgotten!</b> where <b>forgotten?</b> In heaven? No. In Britain? God forbid! They may be <b>forgotten</b> at St. Stephen's or Westminster Abbey, {{but they are not}} <b>forgotten</b> in Britain. And if ever such a day arrives, the hours of Britain's {{prosperity}} have been numbered." ...|$|R
5|$|Although James forced Frances {{to give up}} {{the post}} because of her {{marriage}} to a Catholic, James did not <b>forget</b> the family. In 1673, Sarah entered court as maid of honour to James’s second wife, Mary of Modena.|$|E
5|$|Each Clan has {{the right}} to be proud and independent, but in times of trouble they must <b>forget</b> their {{boundaries}} and fight side by side to protect the four. Each Clan must help the others so that no Clan will fall.|$|E
5|$|Here We Go Again is {{the second}} studio album by American singer Demi Lovato. It was {{released}} on July 21, 2009, through Hollywood Records. Unlike her previous album, Don't <b>Forget</b> (2008), Lovato did not collaborate with the Jonas Brothers, as she {{wanted to work with}} different people and give the album a personal approach. Lovato collaborated for the album with established songwriters and producers, such as E. Kidd Bogart, Gary Clark, Toby Gad, John Mayer, Jon McLaughlin, Lindy Robbins and John Fields, who produced her previous album Don't <b>Forget.</b> Lovato also collaborated with The Academy Is... lead singer William Beckett to write a song about a strained relationship with her father, which was originally set to appear on the album, but was later dropped. The song later appeared on her third album Unbroken (2011).|$|E
40|$|To {{investigate}} how angry prosody influences <b>forgetting,</b> neutral words spoken either in neutral or angry prosody were presented using the listwise directed <b>forgetting</b> paradigm, and their memory {{was assessed using}} a recognition test. When the study items were spoken angrily, we found disrupted <b>forgetting</b> (i. e. no costs), but enhance remembering (i. e. benefits). When the study items were spoken neutrally, however, neither <b>forgetting</b> nor benefits was observed. Further analyses showed that directed <b>forgetting</b> did not influence the response bias. Taken together, {{these findings suggest that}} emotional prosody undermines <b>forgetting</b> but facilitates remembering...|$|R
40|$|Abstract. <b>Forgetting</b> is an {{important}} tool for reducing ontologies by eliminating some concepts and roles while preserving sound and complete reasoning. Attempts have previously been made {{to address the problem}} of <b>forgetting</b> in relatively simple description logics (DLs) such as DL-Lite and extended EL. The ontologies used in these attempts were mostly restricted to TBoxes rather than general knowledge bases (KBs). However, the issue of <b>forgetting</b> for general KBs in more expressive description logics, such as ALC and OWL DL, is largely unexplored. In particular, the problem of characterizing and computing <b>forgetting</b> for such logics is still open. In this paper, we first define semantic <b>forgetting</b> about concepts and roles in ALC ontologies and state several important properties of <b>forgetting</b> in this setting. We then define the result of <b>forgetting</b> for concept descriptions in ALC, state the properties of <b>forgetting</b> for concept descriptions, and present algorithms for computing the result of <b>forgetting</b> for concept descriptions. Unlike the case of DL-Lite, the result of <b>forgetting</b> for an ALC ontology does not exist in general, even for the special case of concept <b>forgetting.</b> This makes the problem of how to compute <b>forgetting</b> in ALC more challenging. We address this problem by defining a series of approximations to the result of <b>forgetting</b> for ALC ontologies and studying their properties and their application to reasoning tasks. We use the algorithms for computing <b>forgetting</b> for concept descriptions to compute these approximations. Our algorithms for computing approximations can be embedded into an ontology editor to enhance its ability to manage and reason in (large) ontologies. ...|$|R
40|$|<b>Forgetting</b> is an {{important}} tool for reducing ontologies by eliminating some concepts and roles while preserving sound and complete reasoning. Attempts have previously been made {{to address the problem}} of <b>forgetting</b> in relatively simple description logics (DLs) such as DL-Lite and extended. The ontologies used in these attempts were mostly restricted to TBoxes rather than general knowledge bases (KBs). However, the issue of <b>forgetting</b> for general KBs in more expressive description logics, such as and OWL DL, is largely unexplored. In particular, the problem of characterizing and computing <b>forgetting</b> for such logics is still open. In this paper, we first define semantic <b>forgetting</b> about concepts and roles in ontologies and state several important properties of <b>forgetting</b> in this setting. We then define the result of <b>forgetting</b> for concept descriptions in, state the properties of <b>forgetting</b> for concept descriptions, and present algorithms for computing the result of <b>forgetting</b> for concept descriptions. Unlike the case of DL-Lite, the result of <b>forgetting</b> for an ontology does not exist in general, even for the special case of concept <b>forgetting.</b> This makes the problem of how to compute <b>forgetting</b> in more challenging. We address this problem by defining a series of approximations to the result of <b>forgetting</b> for ontologies and studying their properties and their application to reasoning tasks. We use the algorithms for computing <b>forgetting</b> for concept descriptions to compute these approximations. Our algorithms for computing approximations can be embedded into an ontology editor to enhance its ability to manage and reason in (large) ontologies...|$|R
5|$|Marshall did not <b>forget</b> his {{conservation}} causes, {{and soon}} was pondering {{the question of}} wilderness and national parks. In the early 1930s, he joined the National Parks Association, eventually becoming a member of its board.|$|E
5|$|Meanwhile, Brienne confronts Davos Seaworth and Melisandre, and informs {{them that}} she killed Stannis after he {{admitted}} to using dark magic to assassinate Renly. She warns Davos and Melisandre that even though {{that was in the}} past, she does not <b>forget</b> or forgive.|$|E
5|$|Although Chandrakumar {{is ready}} to <b>forget</b> Divya's past, she cannot accept another man in her life. They consult a lawyer who tells them that {{according}} to the Hindu Marriage Act of 1955, since they are newly married they must wait one year to file for divorce and they must live {{with each other for}} a year.|$|E
40|$|Abstract To {{support the}} reuse and {{combination}} of ontologies in Semantic Web applica-tions, {{it is often}} necessary to obtain smaller ontologies from existing larger ontologies. In particular, applications may require the omission of certain terms, e. g., concept names and role names, from an ontology. However, the task of omitting terms from an ontology is challenging because the omission of some terms may affect {{the relationships between the}} remaining terms in complex ways. We present the first {{solution to the problem of}} omit-ting concepts and roles from knowledge bases of description logics (DLs) by adapting the technique of <b>forgetting,</b> previously used in other domains. Specifically, we first introduce a model-theoretic definition of <b>forgetting</b> for knowledge bases (both TBoxes and ABoxes) in DL-LiteNbool, which is a non-trivial adaption of the standard definition for classical logic, and show that our model-based <b>forgetting</b> satisfies all major criteria of a rational <b>forgetting</b> operator, which in turn verifies the suitability of our model-based <b>forgetting.</b> We then in-troduce algorithms that implement <b>forgetting</b> operations in DL-Lite knowledge bases. We prove that the algorithms are correct with respect to the semantic definition of <b>forgetting.</b> We establish a general framework for defining and comparing different definitions of <b>forgetting</b> by introducing a parameterized family of <b>forgetting</b> operators called query-based <b>forgetting</b> operators. In this framework we identify three specific query-based <b>forgetting</b> operators and show that they form a hierarchy. In particular, we show that the model-based <b>forgetting</b> coincides with one of these query-based <b>forgetting</b> operators...|$|R
40|$|<b>Forgetting</b> is {{a useful}} tool for {{tailoring}} ontologies by reducing the number of concepts and roles, while preserving sound and complete reasoning. Some {{attempts have been made to}} address the problem of <b>forgetting</b> in some relatively simple description logics (DLs) such as DL-Lite and extended EL. Ontologies in those works are mostly expressed as TBoxes rather than general knowledge bases (KBs). However, the issue of <b>forgetting</b> for general KBs in more expressive ontology languages, such as ALC and OWL DL, is largely unexplored. In particular, the problem of characterizing and computing <b>forgetting</b> is still open. In this paper, we first define semantic <b>forgetting</b> about concepts and roles in ALC ontologies and show several important properties of <b>forgetting</b> in this setting. Unlike the case of DL-Lite, the result of <b>forgetting</b> in an ALC ontology may not exist in general, which makes the problem of how to compute <b>forgetting</b> in ALC more challenging. As a result, we tackle the non-existence of the result of <b>forgetting</b> in ALC ontologies by first investigating <b>forgetting</b> in concept descriptions and then defining and studying a series of approximations to the result of <b>forgetting</b> in ALC ontologies. We show that <b>forgetting</b> in ALC ontologies can be approximated through computing <b>forgetting</b> for concept descriptions. Our algorithms can be embedded into an ontology editor to enhance its ability to manage and apply (large) ontologies. Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|R
40|$|To {{support the}} reuse and {{combination}} of ontologies in Semantic Web applications, {{it is often}} necessary to obtain smaller ontologies from existing larger ontologies. In particular, applications may require the omission of certain terms, e. g., concept names and role names, from an ontology. However, the task of omitting terms from an ontology is challenging because the omission of some terms may affect {{the relationships between the}} remaining terms in complex ways. We present the first {{solution to the problem of}} omitting concepts and roles from knowledge bases of description logics (DLs) by adapting the technique of <b>forgetting,</b> previously used in other domains. Specifically, we first introduce a model-theoretic definition of <b>forgetting</b> for knowledge bases (both TBoxes and ABoxes) in DL-Lite N bool, which is a non-trivial adaption of the standard definition for classical logic, and show that our model-based <b>forgetting</b> satisfies all major criteria of a rational <b>forgetting</b> operator, which in turn verifies the suitability of our model-based <b>forgetting.</b> We then introduce algorithms that implement <b>forgetting</b> operations in DL-Lite knowledge bases. We prove that the algorithms are correct with respect to the semantic definition of <b>forgetting.</b> We establish a general framework for defining and comparing different definitions of <b>forgetting</b> by introducing a parameterized family of <b>forgetting</b> operators called query-based <b>forgetting</b> operators. In this framework we identify three specific query-based <b>forgetting</b> operators and show that they form a hierarchy. In particular, we show that the model-based <b>forgetting</b> coincides with one of these query-based <b>forgetting</b> operators...|$|R
5|$|Devadasu is {{surprised}} at her visit, sends her away, {{and goes back}} to the city. He writes to Parvati that he cannot defy his parents, so Parvati marries the old zamindar. Unable to <b>forget</b> her, Devadasu is despondent. He takes to drinking alcohol excessively and is encouraged by his friend Bhagawan, who also introduces him to Chandramukhi, a prostitute.|$|E
5|$|Don't <b>Forget</b> the Bacon! is a children's {{book written}} and {{illustrated}} by Pat Hutchins. It was published by Bodley Head in 1976. The story is about a little boy who tries to memorise a list of groceries his mother has asked him to buy. The book {{has been used as a}} teaching tool to instruct children about early learning concepts.|$|E
5|$|Don't <b>Forget</b> the Bacon! was {{a success}} in England and the United States, and {{received}} positive reception from the American Library Association, and The Washington Post. The story was recommended in 2005 {{as part of a}} children's reading challenge announced by the Education Minister for New South Wales, Australia, and included in suggested reading by The Times as part of the 2008 recognition of World Book Day.|$|E
40|$|This volume recovers {{the crucial}} role of <b>forgetting</b> in {{producing}} early modernity's subjective and collective identities, desires and fantasies. Regarding <b>forgetting</b> as a presence rather than an absence, each of the volume's four sections concentrates on a site of <b>forgetting.</b> The first section explores the body as a site of <b>forgetting.</b> The second section considers signs of <b>forgetting,</b> both rhetorical and poetic. The third section explores early modern narratives of identity formation, reformation and deformation. The final section considers localities of <b>forgetting,</b> ranging from the imaginary geography of A Midsummer Night's Dream to the theatre and the early modern library. This book promotes a view of <b>forgetting</b> neither confined to a single discourse nor dominated by a single concept. The essays show how <b>forgetting</b> not only struggles and colludes with remembering to produce culture, but that it also forms its own images, places, materialities, and practices. <b>Forgetting</b> in Early Modern English Literature and Culture is essential reading for students and scholars of Renaissance Studie...|$|R
40|$|Recent {{studies have}} {{identified}} molecular pathways driving <b>forgetting</b> {{and supported the}} notion that <b>forgetting</b> is a biologically active process. The circuit mechanisms of <b>forgetting,</b> however, remain largely unknown. Here we report two sets of Drosophila neurons that account for the rapid <b>forgetting</b> of early olfactory aversive memory. We show that inactivating these neurons inhibits memory decay without altering learning, whereas activating them promotes <b>forgetting.</b> These neurons, including a cluster of dopaminergic neurons (PAM-beta' 1) {{and a pair of}} glutamatergic neurons (MBON-gamma 4 >gamma 1 gamma 2), terminate in distinct subdomains in the mushroom body and represent parallel neural pathways for regulating <b>forgetting.</b> Interestingly, although activity of these neurons is required for memory decay over time, they are not required for acute <b>forgetting</b> during reversal learning. Our results thus not only establish the presence of multiple neural pathways for <b>forgetting</b> in Drosophila but also suggest the existence of diverse circuit mechanisms of <b>forgetting</b> in different contexts...|$|R
40|$|Presented work {{deals with}} <b>forgetting</b> {{estimation}} {{in the frame}} of dynamic decision making. The main goal is to find the optimal <b>forgetting</b> system for the algorithm for estimation of <b>forgetting</b> factor in time in the optimal way. Further goal is to compare the algorithm with the constant <b>forgetting</b> for various settings...|$|R
5|$|In Toronto, on September 15, 1886, {{he married}} Emily Charlotte Lee in a {{traditional}} ceremony at St. Peter's Anglican Church. Emily Wilson owned a piano, {{one of the first}} in Edmonton, and it was used at various dances, an activity the couple enjoyed. The Wilsons were friends of many notable early leading Canadian figures, such as Father Albert Lacombe, Charles Tupper, and Amédée <b>Forget.</b>|$|E
25|$|Jennifer Lowe-Anker {{published}} a memoir, <b>Forget</b> Me Not in 2008, that recounts her life shared with Lowe, {{his death and}} the life she continued with Anker. <b>Forget</b> Me Not won the National Outdoor Book award for literature in 2008.|$|E
25|$|That a Ranger can't <b>forget.</b>|$|E
6000|$|<b>Forgot</b> the stars, the moon, the sun, [...] And she <b>forgot</b> {{the blue}} above the trees, [...] And she <b>forgot</b> the dells where waters run, [...] And she <b>forgot</b> the chilly autumn breeze; [...] She had no {{knowledge}} when the day was done, [...] And the new morn she saw not-- ...|$|R
5000|$|Example [...] (3a)| ra:ju pa:thavannu maretidda:ne Raju(nom) lesson (acc) has-forgotten [...] "Raju has <b>forgotten</b> the lesson." [...] 3b) ||ra:juvige pa:tha maretide Raju(dat) lesson(nom) <b>forgotten</b> [...] "The lesson {{has been}} <b>forgotten</b> by Raju." ...|$|R
40|$|Abstract. In this paper, {{we propose}} two new and {{different}} approaches to <b>forgetting</b> variables for ALC based on the well-known tableau algorithm. The first approach computes the result of <b>forgetting</b> via rolling up tableaux, which also provides insights of the decidability of existence of <b>forgetting</b> in ALC. When the result of <b>forgetting</b> does not exist, we provide an incremental method for computing approximations of <b>forgetting.</b> The second approach uses variable substitution to refine approximations of <b>forgetting</b> and eventually obtain the result of <b>forgetting.</b> This approach is capable of preserving structural information of the original ontologies and thus renders readability. As both approaches {{are based on the}} tableau algorithm, their implementations can make use of the mechanisms and optimization techniques of the existing description logic reasoners. ...|$|R
