201|501|Public
25|$|Drugs & Compounds: This section connects GeneCards {{with drugs}} and {{compounds}}. TOCRIS compounds show compound, action and CAS number. DrugBank compound gives compound, synonyms, CAS number (Chemical Abstracts Registry number), type (transporter/target/carrier/enzyme), actions and PubMed IDs. HMDB and Novoseek show the relationships of chemical compounds, which includes compound, synonyms, CAS number and PubMed IDs (articles related to the compound). BitterDB displays compound, CAS number and SMILES (Simplified Molecular <b>Input</b> <b>Line</b> Entry Specification). PharmGKB gives drug/compound and its annotation.|$|E
25|$|The primary break rate of {{sparking}} Tesla coils is slow {{compared to}} the resonant frequency of the resonator-topload assembly. When the switch closes, energy is transferred from the primary LC circuit to the resonator where the voltage rings up over {{a short period of}} time up culminating in the electrical discharge. In a spark gap Tesla coil, the primary-to-secondary energy transfer process happens repetitively at typical pulsing rates of 50â€“500 times per second, depending on the frequency of the <b>input</b> <b>line</b> voltage. At these rates, previously-formed leader channels do not get a chance to fully cool down between pulses. So, on successive pulses, newer discharges can build upon the hot pathways left by their predecessors. This causes incremental growth of the leader from one pulse to the next, lengthening the entire discharge on each successive pulse. Repetitive pulsing causes the discharges to grow until the average energy available from the Tesla coil during each pulse balances the average energy being lost in the discharges (mostly as heat). At this point, dynamic equilibrium is reached, and the discharges have reached their maximum length for the Tesla coil's output power level. The unique combination of a rising high-voltage radio frequency envelope and repetitive pulsing seem to be ideally suited to creating long, branching discharges that are considerably longer than would be otherwise expected by output voltage considerations alone. High-voltage, low-energy discharges create filamentary multibranched discharges which are purplish-blue in colour. High-voltage, high-energy discharges create thicker discharges with fewer branches, are pale and luminous, almost white, and are much longer than low-energy discharges, because of increased ionisation. A strong smell of ozone and nitrogen oxides will occur in the area. The important factors for maximum discharge length appear to be voltage, energy, and still air of low to moderate humidity. There are comparatively few scientific studies about the initiation and growth of pulsed lower-frequency RF discharges, so some aspects of Tesla coil air discharges are not as well understood when compared to DC, power-frequency AC, HV impulse, and lightning discharges.|$|E
5000|$|Simplified {{molecular}} <b>input</b> <b>line</b> entry specification (SMILES notation) ...|$|E
40|$|A system {{consisting}} of a buffer, N <b>input</b> <b>lines</b> leading to it and one line leading out is considered. Successive active and idle periods on the <b>input</b> <b>lines</b> constitute an alternating renewal process of a special kind. While in previous work the case of identical <b>input</b> <b>lines</b> was considered, the present paper gives {{a solution to the}} general case of non-identical <b>input</b> <b>lines.</b> This provides a tool for the analysis of arbitrarily complicated networks of buffers. The paper contains results regarding the traffic pattern on the output lineas well as the content of the buffer and the maximum content of the buffer during intervals of non-emptiness. ...|$|R
5000|$|Two analog audio <b>inputs,</b> <b>line</b> level. 16-bit Sigma-Delta ADCs, 48kHz {{sampling}} frequency ...|$|R
40|$|AbstractThe {{output process}} in a buffer-multiplexer data {{communication}} system with N identical <b>input</b> <b>lines</b> and one output line is considered. It is assumed {{that the rate of}} transmission on the <b>input</b> <b>lines</b> and on the output line is 1, that idle periods on the <b>input</b> <b>lines</b> follow an exponential distribution, and that active periods are allowed to have an arbitrary distribution function. The main result is that active periods on the output line follow the same distribution function as the busy period in a certain M/G/ 1 queue. First passage times from any state of the system to complete idleness are also considered and their Laplace transforms are derived...|$|R
5000|$|A simple encoder assigns {{a binary}} code to an active <b>input</b> <b>line.</b>|$|E
5000|$|... { # {{for every}} <b>input</b> <b>line</b> multiSUBSEP $2++;}#END { for (x in multi) { split(x, arr, SUBSEP); print arr1, arr2, multix; }} ...|$|E
5000|$|... class ParseError < Exception def {{initialize}} <b>input,</b> <b>line,</b> pos super [...] "Could not parse '#{input}' at line #{line}, position #{pos}" [...] endendraise ParseError.new("Foo", 3, 9) ...|$|E
50|$|NOTE: The above {{lines are}} all treated as <b>input</b> <b>lines</b> to the Camera Interface hardware.|$|R
40|$|The {{output process}} in a buffer-multiplexer data {{communication}} system with N identical <b>input</b> <b>lines</b> and one output line is considered. It is assumed {{that the rate of}} transmission on the <b>input</b> <b>lines</b> and on the output line is 1, that idle periods on the <b>input</b> <b>lines</b> follow an exponential distribution, and that active periods are allowed to have an arbitrary distribution function. The main result is that active periods on the output line follow the same distribution function as the busy period in a certain M/G/ 1 queue. First passage times from any state of the system to complete idleness are also considered and their Laplace transforms are derived. data communication buffer multiplexer M/G/ 1 queue busy period...|$|R
5000|$|The {{discrete}} <b>input</b> <b>lines</b> generally {{serve as}} communication lines from external equipment. There are {{three sets of}} [...] "on - off" [...] type signals: ...|$|R
50|$|The Simplified Molecular <b>Input</b> <b>Line</b> Entry Specification (SMILES) {{is a line}} {{notation}} for molecules. SMILES strings include connectivity but do {{not include}} 2D or 3D coordinates.|$|E
50|$|The {{standard}} for BEAM-based neurons is a capacitor that has one lead as an input, {{and the other}} going into the <b>input</b> <b>line</b> of an inverter. That inverter's output is {{the output of the}} neuron. The capacitor lead that is inputting into the inverter is pulled to ground with a resistor. The neuron functions because when an input is received (positive power on the <b>input</b> <b>line),</b> it charges the capacitor. Once the input is lost (negative power on the <b>input</b> <b>line),</b> the capacitor discharges into the inverter, causing the inverter to produce an output that is passed to the next neuron. The rate that the capacitor discharges is tied to the resistor that is pulling the input to the inverter to the negative. The larger the resistor, the longer it will take for the capacitor to fully discharge, and the longer it will take for that neuron to completely fire.|$|E
5000|$|... : Stores {{the current}} [...] "record {{separator}}" [...] character. Since, by default, an <b>input</b> <b>line</b> is the input record, the default record separator {{character is a}} [...] "newline".|$|E
5000|$|The fmt {{command in}} Unix {{is used to}} format natural {{language}} text for humans to read. It has been traditionally used to reformat email messages after composition and prior to delivery. Its syntax is similar among various Unixes, but not identical. [...] fmt attempts to break, fill and join <b>input</b> <b>lines</b> to produce globally optimal, balanced output with the lengths of each line approaching the target width as closely as possible, rather than wrapping the <b>input</b> <b>lines</b> exactly as fold (from GNU Core Utilities) does.|$|R
40|$|This paper {{addresses}} {{the problem of}} fixed probes; in our setting {{the locations of the}} probes must be chosen before the input is examined. In the case of intersection probes, we show that for each natural number n there is a set of n + 1 probe lines that will serve to determine any arrangement of n <b>input</b> <b>lines.</b> We also show that n + 1 is sometimes necessary. In general, we obtain asymptotically tight upper and lower bounds on the maximum number of <b>input</b> <b>lines</b> that are compatible wit...|$|R
5000|$|This [...] "Hello, world!" [...] {{script is}} in a file (e.g., script.txt) and invoked with , where [...] "inputFileName" [...] is the input text file. The script changes [...] "inputFileName" [...] line #1 to [...] "Hello, world!" [...] and then quits, {{printing}} the result before sed exits. Any <b>input</b> <b>lines</b> past line #1 are not read, and not printed. So the sole output is [...] "Hello, world!".|$|R
50|$|Molecule editors {{typically}} support {{reading and}} writing at least one file format or line notation. Examples of each include Molfile and simplified molecular <b>input</b> <b>line</b> entry specification (SMILES), respectively.|$|E
5000|$|In {{order to}} {{efficiently}} maintain the intersection {{points of the}} sweep line L with the <b>input</b> <b>line</b> segments and the sequence of future events, the Bentley-Ottmann algorithm maintains two data structures: ...|$|E
50|$|In a TDM Bus, data or {{information}} arriving from an <b>input</b> <b>line</b> is put onto specific timeslots on a high-speed bus, where a recipient {{would listen to}} the bus and pick out only the signals for a certain timeslot.|$|E
50|$|A simple encoder circuit is a one-hot to binary converter. That is, {{if there}} are 2n <b>input</b> <b>lines,</b> and at most {{only one of them}} will ever be high, the binary code of this 'hot' line is {{produced}} on the n-bit output lines.|$|R
30|$|The {{proposed}} method selects {{two lines}} of 1 L mode or one two-line block of 2 L mode depending on characteristics of <b>input</b> video <b>lines.</b> The 1 L mode can have better compression performance than the 2 L mode if the correlation between <b>input</b> <b>lines</b> is low as in complex texture images. On the other hand, the 2 Â L mode using the 2 D DWT can have better performance than the 1 L mode if the correlation between adjacent lines is high.|$|R
50|$|<b>LINE</b> <b>INPUT</b> {{statement}} to <b>input</b> an entire <b>line</b> of text, regardless of punctuation, {{into a single}} string variable.|$|R
5000|$|Line mode (a.k.a. line-at-a-time mode): In this mode, the {{terminal}} provides a local line editing function, and sends an entire <b>input</b> <b>line,</b> {{after it has}} been locally edited, when the user presses a [...] key. A so-called [...] "line mode terminal" [...] operates solely in this mode.|$|E
5000|$|The {{main idea}} of the Bentley-Ottmann {{algorithm}} {{is to use a}} sweep line approach, in which a vertical line L moves from left to right across the plane, intersecting the <b>input</b> <b>line</b> segments in sequence as it moves. The algorithm is described most easily in its general position, meaning: ...|$|E
5000|$|Some {{programming}} languages (e.g. Visual Basic) {{will not}} read past a [...] "soft" [...] EOF {{when using the}} built-in text file reading primitives (<b>INPUT,</b> <b>LINE</b> INPUT etc.), and alternate methods must be adopted, e.g. opening the file in binary mode or using the File System Object to progress beyond it.|$|E
50|$|Jackson criticises the {{traditional}} version, claiming that it hides the relationships which {{exist between the}} <b>input</b> <b>lines,</b> compromising the program's understandability and maintainability by, for example, forcing {{the use of a}} special case for the first line and forcing another special case for a final output operation.|$|R
50|$|A Simple Encoder {{or simply}} an encoder in digital {{electronics}} is a one-hot to binary converter. That is, {{if there are}} 2n <b>input</b> <b>lines,</b> and at most {{only one of them}} will ever be high, the binary code of this 'hot' line is produced on the n-bit output lines.|$|R
50|$|An {{example in}} {{hardware}} design is omission of pull-up resistors on unused inputs to a logic gate. This practice {{may have been}} acceptable in the past, but has become deprecated because faster clock speeds are likely to induce more transient noise on <b>input</b> <b>lines,</b> causing hardware glitches or malfunctions.|$|R
5000|$|Before {{the launch}} of the Internet Center, the only source for University of Evansville Men's {{basketball}} coverage was local sources inside Evansville, particularly Adam Alexander on WKDQ. Evansville basketball was not broadcast anywhere outside of the area. WUEV did not air UE basketball through their terrestrial signal at that time, either. But, they could carry basketball on the internet. A DR-10 telephone switcher was purchased and wired into the Internet Center by Bailey, so that Clark and the field broadcast team could call the UE toll-free number, reach the proper extension, and switch the internet broadcast signal from the control room's <b>input</b> <b>line</b> to a Marti or Comdex <b>input</b> <b>line.</b> Listeners could now [...] "tune in" [...] to the internet broadcast. When the game was over, someone would call back and switch the signal back to the terrestrial feed.|$|E
50|$|In such a case, L {{will always}} {{intersect}} the <b>input</b> <b>line</b> segments {{in a set}} of points whose vertical ordering changes only at a finite set of discrete events. Thus, the continuous motion of L can be broken down into a finite sequence of steps, and simulated by an algorithm that runs in a finite amount of time.|$|E
50|$|In DCL scripts, any <b>input</b> <b>line</b> {{which does}} not begin with a $ symbol is implicitly treated as input to the {{preceding}} command - all lines which do not begin with $ are here-documents. The input is either passed to the program, or can be explicitly referenced by the logical name SYS$INPUT (analogous to the Unix concept of stdin).|$|E
40|$|N-tuple {{recognition}} systems (RAMnets) {{are normally}} modeled {{using a small}} number of <b>input</b> <b>lines</b> to each RAM, because the address space grows exponentially with the number of inputs. It is impossible to implement an arbitrarily-large address space as physical memory. But given modest amounts of training data, correspondingly modest numbers of bits will be set in that memory. Hash arrays can therefore be used instead of a direct implementation of the required address space. This paper describes some exploratory experiments using the hash array technique to investigate the performance of RAMnets with very large numbers of <b>input</b> <b>lines.</b> An argument is presented which concludes that performance should peak at a relatively small n-tuple size, but the experiments carried out so far contradict this. Further experiments are needed to confirm this unexpected result...|$|R
5000|$|... : Bytes; a list {{following}} [...] specifies a {{range of}} bytes which will be returned, e.g. [...] would return the first 66 bytes of a line. NB If {{used in conjunction with}} , no multi-byte characters will be split. NNB. [...] will only work on <b>input</b> <b>lines</b> of less than 1023 bytes ...|$|R
50|$|The sed script below {{will turn}} the text above into the {{following}} text. Note that the script affects only the <b>input</b> <b>lines</b> that start with a space: This is my dog, whose name is Frank. This is my fish, whose name is George. This is my goat, whose name is Adam.|$|R
