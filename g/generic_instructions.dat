25|34|Public
2500|$|Using the [...] "lápis azul" [...] (blue pencil, {{which came}} to be a symbol of censorship), city and {{district}} censors would strike out any text deemed unsuitable for publication. While receiving <b>generic</b> <b>instructions</b> regarding which subjects were sensitive and should be censored, each censor would decide by himself what was admissible or not, resulting in considerable variations in what got published. This was mainly because censors were intellectually a very disparate group: while some would quickly cut any [...] "dangerous" [...] text, others would let by openly subversive content. This becomes readily clear by examining the original, struck-out articles preserved to date.|$|E
50|$|Due to {{the limited}} bandwidth, {{information}} can only be transmitted very slowly, {{on the order of}} a few characters per minute (see Shannon’s coding theorem). Thus {{it is reasonable to assume}} that the actual messages were mostly <b>generic</b> <b>instructions</b> or requests to establish a different form of two-way communication with the relevant authority.|$|E
50|$|Intentionally blank {{pages are}} {{ubiquitous}} in technical and instructional manuals, directories, and other large, mass-produced volumes of text. The contents of manuals {{produced by a}} given product's vendor are often compiled from <b>generic</b> <b>instructions</b> suitable {{for a variety of}} products, with additional instructions or chapters included for the specific product or model in question. This automation of manual generation leads to intentionally blank pages to fit the requirements for mass printing.|$|E
5000|$|For a <b>generic</b> <b>instruction,</b> {{we define}} the [...] and [...] sets as follows: ...|$|R
30|$|Another approach, {{to reduce}} the spatial {{complexity}} of instruction-level power models is presented in [25]. Therein, interinstruction effects have been measured by considering only the additional energy consumption observed when a <b>generic</b> <b>instruction</b> is executed after a no-operation (NOP) instruction.|$|R
40|$|Teacher {{training}} programs and staff development plans {{that address the}} instruction of teachers in critical thinking skills are now afloat {{in more than a}} few school systems, but to what degree these programs actually influence instruction in the classroom when training ends, that is an open question for current educators in the field. It is a question that returns us with a new twist to the issue of <b>generic</b> <b>instruction...</b>|$|R
5000|$|Overhead code is the {{additional}} (or excess) object code {{generated by a}} compiler to provide machine code which will be executed by a specific CPU. This code includes translations of <b>generic</b> <b>instructions</b> listed in cross-platform code, and is tailored for execution on a specific platform or architecture. An example of overhead code would be code generated to handle reference counting, while source code written in a high level language is an example cross-platform code.|$|E
5000|$|Using the [...] "lápis azul" [...] (blue pencil, {{which came}} to be a symbol of censorship), city and {{district}} censors would strike out any text deemed unsuitable for publication. While receiving <b>generic</b> <b>instructions</b> regarding which subjects were sensitive and should be censored, each censor would decide by himself what was admissible or not, resulting in considerable variations in what got published. This was mainly because censors were intellectually a very disparate group: while some would quickly cut any [...] "dangerous" [...] text, others would let by openly subversive content. This becomes readily clear by examining the original, struck-out articles preserved to date.|$|E
50|$|The deficit {{model of}} {{scientific}} understanding makes {{assumptions about the}} public’s knowledge. The model perceives them to be “blank slates” where their knowledge of scientific discourse and research is almost non-existent. Again, this is the knowledge deficit {{that needs to be}} informed by a reliable, knowledgeable and hierarchical scientific community in the form of simple commands and <b>generic</b> <b>instructions.</b> But the increase in new information systems such as the Internet and their ease of accessibility has led to a greater knowledge of scientific research and this is evident as the public’s understanding can be seen to be growing. This is a good thing in terms {{of the members of the}} public that can actively increase their own knowledge base, decrease the knowledge deficit and assess the truth and validity of what mass media outlets and governments are telling them. This should enhance and increase the relationship between the passive “blank slates” of the public, with the minority of the population who hold the ‘knowledge surplus’.|$|E
50|$|While the H200 {{supported}} {{operation with}} just a console, card reader and punch like the IBM 1401, the <b>generic</b> Input-Output <b>instructions</b> also supported line printers and magnetic tape drives.|$|R
50|$|Criminal {{defense lawyers}} often propose {{detailed}} jury instructions {{as a mechanism}} to offset undue reliance on eyewitness testimony, when factors shown to undermine its reliability are present in a given case. Many state courts prohibit instructions detailing specific eyewitness reliability factors but will allow a <b>generic</b> <b>instruction,</b> while others find detailed instructions on specific factors to be critical to a fair trial. California allows instructions when police procedures are in conflict with established best practices, for example, and New Jersey mandates an instruction on the cross-race effect when the identification {{is central to the}} case and uncorroborated by other evidence.|$|R
40|$|This paper {{focuses on}} the {{relationship}} between team performance, task architecture and the design of team training. In exploring this relationship an experiment was carried out in which the effect of two cross-training instructions was examined on the performance of teams with an open versus fixed task architecture. The results indicate that an interaction <b>generic</b> <b>instruction,</b> consisting of general rules and guidelines, has a positive effect on the performance of teams with an open task architecture. The results also show that teams characterised by an open task architecture benefit the most of an explicit cross-training instruction focusing on task related interactions. The results of this research study will be discussed in terms of their relevance for designing effective training interventions, which take relevant team and task characteristics into account...|$|R
40|$|The {{present study}} {{examines}} {{the role of}} a specific instruction designed to guide jurors on non-statutory mitigating circumstances in determining sentence recommendation. To date, there is no research examining whether specific instructions provide more guidance, and improve jurors’ discretion compared to the current general instructions. We predicted that specific mitigating instructions would increase confidence in life sentencing compared to <b>generic</b> <b>instructions</b> as well as revised instructions. We also predicted that expert testimony of childhood physical abuse would minimize death penalty recommendations. Contrary to our predictions, we found that exposure to <b>generic</b> <b>instructions</b> increased confidence in a life sentence. In addition, perceptions of the defendant and mood predicted confidence in sentence. Positive mood predicted high levels of confidence in a death sentence...|$|E
40|$|Abstract — This paper investigates �-to- � � {{color space}} {{conversion}} on FPGA-augmented TriMedia- 32 processor. First, we outline {{the extension of}} TriMedia- 32 architecture consisting of FPGA-based Reconfigurable Functional Units (RFU) and associated <b>generic</b> <b>instructions.</b> Then we analyse a YUV-RGB (RFU–specific) instruction which can process four pixels per call, and propose a scheme to implement the YUV-RGB operation on RFU. When mapped on an ACEX EP 1 K 100 FPGA, the proposed YUV-RGB exhibits a latency of 10 and a recovery of...|$|E
40|$|Abstract — This paper investigates Y 0 UV-to-R 0 G 0 B 0 {{color space}} {{conversion}} on FPGA-augmented TriMedia- 32 processor. First, we outline {{the extension of}} TriMedia- 32 ar-chitecture consisting of FPGA-based Reconfigurable Func-tional Units (RFU) and associated <b>generic</b> <b>instructions.</b> Then we analyse a YUV-RGB (RFU–specific) instruction which can process four pixels per call, and propose a scheme to im-plement the YUV-RGB operation on RFU. When mapped on an ACEX EP 1 K 100 FPGA, the proposed YUV-RGB exhibits a latency of 10 and a recovery of...|$|E
40|$|This article may {{not exactly}} {{replicate}} {{the final version}} published in the APA journal. It is not the copy of record. The present research examined the influence of improved knowledge of odds and mathematical expectation on the gambling behavior of university students. A group of 198 Introductory Statistics students received instruction on probability theory using examples from gambling. One comparison group of 134 students received <b>generic</b> <b>instruction</b> on probability and a second group of 138 non-Statistics students received no mathematical instruction. Six months after the intervention, students receiving the intervention demonstrated superior ability to calculate gambling odds as well as resistance to gambling fallacies. Unexpectedly, this improved knowledge and skill {{was not associated with}} any decreases in actual gambling behavior. The implication of this research is that enhanced mathematical knowledge on its own may be insufficient to change gambling behavior. Alberta Gaming Research InstituteYe...|$|R
40|$|Instruction-set {{architecture}} (ISA) simulators are {{an integral}} part of today's processor and software design process. While increasing complexity of the architectures demands high performance simulation, the increasing variety of available architectures makes retargetability a critical feature of an instruction-set simulator. Retargetability requires generic models while high performance demands target specific customizations. To address these contradictory requirements, we have developed a <b>generic</b> <b>instruction</b> model and a generic decode algorithm that facilitates easy and efficient retargetability of the ISA-simulator for a wide range of processor architectures such as RISC, CISC, VLIW and variable length instruction set processors. The instruction model is used to generate compact and easy to debug instruction descriptions that are very similar to that of architecture manual. These descriptions are used to generate high performance simulators. The generation of the simulator is completely separate from the simulation engine. Hence, we can incorporate any fast simulation technique in our retargetable framework without loosing performance. We illustrate the retargetability of our approach using two popular, yet different realistic architectures: the Sparc and the ARM...|$|R
40|$|In this paper, we {{presents}} {{a framework for}} hardware accelerating methods for video post processing system implemented on FPGA. The histogram equalization and image-sharpening filter are the algorithms ported onto the SOC having Altera NIOS-II soft processor. Custom instructions are chosen by identifying {{the most frequently used}} tasks in the algorithm and the instruction set of NIOS-II processor has been extended. Saturation and the Histogram are the new instructions added to the processor that are implemented in hardware and interfaced to the NIOS-II processor. The software implementation of the algorithms has been modified to use the new instructions added for computing the saturation and histogram calculation. Performance of the software implementation of the histogram equalization and sharpening algorithms is boosted by these new instructions added to the NIOS-II processor. The comparison shows that the implemented tasks have been accelerated by ―multiple ‖ times. The saturation <b>instruction</b> is <b>generic</b> <b>instruction,</b> which can be used in many Image processing applications. The benefit of speed is obtained at the cost of very small hardware resources...|$|R
40|$|This site {{contains}} <b>generic</b> <b>instructions</b> {{for conducting}} water quality testing. Several different tests are described {{that can be}} conducted over short or long periods of time. The site explains how to gather and treat the data and has suggested questions {{for the students to}} see if they can properly analyze the data. The objectives are to familiarize students with real-world gathering of scientific data and data-gathering techniques, to give students practice with basic statistical analysis and graphing, and to give them a better idea of the nature of analysis, data collection, interpretation, and presentation. Educational levels: High school, Middle school...|$|E
40|$|Four {{experiments}} with 101 university {{and high school}} students (aged 17 – 30 yrs) confirmed introspective evidence for the distinction between general (GE), specific (SP), and autobiographical (AG) images concerning the specificity of image contents. Ss were able to classify each type of evoked image and to evoke these kinds of images on request. When given <b>generic</b> <b>instructions</b> to form images, GE images were the most common result. Differences existed between the kind of images and the times necessary to evoke, study, and reactivate them. SP images were rated as the most vivid, while AG images were the best recalled. Data suggest great variability in imaginal processes activated from the same concept in different situation...|$|E
40|$|This paper investigates inverse {{quantization}} on FPGA-augmented TriMedia processor. First, we {{outline the}} extension of TriMedia architecture consisting of FPGAbased Reconfigurable Functional Units (RFU) and associated <b>generic</b> <b>instructions.</b> Then we analyse an IQ- 4 (RFU [...] specific) instruction which can process four coefficients per call, and propose a scheme to implement the IQ- 4 operation on the RFU. When mapped on an ACEX EP 1 K 100 FPGA, the proposed IQ- 4 exhibits a latency of 18 and a recovery of 2 TriMedia- 32 @ 200 MHz cycles, and occupies 43 % of the device. By configuring the IQ- 4 facility on the RFU at application load-time, inverse quantization can be computed on FPGA-augmented TriMedia with a speed-up of #### over the standard TriMedia...|$|E
40|$|Traditionally, novices {{encounter}} many {{difficulties in}} {{learning how to}} program {{for a variety of}} reasons including the inability to develop an adequate model of the machine. In this paper, we examine major difficulties encountered by novices when taking an introductory-level programming course and we summarize the potential of visualization, collaboration, and analogy techniques in alleviating such difficulties. Based on the composition of these techniques, we present a sample computer model for the introduction of programming to beginners. The model relies on a <b>generic</b> <b>instruction</b> set and on the introduction of simplified UML activity diagrams. While shielding learners from Syntax details, we place strong emphasis on proper design and modeling prior to coding. To complete the proposed model, we assist novices figuring out what goes on as programs are executed by visualization the steps of the execution with simplified memory snapshots. We conclude with exploring some of the model’s benefits and proposing for future work to focus on the theoretical foundation and implementation of a modern program development tool, appropriate for alleviating novices’ difficulties. N/...|$|R
40|$|Instruction-set {{simulators}} are {{an integral}} part of today's processor and software design process. Due to increasing complexity of the architectures and time-to-market pressure, performance and retargetability are the most important features of an instruction-set simulator. Dynamic behavior of applications and processors requires the ISA simulators to be flexible. Flexible interpretive simulators are slow while fast compiled simulators are not flexible enough. Retargetability and flexibility require generic models while high performance demands target specific customizations. To address these contradictory requirements, we propose a generic model as well as an efficient and flexible implementation technique. The contribution of this paper is a simulation framework that is retargetable, fast and flexible. We have developed a <b>generic</b> <b>instruction</b> model and a generic decode algorithm to generate retargetable simulators that supports wide spectrum of processor architectures including RISC, DSP, VLIW and Superscalar. We have also developed the Instruction-Set Compiled Simulation (IS-CS) technique that combines the performance of compiled simulation with the flexibility of interpretive simulation. The generated simulator delivers up to 46 % performance improvement over JIT-CCS #[2], the best known result in this category. We illustrate the applicability of our approach using two different state-of-the- art real world architectures: the Sparc and the ARM. Contents...|$|R
40|$|Multimedia {{instruction}} sets allow {{developments of}} time and power efficient applications. As a consequence they are widely used in embedded systems, e. g. NEON in ARM processors, but also in general purpose processors e. g. SSEx in Intel and AMD processors and AVX for new processors). Unfortunately, {{it is difficult to}} write lowlevel code for such instruction sets, and no portability is possible. So developers rely on compilers to perform this optimization step. But the wide range of hardware targets and the diversity of multimedia instruction sets make it difficult for the compiler community to provide time-to-market compilers for all possible combination of targets. In this paper, we propose a source-to-source approach that combines an efficient vectorization algorithm with a <b>generic</b> <b>instruction</b> set. Back-ends in the form of C implementation of various intrinsics provide retargetable performances. The two first contributions are the parameterized vectorization algorithm and the use of source-to-source capabilities for easy debugging and easy retargeting. As a third contribution, the approach is validated by experiments from several scientific fields carried out on Intel and AMD machines, and comparisons with recent version of gcc, llvm and icc. The average speed-up is 10 % over gcc-march=native-O 3, 20 % over llvm and 5 % over icc-O 3 with some case showing 70 % speedup over gcc and 20 % speedup over ic...|$|R
40|$|This paper {{describes}} the first software implementation of an MPEG video decoder that runs at realtime rates of 30 frames per second, on a general purpose microprocessor. Previously, realtime MPEG decoding {{could only be}} achieved by using special-purpose MPEG or video chips, with "programmability " either nonexistent or limited to low-level firmware. In this paper, we describe how synergistic software and hardware optimizations allow us to implement realtime, high-fidelity MPEG video and audio decompression in a software video player written in C, running on a PA-RISC microprocessor in the entry-level HP 712 workstations. ThePA 7100 LC microprocessor described here is a fullycompliant PA-RISC 1. 1 general purpose processor with a few <b>generic</b> <b>instructions</b> added to speedup parallel arithmetic on subword (16 -bit) data. 1...|$|E
40|$|This report {{contains}} {{information about}} software performance of Toshiba TLCSR 3900 RISC processor evaluated by a software estimation technique proposed by J. Gong et. al. This technique decomposes the program into basic block then evaluates total execution time by analysis execution flow. The execution time of basic block {{is computed by}} compiling subprogram into <b>generic</b> <b>instructions</b> then mapping to real instruction. In addition, we analyze the pipeline stall phenomenon for TLCS-R 3900. A processor profile is proposed to count the effects. Based on this generic estimation model, our estimator can produce accurate estimation without large computation time and precious resource, such as compilers or simulators for each processor. 1 Introduction Software performance {{can be measured in}} three ways[1]: in-circuit simulation, software simulation, and software estimation. The comparison of these three approaches are summarized in Table 1. In hardware simulation, system specification was compile [...] ...|$|E
40|$|Two {{dimensions}} of students' beliefs about meaning construction in reading processes, transmission and transaction beliefs, were studied. According to transmission beliefs, the reader's {{task is to}} understand the author's intended meaning, while transaction beliefs assign to the reader the role of active meaning constructor. Students' beliefs were ascertained {{by means of a}} questionnaire (Schraw, 2000), and the effects of these beliefs on narrative text comprehension and interpretation were examined. The first study, involving 52 students in grade 11, showed that transaction beliefs positively affected text interpretation in the form of personal and thematic responses. Study 2, involving 202 students in grades 7 and 11, revealed the influence of transaction beliefs on text comprehension, thematic, and personal interpretative responses, and overall meaning construction. It also showed the positive effects of giving specific rather than <b>generic</b> <b>instructions</b> for the interpretative task. Moreover, grade level significantly affected text comprehension and interpretation. Finally, differences in student performances were also related to the type of high school they were enrolled in...|$|E
40|$|Pagode is an {{advanced}} back-end generator that produces automatically a code generator from a specification of the processor. Such a specification {{is easy to}} derive from the various documents provided by the processor manufacturer, without requiring any additional code-generation expertise. This paper mainly focuses on the generic aspects of the Pagode system which is open enough to integrate the most powerful algorithms corresponding to the various subtasks of the code generation process. This approach has been validated by {{the production of a}} C-SPARC compiler in the framework of an industrial technology. Contents 1 Introduction 2 2 A generic back-end 3 3 Generic engines using the processor specification 4 3. 1 The processor specification : : : : : : : : : : : : : : : : : : : : : : : : : : : : 4 3. 2 A <b>generic</b> <b>instruction</b> selector : : : : : : : : : : : : : : : : : : : : : : : : : : : 7 3. 3 A short example : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 7 3. 4 The gen [...] ...|$|R
40|$|Lattice-based {{structures}} {{provide a}} means of encoding information. This inherent property of information representation is utilized to design a metaphor for visualizing and analyzing a program, based on the structured nature of disassembled executable code. Beginning from a <b>generic</b> platform’s <b>Instruction</b> Set Architecture (ISA) and abstracting {{the manner in which}} instructions are combined to form a program, a generic representation of the flow of a program is created. This representation is then mapped onto a lattice-based structure for visualization. Once the visualization is rendered, the lattice structure is used to analyze a program’s disassembled code in order to extract potentially useful information for decision making...|$|R
40|$|Some {{children}} with Down syndrome may experience difficulties in recognising facial emotions, particularly fear, {{but it is}} not clear why, nor how such skills can best be facilitated. Using a photo-matching task, emotion recognition was tested in {{children with}} Down syndrome, children with non-specific intellectual disabilities and cognitively-matched typically-developing children (all groups N = 21) under four conditions: veridical vs exaggerated emotions and emotion-labelling vs <b>generic</b> task <b>instructions.</b> In all groups, exaggerating emotions facilitated recognition accuracy and speed, with emotion labelling facilitating recognition accuracy. Overall accuracy and speed did not differ in the children with Down syndrome, although recognition of fear was poorer than in the typically developing children and unrelated to emotion label use. Implications for interventions are considered...|$|R
40|$|This {{development}} {{research paper}} explores concepts associated with contribution behaviours. Contribution, in its simplest context occurs in organization settings where employees share knowledge with one another. Usually, this is {{preceded by a}} request for help from a colleague however; individuals may decide to contribute {{in the absence of}} help requests for example, by preparing a <b>generic</b> <b>instructions</b> document. Contribution can also be considered from the context of influencing decision-making within project teams for example decisions will always need to be made in relation to project schedules and deliverables. Individuals can directly contribute by influencing and participating in such decisions. In reviewing the literature to-date, contribution behaviors are intrinsically linked to concepts embedded in knowledge management, in particular knowledge sharing. Therefore the literature reviewed has explored some primary elements of knowledge management literature including tacit and explicit knowledge. Decision-making process activities (of awareness, searching and matching and formulation and delivery) involved in making contributions are also discussed...|$|E
40|$|The {{function}} {{of rules and}} instructions to facilitate, maintain or modify the behaviour of individuals has been widely explored in {{a great variety of}} tasks. Both rules and instructions, independently of the properties and characteristics that are attributed to them, can be seen as descriptions of the contingencies or the relations between several elements of a situation that the subject has faced or will face. The present study explored the effects of feedback density and presence or absence of <b>generic</b> <b>instructions</b> with respect to the response component on post-contact descriptions (i. e. rules) of sixteen university students, using a first order matching-to-sample task. Results were consistent with other studies in relation to the effects of instructional precision (i. e. high executions under precise instructions) and density of feedback. At the same time, the presence of a greater number of pertinent type post-contact descriptions was observed, contrary to previous research findings. Results suggest an effect of instructional precision and change in feedback density on post-contingency contact description...|$|E
40|$|To {{the extent}} that our {{response}} to an environmental dilemma (e. g., energy descent, climate disruption, soil depletion) benefits from being place-based, it becomes less appropriate to rely upon universal interventions. In fact, {{the need for a}} localized response greatly diminishes the very effectiveness of outside solutions. Citizens rarely benefit from <b>generic</b> <b>instructions.</b> And they certainly do not take kindly to being informed by experts about how they must behave in their local setting. In such situations, a competent and situation-aware expert will see that his or her role must change. Their new role involves, at most, suggesting guidelines for how citizens might craft their own response and creating a supportive setting for the ensuing process. The experts might then prepare themselves to answer the questions that arise as citizens ' begin to formulate their response. Certainly, the urgency and consequences remain, but the process of responding has changed. This new context may take some getting used to, primarily by the experts. A NEW PROCESS An approach to behavior change under conditions of great environmental uncertaint...|$|E
40|$|Writing {{is viewed}} as applied metacognition. Metacognition is conceptualised as a {{conscious}} use of strategies {{to carry out a}} process. By using planning as a central metacognitive tool, the researcher has examined the link between the quality of student writing and the use of a generic planning strategy. Participants were 11 -year-old students in mainstream classes at an intermediate school in New Zealand. Results indicate that there is a link. This link is discussed in terms of the cognitive construct of conditional knowledge. Conditional knowledge is defined as knowing why, when and where an action is necessary or useful. It is also explored as a social construct of roles and interactions between hypothetical selves. Recommendations are made for further exploration of <b>generic</b> planning <b>instruction.</b> Keywords: metacognition, writing, e-asTTle, planning, primar...|$|R
40|$|This study {{examined}} the effect of expHcitly instructing students to use a repertoire of reading comprehension strategies. Specifically, this {{study examined}} whether providing students with a "predictive story-frame" which combined the use of prediction and summarization strategies improved their reading comprehension relative to providing students with <b>generic</b> <b>instruction</b> on prediction and summarization. Results were examined in terms of instructional condition and reading ability. Students from 2 grade 4 classes participated in this study. The reading component of the Canadian Achievement Tests, Second Edition (CAT/ 2) was used to identify students as either "average or above average" or "below average" readers. Students received either strategic predication and summarization <b>instruction</b> (story-frame) or <b>generic</b> prediction and summarization instruction (notepad). Students were provided with new but comparable stories for each session. For both groups, the researcher modelled the strategic tools and provided guided practice, independent practice, and independent reading sessions. Comprehension was measured with an immediate and 1 -week delayed comprehension test {{for each of the}} 4 stories, hi addition, students participated in a 1 - week delayed interview, where they were asked to retell the story and to answer questions about the central elements (character, setting, problem, solution, beginning, middle, and ending events) of each story. There were significant differences, with medium to large effect sizes, in comprehension and recall scores as a fimction of both instructional condition and reading ability. Students in the story-frame condition outperformed students in the notepad condition, and average to above average readers performed better than below average readers. Students in the story-frame condition outperformed students in the notepad condition on the comprehension tests and on the oral retellings when teacher modelling and guidance were present. In the cued recall sessions, students in the story-frame instructional condition recalled more correct information and generated fewer errors than students in the notepad condition. Average to above average readers performed better than below average readers across comprehension and retelling measures. The majority of students in both instructional conditions reported that they would use their strategic tool again...|$|R
40|$|A {{flexible}} and programmable forwarding plane {{is essential to}} maximize the value of Software-Defined Networks (SDN). In this paper, we propose Protocol-Oblivious Forwarding (POF) as a key enabler for highly {{flexible and}} programmable SDN. Our goal is to remove any dependency on protocolspecific configurations on the forwarding elements and enhance the data-path with new stateful instructions to support genuine software defined networking behavior. A <b>generic</b> flow <b>instruction</b> set (FIS) is defined to fulfill this purpose. POF helps to lower network cost by using commodity forwarding elements and to create new value by enabling numerous innovative network services. We built both hardwarebased and open source software-based prototypes to demonstrate the feasibility and advantages of POF. We report the preliminary evaluation results and the insights we learnt from the experiments. POF is future-proof and expressive. We believe it represents a promising direction to evolve the OpenFlow protocol and the future SDN forwarding elements...|$|R
