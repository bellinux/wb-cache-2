8914|4489|Public
5|$|Alongside the Unix <b>File</b> <b>System,</b> {{which is}} {{typically}} the default <b>file</b> <b>system</b> on BSDs, DragonFly BSD supports HAMMER <b>file</b> <b>system.</b> It was developed specifically for DragonFly BSD {{to provide a}} feature-rich yet better designed analogue of the increasingly popular ZFS. HAMMER supports configurable <b>file</b> <b>system</b> history, snapshots, checksumming, data deduplication and other features typical for file systems of its kind.|$|E
5|$|Darwin, {{the core}} of Apple macOS, {{includes}} a virtual <b>file</b> <b>system</b> and network stack derived from the FreeBSD virtual <b>file</b> <b>system</b> and network stack, and components of its userspace are also FreeBSD-derived.|$|E
5|$|In 2007 DragonFly BSD {{received}} a new device <b>file</b> <b>system</b> (devfs), which dynamically adds and removes device nodes, allows accessing devices by connection paths, recognises drives by serial numbers and removes {{the need for}} pre-populated /dev <b>file</b> <b>system</b> hierarchy. It was implemented as a Google Summer of Code 2009 project.|$|E
5000|$|List of <b>file</b> <b>systems</b> ยง Distributed {{fault-tolerant}} <b>file</b> <b>systems</b> ...|$|R
5000|$|List of <b>file</b> <b>systems,</b> Distributed {{parallel}} fault-tolerant <b>file</b> <b>systems</b> section ...|$|R
5000|$|... <b>file</b> <b>systems</b> (many <b>file</b> <b>systems</b> {{use only}} 32 bits to {{represent}} times in inodes) ...|$|R
5|$|The <b>file</b> <b>system</b> {{approach}} allows Plan 9 {{processes to}} be managed with simple file management tools such as ls and cat; however, the processes cannot be copied and moved as files.|$|E
5|$|As Thompson began porting {{the game}} to the new system, {{he decided not to}} base the code on any of the {{existing}} software for the computer, and instead write his own. As a result, he implemented his own base code libraries for programs to use, including arithmetic packages and graphics subsystems. These initial subsystems were coded in assembly language on the GECOS system and assembled, then the output physically put on punched tapes to be carried over and inserted into the PDP-7. Thompson then wrote an assembler for the PDP-7 to avoid this laborious process. The game ran very slowly on the new machine, causing Thompson to branch out from there to design his own <b>file</b> <b>system</b> based on some ideas by Dennis Ritchie and Rudd Canaday, rooted in their experience with the Multics <b>file</b> <b>system,</b> with which he then ran Space Travel.|$|E
5|$|Encrypting <b>File</b> <b>System</b> (EFS) {{may be used}} in {{conjunction}} with BitLocker to provide protection once the operating system is running. Protection of the files from processes and users within the operating system can only be performed using encryption software that operates within Windows, such as EFS. BitLocker and EFS, therefore, offer protection against different classes of attacks.|$|E
40|$|Linux is {{a popular}} {{operating}} system that is rapidly evolving due to being Open Source and having many developers. The Linux kernel comes with {{more than two dozen}} <b>file</b> <b>systems,</b> all of which are native: they access device drivers directly. Native <b>file</b> <b>systems</b> are harder to develop. Stackable <b>file</b> <b>systems,</b> however, are easier to develop because they use existing <b>file</b> <b>systems</b> and interfaces...|$|R
50|$|In {{hierarchical}} <b>file</b> <b>systems,</b> <b>files</b> are {{accessed by}} means of a path that is a branching list of directories containing the <b>file.</b> Different <b>file</b> <b>systems</b> have different limits on the depth of the path. <b>File</b> <b>systems</b> also have a limit on the length of an individual filename.|$|R
5000|$|Expand and shrink volumes and <b>file</b> <b>systems</b> {{online or}} offline (depending on the <b>file</b> <b>system's</b> capabilities) ...|$|R
5|$|Furthermore, the kernel {{can keep}} {{separate}} mount tables for each process, and can thus provide each process {{with its own}} <b>file</b> <b>system</b> namespace. Processes' namespaces can be constructed independently, and the user may work simultaneously with programs that have heterogeneous namespaces. Namespaces {{may be used to}} create an isolated environment similar to chroot, but in a more secure way.|$|E
5|$|In 2010, some {{manufacturers}} (notably Samsung) introduced SSD controllers that extended {{the concept of}} BGC to analyze the <b>file</b> <b>system</b> used on the SSD, to identify recently deleted files and unpartitioned space. Samsung claimed that this would ensure that even systems (operating systems and SATA controller hardware) which do not support TRIM could achieve similar performance. The operation of the Samsung implementation appeared to assume and require an NTFS <b>file</b> <b>system.</b> It is not clear if this feature is still available in currently shipping SSDs from these manufacturers. Systematic data corruption has been reported on these drives {{if they are not}} formatted properly using MBR and NTFS.|$|E
5|$|In Plan 9, {{virtually}} all computing resources, including files, network connections, and peripheral devices, are represented through the <b>file</b> <b>system</b> rather than specialized interfaces. A unified network protocol called 9P ties {{a network of}} computers running Plan 9 together, allowing them to share all resources so represented.|$|E
25|$|Some <b>file</b> <b>systems</b> {{on a given}} {{operating}} <b>system</b> (especially <b>file</b> <b>systems</b> originally implemented {{on other}} operating systems), and particular applications on that operating system, may apply further restrictions and interpretations. See comparison of <b>file</b> <b>systems</b> for more details on restrictions.|$|R
40|$|A home <b>filing</b> <b>system</b> makes {{important}} papers {{readily available}} when needed. If managed properly, the <b>filing</b> <b>system</b> can get older papers {{out of the}} way, making needed records more accessible. A well-organized <b>filing</b> <b>system</b> for your household can pay big dividends {{when it comes time}} to find an important paper you need NOW. There is no one best <b>filing</b> <b>system</b> for everyone; what works for you could be a disaster for someone else. Once set up, a <b>filing</b> <b>system</b> helps you to be a more effective and efficient financial manager and decision maker...|$|R
50|$|In many situations, <b>file</b> <b>systems</b> {{other than}} the root need to be {{available}} {{as soon as the}} operating system has booted. All Unix-like systems therefore provide a facility for mounting <b>file</b> <b>systems</b> at boot time. System administrators define these <b>file</b> <b>systems</b> in the configuration file fstab (vfstab in Solaris), which also indicates options and mount points. In some situations, {{there is no need to}} mount certain <b>file</b> <b>systems</b> at boot time, although their use may be desired thereafter. There are some utilities for Unix-like systems that allow the mounting of predefined <b>file</b> <b>systems</b> upon demand.|$|R
5|$|Intended to be {{the logical}} {{continuation}} of the FreeBSD 4.x series, DragonFly's development has diverged significantly from FreeBSD's, including a new Light Weight Kernel Threads (LWKT) implementation, a lightweight ports/messaging system, and feature-rich HAMMER <b>file</b> <b>system.</b> Many concepts planned for DragonFly were inspired by the AmigaOS operating system.|$|E
5|$|Plan 9 {{supports}} the Kfs, Paq, Cwfs, FAT, and Fossil file systems. The last was designed at Bell Labs specifically for Plan 9 and provides snapshot storage capability. It {{can be used}} directly with a hard drive or backed with Venti, an archival <b>file</b> <b>system</b> and permanent data storage system.|$|E
5|$|The next {{generation}} of HAMMER <b>file</b> <b>system</b> (HAMMER2) is being developed by Dillon. DragonFly BSD 3.8.0 was the first released to include support for HAMMER2, though it is declared as not ready for general use in release notes.|$|E
40|$|The {{popularity}} of distributed <b>file</b> <b>systems</b> continues to grow. Reasons they are preferred over traditional centralized <b>file</b> <b>systems</b> include fault tolerance, availability, scalability and performance. In addition, Peer-to-Peer (P 2 P) system concepts and scalable functions are being {{incorporated into the}} domain of <b>file</b> <b>systems.</b> This survey paper explores the design paradigms and important issues that relate to such systems and discusses the various research activities {{in the field of}} Distributed Peer- to-Peer <b>file</b> <b>systems...</b>|$|R
5000|$|Cluster <b>file</b> <b>systems,</b> {{which are}} <b>file</b> <b>systems</b> that {{maintain}} data or indexes in a coherent fashion across a whole computing cluster; ...|$|R
40|$|Large scale {{traces of}} file sizes on <b>file</b> <b>systems</b> were {{collected}} and compared. The traces were compared using descriptive, explorative and inferential methods. The {{result of the}} study is, that the data on unix <b>file</b> <b>systems</b> has increased functionally over 10 years and that file sizes on windows <b>file</b> <b>systems</b> are structured differently. ...|$|R
5|$|Titan {{is due to}} be eclipsed at Oak Ridge by Summit in 2018, {{which is}} being built by IBM and {{features}} fewer nodes with much greater GPU capability per node {{as well as local}} per-node non-volatile caching of file data from the system's parallel <b>file</b> <b>system.</b>|$|E
5|$|On the {{hardware}} driver side, for instance the UniATA project provides Serial ATA drivers for ReactOS. The project has also experimented with using the FullFAT library in its rewrite of its FAT Installable <b>File</b> <b>System.</b> ReactOS {{makes use of}} the USB stack from Haiku both as a reference and {{as a foundation for}} its USB support. Mesa 3D provides OpenGL rendering.|$|E
5|$|Unlike its predecessor, Windows Server 2012 has {{no support}} for Itanium-based computers, and has four editions. Various {{features}} were added or improved over Windows Server 2008 R2 (with many placing {{an emphasis on}} cloud computing), such as {{an updated version of}} Hyper-V, an IP address management role, a new version of Windows Task Manager, and ReFS, a new <b>file</b> <b>system.</b> Windows Server 2012 received generally good reviews in spite of having included the same controversial Metro-based user interface seen in Windows 8.|$|E
50|$|Newer {{versions}} of macOS {{are capable of}} reading and writing to the legacy FAT <b>file</b> <b>systems</b> (16 & 32) common on Windows. They are also capable of reading the newer NTFS <b>file</b> <b>systems</b> for Windows. In order to write to NTFS <b>file</b> <b>systems</b> on macOS versions prior to Mac OS X Snow Leopard third party software is necessary. Mac OS X 10.6 (Snow Leopard) and later allow writing to NTFS <b>file</b> <b>systems,</b> but only after a non-trivial system setting change (third party software exists that automates this).|$|R
50|$|Some disk editors include special {{functions}} which enable {{more comfortable}} ways to edit and fix <b>file</b> <b>systems</b> or other disk specific data structures. Furthermore some include simple file browsers that can present the disk contents for partially corrupted <b>file</b> <b>systems</b> or <b>file</b> <b>systems</b> {{unknown to the}} operating system. These features {{can be used for}} example for file recovery.|$|R
5000|$|In many situations, <b>file</b> <b>systems</b> {{other than}} the root need to be {{available}} {{as soon as the}} operating system has booted. All Unix-like systems therefore provide a facility for mounting <b>file</b> <b>systems</b> at boot time. System administrators define these <b>file</b> <b>systems</b> in the configuration file fstab (vfstab in Solaris), which also indicates options and mount points.|$|R
5|$|Unlike {{most other}} {{operating}} systems, Plan 9 {{does not provide}} special application programming interfaces (such as Berkeley sockets, X resources or ioctl system calls) to access devices. Instead, Plan 9 device drivers implement their control interface as a <b>file</b> <b>system,</b> so that the hardware can be accessed by the ordinary file input/output operations read and write. Consequently, sharing the device across the network {{can be accomplished by}} mounting the corresponding directory tree to the target machine.|$|E
5|$|A path, which {{contains}} data, usually organized in hierarchical form, that {{appears as a}} sequence of segments separated by slashes. Such a sequence may resemble or map exactly to a <b>file</b> <b>system</b> path, but does not always imply a relation to one. The path must begin with a single slash (/) if an authority part was present, and may also if one was not, but must not begin with a double slash. The path is always defined, though the defined path may be empty (zero length), therefore no trailing slash.|$|E
5|$|According to {{developer}} Matthew Dillon, {{progress is}} being made to provide both device input/output (I/O) and virtual <b>file</b> <b>system</b> (VFS) messaging capabilities that will enable the remainder of the project goals to be met. The new infrastructure will allow many parts of the kernel to be migrated out into userspace; here they will be more easily debugged as they will be smaller, isolated programs, instead of being small parts entwined in a larger chunk of code. Additionally, the migration of select kernel code into userspace has the benefit of making the system more robust; if a userspace driver crashes, it will not crash the kernel.|$|E
50|$|A SAN {{does not}} provide file abstraction, only block-level operations. However, <b>file</b> <b>systems</b> built on top of SANs do provide file-level access, and are known as shared-disk <b>file</b> <b>systems.</b>|$|R
50|$|Several {{read-only}} <b>file</b> <b>systems</b> {{do not use}} blocks at all and {{are thus}} implicitly using space as efficiently as suballocating file systems; such <b>file</b> <b>systems</b> double as archive formats.|$|R
5000|$|Many {{improvements}} to the Anaconda installer; among these features, it now supports resizing ext2, ext3 and NTFS <b>file</b> <b>systems,</b> and can create and install Fedora to encrypted <b>file</b> <b>systems.</b>|$|R
