4|42|Public
5000|$|Added {{document}} types for fulfillment: Bill of Lading, Certificate of Origin, <b>Forwarding</b> <b>Instructions,</b> Packing List, Transportation Status, Waybill ...|$|E
40|$|International audienceExposing more instruction-level {{parallelism}} in out-of-order superscalar processors requires {{increasing the}} number of dynamic in-flight instructions. However, large instruction windows increase power consumption and latency in the issue logic. We propose a design called Hybrid Dataflow Graph Execution (HeDGE) for conventional Instruction Set Architectures (ISAs). HeDGE explicitly maintains dependences between instructions in the issue window by modifying the issue, register renaming, and wakeup logic. The HeDGE wakeup logic notifies only consumer instructions when data values arrive. Explicit consumer encoding naturally leads to the use of Random Access Memory (RAM) instead of Content Addressable Memory (CAM) needed for broadcast. HeDGE is distinguished from prior approaches in part because it dynamically inserts <b>forwarding</b> <b>instructions.</b> Although these additional instructions degrade performance by an average of 3 to 17 % for SPEC C and Fortran benchmarks and 1. 5 % to 8 % for DaCapo Java benchmarks, they enable energy efficient execution in large instruction windows. The HeDGE RAM-based instruction window consumes on average 98 % less energy than a conventional CAM as modeled in CACTI for 70 nm technology. In conventional designs, this structure contributes 7 to 20 % to total energy consumption. HeDGE allows us to achieve power and energy gains by using RAMs in the issue logic while maintaining a conventional instruction set...|$|E
5000|$|<b>Forward</b> looking <b>instructions</b> {{for time}} when Israel would demand a king.|$|R
40|$|Modern {{microprocessors}} schedule instructions dynamically {{in order}} to exploit instruction level parallelism. It is necessary to increase instruction window size for improving instruction scheduling capability. However, {{it is difficult to}} increase the size without any serious impact on processor performance, since the instruction window is one of the dominant deciding processor cycle time. The reason why the instruction window is critical is that it is realized using content addressable memory (CAM). In general, RAMs are faster in access time and lower in power dissipation than CAMs. Therefore, it is desirable to replace the CAM instruction window by the RAM instruction window. This paper proposes such an instruction window, named explicit data <b>forwarding</b> <b>instruction</b> window. Simulation results show that the proposed instruction window achieves comparable performance with the conventional instruction window, while it could benefit from a shorter cycle time...|$|R
6000|$|... "This wretched fellow sent Lord Wellington {{a letter}} {{dictated}} from his bed, {{in which he}} swore that the duel was forced upon him, and that his honour allowed him no alternative. I don't think any feature of the case has so deeply angered Lord Wellington as this stupid plea. He mentioned that when Sir John Moore was at Herrerias, {{in the course of}} his retreat upon Corunna, he sent <b>forward</b> <b>instructions</b> for the leading division to halt at Lugo, where he designed to deliver battle if the enemy would accept it. That dispatch was carried to Sir David Baird by one of Sir John's aides, but Sir David forwarded it by the hand of a trooper who got drunk and lost it. That, says Lord Wellington, is the only parallel, so far as he is aware, of the present case, with this difference, that whilst a common trooper might so far fail to appreciate the importance of his mission, no such lack of appreciation can excuse Captain Garfield." ...|$|R
40|$|The Karatsuba {{multiplication}} algorithm is an algorithm for computing {{the product of}} two natural numbers represented in the binary number system. This means that the algorithm actually computes a function on bit strings. The restriction of this function to bit strings of any given length can be computed according to the Karatsuba {{multiplication algorithm}} by a finite instruction sequence that contains only instructions to set and get the content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. We describe the instruction sequences concerned for the restrictions to bit strings of the different lengths by uniform terms from an algebraic theory...|$|R
40|$|In program algebra, an {{algebraic}} {{theory of}} single-pass instruction sequences, three congruences on instruction sequences are paid attention to: instruction sequence congruence, structural congruence, and behavioural congruence. Sound and complete axiom {{systems for the}} first two congruences were already given in early papers on program algebra. The current paper is the first one that is concerned with an axiom system for the third congruence. The presented axiom system is especially notable for its axioms {{that have to do with}} <b>forward</b> jump <b>instructions.</b> Comment: 19 pages, this paper draws somewhat from the preliminaries of arXiv: 1502. 00238 [cs. PL] and some earlier papers; some remarks added and some remarks reformulate...|$|R
40|$|The {{purpose of}} this study is to discuss the modifications, and its {{effective}} significance of cardiopulmonary resuscitation(CPR) and automated external defibrillator (AED) in 2010 American Heart Association Guidelines for CPR and ECC(Emergency Cardiac Care). The guidelines for CPR and ECC have been modified at five year intervals by the AHA. The significance of those made in 2000, 2005 and 2010 will be considered here. To more effectively carry <b>forward</b> the <b>instruction</b> of CPR and AED to the general public according to the guidelines 2010 (G 2010), it is very valuable to show the contents of the modifications in G 2010 by means of pictorial models...|$|R
50|$|With <b>forwarding</b> enabled, the <b>Instruction</b> Decode/Execution (ID/EX) {{stage of}} the {{pipeline}} now has two inputs: the value read from the register specified (in this example, the value 6 from Register 1), and the new value of Register 1 (in this example, this value is 3) which is sent from the next stage Instruction Execute/Memory Access (EX/MEM). Added control logic is used to determine which input to use.|$|R
40|$|The secure hash {{function}} SHA- 256 {{is a function}} on bit strings. This means that its restriction to the bit strings of any given length can be computed by a finite instruction sequence that contains only instructions to set and get the content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. We describe such instruction sequences for the restrictions to bit strings of the different possible lengths by means of uniform terms from an algebraic theory. Comment: 14 pages; several minor errors corrected; counting error corrected; instruction sequence fault repaired; misunderstanding cleared up; a minor error corrected; 15 pages, presentation improved, a minor error corrected. preliminaries have text overlap with arXiv: 1301. 329...|$|R
40|$|Cornelia de Lange {{syndrome}} (CdLS) is a {{well known}} malformation syndrome for which five causative genes are known, accounting for ∼ 55 - 65 % of cases. In this study, we hypothesised that mosaicism might {{explain some of the}} ∼ 35 - 45 % of cases without detectable mutation in DNA derived from lymphocytes; we investigated the frequency of NIPBL mutations in buccal cells in individuals negative for mutations in any of the five genes in lymphocytes; and we evaluated the efficiency of obtaining DNA from buccal swabs and the best strategy for optimal mutation detection in CdLS. Buccal swabs were obtained from eight mutation positive and 13 mutation negative individuals with clinically diagnosed CdLS, following informed consent. We then <b>forwarded</b> <b>instructions</b> and a single mouth swab to the families; if subsequently insufficient DNA was obtained, we re-sent two mouth swabs. Buccal cells were screened for NIPBL mutations using Sanger sequencing techniques. Sufficient DNA for analysis was obtained in 21 / 22 individuals. In all six tested individuals with a known NIPBL mutation and in two with a known SMC 1 A mutation, the mutation was confirmed in buccal cells. In 10 of the 13 tested individuals without detectable mutation in lymphocytes a NIPBL mutation could be detected in buccal cells. Clinically {{there were no significant differences}} between patients with a germline and mosaic NIPBL mutation. Somatic mosaicism for an NIPBL mutation is frequent (10 / 44; 23 %) clinically in reliably diagnosed CdLS individuals. Obtaining buccal swabs at the time a blood sample is obtained will facilitate adequate molecular analysis of clinically diagnosed CdLS patient...|$|R
50|$|Debuting in 1961, Fordham {{played as}} a half back flanker and {{follower}} {{during the early}} stages of his career. It was later in the 1964 season that he moved to full <b>forward,</b> under the <b>instruction</b> of John Coleman. He helped Essendon win the premiership the following season with six goals in the preliminary final and then kicked a record-equalling seven goals in the grand final against St Kilda.|$|R
40|$|Every partial {{function}} from bit strings {{of a given}} length to bit strings of a possibly different given length can be computed by a finite instruction sequence that contains only instructions to set and get the content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. We look for an equivalence relation on instruction sequences of this kind that captures to a reasonable degree the intuitive notion that two instruction sequences express the same algorithm. Comment: 27 pages, the preliminaries have textual overlaps with the preliminaries in arXiv: 1308. 0219 [cs. PL], arXiv: 1312. 1529 [cs. PL], and arXiv: 1312. 1812 [cs. PL]; 27 pages, three paragraphs about Milner's algorithmic equivalence hypothesis added to concluding remarks; 26 pages, several minor improvements of the presentation mad...|$|R
40|$|In education, the {{application}} of information and communications technology is rising. Virtual classrooms have become an indispensable part of education and can be applied in different ways – {{with the help of}} online learning management systems (LMS) or content management systems (CMS). In the following thesis, the establishment of a new website with open source system CMS Drupal will be introduced. The website is intended for the professors of the subject “Didactics of Technology” at the Faculty of Education. Nevertheless, the process of establishing may serve other professors as well. At the beginning of thesis, the LMS and CMS systems will be introduced, followed by a short history and characteristics of CMS Drupal. In order to understand Drupal, the installation of virtual web server XAMPP and the installation of Drupal on it need to be explained. The presentation of functioning of Drupal and of key procedures needed for editing a website (installing the module, creating new content, etc.) will follow shortly after. The central part of the thesis concerns the establishment of a website with the aim of using it within practical pedagogic training (PPT), which belongs to the content of didactics of technology. In respective chapters and subchapters, each of the forms of PPT used in didactics of technology (visits, performances, teaching practice) will be presented, as well as the existing methods of <b>forwarding</b> the <b>instructions</b> and documents to the students, submitting the study material and registering for individual forms of PPT. In the conclusion of the thesis, room for improvement of existing methods of <b>forwarding</b> the <b>instructions,</b> submitting the study material and registering for visits, performances and teaching practice will be summed up. The list of used modules, the list of new types of content and key procedures needed to be applied while upgrading a website will be tackled as well. ...|$|R
30|$|SDN {{has been}} {{primarily}} introduced for datacenter usage, aiming to deliver flexibility in network deployment, operation, and management [13]. The rationale behind SDN is twofold: it separates the data plane {{from the control}} plane and it introduces novel network control functionality based on abstract network representation. The control decisions are removed from the hardware, and the network intelligence is logically centralized. Network management and operation are simplified through SDN, as <b>forwarding</b> and routing <b>instructions</b> are configured by SDN controllers.|$|R
40|$|Small {{area and}} code size are two {{critical}} design issues {{in most of}} embedded system designs. In this paper, we tackle these issues by customizing <b>forwarding</b> networks and <b>instruction</b> encoding schemes for multi-pipe Application Specific Instruction-Set Processors (ASIPs). Forwarding is a popular technique to reduce data hazards in the pipeline to improve performance and is applied in almost all modern processor designs; {{but it is very}} area expensive. Instruction encoding schemes have a direct impact on code size; an efficient encoding method can lead to a small instruction width, and hence reducing the code size. We propose application specific techniques to reduce <b>forwarding</b> networks and <b>instruction</b> widths for ASIPs with multiple pipelines. By these design techniques, it is possible to reduce area, code size, and even power consumption (due to reduced area), without costing any performance. Our experiments, on a set of benchmarks using the proposed customization approaches show that, on average, there are 27 % savings on area, 30 % on leakage power, 16. 7 % on code size, and at the same time, performance even improves by 4 % because of the reduced clock period...|$|R
40|$|High {{performance}} architectures {{have always}} {{had to deal with}} the performance-limiting impact of branch operations. Microprocessor designs are going to have to deal with this problem as well, as they move towards deeper pipelines and support for multiple instruction issue. Branch prediction schemes are often used to alleviate the negative impact of branch operations by allowing the speculative execution of instructions after an unresolved branch. Another technique is to eliminate branch instructions altogether. Predication can remove <b>forward</b> branch <b>instructions</b> by translating the instructions following the branch into predicate form. This paper analyzes a variety of existing predication models for eliminating branch operations, and the effect that this elimination has on the branch prediction schemes in existing processors, including single issue architectures with simple prediction mechanisms, to the newer multi-issue designs with correspondingly more sophisticated branch predictors. T [...] ...|$|R
40|$|For each {{function}} on bit strings, its restriction to bit {{strings of}} any given length can be computed by a finite instruction sequence that contains only instructions to set and get the content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. Backward jump instructions are not necessary for this, but instruction sequences can be significantly shorter with them. We take the function on bit strings that models the multiplication of natural numbers on their representation in the binary number system to demonstrate this {{by means of a}} concrete example. The example is reason to discuss points concerning the halting problem and the concept of an algorithm. Comment: 17 pages, the preliminaries are about the same as the preliminaries in arXiv: 1308. 0219 [cs. PL] and arXiv: 1312. 1529 [cs. PL]; minor errors corrected, references added; section on indirect addressing adde...|$|R
40|$|Relentless CMOS scaling {{coupled with}} lower design {{tolerances}} is making ICs increasingly susceptible to wear-out related permanent faults and transient faults, necessitating on-chip fault tolerance in future chip microprocessors (CMPs). In this paper we {{introduce a new}} energy-efficient fault-tolerant CMP architecture known as Redundant Execution using Critical Value Forwarding (RECVF). RECVF is based on two observations: (i) <b>forwarding</b> critical <b>instruction</b> results from the leading to the trailing core enables the latter to execute faster, and (ii) this speedup can be exploited to reduce energy consumption by operating the trailing core at a lower voltage-frequency level. Our evaluation shows that RECVF consumes 37 % less energy than conventional dual modular redundant (DMR) execution of a program. It consumes only 1. 26 times the energy of a nonfault- tolerant baseline and has a performance overhead of just 1. 2 %...|$|R
25|$|This step {{had been}} {{followed}} by one even more significant. Without consulting his ordinary advisers, Alexander ordered the Minister of the Interior to send a circular to the provincial governors of European Russia (serfdom was rare in other parts), containing {{a copy of the}} <b>instructions</b> <b>forwarded</b> to the Governor-General of Lithuania, praising the supposed generous, patriotic intentions of the Lithuanian landed proprietors, and suggesting that perhaps the landed proprietors of other provinces might express a similar desire. The hint was taken: in all provinces where serfdom existed, emancipation committees were formed.|$|R
40|$|We {{introduce}} an algebra {{of instruction}} sequences by presenting a semigroup C in which {{programs can be}} represented without directional bias: {{in terms of the}} next instruction to be executed, C has both <b>forward</b> and backward <b>instructions</b> and a C-expression can be interpreted starting from any instruction. We provide equations for thread extraction, i. e. C’s program semantics, and we distinguish behavioral equivalence and congruence. Then we consider thread extraction compatible (anti-) homomorphisms and (anti-) automorphisms. Finally we axiomatize structural congruence under which we can exclude chained jumps and discuss some expressiveness results. ...|$|R
50|$|This step {{had been}} {{followed}} by one even more significant. Without consulting his ordinary advisers, Alexander ordered the Minister of the Interior to send a circular to the provincial governors of European Russia (serfdom was rare in other parts), containing {{a copy of the}} <b>instructions</b> <b>forwarded</b> to the Governor-General of Lithuania, praising the supposed generous, patriotic intentions of the Lithuanian landed proprietors, and suggesting that perhaps the landed proprietors of other provinces might express a similar desire. The hint was taken: in all provinces where serfdom existed, emancipation committees were formed.|$|R
40|$|Each Boolean {{function}} can be computed by a single-pass {{instruction sequence}} that contains only instructions to set {{and get the}} content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. Auxiliary Boolean registers are not necessary for this. In the current paper, we show that, {{in the case of}} the parity functions, shorter instruction sequences are possible with the use of an auxiliary Boolean register in the presence of instructions to complement the content of auxiliary Boolean registers. This result supports, in a setting where programs are instruction sequences acting on Boolean registers, a basic intuition behind the storage of auxiliary data, namely the intuition that this makes possible a reduction of the size of a program. Comment: 12 pages, the preliminaries are largely the same as the preliminaries in arXiv: 1312. 1812 [cs. PL] and some earlier papers; 13 pages, minor errors corrected; 13 pages, presentation improved; 14 pages, remarks about related work added; 14 pages, presentation improve...|$|R
50|$|Addressing modes {{also include}} implied (1 byte instructions); {{absolute}} (3 bytes); indexed absolute (3 bytes); indexed zero-page (2 bytes); relative (2 bytes); accumulator (1); indirect,x and indirect,y (2); and immediate (2). Absolute mode is a general-purpose mode. Branch instructions use a signed 8-bit offset {{relative to the}} instruction after the branch; the numerical range -128..127 therefore translates to 128 bytes backward and 127 bytes <b>forward</b> from the <b>instruction</b> following the branch (which is 126 bytes backward and 129 bytes forward {{from the start of}} the branch instruction). Accumulator mode uses the accumulator as an effective address, and does not need any operand data. Immediate mode uses an 8-bit literal operand.|$|R
40|$|The present article {{deals with}} the {{definitions}} of art included in <b>instructions</b> <b>forwarded</b> to travellers. Such texts {{date back to the}} sixteenth century and were not only applied widely in Europe but subsequently in North America too. During the eighteenth century they began to adopt an increasingly academic character. This study focuses on the Questionnaire de Sociologie et d’Ethnographie of 1883 which in France marked a transition point from physical anthropology to cultural anthropology. The Questionnaire de Sociologie et d’Ethnographie contains a separate section dedicated to the fine arts. The main objective is to analyse the definitions of art in the Questionnaire. The final part of the article {{deals with the}} answers...|$|R
50|$|The regiment's {{officers}} held {{an informal}} media {{on what to}} do with the fused silver and decided to construct a legacy trophy in the form of a punch bowl. Before the regiment departed Beijing, Chinese silversmiths constructed 52 cups from a part of the silver. After the regiment returned to the Philippines in April 1902, the remainder of the fused silver was sent to Yokohama, Japan, care of Arthur & Bond Company, a fine arts gallery and manufacturer that catered mainly to foreigners and English expatriates. Japanese silversmiths working for the company spent eight months creating the ornate bowl, the ladle and the circular tray, based on the specific <b>instructions</b> <b>forwarded</b> by the regiment.|$|R
50|$|The 56th Training Squadron trains {{almost half}} of the United States Air Force's new fighter pilots each year. It {{provides}} academic and ground training for pilots transitioning into the General Dynamics F-16 Fighting Falcon at Luke Air Force Base, and at the Papago Park military reservation in Phoenix, Arizona. Courses provided by the unit include initial instruction, transition courses, senior officer courses, Thunderbird/aggressor pilot <b>instruction,</b> <b>forward</b> air control, night systems and F-16 Block 50 specialized conversion courses. It also provides academic, simulator and live mission training for upgrading weapons directors. It establishes quality control of training materials and manages all international military student affairs and aircrew training devices for the 56th Fighter Wing.|$|R
60|$|October 15th. Having {{sent the}} coolies <b>forward,</b> with <b>instructions</b> to halt and camp {{on this side}} of the Kongra Lama pass, we {{followed}} them, taking the route by Palung, and thence over the hills to the Lachen, to the east of which we descended, and further up its valley joined the advanced party in a rocky glen, called Sitong, an advantageous camping ground, from being sheltered by rocks which ward off the keen blasts: its elevation is 15,370 feet above the sea, and the magnificent west cliff of Kinchinjhow towers over it not a mile distant, bearing due east, and subtending an angle of 24.3 degrees. The afternoon was misty, but at 7 p.m. the south-east wind fell, and was immediately succeeded by the biting north return current, which dispelled the fog: hoar-frost sparkled on the ground, and the moon shone full on the snowy head of Kinchinjhow, over which the milky-way and the broad flashing orbs of the stars formed a jewelled diadem. The night was very windy and cold, though the thermometer fell no lower than 22 degrees, that placed in a polished parabolic reflector to 20 degrees, and another laid on herbage to 17.5 degrees.|$|R
40|$|Researchers have {{proposed}} clustered microarchitectures {{to capture the}} benefits of high 	performance and high energy efficiency. Typically, clustered microarchitectures 	offer fast local bypasses (i. e., value <b>forwarding</b> between <b>instructions)</b> within 	clusters and require global bypasses to take longer, more than one cycle. With communication locality (i. e., 	most communication is within the clusters) the clustered designs capture the benefits of both 	improved instructions per cycle and increased clock-frequency. Traditional clustered 	microarchitectures are implemented by partitioning the register file and associated 	functional units to clusters. In this work, an alternate technique is demonstrated 	 [...] Incomplete bypassing [...] to achieve similar clustering. Incomplete bypass based 	clustering is similar to traditional clustering in that it creates groups of 	functional units where intra-group communication occurs within a single cycle 	over fast bypass wires and inter-group communication takes longer, more than one cycle. 	One key difference is that in traditional clustered microarchitectures, inter-cluster communication 	takes place over the global buses whereas incomplete bypass designs achieve inter-group 	communication via the register file. It is demonstrated that incomplete bypass based 	clustered micro-architecture achieves higher performance (10 % speedup) and better 	energy efficiency than traditional clustered microarchitectures...|$|R
500|$|Dr. Derek Shepherd (Patrick Dempsey) and Dr. Richard Webber (James Pickens, Jr.) finish Dr. Preston Burke's (Isaiah Washington) {{surgery to}} remove a pseudo-aneurysm in the subclavian artery that {{threatened}} the functioning of his arm and which {{was caused by a}} gunshot wound. At the same time, Dr. Erica Hahn (Brooke Smith) successfully transplants a heart into Denny Duquette (Jeffrey Dean Morgan). The interns face Webber, who orders them to plan a prom for his dying niece, Camille Travis (Tessa Thompson), until the one who cut Duquette's left ventricular assist device (LVAD) comes <b>forward.</b> With the <b>instructions</b> of Camille's friends, Claire (Hallee Hirsh) and Natalie (Tiffany Hines), they prepare the prom as they each struggle with their own personal problems. Trying to recover from his injury, Burke finds a tremor in his right hand.|$|R
2500|$|Independent {{analyses}} of the documents {{by a number of}} U.S. academics and journalists have challenged the Colombian interpretation of the documents, accusing the Colombian government of exaggerating their contents. According to Greg Palast, the claim about Chavez's $300 million is based on the following (translated) sentence: [...] "With relation to the 300, which from now on we will call 'dossier', efforts are now going <b>forward</b> at the <b>instructions</b> of the cojo , which I will explain in a separate note." [...] The separate note is allegedly speaking of a hostage exchange with the FARC that Chavez was supposedly helping to negotiate at that time. Palast suggests that the [...] "300" [...] is supposedly a reference to [...] "300 prisoners" [...] (the number involved in a FARC prisoner exchange) and not [...] "300 million".|$|R
5000|$|Dr. Derek Shepherd (Patrick Dempsey) and Dr. Richard Webber (James Pickens, Jr.) finish Dr. Preston Burke's (Isaiah Washington) {{surgery to}} remove a pseudo-aneurysm in the subclavian artery that {{threatened}} the functioning of his arm and which {{was caused by a}} gunshot wound. At the same time, Dr. Erica Hahn (Brooke Smith) successfully transplants a heart into Denny Duquette (Jeffrey Dean Morgan). The interns face Webber, who orders them to plan a prom for his dying niece, Camille Travis (Tessa Thompson), until the one who cut Duquette's left ventricular assist device (LVAD) comes <b>forward.</b> With the <b>instructions</b> of Camille's friends, Claire (Hallee Hirsh) and Natalie (Tiffany Hines), they prepare the prom as they each struggle with their own personal problems. Trying to recover from his injury, Burke finds a tremor in his right hand.|$|R
5000|$|Independent {{analyses}} of the documents {{by a number of}} U.S. academics and journalists have challenged the Colombian interpretation of the documents, accusing the Colombian government of exaggerating their contents. According to Greg Palast, the claim about Chavez's $300 million is based on the following (translated) sentence: [...] "With relation to the 300, which from now on we will call 'dossier', efforts are now going <b>forward</b> at the <b>instructions</b> of the cojo term for 'cripple', which I will explain in a separate note." [...] The separate note is allegedly speaking of a hostage exchange with the FARC that Chavez was supposedly helping to negotiate at that time. Palast suggests that the [...] "300" [...] is supposedly a reference to [...] "300 prisoners" [...] (the number involved in a FARC prisoner exchange) and not [...] "300 million".|$|R
40|$|For each {{function}} on bit strings, its restriction to bit {{strings of}} any given length can be computed by a finite instruction sequence that contains only instructions to set and get the content of Boolean registers, <b>forward</b> jump <b>instructions,</b> and a termination instruction. We describe instruction sequences of this kind that compute the function on bit strings that models multiplication on natural numbers less than $ 2 ^N$ {{with respect to their}} binary representation by bit strings of length $N$, for a fixed but arbitrary $N > 0 $, according to the long multiplication algorithm and the Karatsuba multiplication algorithm. We find among other things that the instruction sequence expressing the former algorithm is longer than the one expressing the latter algorithm only if the length of the bit strings involved is greater than $ 2 ^ 8 $. We also go into the use of an instruction sequence with backward jump instructions for expressing the long multiplication algorithm. This leads to an instruction sequence that it is shorter than the other two if the length of the bit strings involved is greater than $ 2 $. Comment: 14 pages, the preliminaries of this paper and arXiv: 1308. 0219 are the same; 16 pages, results sharpened and presentation improved; 22 pages, combined with arXiv: 1312. 181...|$|R
40|$|Abstract. This paper {{proposes a}} corpus-based {{study of how}} texts guide readers through time. It focuses on sentence-initial {{temporal}} expressions which, beyond locating an event in time, take on a discourse dimension via the process of “indexing”: contrary to connection, which looks backward towards previous text, indexing, {{also referred to as}} “discourse framing”, looks <b>forward</b> and provides <b>instructions</b> for the interpretation of forthcoming text. As a first step towards an investigation of the impact of genre on temporal framing, our French language corpus is constructed according to the most crucial distinction regarding temporality: narrative/non-narrative. The non-narrative sub-corpus provides archetypal examples of text organisation through temporal framing. Narrative texts on the other hand, because of the interaction between framing and another major mode of temporal organisation – through the Narration relation – resist the indexing model and therefore force us to refine the notions...|$|R
40|$|This paper aims at {{contributing}} to the ongoing debate on how to bring programmability of stateful packet processing tasks inside the network switches, while retaining platform independency. Our proposed approach, named "Open Packet Processor" (OPP), shows the viability (via an hardware prototype relying on commodity HW technologies and operating in a strictly bounded number of clock cycles) of eXtended Finite State Machines (XFSM) as low-level data plane programming abstraction. With the help of examples, including a token bucket and a C 4. 5 traffic classifier based on a binary tree, we show the ability of OPP to support stateful operation and flow-level feature tracking. Platform independence is accomplished by decoupling the implementation of hardware primitives (registries, conditions, update <b>instructions,</b> <b>forwarding</b> actions, matching facilities) from their usage by an application formally described via an abstract XFSM. We finally discuss limitations and extensions...|$|R
