0|10000|Public
5000|$|<b>Installation</b> <b>instructions</b> <b>for</b> GCC + MMIX tools by Hans-Peter Nilsson.|$|R
5000|$|Zsun WiFi Card Reader - hacked by {{installing}} OpenWRT, {{and there are}} efforts to produce easy <b>installation</b> <b>instructions</b> <b>for</b> PirateBox on this device.|$|R
40|$|This {{document}} contains <b>installation</b> <b>instructions</b> <b>for</b> the Debian GNU/Linux 3. 0 system, for the SPARC (“sparc”) architecture. It {{also contains}} pointers to {{more information and}} {{information on how to}} make the most of your new Debian system. The procedures in this document are not to be used for users upgrading existing systems; if you are upgrading, see the Release Notes fo...|$|R
40|$|The goal of {{this project}} was to design a {{pipeline}} that could be installed to replace an existing drain in West Stanislaus Irrigation District. The pipeline would give the district the ability to divert drain water back into their delivery system or send water down the existing drain. The design attempted to use pipe and material the district already has and provided construction drawings and <b>installation</b> <b>instructions</b> <b>for</b> the construction of this design in the future...|$|R
40|$|Sherpa. In the tutorial, we {{specify a}} simple {{extension}} of the Standard Model, {{at the level of}} a Lagrangian. The software tools are then used to automatically generate a set of Feynman rules, compute the invariant matrix element for a sample process, and generate both parton-level and fully hadronized/showered Monte Carlo event samples. The tutorial is designed to be self-paced, and detailed <b>instructions</b> <b>for</b> all steps are included in this write-up. <b>Installation</b> <b>instructions</b> <b>for</b> each tool on a variety of popular platforms are also provided. ar X i...|$|R
40|$|CAIA has {{traditionally}} provided OpenOffice templates to generate Technical Report formatted papers. This approach has limitations, modifying an existing Technical Report for submission {{to a conference}} of journal can be time consuming. LATEX {{on the other hand}} provides consistent generation of formatted documents direct to PDF output and simple modification to new formats. In this paper we present the <b>installation</b> <b>instructions</b> <b>for</b> the CAIA Technical Report LATEX Class files on a FreeBSD based system and pointers for generating CAIA Technical Reports...|$|R
50|$|The {{installation}} {{requires a}} CPU with Physical Address Extensions (PAE), which indicates an Intel Pentium Pro and newer CPU, except most 400 MHz-bus {{versions of the}} Pentium M. In the case of PowerPCs, it was tested on a PowerPC G4 running at 867 MHz with 640 MB RAM and will also run on all Intel-based Apple Macs. There is also a version that supports the ARM architecture, but the developers currently only provide <b>installation</b> <b>instructions</b> <b>for</b> one ARM-based device (the Toshiba AC100 netbook).|$|R
40|$|This {{document}} contains <b>installation</b> <b>instructions</b> <b>for</b> the Debian GNU/Linux 7. 0 system (codename “wheezy”), for the SPARC (“sparc”) architecture. It {{also contains}} pointers to {{more information and}} {{information on how to}} make the most of your new Debian system. Note: Although this installation guide for sparc is mostly up-to-date, we plan to make some changes and reorganize parts of the manual after the official release of wheezy. A newer version of this manual may be found on the Internet at the debian-installer home pag...|$|R
5000|$|... openSUSE 10.3 was {{the first}} version of openSUSE to run on the Sony PlayStation 3 platform. openSUSE is a free version of SUSE Linux, which is owned by Novell. There are PlayStation 3 {{specific}} <b>installation</b> <b>instructions</b> available <b>for</b> openSUSE.|$|R
40|$|MP is {{a package}} of ANSI Standard Fortran (ANS X 3. 9 - 1966) subroutines for {{performing}} multiple-precision floating-point arithmetic and evaluating elementary and special functions. The subroutines are machine independent and the precision is arbitrary, subject to storage limitations. The User's Guide describes the routines and their calling sequences, example and test programs, use of the Augment precompiler, and gives <b>installation</b> <b>instructions</b> <b>for</b> the package. Comment: MP Users Guide (fourth edition), 73 pages. A technical report that was not published elsewhere, submitted for archival purposes. For further information see [URL]...|$|R
40|$|In this {{document}} {{we describe the}} implementation of the SUPERCLOUD architecture. The architecture provides an abstraction layer on top of which SUPERCLOUD users can realize SUPERCLOUD services encompassing secure computation workloads, secure and privacy-preserving resilient data storage and secure networking resources spanning across different cloud service providers' computation, data storage and network resources. The components of the SUPERCLOUD architecture implementation are described. Integration between the different layers of the architecture (computing security, data protection, network security) and with the facilities for security self-management is also highlighted. Finally, we provide download and <b>installation</b> <b>instructions</b> <b>for</b> the released software components that can be downloaded from our common SUPERCLOUD code repository...|$|R
40|$|This is {{a written}} {{account of the}} {{computer}} tutorial offered at the Sixth MC 4 BSM workshop at Cornell University, March 22 - 24, 2012. The tools covered during the tutorial include: FeynRules, LanHEP, MadGraph, CalcHEP, Pythia 8, Herwig++, and Sherpa. In the tutorial, we specify a simple extension of the Standard Model, {{at the level of}} a Lagrangian. The software tools are then used to automatically generate a set of Feynman rules, compute the invariant matrix element for a sample process, and generate both parton-level and fully hadronized/showered Monte Carlo event samples. The tutorial is designed to be self-paced, and detailed <b>instructions</b> <b>for</b> all steps are included in this write-up. <b>Installation</b> <b>instructions</b> <b>for</b> each tool on a variety of popular platforms are also provided. Comment: 58 pages, 1 figur...|$|R
5000|$|Version 5.2 of Windows Media Player {{would remove}} the ActiveMovie Control icon from the Start Menu upon <b>installation.</b> Microsoft {{provided}} <b>instructions</b> <b>for</b> reinstalling the icon on its website.|$|R
40|$|The archive {{contains}} a LAMMPS input script, equilibrated structures, and C++ source files {{to reproduce the}} temperature and density profiles shown in the publication, {{as well as the}} discrete NEMD trajectory for further post-processing. The updated C++ source files can be compiled with LAMMPS (9 Dec 14), which is freely available for download on the LAMMPS homepage. Detailed download and <b>installation</b> <b>instructions</b> <b>for</b> LINUX {{can be found in the}} INSTALL file. The archive also {{contains a}} README file with a brief summary. Information on copyrights can be found in the file COPYING. This record is licensed under a GNU GPLv 3 licence. Austrian Academy of SciencesFederation of Austrian Industry (IV) CarinthiaUniversity of ZagrebErasmus SMPHuman Frontier Science ProgramEmmanuel CollegeAustrian Science Fund FW...|$|R
40|$|This {{document}} contains <b>installation</b> <b>instructions</b> <b>for</b> the Debian GNU/Linux 7. 0 system (codename “wheezy”), for the S/ 390 (“s 390 ”) architecture. It {{also contains}} pointers to {{more information and}} {{information on how to}} make the most of your new Debian system. Warning This installation guide is based on an earlier manual written for the old Debian installation system (the “bootfloppies”), and has been updated to document the new Debian installer. However, for s 390, the manual has not been fully updated and fact checked for the new installer. There may remain parts of the manual that are incomplete or outdated or that still document the boot-floppies installer. A newer version of this manual, possibly better documenting this architecture, may be found on the Internet at the debian-installer home pag...|$|R
40|$|Information {{necessary}} for the operation and maintenance of the Model 600 F Data Transmission Test Set is presented. A description is contained of the physical and functional characteristics; pertinent <b>installation</b> data; <b>instructions</b> <b>for</b> operating the equipment; general and detailed principles of operation; preventive and corrective maintenance procedures; and block, logic, and component layout diagrams of the equipment and its major component assemblies...|$|R
40|$|This report {{contains}} the <b>installation</b> <b>instructions</b> <b>for</b> the Nuclear Plant Analyzer (NPA) System. The NPA System {{consists of the}} Computer Visual System (CVS) program, the NPA libraries, the associated utility programs. The NPA was developed at the Idaho National Engineering Laboratory under the sponsorship of the US Nuclear Regulatory Commission to provide a highly flexible graphical user interface for displaying {{the results of these}} analysis codes. The NPA also provides the user with a convenient means of interactively controlling the host program through user-defined pop-up menus. The NPA was designed to serve primarily as an analysis tool. After a brief introduction to the Computer Visual System and the NPA, an analyst can quickly create a simple picture or set of pictures to aide in the study of a particular phenomenon. These pictures can range from simple collections of square boxes and straight lines to complex representations of emergency response information displays...|$|R
40|$|A set of {{scripts and}} tools for the {{analysis}} of viral NGS data. More detailed documentation can be found at [URL] This includes <b>installation</b> <b>instructions,</b> usage <b>instructions</b> <b>for</b> the command line tools, and usage of the pipeline infrastructure. v. 1. 13. 3 Release Notes Fixed: 	the vphaser 2 step is now hardened against empty input resulting from removal of doubly-mapped reads; in such cases, a blank vphaser output file is now created, allowing the pipeline to continu...|$|R
40|$|Bachelor thesis in {{the first}} chapter deals {{with the concept of}} quality of {{electric}} power and its parameters. The next chapter is focused on systems that used remote data collection and the current direction of evolution of these systems. The third of the thesis discusses the symmetric and asymmetric cryptographic systéme and their main representatives. The asymmetric system is described by the principle of calculating RSA and Diffie–Hellman. The next part deals with selected libraries that can count large numbers. Through the establishment of key using the Diffie–Hellman with these libraries. The evaluation of the used library in terms of speed, number of elementary cycles and memory consumption is inculded in the chapter 5. The last chapter explains the optimization focused on Ultra-Low Power MCU and shown Montgomery multiplication and squaring. It describes in detail the procedure of calculation and described why is his calculation faster than conventional modular multiplication and exponentiation. The appendix include <b>installation</b> <b>instructions</b> <b>for</b> the libraries BigDigits, GMP and OpenSSL in Visual Studio 2010...|$|R
5000|$|The worm {{belongs to}} the “slow” mass mailer {{category}} where copies of which are attached and sent to addresses intercepted from the keyboard. The e-mail consists of a promotion of and <b>installation</b> <b>instruction</b> <b>for</b> an imaginary antivirus product purported to remove unknown infections from the computer. While infection cannot occur until the attached worm is renamed and opened, it could spread to system folders {{in a matter of}} seconds. It is known to shut down or hang Windows Vista and Windows 7 when attempts to write on the system drive are denied by said operating systems. Also, the worm hides folders and makes them [...] "super hidden" [...] so that data contained in them are not easily accessed. Precision key logging is the main threat associated with Daprosy infection. Logged keystrokes containing sensitive data could be sent to its author using the worm’s improvised mailing system. Early strains are known to destabilize, corrupt and even stall the operating system due to programming bugs. Said strains appear to be incomplete and were probably created by students or amateur Visual Basic programmers as evidenced by using VB decompilers. Final or later releases of Daprosy worm are prolific online game password stealers. They also pose great threats to banking and other e-commerce establishments.|$|R
40|$|In the {{graduation}} thesis {{you will find}} a description of the development of a program for height network adjustment built using the Microsoft. NET framework, more specifically using the programming language VB. NET. The program is considered a spiritual successor to the program ViM by authors Tomaž Ambrožič and Goran Turk, as the two have little more in common than the interchange file format and their purpose – VIM. NET, as the newly developed program was named, was written using a vastly different technology and has a new user interface as well as a new background. This thesis presents the theoretical background of the program, followed by <b>installation</b> <b>instructions,</b> <b>instructions</b> <b>for</b> proper use, description of the user interface and finally the plans {{for the future of the}} new program...|$|R
50|$|Rasheed came to {{photography}} and collaging while living and studying in South Africa as an exchange student, {{and later as}} a Fulbright Scholar, where she discovered {{an interest in the}} act of documentation and interviewing. The first iteration of her immersive <b>installation,</b> No <b>Instructions</b> <b>for</b> Assembly, Activation I (2013), took place at Real Art Ways and consisted of over six hundred objects, including found and personal family photos, album covers, tufts of family members' hair, Islamic prayer rugs, newspaper clippings, jewelry, prayer beads, black stockings, and mirrors, among other items. Subsequent iterations of the installation have invited audiences to modify and contribute their own objects and histories to her growing archive.|$|R
5000|$|Connection to the SES Broadband {{service is}} {{by way of}} a Sat3Play {{satellite}} terminal developed by Newtec in conjunction with the European Space Agency (ESA). The terminal comprises an external satellite dish fitted with a two-way interactive LNB ("iLNB") connected by coaxial cable to the indoor satellite [...] "IP modem" [...] that, in turn, connects to the user's PC or LAN. Assembly of the dish and installation is straightforward and requires only a few basic tools and a simple signal strength meter. The installation is sometimes referred to as Do-It-Yourself (DiY) <b>installation.</b> Detailed <b>instructions</b> <b>for</b> <b>installation</b> are supplied and this can be achieved by any competent end user, without professional help.|$|R
50|$|Even {{though the}} Edsel shared its basic {{technology}} with other Ford products, {{a number of}} issues caused reliability problems, mostly with the 1958 models. Reports of mechanical flaws with the cars surfaced, due primarily to lack of quality control and confusion of parts with other Ford models. Ford never dedicated a stand-alone factory solely to Edsel model production. The first-year (1958) Edsels were assembled in both Mercury and Ford factories. The longer-wheelbase models, Citation and Corsair, were produced alongside the Mercury products, while the shorter-wheelbase models, Pacer and Ranger, were produced alongside the Ford products. Workers assembling Fords and Mercurys often found the task of assembling the occasional Edsel that moved down the line burdensome, because it required them to change tools and parts bins, then switch back to resume assembling Fords or Mercurys after completing assembly on the Edsel. The workers were also expected to accommodate Edsel assembly with no adjustment in their hourly quota of Ford and Mercury production. Consequently, the desired quality control of the different Edsel models proved difficult to achieve, even when the Fords and Mercurys were satisfactorily assembled on the same lines. Many Edsels actually left the assembly lines unfinished. Uninstalled parts were placed in the trunks along with <b>installation</b> <b>instructions</b> <b>for</b> dealership mechanics, some of whom never installed the additional parts at all. Some dealers did not even receive all the parts.|$|R
5000|$|RCS Library <b>Installation</b> <b>Instructions</b> : Provides <b>instructions</b> <b>for</b> {{getting and}} making the RCS Library.|$|R
40|$|Summary: We propose SW#, a new CUDA {{graphical}} processor unit-enabled and memory-efficient {{implementation of}} dynamic pro-gramming algorithm, for local alignment. It {{can be used}} as either a stand-alone application or a library. Although there are other graphical processor unit implementations of the Smith–Waterman algorithm, SW # is the only one publicly available that can produce sequence alignments on genome-wide scale. For long sequences, it is at least a few hundred times faster than a CPU version of the same algorithm. Availability: Source code and <b>installation</b> <b>instructions</b> freely available <b>for</b> download a...|$|R
40|$|A set of {{scripts and}} tools for the {{analysis}} of viral NGS data. More detailed documentation can be found at [URL] This includes <b>installation</b> <b>instructions,</b> usage <b>instructions</b> <b>for</b> the command line tools, and usage of the pipeline infrastructure. v 1. 14. 0 Release Notes New: 	read_utils. align_and_fix() now has an option [...] skipMarkDupes since samtools depth can segfault if if duplicate reads are marked 	reports. align_and_plot_coverage() can now use Novoalign as the aligner rather the default BWA mem Fixed: 	align_rna memory raised to 36 GB in Snakemake pipeline 	metagenomics. coverage_lca() is now hardened to missing taxids Changed/Updated: 	For align_rna, "sensitive" option is now disabled by default for BWA mem 	pytest 2. 9. 1 -> 3. 0. ...|$|R
40|$|This {{study is}} about, which {{constitutes}} Honcheonui(an armillary sphere) part of "Uigijipseol" (Volume I) together with and -dealt with earlier than this subject. The study's {{construction on the}} text of is organized into 15 categories, including <b>installation,</b> observations, <b>instructions</b> <b>for</b> use, astronomical theories and formulas, etc. This study provides easy-to-understand illustrations of the figures shown in the original and contains detailed descriptions of the related calculation procedures. In the ``Instructions for Use of Honcheonui" discussed here, the readers are introduced to astronomical computation systems, mainly based on spherical trigonometry and proportional methods. The section also provides systematic and detailed reviews of astronomical theories and calculation procedures, allowing you to assess the level of astronomy knowledge at that time...|$|R
2500|$|Even {{though the}} Edsel shares its basic {{technology}} with other Ford products, {{a number of}} issues caused reliability problems, mostly with the 1958 models. [...] Reports of mechanical flaws with the cars surfaced, due primarily to lack of quality control and confusion of parts with other Ford models. Ford never dedicated a stand-alone factory solely to Edsel model production. [...] The first-year (1958) Edsels were assembled in both Mercury and Ford factories. [...] The longer-wheelbase models, Citation and Corsair, were produced alongside the Mercury products, while the shorter-wheelbase models, Pacer and Ranger, were produced alongside the Ford products. [...] Workers assembling Fords and Mercurys often found the task of assembling the occasional Edsel that moved down the line burdensome, because it required them to change tools and parts bins, then switch back to resume assembling Fords or Mercurys after completing assembly on the Edsel. [...] The workers were also expected to accommodate Edsel assembly with no adjustment in their hourly quota of Ford and Mercury production. [...] Consequently, the desired quality control of the different Edsel models proved difficult to achieve, even when the Fords and Mercurys were satisfactorily assembled on the same lines. [...] Many Edsels actually left the assembly lines unfinished. [...] Uninstalled parts were placed in the trunks along with <b>installation</b> <b>instructions</b> <b>for</b> dealership mechanics, some of whom never installed the additional parts at all. [...] Some dealers did not even receive all the parts.|$|R
40|$|The paper {{explains}} how to download, compile, {{and use the}} C++ implementation of the Bayesian optimization algorithm (BOA) with decision graphs (Pelikan, Goldberg, & Sastry, 2000). It provides the <b>instructions</b> <b>for</b> creating input files for the BOA to solve various problems with various parameter settings and for adding new test functions into the existing code. Outputs of an example experiment are discussed. 1 Introduction The {{purpose of this paper}} is to give basic <b>instructions</b> <b>for</b> downloading, compiling, and using the implementation of the Bayesian optimization algorithm with decision graphs in C++ that is publicly available at the IlliGAL anonymous ftp-site. The <b>installation</b> <b>instructions</b> are designed <b>for</b> UNIX operating systems. However, we suppose no major modifications are necessary and the source codes should be compiled under most operating systems with a number of different compilers without major problems. We have tried to keep the implementation as simple as possible and ye [...] ...|$|R
40|$|The goal of {{this thesis}} is to {{overview}} the different multi-core programming models and technologies. Nowadays multi-core systems {{are more and more}} popular. Personal computers usually are based on multi-core technology since some years ago so it is needed some technologies for implementing it. In this thesis, we have studied several models and technologies of multi-core programming. We have also studied and presented a comparison of the models and technologies. Furthermore, we have shown the <b>installation</b> and configuration <b>instructions</b> <b>for</b> the two main technologies (OpenMP and MPI) ...|$|R
40|$|PyLith is an {{open-source}} finite-element {{code for}} dynamic and quasistatic simulations of crustal deformation, primarily earthquakes and volcanoes. 	Main page: [[URL] 	 		User Manual 		Binary packages 		Utility to build PyLith {{and all of}} its dependencies from source 	 	 	PyLith Wiki: [[URL] 	 		Archive of online tutorials 		Hints, tips, tricks, etc 		PyLith development plan 	 	 	Submit bug reports via [URL] 	Send all questions to: cig-short@geodynamics. org Features 	Quasi-static (implicit) and dynamic (explicit) time-stepping 	Cell types include triangles, quadrilaterals, hexahedra, and tetrahedra 	Linear elastic, linear and generalized Maxwell viscoelastic, power-law viscoelastic, and Drucker-Prager elastoplastic materials 	Infinitesimal and small strain elasticity formulations 	Fault interfaces using cohesive cells 	 		Prescribed slip with multiple, potentially overlapping earthquake ruptures and aseismic creep 		Spontaneous slip with slip-weakening friction and Dieterich rate- and state-friction fault constitutive models 	 	 	Time-dependent Dirichlet (displacement/velocity) boundary conditions 	Time-dependent Neumann (traction) boundary conditions 	Time-dependent point forces 	Absorbing boundary conditions 	Gravitational body forces 	VTK and HDF 5 /Xdmf output of solution, fault information, and state variables 	Templates for adding your own bulk rheologies, fault constitutive models, and interfacing with a custom seismic velocity model. 	User-friendly computation of static 3 -D Green's functions <b>Installation</b> Detailed <b>installation</b> <b>instructions</b> <b>for</b> the binary packages are in the User Manual with detailed building <b>instructions</b> <b>for</b> a few platforms in the INSTALL file bundled with the PyLith Installer utility. We also offer a Docker image ([URL] for running PyLith within a portable, virtual Linux environment. Release Notes 	Added [...] version command line argument to display version information for PyLith and its dependencies. 	Improved information displayed with the [...] help command line argument. 	Added [...] include-citations command line argument to display publications to cite when publishing results from computations using PyLith. General PyLith references are also displayed with the [...] version command line argument. 	Allow use of NetCDF versions greater than 4. 1. 3. Switch from using C++ API to C API. 	Fixed bug in Pythia associated with validation of parameters being done before help could be displayed. 	Fixed typos in manual for gravity and point forces. 	Added integration with Travis for automated testing...|$|R
40|$|International audienceBackgroundIn recent years, {{many studies}} {{focused on the}} {{description}} and comparison of large sets of related bacteriophage genomes. Due to the peculiar mosaic structure of these genomes, few informative approaches for comparing whole genomes exist: dot plots diagrams give a mostly qualitative assessment of the similarity/dissimilarity between two or more genomes, and clustering techniques are used to classify genomes. Multiple alignments are conspicuously absent from this scene. Indeed, whole genome aligners interpret lack of similarity between sequences {{as an indication of}} rearrangements, insertions, or losses. This behavior makes them ill-prepared to align bacteriophage genomes, where even closely related strains can accomplish the same biological function with highly dissimilar sequences. ResultsIn this paper, we propose a multiple alignment strategy that exploits functional collinearity shared by related strains of bacteriophages, and uses partial orders to capture mosaicism of sets of genomes. As classical alignments do, the computed alignments can be used to predict that genes have the same biological function, {{even in the absence of}} detectable similarity. The Alpha aligner implements these ideas in visual interactive displays, and is used to compute several examples of alignments of Staphylococcus aureus and Mycobacterium bacteriophages, involving up to 29 genomes. Using these datasets, we prove that Alpha alignments are at least as good as those computed by standard aligners. Comparison with the progressiveMauve aligner – which implements a partial order strategy, but whose alignments are linearized – shows a greatly improved interactive graphic display, while avoiding misalignments. ConclusionsMultiple alignments of whole bacteriophage genomes work, and will become an important conceptual and visual tool in comparative genomics of sets of related strains. A python implementation of Alpha, along with <b>installation</b> <b>instructions</b> <b>for</b> Ubuntu and OSX, is available on bitbucket ([URL]...|$|R
40|$|The {{main goal}} of this diploma thesis was to create {{efficient}} system for automatic evaluation of algorithms. The system, which is sufficiently robust and flexible and at same time efficient regardless of the chosen algorithm. When making this system, it was essential to create system, that is easy to use for both users as well as system administrators. But first {{it was necessary to}} define how is algorithm actually presented in the system. It took a simplification and abstraction of algorithm. In the introduction, there is a brief presentation of the goals and motivation, representation of algorithm, and a short presentation of application. Following up, are the <b>instructions</b> <b>for</b> <b>installation,</b> and <b>instructions</b> <b>for</b> users and administrators. The fourth chapter gives a description of the procedures for quality evaluation of algorithms, and requirements that must be met by submited algorithms. Then there is a presentantion of the technology and tools used. Following up is the implementation of the system itself. Last but not least there is conclusion and annexes. The included CD-ROM contains web application, testing program for lossless data compression algorithms ZipTest, and simple example of such an algorithm MyZip...|$|R
40|$|This manual covers <b>installation</b> and {{operating}} <b>instructions</b> <b>for</b> the following U. S. Robotics modems: • Sportster Voice 56 K ∗ {{internal and external}} modems U. S. Robotics, the USRobotics logo, and Sportster are registered trademarks and Connections, Total Control, Courier, RapidComm, x 2, and the x 2 logo are trademarks of U. S. Robotics. Windows is a registered trademark of Microsoft Corp. CompuServe is a registered trademark of CompuServe Inc. America Online is a registered trademark of America Online Inc. Any other trademarks, trade names, service marks, or service names owned or registered by any other company and used in this manual are the property of their respective companies...|$|R
40|$|User <b>instructions</b> <b>for</b> a {{graphics}} {{package for}} coupled rotor/airframe vibration analysis are presented. Responses to plot package messages which the user must make to activate plot package operations and options are described. <b>Installation</b> <b>instructions</b> required {{to set up}} the program on the CDC system are included. The plot package overlay structure and subroutines which have to be modified for the CDC system are also described. Operating <b>instructions</b> <b>for</b> CDC applications are included...|$|R
