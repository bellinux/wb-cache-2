6653|6770|Public
5|$|The Standard PHP Library (SPL) {{attempts}} to solve standard problems and implements efficient <b>data</b> <b>access</b> interfaces and classes.|$|E
5|$|New {{information}} presents {{improvements in}} multithreading, resilency improvements (Intel Instruction Replay RAS) and few new instructions (thread priority, integer instruction, cache prefetching, and <b>data</b> <b>access</b> hints).|$|E
5|$|Pre-conference {{tutorials}} {{have played}} an important role in ISMB since the first conference. Tutorials at ISMB 1994 included introductions to genetic algorithms, neural networks, AI for molecular biologists and molecular biology for computer scientists. Tutorials on computational mass spectrometry-based proteomics and ENCODE <b>data</b> <b>access</b> were presented at ISMB/ECCB 2013.|$|E
2500|$|Note {{that the}} term [...] "bi-endian" [...] refers {{primarily}} to how a processor treats <b>data</b> <b>accesses.</b> Instruction accesses (fetches of instruction words) on a given processor may still assume a fixed endianness, even if <b>data</b> <b>accesses</b> are fully bi-endian, though {{this is not always}} the case, such as on Intel's IA-64-based Itanium CPU, which allows both.|$|R
30|$|Activity: Frequency {{and count}} of {{privilege}} activations {{as well as}} the amount of application <b>data</b> <b>accessed.</b>|$|R
5000|$|HDF5 Packet Table (H5PT) - {{interfaces}} for C and C++ {{to handle}} [...] "packet" [...] <b>data,</b> <b>accessed</b> at high-speeds ...|$|R
25|$|SQL Native Client is {{the native}} client side <b>data</b> <b>access</b> library for Microsoft SQL Server, version 2005 onwards. It {{natively}} implements {{support for the}} SQL Server features including the Tabular Data Stream implementation, support for mirrored SQL Server databases, full support for all data types supported by SQL Server, asynchronous operations, query notifications, encryption support, as well as receiving multiple result sets in a single database session. SQL Native Client is used under the hood by SQL Server plug-ins for other <b>data</b> <b>access</b> technologies, including ADO or OLE DB. The SQL Native Client can also be directly used, bypassing the generic <b>data</b> <b>access</b> layers.|$|E
25|$|Windows <b>Data</b> <b>Access</b> Components (Windows DAC) replace MDAC 2.81 which shipped with Windows XP Service Pack 2.|$|E
25|$|MDAC 1.5 was {{the last}} <b>data</b> <b>access</b> {{component}} release supported under Windows NT 3.51 SP5.|$|E
5000|$|... without backup server: {{the storage}} {{facility}} (usually a virtual tape library, or VTL) is {{smart enough to}} handle multiple <b>data</b> <b>accesses</b> without intermediate component.|$|R
40|$|Abstract Caches {{are widely}} used to reduce the speed gap between {{processors}} and memories. However, the spatial locality of sequential <b>data</b> <b>accesses</b> existing in many popular applications is not well exploited by conventional data cache. In response to these problems, the Split Sequential Data Cache (SSDC) is proposed, in which the sequential access detector can predict whether <b>data</b> <b>accesses</b> are sequential, and direct them to the right sub cache. Experiments show that the SSDC outperforms the conventional data cache and other schemes. It reduces the miss rate of applications with intensive sequential <b>data</b> <b>accesses</b> with only a little increment of bandwidth requirement. Meanwhile, the experimental results on SPEC 2000 Int show that SSDC does not hurt the performance of applications without large sequential accesses. Key words 　computer architecture; cache design; split data cache; sequential data acces...|$|R
50|$|In {{disk storage}} and drum memory, {{interleaving}} {{is a technique}} used to improve access performance to storage by putting <b>data</b> <b>accessed</b> sequentially into non-sequential sectors.|$|R
25|$|Manage {{access to}} project <b>data.</b> <b>Access</b> ranges from full-access for team members to {{anonymous}} read-only access for potential reviewers.|$|E
25|$|With {{more recent}} {{versions}} of the BlackBerry platform, the MDS {{is no longer a}} requirement for wireless <b>data</b> <b>access.</b> Starting with OS 3.8 or 4.0, BlackBerry phones can access the Internet (i.e. TCP/IP access) without an MDS – formerly only email and WAP access was possible without a BES/MDS. The BES/MDS is still required for secure email, <b>data</b> <b>access,</b> and applications that require WAP from carriers that do not allow WAP access.|$|E
25|$|From a <b>data</b> <b>access</b> {{technology}} standpoint, Jet {{is considered}} a deprecated technology by Microsoft, but Microsoft continues to support ACE as part of Microsoft Access.|$|E
50|$|There is no cache for the ALUs. Cache is not required, due to {{the memory}} {{interface}} operating at commensurate speed with the ALU <b>data</b> <b>accesses.</b>|$|R
40|$|We proposeMCRingBuffer, a lock-free, cache-efficient shared {{ring buffer}} that {{provides}} fast <b>data</b> <b>accesses</b> among threads running in multi-core architectures. MCRingBuffer seeks {{to reduce the}} cost of inter-core communication by allowing concurrent lock-free <b>data</b> <b>accesses</b> and improving the cache locality of accessing control variables used for thread syn-chronization. Evaluation on an Intel Xeon multi-core ma-chine shows that MCRingBuffer achieves a throughput gain of up to 4. 9 × over existing concurrent lock-free ring buffers. A motivating application of MCRingBuffer is parallel net-work traffic monitoring, in which MCRingBuffer facilitates multi-core architectures to process packets at line rate...|$|R
5000|$|Detailed {{information}} on the <b>data</b> <b>accessed</b> to calculate an AEM, the modeling formulas and algorithms are generally not published. A summary of general information is listed in the table below: ...|$|R
25|$|According to {{official}} data and reports by the Moroccan media, PAGER increased {{access to water}} in rural areas from 14% in 1995 to 61% in 2004 and 77% in 2006. According to survey <b>data,</b> <b>access</b> to house connections in rural areas increased from 10% in 1995 to 20% in 2004. According to the same survey <b>data</b> <b>access</b> to an improved water source in rural areas remained constant between 1995 and 2004 at 58%. It remains unclear how the survey data and the data of PAGER can be reconciled.|$|E
25|$|MDAC 2.0 was {{distributed}} with the <b>Data</b> <b>Access</b> 2.0 SDK and included {{the contents of}} MDAC 1.5, the ODBC 3.5 SDK and the OLE DB 1.5 SDK, and the OLE DB for OLAP Specification. It also had included many updates to the core product, including a security feature added to the RDS which prevented it from being used maliciously an IIS server. This version came included in Windows NT 4.0 SP4, and also with Visual Studio 6.0, which came with the full <b>Data</b> <b>Access</b> SDK.|$|E
25|$|Microsoft <b>Data</b> <b>Access</b> Components (MDAC; {{also known}} as Windows DAC) is a {{framework}} of interrelated Microsoft technologies that allows programmers a uniform and comprehensive way of developing applications that can access almost any data store. Its components include: ActiveX Data Objects (ADO), OLE DB, and Open Database Connectivity (ODBC). There have been several deprecated components as well, such as the Microsoft Jet Database Engine, MSDASQL (the OLE DB provider for ODBC), and Remote Data Services (RDS). Some components have also become obsolete, such as the former <b>Data</b> <b>Access</b> Objects API and Remote Data Objects.|$|E
5000|$|Transactions. An {{essential}} requirement for a database was to maintain integrity and consistency among <b>data</b> <b>accessed</b> by concurrent users. These are the so-called ACID properties: Atomicity, Consistency, Isolation, and Durability.|$|R
30|$|With interaction: in this case, {{location}} process collects RTTs while accessing data. Thus, {{the proxy}} cannot maliciously behave as previously unless it deploys data caching or special high-speed connections, which are other attack types presented later. Assuming no data caching and no special connection, the proxy may deploy attacks on location verification process {{if it is}} able to learn about <b>data</b> <b>accesses</b> and to classify them into two categories: i) <b>data</b> <b>accesses</b> used only for location verification process and the content of read data is not relevant, only RTTs matter, and ii) <b>data</b> <b>accesses</b> where content is relevant but no RTTs are collected. Under the assumption that such a learning is feasible, when a data request is received, the proxy needs to classify it as request type i orii. When a request is classified as type i, the proxy forges a random data and sends it to the requesting node and when it is classified as type ii, a remote <b>access</b> to <b>data</b> server is made to receive authentic data, which are then sent to the requesting node. Consequently, location verification decision results in a false positive. It is worth noticing that this attack is potentially feasible only when the proxy is aware of the verification process details and <b>data</b> <b>accesses</b> have specific patterns (e.g., each first day of week location verification process is run).|$|R
5000|$|Metadata {{embedded}} in the caller's assembly, defines how the native code is to be called and <b>data</b> <b>accessed</b> (usually requires attributed source specifiers to aid the compiler in generating marshal glue) ...|$|R
25|$|Code {{generation}} libraries are high-level APIs {{that can}} generate or transform byte code for Java. They {{are used by}} aspect-oriented programming, some <b>data</b> <b>access</b> frameworks, and for testing to generate dynamic proxy objects. They also are used to intercept field access.|$|E
25|$|Today, subroutines {{are more}} often used to help make a program that is more structured, e.g., by {{isolating}} some algorithm or hiding some <b>data</b> <b>access</b> method. If many programmers are working on one program, subroutines are one kind of modularity that can help divide the work.|$|E
25|$|DAO: DAO, or <b>Data</b> <b>Access</b> Objects were {{an object}} {{oriented}} interface created by Microsoft which allowed early versions of Microsoft Access and Visual Basic {{to access the}} Jet database engine. Later (in version 3.5) {{it was able to}} bypass the Jet engine altogether and directly access ODBC data sources.|$|E
30|$|This {{predicate}} encryption {{is considered}} as a novel cryptographic primitive which provides a fine-grained control over the encrypted <b>data</b> <b>accesses.</b> It is usually used for the biometric matching and secure cloud storage.|$|R
5000|$|WMS is {{a widely}} {{supported}} format for maps and GIS <b>data</b> <b>accessed</b> via the Internet and loaded into client side GIS software. Major commercial GIS and mapping software that support WMS include: ...|$|R
5000|$|Part 2 (optional services): File system <b>access,</b> <b>Data</b> logging, Service <b>Access</b> points, ...|$|R
25|$|Despite {{increases}} in coverage, only about 53% of Guyana’s population {{has access to}} house connections for water supply, and only 13% has access to sewerage, {{according to the survey}} <b>data.</b> <b>Access</b> using a broader definition is higher (83% for water - including rainwater harvesting - and 70% for sanitation), but still insufficient.|$|E
25|$|In June 2015, Act-On {{released}} Data Studio, {{an advanced}} <b>data</b> <b>access</b> and analytics tool allowing users to visualize, select, configure and export Act-On data to any Business Intelligence (BI) platform. Offered {{as part of}} Act-On's enterprise package, the feature equips users with built-in wizards, filters and templates to extract and report on engagement data in real-time.|$|E
25|$|In computing, Open Database Connectivity (ODBC) is a {{standard}} application programming interface (API) for accessing database management systems (DBMS). The designers of ODBC aimed to make it independent of database systems and operating systems. An application written using ODBC can be ported to other platforms, both on the client and server side, with few changes to the <b>data</b> <b>access</b> code.|$|E
5000|$|In {{this case}} the cache {{is said to be}} [...] "polluted". Changing the pattern of <b>data</b> <b>accesses</b> by {{positioning}} the first update of T0 between the loop and the second update can eliminate the inefficiency: ...|$|R
40|$|Memory system usually consumes a {{significant}} amount of energy in many battery-operated devices. In this paper, we provide a quantitative comparison and evaluation of the interaction of two hardware cache optimization mechanisms and three widely used compiler optimization techniques used to reduce the memory system energy. Our presentation is in two parts. First, we focus on a set of memory-intensive benchmark codes and investigate their memory system energy behavior due to <b>data</b> <b>accesses</b> under hardware and compiler optimizations. Then, using four motion estimation codes, we look at the influence of compiler optimizations on the memory system energy considering the overall impact of instruction and <b>data</b> <b>accesses...</b>|$|R
40|$|Abstract- Energy {{optimization}} {{has become}} an important issue in hardware and software design. In particular, optimizing the energy consumed by the memory system {{has been found to}} be very important. This paper looks at the influence of state-of-theart compiler optimizations on the memory system energy considering the overall impact on instruction and <b>data</b> <b>accesses.</b> Our results indicate that while these optimizations provide significant savings in energy consumed by <b>data</b> <b>accesses,</b> they increase the energy consumed by instruction accesses. This, in turn, results in an increase in overall energy in most cases. Consequently, compiler writers for energy-aware systems need to consider both instruction and data locality in a unified optimization framework...|$|R
