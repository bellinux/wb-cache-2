0|507|Public
50|$|Basic <b>disassembly</b> and <b>assembly</b> {{for routine}} {{maintenance}} {{can be carried}} out without the need for any tools.|$|R
50|$|The ARB Fragment Program {{extension}} provides APIs to load ARBfp1.0 <b>assembly</b> <b>instructions,</b> enable selected programs, {{and to set}} various GPU parameters.|$|R
40|$|We present design {{principles}} for creating effective <b>assembly</b> <b>instructions</b> {{and a system}} that is based on these principles. The principles are drawn from cognitive psychology research which investigated a person’s conceptual models of assembly and effective methods to visually communicate assembly information. Our system is inspired by earlier work in robotics on assembly planning and in visualization on automated presentation design. Although other systems have considered presentation and planning independently, we believe it is necessary to address the two problems simultaneously in order to create effective <b>assembly</b> <b>instructions.</b> We describe the algorithmic techniques used to produce <b>assembly</b> <b>instructions</b> given object geometry, orientation, and optional grouping and ordering constraints on the object’s parts. Our results demonstrate {{that it is possible to}} produce aesthetically pleasing and easy to follow instructions for many everyday objects...|$|R
5000|$|Software Fault Isolation (SFI), allows running untrusted {{native code}} by {{sandboxing}} all store, read and jump <b>assembly</b> <b>instructions</b> to isolated segments of memory.|$|R
50|$|The level {{names were}} all chosen from x86 <b>assembly</b> <b>instructions</b> where each instruction's {{workings}} and purpose roughly describe the main {{challenge of the}} level.|$|R
5000|$|This is only {{a partial}} list of <b>assembly</b> <b>instructions</b> a {{reference}} can be found here : Shader Assembly Language (ARB/NV) Quick Reference Guide for OpenGL.|$|R
40|$|Abstract matrix; Process {{information}} publishing mode Abstract. To {{deal with}} the complete description and quick search in 3 D <b>assembly</b> <b>instruction</b> publishing, a Two-dimension description method of process information for 3 D <b>assembly</b> <b>instruction</b> publishing was presented. Two-dimensional description model of process information is established from operation description and granularity by this method. In order to organize process information with a certain description stage, the concept of process information layer was proposed, and the describe structure for process information layers was been build based on similarity criteria. Subsequently, an abstract matrix representation method is provided to express 3 D process information and build the <b>assembly</b> <b>instructions</b> publishing model. Abstract matrix representation method {{was the key to}} influence the 3 D process information description, Therefore, In-depth researched on it and an instantiated matrix is given. Finally, an illustrative example is used to explain an application of the proposed approach...|$|R
50|$|Autofest City {{has a few}} models {{assembled}} from intricate kits, {{which in}} many instances have called {{for the use of}} more resourceful skills over the standard <b>assembly</b> <b>instructions.</b>|$|R
5000|$|<b>Assembly</b> <b>Instruction</b> Set Architecture (ISA): A smart {{assembler}} may convert {{an abstract}} assembly language common {{to a group}} of machines into slightly different machine language for different implementations ...|$|R
40|$|<b>Assembly</b> <b>instructions</b> is an {{important}} means for supporting operator performance in final assembly. An operator at a production line, whether experienced or novice, will encounter situations that include the assembly of new products or new variants. Instructions that are developed without consideration of these processes can cause unnecessary cognitive load and lead to poor operator performance. This paper describes an experiment that shows that <b>assembly</b> <b>instructions</b> can increase operator performance and presents nine simple guidelines. The Importance of including the operator view is stressed and how the guidelines should be implemented in practice is discussed...|$|R
40|$|FIELD GROUP SUB-GROUP {{interactive}} instruction, videodisc instruction, multimedia instruction, procedural instraction, instructional design, VISTRACT (Continue on {{reverse it}} necessary and identify by block number) A goal in this-research {{is to learn}} how to use high-technology computer systems effectively in education and training. This paper reports a procedure for developing multimedia instructions that are "optimized " according to certain criteria. It describe. X the design of interactive videodisc-based <b>assembly</b> <b>instructions</b> using IBM's infoWindow system. Research comparing interactive videodisc-based <b>assembly</b> <b>instructions</b> and passive videotape instructions is presented. Performance in building from memor...|$|R
50|$|<b>Assembly</b> <b>instructions</b> {{contain the}} bill of {{material}} {{as well as the}} data for the parts assembly that is important for the specific assembly (ex.: adjusting tolerance + 0.03/-0.01 mm).|$|R
40|$|Within {{the further}} {{evolving}} mass customization paradigm, mixed-model assembly operators {{are confronted with}} a continuously increasing task complexity. Current information systems neglect {{the context in which}} the user operates. For this reason, the information source is not aware of the information receiver's role and so it fails to distribute the right information at the right time. In most of the cases, all information is given all the time. In order to manage context-aware <b>assembly</b> <b>instructions,</b> a first step is integrating the complete set of assembly information into one data repository. Based on available industrial standards, a generic model of <b>assembly</b> <b>instructions</b> is proposed which can merge all kinds of information from multiple data sources. Different options are mentioned to add contextual information to the generic data model. A classification of typical context types is given for an assembly environment. Further research will validate the generic model for context-aware <b>assembly</b> <b>instructions</b> based on a multiple case study approach at manufacturers of special machinery...|$|R
40|$|In 1990, Ford Body & Assembly Operations {{introduced}} Standard Language as {{a requirement}} for writing process sheet <b>assembly</b> <b>instructions</b> in North America. Standard Language was created to standardize the process sheet <b>assembly</b> <b>instructions</b> and introduce consistency across the entire manufacturing spectrum at Ford Motor Company. Standard Language is a Ford-specific, restricted subset of English {{that is used to}} describe the vehicle assembly process at Ford Motor Company. This language is used as the input to the Artificial Intelligence (AI) component of the Global Study Process Allocation System (GSPAS). Process sheets written in Standard Language are read by the AI system and used to generate work <b>assembly</b> <b>instructions.</b> Since its introduction in North America, Standard Language has been deployed to Ford's assembly plants in Europe, South America and Asia. In this paper, we will discuss our implementation of Standard Language at Ford Motor Company and show how a controlled language, such as Standard Language, can be used to provide a competitive advantage in business. ...|$|R
40|$|This study {{discussed}} {{the relationship between}} design for assembly and maintainability {{in order to remain}} product/system performance {{and at the same time}} to extend their life. The maintenance efficiency is measure based on maintainability index, which is derived based on several assembly criteria such as <b>disassembly,</b> <b>assembly</b> direction and tools used. To increase the maintainability, redesign of the potential components based on design for assembly guideline have been made. A case study of drum brake is carried out to clarify the work...|$|R
5000|$|During cell elongation, microtubules must {{adjust their}} {{orientation}} constantly {{to keep up}} with the increasing cell length. This constant change in microtubule organization was proposed to be performed by the rapid <b>disassembly,</b> <b>assembly,</b> and translocation of microtubules. Recently, mutations in the plant katanin homologue have been shown to alter transitions in microtubule organization, which, in turn, cause impairments in the proper deposition of cellulose and hemicellulose. This is presumed to be caused by the plant cell's lack of ability to regulate microtubule lengths.|$|R
50|$|The paper, {{glue and}} model making tools {{required}} for assembly were not supplied with any {{version of the}} package, although <b>assembly</b> <b>instructions</b> for components were provided in the extensive manual.|$|R
50|$|How to make ribs, frames.,fittings, form blocks, jigs. Construction tips. Forming of parts. Assemblies. “Pop riveting’ techniques. Fitting and {{drilling}} of Plexiglass. VW engine <b>assembly</b> <b>instructions,</b> parts list, installation photo, etc.|$|R
40|$|Part 5 : Sustainable Human Integration in Cyber-Physical Systems: The Operator 4. 0 International audienceThis paper {{presents}} the results of a study that was conducted in the Demonstration Factory Aachen in order to analyze the potential benefits of digital <b>assembly</b> <b>instructions</b> compared to paper-based ones. The aim {{of this study is to}} validate three hypotheses regarding the benefits in terms of productivity, quality and learning rate. The results will be used to assess the benefits of a potential rollout of digital <b>assembly</b> <b>instructions</b> in a German mid-size company that assembles multi-variant products in the machining equipment sector...|$|R
40|$|Abstract—Injection of {{transient}} faults {{can be used}} as a way {{to attack}} embedded systems. On embedded processors such as microcontrollers, several studies showed that such a transient fault injection could corrupt either the data loads from the mem-ory or the <b>assembly</b> <b>instructions</b> executed by the circuit. Some countermeasure schemes which rely on temporal redundancy have been proposed to handle this issue. Among them, several schemes add this redundancy at <b>assembly</b> <b>instruction</b> level. In this paper, we perform a practical evaluation for two of those countermeasure schemes by using a pulsed electromagnetic fault injection process on a 32 -bit microcontroller. I...|$|R
40|$|The {{creation}} of visualizations can be automated, informed by design principles derived from cognitive research. We describe {{a collaboration between}} psychology and computer science to uncover design principles for <b>assembly</b> <b>instructions</b> and instantiate them in algorithms. Participants assembled an object and then constructed diagrammatic instructions; those instructions were first rated and then tested. It was found that effective visualizations contain step-by-step action diagrams with 3 -D views that best reveal the assembly actions. The design principles were incorporated into algorithms that generate <b>assembly</b> <b>instructions</b> from object models. The general techniques {{as well as the}} specific principles extend to other visual explanations...|$|R
40|$|Abstract: This paper {{presents}} {{a new type}} of anti-upsetting equipment, which is used to avoid upsetting of axle-end in wheelset <b>disassembly</b> and <b>assembly.</b> The special structure of the equipment can transmit the cylinder’s pressure to the axle-end rationally and eliminate eccentric-loaded or partial stress concentration on the section of the axle-end. The anti-upsetting equipment has been analyzed and verified with the finite element software. This new type of anti-upsetting equipment is applied on an automatic wheelset <b>disassembly</b> and <b>assembly</b> machine to ensure the anti-upsetting on axle-end...|$|R
50|$|A similar feature {{exists in}} Microchip dsPIC's for (unnested) loops {{provided}} by the 'DO' <b>assembly</b> <b>instruction.</b> Its interruptible and trivial nesting goes up to one level with an additional 5 levels in software.|$|R
5000|$|Invoking an {{interrupt}} {{can be done}} {{using the}} INT x86 <b>assembly</b> language <b>instruction.</b> For example, to print a character to the screen using BIOS interrupt 0x10, the following x86 <b>assembly</b> language <b>instructions</b> could be executed: ...|$|R
5000|$|... 197? - Set No. ???? - Helicopter. This set {{contained}} a yellow chopper, control unit, operating unit, connection gear, cardboard landing mat (with <b>assembly</b> <b>instructions</b> {{printed on the}} back) and various pick-up items. Made in Hong Kong.|$|R
50|$|Depending on {{the game}} mode, the player is {{required}} to either learn the correct operation of the weapon, or perform its <b>disassembly</b> or <b>assembly.</b> Game modes are arranged {{in the order of}} increasing complexity, including field-stripping the weapon, complete disassembly of the mechanism, and finally <b>disassembly</b> and <b>assembly</b> against the clock and/or with penalties for incorrect moves. Every model has local and global leaderboards and a set of in-game achievements. The game includes interactive shooting ranges with timed objectives, as well as additional features like gun quizzes and a weapon skin editor.|$|R
5000|$|... int eighty's stage name {{is based}} on a Linux <b>assembly</b> <b>instruction</b> ("technically 'int 0x80.'") while c64 refers to both the Commodore 64 {{computer}} and a combination of his first initial and his height (6 ft 5 in).|$|R
5000|$|SWPB Assembly Programmers Mailing List - the SWPB list is {{a mailing}} list {{dedicated}} to discussing machine code/assembly language programming on the TMS9900 CPU (SWPB is an <b>assembly</b> <b>instruction,</b> meaning [...] "swap bytes" [...] in TMS9900 Assembly Language).|$|R
50|$|An {{electronic}} kit is {{a package}} of electrical components used to build an electronic device. Generally, kits are composed of electronic components, a circuit diagram (schematic), <b>assembly</b> <b>instructions</b> and often {{a printed circuit board}} (PCB) or another type of prototyping board.|$|R
50|$|Printed {{materials}} {{missing from}} initial backer rewards were later released in low resolution watermarked PDF format {{on the website}} DriveThru RPG for backers to print copies along with updated <b>assembly</b> <b>instructions</b> to all game pieces requiring assembly, free of charge.|$|R
40|$|Designing {{effective}} {{instructions for}} everyday products is challenging. One {{reason is that}} designers lack a set of design principles for producing visually comprehensible and accessible instructions. We describe an approach for identifying such design principles through experiments investigating the production, preference, and comprehension of <b>assembly</b> <b>instructions</b> for furniture. We instantiate these principles into an algorithm that automatically generates <b>assembly</b> <b>instructions.</b> Finally, we perform a user study comparing our computergenerated instructions to factory-provided and highly rated hand-designed instructions. Our {{results indicate that the}} computer-generated instructions informed by our cognitive design principles significantly reduce assembly time an average of 35 % and error by 50 %. Details of the experimental methodology and the implementation of the automated system are described...|$|R
40|$|The {{efficiency}} of the construction industry in Sweden {{has been criticized for}} some time. As a response, many construction companies are now trying to streamline their production in different ways. The company JM is no exception and can be said to be in the forefront of introducing lean construction in the organization. JM call their system structured production. Lean Construction is a development of the lean concept originated from Toyota’s Production System. It is a world-known concept to make any kind of organization more efficient by minimizing non-value adding activities, often denoted as waste, from the business process. This report presents a case study of the implementation of JM:s structured production on the construction site. A questionnaire was sent to a large number of supervisors to investigate the use of structured production methods. Their responses indicated a positive attitude towards JM lean concept of structured production, but it was also shown that <b>assembly</b> <b>instructions</b> that {{is a part of the}} lean concept are not always applied. The main reason was that the instructions were not suited to all JM's project and that it was considered that some of the assembly solutions could have been made better. The reason for this response are shortcomings in the instructions but could also be an indication of lack of understanding for the lean philosophy. In order to improve compliance to the use of instructions the recommendation to JM is to educate their supervisors and craftsmen in the lean philosophy so they can actively contribute to JM structured production and the improvement of the <b>assembly</b> <b>instructions.</b> In order to follow-up the implementation of structured production a method to estimate the work carried out using the <b>assembly</b> <b>instructions</b> was proposed. The measurement is based on the compliance of the performed activities according to the <b>assembly</b> <b>instructions.</b> The results can be presented separately for each <b>assembly</b> <b>instruction</b> in order to improve the methods or compiled in a performance measurement of the level of implementation of JM structured production. The method is intended to be used by JM in their follow-up of structured production. Validerat; 20120119 (anonymous...|$|R
50|$|Digital Prototyping also enables product {{teams to}} share {{detailed}} <b>assembly</b> <b>instructions</b> digitally with manufacturing teams. While paper assembly drawings can be confusing, 3D visualizations of digital prototypes are unambiguous. This early and clear collaboration between manufacturing and engineering teams helps minimize manufacturing {{problems on the}} shop floor.|$|R
5000|$|Evidence {{of the use}} of {{interchangeable}} parts can be traced back over two thousand years to Carthage in the First Punic War. Carthaginian ships had standardized, {{interchangeable parts}} that even came with <b>assembly</b> <b>instructions</b> akin to [...] "tab a into slot b" [...] marked on them.|$|R
40|$|Short {{version of}} the article "Experimental {{evaluation}} of two software countermeasures against fault attacks" presented at the 2014 IEEE Symposium on Hardware-Oriented Security and Trust (HOST) in May 2014. International audienceInjection of transient faults {{can be used as}} a way to attack embedded systems. On embedded processors such as microcontrollers, several studies showed that such a transient fault injection could corrupt either the data loads from the memory or the <b>assembly</b> <b>instructions</b> executed by the circuit. Some countermeasure schemes which rely on temporal redundancy have been proposed to handle this issue. Among them, several schemes add this redundancy at <b>assembly</b> <b>instruction</b> level. In this paper, we perform a practical evaluation for two of those countermeasure schemes by using a pulsed electromagnetic fault injection process on a 32 -bit microcontroller...|$|R
50|$|Since there is, typically, a {{one-to-one}} {{relationship between}} <b>assembly</b> <b>instructions</b> and machine instructions, the instruction path length is frequently taken {{as the number}} of <b>assembly</b> <b>instructions</b> required to perform a function or particular section of code. Performing a simple table lookup on an unsorted list of 1,000 entries might require perhaps 2,000 machine instructions (on average, assuming uniform distribution of input values), while performing the same lookup on a sorted list using a binary search algorithm might require only about 40 machine instructions, a very considerable saving. Expressed in terms of instruction path length, this metric would be reduced in this instance by a massive factor of 50 - a reason why actual instruction timings might be a secondary consideration compared to a good choice of algorithm requiring a shorter path length.|$|R
