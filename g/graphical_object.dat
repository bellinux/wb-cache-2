92|478|Public
25|$|A rich set {{of event}} {{handlers}} such as onmouseover and onclick can be assigned to any SVG <b>graphical</b> <b>object.</b>|$|E
2500|$|UCLA Professor Jacques Vidal {{coined the}} term [...] "BCI" [...] and {{produced}} the first peer-reviewed publications on this topic. Vidal is widely recognized as the inventor of BCIs in the BCI community, as reflected in [...] numerous peer-reviewed articles reviewing and discussing the field (e.g.,). The 1977 experiment Vidal described was noninvasive EEG control of a cursor-like <b>graphical</b> <b>object</b> on a computer screen. The demonstration was movement in a maze.|$|E
5000|$|Gorm - GNUstep <b>Graphical</b> <b>Object</b> Relationship Manager (also UI builder) ...|$|E
40|$|Advanced display design, such as Ecological Interface Design (EID), makes {{extensive}} use of complex <b>graphical</b> <b>objects.</b> Research has shown that by following EID methodologies, supervisory operators have better performance with the EID displays (Pawlak and Vicente, 1996). However, past research does not consider the visual aspects of the <b>graphical</b> <b>objects</b> used in EID. Of particular interest is how different design decisions of <b>graphical</b> <b>objects</b> affect {{the performance of the}} objects used within that design. This thesis examines the visual sensitivity of dynamic <b>graphical</b> <b>objects</b> by examining features that make certain <b>graphical</b> <b>objects</b> visually superior for certain monitoring tasks. Previous research into the visual aspects of supervisory control with respect to emergent features, psychophysics and attention were considered in the investigation of the visual sensitivities of the dynamic <b>graphical</b> <b>objects</b> used. Research into static <b>graphical</b> <b>objects,</b> combined with prior work on emergent features has been merged to find emergent features that best show changes in dynamic <b>graphical</b> <b>objects</b> for the monitoring tasks investigated. It was found that for simple dynamic objects such as bars and polygon objects, a line changing in angle was the most noticeable emergent feature to show a departure from ?normal? state. For complex <b>graphical</b> <b>objects,</b> those target-indicator displays that mimic a ?bull?s eye? when at the target value should be used for displays that show observers when a target value has been reached. Abrupt changes in shape should be used in trend meters to show when variables or processes have changed direction. Finally, ?solid objects? that make use of vertical lines and shading should be used for comparison meters that compare two values and keep them in a particular ratio. These findings provide guidance for designers of dynamic advanced graphical displays by encouraging the consideration of visual aspects of <b>graphical</b> <b>objects,</b> as well as prescribing <b>graphical</b> <b>objects</b> that should be used in the types of tasks investigated...|$|R
50|$|Collision {{detection}} is {{a related}} concept for detecting intersections {{of two or}} more different <b>graphical</b> <b>objects,</b> rather than intersection of a cursor with one or more <b>graphical</b> <b>objects.</b>|$|R
40|$|Many {{virtual world}} {{applications}} today repre-sent {{the cutting edge}} in real-time 3 D interactive graphics. These applications must model many complex, often changing, <b>graphical</b> <b>objects.</b> These <b>graphical</b> <b>objects</b> must be modeled both visually and behaviorly. An application independent meth-od for describing <b>graphical</b> <b>objects</b> is essential for rapid prototyping and development. This paper presents a simple, flexible and extensible graphics description language, NPSGDL, used in virtual world development at the Naval Postgraduate School...|$|R
5000|$|... e.g. {{dragging}} a color onto a <b>graphical</b> <b>object</b> {{to change its}} color, ...|$|E
5000|$|Interface Builder - Mac OS X {{and former}} NextStep <b>Graphical</b> <b>Object</b> Relationship Manager and UI builder ...|$|E
5000|$|A {{pointing}} task involves {{moving a}} cursor inside a <b>graphical</b> <b>object</b> and pressing a button, whereas a goal-crossing task involves moving a cursor beyond a boundary of a targeted <b>graphical</b> <b>object.</b> Goal crossing {{has been little}} investigated, despite sometimes being used on today's interfaces (e.g., mouse-over effects, hierarchical menus navigation, auto-retractable taskbars and hot corners). Still, several advantages of crossing over pointing have been identified: ...|$|E
40|$|I hereby {{declare that}} I am the sole {{author of this}} thesis. This is a true copy of the thesis, {{including}} any required final revisions, as accepted by my examiners. I understand that my thesis may be made electronically available to the public. - ii-Advanced display design, such as Ecological Interface Design (EID), makes extensive use of complex <b>graphical</b> <b>objects.</b> Research has shown that by following EID methodologies, supervisory operators have better performance with the EID displays (Pawlak and Vicente, 1996). However, past research does not consider the visual aspects of the <b>graphical</b> <b>objects</b> used in EID. Of particular interest is how different design decisions of <b>graphical</b> <b>objects</b> affect {{the performance of the}} objects used within that design. This thesis examines the visual sensitivity of dynamic <b>graphical</b> <b>objects</b> by examining features that make certain <b>graphical</b> <b>objects</b> visually superior for certain monitoring tasks. Previous research into the visual aspects of supervisory control with respect t...|$|R
40|$|We {{describe}} {{in this paper}} an original solution for structured document analysis. The idea {{is to use a}} grammar to guide the segmentation of the <b>graphical</b> <b>objects</b> and their recognition. The grammar is essentially a description of the relations (relative position and size, adjacency, etc) between the <b>graphical</b> <b>objects...</b>|$|R
40|$|Abstract: Computing with <b>graphical</b> <b>objects</b> {{techniques}} have proved {{useful in the}} management of imperfect graphical information. This paper presents graphical user interface (GUI) constructed for Content-Based Image Retrieval System (CBIR) in order to build a query by image. In our case, this image example is prepared individually by the user from the <b>graphical</b> <b>objects</b> offered by the GUI. The images are described based on a two-staged index and compared, applying compatibility and aggregation operators. We analyze the semantic imprecision and spatial or temporal relationships of <b>graphical</b> <b>objects</b> in the compared images using the fuzzy set theory...|$|R
50|$|A rich set {{of event}} {{handlers}} such as onmouseover and onclick can be assigned to any SVG <b>graphical</b> <b>object.</b>|$|E
5000|$|A <b>graphical</b> <b>object</b> {{and method}} based user {{interface}} which is easy and intuitive {{to use and}} naturally reflects the underlying C++ classes; ...|$|E
5000|$|The hardlink method {{does not}} require a <b>graphical</b> <b>object</b> tag or any special {{software}} be loaded on the users cell phone, but does require the phone be internet enabled.|$|E
40|$|Precise {{alignment}} of <b>graphical</b> <b>objects</b> and creating proper layouts {{is crucial in}} many domains, such as graphic design or graph editing. In this paper we are presenting a multi-touch alignment guide for interactive displays. It allows adjusting the alignment and spacing of <b>graphical</b> <b>objects</b> by multi-touch input and bimanual interaction. ACM Classification: H 5. 2 [Information interfaces an...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedMany virtual world applications today represent {{the cutting edge}} in real-time 3 D interactive graphics. Virtual world applications must model many complex, often changing, <b>graphical</b> <b>objects.</b> These <b>graphical</b> <b>objects</b> must be modeled both visually and behaviorly. The performance of most applications of this nature {{is determined by the}} graphics processing capabilities of the hardware used. An efficient, application independent method for describing and managing <b>graphical</b> <b>objects</b> is essential for rapid prototyping and development of robust virtual world applications. This thesis presents an efficient, flexible and extensible graphics description system, NPSGDL, used in virtual world development at the Naval Postgraduate School. [URL] United States Nav...|$|R
5000|$|An {{abstract}} graphical {{data type}} (AGDT) {{is an extension}} of an abstract data type for computer graphics. AGDTs provide the advantages of the ADTs with facilities to build <b>graphical</b> <b>objects</b> in a structured way. Formally, an AGDT may be defined as a [...] "class of <b>graphical</b> <b>objects</b> whose logical behavior is defined by a set of graphical characteristics and a set of graphical operations".|$|R
5000|$|An {{example is}} the [...] method combination, where the {{resulting}} values {{of each of the}} applicable methods of a generic function are arithmetically added to compute the return value. This is used, for example, with the border-mixin for graphical objects. A <b>graphical</b> <b>object</b> may have a generic width function. The border-mixin would add a border around an object and has a method computing its width. A new class [...] (that is both a <b>graphical</b> <b>object</b> and uses the [...] mixin) would compute its width by calling all applicable width methodsâ€”via the [...] method combination. All return values are added and create the combined width of the object.|$|E
5000|$|Chart Event (generated when a user {{is working}} with a chart, namely, when {{graphical}} objects are created and deleted, when a <b>graphical</b> <b>object</b> gets clicked on or moved with a mouse or when text on a chart gets edited etc.); ...|$|E
50|$|Gorm (<b>Graphical</b> <b>Object</b> Relationship Modeller) is a {{graphical}} {{user interface}} builder application. It {{is part of the}} developer tools of GNUstep. Gorm is the equivalent of Interface Builder that was originally found on NeXTSTEP, then OPENSTEP, and finally on Mac OS X.|$|E
50|$|Nest <b>graphical</b> <b>objects</b> and {{transform}} them into 2D and 3D. Skew, bend and distort images and text.|$|R
3000|$|Dialog {{boxes for}} {{introducing}} text for the <b>graphical</b> <b>objects</b> {{and also for}} colours of some visual elements, [...]...|$|R
5000|$|Filter Effects can {{be applied}} to the <b>graphical</b> <b>objects,</b> giving convincing, {{realistic}} effects such as glass, metallic, plastic and other 2D/3D filters.|$|R
5000|$|In {{computer}} graphics programming, hit-testing (hit detection, picking, or pick correlation [...] ) {{is the process}} of determining whether a user-controlled cursor (such as a mouse cursor or touch-point on a touch-screen interface) intersects a given <b>graphical</b> <b>object</b> (such as a shape, line, or curve) drawn on the screen. Hit-testing may be performed on the movement or activation of a mouse or other pointing device.|$|E
50|$|Panel script: a {{panel is}} a group of {{graphical}} objects named widgets. Each <b>graphical</b> <b>object</b> is also called a widget because it can trigger one or several scripts. When a widget invokes a script, the script must be a panel script. A panel script can invoke any types of script, panel or independent. Such a script is named Panel script and is stored in a library of panel scripts only.|$|E
50|$|In {{computer}} graphics, back-face culling {{determines whether}} a polygon of a <b>graphical</b> <b>object</b> is visible. It {{is a step}} in the graphical pipeline that tests whether the points in the polygon appear in clockwise or counter-clockwise order when projected onto the screen. If the user has specified that front-facing polygons have a clockwise winding, but the polygon projected on the screen has a counter-clockwise winding then it has been rotated to face away from the camera and will not be drawn.|$|E
5000|$|Interfacing is {{the process}} of using [...] "layers" [...] to simplify the {{communications}} between technologies and between people and technologies. One example of layered interfacing is the buttons and menus used by home computer operating systems. These <b>graphical</b> <b>objects</b> exist as a link to the underlying [...] "buttons" [...] of the operating system. The command console is one level below these <b>graphical</b> <b>objects</b> as it gives you an even closer link to the underlying functions of the operating system.|$|R
5000|$|... #Caption: BisQue user {{interface}} showing {{results of a}} cell nuclei detection module run (red dots are <b>graphical</b> <b>objects</b> indicating nuclei overlaying the image).|$|R
5000|$|Morphic is a {{graphics}} {{system which}} uses <b>graphical</b> <b>objects</b> called Morphs for simplified GUI-building which {{allow for a}} great degree of flexibility and dynamism.|$|R
50|$|AirForce2 (also {{known as}} Aforce2 or simply AForce) is a <b>Graphical,</b> <b>Object</b> Oriented, {{platform}} independent Shoot-em-up game. Jim Sproch, {{the founder and}} lead developer of The AForce Project, has released the game under the GNU General Public License. This open source game is the spiritual successor to an old Windows 3.1 arcade-style game called Alien Airforce, which was originally written by Robert Epps in the early 1990s. In addition to the platform independent version written in Java, a native Linux version is also being developed in C++.|$|E
5000|$|Inverse search (also called [...] "reverse search") is {{a feature}} of some non-interactive {{typesetting}} programs, such as LaTeX and GNU LilyPond. These programs read an abstract, textual, definition of a document as input, and convert this into a graphical format such as DVI or PDF. In a windowing system, this typically means that the source code is entered in one editor window, and the resulting output is viewed in a different output window. Inverse search means that a <b>graphical</b> <b>object</b> in the output window works as a hyperlink, which brings {{you back to the}} line and column in the editor, where the clicked object was defined. The inverse search feature is particularly useful during proofreading.|$|E
40|$|A {{method of}} {{providing}} graphics data, comprising generating a {{first set of}} data vectors specifying geometrical characteristics of a <b>graphical</b> <b>object</b> in a first digital picture, generating {{a second set of}} data vectors specifying geometrical characteristics of the <b>graphical</b> <b>object</b> in a second digital picture to be displayed after the first digital picture, generating a parameter st comprising information specifying intermediate geometrical characteristics of the <b>graphical</b> <b>object</b> in the first digital picture, and of the <b>graphical</b> <b>object</b> in the second digital picture, wherein the intermediate geometrical characteristics are geometrical characteristics of the <b>graphical</b> <b>object</b> in at least one third digital picture to be displayed after the first digital picture and before the second digital picture, and generating at least one data file comprising the first set of data vectors, the second set of data vectors and the parameter set...|$|E
40|$|Virtual Interaction {{refers to}} a {{technique}} for interacting with computer generated graphics. <b>Graphical</b> <b>objects</b> are overlaid on live video of the user. A chromakey separates the user (foreground) from the background resulting in a silhouette of user. The computer causes the <b>graphical</b> <b>objects</b> to move {{in relation to the}} silhouette so that they appear to interact with the user. This paper presents the implementations of the system, some techniques for interaction and discusses using the system as a tool for physical therapy. 1...|$|R
40|$|The {{theme of}} master thesis was to cover issues of {{controlling}} the wastewater treatment plant, to introduce latest standards applied in design of graphical interface and design the set of fucntional and <b>graphical</b> <b>objects.</b> First parts focuses on listing of power devices, sensors used in wastewater plant and issues of its control, followed by HMI standards introduction. Practical part contents of configuration of control system, desription of functions with flowcharts. Subsequently the thesis covers specificall <b>graphical</b> <b>objects</b> and its connection onto functional blocks...|$|R
40|$|Modeling is the {{creation}} of <b>graphical</b> <b>objects.</b> It is a tedious task for users to perform, and too complex to be amenable to full automation. The notion of cooperative modeling, where a human and a computer system cooperate to perform the modeling task, therefore, has great appeal. We provide a comparative description of humancomputer cooperative interaction paradigms for creating <b>graphical</b> <b>objects.</b> This work serves three purposes: 1.) to present a conceptual framework for organizing known paradigms; 2.) to provide a basis for choosing among the set of existing paradigms; and 3.) to expose opportunities for developing new interaction paradigms with certain desirable combinations of characteristics. Keywords:Keywords: Graphical user interfaces, modeling, design automation, human-machine interaction, interaction techniques, critics, constraint-based design, cooperative design, automated design of graphical displays. 1 Introduction Modeling [...] -theprocess of creating <b>graphical</b> <b>objects</b> [...] - de [...] ...|$|R
