4|13|Public
60|$|The Doctor's {{house has}} not yet {{received}} the compliment of a description, {{and it is now}} high time that the omission were supplied, for the house is itself an actor in the story, and one whose part is nearly at an end. Two stories in height, walls of a warm yellow, tiles of an ancient ruddy brown diversified with moss and lichen, it stood with one wall to the street in the angle of the Doctor's property. It was roomy, draughty, and inconvenient. The large rafters were here and there engraven with rude marks and patterns; the hand-rail of the stair was carved in countrified arabesque; a stout timber pillar, which did duty to support the dining-room roof, bore mysterious characters on its darker side, runes, according to the Doctor; nor did he fail, when he ran over the legendary history of the house and its possessors, to dwell upon the Scandinavian scholar who had left them. Floors, doors, and rafters made a great variety of angles; every room had a particular inclination; the gable had tilted towards the garden, after the manner of a leaning tower, and one of the former proprietors had buttressed the building from that side with a great strut of wood, like the derrick of a crane. Altogether, it had many marks of ruin; it was a house for the rats to desert; and nothing but its excellent brightness--the window-glass polished and shining, the paint well scoured, the brasses radiant, the very prop all wreathed about with climbing flowers--nothing but its air of a well-tended, smiling veteran, sitting, crutch and all, in the sunny corner of a garden, marked it as a house for comfortable people to inhabit. In poor or <b>idle</b> <b>management</b> it would soon have hurried into the blackguard stages of decay. As it was, the whole family loved it, and the Doctor was never better inspired than when he narrated its imaginary story and drew the character of its successive masters, from the Hebrew merchant who had re-edified its walls after the sack of the town, and past the mysterious engraver of the runes, down to the long-headed, dirty-handed boor from whom he had himself acquired it at a ruinous expense. As for any alarm about its security, the idea had never presented itself. What had stood four centuries might well endure a little longer.|$|E
50|$|North American Transport Services {{operates}} {{a fleet of}} over 250 trucks and 400+ trailers. The company’s tractor fleet consists of trucks manufactured by Freightliner, {{with an average age}} of 24 months, and the company’s 53 ft dry van trailers are manufactured by Great Dane and Hyundai with an average age of 32 months. Over the past years, NATS has been taking measures to increase aerodynamics in both tractors and trailers which include the installation of speed and <b>idle</b> <b>management</b> controls for trucks and side skirts for trailers. These initiatives are contributing to more efficient equipment exploitation, which results in lower fuel and maintenance costs benefitting the company and the environment. NATS is also a SmartWay Transportation partner. The company’s tractor fleet is fully compliant with the EPA-issued emission standards. Aside from improvements to aerodynamics and fuel consumption, all company tractors are equipped with Omnitracs satellite communication devices.|$|E
40|$|In {{response}} to a United States Department of Energy (DOE) solicitation, the Maryland Energy Administration (MEA), in partnership with CSX Transportation, Inc. (CSXT), submitted a proposal to DOE to support the demonstration of Auxiliary Power Unit (APU) technology on fifty-six CSXT locomotives. The project purpose was to demonstrate the idle fuel savings, the Nitrous Oxide (NOX) emissions reduction and the noise reduction capabilities of the APU. Fifty-six CSXT Baltimore Division locomotives were equipped with APUs, Engine Run Managers (ERM) and communications equipment to permit GPS tracking and data collection from the locomotives. Throughout the report there is mention of the percent {{time spent in the}} State of Maryland. The fifty-six locomotives spent most of their time inside the borders of Maryland and some spent all their time inside the state borders. Usually when a locomotive traveled beyond the Maryland State border it was into an adjoining state. They were divided into four groups according to assignment: (1) Power Unit/Switcher Mate units, (2) Remote Control units, (3) SD 50 Pusher units and (4) Other units. The primary data of interest were idle data plus the status of the locomotive [...] stationary or moving. Also collected were main engine off, idling or working. Idle data were collected by county location, by locomotive status (stationary or moving) and type of idle (Idle 1, main engine idling, APU off; Idle 2, main engine off, APU on; Idle 3, main engine off, APU off; Idle 4, main engine idle, APU on). Desirable main engine idle states are main engine off and APU off or main engine off and APU on. Measuring the time the main engine spends in these desirable states versus the total time it could spend in an engine idling state allows the calculation of Percent <b>Idle</b> <b>Management</b> Effectiveness (%IME). IME {{is the result of the}} operation of the APU plus the implementation of CSXT's Warm Weather Shutdown Policy. It is difficult to separate the two. The units demonstrated an IME of 64 % at stationary idle for the test period. The data collected during calendar year 2004 demonstrated that 707, 600 gallons of fuel were saved and 285 tons of NOX were not emitted as a result of <b>idle</b> <b>management</b> in stationary idle, which translates to 12, 636 gallons and 5. 1 tons of NOx per unit respectively. The noise reduction capabilities of the APU demonstrated that at 150 feet from the locomotive the loaded APU with the main engine shut down generated noise that was only marginally above ambient noise level...|$|E
40|$|The {{problem of}} solving games is {{introduced}} as a memory-bound computation (requiring {{a great deal}} more memory than is physically available) and distributed network memory is introduced as a possible technique for providing large amounts of relatively fast memory (compared to disk-based virtual memory) to these applications. A specialized system is built and evaluated for managing large shared, read-only memory spaces for parallel access. A large amount of eort is focused on robustness and proper <b>idle</b> resource <b>management.</b> The nal system provides signicantly better access times than were previously possible. ...|$|R
40|$|Continued {{technology}} scaling presents {{new challenges}} for systemlevel fault tolerance and power management. Decreasing device sizes {{increases the likelihood}} of both transient and permanent faults. Increasing device count, together with the end of Dennard scaling, makes power a critical design constraint. Techniques that seek to improve system reliability frequently use more power. Similarly, many techniques that reduce power hurt system reliability. Ideally system designers should seek out techniques that mutually benefit both fault tolerance and power management. In this paper, we develop a unified technique, called UniFI, for fault tolerance and <b>idle</b> power <b>management</b> in shared memory multi-core systems. UniFI leverages emerging non-volatile memory technologies to provide an energy-efficient lightweight checkpointing technique. In addition to tolerating a large class of faults, UniFI’s frequent checkpoints permit near-instant transition to a deep sleep mode to reduce idle power. UniFI incurs very low performance and energy overheads during fault-free execution— less than 2 %—while taking checkpoints every 0. 1 ms. For typical server workloads (such as DNS), UniFI reduces average power by 82 % by shutting off during idle periods...|$|R
40|$|We are {{interested}} in an independent, affordable demand responsive transportation structure involving high quality of service and comfort similar to individual cars. The reduced fares will be achieved by raising the number of car passengers while keeping vehicles as busy as possible. The high standard of service will be ensured by a smart allocation of passengers to vehicles whilst optimal car itineraries will be defined according to their present state and the current traffic conditions. Moreover, the detours which clients can tolerate will be controlled and client waiting times will be taken into consideration. The system covers an entire urban area (including the suburbs), ensuring autonomous door-to-door services and flexible operational modes while it is destined for all classes of commuters. Various strategies on the system management and dimensioning will be examined and each resulting performance will be appraised (in balance with the pending costs). Metrics on client detours, client waiting times, vehicle occupancy etc. are provided. Optimisation of all the real-time controls governing the system (e. g. client acceptance, vehicle itinerary, <b>idle</b> vehicle <b>management</b> etc.) will be achieved within a virtual but reliable environment by a made-to-measure discrete event decision tool...|$|R
40|$|ITS World Congress 2016, Melbourne, Australie, 10 -/ 10 / 2016 - 14 / 10 / 2016 We are {{interested}} in an independent, affordable demand responsive transportation structure involving high quality of service and comfort similar to individual cars. Thereduced fares will be achieved by raising the number of car passengers while keeping vehicles as busy as possible. The high standard of service will be ensured by a smart allocation of passengers to vehicles whilst optimal car itineraries will be defined according to their present state and the current traffic conditions. Moreover, the detours which clients can tolerate will be controlled and client waiting times will be taken into consideration. The system covers an entire urban area (including the suburbs), ensuring autonomous door-to-door services and flexible operational modes while it is destined for all classes of commuters. Various strategies on the system management and dimensioning will be examined and each resulting performance will be appraised (in balance with the pending costs). Metrics on client detours, client waiting times, vehicle occupancy etc. are provided. Optimisation of all the real-time controls governing the system (e. g. client acceptance, vehicle itinerary, <b>idle</b> vehicle <b>management</b> etc.) will be achieved within a virtual but reliable environment by a made-to-measure discrete event decision tool...|$|R
40|$|Power {{and energy}} consumption, today {{essential}} in {{all types of}} systems, can be reduced by scaling the voltage/frequency at runtime and/or powering down <b>idle</b> components. Efficient <b>management</b> requires not only pertinent decisions, but also early access to workload information, as well as domain specific solutions. This paper focuses on runtime energy management for streaming applications running on multiprocessor platforms with dynamic voltage/frequency (speed) scaling capabilities. Our energy management occurs at processor level, and employs a number of orthogonal techniques based on hints gathered from load history, buffer pressure and future workload estimates. The manager operates both through speed adjustments and priorities. A preliminary evaluation based on a high-level simulation of an MPEG- 4 SP decoder, shows {{that a combination of}} specific and generic techniques is the closest to an ideal energy lower bound...|$|R
5000|$|Programs written, or adapted, for any {{multitasking}} platform need {{to avoid}} the technique used by single-tasking systems of going into endless loops until interrupted when, for example, waiting for a user to press a key; this wasted processor time {{that could be used}} by other processes. Instead, Concurrent DOS provided an API call which a process could call to [...] "sleep" [...] for a period of time. Later versions of the Concurrent DOS kernel included Idle Detection, which monitored MS-DOS API calls to determine whether the application was doing useful work or in fact idle, in which case the process was suspended allowing other processes to run. Idle Detection was the catalyst for the patented DR-DOS Dynamic <b>Idle</b> Detection power <b>management</b> feature invented in 1989 by Roger Gross and John Constant and marketed as BatteryMax (US Patent 5,355501) ...|$|R
40|$|Dynamic power {{management}} saves power by shutting down <b>idle</b> devices. Several <b>management</b> algorithms {{have been proposed}} and demonstrated effective in certain applications. We quantitatively compare the power saving and performance impact of these algorithms on hard disks of a desktop and a notebook computers. This paper has three contributions. First, we build a framework in Windows NT to implement power managers running realistic workloads and directly interacting with users. Second, we define performance degradation that reflects user perception. Finally, we compare power saving and performance of existing algorithms and analyze the difference. 1. Introduction Dynamic {{power management}} (DPM) is an effective approach to reduce power consumption without significantly degrading performance [2]. DPM shuts down devices {{when they are not}} being used and wakes them up when necessary. When a device is not used, it is called idle; otherwise, it is called busy. DPM algorithms observe request patt [...] ...|$|R
40|$|Abstract: Generally, {{there are}} {{periodic}} interrupt {{services in the}} real-time embedded systems even when the system is in the idle state such as the periodic clock tick interrupts. To minimize the <b>idle</b> power, power <b>management</b> therefore should consider the effect of periodic interrupt services. In this paper, we {{deal with this problem}} considering two scenarios. In case the periodic interrupt cannot be disabled, we first model the power consumption and then propose static and dynamic approaches for the optimal frequency selection to save idle power. On the other hand, in case the periodic interrupt can be disabled, we propose an approach to delay the interrupt service until the next task is released so that the processor can stay in low power mode for longer time. The proposed approaches are implemented in a real-time OS and its effectiveness has been validated by theoretical calculations and actually measurements on an embedded processor. Key words: dynamic power management; dynamic voltage/frequency scaling; real-time embedded systems 1...|$|R
40|$|Abstract —Due to the {{time-varying}} {{nature of}} real workload, {{a large scale}} computer system has {{quite a number of}} idle nodes in most time of operation. They consume energy, but do nothing useful. To save the huge energy waste caused by such active idle nodes, most modern compute nodes provide multiple level dynamic sleep mechanisms to reduce power consumption. However, awaking sleeping nodes takes time, thus affects the response times and performance of the system. A node is deeper in sleep, it consumes less energy, but has longer wakeup latency. This paper proposes a sleep state management model to balance the system’s energy consumption and response times. In this model, idle nodes are classified into different groups according to their sleep states. Each group contains nodes of same level of sleep depth and forms a reserve pool of a certain readiness level. In a resource allocation process, nodes in the pool of highest level of readiness are preferentially provided to the application. When the nodes in the pool of the highest readiness level are not sufficient, the nodes in the pool(s) of next level(s) of readiness are allocated. After each allocation and reclaim of nodes, the numbers of nodes in each level of pools are adjusted by changing the sleep depth of the nodes up and down. Thus, the reserve pools can be maintained at all times. Obviously, a key factor that affects the effectiveness of the <b>idle</b> node <b>management</b> is the sizes of the reserve pools. This paper proposes and investigates a self-adaptive approach to this problem so that the sizes of reserve pools are dynamically adjusted according to the applications. Our experiments demonstrated that, by applying our self-adaptive management, the power consumption of idle nodes can be reduced by 84. 12 % with the cost of slowdown rate being only 8. 85 %...|$|R
40|$|Energy {{efficient}} {{system design}} {{is becoming increasingly}} important {{with the proliferation of}} portable, battery-operated appliances such as laptops, Personal Digital Assistants (PDAs) and cellular phones. Numerous dedicated hardware approaches for energy mini-mization have been proposed while software energy efficiency has been relatively unexplored. Since it is the software that drives the hardware, decisions taken during software design can {{have a significant impact on}} system energy consumption. This thesis explores avenues for improving system energy efficiency from application level to the operating system level. The embedded operating system can have a significant impact on system energy by performing dynamic power management both in the active and passive states of the device. Software controlled active power management techniques using dynamic voltage and frequency scaling have been explored. Efficient workload prediction strategies have been developed that enable just-in-time computation. An algorithm for efficient real-time operating system task scheduling has also been developed that minimizes energy consumption. Portable systems spend a lot of time in sleep mode. <b>Idle</b> power <b>management</b> strategies have been developed that consider the effect of leakage and duty-cycle on system lifetime. A hierarchical shutdown approach for systems characterized multiple sleep states has been proposed. Although the proposed techniques are quite general, their applicability and utility have been demonstrated using the MIT [mu]AMPS wireless sensor node an example system wherever possible. (cont.) To quantify software energy consumption, an estimation framework has been developed based on experiments on the StrongARM and Hitachi processors. The software energy profiling tool is available on-line. Finally, in energy constrained systems, we would like to have the ability to trade-off quality of service for extended battery life. A scalable approach to application development has been demonstrated that allows energy quality trade-offs. by Amit Sinha. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2001. Includes bibliographical references (p. 153 - 159) ...|$|R
40|$|To reduce energy {{consumption}} from idle listening, nodes in ad hoc networks can {{switch to a}} power-save mode. However, some nodes may need to stay in active mode to support forwarding. The main challenge of selecting which nodes should stay in active or power-save mode stems from the need to conserve energy while maintaining communication. Although, topology management protocols identify redundant nodes that may power down their radios, such protocols incur proactive backbone maintenance overhead even when the network is <b>idle.</b> On-demand power <b>management</b> manages node transitions from active to power-save mode based on information from the routing protocol. However, on-demand power management is only traffic-driven and may result in keeping redundant nodes awake. In this paper, we propose TITAN, which builds a forwarding backbone reactively utilizing information about both ongoing communication and the current power-management mode of nodes along potential routes. The design of TITAN is based on our analysis of the tradeoffs between using shorter routes and waking up power-saving nodes and using longer routes through nodes that are already active. Through extensive simulation, we demonstrate that TITAN achieves energy conservation while maintaining efficient communication without incurring any additional control overhead for topology management...|$|R
40|$|The study aims at {{measuring}} investment efficiencies {{peculiar to}} the closed-system specialized poultry projects {{located in the}} Saudi Central Region. In addition, {{the identification of the}} absolute and relative importance of the most vital characteristics of these projects is also examined. Thirty-seven broiler projects and 24 table-egg projects have been examined. They represent 85 % and 68 % of the standing projects in the Central Region, respectively. Averages, multiple regression analysis, and partial correlation coefficients have all been utilized. The results show that: (1) In general, the return on investment for table-egg projects outweighs those for broiler projects. The corresponding estimated rates of return on investment for both types stand at 28. 5 % and 12 % for table-egg and broiler projects, respectively. On the other hand, the corresponding figures for live chicken, live/prepared chicken, and prepared chicken stand at 5. 9 %, 5. 7 %, and 13. 2 %, respectively. (2) The best model which represents the relationship between the return on investment and the characteristics of poultry projects utilizing dummy variables is the one which considers the interaction between production pattern and operational efficiency. This implies that the impact of the operational efficiency on the rate of return on investment differs according to the production pattern experienced. (3) Operational and managerial efficiencies are found {{to be the most important}} factors that possess high impacts on the rate of return on investment. This implies that achieving high operational efficiency, reducing <b>idle</b> assets, improving <b>management</b> efficiency, choosing qualified personnel, and conducting training sessions for workers are all of utmost importance for raising the investment efficiency for the poultry industry in the Kingdom...|$|R
40|$|The {{methods of}} {{operation}} of many newspaper camera departments {{have been established}} {{over a long period}} by many different supervisors and department heads. The system may have been good once but went bad because the nature of the department 2 ̆ 7 s operations changed without corresponding changes in the system. The production manager must be able to detect when a system needs modifying. Presently, there are few tools available to the manager for evaluating the effectiveness of the department. The goal {{of this study was to}} demonstrate how a very simple analytical technique could be applied to a camera department 2 ̆ 7 s operations and, thereby, determine the department 2 ̆ 7 s operating characteristics. This analytical technique is called queueing analysis. The particular camera department studied contained two independent systems. One camera serviced pasted-up pages while the other serviced halftones and artwork. Each of these systems or channels was studied separately. However, before the systems could be studied, several assumptions of the queueing model had to be satisfied. These assumptions were: (1) copy arrivals must be Poisson distributed, (2) copy service time must be exponentially distributed, (3) copy can not leave the waiting line after having entered, (4) the service discipline must be first-in-first-out, (5) and the arrival pattern must be random. The only raw data required by the analysis were the copy arrival time and the service time of each piece of copy. The data were compiled to form empirical distributions which were compared to theoretical distributions to determine the feasibility of the assumptions. The average arrival rate and service rate were also determined from this compiled data. These two averages were substituted into formulas developed by theorists to determine the operating characteristics or measures of effectiveness for the camera department. The analysis was carried out over a two week period and considered each system on a weekly basis. In this manner the two weeks of operation could be compared. It was found that the page channel could be monitored quite easily using queueing analysis, but the halftone/artwork camera could not be studied without modifications. It was found that the expected time a page spent in the system was much longer than previously thought. During the first week of observation, the expected time in the system was 18. 9 minutes per page. It was 11. 4 minutes per page during the second week. There was also a great difference between the two times which might indicate that something in the system had changed. It was found that the expected number of pages in the system per half hour during the first week was 1. 69 and 1. 06 during the second week. It would be expected that the system could handle a greater number of pages than this. This observation was further supported by the weekly busy period probabilities determined for the system. This is the probability that the system will be busy during any half hour interval during the week. The busy period probability was. 63 for the first week and. 51 for the second. These figures indicated that there was a great deal of idle time in this system. In fact, there was 23 hours and 19 minutes of idle time during the first week and 30 hours and 52 minutes during the second week. It was impossible to draw any straightforward conclusions from these results without knowing the objectives of the organization. If management 2 ̆ 7 s goal was to minimize costs in this department, it was evident this objective was not being met in light of the great amount of idle time that existed. To realize this goal, management must reduce this <b>idle</b> time. If <b>management</b> 2 ̆ 7 s goal was to maximize speed, the system would again be out of line with management 2 ̆ 7 s expectations. However, this goal may have been more closely realized. To fully satisfy this objective would require management to reduce the time copy spends in the system. This study demonstrates that queueing analysis can be used quite successfully and easily in determining the operating characteristics of a camera department. It was also demonstrated that even when the analysis was not successful, much could be learned about the system through the application of this tool...|$|R

