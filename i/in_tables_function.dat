0|10000|Public
5000|$|MEGF8 is {{predicted}} to contain several different types of features, domains, and motifs that {{play a key role}} in the protein's function, structure, and location. These are listed <b>in</b> <b>Table</b> 1. <b>Functions,</b> found through SMART analysis, as well as NCBI Conserved Domains Search include: ...|$|R
50|$|The {{values of}} these {{functions}} for different {{values of the}} argument x were often listed <b>in</b> <b>tables</b> of special <b>functions</b> <b>in</b> the era when numerical calculation of integrals was slow. A table that lists some approximate values of the three first functions Kin is shown below.|$|R
40|$|A Content Addressable Memory (CAM) is {{a memory}} unit that {{performs}} single clock cycle content matching instead of addresses. CAM's are vast used <b>in</b> look-up <b>table</b> <b>functions,</b> network routers and cache controllers. Since basic lookups are performed {{over all the}} stored memory information {{there is a high}} power dissipation. In reality there is always trade-offs between power consumption, area used and the speed. Here is presented an conceptual abstraction for content addressable memory chip at architecture level with reduced power requirements based on combination and modifications of power saving techniques...|$|R
2500|$|Tables {{of complex}} {{values of the}} gamma function, as well as {{hand-drawn}} graphs, were given <b>in</b> <b>Tables</b> of Higher <b>Functions</b> by Jahnke and Emde, first published in Germany in 1909. According to Michael Berry, [...] "the publication in J of a three-dimensional graph showing the poles of the gamma function in the complex plane acquired an almost iconic status." ...|$|R
50|$|Tables {{also would}} have figured {{prominently}} in religious contexts, as indicated in vase paintings. One example by the Chicago Painter from The Art Institute of Chicago, dating to around 450 B.C.E., shows an image of three women performing a Dionysian ritual, <b>in</b> which a <b>table</b> <b>functions</b> as an appropriate place to rest a kantharos - a wine vessel associated with Dionysus. Other images indicate that <b>tables</b> could range <b>in</b> style from the highly ornate to the relatively unadorned.|$|R
40|$|The {{remaining}} {{boundary conditions}} {{can be met}} using the same approach as used for the normal stress conditions [12]. These conditions yield the matrix given <b>in</b> <b>Table</b> 1. Green's <b>Function</b> for Shear The tangential deflection on the surface from equation (Al) can be expressed as: (l-i> 2) I" 30 d 2 G cos i f 7 rE I; dv 2 '-ds where d 2...|$|R
40|$|A {{method is}} {{described}} for unconstrained function minimization using function values and no derivatives. A quadratic {{model of the}} function is formed by interpolation to points <b>in</b> a <b>table</b> of <b>function</b> values. The quadratic model (not necessarily positive definite) is minimized over a constraining region of validity to locate the next trial point. The points of interpolation are chosen from a data <b>table</b> containing <b>function</b> values at an initial grid and at subsequent trial points. The method is efficient in its use of function evaluations, but expensive in computation required to choose new trial points. 1...|$|R
5000|$|The {{function}} {{corresponding to}} a solution {{can be calculated}} from {{the first part of}} the table above and the solution. As an example, for the last solution marked <b>in</b> the <b>table,</b> this <b>function</b> can be determined for arguments [...] as follows: first, these three values are {{the first part of the}} row [...] "c" [...] in the table; the value of the function is the value of the solution in the same column, that is, 0.|$|R
40|$|AbstractComputing {{the value}} of the Jacobian {{elliptic}} functions, given the argument u and the parameter m, is a problem, whose solution can be found either tabulated <b>in</b> <b>tables</b> of elliptic <b>functions</b> [1] or by use of existing software, such as Mathematica, etc. The inverse problem, finding the argument, given the Jacobian elliptic function and the parameter m, is a problem whose solution is found only <b>in</b> <b>tables</b> of elliptic <b>functions.</b> Standard polynomial inverse interpolation procedures fail, due to ill conditioning of the system of linear equations of the unknowns. In this paper, we describe a numerical procedure for inverse interpolation which gives good results in the computation of the argument of the Jacobian elliptic function given the Jacobian elliptic function and the parameter. Also, a direct interpolation is described which gives the Zeta function of Jacobi and the complete elliptic integral of the second kind given the argument and the parameter. These new interpolation procedures are important in problems involving cavities or inclusions of ellipsoidal shape encountered in the mechanical design of bearings, filters and composite materials. They are also important in the modelling of porosity of bones. This porosity may lead to osteoporosis, a disease which affects bone mineral density in humans with bad consequences...|$|R
5000|$|Procedure Views (<b>Table</b> Valued <b>Functions</b> <b>in</b> SQL Server and <b>Table</b> <b>Functions</b> <b>in</b> Oracle) ...|$|R
5000|$|Pipelined <b>table</b> <b>functions</b> return collectionsand {{take the}} form: ...|$|R
5000|$|Polymorphic <b>table</b> functions: <b>table</b> <b>functions</b> without {{predefined}} {{return type}} ...|$|R
5000|$|The From clause can {{generally}} be anything that returns a rowset, a <b>table,</b> view, <b>function,</b> or system-provided information like the Information Schema, which is typically running proprietary commands and returning the information <b>in</b> a <b>table</b> form.|$|R
3000|$|In (16), ρ (r_n,l,α̅_l,I_n') is a lookup <b>table</b> <b>function</b> that selects the {{achievable}} {{data rate}} of UE n, on PRB l, {{based on the}} muting decision α̅_l of the strongest interfering BSs of UE n, as indexed by I_n'. The lookup <b>table</b> <b>function</b> ρ(·) selects the achievable data rate from the J [...]...|$|R
5000|$|Components: {{continuous}} blocks, <b>tables,</b> <b>functions,</b> logics, hysteresis, discrete signal, routing, bus, cyclic components, ...|$|R
5000|$|The {{pseudo code}} that adds {{transposition}} <b>table</b> <b>functions</b> to negamax with alpha/beta pruning is given as follows: ...|$|R
30|$|Step 2 : Similarity search. The {{forecast}} mean trend segment y_N-(s- 1)τ^(1) {{is projected}} to l buckets by the l hash <b>table</b> <b>functions.</b> <b>In</b> each <b>table,</b> the segments hashed into the same bucket as the forecast segment are returned, and the N_s more similar ones, which have a smaller distance from the forecast segment, are selected {{to be used in}} local forecasting. Instead of computing the distance of all segments, LSH only calculates the distance of segments in the same bucket, which saves time remarkably.|$|R
40|$|This paper {{describes}} new two obfuscation methods {{the fist}} method can control computational complexity {{and the second}} method can achieve semantic obfuscation. The computational complexity can be strictly controlled by using the technique of RSA encryption. The computational complexity can be arbitrarily specified by the impossibility of factorization of prime number in RSA encryption method. Semantic obfuscation is achieved by transforming a <b>function</b> into a <b>table</b> <b>function.</b> The <b>table</b> <b>function</b> method only shows input data and output data. It hides all the intermediate processing data. Because the explicit function form is hidden, {{it is thought that}} analysis takes time. The computational complexity technique and semantic technique can be used at the same time, by embedding the <b>table</b> <b>function</b> into the program with computational complexity method...|$|R
50|$|In {{relational}} database management systems, a user-defined function provides {{a mechanism for}} extending the functionality of the database server by adding a function, that can be evaluated in standard query language (usually SQL) statements. The SQL standard distinguishes between scalar and <b>table</b> <b>functions.</b> A scalar function returns only a single value (or NULL), whereas a <b>table</b> <b>function</b> returns a (relational) table comprising zero or more rows, each row {{with one or more}} columns.|$|R
40|$|Devising {{a scheme}} for {{efficient}} and scalable querying of Resource Description Framework (RDF) data {{has been an}} active area of current research. However, most approaches define new languages for querying RDF data, which has the following shortcomings: 1) They are difficult to integrate with SQL queries used in database applications, and 2) They incur inefficiency as data has to be transformed from SQL to the corresponding language data format. This paper proposes a SQL based scheme that avoids these problems. Specifically, it introduces a SQL <b>table</b> <b>function</b> RDF_MATCH to query RDF data. The results of RDF_MATCH <b>table</b> <b>function</b> can be further processed by SQL's rich querying capabilities and seamlessly combined with queries on traditional relational data. Furthermore, the RDF_MATCH <b>table</b> <b>function</b> invocation is rewritten as a SQL query, thereby avoiding run-time <b>table</b> <b>function</b> procedural overheads. It also enables optimization of rewritten query {{in conjunction with the}} rest of the query. The resulting query is executed efficiently by making use of B-tree indexes as well as specialized subject-property materialized views. This paper describes the functionality of the RDF_MATCH <b>table</b> <b>function</b> for querying RDF data, which can optionally include user-defined rulebases, and discusses its implementation in Oracle RDBMS. It also presents an experimental study characterizing the overhead eliminated by avoiding procedural code at runtime, characterizing performance under various input conditions, and demonstrating scalability using 80 million RDF triples from UniProt protein and annotation data...|$|R
50|$|Plugin points {{have been}} added to support replication, storage engines, query rewrite, <b>table</b> <b>functions,</b> {{user-defined}} functions, protocol adapters, and multiple query caches.|$|R
50|$|System {{dynamics}} (SD) is {{an approach}} to understanding the nonlinear behaviour of complex systems over time using stocks, flows, internal feedback loops, <b>table</b> <b>functions</b> and time delays.|$|R
5000|$|... cells <b>in</b> the Padé <b>table,</b> from {{position}} (m, n) through position (m+r, n+r), inclusive. In other words, if {{the same}} rational function appears more than once <b>in</b> the <b>table,</b> that rational <b>function</b> occupies a square block of cells within the table. This result {{is known as the}} block theorem.|$|R
40|$|SAS {{users are}} always {{interested}} in learning techniques related to improving data access. One way of improving information retrieval from a SAS data set or table is to create and use an index. An index consists {{of one or more}} columns that are used to uniquely identify each row within a <b>table.</b> <b>Functioning</b> as a SAS object containing the values in one or more columns <b>in</b> a <b>table,</b> an index may be defined as numeric, character, or a combination of both. This presentation will emphasize the rules that users should know when creating and using indexes to make information retrieval more efficient...|$|R
5000|$|SQL:2016 {{introduced}} 44 new optional features. 22 of them {{belong to}} the JSON functionality, ten more are related to polymorphic <b>table</b> <b>functions.</b> The additions to the standard include: ...|$|R
5000|$|A scalar {{function}} returns {{only one}} value (or NULL), whereas a <b>table</b> <b>function</b> returns a (relational) table comprising zero or more rows, each row {{with one or}} more columns.|$|R
40|$|This paper {{describes}} {{the implementation of}} external memory single-pair and single-source path algorithms in a database context, callable from SQL as <b>table</b> <b>functions.</b> The algorithms used are based on Jing, Huang and Rundensteiner's HEPV approach [4] and Chan and Zhang's diskSP algorithm [1]. Both use some degree of precomputation to accelerate path processing. Our implementations of these algorithms are evaluated with particular reference to response time, storage requirements and shortestpath optimality. We test using road system data from the Tiger/Line files [6], stored <b>in</b> relational database <b>tables</b> that support a graph view over the data. ...|$|R
5000|$|The Diversity Round <b>Table</b> <b>functions</b> <b>in</b> {{the spirit}} of the TSAO, whose member schools strive [...] "to cooperate, in their {{outreach}} to prospective students and their families." [...] The mission of the DRT is to: ...|$|R
50|$|Multiplicative hashing is {{a simple}} type of hash {{function}} often used by teachers introducing students to hash <b>tables.</b> Multiplicative hash <b>functions</b> are simple and fast, but have higher collision rates <b>in</b> hash <b>tables</b> than more sophisticated hash functions.|$|R
40|$|Primitive program algebras of multiplace {{functions}} at {{a set of}} finite graphs were studied. An algebraic {{characteristic of}} the graph modifier class is given. The presented results are additional for the results previously obtained for vector, matrix, relational and <b>table</b> <b>functions.</b> ??????? ??????????? ??????????? ??????? ???????????? ??????? ??? ?????????? ???????? ??????. ???? ?????????????? ?????????????? ?????? ???????? ????????????????. ?????????? ?????????? ???????? ??????????? ???????????, ?????????? ????? ??? ?????????, ?????????, ??????????? ? ????????? ???????...|$|R
5000|$|... 2-choice hashing employs two {{different}} hash functions, h1(x) and h2(x), for the hash <b>table.</b> Both hash <b>functions</b> {{are used to}} compute two table locations. When an object is inserted <b>in</b> the <b>table,</b> then it is placed <b>in</b> the <b>table</b> location that contains fewer objects (with the default being the h1(x) table location if there is equality in bucket size). 2-choice hashing employs {{the principle of the}} power of two choices.|$|R
40|$|This paper {{introduces}} a novel function approximation architecture especially {{well suited to}} temporal difference learning. The architecture is based on using sets of interpolated <b>table</b> look-up <b>functions.</b> These offer rapid and stable learning, and are efficient {{when the number of}} inputs is small. An empirical investigation is conducted to test their performance on a supervised learning task, and on themountain car problem, a standard reinforcement learning benchmark. In each case, the interpolated <b>table</b> <b>functions</b> offer competitive performance. © 2009 IEEE...|$|R
40|$|Automated {{sensitivity}} analysis approaches in system dynamics {{focus primarily on}} model parameters. Although <b>table</b> <b>functions</b> are often subjectively approximated, they do not form the focus of most sensitivity analyses. Recently, a promising approach that allows automation of {{sensitivity analysis}} on functions was proposed by Hearne (2010), but the applicability of this method to system dynamics <b>table</b> <b>functions</b> has not been studied, yet. In this study, the new method is applied to a simple system dynamics model. In {{the light of the}} observations a number of shortcomings are identified and a set of extensions to address these are proposed and then tested. The results of experiments with the original and the extended method demonstrate that the method can be used easily and efficiently for <b>table</b> <b>functions.</b> The extensions are shown to be valuable in creating a more comprehensive method, but they also raise the research issue of the tradeoff between their added value and the cost of dealing with increased complication. Apart from our experimental results, the article also puts forth a set of directions along which the approach can be improved further. Despite the issues requiring further research, the method holds promise for routine implementation. Multi Actor SystemsTechnology, Policy and Managemen...|$|R
40|$|A {{modified}} {{square root}} algorithm is proposed. In the algorithm the first iterations are calculated by the <b>table</b> <b>functions,</b> that minimizes both hardware volume {{and speed of}} calculations. The algorithm is implemented in the parametrized Web application, which generates the VHDL entities for FPGA projects. ? ?????? ????????? ???????????????? ???????? ?????????? ??????????? ????? ?????????? ?? ???, ??? ??? ?????? ???????? ??????????? ????????? ????????, ?? ???? ???? ??????????? ?????????? ??????? ? ??????????? ????? ??????????. ???????? ?????????? ? Web-??????????, ??????? ?????????? VHDL-?????? ?????? ? ????????? ???????????, ??????????? ? ????...|$|R
40|$|Objectives—This report {{presents}} abridged cause-elimination life {{tables and}} multiple-decrement life <b>table</b> <b>functions</b> for 33 selected causes of death, by race (white and black) and sex, {{for the total}} United States. It is the fourth {{in a set of}} reports that present life table data for the United States and each state for the period 1999 – 2001. Methods—The life <b>table</b> <b>functions</b> presented <b>in</b> this report represent the mortality experience of a hypothetical cohort assuming that a particular cause of death is eliminated. The report includes a description of the methodology used to estimate the life <b>table</b> <b>functions</b> shown <b>in</b> four sets of tables. Each set contains seven tables, one each for the total population, total males, total females, white males, white females, black males, and black females. Results—From birth, a person has a 31 % chance of dying of Diseases of heart (heart disease) and a 22 % chance of dying of Malignant neoplasms (cancer). In contrast, the probabilities of dying from Accidents (unintentional injuries), Diabetes mellitus (diabetes), and Septicemia— 3 of the 10 leading causes of death in 1991 – 2001 — are much smaller. Likewise, elimination of heart disease would increase life expectancy at birth by almost 4 years, and elimination of cancer by more than 3 years. Other leading causes of death have a much smaller impact...|$|R
50|$|An FO <b>table</b> <b>functions</b> {{much like}} an HTML/CSS table. The user {{specifies}} rows of data for each individual cell. The user can, also, specify some styling information for each column, such as background color. Additionally, the user can specify the first row as a table header row, with its own separate styling information.|$|R
