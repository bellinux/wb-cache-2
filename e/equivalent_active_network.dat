0|2918|Public
40|$|<b>Active</b> <b>networks</b> is a {{relatively}} new concept. In an <b>active</b> <b>network,</b> network nodes in addition to forwarding packets, perform customized computation on the messages flowing through them. In this thesis, we study resource allocation in the context <b>active</b> <b>networks.</b> Resources in an <b>active</b> <b>network</b> node include both CPU and bandwidth...|$|R
40|$|Abstract. <b>Active</b> <b>networks</b> {{represent}} {{a new approach}} to <b>network</b> architecture. <b>Active</b> <b>networks</b> provide a much more flexible network infrastructure than traditional networks do. Flexibility is a powerful merit of <b>active</b> <b>networks,</b> but it can raise considerable security problems. Current <b>active</b> <b>network</b> researches have applied diverse techniques to solve them. Cryptographic technique is one way of protecting <b>active</b> <b>networks.</b> However it should not be applied conventionally, since <b>active</b> <b>network</b> paradigm is different from traditional one. It means that, at <b>active</b> <b>network</b> environments, <b>active</b> packets contain programmable codes should perform computations on intermediate-nodes as well as end-nodes. That is, since the packet sending-node does not know intermediate receiving-node, it cannot apply traditional cryptographic techniques can process each other only between end-nodes. This paper proposes a secure method for transferring active packets and performing computations using a transformed digital signature schemes with message recovery, at <b>active</b> <b>network</b> environment that intermediate packet receiving-nodes are not fixed. The proposed scheme uses transformed public key digital signature scheme that signing/verifying key pairs have almost same bit length and the verification-key storing server plays the role of key management server. ...|$|R
40|$|Byte-code {{representations}} in <b>active</b> <b>networks</b> provide architectural neutrality and code compactness; {{however, the}} resulting execution speed is typically poor due to interpretation overhead. This paper {{shows that the}} performance of capsule-based <b>active</b> <b>networks</b> can benefit from compiling <b>active</b> <b>network</b> programs into native network processor instructions at traversed routers (just-in-time compilation). A key aspect of the paper is to demonstrate that just-in-time compilers for <b>active</b> <b>networks</b> can be fast and small enough for applicability in the datapath of network processors. The approach has been implemented based on the SNAP <b>active</b> <b>network</b> framework for the PowerNP network processor...|$|R
40|$|Abstract. In this paper, {{the general}} {{architecture}} of adaptive control and management in <b>active</b> <b>networks</b> is presented. The proposed Adaptive <b>Active</b> <b>Network</b> Control and Management System (AANCMS) merges technology from network management and distributed simulation {{to provide a}} unified paradigm for assessing, controlling and designing <b>active</b> <b>networks.</b> ...|$|R
40|$|For {{deployment}} of <b>active</b> <b>network</b> technology, <b>active</b> <b>network</b> applications {{play an important}} role. They should show good performance to users even {{under the condition that}} a small number of routers are equipped with <b>active</b> <b>network</b> technology. From performance aspects, crossing point of performance of <b>active</b> <b>network</b> application and end-to-end approach is very important. An <b>active</b> <b>network</b> application having a crossing point with a small number of active routers, will be a candidate of applications accelerating {{deployment of}} <b>active</b> <b>network</b> technology. In the paper, we first discuss about the following two important performance issues, “how many active routers bring good performance? ” and “what is a good location of active routers? ” We pick up two examples of <b>active</b> <b>network</b> applications, request routing in CDNs and reliable multicast, and show some interesting performance evaluation results from the viewpoint of these two issues. And we discuss about deployment issues by using these performance evaluation results. ...|$|R
40|$|Abstract: Future {{computer}} networks {{must be more}} flexible and faster then today. <b>Active</b> <b>network</b> paradigm is the way how to add flexibility to networks. During the last five years, a number of models for <b>active</b> <b>networks</b> realization were presented. In <b>active</b> <b>networks,</b> the concept of network as a distributed programmed facility is developed. This concept makes possible new applications and special services. <b>Active</b> <b>network</b> models are described and our <b>active</b> <b>network</b> model is described in more detail. We discus applications which need special network features and the position active routers and switches have in network infrastructure {{in order to satisfy}} these demands. An application which supports collaborative work, requiring data, audio and video streams to be transferred through the network is used to demonstrate how <b>active</b> <b>network</b> element can process dataflows with specific features in both uni- and multicast environments. An overly of <b>active</b> <b>network</b> elements placed in particular points of the non-intelligent high speed network is presented as a model which supports both the intelligence and high throughput without need of specialized costly hardware support...|$|R
40|$|This paper {{presents}} {{an overview of}} a new <b>network</b> technology: <b>active</b> <b>networks.</b> The <b>active</b> <b>networks</b> goal is to produce a new networking platform, flexible and extensible at runtime to accommodate the rapid evolution and deployment of networking technologies and also to provide the increasingly sophisticated services demanded by users. A snapshot of the architecture being developed in DARPA <b>active</b> <b>networks</b> program is presented. Finally, potential applications of <b>active</b> <b>networks</b> are highlighted, {{along with some of}} the challenges that must be overcome to make them a reality...|$|R
40|$|<b>Active</b> <b>networks</b> {{represent}} {{a new approach}} to network architecture. Routers can perform computations on user data, while packets can carry programs to be executed on routers and possibly change their state. Currently, the research community is divided concerning the usefulness of <b>active</b> <b>networks.</b> On the one hand, <b>active</b> <b>networks</b> provide a much more flexible network infrastructure, with increased capabilities. On the other hand, they are obviously more complex than traditional networks and raise considerable security issues. The {{purpose of this article is}} to provide a broad survey on <b>active</b> <b>networks.</b> The first goal is to highlight their efficiency in a variety of applications. After presenting some key points on each application, we discuss some current experimental technologies and assess the usefulness of <b>active</b> <b>networks</b> in congestion control, multicasting, caching, and network management. The second goal is to address the security issues that <b>active</b> <b>networks</b> raise: the proble [...] ...|$|R
40|$|<b>Active</b> <b>networks</b> allow code to {{be loaded}} {{dynamically}} into network nodes at run-time. This code can perform tasks specific to {{a stream of}} packets or even a single packet. In this paper we compare two <b>active</b> <b>network</b> architectures: the <b>Active</b> <b>Network</b> Transfer System (ANTS) and the Messenger System (M 0). We have implemented a robust audio multicast protocol and a layered video multicast protocol with both <b>active</b> <b>network</b> systems. We discuss the differences of the two systems, evaluate architectural strengths and weaknesses, compare the runtime performance, and report practical experience and lessons learned...|$|R
40|$|<b>Active</b> <b>Networks</b> are an {{exciting}} and novel approach to network architecture {{in which the}} intermediate switches (routers) perform customized computations on the packets flowing through them. The packets contain both data and code. The code in the packets executes on <b>active</b> <b>network</b> nodes that support a generic execution platform. We explore the role of operating systems in <b>Active</b> <b>Networks</b> by presenting the design {{and implementation of the}} Janos Operating System for the <b>Active</b> <b>Networks</b> nodes. The primary focus of Janos is strong resource management and control of untrusted active applications written in Java...|$|R
40|$|This paper {{focuses on}} <b>active</b> <b>networks</b> {{applications}} {{and in particular}} on the possible interactions among these applications. Active networking is a very promising research field which has been developed recently, and which poses several interesting challenges to network designers. A number of proposals for e±cient <b>active</b> <b>network</b> architectures are already {{to be found in}} the literature. However, how two or more <b>active</b> <b>network</b> applications may interact has not being investigated so far. In this work, we consider a number of applications that have been designed to exploit the main features of <b>active</b> <b>networks</b> and we discuss what are the main benefits that these applications may derive from them. Then, we introduce some forms of interaction including interference and communications among applications, and identify the components of an <b>active</b> <b>network</b> architecture that are needed to support these forms of interaction. We conclude by presenting a brief example of an <b>active</b> <b>network</b> application exploiting the concept of interaction. ...|$|R
40|$|Active {{networking}} techniques embed computational capabilities into conventional networks thereby massively {{increasing the}} complexity and customization of the computations that are performed with a network. In depth studies of these large and complex networks that are still in their nascent stages cannot be effectively performed using analytical methods. Hence, discrete event simulation techniques are the only viable means to study and analyze active networking architectures. Furthermore, customized and flexible tools are required to {{for the analysis of}} <b>active</b> <b>networks</b> using simulation. This paper describes an integrated environment for the modeling and parallel simulation of <b>active</b> <b>networks</b> called <b>Active</b> <b>Networks</b> Simulation Environment (or ANSE). ANSE utilizes the Time Warp synchronized kernel of WARPED (a general purpose discrete event simulation kernel) to enable parallel simulation of <b>active</b> <b>network</b> models. ANSE also includes complete support for the modeling and simulation of <b>active</b> <b>networks</b> based on PLAN (Packet Language for <b>Active</b> <b>Networks).</b> This paper presents the issues involved in the design and development of ANSE. The Application Programming Interface (API) of ANSE is presented along with the issues involved in utilizing it to develop support for PLAN based <b>active</b> <b>networks.</b> The paper also presents some results obtained from the several experiments conducted {{to evaluate the effectiveness of}} ANSE. Our studies indicate that ANSE provides an effective environment for modeling and simulation of large scale <b>active</b> <b>networks...</b>|$|R
40|$|Abstract <b>Active</b> <b>networks</b> {{represent}} {{a significant step}} {{in the evolution of}} packet-switched networks, from traditional packet-forwarding engines to more general functionality supporting dynamic control and modification of the network behavior. However, the phrase &quot;active network &quot; means different things to different people. This article introduces a model and nomenclature for talking about <b>active</b> <b>networks,</b> describes some possible approaches in terms of that nomenclature, and presents various aspects of the architecture being developed in the DARPA-funded <b>active</b> <b>networks</b> program. Potential applications of <b>active</b> <b>networks</b> are highlighted, along with some of the challenges that must be overcome to make them a reality...|$|R
40|$|An <b>active</b> <b>network</b> is an {{approach}} that allows network packets to carry customized programs to be executed on network nodes such as routers and switches. The customized programs can change the network node state, enhance the node operations, or add new features or services to the network nodes. In this report the advantages, approaches, architecture, and applications of <b>active</b> <b>networks</b> are investigated and summarized. In addition, current research issues in <b>active</b> <b>networks</b> are identified. Many <b>active</b> <b>network</b> approaches are used for enhancing performance, flexibility, and scalability of distributed computing environments running in wide-area networks such as the computational grid. As one of the application domain, these approaches are investigated. Furthermore, a research direction for utilizing <b>active</b> <b>networks</b> for enhancing {{the performance of the}} computational grid at the programming model environments level is discussed...|$|R
40|$|In {{this paper}} we {{describe}} and discuss an Application Level <b>Active</b> <b>Network</b> system. This system provides {{the benefits of}} proposed <b>Active</b> <b>Networks,</b> including rapid and transparent deployment of new network services. However our system is also relatively free {{of the problems of}} router-level <b>Active</b> <b>Network</b> deployment, such as concerns over safety and resource management. We describe our overall architecture and its components. We then describe and discuss an implementation of the architecture in Java. We present a number of applications that have been implemented on the architecture, and indicate the benefits of our approach. Key words: <b>Active</b> <b>Networks,</b> <b>Active</b> Services, Dynamic Proxy Server, Proxylets 1 Introduction Currently the deployment of new communication services is limited by the slowness of standardisation processes and the inflexibility of the communications infrastructure. Recently an approach to overcoming these problems has been proposed in the form of <b>Active</b> <b>Networks</b> (AN) [...] ...|$|R
40|$|Janos is an {{operating}} system for <b>active</b> <b>network</b> nodes whose primary focus is strong resource {{management and control}} of untrusted active applications written in Java. Janos includes the three major components of a Javabased <b>active</b> <b>network</b> operating system: the low-level NodeOS, a resource-aware Java Virtual Machine, and an <b>active</b> <b>network</b> protocol execution environment. Each of these components is separately usable. This article lays out the Janos design and its rationale. ...|$|R
40|$|<b>Active</b> <b>Networks</b> {{can be seen}} as an {{evolution}} of the classical model of packet-switched networks. The traditional and ”passive” network model is based on a static definition of the <b>network</b> node behaviour. <b>Active</b> <b>Networks</b> propose an “active” model where the intermediate nodes (switches and routers) can load and execute user code contained in the data units (packets). <b>Active</b> <b>Networks</b> are a programmable network model, where bandwidth and computation are both considered shared network resources. This approach opens up new interesting research fields. This paper gives a short introduction of <b>Active</b> <b>Networks,</b> discusses the advantages they introduce and presents the research advances in this field. ...|$|R
40|$|<b>Active</b> <b>networks</b> {{represent}} {{a significant step}} {{in the evolution of}} packet-switched networks, from traditional packet-forwarding engines to more general functionality supporting dynamic control and modification of network behavior. However, the phrase ^ network^] means different things to different people. This survey introduces a model and nomenclature for talking about <b>active</b> <b>networks,</b> describes some possible approaches in terms of that nomenclature, and presents various aspects of the architecture being developed in the DARPA-funded <b>active</b> <b>networks</b> program. Also, a snapshot of the current research issues and activities of different institutions is provided. Potential applications of <b>active</b> <b>networks</b> are highlighted, along with some of the challenges that must be overcome to make them reality...|$|R
40|$|Abstract — In 1995, DARPA {{initiated}} a {{work on a}} programmable concept of computer networking that would overcome shortcomings of the Internet Protocol. In this concept, each packet {{is associated with a}} program code that defines packet’s behavior. The code defines available network services and protocols. The concept has been called <b>Active</b> <b>Networks.</b> The research of <b>Active</b> <b>Networks</b> nearly stopped as DARPA ceased funding of research projects. Because we are interested in research of possible successors to the Internet Protocol, we continued the research. In this paper, we present an <b>active</b> <b>network</b> node called Smart Active Node. Particularly, this paper focuses on its ability to translate data flow transparently between IP <b>network</b> and <b>active</b> <b>network</b> to further improve performance of IP applications. We describe the translation mechanism, its possible use and discuss particular implementation aspects. Keywords- <b>Active</b> <b>Networks,</b> Smart <b>Active</b> Node, IP tunneling, routing I...|$|R
40|$|<b>Active</b> <b>networks</b> are a novel {{approach}} to network architecture in which the switches of the network perform customized computations on the messages flowing through them. This approach is motivated by both lead user applications, which perform user-driven computation at nodes within the network today, {{and the emergence of}} mobile code technologies that make dynamic network service innovation attainable. In this paper, we discuss two approaches to the realization of <b>active</b> <b>networks</b> and provide a snapshot of the current research issues and activities. Introduction – What Are <b>Active</b> <b>Networks?</b> In an <b>active</b> <b>network,</b> the routers or switches of the network perform customized computations on the messages flowing through them. For example, a user of an <b>active</b> <b>network</b> could send a “trace ” program to each router and arrange for the program to be executed when their packets are processed. Figure 1 illustrates how the routers of an I...|$|R
40|$|<b>Active</b> <b>networks</b> {{provide the}} {{possibility}} to perform computations within the network. This feature introduces greater flexibility, but more complexity as well. Therefore, a sound management of <b>active</b> <b>networks</b> is a prerequisite to the acceptance of such networks. Management of large complex systems can be improved {{with the introduction of}} further abstraction levels and with moving the responsibility for the management down the line. Network management applications have two basic tasks to perform: operation of a node and control of message execution. In <b>active</b> <b>networks</b> {{there is a need for}} debugging functions a user has injected into the network. For operation and debugging, the monitoring of events occurring within an <b>active</b> <b>network,</b> and visualizing it, helps performing these tasks. Utilized and well scaling mechanisms for monitoring <b>active</b> <b>networks</b> are node clustering, event abstraction and filtering which have been applied to the presented prototypical implementation. We further propose [...] ...|$|R
40|$|This memo de#nes an {{architectural}} model for <b>active</b> <b>networks.</b> It de#nes the assumptions and {{goals for the}} <b>active</b> <b>network</b> and describes the functionality of each node. The approach speci#es a set of basic functions from which the end-to-end abstractions presented to the user are implemented. 1 Introduction and Rationale This document describes {{an architectural}} framework for <b>active</b> <b>networks.</b> It lays out the fundamental tenets and objectives, de#nes the major components and interfaces {{that make up an}} active node, and discusses some architectural features common to network services built using such active nodes. The architecture does not specify any particular end-to-end service for the <b>active</b> <b>network.</b> Rather, it identi#es the components responsible for implementing suchinterfaces, and speci#es the basic functionalitytobeprovided in support of those components. This documentisintended as a #reference model" for the design and implementation of <b>active</b> <b>networks.</b> The model is quite gener [...] ...|$|R
40|$|Existing <b>active</b> <b>network</b> {{architectures}} {{depend on}} using static languages to improve performance. Unfortunately this limits {{some of the}} more dynamic features of an <b>active</b> <b>network.</b> In this paper we present PANTS - a dynamically extensible <b>active</b> <b>network</b> architecture. We describe a new architecture for an active node, which provides the flexibility to perform dynamic changes to the node, and to the capsules. An implementation conforming to this architecture is described and examples of the dynamism is presented...|$|R
40|$|Abstract. <b>Active</b> <b>networks</b> are {{receiving}} increasing attention {{due to their}} promises of great exibility in tailoring services to applications. This capability stems from the exploitation of network devices whose behavior can be changed dynamically by applications, possibly using technologies and architectures originally conceived for mobile code systems. Notwithstanding the promises of <b>active</b> <b>networks,</b> real-world applications that clearly bene t by them are still missing. In this work we describe {{the design of a}} videoconference system conceived expressly for operation over <b>active</b> <b>networks.</b> The goal of this activity is to pinpoint the bene ts that mobile code and <b>active</b> <b>networks</b> bring in this application domain and to provide insights for the exploitation of these concepts in other application domains. ...|$|R
40|$|<b>Active</b> <b>networks</b> (AN) are a rapid {{evolving}} area {{of research}} and in parallel an area of great industry interest. However, for this technology to make the {{step out of the}} labs and penetrate the market, the security problems have to be tackled effectively. This paper demonstrates why and how agent technology research, can and should be applied to <b>active</b> <b>networks,</b> in order to fulfill the new security challenges this infrastructure poses. First, we identify the key elements of AN, analyze the nature of active code, specify the role of agents in <b>active</b> <b>networks</b> and present a multiexecution environment <b>active</b> <b>network</b> architecture. Then, we target the security threats for active code and execution environment, and state the basic as well as the extended security requirements. Subsequently, we try to see how we can apply the security solutions and research done for agents to the context of <b>active</b> <b>networks</b> in order to satisfy thei...|$|R
40|$|Abstract. This paper {{focuses on}} <b>active</b> <b>networks</b> {{applications}} {{and in particular}} on the possible interactions among these applications. Active networking is a very promising research ¯eld which has been developed recently, and which poses several interesting challenges to network de-signers. A number of proposals for e±cient <b>active</b> <b>network</b> architectures are already {{to be found in}} the literature. However, how two or more <b>active</b> <b>network</b> applications may interact has not being investigated so far. In this work, we consider a number of applications that have been designed to exploit the main features of <b>active</b> <b>networks</b> and we discuss what are the main bene¯ts that these applications may derive from them. Then, we introduce some forms of interaction including interference and communications among applications, and identify the components of an <b>active</b> <b>network</b> architecture that are needed to support these forms of interaction. We conclude by presenting a brief example of an active net-work application exploiting the concept of interaction. ...|$|R
50|$|In September 2013, <b>Active</b> <b>Network</b> was {{acquired}} by Vista Equity Partners for over $1 billion, which would return the public company to private status. In February 2014, Lanyon was paired with <b>Active</b> <b>Network’s</b> Business Solutions Group and consolidated under the Lanyon name.|$|R
40|$|This paper {{introduces}} a novel algorithm, the <b>Active</b> Virtual <b>Network</b> Management Protocol (AVNMP), for predictive network management. It explains how the <b>Active</b> Virtual <b>Network</b> Management Protocol facilitates {{the management of}} an <b>active</b> <b>network</b> by allowing future predicted state information within an <b>active</b> <b>network</b> {{to be available to}} network management algorithms. This is accomplished by coupling ideas from optimistic discrete event simulation with active networking. The optimistic discrete event simulation method used is a form of self-adjusting Time Warp. It is self-adjusting because the system adjusts for predictions which are inaccurate beyond a given tolerance. The concept of a streptichron and autoanaplasis are introduced as mechanisms which take advantage of the enhanced flexibility and intelligence of active packets. Finally, it is demonstrated that the <b>Active</b> Virtual <b>Network</b> Management Protocol is a feasible concept. 1. <b>Network</b> Management and <b>Active</b> <b>Networks</b> The problem this pa [...] ...|$|R
40|$|Conference Name:International Workshop on Anti-counterfeiting, Security, and Identification. Conference Address: Xiamen, PEOPLES R CHINA. Time:APR 16 - 18, 2007. Because of the {{coexistence}} of multi-PKI in multi-domains of <b>active</b> <b>networks,</b> {{the implementation of}} authentication for such multi-domains becomes {{one of the most}} important issues in <b>active</b> <b>network</b> security This paper proposes an authentication model and designs a suit of protocols to tackle this important issue. The proposed model supports mutual entity authentication between multi-type domains and is suitable for practical implementation of authentication in <b>active</b> <b>networks...</b>|$|R
40|$|In this paper, {{an initial}} {{investigation}} {{has been carried}} out to use <b>active</b> <b>networks</b> as the operating platforms for pervasive computing. Upon taking advantage of the <b>active</b> <b>network</b> paradigm, which offers flexibility and extensibility within <b>networks,</b> the <b>active</b> pervasive <b>network</b> infrastructure (APNI) framework is proposed. An additional feature known as `adaptiveness' is recommended to work in pervasive computing. Primarily, the integrity of information content can be retained and adapted to available network resources, even if an end user moves to an unfavourable network environment as long as the user approves and accepts appropriate modifications of receiving content. Furthermore, information transfer can be sustained through different extensible mechanisms on the <b>network</b> layer in <b>active</b> <b>networks.</b> As a result, information can be sent through the APNI with low packet loss rate. The functional objectives of proposed designs in the paper have been verified through thorough experiments in an <b>active</b> <b>network</b> prototyp...|$|R
50|$|In 2009, IAC sold ReserveAmerica to <b>ACTIVE</b> <b>Network.</b>|$|R
40|$|Unified {{cooperative}} methodologies {{have led}} to many typical advances, including <b>active</b> <b>networks</b> and DNS. in our research, we disprove the visualization of the locationidentity split, which embodies the unproven principles of cyberinformatics. We construct new ambimorphic symmetries (FuchsiaDiscession), showing that <b>active</b> <b>networks</b> can be made “smart”, real-time, and replicated. ...|$|R
40|$|We {{propose the}} use of "selectors for (active) packet flows" similar to tags {{employed}} in the IP world. Their impact {{on the performance of}} an <b>active</b> <b>network</b> node is significant, as active packets have to be demultiplexed not only to the network layer, but all the way to an application level Execution Environment. We have built an <b>Active</b> <b>Network</b> Node that implements the selector-based Simple Active Packet Format (SAPF). Our measurements show that SAPF packets can be processed 30 % faster than regular IP packets that use the traditional <b>Active</b> <b>Network</b> Encapsulation Protocol (ANEP) header...|$|R
40|$|Abstract. Security in <b>Active</b> <b>Networks</b> {{is still}} in its infancy! This paper {{presents}} a new Agent-Based Security architecture for the <b>Active</b> <b>Network</b> Infrastructure (ABSANI). It is explained why agents in combination with Java are considered the appropriate solution for security architecture and how this can be applied in the <b>Active</b> <b>Networks.</b> An agent-based <b>Active</b> Node architecture is introduced and ABSANI is placed within that approach. Subsequently, all the basic components of the ABSANI are analyzed arguing for the benefits they offer. Finally an application scenario of Place-oriented Virtual Private Networks is demonstrated...|$|R
40|$|Current {{network nodes}} enable {{connectivity}} between end-systems by supporting a static and well-defined set of protocols. The forwarding service provided by these network nodes is fixed, simple, and increasingly being implemented in hardware. <b>Active</b> <b>network</b> nodes, {{on the other}} hand, enable the unattended, dynamic instantiation of custom programs into the network node, allowing for {{the introduction of new}} protocols and services at runtime. Current prototype implementations of <b>active</b> <b>network</b> nodes achieve this flexibility by injecting a significant amount of software into the forwarding path. This paper describes an <b>Active</b> <b>Network</b> platfor...|$|R
40|$|A capsule-based <b>active</b> <b>network</b> {{transports}} capsules containing code to {{be executed}} on network nodes through which they pass. <b>Active</b> <b>networks</b> facilitate the deployment of new protocols, {{which can be used}} without any changes to the underlying network infrastructure. This paper describes the design, implementation, and evaluation of a high-performance <b>active</b> <b>network</b> node which supports multiple mobile code systems. Experiments, using capsules executing unsafe native Intel ix 86 object code, indicate that <b>active</b> <b>networks</b> may be able to provide significant flexibility relative to traditional networks with only a small performance overhead (as little as 13 % for 1500 byte packets). However, capsules executing JavaVM code performed far worse (with over three times the performance overhead of native code for 128 byte packets), indicating that mobile code system performance is critical to overall node performance...|$|R
