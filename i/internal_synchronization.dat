45|33|Public
40|$|Experiments were {{conducted}} on six unanesthetized chair-acclimatized adult male squirrel monkeys (Saimiri sciureus) weighing 600 - 900 g to determine whether <b>internal</b> <b>synchronization</b> {{is the result of}} simple passive dependence of renal excretory rhythms on endogenous rhythms of those variable that influence electrolyte excretion such as dietary intake and muscular activity. Independence of the urinary rhythms from diurnal variations in feeding, drinking, and activity was secured by depriving the animals of food, water, and training them to perform a two-hourly schedule of feeding, drinking, and activity throughout day and night. Results indicate that the <b>internal</b> <b>synchronization</b> which is normally observed between the behavioral and urinary rhythms cannot be explained by any direct dependence of renal function on behavioral patterns. The most probable mechanism for circadian <b>internal</b> <b>synchronization</b> is that the various behavioral and renal rhythms are controlled by potentially independent separate oscillators which are normally kept in synchrony with one another...|$|E
40|$|The {{mechanisms}} {{underlying the}} <b>internal</b> <b>synchronization</b> of the circadian variations in electrolyte content in body compartments were investigated, and {{the significance of}} these oscillations for manned spaceflight were examined. The experiments were performed with a chair-acclimatized squirrel monkey system, in which the animal sits in a chair, restrained only around the waist. The following information was given: (1) experimental methodology description, (2) summary of results obtained during the first contract year, and (3) discussion of the research performed during the second contract year. This included the following topics: physiological mechanisms promoting normal circadian <b>internal</b> <b>synchronization,</b> factors precipitating internal desynchronization, pathophysiological consequences of internal desynchronization of particular relevance to spaceflight, and validation of a chair-acclimatized system...|$|E
40|$|System, {{fabricated}} of highly-reliable {{digital logic}} elements, operates on binary pulse-code-modulated signals and derives <b>internal</b> <b>synchronization</b> from data signal. All-digital implementation of detector develops synchronization from data signal by computer cross-correlation of command modulation signal with its expected forms in sequence and adjusts detector phases {{in accordance with}} correlation peaks...|$|E
40|$|We {{address the}} problem of how to {{integrate}} faulttolerant external and <b>internal</b> clock <b>synchronization.</b> In this paper we propose a new external/internal clock synchronization algorithm which provides both external and <b>internal</b> clock <b>synchronization</b> for as long as a majority of the reference time servers (servers with access to reference time) stay correct. When half or more of the reference time servers are faulty, the algorithm degrades to a fault-tolerant <b>internal</b> clock <b>synchronization</b> algorithm. We prove that at least 2 F+ 1 reference time servers are necessary for achieving external clock synchronization when up to F reference time servers can suffer arbitrary failures, thus the proposed algorithm provides maximum fault-tolerance. In this paper we also derive lower bounds for the best maximum external deviation achievable in standard mode and the best drift rate achievable in degraded mode. Our algorithm is optimal with respect to these two bounds: (1) the maximum external deviation is [...] ...|$|R
50|$|<b>Internal</b> clock <b>{{synchronization}}</b> {{like the}} Poincaré-Einstein synchronization by using light signals, or synchronization by slow clock transport. Those synchronization schemes are in general not equivalent, except {{the case when}} a(v) and b(v) have their exact relativistic value.|$|R
40|$|This paper {{studies the}} problem of realizing a common {{software}} clock among a large set of nodes without an external time reference (i. e., <b>internal</b> clock <b>synchronization),</b> any centralized control and where nodes can join and leave the distributed system at their will. The paper proposes an <b>internal</b> clock <b>synchronization</b> algorithm which combines the gossip-based paradigm with a nature-inspired approach, coming from the coupled oscillators phenomenon, to cope with scale and churn. The algorithm works {{on the top of}} an overlay network and uses a uniform peer sampling service to fullfill each node’s local view. Therefore, differently from clock synchronization protocols for small scale and static distributed systems, here each node synchronizes regularly with only the neighbors in its local view and not with the whole system. An evaluations of the convergence speed and of the synchronization error of the coupled-based <b>internal</b> clock <b>synchronization</b> algorithm has been carried out, showing how convergence time and the synchronization error depends on the coupling factor and on the local view size. Moreover the variation of the synchronization error with respect to churn and the impact of a sudden variation of the number of nodes have been analyzed to show the stability of the algorithm. In all these contexts, the algorithm shows nice performance and very good self-organizing properties. Finally, we showed how the assumption on the existence of a uniform peer-sampling service is instrumental for the good behavior of the algorithm...|$|R
40|$|In {{large-scale}} systems, such as Internet-based distributed systems, classical clocksynchronization solutions become impractical or poorly performing, due to {{the number}} of nodes and/or the distance. We present a global time service for world-wide systems, based on an innovative clock synchronization scheme, dubbed CesiumSpray. The service exhibits high precision and accuracy; it is virtually indefinitely scaleable; and it is fault-tolerant. It is deterministic for real-time machinery in the local area, which makes it particularly well-suited for, though not limited to, large-scale real-time systems. The clock synchronization scheme is a pseudo-hierarchical mix of external and <b>internal</b> <b>synchronization.</b> The root of the hierarchy are the GPS satellites, which "spray" their reference time over a set of nodes provided with GPS receivers, one per local network, where the second level of the hierarchy performs <b>internal</b> <b>synchronization,</b> further "spraying" the external time inside the local n [...] ...|$|E
40|$|Compared to {{coarse-grained}} {{external synchronization}} of operations on data structures shared between concurrent threads, fine-grained, <b>internal</b> <b>synchronization</b> can offer stronger progress guarantees and better performance. However, fully specifying operations that perform <b>internal</b> <b>synchronization</b> modularly is a hard, open problem. The {{state of the}} art approaches, based on linearizability or on concurrent abstract predicates, have important limitations on the expressiveness of specifications. Linearizability does not support ownership transfer, and the concurrent abstract predicates-based specification approach requires hardcoding a particular usage protocol. In this paper, we propose a novel approach that lifts these limitations and enables fully general specification of fine-grained concurrent data structures. The basic idea is that clients pass the ghost code required to instantiate an operation’s specification for a specific client scenario into the operation in a simple form of higher-order programming. We machine-checked the theory of the paper using the Coq proof assistant. Furthermore, we implemented the approach in our program verifier VeriFast and used it to verify two challenging fine-grained concurrent data structures from the literature: a multiple-compare-and-swap algorithm and a lock-coupling list. This extended version includes the definition of validity, a discussion of th...|$|E
40|$|Abstract. We expect {{interfaces}} in programming languages {{to expose}} essential {{parts of the}} objects ’ <b>internal</b> <b>synchronization</b> as well as required external synchronization. Clients need this information to provide required and avoid conflicting synchronization. We propose a mixed static and dynamic token-based approach to uniformly specify internal and external synchronization in a simplified Java-like language. This concept gives us much flexibility on token management, ensures race-free programs without any need for complete aliasing information, and supports static type checking of synchronization using a rich notion of subtyping. ...|$|E
5000|$|In {{addition}} to those second order tests, Mansouri and Sexl described some experiments measuring first order effects in v/c (such as Rømer's determination {{of the speed of}} light) as being [...] "measurements of the one-way speed of light". These are interpreted by them as tests of the equivalence of <b>internal</b> <b>synchronizations,</b> i.e. between synchronization by slow clock transport and by light. They emphasize that the negative results of those tests are also consistent with aether theories in which moving bodies are subject to time dilation. However, even though many recent authors agree that measurements of the equivalence of those two clock-synchronization schemes are important tests of relativity, they don't speak of [...] "one-way speed of light" [...] in connection with such measurements anymore, because of their consistency with non-standard synchronizations. Those experiments are consistent with all synchronizations using anisotropic one-way speeds on the basis of isotropic two-way speed of light and two-way time dilation of moving bodies.|$|R
5000|$|ECMA-407 uses modern {{tools such}} as {{loudness}} according to ITU-R or the European Broadcasting Union and electronic fingerprint that allow <b>internal</b> and external <b>synchronization,</b> for example, with video, with additional services or with [...] "second screens".|$|R
40|$|Clock {{synchronization}} is {{an extremely}} important requirement of wireless sensor networks(WSNs). There are many application scenarios such as weather monitoring and forecasting etc. where external clock synchronization may be required because WSN itself may consists of components which are not connected to each other. A usual approach for external clock synchronization in WSNs is to synchronize the clock of a reference node with an external source such as UTC, and the remaining nodes synchronize with the reference node using an <b>internal</b> clock <b>synchronization</b> protocol. In order to provide highly accurate time, both the offset and the drift rate of each clock with respect to reference node are estimated from time to time, and these are used for getting correct time from local clock reading. A problem with {{this approach is that}} it is difficult to estimate the offset of a clock with respect to the reference node when drift rate of clocks varies over a period of time. In this paper, we first propose a novel <b>internal</b> clock <b>synchronization</b> protocol based on weighted averaging technique, which synchronizes all the clocks of a WSN to a reference node periodically. We call this protocol weighted average based internal clock synchronization(WICS) protocol. Based on this protocol, we then propose our weighted average based external clock synchronization(WECS) protocol. We have analyzed the proposed protocols for maximum synchronization error and shown that it is always upper bounded. Extensive simulation studies of the proposed protocols have been carried out using Castalia simulator. Simulation results validate our theoretical claim that the maximum synchronization error is always upper bounded and also show that the proposed protocols perform better in comparison to other protocols in terms of synchronization accuracy. A prototype implementation of the proposed <b>internal</b> clock <b>synchronization</b> protocol using a few TelosB motes also validates our claim...|$|R
40|$|This {{publication}} {{presents a}} new analysis of experiments that {{were carried out}} in human subjects in isolation from time cues, under supervision of Jurgen Aschoff and Rutger Wever at the Max Planck Institute for Behavioural Physiology (Erling-Andechs, Germany, 1964 - 1974). Mean rectal temperatures (t(b)) were compared between subjects who showed internal desynchronization (ID) and <b>internal</b> <b>synchronization</b> (IS) of the endogenous rhythms of sleep-wakefulness and of body temperature. The results showed that t(b) was reduced in long ID (circadian sleep-wake cycle length [(SW) ] > 27 h) and increased in short ID ((SW) ...|$|E
40|$|The {{synchronization}} of {{loosely coupled}} chaotic oscillators, a phenomenon investigated intensively {{for the last}} two decades, may realize the philosophical notion of synchronicity. Effectively unpredictable chaotic systems, coupled through only a few variables, commonly exhibit a predictable relationship that can be highly intermittent. We argue that the phenomenon closely resembles the notion of meaningful synchronicity put forward by Jung and Pauli if one identifies "meaningfulness" with <b>internal</b> <b>synchronization,</b> since the latter seems necessary for synchronizability with an external system. Jungian synchronization of mind and matter is realized if mind is analogized to a computer model, synchronizing with a sporadically observed system as in meteorological data assimilation. <b>Internal</b> <b>synchronization</b> provides a recipe for combining different models of the same objective process, a configuration that may also describe the functioning of conscious brains. In contrast to Pauli's view, recent developments suggest a materialist picture of semi-autonomous mind, existing alongside the observed world, with both exhibiting a synchronistic order. Basic physical synchronicity is manifest in the non-local quantum connections implied by Bell's theorem. The quantum world resides on a generalized synchronization "manifold", a view that provides a bridge between nonlocal realist interpretations and local realist interpretations that constrain observer choice. Comment: 1) clarification regarding the connection with philosophical synchronicity in Section 2 and in the concluding section 2) reference to Maldacena-Susskind "ER=EPR" relation in discussion of role of wormholes in entanglement and nonlocality 3) length reduction and stylistic changes throughou...|$|E
40|$|Wireless sensor {{networks}} (WSN) {{are emerging}} as a valuable tool in many fields of science and industry. Time synchronization {{is an important issue}} for WSN's due to the collaborative and distributed nature of the tasks they perform. This paper describes a new technique for clock synchronization in WSNs called consensus clock synchronization that provides <b>internal</b> <b>synchronization</b> to a virtual consensus clock. It is sensitive to the limited resources available to sensor nodes and is robust to many of the challenges faced in dynamic ad-hoc networks. Simulations are presented to analyse the effectiveness of the synchronization protocol in a mesh network. Griffith Sciences, Griffith School of EngineeringNo Full Tex...|$|E
40|$|This paper proposes an <b>internal</b> clock <b>synchronization</b> {{algorithm}} {{which combines}} the gossip-based paradigm with a nature-inspired approach {{coming from the}} coupled oscillators phenomenon. The proposed solution allows {{a very large number}} of clocks to self-synchronize without any central control, despite node departure and arrival. This addresses the needs of an emergent class of large-scale peer-to-peer applications that have to operate without any assumptions on the underlying infrastructure. Empirical evaluation shows extremely good convergence and stability under different network settings...|$|R
40|$|<b>Internal</b> clock <b>synchronization</b> {{requires}} {{that at any}} point in time the deviation between any two correct clocks is bounded by an a priori given constant. Due to network partitions, unbounded message transmission and process scheduling delays, <b>internal</b> clock <b>synchronization</b> is impossible to implement in asynchronous systems. We address this problem by proposing a new kind of clock synchronization that is implementable in asynchronous systems with local hardware clocks: fail-aware clock synchronization. The specification of that new service is derived using the general concept of fail-awareness: this concept allows to transform the specification of a synchronous service into a fail-aware service such that it becomes implementable in asynchronous systems [1]. To illustrate the usage of fail-aware clock synchronization, we show how {{it can be used to}} solve the highly-available, fail-aware leader election problem. The specification of fail-aware clock synchronization {{requires that}} each time server maintains a synchronization indicator, for any time and any two time servers, if the two synchronization indicators of are true at, then the deviation between 's and 's clock at time is bounded by an a priori given constant, and a time server which can communicate with a majority of time servers in a timely manner and which is timely (i. e. it does not suffer performance failures), has to set its synchronization indicator to true...|$|R
40|$|Wireless Sensor Networks (WSNs) {{consist of}} a large number of {{resource}} constrained sensor nodes equipped with various sensing devices which can monitor events in the real world. There are various applications such as environmental monitoring, target tracking forest fire detection, etc., which require clock synchronization among the sensor nodes with certain accuracy. However, a major constraint in the design of clock synchronization protocols in WSNs is that sensor nodes of WSNs have limited energy and computing resources. Clock synchronization process in the WSNs is carried out at each sensor node either synchronously, i. e., periodically during the same real-time interval, which we call synchronization phase, or asynchronously, i. e., independently without worrying about what other nodes are doing for clock synchronization. A disadvantage of asynchronous clock synchronization protocols is that they require the sensor nodes to remain awake all the time. Therefore, they cannot be integrated with any sleep-wakeup scheduling scheme of sensor nodes, which is a major technique to reduce energy consumption in WSNs. On the other hand, synchronous clock synchronization protocols can be easily integrated with the synchronous sleep-wakeup scheduling scheme of sensor nodes, and at the same time, they can provide support to achieve sleep-wakeup scheduling of sensor nodes. Essentially, there are two ways to synchronize the clocks of a WSN, viz. <b>internal</b> clock <b>synchronization</b> and external clock synchronization. The existing approaches to <b>internal</b> clock <b>synchronization</b> in WSNs are mostly hop-by-hop in nature, which is difficult to maintain. There are also many application scenarios where external clock synchronization is the only option to synchronize the clocks of a WSN. Besides, it is also desired that the <b>internal</b> clock <b>synchronization</b> protocol used is fault-tolerant to message loss and node failures. Moreover, when the external source fails or reference node fails, the external clock synchronization protocol should revert back to <b>internal</b> clock <b>synchronization</b> protocol with/without using any reference node. Towards this goal, first we propose three fully distributed synchronous clock synchronization protocols, called Energy Efficient and Fault-tolerant Clock Synchronization (EFCS) protocol, Weighted Average Based <b>Internal</b> Clock <b>Synchronization</b> (WICS) protocol, and Weighted Average Based External Clock Synchronization (WECS) protocol, for WSNs making use of peer-to-peer approach. These three protocols are dynamically interchangeable depending upon the availability of external source or reference nodes. In order to ensure consistency of the synchronization error in the long run, the neighboring nodes need to be synchronized with each other at about the same real time, which requires that the synchronization phases of the neighboring nodes always overlap with each other. To realize this objective, we propose a novel technique of pullback, which ensures that the synchronization phases of the neighboring nodes always overlap. In order to further improve the synchronization accuracy of the EFCS, WICS, and WECS protocol, we have proposed a generic technique which can be applied to any of these protocols, and the improved protocols are referred as IEFCS, IWICS, and IWECS respectively. We then give an argument to show that the synchronization error in the improved protocols is much less than that in the original protocols. We have analyzed these protocols for bounds on synchronization error, and shown that the synchronization error is always upper bounded. We have evaluated the performance of these protocols through simulation and experimental studies, and shown that the synchronization accuracy achieved by these protocols is of the order of a few clock ticks even in very large networks. The proposed protocols make use of estimated drift rate to provide logical time from the physical clock value at any instant and at the same time ensure the monotonicity of logical time even though physical clock is updated at the end of each synchronization phase. We have also proposed an energy aware routing protocol with sleep scheduling, which can be integrated with the proposed clock synchronization protocols to reduce energy consumption in WSNs further...|$|R
40|$|Abstract—Increased {{bulk power}} {{transaction}} in competitive energy market together with large scale integration of energy resources. Control methodsfor grid-connected parameters are proposed here. The method could be generally applied for all grid-connected Parameter {{but may be}} of most importance in high-voltage dc (HVDC) applications. Different from the other control methods, the proposed method utilizes the <b>internal</b> <b>synchronization</b> mechanism in ac systems, in principle, similar to the operation of a synchronous machine. By using this type of power-synchronization control, the VSC avoids the instability caused by a standard phase-locked loop in a weak ac-system connection. Moreover, a VSC terminal can give the weak ac system strong voltage support, just like a norma...|$|E
40|$|This paper {{presents}} a static race detection analysis for multithreaded Java programs. Our analysis {{is based on}} a formal type system that is capable of captur-ing many common synchronization patterns. These patterns include classes with <b>internal</b> <b>synchronization,</b> classes that require client-side synchronization, and thread-local classes. Experience checking over 40, 000 lines of Java code with the type system demonstrates that it is an eective approach for eliminating races con-ditions. On large examples, fewer than 20 additional type annotations per 1000 lines of code were required by the type checker, and we found a number of races in the standard Java libraries and other test programs. ...|$|E
40|$|We {{extend the}} M&A and alliances {{literature}} {{to include a}} temporal perspective focusing on when and under what conditions firms should accelerate or slow down their M&A and alliance initiatives. Using a social entrainment model, we explore {{the relationship between the}} temporal properties of variability, synchronization and firm performance. We test our model {{in the context of the}} U. S specialty pharmaceutical industry. We find a curvilinear relationship between the overall variability of strategic actions and performance. Establishing <b>internal</b> <b>synchronization</b> increases performance while external synchronization of variability with competitors reveals a more complex picture. Our study further opens the window for understanding the creation of competitive advantage by managing rhythm-type strategic actions against time...|$|E
40|$|Neuronal {{groups can}} {{interact}} with each other even if they are widely separated. One group might modulate its firing rate or its <b>internal</b> oscillatory <b>synchronization</b> to influence another group. We propose that coherence between two neuronal groups is a mechanism of efficient interaction, because it renders mutual input optimally timed and thereby maximally effective. Modulations of subjects' readiness to respond in a simple reaction-time task were closely correlated with the strength of gamma-band (40 to 70 hertz) coherence between motor cortex and spinal cord neurons. This coherence may contribute to an effective corticospinal interaction and shortened reaction times...|$|R
40|$|International audienceProducer {{performances}} when modifying {{batch size}} for several number of nodes and a message size of 50 B 7. Take-aways • The {{variation of the}} batch size shows {{that there is a}} range of batches with a better performance. • When varying the number of nodes in some scenarios: a sudden performance drop (probably due to the <b>internal</b> Kafka <b>synchronizations</b> as well as the underlying network). • Future work : evaluating reference processing frameworks (Apache Spark and Flink) Parameters : • Message size • Batch size • Acquirement strategy • Network and disk I/O threads • Message replication • Hardware 2. Contribution • Isolate the performance of each Kafka componen...|$|R
40|$|We propose an {{improved}} probabilistic method for reading remote clocks in systems subject to unbounded communication delays and use this method {{to design a}} family of fault-tolerant probabilistic <b>internal</b> clock <b>synchronization</b> protocols. The members of this family differ in the failure classes they tolerate, from crash to arbitrary. Because of probabilistic reading, our protocols achieve better synchronization precisions than those achievable by previously known deterministic algorithms. Another advantage of the proposed protocols is that they use a linear, instead of quadratic, number of messages, and that message exchanges are staggered in time instead of all happening in narrow synchronization intervals. The envelope and drift rates of the synchronized clocks are proven to be optimal. ...|$|R
40|$|Thirteen {{adult male}} {{squirrel}} monkeys were restrained to a metabolism chair for periods {{of two or}} more weeks within an isolation chamber having controlled environmental lighting and ambient temperature. The monkeys were subjected to mild 6 -hour cold exposures at all circadian phases of the day. It was found that a prominent circadian rhythm in body temperature, regulated against mild cold exposure, was present in those monkeys synchronized in a 24 -hour light-dark cycle. Cold exposures were found to produce decreased core body temperatures when the circadian rhythms were free running or when environmental time indicators were not present. It is concluded that the thermoregulating system depends on the <b>internal</b> <b>synchronization</b> of the circadian time-keeping system...|$|E
40|$|Increased {{bulk power}} {{transaction}} in competitive energy market together with large scale integration of energy resources. Control methodsfor grid-connected parameters are proposed here. The method could be generally applied for all grid-connected Parameter {{but may be}} of most importance in high-voltage dc (HVDC) applications. Different from the other control methods, the proposed method utilizes the <b>internal</b> <b>synchronization</b> mechanism in ac systems, in principle, similar to the operation of a synchronous machine. By using this type of power-synchronization control, the VSC avoids the instability caused by a standard phase-locked loop in a weak ac-system connection. Moreover, a VSC terminal can give the weak ac system strong voltage support, just like a normal synchronous machine does. The control method is verified by both analytical models and time simulations...|$|E
40|$|Abstract—We {{propose a}} new energy {{efficient}} network structure for maintaining synchronization in access methods based on Synchronous Preamble Sampling. Our scheme limits {{the number of}} synchronization messages and increases network capacity {{through the use of}} multiple non-interfering virtual channels. It consists in constructing independent clusters based on the Weakly Connected Dominating Set (WCDS) so that clusters can use different virtual channels and only need to maintain <b>internal</b> <b>synchronization,</b> while still offering global connectivity. We define a distributed and self-stabilizing algorithm for constructing and maintaining the clusters. Our simulation results show that the proposed scheme has comparable energy consumption as Scheduled Channel Polling, but results in better network capacity. Moreover, it achieves better energy savings and network capacity than recently proposed Crankshaft access method. I...|$|E
2500|$|From {{experience}} by inertial scenarios (i.e. measurements in inertial frames), Langevin observers synchronize their clocks by standard Einstein convention or by slow clock <b>synchronization,</b> respectively (both <b>internal</b> <b>synchronizations).</b> For a certain Langevin observer this method works perfectly. Within its immediate vicinity clocks are synchronized and light propagates isotropic in space. But the experience when the observers try to synchronize their clocks along a closed path in space is puzzling: {{there are always}} at least two neighboring clocks which have different times. To remedy the situation, the observers agree on an external synchronization procedure (coordinate time t — or for ring-riding observers, a proper coordinate time for a fixed radius r). By this agreement, Langevin observers riding on a rigidly rotating disk will conclude from measurements of small distances between themselves that the geometry of the disk is non-Euclidean. [...] Regardless of which method they use, they will conclude that the geometry is well approximated by a certain Riemannian metric, namely the Langevin-Landau-Lifschitz metric. [...] This is in turn very well approximated by the geometry of the hyperbolic plane (with the negative curvatures -3ω2 and -3ω2r2, respectively). [...] But if these observers measure larger distances, they will obtain different results, depending upon which method of measurement they use! [...] In all such cases, however, they will most likely obtain results which are inconsistent with any Riemannian metric. In particular, if they use the simplest notion of distance, radar distance, owing to various effects such as the asymmetry already noted, they will conclude that the [...] "geometry" [...] of the disk is not only non-Euclidean, it is non-Riemannian.|$|R
40|$|We propose {{an optimal}} {{convergence}} function for achieving fault-tolerant, <b>internal</b> clock <b>synchronization</b> {{in the presence}} of arbitrary process and clock failures. The differential fault-tolerant midpoint convergence function guarantees an optimal maximum correction, an optimal maximum drift rate, and an optimal maximum deviation. The proposed convergence function is simple and easy to compute. It bounds the maximum drift rate of correct clocks by the maximum drift rate of a correct hardware clock. The maximum correction is limited by the maximum drift between two correct hardware clocks during one round. The maximum deviation is approximately 	 29 is the maximum remote clock reading error, is the maximum drift rate of a correct hardware clock and 	 965 is the maximum duration of a synchronization round. ...|$|R
40|$|As a {{programming}} abstraction, {{the transaction}} lies typically be-tween the developer of a concurrent application and the operating sys-tem. It encapsulates the complex <b>internals</b> of <b>synchronization,</b> thereby simplifying {{the life of}} a non-expert programmer. Yet, some program-mers are indeed experts. For those, the transaction abstraction turns out sometimes to be over restrictive: it does not allow such program-mers to express sophisticated synchronization schemes that would sig-nificantly enhance concurrency, and hence performance, while preserv-ing correctness. We show in this paper that this limitation is inherent to the transac-tional concept in its classic form. We then argue for a genuine democ-ratization of the paradigm, with polymorphic transactional semantics to be used by different programmers, according to their skills, and composed within the same application...|$|R
40|$|In this paper, {{we develop}} and analyze a simple interval-based {{algorithm}} suitable for fault-tolerant external clock synchronization. Unlike usual <b>internal</b> <b>synchronization</b> approaches, our convergence function-based algorithm provides approximately synchronized clocks maintaining both {{precision and accuracy}} w. r. t. external time. This is accomplished {{by means of a}} time representation relying on intervals that capture external time, providing accuracy information encoded in interval lengths. The algorithm, which is generic w. r. t. the convergence function and relies on either instantaneous correction or continuous amortization for clock adjustment, is analyzed by utilizing a novel, interval-based framework for establishing worst-case precision and accuracy bounds subject to a fairly detailed system model. Apart from individual clock rate and transmission delay bounds, our system model incorporates non-standard features like clock granularity and broadcast latencies as well. Relying on a su [...] ...|$|E
40|$|The Bluetooth {{wireless}} link {{is likely}} to be the last hop in the delivery of an encoded streamed video clip. This paper shows that it is preferable to optimally map arriving IP packets onto Bluetooth packets than preserve the stream’s <b>internal</b> <b>synchronization</b> structure. Video quality improves and latency reduces, even when there is cross traffic on the piconet. Introduction: For efficient transport across an IEEE 802. 15. 1 (Bluetooth) wireless link [1], the slice structure of an MPEG- 2 encoded video stream must be mapped onto the Bluetooth (B/T) packet structure. In the widely-deployed MPEG- 2 codec, a slice consists of up to one row of macroblocks but unlike an MPEG- 1 slice should not extend beyond one row. The main reason for defining slices is to prevent channel error propagation by means of synchronization markers. Assuming a slice arrives at...|$|E
40|$|A {{condition}} for the synchronizability {{of a pair of}} PDE systems, coupled through a finite set of variables, is commonly the existence of <b>internal</b> <b>synchronization</b> or internal coherence in each system separately. The condition was previously illustrated in a forced-dissipative system, and is here extended to Hamiltonian systems, using an example from particle physics. Full synchronization is precluded by Liouville's theorem. A form of synchronization weaker than "measure synchronization" is manifest as the positional coincidence of coherent oscillations ("breathers" or "oscillons") in a pair of coupled scalar field models in an expanding universe with a nonlinear potential, and does not occur with a variant of the model that does not exhibit oscillons. Comment: version accepted for publication in PRE (paragraph beginning at the bottom of pg. 5 has been rewritten to suggest unifying principle for synchronizability, applying to both forced-dissipative and Hamiltonian systems; other minor changes...|$|E
40|$|Synchronized clocks {{are usually}} {{considered}} as a prerequisite for many distributed applications. Existing solutions mainly {{deal with this problem}} in static environments with well defined characteristics and limits. The needs of an emergent class of large-scale peer-to-peer applications that have to operate without any assumptions on the surrounding environment have recently revitalized this research area with the proposals of new solutions characterized by self-organization capabilities and strong adaptability to dynamic settings. This paper reports about the properties of a clock synchronization algorithm for large scale applications. The algorithm implements an <b>internal</b> clock <b>synchronization</b> mechanism which combines the gossip-based paradigm with a nature-inspired approach coming from the coupled oscillators phenomenon. Using a theoretical approach, the paper focuses on the convergence properties of the algorithm, characterizing its synchronization speed (decay factor) the final synchronization point and error...|$|R
40|$|Clock {{synchronization}} is {{a fundamental}} requirement for any real-time distributed system operating with global schedules. This paper describes the design and implementation of a high accuracy (4 s) global clock on a Myrinet [4] gigabit/s system area network of PCs with considerably low software overheads. The global clock {{is based on a}} master-slave <b>internal</b> clock <b>synchronization</b> scheme [15]. A novel approach has been adopted to improve synchronization accuracy. The programmability of the Myrinet interface card and the presence of an on-board Real Time Clock [4] have been utilized to counter the undesirable effects of unpredictability in the latency of clock messages. The resulting synchronization facilitates global scheduling of distributed real-time tasks, and provides a framework to build support for Quality of Service in distributed high-performance environments. 1 Introduction Coscheduling and minimization of network contention are key to high performance cluster computing. Cosched [...] ...|$|R
40|$|The Scalable Processor-Independent Design for Electromagnetic Resilience (SPIDER) is a {{new family}} of {{fault-tolerant}} architectures under development at NASA Langley Research Center (LaRC). The SPIDER is a general-purpose computational platform suitable for use in ultra-reliable embedded control applications. The design scales from a small configuration supporting a single aircraft function to a large distributed configuration capable of supporting several functions simultaneously. SPIDER consists {{of a collection of}} simplex processing elements communicating via a Reliable Optical Bus (ROBUS). The ROBUS is an ultra-reliable, time-division multiple access broadcast bus with strictly enforced write access (no babbling idiots) providing basic fault-tolerant services using formally verified fault-tolerance protocols including Interactive Consistency (Byzantine Agreement), <b>Internal</b> Clock <b>Synchronization,</b> and Distributed Diagnosis. The conceptual design of the ROBUS is presented in this paper including requirements, topology, protocols, and the block-level design. Verification activities, including the use of formal methods, are also discussed...|$|R
