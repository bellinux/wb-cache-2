1|5|Public
40|$|This thesis {{reports the}} {{development}} of a custom ˇ Czerny–Turner spectrometer, the SpectroBragg, which operates natively in the telecoms bands using an InGaAs photodiode array. The SpectroBragg’s photodiode array enables the monitoring of ∼ 70 nm with ∼ 1 pm accuracy with a sampling rate of 30 ms. The SpectroBragg is intended for use with fibre Bragg grating, FBG, sensors. The strain characterisation of a novel anisotropic FBG, inscribed in Corning SMF– 28 telecoms fibre, via a two–photon process at 264 nm is also reported. The two–photon process is more efficient at FBG inscription and the FBGs are structurally anisotropic in isotropic fibre. These FBGs combine the characteristics of high–birefringence fibre at the FBG with the transmission characteristics of SMF– 28. Demodulation systems, that have polarisation–sensitivity, behave as polarisation analysers producing an intensity modulation dependent upon the state of polarisation, affecting high–accuracy phase sensitive wavelength interrogation schemes. In this thesis, two depolarisation approaches, a modified polarisation <b>fixer</b> <b>system</b> and a PDL balancing system, are examined as FBG signal depolarisers for anisotropic and isotropic FBG signals that are demodulated by the SpectroBragg spectrometer. The approaches are contrasted with the more traditional Lyot depolarisation system which is incorrectly specified. Rayleigh scattering provides the fundamental minimum to signal attenuation, consisting of two components: incoherently and coherently scattered radiation. The scattered radiation, within the coherence length of a source signal, adds coherently, modifying the guided mode, and for a phase sensitive demodulation system, is recovered as phase noise. In this thesis, the Hilbert transform technique, HTT, is used to analyse two– output, π–shifted interferograms from an all–fibre Michelson interferometer, to demodulate FBG signals, allowing for the recovery of interferograms not detectable with single–output interferograms. The Hilbert transformtechnique has been demonstrated to provide higher resolution wavelength determination than Fourier transform spectroscopy using shorter interferometer scans...|$|E
40|$|Bug fixing {{is one of}} {{the most}} {{important}} activities in software development and maintenance. Bugs are reported, recorded, and managed in bug tracking systems such as Bugzilla. In general, a bug report contains many fields, such as product, component, severity, priority, <b>fixer,</b> operating <b>system</b> (OS), and platform, which provide important information for the bug triaging and fixing process. Our previous study finds that approximately 80...|$|R
40|$|The {{technique}} of x-ray fluorescence analysis {{has been used}} to make relative and absolute measurements of the amount of silver contained in x-ray films. These measurements are useful in evaluation of imaging properties such as speed and contrast and also in financial considerations associated with film costs and silver reclamation. The use of this technique will be described here and results will be presented from measurements on representative film samples. An attempt to apply the same method to analysis of the efficiency of spent <b>fixer</b> recovery <b>systems</b> is underway...|$|R
40|$|Abstract–Bug fixing {{is one of}} {{the most}} {{important}} activities in software development and maintenance. Bugs are report-ed, recorded, and managed in bug tracking systems such as Bugzilla. In general, a bug report contains many fields, such as product, component, severity, priority, <b>fixer,</b> operating <b>system</b> (OS), platform, etc., which provide important information for the bug triaging and fixing process. Our previous study finds that approximately 80 % of bug reports have their fields reassigned and refined at least once, and bugs with reassigned and refined fields take more time to fix than bugs with no reassigned and refined fields. Thus, automatically predicting which bug report fields get reassigned and refined could help developers to save bug fixing time. Considering that a bug report could have multiple field reas-signments and refinements (e. g., the product, component, fixer...|$|R
40|$|Abstract—Dimensions in Data Warehouses (DWs) are set of {{elements}} {{connected by a}} hierarchical relationship. Usually, dimensions are required to be strict and covering to support summarizations {{at different levels of}} granularity. A dimension is strict if all they rollup relations are functions, and is covering if every element in a category is connected with an element in its ancestor categories. We present the Data Warehouse <b>Fixer</b> (DWF), a <b>system</b> that restores consistency of dimensions that fail to satisfy their strictness constraints. The system checks consistency, computes minimal repairs for inconsistent dimensions by implementing Datalog programs with negation and weak constraints, and also fixes inconsistent dimensions. Keywords-Data Warehouses; inconsistencies; strictness con-straints; repairs; repair programs; I...|$|R
40|$|A bug report {{contains}} many fields, such as product, component, severity, priority, <b>fixer,</b> operating <b>system</b> (OS), platform, etc., which provide important {{information for the}} bug triaging and fixing process. It is important {{to make sure that}} bug information is correct since previous studies showed that the wrong assignment of bug report fields could increase the bug fixing time, and even delay the delivery of the software. In this paper, we perform an empirical study on bug report field reassignments in open-source software projects. To better understand why bug report fields are reassigned, we manually collect 99 recent bug reports that had their fields reassigned and emailed their reporters and developers asking why these fields got reassigned. Then, we perform a large-scale empirical study on 8 types of bug report field reassignments in 4 open-source software projects containing a total of 190, 558 bug reports. In particular, we investigate 1) the number of bug reports whose fields get reassigned, 2) the difference in bug fixing time between bug reports whose fields get reassigned and those whose fields are not reassigned, 3) the duration a field in a bug report gets reassigned, 4) the number of fields in a bug report that get reassigned, 5) the number of times a field in a bug report gets reassigned, and 6) whether the experience of bug reporters affect the reassignment of bug report fields. We find that a large number (approximately 80 %) of bug reports have their fields reassigned, and the bug reports whose fields get reassigned require more time to be fixed than those without field reassignments...|$|R

