20|86|Public
5000|$|Consider {{a source}} field and a <b>destination</b> <b>field,</b> field 1 and field 0, respectively. P1(x1,y1) is the {{position}} in the source field, P0(x0,y0) is {{the position in}} the <b>destination</b> <b>field.</b> The Huygens-Fresnel principle gives the diffraction formula for two fields U(x0,y0), U(x1,y1) as following: ...|$|E
50|$|In Xcast, {{the source}} node keeps all {{destinations}} of the multicast channel through which packets will be sent. The source encodes the destinations {{list in the}} Xcast header and sends the packet to a router. Each router looks in a routing table to determine the next hop of each packet, analyzes its header, parses the <b>destination</b> <b>field</b> basing on the following jump of every destination and copies the packets as many different paths as they need to follow. After that, the router copies the packet with its correct Xcast header to every following jump. On the last hop, {{there is no need}} to make a new copy, since there is just one address in the <b>destination</b> <b>field.</b> The packet is treated just like a unicast packet, which is called Xcast to Unicast (X2U).|$|E
5000|$|... "Installation" [...] of a bookmarklet is {{performed}} {{by creating a}} new bookmark, and pasting the code into the URL <b>destination</b> <b>field.</b> Alternatively, if the bookmarklet {{is presented as a}} link, under some browsers it can be dragged and dropped onto the bookmark bar. The bookmarklet can then be run by loading the bookmark normally.|$|E
50|$|The email clients {{will perform}} {{formatting}} according to RFC 5322 for headers and body, and MIME for non-textual content and attachments. Headers include the <b>destination</b> <b>fields,</b> To, Cc, and Bcc, and the originator fields From {{which is the}} message's author(s), Sender in case there are more authors, and Reply-To in case responses {{should be addressed to}} a different mailbox. To better assist the user with <b>destination</b> <b>fields,</b> many clients maintain one or more address books and/or are able to connect to an LDAP directory server. For originator fields, clients may support different identities.|$|R
30|$|We used simple {{connectivity}} reduction. The {{idea behind}} the algorithm is to schedule an application for fully connected TTA and then simply remove the connections of function units and register files to the buses that were never used in the existing schedule. In addition, whole function units and their respective sockets could be removed, if unused by the application. The {{reduction in the number}} of socket-to-bus connection should lead to less bits required to encode source and <b>destination</b> <b>fields</b> of data transports for buses and possibly allow for higher clock frequency to be achieved.|$|R
5000|$|Endpoint ID (EID): An EID is an IPv4 or IPv6 address used in {{the source}} and <b>destination</b> address <b>fields</b> of the first (most inner) LISP header of a packet.|$|R
5000|$|The {{source field}} designates the MIME type that is {{determined}} by looking up the [...] file, while the <b>destination</b> <b>field</b> lists the type of output requested and determines what program should be used. This is also retrieved from [...] The cost field assists {{in the selection of}} sets of filters when converting a file. The last field, program, determines which filter program to use to perform the data conversion.|$|E
5000|$|A node which {{requires}} a link to a destination because it has no downstream neighbours for it sends a QRY (query) packet and sets its (formerly unset) route-required flag. A QRY packet contains the destination id of the node a route is sought to. The reply to a query is called an update UPD packet. It contains the height quintuple of the neighbour node answering to a query and the <b>destination</b> <b>field</b> which tells for which destination the update was meant for.A node receiving a QRY packet does one of the following: ...|$|E
50|$|Keep in {{mind that}} since the Ethernet <b>destination</b> <b>field</b> in all Sercos III telegrams is the {{broadcast}} address of 0xFFFF FFFF FFFF (all 1s), all telegrams issued from this open port will be seen by other devices as broadcast telegrams. This behavior is by design, and cannot be disabled. To avoid taxing networks attached to an open Sercos port, an IP-Switch can be used, or alternately a managed Ethernet switch programmed to block broadcast telegrams received from the Sercos port can be used. Starting with Sercos III specification version 1.3.1 the connection of industrial Ethernet devices is supported where devices work with 20 ms cycle time in communication phase 0 (CP 0).|$|E
50|$|Gorse Hill City Farm {{is a city}} {{farm and}} {{community}} project practising humane farming based in Leicester. The site is a popular <b>destination</b> for <b>field</b> trips from local schools particularly due to the handling area for small farm animals.|$|R
5000|$|It {{is a local}} {{point of}} {{interest}} and a <b>destination</b> for school <b>field</b> trips, particularly during the spring lambing season. A list of facilities include: ...|$|R
30|$|COOPPACKET: {{the packet}} type used between {{the source and}} the helper. On {{receiving}} a COOPPACKET, the receiver realizes that it should react as a helper. Therefore, it replaces the <b>Destination</b> Address <b>field</b> {{with that of the}} final destination address based on the CoopDestinationID field, and forwards the packet immediately, without contending for the channel.|$|R
50|$|The first {{specification}} of IP tunneling was in RFC 1075, which described DVMRP, the first IP multicast routing protocol. Because multicast used special IPv4 addresses, testing DVMRP required {{a way to}} get IP datagrams across portions of the Internet that did not yet recognize multicast addresses. This was solved by IP tunneling. The first approach to IP tunneling used an IP Loose Source Route and Record (LSRR) Option to hide the multicast address from the non-multicast aware routers. A multicast-aware destination router would remove the LSRR option from the packet and restore the multicast IP address to the packet's IP <b>destination</b> <b>field.</b> The other approach in the DVMRP specification was IP in IP, as described above. IP in IP soon became the preferred approach, and was later put to use in the Mbone.|$|E
40|$|Abstract Background Long-term {{acute care}} {{hospitals}} (LTACs) provide specialized care for patients recovering from severe acute illness. In {{order to facilitate}} research into LTAC utilization and outcomes, we studied {{whether or not the}} discharge <b>destination</b> <b>field</b> in administrative data accurately identifies patients transferred to an LTAC following acute care hospitalization. Findings We used the 2006 hospitalization claims for United States Medicare beneficiaries to examine the performance characteristics of the discharge <b>destination</b> <b>field</b> in the administrative record, compared to the reference standard of directly observing LTAC transfers in the claims. We found that the discharge <b>destination</b> <b>field</b> was highly specific (99. 7 %, 95 percent CI: 99. 7 % - 99. 8 %) but modestly sensitive (77. 3 %, 95 percent CI: 77. 0 % - 77. 6 %), with corresponding low positive predictive value (72. 6 %, 95 percent CI: 72. 3 % - 72. 9 %) and high negative predictive value (99. 8 %, 95 percent CI: 99. 8 % - 99. 8 %). Sensitivity and specificity were similar when limiting the analysis to only intensive care unit patients and mechanically ventilated patients, two groups with higher rates of LTAC utilization. Performance characteristics were slightly better when limiting the analysis to Pennsylvania, a state with relatively high LTAC penetration. Conclusions The discharge <b>destination</b> <b>field</b> in administrative data can result in misclassification when used to identify patients transferred to long-term acute care hospitals. Directly observing transfers in the claims is the preferable method, although this approach is only feasible in identified data. </p...|$|E
30|$|Routing When an {{incoming}} Hiker packet is received, the <b>destination</b> <b>field</b> of the packet is checked. If the destination {{is the local}} sensor node, it is passed to the transport layer. If the destination matches a known route, it is transmitted on the appropriate link using the transmit(frame,link) method of Hitch. If no route is known, the packet is discarded. Sections 4 and 5 explains the route discovery process of Hitch Hiker in infrastructure and ad-hoc mode, respectively.|$|E
50|$|For ICMP flows, the Source Port is zero, and the <b>Destination</b> Port number <b>field</b> codes ICMP message Type and Code (port = ICMP-Type * 256 + ICMP-Code).|$|R
50|$|Also, six B-17Es the 88th Reconnaissance Squadron, 7th Bombardment Group, {{were also}} {{en route to}} Hawaii from Hamilton Field, California, with a final <b>destination</b> of Clark <b>Field,</b> Luzon, Philippines.|$|R
3000|$|Each {{destination}} is associated to a path field indicating the shortest path between each {{cell in the}} environment and their <b>destination.</b> These floor <b>fields</b> act as a potential, driving pedestrian towards the <b>destination</b> (one floor <b>field</b> exists for every destination): starting from every destination defined in the scenario, the information are spread into the environment according to a particular method. In (Kretz et al. 2010) authors analysed different methods for the calculation of the distance potential field: starting from the considerations in this work, we decided to apply the chessboard metric to manage the Moore neighbourhood using the [...]...|$|R
40|$|Ad hoc {{networks}} are highly dynamic routing networks cooperated by {{a collection of}} wireless mobile hosts without any assistance of a centralized access point. Secure Efficient Ad hoc Distance Vector (SEAD) is a proactive routing protocol, based {{on the design of}} Destination Sequenced Distance Vector routing protocol (DSDV). SEAD provides a robust protocol against attackers trying to create incorrect routing state in the other node. However, it does not provide a way to prevent an attacker from tampering the next hop or the <b>destination</b> <b>field</b> in route update. In this paper, we propose an I-SEAD protocol to solve the problem. A series of simulation experiments are conducted to evaluate the performance. 1...|$|E
40|$|Associate Professor Vaclav Marek {{is one of}} the Czech Republic ’ s leading expertscon ancient (esp. Roman) history. However, {{he reached}} his <b>destination</b> <b>field</b> of study byca rather {{indirect}} route. After finishing his schooling in Trhove Sviny, in South Bohemia,cMarek started reading Latin and Czech philology at the Faculty of Arts at Charles Universitycin 1958, but from the very beginning his interests lay in ancient history, namelycthat of Ancient Greece. It was only natural that he chose a topic from Ancient Greekchistory for his thesis. After graduating in 1963, he embarked on the path to an academicccareer as an associate lecturer. Marek obtained his lower-level doctorate (PhDr.) in 1968 cand in 1984 was awarded a higher-level doctoral degree (CSc.) in history. In 1988, he wascappointed as an Associate Professor in Ancient History...|$|E
30|$|Another {{interesting}} {{aspect of}} TTA comes from VLIW inheritance. An instruction defines what data transports {{are to be}} performed on each bus, which leads to wide instruction words. As a matter of fact, for each bus in the system, the instruction word encodes the source field of transport as well as <b>destination</b> <b>field</b> of transport. While increasing number of buses leads to more freedom for the compiler to schedule, it also increases the instruction width. Reducing the connectivity between sockets and buses typically leads to a lower number of bits required to encode data transport for individual bus and narrows the instruction width. However, in order to significantly reduce {{the negative impact of}} the instruction width, instruction compression can be applied. Using dictionary compression [25, 26], for example, the code density can be improved significantly with a decrease in spent energy as well.|$|E
40|$|We {{consider}} an algorithmic problem that arises {{in the context}} of routing tables used by Internet routers. The Internet addressing scheme is hierarchical, where a group of hosts are identified by a prefix that is common to all the hosts in that group. Each host machine has a unique 32 -bit address. Thus, all traffic between a source group s and a destination group d can be routed along a particular route c by maintaining a routing entry (s, d, c) at all intermediate routers, where s and d are binary bit strings. Many different routing tables can achieve the same routing behavior. In this paper we show how to compute the most compact routing table. In particular, we consider the following optimization problem: given a routing table D with N entries of the form (s, d, c), determine a conflict-free routing table with fewest entries that has the same routing behavior as D. If the source and <b>destination</b> <b>fields</b> have up to w bits, and there are at most K different route values, then our algorithm runs in worst-case time O(NKw²) ...|$|R
50|$|On November 29, 2003, at 08:01 local time, Flight 1966 from Boeing Field {{crashed into}} trees in bad {{visibility}} conditions while approaching its <b>destination</b> Felts <b>Field,</b> {{by which the}} pilot was killed. The aircraft involved, a Fairchild Metro III registered N439AF, had one of its two ILS receivers deferred due to intermittent flag activity {{at the time of}} the accident. The pilot had initiated his final descent late and then descended through the glide slope.|$|R
50|$|The way {{the capsule}} takes is {{monitored}} on a PC screen. As {{soon as the}} capsule has reached its <b>destination,</b> the magnetic <b>field</b> is destroyed by pressing a button and the drug is released for resorption within milliseconds.|$|R
40|$|A huge {{collection}} of sensed data is transacted in Wireless Sensor Networks. This sensed data {{are reported to}} the sink. These sinks can be predefined data rendezvous points via multi hop communications. Basically WSNs (Wireless Sensor Networks) {{plays a key role}} in applications such as military, remote sensing, etc. Attackers may locate the sink easily by reading the <b>destination</b> <b>field</b> in the packet header or predicting the arrival of the sinks. Data are forwarded along random paths and stored at intermediate points. A random data collection scheme was used to protect the location privacy of mobile sinks in wireless sensor networks. By the sink will move randomly to collect data from local nodes. The goal of the system is to prevent the attackers from predicting their locations and movement of the sink is private. We also protect the sink by data collection at random time intervals and unequal visiting probability...|$|E
40|$|Sorting on {{interconnection}} networks {{has been}} solved `optimally'. However, the `lowerorder ' terms are {{so large that}} they dominate the overall time-consumption for many practical problem sizes. Particularly for deterministic algorithms, {{this is a serious}} problem. In this paper a refined deterministic sampling strategy is presented, by which the additional term of the presented deterministic sorting algorithm is hardly larger than the one of the best randomized algorithm. 1 Introduction Routing and sorting are probably the two most extensively studied algorithmic problems on fixed-connection networks. In a routing problem, a set of packets has to be redistributed in the network such that every packet ends up at the PU specified in its <b>destination</b> <b>field.</b> In a sorting problem, instead of a destination address each packet contains a key from a totally ordered set, {{and they have to be}} rearranged such that the packet of rank i ends up in the memory position with index i with respect to some [...] ...|$|E
40|$|Researchers have {{proposed}} the Core Based Trees (CBT) and Protocol Independent Multicasting (PIM) protocols to route multicast data on internetworks. In this paper, we compare the simulated performance of CBT and PIM using the OPNET network simulation tool. Performance metrics include end-to-end delay, network resource usage, join time, {{the size of}} the tables containing multicast routing information, and the impact of the timers introduced by the protocols. We also offer suggestions to improve PIM Sparse Mode while retaining the ability to offer both shared tree and source-based tree routing. 1. Introduction Multicasting is a communications service that allows an application to efficiently transmit copies of a data packet to a set of receivers that are members of a multicast group. The group is identified by a location-independent multicast group address. Senders use this address in the <b>destination</b> <b>field</b> of the packet; multicast routers forward the packet to group members using routing [...] ...|$|E
5000|$|The {{communications}} protocol works in two modes: standard and extended. The primary {{difference between the}} two modes is that the extended mode adds source and <b>destination</b> address <b>fields</b> to the frame. The standard frame mode would normally be used in the case where there is only one piece of exercise equipment attached to one computer. This mode is primarily useful in a home setting where there is only one piece of exercise equipment and one controlling computer.|$|R
40|$|Interworking between Locator/ID Separation Protocol (LISP) and Non-LISP Sites This {{document}} describes {{techniques for}} allowing sites running the Locator/ID Separation Protocol (LISP) to interoperate with Internet sites {{that may be}} using either IPv 4, IPv 6, or both but that are not running LISP. A fundamental property of LISP-speaking sites is that they use Endpoint Identifiers (EIDs), rather than traditional IP addresses, in the source and <b>destination</b> <b>fields</b> of all traffic they emit or receive. While EIDs are syntactically identical to IPv 4 or IPv 6 addresses, normally routes to them are not carried in the global routing system, so an interoperability mechanism is needed for non-LISP-speaking sites to exchange traffic with LISP-speaking sites. This document introduces three such mechanisms. The first uses a new network element, the LISP Proxy Ingress Tunnel Router (Proxy-ITR), {{to act as an}} intermediate LISP Ingress Tunnel Router (ITR) for non-LISPspeaking hosts. Second, this document adds Network Address Translation (NAT) functionality to LISP ITRs and LISP Egress Tunnel Routers (ETRs) to substitute routable IP addresses for non-routable EIDs. Finally, this document introduces the Proxy Egress Tunnel Router (Proxy-ETR) to handle cases where a LISP ITR cannot send packets to non-LISP sites without encapsulation...|$|R
30|$|CoopDestinationID: a new {{subfield}} we introduce {{in order}} to handle the forwarding process. It {{is used in the}} cooperative mode and it indicates the final destination for the packet. In the first hop, this field indicates the final destination while the <b>Destination</b> Address <b>field</b> (mentioned above) indicates the address of the helper. CoopDestinationID is used by the helper when it generates the header of the packet for the second hop {{in order to}} define the final destination of the packet.|$|R
40|$|In Some kind of {{networks}} like PON (Passive Optical Networks) and HFC (Hybrid Fiber Coaxial) networks, {{the information from}} the central station (headend) to the terminals is broadcast to all of them. So each one of them besides its own data gets also the data destined for the others. Under these conditions privacy and confidentiality do not exist. The usual way to overcome this drawback is conventional encryption of the data between headend and terminals. This method besides making the communication procedure more complex, has also the drawback that traffic data cannot be protected, since the <b>destination</b> <b>field</b> of each cell cannot be encrypted. Here another method is presented which, although not encryption in the conventional meaning of the term, secures a high degree of individuality and confidentiality. The basic idea is to use different multiplexing patterns for each connection so that each terminal can demultiplex only its own data. The method is suited for the high data speed of the PON networks and maybe preferable to conventional encryption...|$|E
40|$|This memo offers initial {{designs for}} some SHIPs. I {{hope to make}} each design clear enough {{to allow us to}} use them in trial programs. After writing a first draft of this memo without {{interface}} definitions I decided to define some interface types from which to define the behavior of SHIPs. A SHIP may have as many of these interfaces as its designer thinks appropriate. INTERFACES – Figures 1 - 7 REGISTER – Figures 1 and 2 summarize the register interfaces. The register may be either full or empty. Delivering a data value or an Out of Band (OOB) value to the register’s input interface fills the register with the delivered value and may or may not overwrite a previous value the register may have contained. The “overwrite ” bit in the MOVE instructions <b>destination</b> <b>field</b> controls whether the arriving data destroys a previous value or whether the MOVE instruction waits until the register drains before delivering the new value. A MOVE instruction whose source is the register’s output must wait until the register is full before it can act. If the register is full or when it becomes full, such a MOV...|$|E
40|$|The paper {{proposes a}} new scheme for on-demand {{allocation}} of global IP addresses to hosts of an autonomous network. Such ascheme {{is needed in}} order to overcome the problem of IP address exhaustion. According to the new scheme, each host of the autonomous network is assigned a fixed local address which appears in the source field of all the IP datagrams the host sends and in the <b>destination</b> <b>field</b> of all the IP datagrams it receives. A host that needs an IP-level connectivity with external hosts is allocated a global address for a limited time. Such a host continues using its fixed local address as the source field of every sent datagram. However, if the datagram is destined for an external host, the autonomous network border gateway swaps the fixed local address of the source with the leased global one. When an external host sends a datagram to a local host, it uses the global address of the local host as destination address. When the datagram enters the autonomous network, the leased global address is swapped by the fixed local one. As the paper shows, the proposed scheme that employs IP address swapping has several important advantages. Most of these advantages are {{due to the fact that}} the leased global addresses are not visible to the internal routing gateways, and that local hosts always use a single local address...|$|E
5000|$|Streamline Air offered weekday service {{between two}} <b>destinations,</b> Hanscom <b>Field</b> in Bedford, MA (as an {{alternative}} to the more congested Logan International Airport) and Trenton-Mercer Airport in Ewing, New Jersey, which is a reliever for the Philadelphia air travel market. [...] Effective September 14, 2012, Streamline ceased operations at Trenton-Mercer Airport. [...] Streamline was looking to add Pease Airport in Portsmouth, New Hampshire; but was unable to begin service as desired in September due to some aircraft and crew scheduling conflicts.|$|R
5000|$|Multi-way jump [...] - [...] the <b>destination</b> track (T2 <b>field)</b> {{is set to}} [...] and the {{appropriate}} Character selector hubs on the control panel have wires plugged into them and the Program entry hubs specifying the instructions to jump to or the Program advance hub to continue in sequence.|$|R
5000|$|Phase 2 (Address Verification) — A station then transmits MAC frames {{with its}} own MAC address in the <b>destination</b> address <b>field</b> of a Token Ring frame. When the frame returns and if the Address Recognized (AR) and Frame Copied (FC) bits in the frame-status are set to 0 (indicating that no other station {{currently}} on the ring uses that address), the station must participate in the periodic (every 7 seconds) ring poll process. This is where stations identify themselves on the network {{as part of the}} MAC management functions.|$|R
