53|83|Public
5000|$|Direct HTTP request data: {{directly}} comes <b>from</b> <b>HTTP</b> request messages (HTTP request headers).|$|E
5000|$|... mod_evasive - protects your site(s) <b>from</b> <b>HTTP</b> DoS/DDoS {{attacks and}} brute force attacks ...|$|E
5000|$|... mod_proxy {{can help}} to improve LAMP {{security}} [...] or to strip SSL <b>from</b> <b>HTTP</b> requests.|$|E
5000|$|The HTTP Location {{header field}} is {{returned}} in responses <b>from</b> an <b>HTTP</b> server under two circumstances: ...|$|R
5000|$|The {{query string}} and fields on an HTML form that are {{available}} <b>from</b> an <b>HTTP</b> request.|$|R
50|$|App Engine {{can only}} execute code called <b>from</b> an <b>HTTP</b> request (scheduled {{background}} tasks allow for self calling HTTP requests).|$|R
50|$|Orbit Downloader {{supports}} downloading <b>from</b> <b>HTTP,</b> HTTPS, FTP, Metalink, RTSP, MMS and RTMP protocols. Orbit Downloader supports Internet Explorer, Maxthon, Mozilla Firefox and Opera web browsers.|$|E
5000|$|HTTP security: some balancers {{can hide}} HTTP error pages, remove server {{identification}} headers <b>from</b> <b>HTTP</b> responses, and encrypt cookies so that end users cannot manipulate them.|$|E
50|$|Xangati WebApp Suite gathers metrics <b>from</b> <b>HTTP,</b> HTML and CSS Web Servers about {{end-users}} {{and their}} applications, and correlates those metrics with interactions {{collected from the}} IT infrastructure.|$|E
50|$|The server or gateway {{invokes the}} {{application}} callable once for each request it receives <b>from</b> an <b>HTTP</b> client that {{is directed at}} the application.|$|R
5000|$|Ensure {{that the}} document's MIME type {{is set to}} [...] For both HTML and XHTML, this comes <b>from</b> the <b>HTTP</b> [...] header sent by the server.|$|R
50|$|This module {{provides}} the DEFLATE output filter that allows output <b>from</b> Apache <b>HTTP</b> server to be compressed before {{being sent to}} the client over the network.|$|R
5000|$|Users {{will often}} attempt to bypass this system by {{removing}} the h <b>from</b> <b>http</b> in URLs, encouraging others to copy and paste the link, thus avoiding the referral page. For example, [...] would become [...]|$|E
50|$|Users {{are able}} to specify the media type in order to limit the types seen. This allows them to access {{information}} in the member’s URL record and response headers <b>from</b> <b>http</b> servers {{and access to the}} member’s data in a single API call.|$|E
5000|$|Let's Encrypt, {{launched}} in April 2016, provides free and automated SSL/TLS certificates to websites. According to the Electronic Frontier Foundation, [...] "Let's Encrypt" [...] will make switching <b>from</b> <b>HTTP</b> to HTTPS [...] "as easy as issuing one command, or clicking one button." ...|$|E
5000|$|... to load or unload {{classes at}} runtime (for example to load {{libraries}} dynamically at runtime, even <b>from</b> an <b>HTTP</b> resource). This {{is an important}} feature for: ...|$|R
50|$|Some, but not all, {{of these}} {{variables}} are defined by the CGI standard.Some, such as , , and the ones starting with , pass information along <b>from</b> the <b>HTTP</b> request.|$|R
50|$|If {{a website}} is {{accessed}} <b>from</b> a <b>HTTP</b> Secure (HTTPS) connection and a link points to anywhere except another secure location, then the referrer field is not sent.|$|R
50|$|Adobe's RTMP (Real Time Messaging Protocol) is {{an example}} of a {{proprietary}} protocol for which no full public implementations exist. Thus capturing media encapsulated in RTMP streams is more difficult than <b>from</b> <b>HTTP</b> streams. However, nowadays there are more than a dozen programs that can download and capture RTMP streams; they are available for a variety of operating systems.|$|E
50|$|Data-retrieval: the HIVE {{is capable}} of {{retrieving}} data {{from a variety of}} sources such as local, cloud-based or network storage, sequencing instruments, and <b>from</b> <b>http,</b> ftp and sftp repositories. Additionally, HIVE implements the sophisticated handshake protocols with existing large scale data platforms such as NIH/NCBI to download large amounts of reference genomic or sequence read data on behalf of users in an easy and accurate manner.|$|E
5000|$|The HTTP {{response}} {{status code}} 301 Moved Permanently {{is used for}} permanent URL redirection, meaning current links or records using the URL that the response is received for should be updated. The new URL should be provided in the Location field included with the response. The 301 redirect is considered a best practice for upgrading users <b>from</b> <b>HTTP</b> to HTTPS. RFC 2616 states that: ...|$|E
5000|$|The {{following}} is a sample output of paping against en.wikipedia.org on TCP/IP port 80 (<b>http)</b> <b>from</b> a Linux host: ...|$|R
5000|$|Cisco Global Exploiter is a hacking tool used to {{find and}} exploit {{vulnerabilities}} in Cisco Network-systems. It {{was created by the}} Italian group [...] "BlackAngels". CGE was discovered the first time on March, 2004.The tool has 14 known Cisco vulnerabilities ranging <b>from</b> telnet, <b>HTTP,</b> and UDP flooding.|$|R
5000|$|... {{variables}} {{which can}} be set <b>from</b> cookies or <b>HTTP</b> headers and then used in other ESI statements or written into markup; ...|$|R
5000|$|The biggest {{difference}} between HTTP/1.1 and SPDY was that each user action in SPDY {{is given a}} [...] "stream ID", meaning {{there is a single}} TCP channel connecting the user to the server. SPDY split requests into either control or data, using a [...] "simple to parse binary protocol with two types of frames." [...] SPDY showed evident improvement <b>from</b> <b>HTTP,</b> with a new page load speedup ranging from 11.81% to 47.7%.|$|E
5000|$|Quazaa, {{focuses on}} {{developing}} a cross-platform multi-network client similar to Shareaza. It {{is based on}} the Qt framework and supports connection to G2 (Shareaza), eD2k (eMule), Ares, and Bittorrent (uTorrent) networks, and download <b>from</b> <b>HTTP,</b> FTP, and BitTorrent sources. The Web site warns [...] "Many of the features below are still under development. They may be unstable or incomplete". [...] debug versions were available, dated up to 2013-10-27, and a release version dated 2012-01-21.|$|E
5000|$|In an {{analysis}} titled [...] "Stealing Phorm Cookies", Clayton wrote that Phorm's system stores a tracking cookie for each website visited on the user's PC, {{and that each}} contains an identical copy of the user's UID. Where possible, Phorm's system strips its tracking cookies <b>from</b> <b>http</b> requests before they are forwarded across the Internet to a website's server, but it cannot prevent the UID from being sent to websites using https. This would allow websites to associate the UID to any details the website collects about the visitor.|$|E
50|$|Since its {{requests}} {{use only}} standard HTTP transactions, HTTP Live Streaming can traverse any firewall or proxy server that lets through standard HTTP traffic, unlike UDP-based protocols such as RTP. This also allows {{content to be}} offered <b>from</b> conventional <b>HTTP</b> servers as origin and delivered over widely available HTTP-based content delivery networks.|$|R
40|$|Leakage {{of private}} {{information}} from web applications— {{even when the}} traffic is encrypted—is a major security threat to many applications that use HTTP for data delivery. This paper considers the problem of inferring <b>from</b> encrypted <b>HTTP</b> traffic the web sites or web pages visited by a user. Existing browser-side approaches to this problem cannot defend against more advanced attacks, and serverside approaches usually require modifications to web entities, such as browsers, servers, or web objects. In this paper, we propose a novel browser-side system, namely HTTPOS, to prevent information leaks and offer much better scalability and flexibility. HTTPOS provides a comprehensive and configurable suite of traffic transformation techniques for a browser to defeat traffic analysis without requiring any server-side modifications. Extensive evaluation of HTTPOS on live web traffic shows that it can successfully prevent the state-of-the-art attacks from inferring private information <b>from</b> encrypted <b>HTTP</b> flows. ...|$|R
50|$|A Service Package Interpreter (SPI) is a {{software}} module that takes special tasks (Packages) <b>from</b> a generic <b>HTTP</b> daemon and handles {{them with the}} help of UI components.|$|R
30|$|Then, {{we moved}} on to the flow-based method, i.e., {{combined}} monitoring of cipher suite lists from SSL/TLS handshakes in HTTPS connections and the User-Agents <b>from</b> <b>HTTP</b> connections. We analyzed a 1 -h sample of peak network traffic from our campus network and selected the hosts which initiated both HTTP and HTTPS connections. User-Agents <b>from</b> <b>HTTP</b> connections and cipher suite lists (from HTTPS connections) from the same client created a new pair. We observed 10, 890 clients communicating on both protocols {{in a short period of}} time, 305 unique cipher suite lists, and 5043 unique User-Agents. In total, we derived 12, 832 unique pairs during the measurement.|$|E
30|$|The session {{initiation}} protocol (SIP) is {{an application}} layer controlling protocol for creation, modification and termination of Voice over Internet Protocol (VoIP) sessions {{with one or}} more participants. With the rapid growth of VoIP users, SIP is used in both the wireless and the wired networks widely. Originally, SIP authentication scheme is derived <b>from</b> <b>HTTP</b> digest authentication (Franks et al. 1999), which cannot resist server-spoofing attack and password guessing attack (Yang et al. 2005). Since then, various user authentication schemes for SIP have been proposed.|$|E
40|$|Abstract. User {{reaction}} to traffic congestion can have severe impact on network stability and significant implication for traffic engineering. For example, users who persist in large peer-to-peer transfers despite congestion can drive the network into congestion collapse. On the other hand, users who abort large transfers can smoothen self-similar traffic. We present a tool, called SAX, for studying congestion-induced behavior of web surfers. SAX extracts information <b>from</b> <b>HTTP</b> packet traces and infers clicks, abortions and sessions. Measurements with SAX show how users back-off when congestion occurs. ...|$|E
50|$|HTML {{documents}} can {{be delivered}} by the same means as any other computer file. However, they are most often delivered either by <b>HTTP</b> <b>from</b> a web server or by email.|$|R
30|$|We {{searched for}} HTTP and HTTPS {{connections}} with the same source IP address. We selected a cipher suite list from the HTTPS connections and paired it to the User-Agent <b>from</b> the <b>HTTP</b> connection which was the closest in time. We assumed that the flow-based approach would better reflect the structure of live network traffic and allow us to cover more cipher suite lists observed in the network.|$|R
50|$|In addition, mobile web {{analytics}} involve metrics and KPIs associated with mobile device information, such as model, manufacturer, and screen resolution. These data {{can usually be}} assembled by combining device identification information taken <b>from</b> special <b>HTTP</b> headers, such as user-agents, with device capabilities stored in a device information registry, such as WURFL. This method is not provided by traditional {{web analytics}} solutions because it is mobile web-specific.|$|R
