13|10000|Public
50|$|It {{provides}} {{context to}} its metrics {{so that they}} are meaningful to non-experts: for example, someone may not know if five forks on <b>GitHub</b> <b>is</b> <b>a</b> lot of attention, but they can understand immediately if their project ranked in the 95th percentile of all GitHub repos created that year.|$|E
50|$|<b>GitHub</b> <b>is</b> <b>a</b> web-based Git or {{version control}} {{repository}} and Internet hosting service. It is mostly used for code. It offers {{all of the}} distributed version control and source code management (SCM) functionality of Git as well as adding its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.|$|E
50|$|<b>GitHub</b> <b>is</b> <b>a</b> web-based Git {{repository}} {{hosting service}} and is primarily used {{to host the}} source code of software and facilitate project management. As of 2015, GitHub reports having over 10 million users and over 24.2 million repositories. It offers free accounts, a pastebin service called Gist, and free website hosting under its github.io domain. The GitHub terms of service prohibits illegal use and it reserves the right to remove content at its discretion. Users can fork (copy and individually develop) other projects, which GitHub does not automatically take down when served DMCA takedown notices. GitHub uses HTTPS for its connections, making data more secure against interception from third parties.|$|E
50|$|Freeserf, {{developed}} by Jon Lund Steffensen and made available at <b>GitHub,</b> <b>is</b> <b>an</b> attempt to reimplement the Settlers game mechanics in C++. Begun in 2010, Freeserf still requires the original game files to work.|$|R
30|$|The {{number of}} {{languages}} {{in use in}} industry thus seems to be higher. We {{believe that this is}} due to the fact that many projects on <b>GitHub</b> <b>are</b> <b>a)</b> not production-ready and b) are smaller, personal projects.|$|R
50|$|A Ctrie {{implementation}} for Scala 2.9.x <b>is</b> {{available on}} <b>GitHub.</b> It <b>is</b> <b>a</b> mutable thread-safe implementation which ensures progress and supports lock-free, linearizable, O(1) snapshots.|$|R
30|$|GitLab and GitHub are {{the largest}} open source {{community}} and the industry-standard version control and publishing platforms for web developers. <b>GitHub</b> <b>is</b> <b>a</b> Git repository hosting service which offers integrated issue tracking, wikis and tools to enable collaborative code review and improvement. GitLab’s unique features include LDAP and two-factor user authentication.|$|E
30|$|<b>GitHub</b> <b>is</b> <b>a</b> web-based {{hosting service}} that allows {{developers}} to host their software project repositories using the Git revision control system. Since its launch in April 2008, GitHub {{has become one}} of the most popular source code hosting services with over twenty million projects maintained by over eight million registered developers [18]. It is now the largest code host in the world [9].|$|E
30|$|<b>Github</b> <b>is</b> <b>a</b> Web based Git {{repository}} hosting service, {{which offers}} {{all of the}} distributed version control and source code management (SCM) functionality of Git. Github provides a Web based graphical interface. It also provides access control and several features such as bug tracking, feature requests, task management, and wikis for every project. Github provides star, fork functionalities to make Github users and repositories form a real social network.|$|E
50|$|<b>GitHub</b> Pages <b>is</b> <b>a</b> {{web hosting}} service offered by GitHub for hosting static web pages for GitHub users, user blogs, project documentation,or even whole books.|$|R
50|$|The {{development}} is currently {{taking place in}} <b>github.</b> There <b>is</b> also <b>an</b> editor available online.|$|R
30|$|<b>As</b> the <b>Github</b> {{platform}} <b>is</b> becoming popular, {{analyzing the}} social activities on <b>Github</b> platform <b>is</b> <b>a</b> new trend in software engineering (Lima et al. 2014). People observe user activities on Github repositories, {{and analyze the}} Github repository features to gain insights into the Github data. Two broad categories of research work {{are closely related to}} the work in this paper: user collaboration, and repository analysis.|$|R
40|$|Sharing code is {{becoming}} increasingly important {{in the wake of}} Open Science. In this review I describe and compare two popular code-sharing utilities, GitHub and Open Science Framework (OSF). <b>GitHub</b> <b>is</b> <b>a</b> mature, industry-standard tool but lacks focus towards researchers. In comparison, OSF offers a one-stop solution for researchers but a lot of functionality is still under development. I conclude by listing alternative lesser-known tools for code and materials sharing. status: publishe...|$|E
30|$|<b>GitHub</b> <b>is</b> <b>a</b> {{fascinating}} {{case study}} in organizational design and its dynamics, revealing the virtues of a boss-less enterprise, its inherent limitations, and {{the potential benefits of}} dynamic change. While GitHub composed a highly successful $ 2 billion enterprise featuring self-selected teams, remotely employed workers, and no formal hierarchy or titles, it more recently imposed middle and senior-level managers, reigned in many of those working remotely, and introduced more formal policies and procedures. The case illuminates several important principles of organization design—principles that reflect both the allure and implications of decentralization or autonomy and the limitations that prompt the frequent need to abandon or retrench from them. These principles include the following.|$|E
40|$|Student {{engagement}} is {{an important}} factor {{when it comes to the}} learning process. Students who do not feel engaged in their studies are more likely to fail their exams and might even drop out of their education. Different methods have been tried in order to increase student engagement. One of them is the contributing student pedagogy, where students contribute to the learning of others and also value the contributions of others. To facilitate this pedagogy different learning management systems can be used. One of these tools is GitHub, which is a social and collaborative environment, traditionally used for software development. This study further investigates the possibilities of using GitHub in education in terms of a literature and case study. Results show that using GitHub in education can lead to increased student engagement, if used in a proper manner. In conclusion, <b>GitHub</b> <b>is</b> <b>a</b> prominent tool with lots of potential to be used in and for educational purposes...|$|E
3000|$|<b>GitHub</b> <b>is</b> <b>an</b> American {{software}} company located in San Francisco. Founded in 2007 by Tom Preston-Werner and Chris Wanstrath, {{the company has}} experienced an unprecedented growth in sales and subsequently in number of employees. The company doubled in size from 300 employees {{in the beginning of}} 2015 to 600 in November 2016. The company’s product, also called GitHub, allows companies and individual developers to manage their computer code and collaborate with others on software projects. <b>GitHub</b> has <b>been</b> used by some of the biggest software companies like Google, Adobe, Twitter, Paypal, Yahoo, Facebook, and Dropbox. The company’s free service became a popular tool among the members of the open source software community, students, and hobbyists. As of this writing, 14 million of users were collaborating on over 47 million projects using the company’s product in its second round. 1 In July 2015, the company raised 250 million dollars from private investors, putting the overall value of the startup at two billion dollars. 2 [...]...|$|R
50|$|ARToolKit <b>is</b> <b>an</b> {{open-source}} computer tracking {{library for}} creation of strong augmented reality applications that overlay virtual imagery {{on the real}} world. Currently, it <b>is</b> maintained as <b>an</b> open-source project hosted on <b>GitHub.</b> ARToolKit <b>is</b> <b>a</b> very widely used AR tracking library with over 160,000 downloads on its last public release in 2004.|$|R
50|$|GitHub became {{interested}} in Oxley's work after Twitter selected a bird that he designed for their own logo. The illustration <b>GitHub</b> chose <b>was</b> <b>a</b> character that Oxley had named Octopuss. Since GitHub wanted Octopuss for their logo (a use that the iStock license disallows), they negotiated with Oxley to buy exclusive rights to the image.|$|R
40|$|Abstract With over 10 million git repositories, GitHub is {{becoming}} {{one of the most important}} sources of software artifacts on the Internet. Researchers mine the information stored in GitHub’s event logs to understand how its users employ the site to collaborate on software, but so far there have been no studies describing the quality and properties of the available GitHub data. We document the results of an empirical study aimed at under-standing the characteristics of the repositories and users in GitHub; we see how users take advantage of GitHub’s main features and how their activity is tracked on GitHub and related datasets to point out misalignment between the real and mined data. Our results indicate that while <b>GitHub</b> <b>is</b> <b>a</b> rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. For example, we show that the majority of the projects are personal and inactive, and that almost 40 % of all pull requests do not appear as merged even though they were. Also, approximately hal...|$|E
40|$|With over 10 million git repositories, GitHub is {{becoming}} {{one of the most important}} source of software artifacts on the Internet. Researchers are starting to mine the infor-mation stored in GitHub’s event logs, trying to understand how its users employ the site to collaborate on software. However, so far there have been no studies describing the quality and properties of the data available from GitHub. We document the results of an empirical study aimed at un-derstanding the characteristics of the repositories in GitHub and how users take advantage of GitHub’s main features— namely commits, pull requests, and issues. Our results indi-cate that, while <b>GitHub</b> <b>is</b> <b>a</b> rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. We show, for example, that the majority of the projects are personal and inactive; that GitHub is also being used for free storage and as a Web hosting service; and that almost 40 % of all pull requests do not appear as merged, even though they were. We provide a set of recommendations for software engineer-ing researchers on how to approach the data in GitHub...|$|E
40|$|<b>GitHub</b> <b>is</b> <b>a</b> {{widely used}} online {{collaborative}} software development environment. In this paper, we describe curation projects {{as a new}} category of GitHub project that collects, evaluates, and preserves resources for software developers. We investigate: (1) what motivates software developers to curate resources; (2) why curation has occurred on GitHub; (3) how curated resources are used by software developers; and (4) how the GitHub platform could better support these practices. We conduct in-depth interviews with 16 software developers, each of whom hosts curation projects on GitHub. Our {{results suggest that the}} motivators that inspire software developers to curate resources on GitHub are similar to those that motivate them to participate in the development of open source projects. Convenient tools (e. g., Markdown syntax and Git version control system) and the opportunity to address professional needs {{of a large number of}} peers attract developers to engage in curation projects on GitHub. Benefits of curating on GitHub include learning opportunities, support for development work, and professional interaction. However, curation is limited by GitHub’s document structure, format, and a lack of key features, such as search. In light of this, we propose design possibilities to encourage and improve appropriations of GitHub for curation...|$|E
50|$|PostCSS <b>is</b> <b>a</b> {{software}} development tool that uses JavaScript-based plugins to automate routine CSS operations. The tool {{has been used}} to develop the code of Wikipedia, Facebook, and <b>GitHub.</b> PostCSS <b>is</b> <b>a</b> top-favored CSS tool among npm users. It was designed by Andrey Sitnik with the idea taking its origin in his front-end work for Evil Martians.|$|R
40|$|<b>GitHub</b> <b>is</b> <b>an</b> online {{platform}} for collaborating and sharing code. In recent years its popularity has increased widely and both people and different size organizations utilize its powerful features. One of those features <b>is</b> <b>a</b> lightweight issue tracker which is meant for handling features and identified errors of software. The issue tracker is intuitive {{to use and}} simplifies a lot of things, {{but what if it}} is to <b>be</b> used as <b>a</b> requirements management tool? Requirements management is the last step of requirements engineering process. This process aims to identify, document and manage all the requirements valid for the software product. Requirements management focuses on tracking how requirements are fulfilled and keeping the information associated to requirements intact. This M. Sc. Thesis represents a semi-formal guideline for handling requirements management in <b>GitHub.</b> The guideline <b>is</b> evaluated on <b>a</b> theoretical level by comparing how well it accomplishes requirements management objectives and fits in an agile software development environment. To assess the suitability for the agile approach, the guideline is compared against lean principles. Lean principles originate from Toyota’s successful manufacturing practices and are converted to usable form in a software development. On a practical level <b>a</b> case study <b>is</b> carried out where the guideline <b>is</b> put into <b>a</b> real use. Similar research hasn’t been done before, making the results novel. Both the theoretical assessment and the practical case study point out that the guideline and <b>GitHub</b> <b>are</b> well-suited for requirements management in an agile environment...|$|R
50|$|<b>GitHub's</b> mascot, Octocat, <b>is</b> <b>an</b> anthropomorphized {{female cat}} with five octopus-like tentacles. The {{character}} {{was created by}} graphic designer Simon Oxley as clip art to sell on iStock, a website that enables designers to market royalty-free digital images.|$|R
40|$|The pattern {{library is}} {{available}} on GitHub through the Joint Global Change Research Institution repository ([URL] <b>GitHub</b> <b>is</b> <b>a</b> web-based version control repository and Internet hosting service which uses git concepts and commands. The purpose of creating this pattern library was to allow for researchers across various fields {{to be able to}} efficiently use the statistical patterns generated by the described regression method to examine model response to change in global mean temperature for all the available CMIP 5 models (41 models, at present). We also further intend for those patterns to be easy to scale using a scaler generated from a SCM of ones choosing. The pattern library contains patterns, generated by the least squared regression methodology, for the first realization of the 41 CMIP 5 climate models. Annual, seasonal, and monthly patterns are provided for surface temperature and precipitation. For temperature patterns, units in Celsius were used as it is the standard temperature units for impact analysis. Included in each netCDF file for each model is: 1. The individual model pattern (2 -D); 2. The adjusted R 2 between the predictor and dependent terms (2 -D); 3. The standard error of the estimated regression coefficient (2 -D); 4. A historical climatology based on the 1961 - 1990 average from each model (2 -D), which can be used to construct absolute values at time X; 5. The 95 th percentile confidence level pattern for model parameters. The patterns from all 41 CMIP 5 models range in size (165 kB to 1 MB) due to spatial resolution, but all patterns were kept at the native resolution of the dependent variable and no regridding of input/output variables were done. This was done to retain model specific information, which may have been lost if regridded to a common spatial resolution. All source code used to produce patterns is available in the aforementioned repository. Source code is written in NCAR Command Language (Version 6. 3. 0; [URL]...|$|E
30|$|<b>Github</b> <b>is</b> {{not only}} <b>a</b> host of {{software}} projects, {{but also a}} data source that records software development activities. Many researchers perform analysis on Github Repositories and Github data. Some investigate the collaboration of Github users based on their activities on repositories (Avelino et al. 2015; Jurado and Marín 2015; Lima et al. 2014; Vasilescu et al. 2015 b). Some study language importance, or predict the trends of popular programming languages (Casalnuovo et al. 2015; Ray et al. 2014).|$|R
50|$|A pastebin (or text storage site) <b>is</b> <b>a</b> type of web {{application}} where users can store plain text. They are {{most commonly used}} to share short source code snippets for code review via Internet Relay Chat. The first pastebin was located at pastebin.com. Other sites with the same functionality have appeared, and several open-source pastebin scripts are available. Many pastebins allow commenting where readers can post feedback directly on the page. <b>GitHub</b> Gists <b>are</b> <b>a</b> type of pastebin with version control.|$|R
30|$|Before {{the sudden}} change in structure, GitHub 1.0 (pre- 2014) <b>was</b> <b>a</b> poster {{child of a}} boss-less organization. The company was openly proud of its {{approach}} to running the business. In fact, their organizing principles were similar in key values to how users of its product were collaborating on open source projects. In that sense, <b>GitHub,</b> the company, <b>was</b> <b>a</b> reflection of the values around which <b>GitHub,</b> the product, <b>was</b> built.|$|R
30|$|In the <b>GitHub</b> repository, there <b>is</b> <b>a</b> file named “Erros.dat” 2 {{containing}} all {{the seeds}} that exposed an error {{along with a}} message describing the detected error. The file contains 236 rows, each row being <b>a</b> seed that <b>was</b> stored, so during the algorithm’s development, 236 errors were detected and corrected.|$|R
40|$|This {{snapshot}} of our "ludusengine" <b>GitHub</b> repository <b>is</b> <b>an</b> Online Appendix for the GHITALY 2017 conference paper "Profile-Based Algorithm for Personalized Gamification in Computer-Supported Collaborative Learning Environments". Please find more {{information in the}} conference paper (link available in the metadata box), or the "README. md" file in the repository (direct download of the attached zipfile or click on the GitHub link). Paper reference: Knutas, A., van Roy, R., Hynninen, T., Granato, M., Kasurinen, J., & Ikonen, J. (2017). Profile-Based Algorithm for Personalized Gamification in Computer-Supported Collaborative Learning Environments. In 1 st Workshop on Games-Human Interaction (GHITALY 2017) ...|$|R
5000|$|Atom <b>is</b> <b>a</b> {{free and}} {{open-source}} text and source code editor for macOS, Linux, and Microsoft Windows with support for plug-ins written in Node.js, and embedded Git Control, developed by <b>GitHub.</b> Atom <b>is</b> <b>a</b> desktop application built using web technologies. Most of the extending packages have free software licenses and are community-built and maintained. Atom {{is based on}} Electron (formerly known as Atom Shell), a framework that enables cross-platform desktop applications using Chromium and Node.js. It is written in CoffeeScript and Less. It can also <b>be</b> used as <b>an</b> integrated development environment (IDE). Atom was released from beta, as version 1.0, on June 25, 2015. Its developers call it a [...] "hackable text editor for the 21st Century".|$|R
40|$|<b>GitHub</b> <b>is</b> {{the most}} popular {{repository}} for open source code (Finley 2011). It has more than 3. 5 million users, as the company declared in April 2013, and more than 10 million repositories, as of December 2013. It has a publicly accessible API and, since March 2012, it also publishes a stream of all the events occurring on public projects. Interactions among <b>GitHub</b> users <b>are</b> of <b>a</b> complex nature and take place in different forms. Developers create and fork repositories, push code, approve code pushed by others, bookmark their favorite projects and follow other developers {{to keep track of}} their activities. In this paper we present a characterization of GitHub, as both a social network and a collaborative platform. To the best of our knowledge, this is the first quantitative study about the interactions happening on GitHub. We analyze the logs from the service over 18 month...|$|R
50|$|On 31 December 2014, <b>GitHub</b> <b>was</b> blocked in India (along with 31 other Websites) over pro-ISIS content {{posted by}} users. On 10 January 2015, <b>GitHub</b> <b>was</b> {{unblocked}}. Again, on 12 Sep 2015, <b>GitHub</b> <b>was</b> blocked all over India. The site was unblocked soon after.|$|R
30|$|To {{investigate}} how {{different combinations of}} program constructs affect bug localization effectiveness, we have evaluated BLUiR, BLUiR+ (a variation of BLUiR), and AmaLgam on 20 C# projects available on <b>GitHub.</b> C# <b>is</b> <b>a</b> general-purpose, object-oriented language that shares many traits with the Java language, but also have some distinct features. For example, some C# constructs, like properties and structures (“structs”) are inexistent in Java. C# <b>is</b> <b>a</b> popular language (TIOBE Software BV 2016) and is present among the top 10 languages in number of GitHub repositories (The GitHub Blog 2015). This growing popularity justifies the need for experiments using the C# language, {{in addition to the}} available studies reported from Java projects. Evaluating these techniques on C# projects has provided an assessment on how the techniques behave with a different object-oriented programming language.|$|R
3000|$|GitHub {{has moved}} from no {{hierarchy}} to hierarchy. Is hierarchy necessary? For <b>GitHub,</b> it <b>is</b> <b>an</b> intriguing story which is still being played out. More generally, it <b>is</b> <b>an</b> open question. We know that a hierarchy yields stability; is no hierarchy inherently unstable? Can it be agile? Is no hierarchy just a temporary solution, which can be changed and adapted quickly? Or should we conclude that without any hierarchy, change is easy and can be normal; bureaucracy makes change slow, but possible. Are the opportunity losses of a non-hierarchical organization too large? In good times, we can do away with hierarchy and move on; when hierarchy is needed, we use it and then discard it. Can we {{move back and forth}} as GitHub case seems to suggest? [...]...|$|R
50|$|Simon Oxley <b>is</b> <b>a</b> British {{freelance}} {{graphic designer}} {{who is most}} famous for designing the original bird logo for Twitter, and the Octocat logo for <b>GitHub.</b> Oxley <b>was</b> <b>a</b> prolific contributor to the iStockphoto site, which he had joined because of a free promotional offer for purchasers of the Adobe Creative Suite. Both companies purchased Oxley's designs from the website (Twitter paid $10-15 for its logo, of which Oxley received $2-6) but the license did {{not allow them to}} use the works as logos. Twitter's founders redesigned their logo in response, but GitHub asked Oxley for permission, which he granted. He credits the Japanese popular art as an influence on his Twitter design and others, and said he was grateful for the wide distribution of his images despite receiving very little compensation.|$|R
