283|368|Public
2500|$|... 4 East South, a new {{building}} providing research and teaching space for the Faculty of Engineering & Design {{as well as a}} cutting <b>edge</b> <b>computing</b> data centre. Opened June 2016 ...|$|E
50|$|<b>Edge</b> <b>computing</b> imposes certain {{limitations}} on the choices of technology platforms, applications or services, all of which need to be specifically developed or configured for <b>edge</b> <b>computing.</b>|$|E
50|$|<b>Edge</b> <b>{{computing}}</b> pushes applications, {{data and}} computing power (services) away from centralized {{points to the}} logical extremes of a network. <b>Edge</b> <b>computing</b> replicates fragments of information across distributed networks of web servers, which may spread over a vast area. As a technological paradigm, <b>edge</b> <b>computing</b> is {{also referred to as}} mesh computing, peer-to-peer computing, autonomic (self-healing) computing, grid computing, and by other names implying non-centralized, nodeless availability.|$|E
30|$|If I(x, y) ‘the {{processed}} pixel’ {{belongs to}} an <b>edge,</b> <b>compute</b> {{the difference between}} this pixel and its eight neighbors called P(x, y) (Figure  6 and Equation  6); in this case, {{the values of the}} mean (μ 1 and μ 2) are determined according to the maximum variation (gradient).|$|R
40|$|Hough {{transform}} for object detection Extract edge contours from images Sample interest points uniformly along <b>edges</b> <b>Compute</b> oriented bar and geometric blur at interest {{points and}} concatenate Match to nearest neighbor in training data to get object shift vector Cast votes for object position and scale Estimate discrete density and extract strong hypothese...|$|R
50|$|In early 2000, Jan Newman who {{was then}} President and CEO brought in Greg Butterfield {{to take over the}} role of President and CEO. Under Mr. Butterfield's leadership, Altiris {{acquired}} <b>Computing</b> <b>Edge</b> in September 2000. <b>Computing</b> <b>Edge's</b> founder, Dwain Kinghorn, had come from Microsoft and helped to develop Microsoft's original Systems Management Server product (SMS). <b>Computing</b> <b>Edge</b> specialized in extending and enhancing with functionality that SMS lacked.|$|R
5000|$|... #Subtitle level 2: Companies {{providing}} <b>edge</b> <b>computing</b> services ...|$|E
5000|$|To ensure {{acceptable}} {{performance of}} widely dispersed distributed services, large organizations typically implement <b>edge</b> <b>computing</b> by deploying Web server farms with clustering. Previously {{available only to}} very large corporate and government organizations, <b>edge</b> <b>computing</b> has utilized technology advances and cost reductions for large-scale implementations have made the technology available to [...] small and medium-sized businesses.|$|E
50|$|<b>Edge</b> <b>{{computing}}</b> and grid computing are related. Whereas grid computing {{would be}} hard-coded into a specific application to distribute its complex and resource intensive computational needs across a global grid of cheap networked machines, <b>edge</b> <b>computing</b> provides a generic template facility for {{any type of}} application to spread its execution across a dedicated grid of prepared expensive machines.|$|E
30|$|The {{significance}} on the <b>edges</b> is <b>computed</b> and any <b>edges</b> {{that do not}} {{test for}} a two-proportion z-test with 95 percent confidence are removed.|$|R
3000|$|Hence, our {{processing}} node {{handles the}} messages in its input queue using simple arithmetic {{and a few}} stored parameters. Each <b>edge</b> process <b>computes</b> the r [...]...|$|R
40|$|The edge-Wiener {{index of}} a graph G {{is defined as}} the Wiener index of the line graph of G. In this paper an {{algorithm}} is developed that, for a given benzenoid system G with m <b>edges,</b> <b>computes</b> the edge-Wiener index of G in O(m) time. The key to the algorithm is a reduction of the problem to three different weighted trees. In addition to the previously used weighted vertex- and edge-Wiener indices, the so-called weighted vertex-edge-Wiener index is introduced and essentially used in the algorithm. ...|$|R
50|$|<b>Edge</b> <b>computing</b> is {{a method}} of {{optimising}} cloud computing systems by performing data processing {{at the edge of}} the network, near the source of the data. This reduces the communications bandwidth needed between sensors and the central datacentre by performing analytics and knowledge generation at or near the source of the data. This approach requires leveraging resources that may not be continuously connected to a network such as laptops, smartphones, tablets and sensors. <b>Edge</b> <b>Computing</b> covers a wide range of technologies including wireless sensor networks, mobile data acquisition, mobile signature analysis, cooperative distributed peer-to-peer ad hoc networking and processing also classifiable as local cloud/fog computing and grid/mesh computing, dew computing, mobile <b>edge</b> <b>computing,</b> cloudlet, distributed data storage and retrieval, autonomic self-healing networks, remote cloud services, augmented reality, and more.|$|E
5000|$|<b>Edge</b> <b>{{computing}}</b> eliminates, or {{at least}} de-emphasizes, the core computing environment, limiting or removing a major bottleneck and a potential point of failure.|$|E
5000|$|... 4 East South, a new {{building}} providing research and teaching space for the Faculty of Engineering & Design {{as well as a}} cutting <b>edge</b> <b>computing</b> data centre. Opened June 2016 ...|$|E
30|$|In {{order to}} meet these challenges, mobile <b>edge</b> cloud <b>computing</b> was {{proposed}} as an innovative mobile cloud computing paradigm which complements the cloudlet concept [4]. The concept of mobile <b>edge</b> cloud <b>computing</b> is to provide cloud computing resources {{at the edge of}} radio access networks close to mobile end users. Using this infrastructure will allow to reduce latency by deploying a fiber transport network between base stations and edge cloud data centers. Endowing base stations with additional computation and storage resources is expected to enhance mobile users’ QoS anywhere and at any time [5].|$|R
50|$|The {{simplest}} algorithm {{to find an}} EMST in two dimensions, given n points, is {{to actually}} construct the complete graph on n vertices, which has n(n-1)/2 <b>edges,</b> <b>compute</b> each <b>edge</b> weight by finding the distance between each pair of points, and then run a standard minimum spanning tree algorithm (such as the version of Prim's algorithm or Kruskal's algorithm) on it. Since this graph has &Theta;(n2) edges for n distinct points, constructing it already requires &Omega;(n2) time. This solution also requires Ω(n2) space to store all the edges.|$|R
3000|$|... is {{the length}} of the <b>edge</b> i, <b>computed</b> on the template. s_ 1 ^[i] and s_ 2 ^[i] denote the two entries of the mesh that account for the ending {{vertices}} of the edge i.|$|R
50|$|Edge Side Includes or ESI {{is a small}} markup {{language}} for edge level dynamic web content assembly. The purpose of ESI is to tackle the problem of web infrastructure scaling. It is an application of <b>edge</b> <b>computing.</b>|$|E
50|$|Generally, {{the task}} {{could be any}} task that is {{performed}} by individual client and used in the various distributed computing environment such as social computing, volunteer computing, and <b>edge</b> <b>computing,</b> grid computing, or utility computing. Collaborative task in social computing is one example.|$|E
50|$|Since, MEC {{architecture}} {{has only}} recently been proposed, there are as yet very few applications that have adopted this architecture. However, many case studies have been proposed in recent articles. Some of the notable applications in Mobile <b>Edge</b> <b>Computing</b> are Computational Offloading, Content Delivery, Mobile Big Data Analytics, Edge Video Caching,Collaborative Computing etc.|$|E
5000|$|... 2009: IDC Enterprise Innovation Award, Network <b>Computing</b> <b>EDGE,</b> PCQuest Best IT Implementation Award ...|$|R
40|$|A {{modification}} of airfoil section geometry is examined {{for improvement of}} the leading edge pressures predicted by the Computational Aeroelasticity Program - Transonic Small Disturbance (CAP-TSD). Results are compared with Eppler solutions to assess improvement. Preliminary results indicate that a fading function {{modification of}} section slopes is capable of significant improvements in the pressures near the leading <b>edge</b> <b>computed</b> by CAP-TSD. Application of this modification to airfoil geometry before use in CAP-TSD is shown to reduce the nonphysical pressure peak predicted by the transonic small disturbance solver. A second advantage of the slope modification is the substantial reduction in sensitivity of CAP-TSD steady pressure solutions to the computational mesh...|$|R
40|$|A {{technique}} for {{the synthesis of}} virtual views of a 3 D scene, starting from images taken by a calibrated multicamera system, is proposed and tested. Surface interpolation is performed over a set of 3 D <b>edges,</b> <b>computed</b> with stereometric algorithms, and ad-ditional curvature-tuning points, scattered where the reflectivity model is sufficiently reliable. The 3 D co-ordinates of the tuning points are computed by mini-mizing the MSE between the available real views and the corresponding synthetic views. Synthesis is finally carried out by reprojecting on the new image plane the estimated object surface over which texture-mapping of the reflection-corrected luminance function has been performed. Texture correction, which uses an estimat...|$|R
5000|$|ISO/IEC 20248 {{provides}} a method whereby {{the data of}} objects identified by <b>edge</b> <b>computing</b> using Automated Identification Data Carriers AIDC, a barcode and/or RFID tag, can be read, interpreted, verified and made available into the [...] "Fog" [...] and on the [...] "Edge" [...] even when the AIDC tag has moved on.|$|E
50|$|He was the Chairman of {{founding}} Steering Committee of the IEEE Transactions on Network Science and Engineering in 2013-14. He co-edited the National Information Technology Research and Development Program's {{report on}} Complex Engineered Networks in 2013, and co-chairs the first Fog World Congress Research Program and the IEEE/ACM Symposium on <b>Edge</b> <b>Computing</b> in 2017.|$|E
50|$|A microdatacenter is a small, self {{contained}} data center consisting of computing, storage, networking, power and cooling. Micro data centers typically employ water cooling to achieve compactness, low component count, low cost and high energy efficiency. Its small size allows decentralised deployment {{in places where}} traditional data centers cannot go, for instance <b>edge</b> <b>computing</b> for Internet of things.|$|E
5000|$|The server computes [...] {{for each}} [...] Transmits [...]At each <b>edge</b> [...] while <b>computing</b> ...|$|R
40|$|We {{consider}} a Bayesian method for learning the Bayesian network structure from complete data. Recently, Koivisto and Sood (2004) presented an algorithm that for any single <b>edge</b> <b>computes</b> its marginal posterior probability in O(n 2 ^n) time, where n {{is the number}} of attributes; the number of parents per attribute is bounded by a constant. In this paper we show that the posterior probabilities for all the n (n - 1) potential <b>edges</b> can be <b>computed</b> in O(n 2 ^n) total time. This result is achieved by a forward-backward technique and fast Moebius transform algorithms, which are of independent interest. The resulting speedup by a factor of about n^ 2 allows us to experimentally study the statistical power of learning moderate-size networks. We report results from a simulation study that covers data sets with 20 to 10, 000 records over 5 to 25 discrete attributesComment: Appears in Proceedings of the Twenty-Second Conference on Uncertainty in Artificial Intelligence (UAI 2006...|$|R
40|$|A {{method of}} {{predicting}} forces, moments, and detailed surface pressures on thin, sharp-edged wings with leading-edge vortex separation in incompressible flow is presented. The method employs an inviscid flow {{model in which}} the wing and the rolled-up vortex sheets are represented by piecewise, continuous quadratic doublet sheet distributions. The Kutta condition is imposed on all wing <b>edges.</b> <b>Computed</b> results are compared with experimental data and with the predictions of the leading-edge suction analogy for a selected number of wing planforms {{over a wide range}} of angle of attack. These comparisons show the method to be very promising, capable of producing not only force predictions, but also accurate predictions of detailed surface pressure distributions, loads, and moments...|$|R
50|$|Rappuhn {{was hired}} as a {{programmer}} by Electronic Data Systems (EDS) in September 1991 and was unable to continue development for Blue Wave Software. Blue Wave Software dissolved and Hatchew started Cutting <b>Edge</b> <b>Computing</b> to continue development. Hatchew was later involved in a serious car accident, and was unable to continue development of the system past 1993.|$|E
50|$|Production process happens {{fast and}} the {{equipment}} and work piece can be expensive, the AI applications need to be applied in real-time {{to be able to}} detect anomalies immediately to avoid waste and other consequences. Cloud-based solutions can be powerful and fast, but they still would not fit certain computation efficiency requirements. <b>Edge</b> <b>computing</b> may be a better choice in such scenario.|$|E
5000|$|Fog {{computing}} - Fog computing {{is a term}} {{created by}} Cisco that refers to extending cloud computing {{to the edge of}} an enterprise's network. Also known as <b>Edge</b> <b>Computing</b> or fogging, fog computing facilitates the operation of compute, storage, and networking services between end devices and cloud computing data centers. It is a medium weight and intermediate level of computing power ...|$|E
40|$|A {{computational}} linear stability {{analysis of}} spiral waves in a reaction-diffusion equation is performed on large disks. As the disk radius R increases, eigenvalue spectra converge to the absolute spectrum predicted by Sandstede and Scheel. The convergence rate {{is consistent with}} 1 /R, except possibly {{near the edge of}} the spectrum. Eigenfunctions computed on large disks are compared with predicted exponential forms. Away from the edge of the absolute spectrum the agreement is excellent, while near the <b>edge</b> <b>computed</b> eigenfunctions deviate from predictions, probably due to finite-size effects. In addition to eigenvalues associated with the absolute spectrum, computations reveal point eigenvalues. The point eigenvalues and associated eigenfunctions responsible for both core and far-field breakup of spiral waves are shown. Comment: 20 pages, 13 figures, submitted to SIAD...|$|R
40|$|Abstract. A {{computational}} linear stability {{analysis of}} spiral waves in a reaction-diffusion equation is performed on large disks. As the disk radius R increases, eigenvalue spectra converge to the absolute spectrum predicted by Sandstede and Scheel. The convergence rate {{is consistent with}} 1 /R, except possibly {{near the edge of}} the spectrum. Eigenfunctions computed on large disks are compared with predicted exponential forms. Away from the edge of the absolute spectrum the agreement is excellent, while near the <b>edge</b> <b>computed</b> eigenfunctions deviate from predictions, probably due to finite-size effects. In addition to eigenvalues associated with the absolute spectrum, computations reveal point eigenvalues. The point eigenvalues and associated eigenfunctions responsible for both core and far-field breakup of spiral waves are shown...|$|R
40|$|We {{consider}} {{the problem of}} embedding a cube-connected cycles graph (CCC) into a hypercube with edge faults. Our main result is an algorithm that, given a list of faulty <b>edges,</b> <b>computes</b> an embedding of the CCC that spans all of the nodes and avoids all of the faulty edges. The algorithm has optimal running time and tolerates {{the maximum number of}} faults (in a worst-case setting). Because ascend-descend algorithms can be implemented efficiently on a CCC, this embedding enables the implementation of ascend-descend algorithms, such as bitonic sort, on hypercubes with edge faults. We also present a number of related results, including an algorithm for embedding a CCC into a hypercube with edge and node faults and an algorithm for embedding a spanning torus into a hypercube with edge faults...|$|R
