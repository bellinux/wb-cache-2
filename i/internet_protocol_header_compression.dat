0|8549|Public
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. This document contains requirements for the 0 -byte IP/UDP/RTP (Internet Protocol/User Datagram Protocol/Real-Time Transport <b>Protocol)</b> <b>header</b> <b>compression</b> scheme to be developed by the Robust <b>Header</b> <b>Compression</b> (ROHC) Working Group. It also includes the basic assumptions for the typical link layers over which 0 -byte compression may be implemented, and assumptions about its usage in general. 1...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2001). All Rights Reserved. This document contains requirements for robust IP/UDP/RTP (Internet Protocol/User Datagram Protocol/Real-Time Transport <b>Protocol)</b> <b>header</b> <b>compression</b> to be developed by the ROHC (Robust <b>Header</b> <b>Compression)</b> WG. It {{is based on the}} ROHC charter, discussions in the WG, the 3 GPP document " 3 GPP TR 23. 922 ", version 1. 0. 0 of October 1999, as well as contributions from 3 G. IP...|$|R
40|$|Van Jacobson (VJ) TCP <b>header</b> <b>compression</b> {{significantly}} reduces TCP protocol overhead in a noiseless environment. Unfortunately, {{when the}} algorithm operates in error prone environments similar to wireless, {{the performance of}} the compressor drops to below that of not using <b>header</b> <b>compression.</b> This work describe modifications to the VJ algorithm that allow it to better tolerate errors. By removing many of the dependencies that are implicitly transmitted on the link, one is able to generate a noise tolerant VJ compressor. On noiseless links, the new algorithm shows similar performance as the original algorithm. On random or burst error channels, the new algorithm significantly outperform the original. 1 Introduction Transport <b>protocol</b> <b>header</b> <b>compression</b> can significantly improve the performance of low [...] bandwidth connections. In such systems, the sender applies a compression algorithm to selected portions of a datagram <b>protocol</b> <b>header</b> and the receiver reverses the process to obtain a dupli [...] ...|$|R
40|$|Internet and {{cellular}} technologies are merging to decrease transport costs and enable IP-based applications {{to hundreds of}} millions of cellular users. Real time voice services will continue to be dominant in future cellular systems and to reduce system costs it is desirable to base all services, including voice, on IP. However, the radio spectrum must be efficiently used to provide mass-market services at reasonable prices, but <b>Internet</b> <b>protocol</b> <b>headers</b> are large in size. Moreover, data discarding policies are poorly suited to the error-proneness of cellular links...|$|R
50|$|A correctly-formed ping packet is {{typically}} 56 bytes in size, or 64 bytes when the <b>Internet</b> <b>Protocol</b> <b>header</b> is considered. However, any IPv4 packet (including pings) {{may be as}} large as 65,535 bytes. Some computer systems were never designed to properly handle a ping packet larger than the maximum packet size because it violates the <b>Internet</b> <b>Protocol</b> documented in RFC 791. Like other large but well-formed packets, a ping of death is fragmented into groups of 8 octets before transmission. However, when the target computer reassembles the malformed packet, a buffer overflow can occur, causing a system crash and potentially allowing the injection of malicious code.|$|R
40|$|Keywords: H. 264 video <b>compression,</b> <b>header</b> <b>compression,</b> video {{wireless}} communications A video coding standard with high compression efficiency should have minimum redundancy in the coded bit stream. However, in certain scenario {{and in particular}} with small slice sizes, there is significant redundancy in form of overheads in the existing coding standards MPEG- 4 and H. 264. A similar idea of shortened NAL unit header has been recently proposed in the JVT meeting [1]. For small NALU sizes, the overheads may occupy {{more than half of}} the video data. Furthermore, large header information renders the video more susceptible to channel errors. This paper presents a new approach to video compression that removes most of the problems associated with the excess syntax. It takes inspiration from <b>protocol</b> <b>header</b> <b>compression</b> schemes [2]. To demonstrate the effectiveness of this technique, H. 264 headers are analysed, and an H. 264 <b>header</b> <b>compression</b> scheme is tested using a simulated UMTS channel. The results show up to 5 dBs gain in video quality can be achieved using the proposed scheme. ...|$|R
5000|$|In the <b>Internet</b> <b>Protocol,</b> two <b>header</b> {{options are}} {{available}} which are rarely used: [...] "strict source and record route" [...] (SSRR) and [...] "loose source and record route" [...] (LSRR). Because of security concerns, packets marked LSRR are frequently blocked on the Internet. If not blocked, LSRR can allow an attacker to spoof its address but still successfully receive response packets.|$|R
40|$|Internet growing, <b>compression</b> of <b>Internet</b> <b>Protocol</b> (IP) <b>headers</b> is seen {{as crucial}} to maximally utilize scarce {{wireless}} bandwidth. The traditional IP compression schemes rely on consistent per-flow state in order to perform <b>header</b> <b>compression.</b> See for instance [1], [2], [3]. While these approaches focus on compression gain, i. e., {{the reduction in the}} number of header bytes as a percentage of the total packet size, the overhead is the cost of managing state per each unidirectional flow. In this document we present a new <b>header</b> <b>compression</b> scheme with the emphasis on reducing or even eliminating the state, perhaps at the cost of reduced compression gain compared to the existing methods. We make use of existing route table information in order to achieve the state reduction. The net result is that significant compression gain can be achieved at a greatly reduced cost of maintaining and managing per-flow state information. This could be especially beneficial for short-lived flows...|$|R
40|$|Internet and {{cellular}} technologies are merging to decrease transport costs and enable IP-based applications {{to hundreds of}} millions of cellular users. Real time voice services will continue to be dominant in future cellular systems and to reduce system costs it is desirable to base all services, including voice, on IP. However, the radio spectrum must be efficiently used to provide mass-market services at reasonable prices, but <b>Internet</b> <b>protocol</b> <b>headers</b> are large in size. Moreover, data discarding policies are poorly suited to the error-proneness of cellular links. Protocol overhead for IP-based voice services can be reduced by compressing headers, e. g. with the compressed real time protocol (CRTP). CRTP, however, does not perform well over cellular links since it is not robust in the face of errors. ROCCO, a <b>header</b> <b>compression</b> scheme suitable for cellular systems, delivers more packets to the user than CRTP at realistic error rates with a better average compression ratio. Voice services in cellular systems should also be able to use damaged speech data. This can be done using the UDP Lite protocol which provides a more flexible checksumming policy that enables delivery of data possibly usable to the application. This paper shows that CRTP/UDP fails to deliver sufficient service quality at the error rates of a cost-efficient cellular system and that ROCCO combined with UDP Lite can provide an IP-based voice service over such cellular systems. Godk√§nd; 2000; 20061103 (ysko...|$|R
40|$|Compressing <b>protocol</b> <b>headers</b> has {{traditionally}} been an attractive way of conserving bandwidth over low-speed links, including those in wireless systems. However, despite the growth {{in recent years in}} the number of end-to-end <b>protocols</b> beyond TCP/IP, <b>header</b> <b>compression</b> deployment for these protocols has not kept pace. This is in large part due to complexities in implementation, which often requires a detailed knowledge of kernel internals, and a lack of a common way of pursuing the general problem across a variety of end-to-end protocols. To address this, rather than defining several new protocol-specific standards, we present a unified framework for <b>header</b> <b>compression.</b> This framework includes a simple, platform-independent header description language that protocol implementors can use to describe high-level header properties, and a platform-specific code generation tool that produces kernel source code automatically from this header specification. Together, the high-level description l [...] ...|$|R
5000|$|VoIP, peer-to-peer, {{and many}} others {{applications}} require address information of communicating peers within the data streams of the connection, rather than only in the <b>Internet</b> <b>Protocol</b> packet <b>headers.</b> For example, the Session Initiation Protocol (SIP) communicates the IP address of network clients for registration with a location service, so that telephone calls may be routed to registered clients. ICE provides a framework with which a communicating peer may discover and communicate its public IP address {{so that it can}} be reached by other peers.|$|R
40|$|A {{decade ago}} as {{wireless}} sensor network research took off many researchers in the field denounced the use of IP as inadequate and in contradiction {{to the needs of}} {{wireless sensor network}}ing. Since then the field has matured, standard links have emerged, and IP has evolved. In this paper, we present the design of a complete IPv 6 -based network architecture for wireless sensor networks. We validate the architecture with a production-quality implementation that incorporates many techniques pioneered in the sensor network community, including duty-cycled link <b>protocols,</b> <b>header</b> <b>compression,</b> hop-by-hop forwarding, and efficient routing with effective link estimation. In addition to providing interoperability with existing IP devices, this implementation was able to achieve an average duty-cycle of 0. 65 %, average per-hop latency of 62 ms, and a data reception rate of 99. 98 % over a period of 4 weeks in a real-world home-monitoring application where each node generates one application packet per minute. Our results outperform existing systems that do not adhere to any particular standard or architecture. In light of this demonstration of full IPv 6 capability, we review the central arguments that led the field away from IP. We believe that the presence of an architecture, specifically an IPv 6 -based one, provides a strong foundation for wireless sensor networks going forward...|$|R
40|$|This report {{provides}} {{a summary of}} several different <b>header</b> <b>compression</b> techniques. The different techniques included are: (1) Van Jacobson's <b>header</b> <b>compression</b> (RFC 1144); (2) SCPS (Space Communications <b>Protocol</b> Standards) <b>header</b> <b>compression</b> (SCPS-TP, SCPS-NP); (3) Robust <b>header</b> <b>compression</b> (ROHC); and (4) The <b>header</b> <b>compression</b> techniques in RFC 2507 and RFC 2508. The methodology for compression and error correction for these schemes are described {{in the remainder of}} this document. All of the <b>header</b> <b>compression</b> schemes support compression over simplex links, provided that the end receiver has some means of sending data back to the sender. However, if that return path does not exist, then neither Van Jacobson's nor SCPS can be used, since both rely on TCP (Transmission Control Protocol). In addition, under link conditions of low delay and low error, all of the schemes perform as expected. However, based on the methodology of the schemes, each scheme is likely to behave differently as conditions degrade. Van Jacobson's <b>header</b> <b>compression</b> relies heavily on the TCP retransmission timer and would suffer an increase in loss propagation should the link possess a high delay and/or bit error rate (BER). The SCPS <b>header</b> <b>compression</b> scheme protects against high delay environments by avoiding delta encoding between packets. Thus, loss propagation is avoided. However, SCPS is still affected by an increased BER (bit-error-rate) since the lack of delta encoding results in larger header sizes. Next, the schemes found in RFC 2507 and RFC 2508 perform well for non-TCP connections in poor conditions. RFC 2507 performance with TCP connections is improved by various techniques over Van Jacobson's, but still suffers a performance hit with poor link properties. Also, RFC 2507 offers the ability to send TCP data without delta encoding, similar to what SCPS offers. ROHC is similar to the previous two schemes, but adds additional CRCs (cyclic redundancy check) into <b>headers</b> and improves <b>compression</b> schemes which provide better tolerances in conditions with a high BER...|$|R
40|$|Video Internet {{services}} are increasing every year. High-Quality TV over Internet is a service offered by many companies in many countries, and video streaming websites {{are within the}} most popular sites on the Internet. Because of that, service providers have a major concern in giving to their customers the best quality in their services. In order to guarantee the quality on these services, a Quality of Experience monitoring tool is required. The main goal of this thesis {{is to develop a}} tool to monitor the Quality of Experience of video over Internet services. In order to be functional, this monitoring tool has to be usable in a real scenario. In this case, a real scenario implies that this tool is used in strategic points of the network and the only available means is the data stream that goes through the network. The most important feature of this tool is {{that it has to be}} functional in real-time. It has to be so because its goal is to detect problems before these affect the quality of the video offered to the customers and avoid their complaints. In this thesis a lightweight method to monitor the Quality of Experiences is implemented. It is designed to predict in a fast way the quality of the video using only the data stream: information in the <b>Internet</b> <b>protocols</b> <b>headers</b> and in the coded video data. In order to achieve this, the structure of the packets has been studied, including the format of the <b>protocols</b> <b>headers</b> and the video codec encoding performance. Then the software has been designed to receive the stream and calculate the parameters that give an estimation of the Quality of experience. This method has been tested to validate its performance and conclude whether it is or not a valid tool to be used in a real scenario or not...|$|R
40|$|Threats {{have become}} a big problem since {{the past few years}} as {{computer}} viruses are widely recognized as a significant computer threat. However, the role of Information Technology security must be revisit again since it is too often. IT security managers find themselves in the hopeless situation of trying to uphold a maximum of security as requested from management. At the same time they are considered an obstacle in the way of developing and introducing new applications into business and government network environments. This paper will focus on Transmission Control Protocol Synchronize Flooding attack detections using the <b>Internet</b> <b>Protocol</b> <b>header</b> as a platform to detect threats, especially in the IP protocol and TCP protocol, and check packets using anomaly detection system which has many advantages, and applied it under the open source Linux. The problem is to detect TCP SYN Flood attack through internet security. This paper also focusing on detecting threats in the local network by monitoring all the packets that goes through the networks. The results show that the proposed detection method can detect TCP SYN Flooding in both normal and attacked network and alert the user about the attack after sending the report to the administrator. As a conclusion, TCP SYN Flood and other attacks can be detected through the traffic monitoring tools if the abnormal behaviors of the packets are recognized such as incomplete TCP three-way handshake application and IP header length...|$|R
50|$|Van Jacobson <b>Header</b> <b>Compression</b> (also VJ <b>compression,</b> or just <b>Header</b> <b>Compression)</b> is {{an option}} in most {{versions}} of PPP. Versions of Serial Line <b>Internet</b> <b>Protocol</b> (SLIP) with VJ compression are often called CSLIP (Compressed SLIP).|$|R
40|$|This {{document}} specifies an IAB standards track <b>protocol</b> for the <b>Internet</b> community, {{and requests}} discussion {{and suggestions for}} improvements. Please refer to the current edition of the "IAB Official Protocol Standards " for the standardization state and status of this protocol. Distribution of this memo is unlimited. Summary This memo changes and clarifies {{some aspects of the}} semantics of the Type of Service octet in the <b>Internet</b> <b>Protocol</b> (IP) <b>header.</b> The handling of IP Type of Service by both hosts and routers is specified in some detail. This memo defines a new TOS value for requesting that the network minimize the monetary cost of transmitting a datagram. A number of additional new TOS values are reserved for future experimentation and standardization. The ability to request that transmission be optimized along multiple axes (previously accomplished by settin...|$|R
40|$|Abstract‚ÄîIn this paper, {{we propose}} a {{mechanism}} for packet marking called Probabilistic Congestion Notification (PCN). This scheme makes use of the 1 -bit Explicit Congestion Notification (ECN) field in the <b>Internet</b> <b>Protocol</b> (IP) <b>header.</b> It allows the source to estimate the exact level of congestion at each intermediate queue. By knowing this, the source could take avoiding action either by adapting its sending rate or by using alternate routes. The estimation mechanism makes use of time series analysis both {{to improve the quality}} of the congestion estimation and to predict, ahead of time, the congestion level which subsequent packets will encounter. The proposed protocol is tested in ns- 2 simulator using a background of real Internet traffic traces. Results show that the methods can successfully calculate the congestion at any queue along the path with low error levels. Index Terms‚ÄîTCP, Congestion Control, ECN, Forecasting. I...|$|R
40|$|This {{document}} specifies an <b>Internet</b> standards track <b>protocol</b> for the <b>Internet</b> community, {{and requests}} discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2001). All Rights Reserved. This document specifies a highly robust and efficient <b>header</b> <b>compression</b> scheme for RTP/UDP/IP (Real-Time Transport Protocol, User Datagram <b>Protocol,</b> <b>Internet</b> <b>Protocol),</b> UDP/IP, and ESP/IP (Encapsulating Security Payload) <b>headers.</b> Existing <b>header</b> <b>compression</b> schemes do not work well when used over links with significant error rates and long round-trip times. For many bandwidth limited links where <b>header</b> <b>compression</b> is essential...|$|R
40|$|Internet {{has always}} been {{vulnerable}} to security threats. With the growth in usage of Internet, rate of cyber crime has also increased tremendously. Out of number of possible attacks, the most precarious is Denial of Service (DoS) attack. It provides the attacker an opportunity to use the vulnerabilities {{of a large number}} of compromised hosts in a network and create attack networks or Botnets. These compromised systems usually disguise their identity by falsifying the source address in <b>Internet</b> <b>Protocol</b> (IP) <b>header</b> known as address spoofing. Further the stateless nature of IP makes the situation perilous. The best possible way to deal with DoS attacks is to find the source of attack. IP Traceback is a proactive and effective approach to detect the origin of the DoS attack and mitigating it with the co-operation of ISP‚Äôs. This approach helps in restoring routine network traffic, prevents any chances of future attacks and brings the attacker responsible for attack in front of law...|$|R
40|$|International audienceThe IP {{tunneling}} {{mechanisms are}} used in various contexts such as network security, IP transition, and mobility support. However, these tunneling mechanisms induce a large header overhead that leads to performance deterioration on wireless links which have scarce resources. <b>Header</b> <b>compression</b> methods {{can be used on}} tunnel headers to reduce the <b>protocol</b> <b>header</b> overheads, independently of the payload type. Though, several <b>header</b> <b>compression</b> methods exist, the <b>header</b> <b>compression</b> profiles defined by them are not adapted to the characteristics of IP tunneling. In view of this, we design a novel tunneling <b>header</b> <b>compression</b> <b>protocol</b> (TuCP) for efficient use of IP tunneling mechanisms in wireless networks. The TuCP protocol behavior is analyzed by studying the implementation parameters and their configuration. Several experiments are conducted to measure the performance of TuCP. The experiment results are used to configure TuCP for enabling a better compression of IPv 6 flows and managing packet reordering problem in IP tunnels...|$|R
40|$|Abstract- This paper {{reports on}} {{studies of the}} effects of the TCP/IP <b>protocol</b> <b>header</b> on the system {{performance}} of a spectrally efficient cellular system. Integrated cellular-system and TCP-protocol simulations are used to examine the degradation in the effective data throughput and packet delay due to the header overhead. Performance improvements achievable by <b>header</b> <b>compression</b> are investigated. Simulations have been designed for an EDGE-like cellular system. System-wide performance is examined using cumulative distributions for data throughput, delay and packet success. For example, the data throughput of a micro-cellular system with Web traffic is improved about 10 % when <b>header</b> <b>compression</b> from 40 to 2 bytes is implemented. More aggressive compression yielded minimal further improvements. I...|$|R
40|$|Voice over <b>Internet</b> <b>Protocol</b> (VoIP) is {{becoming}} a reality in many organizations. The potential for mobility in voice over wi-fi networks will derive demand for the technology. Wireless VoIP is poised to rival VoIP as an alternative telephony tool. Internet {{has been used to}} transport data in the form of packet. In the past, Internet did not support any kind of sophisticated quality of service (QoS) mechanism. Although the type of service (TOS) field in the <b>Internet</b> <b>protocol</b> (IP) <b>header</b> has been existing and has been allowing the differentiated treatment of packets, it was never really used on a large scale. The voice is sensitive to delay and jitter so bandwidth must be guaranteed while transporting it. With the extensive use of Internet for carrying voice, {{there is a need to}} add QoS functionality in it. QoS with reference to VoIP has been discussed in the paper. Limited bandwidth and network latency are the issues which need to be considered while using wireless LAN for packetized voice data. Efforts of standards like 802. 11 e which will take care of these issues, have also been explored. The impact of these technologies on distance education has also been explored in the paper...|$|R
50|$|A {{version of}} SLIP with <b>header</b> <b>{{compression}}</b> is called Compressed SLIP (CSLIP). The compression algorithm used in CSLIP {{is known as}} Van Jacobson TCP/IP <b>Header</b> <b>Compression.</b> CSLIP {{has no effect on}} the data payload of a packet and is independent of any compression by the serial line modem used for transmission. It reduces the Transmission Control <b>Protocol</b> (TCP) <b>header</b> from twenty bytes to seven bytes. CSLIP has no effect on User Datagram Protocol (UDP) datagrams.|$|R
40|$|TCP/IP <b>header</b> <b>compression</b> {{has long}} been used to send {{information}} efficiently and to improve the response time of communication systems. The wide deployment of the new <b>Internet</b> <b>Protocol,</b> IPv 6, puts more demands on <b>header</b> <b>compression,</b> since IPv 6 normally yields packets with much larger headers than IPv 4 does. At the same time, <b>header</b> <b>compression</b> is necessary on wireless links, which are always considered relatively limited resources. However, packets sent over wireless channels are prone to be corrupted. This usually deteriorates the performance of <b>header</b> <b>compression.</b> In addition, the recently noticed high frequency of some computer networking problems makes the performance of <b>header</b> <b>compression</b> even worse. These problems include packet reordering and packet errors that avoid link layer error detection. In this paper, we analyze the influence of these problems on existing <b>header</b> <b>compression</b> algorithms. We also propose a new algorithm, which is adaptive to the wireless channel {{as well as the}} packet size. This new algorithm will thus achieve a better tradeoff between compression ratio and error propagation, which will give better overall performance. Even though we focus on wireless links in this paper, the adaptive algorithm would also be suitable for wired links where <b>header</b> <b>compression</b> performance is influenced by packet reordering and errors passing link layer detection...|$|R
40|$|International audienceThis paper {{reviews the}} main {{technical}} solutions {{adopted by the}} next generation mobile broadcasting standard DVB-NGH, the handheld evolution of the second generation digital terrestrial TV standard DVB-T 2. The main technical elements introduced with respect to DVB-T 2 are: layered video coding with multiple physical layer pipes, time-frequency slicing, full support of an IP transport layer with a dedicated <b>protocol</b> stack, <b>header</b> <b>compression</b> mechanisms for both IP and MPEG- 2 TS packets, new LDPC coding rates for the data path (down to 1 / 5), non-uniform constellations for 64 QAM and 256 QAM, four-dimensional rotated constellations for QPSK, improved time interleaving in terms of zapping time, end-to-end latency and memory consumption, improved physical layer signaling in terms of robustness, capacity and overhead, a novel distributed MISO transmit diversity scheme for SFNs, and efficient provisioning of local content in SFNs. All these technological solutions, together with the high performance of DVB-T 2, make DVB-NGH a real next-generation mobile multimedia broadcasting technology. In fact, DVB-NGH can be regarded the first third-generation broadcasting system because it allows {{for the possibility of}} using multiple input multiple output MIMO antenna schemes to overcome the Shannon limit of single antenna wireless communications. Furthermore, DVB-NGH also allows the deployment of an optional satellite component forming a hybrid terrestrial-satellite network topology to improve the coverage in rural areas where the installation of terrestrial networks could be uneconomical...|$|R
40|$|NASA {{is moving}} toward a networkcentric {{communications}} architecture and, in particular, is building toward use of <b>Internet</b> <b>Protocol</b> (IP) in space. The use of IP is motivated by its ubiquitous application in many communications networks and in available commercial off-the-shelf (COTS) technology. The Constellation Program intends to fit two or more voice (over IP) channels on both the forward link to, and the return link from, the Orion Crew Exploration Vehicle (CEV) during all mission phases. Efficient bandwidth utilization of the links is key for voice applications. In Voice over IP (VoIP), the IP packets are limited to small sizes to keep voice latency at a minimum. The common voice codec used in VoIP is G. 729. This new algorithm produces voice audio at 8 kbps and in packets of 10 -milliseconds duration. Constellation has designed the VoIP communications stack to use the combination of IP/UDP/RTP protocols where IP carries a 20 -byte header, UDP (User Datagram Protocol) carries an 8 -byte header, and RTP (Real Time Transport Protocol) carries a 12 -byte <b>header.</b> The <b>protocol</b> <b>headers</b> total 40 bytes and are equal in length to a 40 -byte G. 729 payload, doubling the VoIP latency. Since much of the IP/UDP/RTP header information does not change from IP packet to IP packet, IP/UDP/RTP <b>header</b> <b>compression</b> can avoid transmission of much redundant data as well as reduce VoIP latency. The benefits of IP <b>header</b> <b>compression</b> are more pronounced at low data rate links such as the forward and return links during CEV launch. IP/UDP/RTP <b>header</b> <b>compression</b> codecs are well supported by many COTS routers. A common interface to the COTS routers is through frame relay. However, enabling IP <b>header</b> <b>compression</b> over frame relay, according to industry standard (Frame Relay IP <b>Header</b> <b>Compression</b> Agreement FRF. 20), requires a duplex link and negotiations between the compressor router and the decompressor router. In Constellation, each forward to and return link from the CEV in space is treated independently as a simplex link. Without negotiation, the COTS routers are prevented from entering into the IP <b>header</b> <b>compression</b> mode, and no IP <b>header</b> <b>compression</b> would be performed. An algorithm is proposed to enable IP <b>header</b> <b>compression</b> in COTS routers on a simplex link with no negotiation or with a one-way messaging. In doing so, COTS routers can enter IP <b>header</b> <b>compression</b> mode without the need to handshake through a bidirectional link as required by FRF. 20. This technique would spoof the routers locally and thereby allow the routers to enter into IP <b>header</b> <b>compression</b> mode without having the negotiations between routers actually occur. The spoofing function is conducted by a frame relay adapter (also COTS) with the capability to generate control messages according to the FRF. 20 descriptions. Therefore, negotiation is actually performed between the FRF. 20 adapter and the connecting COTS router locally and never occurs over the space link. Through understanding of the handshaking protocol described by FRF. 20, the necessary FRF. 20 negotiations messages can be generated to control the connecting router, not only to turn on IP <b>header</b> <b>compression</b> but also to adjust the compression parameters. The FRF. 20 negotiation (or control) message is composed in the FRF. 20 adapter by interpreting the incoming router request message. Many of the fields are simply transcribed from request to response while the control field indicating response and type are modified...|$|R
40|$|Traditional modular {{layering}} schemes {{have served}} {{a major part}} {{in the development of}} a variety of protocols. However, as the physical layer impairments become more unpredictable, a cross layer design (CLD) which is dynamic in nature provides better performance. CLD introduces new challenges in protocol design as well as in the area of security. Using numerical analysis, we show that a link layer design employing <b>header</b> <b>compression</b> and cross layer signalling to protect <b>protocol</b> <b>headers</b> can limit packet discarding. This paper also reviews the IPsec protocol and describes how IPsec can be modified for cross layer architecture. √Ç¬© 2007 IEEE...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis presents {{a method for}} countering Denial of Service (DoS) attacks in networks that provide Quality of Service (QoS) guarantees using Differentiated Service (DiffServ). This approach uses feedback from the DiffServ provider to initiate packet signing at the source. The signature allows the DiffServ provider to distinguish valid packets from malicious packets. This mechanism {{can also be used}} to provide key management for other digital signature methods, such as the <b>Internet</b> <b>Protocol</b> Authentication <b>Header</b> (IP AH). However, unlike other methods, our solution requires no encryption or cryptographic processing on a per-packet basis. Instead, it utilizes the sender's ability to alter its packet signatures faster than the attacker can duplicate the changes. This method also avoids the fragmentation and decreased throughput associated with increased packet size of IP AH through use of existing fields in the IP header. This method results in a significant reduction in valid packets that are dropped during a DoS attack. Thus, a DiffServ provider would be able to maintain QoS guarantees during an attack without incurring the overhead associated with cryptographic signatures. A C++ implementation of this DoS countermeasure for the ns 2 network simulator and the experimental simulation scripts are included as appendices. Lieutenant, United States Nav...|$|R
40|$|This {{document}} specifies an <b>Internet</b> standards track <b>protocol</b> for the <b>Internet</b> community, {{and requests}} discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2005). This document defines Robust <b>Header</b> <b>Compression</b> (ROHC) profiles for compression of Real-Time Transport Protocol, User Datagram Protocol-Lite, and <b>Internet</b> <b>Protocol</b> (RTP/UDP-Lite/IP) packets and UDP-Lite/IP. These profiles are defined based on their differences wit...|$|R
30|$|Another {{option to}} reduce the amount of header overhead, is to apply <b>header</b> <b>compression.</b> For <b>header</b> <b>compression,</b> RObust <b>Header</b> <b>Compression</b> (ROHC) [73, 74] is very well known and free {{libraries}} exist [75].|$|R
40|$|RObust <b>Header</b> <b>Compression</b> (ROHC) : A Compression Profile for IP Status of this Memo This {{document}} specifies an <b>Internet</b> standards track <b>protocol</b> for the <b>Internet</b> community, {{and requests}} discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2004). The original RObust <b>Header</b> <b>Compression</b> (ROHC) RFC (RFC 3095) defines a framework for <b>header</b> <b>compression,</b> along with compression protocols (profiles) for IP/UDP/RTP, IP/ESP (Encapsulating Security Payload), IP/UDP, and also a profile for uncompressed packet streams. However, no profile was defined for compression of IP only, which has bee...|$|R
40|$|NASA/TM [...] - 2001 - 211154 This report {{provides}} {{a summary of}} several different <b>header</b> <b>compression</b> techniques. The different techniques included are: 9 ÃÜ 5 Van Jacobson 9 ÃÜ 2 s <b>header</b> <b>compression</b> [RFC 1144] 9 ÃÜ 5 SCPS <b>header</b> <b>compression</b> [SCPS-TP, SCPS-NP] 9 ÃÜ 5 Robust <b>header</b> <b>compression</b> [ROHC] 9 ÃÜ 5 The <b>header</b> <b>compression</b> techniques in [RFC 2507] and [RFC 2508] The methodology for compression and error correction for these schemes are described {{in the remainder of}} this document...|$|R
40|$|TCP/IP <b>header</b> <b>compression</b> {{has long}} been used to send {{information}} efficiently and to improve the response time of communication systems. It is also well known that errors on the link where <b>header</b> <b>compression</b> is used can deteriorate the performance. In addition, the recently noticed high frequency of some computer networking problems can make the performance of <b>header</b> <b>compression</b> even worse. These problems include packet reordering and packet errors that avoid link layer error detection. In this paper, we analyze the influence of these problems on existing <b>header</b> <b>compression</b> algorithms. We also propose an adaptive <b>header</b> <b>compression</b> that gives better performance...|$|R
40|$|Abstract‚ÄîIn {{this paper}} we {{introduce}} an cooperative <b>header</b> <b>compression</b> scheme for 4 G wireless networks. The main focus {{is to achieve}} robustness and low complexity for the <b>compression.</b> Furthermore the <b>header</b> <b>compression</b> scheme should work without any feedback information. Index Terms‚Äîcooperative behavior, <b>header</b> <b>compression,</b> future wireless system...|$|R
40|$|<b>Header</b> <b>Compression</b> {{techniques}} are now {{widely used in}} wireless and satellite communications. The main drawback of these techniques is to weaken the transmission against bit error or packet losses. Indeed, a corrupted or missing header {{can lead to a}} non-decompression of consecutive packets and then to a disconnection until the reception of a non-compressed packet. The parameters of the <b>header</b> <b>compression</b> system should then be carefully determined. In this paper, we first review the main <b>header</b> <b>compression</b> <b>protocols</b> standardized for a unidirectional link. This analysis allows us to build a simple generic <b>header</b> <b>compression</b> model depending on few parameters characterizing a <b>header</b> <b>compression</b> <b>protocol.</b> The evaluation of this model in cases corresponding to particular applications allows us to draw some first lessons for the use of <b>header</b> <b>compression</b> in Satellite communications...|$|R
