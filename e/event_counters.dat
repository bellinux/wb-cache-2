46|101|Public
5000|$|... {{peripherals}} such as timers, <b>event</b> <b>counters,</b> PWM generators, and watchdog ...|$|E
50|$|WLAN {{networks}} of today (802.11 a/b/g/n) are lacking proactive network management. When compared to cellular networks, WLAN networks have {{significantly higher level}} of radio interference, less regulated environment and even more critical applications. Cellular networks (GSM, CDMA, WCDMA) are continuously monitored through thousands of statistical network <b>event</b> <b>counters</b> and derivative metrics, called key performance indicators (KPI’). WQA {{is a concept that}} brings similar active quality assurance to WLAN network management and that way also enables SLA’s.|$|E
40|$|Abstract. Hotspot is {{the part}} of a program where most {{execution}} time is spent. Detecting the hotspot enables the optimization of the program. The performance <b>event</b> <b>counters</b> embedded in modern processors provide the hardware support for the hotspot detection. By sampling the instruction addresses of the running program with performance <b>event</b> <b>counters,</b> hotspot of the program can be statistically detected. This technical report describes our tool to find the sections of the code that are detected as the hotspot of the program with performance <b>event</b> <b>counters.</b> SPEC CPU 2006 benchmarks are tested with our tool and the results show the hotspot sections and overhead of the hotspot detection tool...|$|E
40|$|Cosmic {{rays are}} {{constantly}} bombarding the upper atmosphere, decaying into {{an array of}} particles in a shower called the hadronic shower. The very last particle that decays from a cosmic ray is the muon. Cosmic rays can be indirectly detected by using a detector that utilizes scintillator panels and photomultiplier tubes to detect the muons. The purpose of the experiment was to determine a correlation {{between the amount of}} cosmic rays detected and the percentage of cloud cover. The amount of cosmic rays detected was divided into five categories: one <b>counter</b> <b>events,</b> two <b>counter</b> <b>events,</b> three <b>counter</b> <b>events,</b> four <b>counter</b> <b>events,</b> and the total amount of muon triggers. Data was taken in Sandy Hook, New Jersey. There was a statistically significant (p < 0. 01) positive correlation between one <b>counter</b> <b>events,</b> four <b>counter</b> <b>events</b> and the total amount of muon triggers, and percent cloud cover. There was a statistically significant (p < 0. 05) positive correlation between two <b>counter</b> <b>events</b> and three <b>counter</b> <b>events,</b> and percent cloud cover. The findings {{of this study suggest that}} there is a relationship between cosmic rays and the climate and thus may affect climate change...|$|R
5000|$|... 2 match/count/capture {{registers}} {{allowing the}} implementation of a pulse generator, <b>event</b> <b>counter</b> or reference timer ...|$|R
50|$|Disk power {{consumption}} model {{is based on}} input counter and output counter correlated with Input/Output <b>events</b> <b>counters.</b>|$|R
40|$|Abstract. Sampling is {{a common}} way to collect {{execution}} information with performance <b>event</b> <b>counters.</b> However, the sampling data generated from performance <b>event</b> <b>counters</b> tend to be massive if sampling with high frequencies. Storing and processing {{a large amount of}} sampling data require much disk space and computing time. In this paper, we propose the online linear regression method {{to reduce the size of}} the sampling data. Our idea is to fit the sampling data with a series of straight lines. Each line represents the variation trend of the sample values within the corresponding section. Then we store the parameters of the lines instead of the sample values, resulting in a reduction of the sampling data size. The SPEC CPU 2006 benchmarks are tested to verify the proposed online linear regression method. The experimental result shows the online linear regression method can reduce the sampling data size effectively with a low overhead, and retain the variation characteristic of the sampling data with a normalized estimated standard deviation less than 0. 1. Key words: sampling data compression, performance <b>event</b> <b>counters,</b> online linear regression...|$|E
40|$|The system {{interconnect}} {{is often}} the performance bottleneck in SMP computers. Although modern SMPs include <b>event</b> <b>counters</b> on processors and interconnects, these provide limited information about the interaction of processors vying for shared resources. Additionally, transaction sources and addresses are not readily available, making analysis of access patterns and data locality difficult. Enhanced system interconnect instrumentation is required to extract this information. This paper describes instrumentation implemented for monitoring the system interconnect on Sun Fire servers. The instrumentation supports sophisticated programmable filtering of <b>event</b> <b>counters,</b> allowing us to construct histograms of system interconnect activity, and a FIFO to capture trace sequences. Our implementation results {{in a very small}} hardware footprint, making it appropriate for inclusion in commodity hardware...|$|E
30|$|The network {{processor}} {{handles the}} network protocols used {{to access the}} histogram from a remote PC using a web browser. The PC can execute instructions as follows: obtain and clear histogram data, and obtain and clear data of <b>event</b> <b>counters</b> for monitor of the detectors.|$|E
40|$|Charge {{sensitive}} amplifier outputs bipolar pulse with maximum peak of 5 volts. This {{is applied}} to negative inputs of two high-speed comparators. These change output states only if pulse applied to negative inputs exceeds dc bias on their positive inputs. Output is transferred to digital <b>event</b> <b>counter...</b>|$|R
5000|$|Some writers {{dared to}} oppose Soviet ideology, like short story writer Varlam Shalamov and Nobel Prize-winning novelist Aleksandr Solzhenitsyn, {{who wrote about}} life in the gulag camps, or Vasily Grossman, with his {{description}} of World War II <b>events</b> <b>countering</b> the Soviet official historiography. They were dubbed [...] "dissidents" [...] and could not publish their major works until the 1960s.|$|R
40|$|This project {{focuses on}} the {{creation}} and adaption of computable general equilibrium (CGE) models to facilitate the calculation of the economic consequences of terrorism <b>events,</b> <b>counter</b> terrorism measures, natural disasters and accidents. The work in 2013 - 14 will have two distinct strands: (a) development of modeling capability at the US county level; (b) integration of econometric results on terrorism into the CGE framework. Project Technical Descriptio...|$|R
40|$|In {{this paper}} {{we present a}} Design-for-Debug (DFD) {{reconfigurable}} infrastructure for SoCs to support at-speed in-system functional debug. A distributed reconfigurable fabric inserted at RTL provides a debug platform that can be configured and operated post-silicon via the JTAG port. The platform can be repeatedly reused to configure many debug structures such as assertions checkers, transaction identifiers, triggers, and <b>event</b> <b>counters...</b>|$|E
40|$|Scalability of {{the core}} {{frequency}} is a common feature of low-power processor architectures. Many heuristics for frequency scaling were proposed {{in the past to}} find the best trade-off between energy efficiency and computational performance. With complex applications exhibiting unpredictable behavior these heuristics cannot reliably adjust the operation point of the hardware because they do not know where the energy is spent and why the performance is lost. Embedded hardware monitors in the form of <b>event</b> <b>counters</b> have proven to offer valuable information in the field of performance analysis. We will demonstrate that counter values can also reveal the power-specific characteristics of a thread. In this paper we propose an energy-aware scheduling policy for non-real-time operating systems that benefits from <b>event</b> <b>counters.</b> By exploiting the information from these counters, the scheduler determines the appropriate clock frequency for each individual thread running in a time-sharing environment. A recurrent analysis of the thread-specific energy and performance profile allows an adjustment of the frequency to the behavioral changes of the application. While the clock frequency may vary in a wide range, the application performance should only suffer slightly. Because of the similarity to a car cruise control, we called our scheduling policy Process Cruise Control. This adaptive clock scaling is accomplished by the operating system without any application support. Process Cruise Control has been implemented on the Intel XScale architecture, that offers a variety of frequencies and a set of configurable <b>event</b> <b>counters.</b> Energy measurements of the target architecture under variable load show the advantage of the proposed approach...|$|E
40|$|Great Tits Parus major {{can reduce}} fruit damage in apple {{orchards}} by predating on caterpillars. A model by Mols (2003) predicted that damage reduction is mainly {{influenced by the}} hatching date of the Great Tit nestlings {{and the number of}} breeding pairs in the orchard. We tested these predictions by investigating predation pressure on caterpillars by Great Tits in various orchards. First we calculated the total number of feeding visits by Great Tits using two different methods: <b>event</b> <b>counters</b> and the daily weight gain of nestlings. For the latter method we needed to make assumptions on prey size selectivity of Great Tits to prevent overestimation of the number of visits. With the <b>event</b> <b>counters</b> we showed that the number of feeding visits increased with date and with the number of nestlings but there was no effect of hatching date on the total number of feeds over the whole nesting period. Next, we used these data on feeding visits to calculate the maximum proportion of caterpillars that Great Tits removed in organic apple orchards. The average number of three breeding pairs of Great Tits per ha removed on average 23 % of the caterpillars. This percentage can increase up to 49 % if all foraging takes place within the orchard. ...|$|E
50|$|The {{initiative}} received government {{backing from}} the deputy DfES and Equalities Minister Jacqui Smith, although some {{sections of the}} press argued against its political correctness, and {{pointed out that the}} sexuality of some historical figures is more a matter of speculation than fact. Supporters of the <b>event</b> <b>countered</b> {{that it is important to}} challenge heterosexist attitudes in society. LGBT History Month is intended to be an annual event in the United Kingdom taking place every February to coincide with a slower month in the schools calendar.|$|R
40|$|The {{transient}} <b>event</b> <b>counter</b> is described, defining its operational characteristics, {{and presenting}} the preliminary results obtained {{through the first}} 90 days of operation including the Spring 1976 eclipse season. The {{results show that the}} CTS was charged to the point where discharges have occurred. The discharge induced transients have not caused any anomalous events in spacecraft operation. The data indicate that discharges can occur {{at any time during the}} day without preference to any local time quadrant. The number of discharges occurring in the 1 sec sample interval are greater than anticipated...|$|R
50|$|However, Kris's {{role in the}} <b>events</b> was <b>countered</b> by Narong in a 2003 book. Narong blamed Kris, among others, for the violence. The {{book was}} {{strongly}} criticised by former student leaders.|$|R
40|$|The Time Warp {{synchronization}} protocol allows causality {{errors and}} then recovers from {{them with the}} assistance of a cancellation mechanism. Cancellation can cause the rollback of several other simulation objects that may trigger a cascading rollback situation where the rollback cycles back to the original simulation object. These cycles of rollback can cause the simulation to enter a unstable (or thrashing) state where little real forward simulation progress is achieved. To address this problem, knowledge of causal relations between events can be used during cancellation to avoid cascading rollbacks and to initiate early recovery operations from causality errors. In this paper, we describe a logical time representation for Time Warp simulations that is used to disseminate causality information. The new timestamp representation, called Total Clocks, has two components: (i) a virtual time component, and (ii) a vector of <b>event</b> <b>counters</b> similar to Vector clocks. The virtual time component provides a one dimensional global simulation time, and the vector of <b>event</b> <b>counters</b> records event processing rates by the simulation objects. This time representation allows us to disseminate causality information during event execution {{that can be used to}} allow early recovery during cancellation. We propose a cancellation mechanism using Total Clocks that avoids cascading rollbacks in Time Warp simulations that have FIFO communication channels...|$|E
40|$|This {{paper is}} {{dedicated}} to the chronicle recognition approach used to design an evolution monitoring system for supervising dynamic systems for which time information is relevant. We propose to extend and also to unify the chronicle representation through <b>event</b> <b>counters.</b> The main motivation of such an extension of the chronicle representation arises from alarm processing: counting the occurrences of alarms can be useful to evaluate the severity of a problem and also to discriminate some kind of faults. The paper describes the representation and the corresponding algorithms for processing this extension according to the purpose of supervision in terms of performance. ...|$|E
40|$|Abstract. Fine-grained program power {{behavior}} {{is useful in}} both evaluating power optimizations and observing power optimization opportunities. Detailed power simulation is time consuming and often inaccurate. Physical power measurement is faster and objective. However, fine-grained measurement generates enormous amounts of data in which locating important features is difficult, while coarse-grained measurement sacrifices important detail. We present a program power behavior characterization infrastructure that identifies program phases, selects a representative interval of execution for each phase, and instruments the program to enable precise power measurement of these intervals to get their time-dependent power behavior. We show that the representative intervals accurately model the fine-grained timedependent behavior of the program. They also accurately estimate the total energy of a program. Our compiler infrastructure allows for easy mapping between a measurement result and its corresponding source code. We improve the accuracy of our technique over previous work by using edge vectors, i. e., counts of traversals of control-flow edges, instead of basic block vectors, as well as incorporating <b>event</b> <b>counters</b> into our phase classification. We validate our infrastructure through the physical power measurement of 10 SPEC CPU 2000 integer benchmarks on an Intel Pentium 4 system. We show that using edge vectors reduces the error of estimating total program energy by 35 % over using basic block vectors, and using edge vectors plus <b>event</b> <b>counters</b> reduces the error of estimating the fine-grained time-dependent power profile by 22 % over using basic block vectors. ...|$|E
40|$|Hardware {{performance}} counters are CPU registers {{that count}} data loads and stores, cache misses, and other <b>events.</b> <b>Counter</b> data can help programmers understand software performance. Although CPUs typically have multiple coun-ters, each can monitor only {{one type of}} event at a time, and some counters can monitor only certain events. Therefore, some CPUs cannot concurrently monitor interesting combi-nations of events. Software multiplexing partly overcomes this limitation by using time sharing to monitor multiple <b>events</b> on one <b>counter.</b> However, counter multiplexing is harder to implement for multithreaded programs than for single-threaded ones because of certain difficulties in man-aging {{the length of the}} time slices. This paper describes a software library called MPX that overcomes these difficulties. MPX allows applications to gather hardware counter data concurrently for any combi-nation of countable events. MPX data are typically within a few percent of counts recorded without multiplexing. ...|$|R
50|$|The 6522 Versatile Interface Adapter (VIA) is an {{integrated}} circuit {{that was designed}} and manufactured by MOS Technology as an I/O port controller for the 6502 family of microprocessors. It provides two bidirectional 8-bit parallel I/O ports, two 16-bit timers (one of which can also operate as an <b>event</b> <b>counter),</b> and an 8-bit shift register for serial communications or data conversion between serial and parallel forms. The direction of each bit of the two I/O ports can be individually programmed. In addition to being manufactured by MOS Technology, the 6522 was second sourced by other companies including Rockwell and Synertek.|$|R
50|$|The {{number is}} {{incremented}} once the server has successfully integrated changes {{coming from the}} client {{in the case of}} a server-side <b>event.</b> The <b>counter</b> is incremented once more, if the changes made by the programmer are committed.|$|R
40|$|International audienceModern {{multi-core}} platforms feature complex topologies {{with different}} cache levels and hierarchical memory subsystems. Consequently, thread and data placement become crucial to achieve good performance. In this context, CPU and memory affinity {{appear as a}} promising approach to match the application characteristics to the underlying architecture. In this paper, we evaluate CPU and memory affinity strategies for numerical scientific multithreaded benchmarks on multi-core platforms. We use and analyze hardware performance <b>event</b> <b>counters</b> {{in order to have}} a better understanding of such impact. Indeed, the results obtained on different multi-core platforms and Linux kernels show that important performance improvements (up to 70 %) can be obtained when applying affinity strategies that fit both the application and the platform characteristics...|$|E
40|$|A {{prerequisite}} of energy-aware scheduling is precise {{knowledge of}} any activity inside the computer system. Embedded hardware monitors (e. g., processor performance counters) {{have proved to}} offer valuable information {{in the field of}} performance analysis. The same approach can be applied to investigate the energy usage patterns of individual threads. We use information about active hardware units (e. g., integer/floatingpoint unit, cache/memory interface) gathered by <b>event</b> <b>counters</b> to establish a thread-specific energy accounting. The evaluation shows that the correlation of events and energy values provides the necessary information for energy-aware scheduling policies. Our approach to OS-directed power management adds the energy usage pattern to the runtime context of a thread. Depending on the field of application we present two scenarios tha...|$|E
40|$|Distributed Shared-Memory (DSM) multiprocessors {{provide an}} {{attractive}} combination of cost-eective commodity architecture and, {{thanks to the}} shared-memory abstraction, relative ease of programming. Unfortunately, {{it is well known}} that tuning applications for scalable performance in these machines is time-consuming. To address this problem, programmers use performance monitoring tools. However, these tools are often costly to run, especially if highly-processed information is desired. In addition, they usually cannot be used to experiment with hypothetical architecture organizations. In this paper, we present Scal-Tool, a tool that isolates and quanties scalability bottlenecks in parallel applications running on DSM machines. The scalability bottlenecks currently quantied include insucient caching space, load imbalance, and synchronization. The tool is based on an empirical model that uses as inputs measurements from hardware <b>event</b> <b>counters</b> in the processor. A major advantage of the [...] ...|$|E
30|$|Rejection-selection: {{relation}} between two <b>counter</b> <b>events,</b> {{in which one}} is being rejected and the other selected.|$|R
40|$|Abstract:Using BP Neural Network to {{optimize}} AE characteristic parameters of crack in drawing parts. By detecting the optimized characteristic parameters of crack, {{the crack in}} drawing parts are identified. According {{to the quality of}} drawing parts, the output of the network are crack signal and normal signal. Comparing the sensitivity of the input characteristic parameters on the output characteristic parameters, then pick the characteristic parameters which have bigger sensitivity values. Finally, the AE characteristic parameters such as Rise Time, AE <b>Event</b> <b>Counter,</b> Energy, Amplitude, Frequency Centroid can represent the signal of crack in the drawing parts better. These five characteristic parameters can identify the crack signal in the forming process of the drawing parts...|$|R
40|$|SBT is {{portable}} {{library and}} tool for on-line debugging and performance monitoring of shared-memory parallel programs using the single-program-multiple-data (SPMD) model of parallelism. SPMD programs often use barriers to synchronize threads of execution and to delimit {{the start and}} end of different phases of computation. Through its useful barrier constructs, dynamic performance warnings, and integration with hardware <b>event</b> <b>counter</b> libraries, SBT helps programmers localize deadlocks and performance bottlenecks in their parallel programs. To demonstrate SBT’s applicability and usefulness, we present a simple, case study performance analysis using three programs from the SPLASH- 2 suite. In addition, we quantify the overhead incurred by the programs when they are monitored with SBT, and conclude {{that the cost of}} the instrumentation is negligible...|$|R
40|$|This RFC {{specifies}} {{a standard}} for the ARPA Internet community. Hosts and gateways on the DARPA Internet that choose to implement a remote statistics monitoring facility may use this protocol to send statistics data upon request to a monitoring center or debugging host. Distribution of this memo is unlimited. DISCUSSION Many host and gateway implementations include a facility which records traffic statistics, such as packet counters, error counters and significant <b>event</b> <b>counters</b> for debugging and performance evluation. Simple data-access and formatting programs {{can be used to}} display these statistics along with the status of connections, etc. Several operating systems, including the various Unix systems and Fuzzball systems, already provide extensive facilities to capture and display these data for local users and/or operators. In many instances it is highly useful to observe statistics data o...|$|E
40|$|In media {{applications}} {{there is}} a high level of available thread level parallelism (TLP). In this paper we study the intra TLP in a video encoder. We show that a well-distributed highly optimized encoder running on a symmetric multiprocessor (SMP) system can run 3. 2 faster on a 4 -way SMP machine than on a single processor. The multithreaded encoder running on an SMP system is then used to understand the requirements of a chip multiprocessor (CMP) architecture, which is one possible architectural direction to better exploit TLP. In the framework of this study, we use a software approach to evaluate the dataflow between processors for the video encoder running on an SMP system. An estimation of the dataflow is done with L 2 cache miss <b>event</b> <b>counters</b> using Intel VTune performance analyzer. The experimental measurements are compared to theoretical results...|$|E
40|$|International audienceThe {{ever-increasing}} integration densities make {{it possible}} to configure multi-core systems composed of hundreds of blocks on existing FPGAs that may influence overall consumption differently. Observing total consumption is not sufficient to accurately assess internal circuit activity to be able to deploy effective adaptation strategies. In this case monitoring techniques are required. This paper presents a CAD flow for high-level dynamic power estimation on FPGAs. The method is based on the monitoring of toggling activity for relevant signals by introducing <b>event</b> <b>counters.</b> The appropriate signals are selected using the Greedy Stepwise filter. Our approach is based on a generic method that is able to produce a power model for any block-based circuit. We evaluated our contribution on a SoC RTL model implemented on Spartan 3, Virtex 5, and Spartan 6 FPGAs. A power model and monitors are automatically generated to achieve the best tradeoff between accuracy and overhead...|$|E
50|$|SystemDiagnostics: Defines {{types that}} provide the ability to {{diagnose}} applications. It includes <b>event</b> logging, performance <b>counters,</b> tracing and interaction with system processes.|$|R
40|$|The {{environmental}} charging {{of satellite}} surfaces during geomagnetic substorms is the apparent {{cause of a}} significant number of anomalous events occurring on geosynchronous satellites since the early 1970 's. Electromagnetic pulses produced in connection with the differential charging of insulators can couple into the spacecraft harness and cause electronic switching anomalies. An investigation conducted to determine the response of the spacecraft surfaces to substorm particle fluxes makes use of a harness transient detector. The harness transient detector, called the Transient <b>Event</b> <b>Counter</b> (TEC) was built and integrated into the Canadian-American Communications Technology Satellite (CTS). A description of the TEC and its operational characteristics is given and the obtained data are discussed. The data show that the satellite surfaces appear to be charged to the point that discharges occur and that the discharge-induced transients couple into the wire harnesses...|$|R
40|$|ATLAS-SCT has {{developed}} a new ATLAS trigger card, 'Digital Atlas Vme Electronics' ("DAVE"). The unit {{is designed to provide}} a versatile array of interface and logic resources, including a large FPGA. It interfaces to both VME bus and USB hosts. DAVE aims to provide exact ATLAS CTP (ATLAS Central Trigger Processor) functionality, with random trigger, simple and complex deadtime, ECR (<b>Event</b> <b>Counter</b> Reset), BCR (Bunch Counter Reset) etc. being generated to give exactly the same conditions in standalone running as experienced in combined runs. DAVE provides additional hardware and a large amount of free firmware resource to allow users to add or change functionality. The combination of the large number of individually programmable inputs and outputs in various formats, with very large external RAM and other components all connected to the FPGA, also makes DAVE a powerful and versatile FPGA utility car...|$|R
