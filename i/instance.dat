10000|10000|Public
5|$|In {{order to}} produce a Horn <b>instance,</b> no two {{variables}} that appear in the same clause of the renamable Horn <b>instance</b> should appear positively in that clause; this constraint {{on a pair of}} variables is a 2-satisfiability constraint. By finding a satisfying assignment to the resulting 2-satisfiability <b>instance,</b> Lewis shows how to turn any renamable Horn <b>instance</b> into a Horn <b>instance</b> in polynomial time. By breaking up long clauses into multiple smaller clauses, and applying a linear-time 2-satisfiability algorithm, it is possible to reduce this to linear time.|$|E
5|$|Since {{opening in}} 1962, the zoo {{has focused on}} animal {{conservation}} efforts. Programs at the Phoenix Zoo include captive breeding for reintroduction (for <b>instance</b> the Arabian oryx, black-footed ferret, Mexican wolf, Ramsey Canyon leopard frog, and thick-billed parrot, sanctuary for animals that are no longer breeding (for <b>instance</b> the African painted dogs at the zoo), and rescue and rehabilitation (for <b>instance</b> lead poisoning treatments for the California condor).|$|E
5|$|A genetic hybrid carries two {{different}} alleles {{of the same}} gene, where for <b>instance</b> one allele may code for a lighter coat colour than the other.|$|E
30|$|Number of {{reserved}} VM <b>instances</b> {{and number}} of VM <b>instances</b> launched from reserved <b>instances</b> as well as on-demand <b>instances</b> at any stage are non-negative integers.|$|R
50|$|Folded {{hierarchies}} can {{be extremely}} compact. A small netlist {{of just a few}} <b>instances</b> can describe designs with {{a very large number of}} <b>instances.</b> For example, suppose definition A is a simple primitive, like a memory cell. Then suppose definition B contains 32 <b>instances</b> of A; C contains 32 <b>instances</b> of B; D contains 32 <b>instances</b> of C; and E contains 32 <b>instances</b> of D. The design now contains 5 definitions (A through E) and 128 <b>instances.</b> Yet, E describes a circuit that contains over a million memory cells.|$|R
40|$|We use a {{stochastic}} local search based {{method to}} build SAT <b>instances</b> {{that are difficult}} for a given stochastic local search algorithm 2. This principle can be extended {{to the production of}} SAT <b>instances</b> with other unusual features. 1 Introduction The boolean satisfiability problem (SAT) consists in determining whether a boolean formulae is true for some assignment of its variables. Because SAT is a central problem in complexity theory [8], its resolution {{is the subject of a}} special attention in the IA community. Two kinds of <b>instances</b> are mostly used for testing the solving algorithms for SAT : random <b>instances</b> [7][6] and structured <b>instances,</b> i. e. <b>instances</b> which can be specified in a more concise way than a sequence of clauses. We propose a new method to build unusual SAT <b>instances.</b> This approach consists in partially exploring a set of SAT <b>instances</b> with a stochastic local search algorithm. We can obtain <b>instances</b> with specific features such as <b>instances</b> with few solutions [...] ...|$|R
5|$|A nondeterministic {{algorithm}} {{for determining}} whether a 2-satisfiability <b>instance</b> is not satisfiable, using only a logarithmic amount of writable memory, is easy to describe: simply choose (nondeterministically) a variable v and search (nondeterministically) for a chain of implications leading from v to its negation {{and then back to}} v. If such a chain is found, the <b>instance</b> cannot be satisfiable. By the Immerman–Szelepcsényi theorem, it is also possible in nondeterministic logspace to verify that a satisfiable 2-satisfiability <b>instance</b> is satisfiable.|$|E
5|$|A third, more {{graphical}} way {{of describing}} a 2-satisfiability <b>instance</b> is as an implication graph. An implication graph is a directed graph {{in which there}} is one vertex per variable or negated variable, and an edge connecting one vertex to another whenever the corresponding variables are related by an implication in the implicative normal form of the <b>instance.</b> An implication graph must be a skew-symmetric graph, meaning that it has a symmetry that takes each variable to its negation and reverses the orientations of all of the edges.|$|E
5|$|A. In this <b>instance</b> a major trophy {{refers to}} either the First Division/Premier League, the FA Cup or the League Cup.|$|E
40|$|The storing and the {{processing}} of OWL <b>instances</b> are important subjects in database modeling. Many research works {{have focused on the}} way of managing OWL <b>instances</b> efficiently. Some systems store and manage OWL <b>instances</b> using relational models to ensure their persistence. Nevertheless, several approaches keep only RDF triplets as <b>instances</b> in relational tables explicitly, and the manner of structuring <b>instances</b> as graph and keeping links between concepts is not taken into account. In this paper, we propose an architecture that permits relational tables behave as an OWL model by adapting relational tables to OWL <b>instances</b> and an OWL hierarchy structure. Therefore, two kinds of tables are used: facts or <b>instances</b> relational tables. The tables hold <b>instances</b> and the OWL table holds a specification of how the concepts are structured. <b>Instances</b> tables should conform to OWLtable to be valid. A mechanism of construction of OWLtable and <b>instances</b> tables is defined in order to enable and enhance inference and semantic querying of OWL in relational model context...|$|R
40|$|Few <b>instances</b> of a {{computational}} problem are sui generis; most instead {{belong to}} some distribution of related <b>instances,</b> and information gained from solving past <b>instances</b> from the distribution may be leveraged to solve future <b>instances</b> more efficiently. Algorithm portfolio methods and algorithm synthesis system...|$|R
40|$|In this paper, {{we use a}} pseudo-Boolean {{formulation}} of the p-median problem and using data aggregation, provide a compact representation of p-median problem <b>instances.</b> We provide computational results to demonstrate this compactification in benchmark <b>instances.</b> We then use our representation to explain why some p-median problem <b>instances</b> {{are more difficult to}} solve to optimality than other <b>instances</b> of the same size. We also derive a preprocessing rule based on our formulation, and describe equivalent p-median problem <b>instances,</b> which are identical sized <b>instances</b> which are guaranteed to have identical optimal solutions...|$|R
5|$|Additionally, {{some species}} are {{ecosystem}} engineers, altering the environment within a localized region. For <b>instance,</b> beavers manage water levels by building dams which improves their habitat in a landscape.|$|E
5|$|Although the {{problems}} of listing maximal cliques or finding maximum cliques {{are unlikely to be}} fixed-parameter tractable with the parameter , they may be fixed-parameter tractable for other parameters of <b>instance</b> complexity. For <b>instance,</b> both problems are known to be fixed-parameter tractable when parametrized by the degeneracy of the input graph.|$|E
5|$|As a mimid it {{is capable}} of {{mimicking}} several species, including scissor-tailed flycatcher, northern cardinal, pyrrhuloxia and, in one <b>instance,</b> a black-headed grosbeak.|$|E
30|$|The SLENP {{has been}} {{implemented}} in C++ and compiled via GNU GCC compiler on a DELL PC with 2.2 Ghz speed. The benchmark problems {{to which the}} procedure has been applied include 43 <b>instances</b> extracted from ORLIB site managed by Brunel University, UK. The selected <b>instances</b> comprise a combination of representative problems collected from the literature. They range from 6 [*]×[*] 6 to 20 [*]×[*] 20 in size, with the first number showing {{the number of jobs}} and the second number showing the number of machines. They include 3 <b>instances,</b> ftxx, from (Fisher and Thompson 1963), 11 <b>instances,</b> laxx, from (Lawrence 1984), 5 <b>instances,</b> abzx, from (Adams et al. 1988), 10 <b>instances,</b> orbxx, from (Applegate and Cook 1991), 4 <b>instances,</b> ynx, from (Yamada and Nakano 1992), and 10 <b>instances,</b> swvxx, from (Storer et al. 1992).|$|R
40|$|<b>Instancing</b> is an {{approved}} concept to save {{space for the}} storage of three dimensional scenes. In this paper we propose an algorithm to automatically create <b>instances</b> from objects that are organized in a hierarchical scene graph. We present a definition of <b>instancing</b> and derive an algorithm from that. We discuss results of tests done with our implementation of the algorithm and give options for further development. Keywords: efficient scene storage, <b>instancing,</b> automatic <b>instancing...</b>|$|R
40|$|Abstract. BPM {{techniques}} {{are becoming more}} widely used, {{and there are more}} and more business process models and <b>instances</b> emerging. In this demonstration, we show how to manage large scale of process models and <b>instances</b> with Process Space. Creating, importing, storing, indexing and querying of models and <b>instances</b> will be exhibited. Since online tools for managing massive process <b>instances</b> are very rare, we focus on showing our useful tool of exploring process <b>instances.</b> ...|$|R
5|$|Aside from {{structural}} definitions, {{trees are}} commonly defined by use, for <b>instance</b> as those plants which yield lumber.|$|E
5|$|Besides {{determining}} which dances are performed, these organizations specify many {{other aspects of}} their competitions, for <b>instance,</b> the tempo of music allowed and the duration of each competition round.|$|E
5|$|Check {{whether any}} {{strongly}} connected component contains both a variable and its negation. If so, report that the <b>instance</b> is not satisfiable and halt.|$|E
30|$|Imbalanced data {{problem is}} {{observed}} {{when the number}} of positive <b>instances</b> are a lot fewer than the number of negative <b>instances</b> in a given data set. It is observed commonly in various real life problems including medical diagnosis, anomaly detection, and even cyberattack prediction. A machine learning classifier trained on a skewed data set {{may not be able to}} learn from the <b>instances</b> with the minority class and therefore may predict the majority class for all test <b>instances.</b> Although the accuracy of the classifier may seem to be very high, in reality the classification will not help to predict the minority (positive) <b>instances.</b> Over sampling the minority <b>instances,</b> under sampling the majority <b>instances</b> or changing the weights (cost) of the minority and majority <b>instances</b> are some of the common data-level approaches applied in the literature to solve the imbalanced data set problem.|$|R
40|$|This paper {{deals with}} the design of {{improved}} construction heuristics and iterated local search for the Routing and Wavelength Assignment problem (RWA). Given a physical network {{and a set of}} com-munication requests, the static RWA {{deals with the}} problem of assigning suitable paths and wavelengths to the requests. We introduce benchmark <b>instances</b> from the SND library to the RWA and argue that these <b>instances</b> are more challenging than previously used random <b>instances.</b> We analyze the properties of several <b>instances</b> in detail and propose an improved construction heuristic to handle ‘problematic’ <b>instances.</b> Our iterated local search finds the optimum for most <b>instances...</b>|$|R
5000|$|Method {{invocation}} {{may affect}} the <b>instance’s</b> state (i.e. change <b>instance’s</b> attributes) ...|$|R
5|$|Construct the {{implication}} graph of the <b>instance,</b> and find its strongly connected components using {{any of the}} known linear-time algorithms for strong connectivity analysis.|$|E
5|$|Costs, {{customs and}} rules were meticulously laid down. For <b>instance,</b> for an ox, a cow or a dozen sheep one could get 1 penny.|$|E
5|$|Fritillaria {{are also}} {{often used as}} floral emblems, for <b>instance</b> as the county flower of Oxfordshire, UK. Calochortus nuttallii, the sego lily, is the {{official}} state flower of Utah.|$|E
5000|$|Like with gapping, delimiting <b>instances</b> of {{stripping}} from [...] "normal" [...] <b>instances</b> {{of coordination}}, i.e. from <b>instances</b> of coordination {{that do not}} involve ellipsis, can be difficult, as the following competing analyses illustrate: ...|$|R
5000|$|No {{easy way}} of keeping host <b>instances</b> in sync with other <b>instances</b> ...|$|R
40|$|We propose an {{algorithm}} {{of generating}} hard <b>instances</b> for the Satisfying Assignment Search Problem (in short, SAT). The algorithm transforms <b>instances</b> of the integer factorization problem into SAT <b>instances</b> efficiently {{by using the}} Chinese Remainder Theorem. For example, {{it is possible to}} construct SAT <b>instances</b> with about 5, 600 variables that is as hard as factorizing 100 bit integers...|$|R
5|$|Gene {{drive is}} a {{technique}} for changing wild populations, for <b>instance</b> to combat insects so they cannot transmit diseases (in particular mosquitoes {{in the cases of}} malaria and zika).|$|E
5|$|In {{keeping with}} {{traditional}} socialist greetings, Brezhnev kissed many politicians during his career, {{the most memorable}} <b>instance</b> being the Erich Honecker kiss.|$|E
5|$|In {{the same}} time, {{some states have}} killed more people, for <b>instance</b> North Dakota and Texas.|$|E
40|$|Under {{conditions}} {{where several}} concepts are learned concurrently and concept <b>instances</b> are presented successively, the <b>instances</b> {{of any given}} concept may be presented in varying degrees of proximity to one another. At one extreme these may be presented {{one after the other}} without the interpolation of <b>instances</b> of any other concept, and at the other extreme two <b>instances</b> of a given concept may never occur in succession without the interpolation of one or more <b>instances</b> of other concepts. The present investigation concerns th...|$|R
5000|$|... {{there are}} <b>instances</b> of concept A {{which are not}} <b>instances</b> of concept B.|$|R
40|$|This paper {{describes}} five sets of 33 Mixed Integer Problem <b>instances</b> each, for a {{total of}} 165 <b>instances,</b> derived from a real-world full-truckload pick-up and delivery problem with time windows at the Port of Rotterdam. These <b>instances</b> represent 33 individual days of data encompassing 65 jobs and 40 trucks. We report, in this paper, on the structure of the real-world problem, the mechanism by which the real data was transformed into the test <b>instances,</b> the Mixed Integer Programming formulation used to solve these <b>instances,</b> the results obtained, and sources in the literature describing alternative uses for these <b>instances.</b> Software Computer TechnologyElectrical Engineering, Mathematics and Computer Scienc...|$|R
