1304|2211|Public
25|$|In 1999, BMC {{acquired}} the Israeli firm New Dimension Software, with its workload automation software CONTROL-M, for $673 million cash. New Dimension Software's products included security administration, document management and multi-platform <b>job</b> <b>scheduling</b> applications. In 2000, BMC bought Israeli software maker Optisystems for $70 million.|$|E
25|$|Prohibited {{discrimination}} may include, {{among other}} things, firing or refusing {{to hire someone}} based on a real or perceived disability, segregation, and harassment based on a disability. Covered entities are also required to provide reasonable accommodations to job applicants and employees with disabilities. A reasonable accommodation {{is a change in}} the way things are typically done that the person needs because of a disability, and can include, among other things, special equipment that allows the person to perform the <b>job,</b> <b>scheduling</b> changes, and changes to the way work assignments are chosen or communicated. An employer is not required to provide an accommodation that would involve undue hardship (significant difficulty or expense), and the individual who receives the accommodation must still perform the essential functions of the job and meet the normal performance requirements. An employee or applicant who currently engages in the illegal use of drugs is not considered qualified when a covered entity takes adverse action based on such use.|$|E
500|$|A {{graduate}} of Sidney Sussex College, Cambridge, Kilburn worked on radar at the Telecommunications Research Establishment (TRE) in Malvern under Frederic Calland Williams during the Second World War. [...] After the war ended, he was recruited by Williams {{to work on}} the development of computers at the University of Manchester. He led the development of a succession of innovative Manchester computers that incorporated a host of ground-breaking innovations and developments, including the Ferranti Mark 1, the world's first commercial computer, and the Atlas, one of the first time-sharing multiprocessing computers that incorporated <b>job</b> <b>scheduling,</b> spooling, interrupts, pipelining and paging.|$|E
5000|$|Repeat steps 2 and 3, working {{towards the}} center of the <b>job</b> <b>schedule</b> until all <b>jobs</b> have been <b>scheduled.</b>|$|R
50|$|<b>Job</b> shop <b>scheduling,</b> {{a similar}} problem for <b>scheduling</b> <b>jobs</b> on machines. Some {{variants}} of multiprocessor <b>scheduling</b> and <b>job</b> shop <b>scheduling</b> are equivalent problems.|$|R
5000|$|Automate <b>Schedule</b> builds complex <b>job</b> <b>schedules</b> across {{multiple}} systems and applications including: ...|$|R
500|$|Kilburn's next project, {{known as}} Atlas, aimed {{to create a}} fast {{computer}} by making maximum use of existing and new technologies. The project was backed by Ferranti and a £300,000 grant from the National Research Development Corporation. It incorporated numerous technologies and techniques such as [...] "multiprogramming, <b>job</b> <b>scheduling,</b> spooling, interrupts, pipelining, interleaved storage, autonomous transfer units, virtual storage and paging – though none of these techniques had been invented when the project started in 1956." [...] Other innovations included read only memory and a compiler-compiler. The greatest innovation was virtual memory, which allowed the drum storage {{to be treated as}} if it were core. Three of them were built, and installed at Manchester University, the University of London and the Rutherford Laboratory.|$|E
5000|$|SCHEDULER - Batch <b>job</b> <b>scheduling</b> {{product for}} {{mainframe}} OS/MVS environments. This {{was not the}} original version of Computer Associates' <b>job</b> <b>scheduling</b> product, CA-SCHEDULER 7.0, which was written from scratch by CA and released in 1985 for the OS/MVS, DOS/VSE and VM/CMS operating systems.|$|E
5000|$|Service Oriented <b>job</b> <b>scheduling</b> - recent {{developments}} in Service Oriented Architecture (SOA) have seen a move towards deploying <b>job</b> <b>scheduling</b> as a reusable IT infrastructure service that {{can play a role}} in the integration of existing business application workload with new Web Services based real-time applications.|$|E
40|$|For {{benchmarking}} {{purposes and}} to allow reproduction of the results for flexible <b>job</b> shop <b>scheduling</b> problems and extended flexible <b>job</b> shop <b>scheduling</b> problems, the sets of instances used are available for download at [URL] benchmarking purposes {{and to allow}} reproduction of the results for flexible <b>job</b> shop <b>scheduling</b> problems and extended flexible <b>job</b> shop <b>scheduling</b> problems, the sets of instances used are available for download at [URL]...|$|R
40|$|Vessel {{discharge}} {{and load}} jobs {{in a container}} terminal {{can be divided into}} sequences, one for each assigned quay crane (QC). A QC sequence lists containers in their desired handling order. The common practice for operators is to make do with just this sequence, without generating a <b>job</b> <b>schedule</b> (i. e. desired start-times of handling each container). Operators who need <b>job</b> <b>schedules</b> generate crude ones by using an average gross crane rate (GCR) gleaned from past experience. For realism, the <b>job</b> <b>schedules</b> should recognize the limit the maximum number of prime-movers and yard cranes that it can deploy. In this paper, we study how <b>job</b> <b>schedules</b> can be efficiently generated that maximizes the GCR (or equivalently minimizes the QC total make-span). With an effective algorithm, resources available to a QC can be adjusted, sharing with other QCs, to ensure that its job sequence can be completed by the target end-time. This would lead to more efficient use of terminal resources and good control on the overall vessel completion time...|$|R
5000|$|Open-shop <b>scheduling,</b> <b>Job</b> Shop <b>Scheduling,</b> Flow Shop Scheduling Problem, {{optimization}} {{problems in}} computer science.|$|R
50|$|Vinzant Software is {{a privately}} held {{company that is}} based in Hobart, IN. Vinzant Software {{develops}} and markets enterprise <b>job</b> <b>scheduling</b> solutions for most platforms including Windows, Unix, Linux, AS400 and MPE/ix. It was founded in 1988 by David Vinzant and has solely focused on <b>job</b> <b>scheduling</b> since 1995.|$|E
5000|$|Master/Agent {{architecture}} — {{the historic}} architecture for <b>Job</b> <b>Scheduling</b> software. The <b>Job</b> <b>Scheduling</b> software is installed {{on a single}} machine (Master), while on production machines {{only a very small}} component (Agent) is installed that awaits commands from the Master, executes them, then returns the exit code back to the Master.|$|E
5000|$|PTC {{was formed}} in 1983 to provide a range of Systems Management {{utilities}} to the users of Honeywell Bull’s large mainframe computers. PTC’s first package was an early <b>Job</b> <b>Scheduling</b> solution called [...] "Job Flow Control Facility". Indeed, this {{was probably one of}} the first <b>job</b> <b>scheduling</b> systems available anywhere.|$|E
40|$|Abstract. The {{equipment}} resource {{planning is}} considered during the procedure of <b>job</b> <b>schedules</b> in manufacturing enterprises. Based on {{the analysis of}} interaction between production task and equipment status, a task driven equipment status monitoring system is presented. Through {{the development of an}} analyzer, the system can regulate the equipment status automatically according to the perform stage of production tasks and provide the adequate equipment information for <b>job</b> <b>schedules.</b> Finally, the application examples are introduced and the characteristics of the system are summarized as well. 1...|$|R
40|$|Weintroduce the {{multiple}} capacitated <b>job</b> shop <b>scheduling</b> problem as a generalization of the <b>job</b> shop <b>scheduling</b> problem. In this problem machines may process several operations simultaneously. We presentan algorithm based on constraint satisfaction techniques {{to handle the}} problem e#ectively. The most importantnovel feature of our algorithm is the consistency checking. An empirical performance analysis is performed using a well-known set of instances of the <b>job</b> shop <b>scheduling</b> problem and a newly constructed set of instances of {{the multiple}} capacitated <b>job</b> shop <b>scheduling</b> problem. We show that our algorithm performs well for both sets of instances...|$|R
40|$|It {{is unclear}} where work-family {{conflict}} should be theoretically positioned {{in the relationship}} between job stress and strain. Data collected from 231 male construction professionals, managers and administrators were analysed to determine whether work-family conflict mediates the relationship between job stressors and burnout. Two different aspects of work-schedule demands, i. e. <b>job</b> <b>schedule</b> irregularity and hours worked per week, were found {{to be related to the}} emotional exhaustion dimension of burnout. In all cases, the relationship between <b>job</b> <b>schedule</b> demands and emotional exhaustion was mediated by work-family conflict. The authors conclude that <b>job</b> <b>schedule</b> demands impact upon emotional exhaustion via work-family conflict. Further, work-family conflict is demonstrated to be a key mediating mechanism between schedule demands and emotional exhaustion for male employees. It is recommended that construction organizations examine ways to reduce work-family conflict as a means to reduce burnout and improve employees' wellbeing. Burnout, men, schedule inflexibility, work hours, work-family conflict, wellbeing,...|$|R
5000|$|... "History-Based Batch <b>Job</b> <b>Scheduling</b> on Workstation Clusters", Rothauser, Wespi, 1997 ...|$|E
5000|$|... "History-Based Batch <b>Job</b> <b>Scheduling</b> on Workstation Clusters", Andreas Wespi, Ernst Rothauser ...|$|E
5000|$|HP OpenView SPI for BMC CONTROL-M <b>Job</b> <b>Scheduling</b> / Workload Automation Solution ...|$|E
40|$|We {{introduce}} the multiple capacitated <b>job</b> shop <b>scheduling</b> problem as a generalization of the <b>job</b> shop <b>scheduling</b> problem. In this problem machines may process several operations simultaneously. We present an algorithm based on constraint satisfaction techniques {{to handle the}} problem effectively. The most important novel feature of our algorithm is the consistency checking. An empirical performance analysis is performed using a well-known set of instances of the <b>job</b> shop <b>scheduling</b> problem and a newly constructed set of instances of the multiple capacitated <b>job</b> shop <b>scheduling</b> problem. We show that our algorithm performs well for both sets of instances...|$|R
40|$|In this paper, we {{analyze the}} {{characteristics}} of the <b>job</b> shop <b>scheduling</b> problem. A new genetic algorithm for solving the agile <b>job</b> shop <b>scheduling</b> is presented to solve the <b>job</b> shop <b>scheduling</b> problem. Initial population is generated randomly. Two-row chromosome structure is adopted based on working procedure and machine distribution. The relevant crossover and mutation operation is also designed. It jumped from the local optimal solution, and the search area of solution is improved. Finally, the algorithm is tested on instances of 8 working procedure and 5 machines. The result shows that the genetic algorithm has been successfully applied to the <b>job</b> shop <b>scheduling</b> problems efficiency. </p...|$|R
40|$|This paper {{develops}} <b>job</b> shop production <b>scheduling</b> using Non Delay algorithm through {{forward and}} backward-forward algorithm to minimize total earliness and tardiness costs. Backward approach has some disadvantages, such as, if the <b>job</b> is <b>scheduled</b> in backward, {{there is a}} possibility that the infeasible situation occurs, in which the <b>job</b> is <b>scheduled</b> at t< 0. This paper used hypothetic data generated randomly. This <b>job</b> shop <b>scheduling</b> algorithm development was validated using LINDO software to check the effectiveness heuristic method, compared with the optimation method. The validation proves that the result of backward-forward scheduling method is better than the result of forward scheduling method...|$|R
5000|$|Claim. For each <b>job</b> <b>scheduling</b> game, {{the pure}} PoA is at most [...]|$|E
50|$|Claim. For each <b>job</b> <b>scheduling</b> game, {{there exists}} {{at least one}} pure-strategy Nash equilibrium.|$|E
50|$|ACEnet {{currently}} has 5 Linux clusters. Sun Grid Engine {{is used for}} <b>job</b> <b>scheduling.</b>|$|E
30|$|These {{two forms}} of {{visualizations}} provide insightful decision-making support in coping with material delay while fulfilling project objectives. Ultimately, material-supply driven crew <b>job</b> <b>schedules</b> in correspondence with particular objectives and implementation strategies can be generated, ready to guide project execution.|$|R
40|$|Abstract—In this paper, we {{analyze the}} {{characteristics}} of the <b>job</b> shop <b>scheduling</b> problem. A new genetic algorithm for solving the agile <b>job</b> shop <b>scheduling</b> is presented to solve the <b>job</b> shop <b>scheduling</b> problem. Initial population is generated randomly. Two-row chromosome structure is adopted based on working procedure and machine distribution. The relevant crossover and mutation operation is also designed. It jumped from the local optimal solution, and the search area of solution is improved. Finally, the algorithm is tested on instances of 8 working procedure and 5 machines. The result shows that the genetic algorithm has been successfully applied to the <b>job</b> shop <b>scheduling</b> problems efficiency. Index Terms—job shop scheduling, genetic algorithm, initial population, crossover and mutation operation I...|$|R
50|$|Core {{applications}} are usually performed through batch processing, which involves executing {{one or more}} batch jobs in a sequential flow. The Job Entry Manager (JEM) helps receive <b>jobs,</b> <b>schedule</b> them for processing, and determine how job output is processed (like IBM JES2).|$|R
50|$|For another example, {{where the}} VCG {{mechanism}} provides a sub-optimal approximation, see Truthful <b>job</b> <b>scheduling.</b>|$|E
50|$|Typical {{examples}} include <b>job</b> <b>scheduling</b> in manufacturing and data delivery scheduling in data processing networks.|$|E
5000|$|... #Subtitle level 3: For every <b>job</b> <b>scheduling</b> game {{price of}} {{stability}} {{is equal to}} 1 ...|$|E
40|$|Bio-Inspired {{computing}} is the {{subset of}} Nature-Inspired computing. <b>Job</b> Shop <b>Scheduling</b> Problem is categorized under popular scheduling problems. In this research work, Bacterial Foraging Optimization was hybridized with Ant Colony Optimization {{and a new}} technique Hybrid Bacterial Foraging Optimization for solving <b>Job</b> Shop <b>Scheduling</b> Problem was proposed. The optimal solutions obtained by proposed Hybrid Bacterial Foraging Optimization algorithms are much better {{when compared with the}} solutions obtained by Bacterial Foraging Optimization algorithm for well-known test problems of different sizes. From the implementation of this research work, it could be observed that the proposed Hybrid Bacterial Foraging Optimization was effective than Bacterial Foraging Optimization algorithm in solving <b>Job</b> Shop <b>Scheduling</b> Problems. Hybrid Bacterial Foraging Optimization is used to implement real world <b>Job</b> Shop <b>Scheduling</b> Problems...|$|R
40|$|In this paper, <b>Job</b> shop <b>{{scheduling}}</b> {{problem is}} solved through multi agent system. An agent based scheduling model is introduced {{to solve the}} <b>job</b> shop <b>scheduling</b> problem. Dynamic rescheduling problem {{is also an important}} issue in modern manufacturing system with the feature of combinatorial computation complexity. This model improve the <b>job</b> shop <b>scheduling</b> problem and provide the better flexibility to the production system. According to contract net protocol (CNP), agents co-operate with each other through contract net and the process of inviting public bidding makes for computing the production order and dynamic scheduling. The CNP offers negotiation mechanism and agents communication for the decision making in the manufacturing system. This paper proposed model for <b>job</b> shop <b>scheduling</b> as well as problem associated with has been discussed...|$|R
40|$|Recently {{there has}} been much {{progress}} on the design of approximation algorithms for a variety of scheduling problems in which the goal is to minimize the average weighted completion time of the <b>jobs</b> <b>scheduled.</b> Many of these approximation algorithms have been inspired by polyhedral formulations of the scheduling problems and their use in computing optimal solutions to small instances. In this paper we demonstrate that this progress in the design and analysis of approximation algorithms for these problems also yields techniques with improved computational efficacy. Specifically, we give a comprehensive experimental study of a number of these approximation algorithms for 1 jr j j P w j C j, the problem of <b>scheduling</b> <b>jobs</b> with release dates on one machine so as to minimize the average weighted completion time of the <b>jobs</b> <b>scheduled.</b> We study both the quality of lower bounds given for this problem by two different linear-programming relaxations, and the quality of upper bounds delivered by [...] ...|$|R
