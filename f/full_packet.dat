31|62|Public
50|$|In 1987 {{the first}} <b>full</b> <b>packet</b> {{switching}} node in Greece {{connected to the}} French X.25 node in Paris at 9.6K bps via a local HELPAK line from OTE in Athens and a COSINE Projectreport was published in 1988.|$|E
50|$|The {{encapsulated}} packet {{should be}} stored {{immediately after the}} tagged fields. This encapsulated packet may be truncated from the original <b>full</b> <b>packet</b> size and {{does not need to}} be the same size as specified in the TAG_RX_FRAME_LENGTH field. It is assumed that the encapsulated packet takes up the entire rest of the UDP packet.|$|E
50|$|<b>Full</b> <b>packet</b> capture {{appliances}} {{capture and}} record all Ethernet/IP activity, while filtered packet capture appliances capture only {{a subset of}} traffic based {{on a set of}} user-definable filters; such as IP address, MAC address or protocol. Unless using the packet capture appliance for a very specific purpose covered by the filter parameters, it is generally best to use <b>full</b> <b>packet</b> capture appliances or otherwise risk missing vital data. Particularly when using a packet capture for network forensics or cybersecurity purposes, it is paramount to capture everything because any packet not captured on the spot is a packet that is gone forever. It is impossible to know ahead of time the specific characteristics of the packets or transmissions needed, {{especially in the case of}} an advanced persistent threat (APT). APTs and other hacking techniques rely for success on network administrators not knowing how they work and thus not having solutions in place to counteract them.|$|E
50|$|Nagle's {{algorithm}} {{works by}} combining {{a number of}} small outgoing messages and sending them all at once. Specifically, {{as long as there is}} a sent packet for which the sender has received no acknowledgment, the sender should keep buffering its output until it has a <b>full</b> <b>packet's</b> worth of output, thus allowing output to be sent all at once.|$|R
40|$|Abstract — In {{order to}} capture packet traces {{at high speed}} using a {{low-cost}} platform, we have to optimize the networking stack of a general purpose operating system. Different techniques are compared with the final objective of avoiding packet loss. Among those techniques we will study the performance of NAPI [6] and PF-RING [9]. Depending on the final application, we should tune certain parameters accordingly. We also present the advantages of a multiprocessor platform and the problematic of storing <b>full</b> <b>packets</b> directly to hard disk...|$|R
50|$|BPF {{provides}} pseudo-devices {{that can}} be bound to a network interface; reads from the device will read buffers <b>full</b> of <b>packets</b> received on the network interface, and writes to the device will inject packets on the network interface.|$|R
50|$|In general, packet capture {{appliances}} {{capture and}} record all network packets in full (both header and payload), however, some appliances may be configured {{to capture a}} subset of a network’s traffic based on user-definable filters. For many applications, especially network forensics and incident response, {{it is critical to}} conduct <b>full</b> <b>packet</b> capture, though filtered packet capture may be used at times for specific, limited information gathering purposes.|$|E
50|$|Normally, TCP {{waits for}} 200 ms for a <b>full</b> <b>packet</b> {{of data to}} send (Nagle's Algorithm tries to group small {{messages}} into a single packet). This wait creates small, but potentially serious delays if repeated constantly during a file transfer. For example, a typical send block would be 4 KB, a typical MSS is 1460, so 2 packets {{go out on a}} 10 Mbit/s ethernet taking ~1.2 ms each followed by a third carrying the remaining 1176 after a 197 ms pause because TCP is waiting for a full buffer.|$|E
50|$|P4 tables {{contain the}} state used to forward packets. Tables are {{composed}} of lookup keys and a corresponding set of actions and their parameters. A trivial example might be to store a set of destination MAC addresses as the lookup keys, and the corresponding action could set the output port on the device, and/or increment a counter. Tables and their associated actions are almost always chained together in sequence to realize the <b>full</b> <b>packet</b> forwarding logic, although in the abstract {{it is possible to}} build a single table that includes all the lookup key information and the full output action set.|$|E
30|$|The first type of {{collected}} data, {{the contents}} of communications (content data), is regulated by the EU Directive on privacy and electronic communications. According to Article 2 a) of the e-Privacy Directive, communication (content data) means “any information exchanged or conveyed between {{a finite number of}} parties by means of a publicly available electronic communications service.” Examples of content data are the bodies of email messages, file contents, <b>full</b> <b>packets</b> captured on a network segment, reconstructed content of interactive sessions (e.g., commands executed in a shell account, typed passwords), etc. Apart from harmonized European law, the demand for communication confidentiality is included in national legal regulation and is protected by civil as well as criminal law.|$|R
40|$|Trabajo presentado a IEEE / IST Workshop on Monitoring, Attack Detection and Mitigation (MonAM 2006), 28 - 29 de septiembre de 2006, Tubinga (Alemania) In {{order to}} capture packet traces {{at high speed}} using a {{low-cost}} platform, we have to optimize the networking stack of a general purpose operating system. Different techniques are compared with the final objective of avoiding packet loss. Among those techniques we will study the performance of NAPI [6] and PF-RING [9]. Depending on the final application, we should tune certain parameters accordingly. We also present the advantages of a multiprocessor platform and the problematic of storing <b>full</b> <b>packets</b> directly to hard disk. This work {{was supported by the}} Spanish Ministry of Education and Science (Project PINTA TEC 2004 - 06437 -C 05 - 03) ...|$|R
5000|$|Bureau 13 (3rd Ed.): The Lost Files, Vol. 1 by Richard Tucholka (1991) - Loose-leaf <b>packet</b> <b>full</b> of {{recently}} recovered information from Bureau 13's files.|$|R
50|$|In Initialization and Refresh (IR) state, the {{compressor}} {{has just been}} created or reset, and <b>full</b> <b>packet</b> headers are sent. In First-Order (FO) state, {{the compressor}} has detected and stored the static fields (such as IP addresses and port numbers) {{on both sides of}} the connection. The compressor is also sending dynamic packet field differences in FO state. Thus, FO state is essentially static and pseudo-dynamic compression. In Second-Order (SO) state, the compressor is suppressing all dynamic fields such as RTP sequence numbers, and sending only a logical sequence number and partial checksum to cause the other side to predictively generate and verify the headers of the next expected packet. In general, FO state compresses all static fields and most dynamic fields. SO state is compressing all dynamic fields predictively using a sequence number and checksum.|$|E
40|$|Part 2 : CONTROL SYSTEMS SECURITYInternational audienceIndustrial {{control systems}} are not immune to cyber {{incident}}s. However, the support for incident responders and forensic investigators is low. In particular, there are limited journaling capabilities for operator actions. Barring the preservation of <b>full</b> <b>packet</b> captures and operator workstation security logs, which can generate unmanageable amounts of data on production networks, it is generally not possible to attribute control events (e. g., opening a valve or operating a breaker) to individual operators. This information can be necessary to perform security investigations, especially in cases involving malicious insider activities. This chapter presents a lightweight journaling system for SCADA networks based on event correlation. By correlating network events and operating system logs, a journal is generated of all Modbus protocol write events along with the usernames of the operators who performed the actions. The journal is much more compact than a <b>full</b> <b>packet</b> capture, achieving compression ratios of around 570 to 1 in conservative conditions and more than 2, 000 to 1 in typical operating conditions, allowing {{for the preservation of}} valuable information for security investigations...|$|E
40|$|This paper {{presents}} a routing framework that embeds location and communication privacy into the routing mechanisms. It conceals endpoint identiﬁcation by introducing waypoints, through encrypted routing hints, where each waypoint has knoweldge {{of the next}} hop, assuring network privacy over several waypoints. Based on IPv 6 extension headers and Onion Routing techniques, the network waypoints comply with normal routing procedures, avoiding explicit tunneling or <b>full</b> <b>packet</b> encryption. By focusing on the network as a cooperative entity for privacy preservation, we propose a lightweight approach {{that can be easily}} deployed, establishing a good compromise between privacy and optimal routing...|$|E
3000|$|..., {{while in}} the {{distributed}} and the <b>full</b> model case, <b>packets</b> might be processed faster if the queue is empty and they arrive during the later slots.|$|R
40|$|This thesis {{presents}} a parallel and distributed approach {{for the purpose}} of processing network traffic at high speeds. The proposed architecture provides the processing power required to run one or more traffic processing applications at line rates by means of processing <b>full</b> <b>packets</b> at multi-gigabits speeds using a parallel and distributed processing environment. Moreover, the architecture is flexible and scalable to future needs by supporting heterogeneous processing nodes such as different hardware architectures or different generations of the same hardware architecture. In addition to the processing, flexibility, and scalability features, our architecture provides an easy-to-use environment {{with the help of a}} new programming language, called FPL, for traffic processing in a distributed environment. The language and its compiler come to hide specific programming details when using heterogeneous systems and a distributed environment. Promotor: H. A. G. Wijshoff, Co-promotor: H. J. BosWith summary in Dutc...|$|R
50|$|If {{the traffic}} on a virtual circuit is {{exceeding}} its traffic contract, {{as determined by}} the GCRA, the network can either drop the cells or mark the Cell Loss Priority (CLP) bit (to identify a cell as potentially redundant). Basic policing works on a cell by cell basis, but this is sub-optimal for encapsulated packet traffic (as discarding a single cell will invalidate the whole packet). As a result, schemes such as Partial Packet Discard (PPD) and Early Packet Discard (EPD) have been created that will discard a whole series of cells until the next packet starts. This reduces the number of useless cells in the network, saving bandwidth for <b>full</b> <b>packets.</b> EPD and PPD work with AAL5 connections as they use the end of packet marker: the ATM User-to-ATM User (AUU) Indication bit in the Payload Type field of the header, which is set in the last cell of a SAR-SDU.|$|R
40|$|This thesis explores {{possible}} {{approaches to}} detecting robotic activity of botnets on network. Initially, the detection based on <b>full</b> <b>packet</b> analysis {{in consideration of}} DNS, HTTP and IRC communication, is described. However, this detection is found inapplicable for technical and ethical reasons. Then it focuses on the analysis based on network flow metadata, compiling them to be processable in machine learning. It creates detection models using different machine learning methods, to compare them with each other. Bayes net method {{is found to be}} acceptable for detecting robotic activity of botnets. The Bayesian model is only able to identify the botnet that already executes the commands sent by its C&C server. "Sleeping" botnets are not reliably detectable by this model...|$|E
40|$|Network {{engineers}} and operators {{are faced with}} a number of challenges that arise in the context of network monitoring and measurement. These include: i) how much information is included in measurement traces and by how much can we compress those traces?, ii) how much information is captured by different monitoring paradigms and tools ranging from <b>full</b> <b>packet</b> header captures to flow-level captures (such as with NetFlow) to packet and byte counts (such as with SNMP) ? and iii) how much joint information is included in traces collected at different points and can we take advantage of this joint information? In this paper we develop a network model and an information theoretic framework within which to address these questions. We use the model and the framework to first determine the benefit...|$|E
30|$|The barectf_close_packet {{function}} {{is the core}} of the API, as it is in charge of handling a <b>full</b> <b>packet.</b> Such packet can be flushed into a shared memory space, directly sent to the master or even discarded because of lack of space. The choice is at the user’s discretion. For instance, the first implementation of the API on the Parallella copies the local packet into a shared memory location for the master to consume it. It requires proper initialization of the shared memory space and a custom protocol to retrieve the data. Our Keystone 2 implementation, however, uses TI’s MessageQ API 4 to directly send the packet to the master. This API allows the host to sleep on a semaphore’s lock while waiting for a packet to be received, thus eliminating the need to poll a shared memory space.|$|E
50|$|Unwins Seeds {{was formed}} in 1903 by William Unwin by selling sweet pea seeds. His son Charles, who had an {{interest}} in sweet peas, joined the business in 1914. A brother Frank {{had an interest in}} gladioli. In the late 1950s the company sold packets of seeds to gardening shops in <b>full</b> colour <b>packets.</b> Later it would supply garden centres, which helped the business to blossom.|$|R
40|$|Recent {{evaluation}} of ad hoc networks {{has shown that}} current techniques do not scale well with either network size or desired throughput. We argue that the greatest opportunity for improvement is in the integration and coupling of different network layers. To this end, we are building a “relay network ” design in which end-to-end path resources are pre-allocated to avoid the cost of channel acquisition and contention at every hop. The routing, congestion control, and MAC functions are coupled – contention informs the routing and packet admission decisions, and demand determines link capacity allocation. We propose using spatial frequency division multiple access (SFDMA) to reduce interference and propose a forwarding layer using label-switching to allow a combination of SFDMA as well as statistical multiplexing. Normally, SFDMA methods are difficult to allocate due to a paucity of channels; we provision our network using Orthogonal Frequency Division Multiple Access (OFDMA) channels, avoiding re-synchronization delays on each packet. One option for such networks is to use wireless flits rather than <b>full</b> <b>packets</b> for store-and-forward communication. This report describes an OpNET model that implements both those wireless flits and the traditional store-and-forward SFDMA networks...|$|R
30|$|The {{length of}} ingress and egress queues for all ships is fixed as K, and the {{queueing}} discipline is simply given as first-in first-out (FIFO). If the queue {{is found to}} be <b>full</b> when a <b>packet</b> arrives, the packet is just dropped out.|$|R
40|$|Current {{satellite}} systems {{operate according to}} circuit switching transfer modes. To improve flexibility and efficiency, several kinds of packet switching systems have been proposed [e. g. 7, 8]. However, it appears that <b>full</b> <b>packet</b> switches are still considered complex and expensive, when implemented on board the satellites. For the time being, a compromise {{has been found in}} satellite networks with Dynamic Bandwidth Allocation Capabilities (DBAC). Such systems are based on classical circuit switches, but the DBAC payload allows changing dynamically the capacity of each connection, without the need of tearing-down and setting-up again the connection itself. In this paper we consider a DBAC satellite system and define algorithms to allocate the bandwidth so as to provide deterministic and statistical QoS guarantees. The traffic sources are regulated by standard Dual Leaky Buckets (DLBs). We define bandwidth-handling policies, design Connection Admission Control rules and evaluate analyti [...] ...|$|E
40|$|Part 2 : The 2014 Asian Conference on Availability, Reliability and Security, AsiaARES 2014 International audienceIn Network Anomaly and Botnet Detection {{the main}} source of input for {{analysis}} is the network traffic, which has to be transmitted from its capture source to the analysis system. High-volume data sources often generate traffic volumes prohibiting direct pass-through of bulk data into researchers hands. In this paper we achieve a reduction in volume of transmitted test data from network flow captures by aggregating raw data using extraction of protocol semantics. This is orthogonal to classic bulk compression algorithms. We propose a formalization for this concept called Descriptors and extend it to network flow data. A comparison with common bulk data file compression formats will be given for <b>full</b> <b>Packet</b> Capture (PCAP) files, giving 4 to 5 orders of magnitude in size reduction using Descriptors. Our approach aims to be compatible with Internet Protocol Flow Information Export (IPFIX) and other standardized network flow data formats as possible inputs...|$|E
40|$|Low power {{devices such}} as common {{wireless}} router platforms are not capable of performing reliable <b>full</b> <b>packet</b> capture due to resource constraints. In order for such devices {{to be used to}} perform link-level measurement on IEEE 802. 11 networks, a packet sampling technique is required in order to reliably capture a representative sample of frames. The traditional Berkeley packet filter mechanism found in UNIX-like operating systems does not directly support packet sampling as it provides no way of generating pseudo-random numbers and does not allow a filter program to keep state between invocations. This paper explores the use of the IEEE 802. 11 frame check sequence as a source of pseudo-random numbers for use when deciding whether to sample a packet. This theory is tested by analysing the distribution of frame check sequences from a large, real world capture. Finally, a BPF program fragment is presented which can be used to efficiently select packets for sampling...|$|E
5000|$|Nichols' {{research}} {{focuses on}} networking and Internet performance. She has written {{about the problem of}} bufferbloat, which can lead to failure with Transmission Control Protocol congestion-avoidance algorithms. Bufferbloat causes problems such as high and variable latency, network bottlenecks, and dropped packets. As a buffer becomes <b>full</b> of <b>packets</b> for one TCP stream, packets from other network flows are dropped. The buffers then take some time to drain, before the TCP connection ramps back up to speed and then floods the buffers again.|$|R
40|$|The {{purpose of}} this thesis is to allow data {{communication}} students to experiment with various congestion control schemes {{to see how they}} will affect a simulated network. Using various parameters, the user can design a <b>full</b> duplex, <b>packet</b> switched, point-topoint virtual circuit network. Then, using this network the student can choose a congestion control scheme and run the simulation. After each run the parameter(s), the control scheme, or both, can be changed and the simulation rerun to see what the changes will do to network performance...|$|R
40|$|Exact eigenfunctions for a {{two-dimensional}} rigid rotor are obtained using Gaussian wave packet dynamics. The wave functions are obtained by propagating, without approximation, an infinite set of Gaussian wave packets that collectively have the correct periodicity, being coherent states appropriate to this rotational problem. This result {{leads to a}} numerical method for the semiclassical calculation of rovibrational, molecular eigenstates. Also, a simple, almost classical, approximation to <b>full</b> wave <b>packet</b> dynamics is shown to give exact results: this leads to an a posteriori justification of the De Leon-Heller spectral quantization method...|$|R
30|$|In {{order to}} {{evaluate}} Big Network Data, Sitaram et al. [77] consider network-based IDS {{challenges faced by}} large cloud providers or those with fat network pipes such as OC- 192 and OC- 768 links. They consider such data as a “clear representation of big data streams in its most raw form (which is {{hundreds of thousands of}} TCP/IP packets per second)”. Sitaram et al. envision building a NIDS capable of handling Big Data network streams such as these by utilizing Big Data tools such as Hadoop and a network monitoring tool called PacketPig [78]. According to the authors, PacketPig is capable of Deep Packet Inspection, deep network analysis, and even <b>full</b> <b>packet</b> capture when using it with Hadoop. In this study, they mainly consider the effectiveness of clustering algorithms for analyzing packet classification. Their experiment with the KDD data set found the K-means clustering algorithm to generally outperform the Expectation-Maximization and DBSCAN Clustering algorithms. However, their future work sounds especially interesting if it can successfully operate in terms of such Big Velocity.|$|E
40|$|With {{the ever}} {{increasing}} advances in network protocols and traffic complexity, new challenges are emerging in traffic characterization and management. In this thesis, we propose {{a new approach}} that can complement existing ones with a simple high-level understanding of network traffic. Our approach uses (p, n) -grams representation to analyze network traffic, where a (p, n) -gram is an n-byte string starting at offset p. We argue that the (p, n) -grams representation combines the efficiency of using specific packet fields (e. g. ports) with the generalized pattern matching of n-grams, without the complexity and overhead of <b>full</b> <b>packet</b> pattern matching. We also show that using (p, n) -grams allows for traffic analysis at all packet parts (payload content, header port/flow, and other header behavior fields), without mixing between similar patterns that may accidentally exist at different fields within packets. As a proof of concept, we develop a (p, n) -gram-based lightweight unsupervised clustering algorithm (ADHIC) that makes no prior assumptions about the involved protocols. We show that ADHIC can automatically cluster network traffic using...|$|E
40|$|Abstract — In this paper, {{we propose}} and analyze novel and {{efficient}} cross-layer designs involving joint optimization of physical, link, and TCP layers in wireless. Particularly, we investigate {{the design of}} symbol mapping diversity (SMD) schemes using M-QAM at the physical layer for optimal goodput performance at the TCP layer. We present the design and TCP goodput analysis of two SMD schemes, one applying SMD at the TCP packet level, termed as <b>Full</b> <b>Packet</b> SMD (FP SMD), and the other applying SMD at the link layer (LL) packet level, termed as LL ARQ SMD. We show that although the LL ARQ SMD scheme offers good TCP goodput at high SNRs, it performs poorer compared to FP SMD scheme at low SNRs because of increased delays incurred due to increased LL retransmissions at low SNRs. We therefore propose and analyze a hybrid SMD scheme which adaptively switches modes (between LL ARQ SMD and FP SMD) based on measured LL packet error rate. We show that the hybrid SMD scheme combines the best TCP performance of both LL ARQ SMD and FP SMD under varying channel conditions. Keywords – M-QAM, symbol mapping diversity, ARQ, TCP, goodput. I...|$|E
40|$|The exact thermal {{rotational}} {{spectrum of}} a two-dimensional rigid rotor is obtained using Gaussian wave packet dynamics. The spectrum is obtained by propagating, without approximation, infinite sets of Gaussian wave packets. These sets are constructed so that collectively {{they have the}} correct periodicity, and indeed, are coherent states appropriate to this problem. Also, simple, almost classical, approximations to <b>full</b> wave <b>packet</b> dynamics are shown to give results which are either exact or very nearly exact. Advantages {{of the use of}} Gaussian wave packet dynamics over conventional linear response theory are discussed...|$|R
50|$|Optical burst {{switching}} (OBS) is {{an optical}} networking technique that allows dynamic sub-wavelength switching of data. OBS {{is viewed as}} a compromise between the yet unfeasible <b>full</b> optical <b>packet</b> switching (OPS) and the mostly static optical circuit switching (OCS). It differs from these paradigms because OBS control information is sent separately in a reserved optical channel and in advance of the data payload. These control signals can then be processed electronically to allow the timely setup of an optical light path to transport the soon-to-arrive payload. This is known as delayed reservation.|$|R
40|$|The {{other day}} I {{happened}} to be home when my three children arrived home from school. After the usual greetings and discussions about their day, as a good parent I asked the obvious question: “Do you have any homework? ” My post-primary son gave me a monotone “maybe”, and then after collecting {{what seemed to be}} about two <b>full</b> <b>packets</b> of biscuits, he got out his homework, and his i-pod, and his portable gaming console, and his phone, and he sat in front of the television. It seemed to me that he was doing some exercises from a textbook, listening to some music, playing a game, texting with his mates, and watching the TV all at the same time. Knowing about the capacity of millennials (Zevenbergen & Zevenbergen, 2007) to multi-task, I realised that all is well, or at least any interference on my behalf is not going to improve the situation, so he was engaging in the important task of doing his homework (until he got hungry and had to stop to get more biscuits). My two girls are both in primary school, and they both also confirmed that they had some “maths homework”. The one in her final year of primary school (Year 7) produced a page with 120 ‘expand and simplify’-type exercises and she was required to “finish the...|$|R
