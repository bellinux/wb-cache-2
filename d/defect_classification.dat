211|150|Public
5000|$|Orthogonal <b>Defect</b> <b>Classification</b> (ODC) turns {{semantic}} {{information in}} the software defect stream into a measurement on the process. The ideas were developed in the late '80s and early '90s by Ram Chillarege at IBM Research. This {{has led to the}} development of new analytical methods used for software development and test process analysis. ODC is process model, language and domain independent. Applications of ODC have been reported by several corporations on a variety of platforms and development processes, ranging from waterfall, spiral, gated, and agile [...] development processes. One of the popular applications of ODC is software root cause analysis. ODC is known to reduce the time taken to perform root cause analysis by over a factor of 10. The gains come primarily from a different approach to root cause analysis, where the ODC data is generated rapidly (in minutes, as opposed to hours per defect) and analytics used for the cause and effect analysis. This shifts the burden of analysis from a purely human method to one that is more data intensive.|$|E
40|$|<b>Defect</b> <b>classification</b> {{can improve}} product quality and motivate process improvement. Several <b>defect</b> <b>classification</b> schemes have been {{developed}} and used with good results in software development. This paper describes the design and test of a <b>defect</b> <b>classification</b> scheme that specifically extracts information from usability problems. We describe the attributes of the defects, the attribute values, including the phases of user interface development. We have tested the classification scheme on defects that were found during heuristic evaluation and user test of software that implements a broker for exchange of on line learning resources. The paper presents results of the classifications and assesses the repeatability of the <b>defect</b> <b>classification</b> scheme. We show how developers, project manager, and process engineers can use information from the <b>defect</b> <b>classification</b> for improvement of the user interface, personal skills and training, and process improvement...|$|E
40|$|This slide {{presentation}} {{reviews the}} concept of using Orthogonal <b>Defect</b> <b>Classification</b> (ODC) to identify pre-launch anomalies in software. The goals of this work are: (1) To characterize pre-launch software anomalies, using data from multiple spacecraft projects, {{by means of a}} defect-analysis technology, Orthogonal <b>Defect</b> <b>Classification</b> (ODC). (2) To support transfer of ODC to NASA projects through applications and demonstrations. Approach: Analyzed anomaly data using adaptation of Orthogonal <b>Defect</b> <b>Classification</b> (ODC) method. This project has adapted ODC for NASA use and applied to NASA projects...|$|E
40|$|The paper {{deals with}} system of casting <b>defects</b> <b>classification</b> problematics and {{creation}} of defects catalogue in the foundry organization. There is described the value of correct <b>defects</b> <b>classification</b> and identification in the literature review and also some tools for <b>defects</b> <b>classification</b> are mentioned. Existing <b>defects</b> <b>classifications</b> and catalogues are often unusable for particular production processes and casting technology. Many foundries therefore create their own defects catalogues. The sample of created catalogue, which classifies and describes defects occuring in the aluminium foundry organization and its benefits are presented in the paper. The created catalogue primarily serves as a visual support for production operators and quality control processes...|$|R
40|$|AbstractSoftware <b>defects</b> <b>classification</b> is {{the basis}} for {{effective}} management of software defects. Current air on-board software testing classification GJB 437 is too easy, coding <b>defects</b> <b>classification</b> in other software <b>defects</b> <b>classification</b> does not meet our air on-board software code review facts. The deficiencies of existing <b>classifications</b> of software <b>defects</b> are analyzed. And a classification for air on-board software code defects is presented. This classification is verified and completed by investigating the historical code defects of air on-board software. The revised classification has covered selected historical defects perfectly. The results of verification show that the revised <b>classification</b> of code <b>defects</b> can guide defects management effectively. At the same time, defects database is established using typical air on-board software code defects. Defects management is implemented based on defects database, guiding software defects detection and prevention...|$|R
40|$|The aim of {{this paper}} is to propose the use of {{elliptical}} basis function probabilistic neural networks in automatic <b>defects</b> <b>classification.</b> The aim of classification is to assign a new pattern to a class, on the basis of already classified patterns. In eddy current based inspection, the patterns are sequences of complex voltages whose shape depends on the kind of defect affecting the conductive object under test. 1...|$|R
40|$|A new {{approach}} for <b>defect</b> <b>classification</b> and quantification by using pulsed eddy current sensors {{and integration of}} principal component analysis and wavelet transform for feature based signal interpretation is presented. After reviewing the limitation of current parameters of peak value and its arrival time from pulsed eddy current signals, a two-step framework for <b>defect</b> <b>classification</b> and quantification is proposed by using adopted features from principal component analysis and wavelet analysis. For <b>defect</b> <b>classification</b> and quantification, different features have been extracted from the pulsed eddy current signals. Experimental tests have been undertaken for ferrous and non-ferrous metal samples with manufactured defects. The results have illustrated the {{new approach}} has better performance than the current approaches for surface and sub-surface <b>defect</b> <b>classification.</b> The defect quantification performance, which is difficult by using current approaches, is impressive...|$|E
40|$|Because {{decisions}} made by human inspectors often involve subjective judgment, {{in addition to being}} intensive and therefore costly, an automated approach for printed circuit board (PCB) inspection is preferred to eliminate subjective discrimination and thus provide fast, quantitative, and dimensional assessments. In this study, <b>defect</b> <b>classification</b> is essential to the identification of defect sources. Therefore, an algorithm for PCB <b>defect</b> <b>classification</b> is presented that consists of well-known conventional operations, including image difference, image subtraction, image addition, counted image comparator, flood-fill, and labeling for the classification of six different defects, namely, missing hole, pinhole, underetch, short-circuit, open-circuit, and mousebite. The <b>defect</b> <b>classification</b> algorithm is improved by incorporating proper image registration and thresholding techniques to solve the alignment and uneven illumination problem. The improved PCB <b>defect</b> <b>classification</b> algorithm has been applied to real PCB images to successfully classify all of the defects...|$|E
40|$|Automated <b>defect</b> <b>classification</b> {{is crucial}} for {{including}} reducing labour costs and cycle time, increasing yields and manufacturability. In this project, we have proposed an integrated defect detection, classification and management system that comprises two subsystems: the defect detection and classification subsystem and the image management and retrieval subsystem. By combining <b>defect</b> <b>classification</b> and image retrieval together, a flexible and adaptive defect inspection system becomes possible...|$|E
40|$|The {{use of the}} {{acoustic}} features extracted from the impact sounds for bonding integrity assessment has been extensively investigated. Nonetheless, considering the practical implementation of tile-wall non-destructive evaluation (NDE), the traditional <b>defects</b> <b>classification</b> method based directly on frequency-domain features has been of limited application because of the overlapping feature patterns corresponding to different classes whenever there is physical surface irregularity. The {{purpose of this paper}} is to explore the clustering and classification ability of principal component analysis (PCA) as applied to the impact-acoustics signature in tile-wall inspection with a view to mitigating the adverse influence of surface non-uniformity. A clustering analysis with signature acquired on sample slabs shows that impact-acoustics signatures of different bonding quality and different surface roughness are well separated into different clusters when using the first two principal components obtained. By adopting as inputs the feature vectors extracted with PCA applied, a multilayer back-propagation artificial neural network (ANN) classifier is developed for automatic health monitoring and <b>defects</b> <b>classification</b> of tile-walls. The inspection results obtained experimentally on the prepared sample slabs are presented and discussed, confirming the utility of the proposed method, particularly in dealing with the surface irregularity. (c) 2006 Elsevier Ltd. All rights reserved...|$|R
40|$|For the {{inspection}} of specular surfaces, deflectometry {{is one of}} the most popular methods. However, there is still no method for automated detection of <b>defects,</b> <b>classification</b> and evaluation of the data from deflectometric measurements. In this paper new methods based on wavelet analysis are introduced, which are able to detect defects at different scales. For better recognition rates the filter banks are optimized on given defect classes as well as on dominant feature sizes. The methods are evaluated with real data of various defect classes...|$|R
40|$|The {{treatment}} of malignant neoplasms {{of the hard}} palate comprises radical surgical resection. Defects of the maxillary sinus, hard palate and upper alveolar ridge may leave the patient with significant postoperative speech and swallowing problems [1]. Several maxillectomy <b>defect</b> <b>classifications</b> {{have been developed to}} ascertain the most effective means of rehabilitation for each type of defect. The defects can be repaired using fasciocutaneous or bone-containing free flaps or local advancement flaps [2]. A removable palatal obturator is a viable alternative when harvesting a flap is not feasible [3]...|$|R
40|$|Defects play {{a crucial}} role in {{software}} development. This is because on one hand, defects, when detected, should be corrected so that the final version of the developed software artifact is of higher quality. On the other hand, defects carry a lot of information that can be analyzed in order to characterize the quality of processes and products, to track the progress of a project and control it, and to improve the process. Therefore, defect measurement plays a crucial role in many software measurement programs. Consequently, in many measurement programs defect data are collected. Generally there are several pieces of information that can be collected about defects. The most often used pieces of information relate to the quantity of defects (i. e., their number) and their type. For the latter one, <b>defect</b> <b>classification</b> schemes are used to quickly characterize the nature of defects. Two important questions arise, when using defect classification: "How can a <b>defect</b> <b>classification</b> be designed?" and "How can <b>defect</b> <b>classification</b> data be analyzed?" In order to answer the first question, this report presents the aspects of a defect that have been measured in the literature and it presents the possible structures of a <b>defect</b> <b>classification</b> scheme. Finally, examples of frequently used <b>defect</b> <b>classification</b> schemes are presented. In order to answer the second question, this report presents general methods to analyze <b>defect</b> <b>classification</b> as reported in the literature as well as concrete analyses for a variety of purposes. This report is a result of the project "Integrierte Qualitätssicherung und Anforderungsanalyse zur Softwareentwicklung im Umfeld Fahrzeug (QUASAR) ", which is funded by the German BMBF under the grant VFG 0004 A...|$|E
40|$|In this paper, we {{put forth}} {{the thesis that}} {{state-of-the-art}} <b>defect</b> <b>classification</b> schemes – such as ODC and IEEE Std. 1044 – have failed to meet their target; limited industrial adoption is taken {{as part of the}} evidence combined with published studies on model driven software development. Notwithstanding, a number of publications show that defect reports can provide valuable information about common, important, or dangerous problems with software products. In this paper, we present the synthesis of two industrial case studies that illustrate that even expert judgement can be deceptive; demonstrating the need for more objective evidence to allow project stakeholder to make informed decisions, and that <b>defect</b> <b>classification</b> is one effective means to that end. Finally, we propose a roadmap that will contribute to improving the <b>defect</b> <b>classification</b> approach, which in consequence will lead to a wider industrial adoption...|$|E
40|$|This work {{presents}} die <b>defect</b> <b>classification</b> using image processing. The {{detection of}} the flaw {{is based on}} the defect features in the die. Each unique defect or feature structure is defined from samples that has been collected by Visual Inspection Inspectors. The defects are then grouped into user definition categories such as blob, pin hole, underfill and die crack. This work also describes the image processing algorithms utilized to perform <b>defect</b> <b>classification.</b> The <b>defect</b> <b>classification</b> was developed from MATLAB program. It is aimed at locating the Region of Interest of the die from the image and extract it. The extracted image is then used to classify or recognize the specific classification category of the defect. Total samples that is being used in this project is 67 die samples. The results obtained from this work shows the overall accuracy of 94 % for die defect detection and 87 % for defect classificatio...|$|E
40|$|An {{important}} goal during {{the cycle of}} software development is to find and fix existing defects as early as possible. This {{has much to do}} with software defects prediction and management. Nowadays,many  big software development companies have their own development repository, which typically includes a version control system and a bug tracking system. This has no doubt proved useful for software defects prediction. Since the 1990 s researchers have been mining software repository to get a deeper understanding of the data. As a result they have come up with some software defects prediction models the past few years. There are basically two categories among these prediction models. One category is to predict how many defects still exist according to the already captured defects data in the earlier stage of the software life-cycle. The other category is to predict how many defects there will be in the newer version software according to the earlier version of the software defects data. The complexities of software development bring a lot of issues which are related with software defects. We have to consider these issues as much as possible to get precise prediction results, which makes the modeling more complex. This thesis presents the current research status on software <b>defects</b> <b>classification</b> prediction and the key techniques in this area, including: software metrics, classifiers, data pre-processing and the evaluation of the prediction results. We then propose a way to predict software <b>defects</b> <b>classification</b> based on mining software repository. A way to collect all the defects during the development of software from the Eclipse version control systems and map these defects with the defects information containing in software defects tracking system to get the statistical information of software defects, is described. Then the Eclipse metrics plug-in is used to get the software metrics of files and packages which contain defects. After analyzing and preprocessing the dataset, the tool(R) is used to build a prediction models on the training dataset, in order to predict software <b>defects</b> <b>classification</b> on different levels on the testing dataset, evaluate the performance of the model and comparedifferent models’ performance...|$|R
40|$|The {{recognition}} {{problem is}} solved {{on the basis}} of the properties of the statistical classification structure errors, referred to as <b>defects.</b> <b>Classification</b> is performed by agglomerative cluster analysis on Euclidean metric. Experimental clustering carried out by varying the time and cost of finding and eliminating defects. We identified three major classes of defects – for accuracy, completeness and timeliness of the data. The analysis of each class of defects in their parameters, the weight value, the causes and others. In view of the identification of the properties of defects solved the problem of improving the quality of information systems.  </p...|$|R
40|$|Software project {{inspection}} {{has been}} shown to be an effective defect removal practice, leading to higher quality software with lower field failures. The use of software code inspections, design inspections, and requirements inspections, has been found to increase software quality and lower software development costs [1, 2]. Efficiency is the main attribute of reliability. Efficiency measures the performance of the software and performance of software is better if it is error free or defect free. To check the defect free software and to make it acceptable in the market, the software is inspected by the analysts on various criteria. The criteria are termed as <b>defects</b> <b>classification</b> and they are described as defect...|$|R
30|$|As {{shown in}} Fig. 11, the {{accuracy}} of EFIC classifiers without the Gabor feature is the lowest. However, the Gabor feature is the most suitable for texture representation and discrimination of steel <b>defect</b> <b>classification.</b>|$|E
30|$|In conclusion, in our experiments, {{the absence}} of any one feature of EFIC {{classifiers}} significantly reduced the accuracy. Therefore, by combining these five features, our method can obtain satisfactory accuracy for steel <b>defect</b> <b>classification.</b>|$|E
40|$|The {{global market}} for textile {{industry}} is highly competitive nowadays. Quality control in production process in textile {{industry has been}} a key factor for retaining existence in such competitive market. Automated textile inspection systems are very useful in this respect, because manual inspection is time consuming and not accurate enough. Hence, automated textile inspection systems have been drawing plenty of attention of the researchers of different countries in order to replace manual inspection. Defect detection and <b>defect</b> <b>classification</b> are the two major problems that are posed {{by the research of}} automated textile inspection systems. In this paper, we perform an extensive investigation on the applicability of genetic algorithm (GA) in the context of textile <b>defect</b> <b>classification</b> using neural network (NN). We observe the effect of tuning different network parameters and explain the reasons. We empirically find a suitable NN model in the context of textile <b>defect</b> <b>classification.</b> We compare the performance of this model with that of the classification models implemented by others. Comment: 20 pages, 11 figures, 6 tables; International Journal of Artificial Intelligence & Applications (IJAIA),AIRCC, July 201...|$|E
40|$|<b>Classification</b> of <b>defects</b> using {{ultrasonic}} {{nondestructive testing}} (NDT) is primarily {{done in the}} field of industrial materials to provide useful information in order to assist in making administrative decisions in terms of maintenance and replacement. The technique presented in this paper utilizes the concept of defect induction as a convolution process between the clean sample and the defect signature. Hence, to identify the type of defect a deconvolution approach can be useful. Due to several similarities between the ultrasonic echoes and the usual modulated sinusoids, a motivation is present to use 4 th order statistics for completely defining the waveform. Such a definition, when compared with standard defects, will provide useful insight in terms of <b>defect</b> <b>classifications</b> and understanding...|$|R
40|$|Artificial defects {{of solar}} cells are {{observable}} with laser beam induced current techniques. Reversed bias solar cell light emission can also reveal structure inhomogenity and local mechanical damage of the sample. The paper shows simple method for basic classification into structure group and artificial defects group. Observed artificial defects are shown and process of its creation is described. <b>Defects</b> <b>classification</b> method {{is based on}} the measurement of light emission at fixed reverse voltage while the temperature of sample is changing in the range of 20 K. There is different light emission temperature dependence in the case of bulk defects and mechanical damage defects. Experimental light emission data are consequently correlated with laser beam induced current map...|$|R
40|$|Ultrasonic {{nondestructive}} testing (NDT) is primarily {{based upon the}} detection and <b>classification</b> of a <b>defect</b> {{in the field of}} industrial materials. This information is useful in making administrative decisions in terms of maintenance and replacement. The technique presented in this paper utilizes the concept of defect induction as a convolution process between the clean sample and the defect signature. Hence, to identify the type of defect a deconvolution approach can be useful. Due to several similarities between the ultrasonic echoes and the usual modulated sinusoids, a motivation is present to use 2 nd and higher order statistics for completely defining the waveform. Such a definition, when compared with standard defects, will provide useful insight in terms of <b>defect</b> <b>classifications</b> and understanding...|$|R
40|$|Abstract—Finding {{defects in}} a {{software}} {{system is not}} easy. Effective detection of software defects is an important activity of software development process. In this paper, we propose an approach to predict residual defects, which applies machine learning algorithms (classifiers) and defect distribution model. This approach includes two steps. Firstly, use machine learning Algorithms to get <b>defect</b> <b>classification</b> table, then confirm the defect distribution trend referring to several distribution models. Experiment results on a GUI project show that the approach can effectively improve the accuracy of defect prediction and be used for test planning and implementation. Index Terms—residual defect prediction, defect distribution model, software <b>defect</b> <b>classification,</b> defect trend, classifiers I...|$|E
40|$|Software {{inspection}} play {{a crucial}} role in achieving high quality software right from the beginning. Especially for requirements documents inspections are beneficial as defects can be detected and removed at an early point in time before they can leak into subsequent phases of the development process, where those defects can cause high rework cost and quality problems [Boehm and Basili, 2001]. In order to fully exploit the beneficial aspect of inspections it is necessary to control them: Based on an analysis of the inspection effectiveness (e. g., what type or number of defects have been detected and what type and number might be remaining) it has to be decided whether development can proceed as planned or controlling actions, such as reinspections, have to be performed. <b>Defect</b> <b>classification</b> is a technique that can support this activity. Using appropriate <b>defect</b> <b>classification</b> schemes it is possible to get a quantitative statement of the inspection effectiveness (i. e., what type of defects have been found). Examples in the literature demonstrated beneficial applications but are hard to adopt without tailoring the underlying <b>defect</b> <b>classification</b> scheme to the environment. In this report a <b>defect</b> <b>classification</b> scheme is developed that is to support the control of the inspection of QUASAR requirements documents. In particular we discuss our approach to define the scheme, its underlying rationale, the scheme itself, and our experience from using it in a case study. The scheme consist of two defect attributes that are to be used when inspecting use cases and recording defects in these documents, and three attributes for state chart documents...|$|E
40|$|This paper {{presents}} a new method for fabric <b>defect</b> <b>classification</b> {{by using a}} wavelet frames feature extractor and a minimum classification error-based neural network. Channel variances at the outputs of the wavelet frame decomposition are extracted to characterize each non-overlapping window of the fabric image, which is further assigned to a defect category with a neural network classifier. In our work, a Minimum Classification Error (MCE) criterion {{is used in the}} training of the neural network for the improvement of classification performance. The developed <b>defect</b> <b>classification</b> method has been evaluated on the classification of 329 defect samples from nine types of defects and 82 non-defect samples, where an 93. 4 % classification accuracy was achieved. published_or_final_versio...|$|E
40|$|This paper reports an {{electrical}} {{measurement of the}} single junction solar cells based on silicon technology. Defects of these samples are often local and can result in lower effi-ciency or shorter solar cell lifetime. Consequently, we can observe many of defects in elec-tric characteristics of solar cells. Measured IV-characteristics and noise signals provide in-formation for <b>defects</b> <b>classification</b> and/or identification. The results of two basic types of the silicon solar cells measurements at very low temperatures are presented in this paper. Used types of solar cells differ above all in the surface texturing and dopand concentration. The cryogenic system is used to accurate setting of temperature with wide range of operat-ing temperatures. The microscopic study of the samples surface is presented, too. 1...|$|R
40|$|Manufacturing cost is a {{topic of}} {{interest}} in the automotive manufacturing industry. Even though rework and repair methods are acceptable processes in manufacturing, there is little investigation done on the classification and cost parameters of a repairable or re-workable part. Having a non-conforming part indicates a loss in revenue to a manufacturing company, thus the need to repair or rework the part. Repair and rework processes take non-conforming products of a manufacturing line and bring the parts back to conforming stage. In this study, the proposed system establishes a connection between detection of <b>defects,</b> <b>classification</b> of them based on defect level and the cost required to return the part back to conforming state. A series of tools such as Insight Explorer and LabVIEW aid this study in <b>defect</b> detection and <b>classification</b> respectively. Insight Explorer 2 ̆ 7 s output will serve as the knowledge base from which LabVIEW extracts the knowledge and performs the analysis using a series of proposed equations to classify and determine the cost of each defect. The proposed system is evaluated and validated based on real part measurements. Experimental results show that the system performs as intended and will be beneficial to the user. ...|$|R
40|$|Abstract: We have {{developed}} an innovative surface inspection system for automated quality control for steel productions in POSCO. We had ever installed the various kinds of surface inspection systems, such as a linear CCD and a laser typed surface inspection system at cold rolled strip production lines. But these systems cannot fulfill the sufficient detection and classification rate, and real time processing performance. In order to increase detection and classification rate, we have used the Dark, Bright and Transition field illumination and area type CCD camera, and for the real time image processing, parallel computing has been used. In this paper, we introduce the automatic surface inspection system and real time image processing technique using the object detection, <b>defect</b> detection, <b>classification</b> algorithm and its performance obtained at the production line. Key-Words:- surface inspection system, CCD, object detection, <b>defect</b> detection, <b>classification,</b> cold rolled strip...|$|R
40|$|Defect {{measurement}} plays {{a crucial}} role when assessing quality assurance processes such as inspections and testing. To systematically combine these processes {{in the context of an}} integrated quality assurance strategy, measurement must provide empirical evidence on how effective these processes are and which types of defects are detected by which quality assurance process. Typically, <b>defect</b> <b>classification</b> schemes, such as ODC or the Hewlett-Packard scheme, are used to measure defects for this purpose. However, we found it difficult to transfer existing schemes to an embedded software context, where specific document- and defect types have to be considered. This paper presents an approach to define, introduce, and validate a customized <b>defect</b> <b>classification</b> scheme that considers the specifics of an industrial environment. The core of the approach is to combine the software engineering know-how of meas-urement experts and the domain know-how of developers. In addition to the approach, we present the results and experiences of using the approach in an industrial setting. The results indicate that our approach results in a <b>defect</b> <b>classification</b> scheme that allows classifying defects with good reliability that allows identifying process improvement actions and that can serve as a baseline for evaluating the impact of process improvements...|$|E
40|$|Classification of {{software}} defects {{is a means}} to provide defect reports with a shared and well-defined structure. Quantitative analyses of the classification data facilitated by the shared structure are useful to industry practitioners and academic researchers. For practitioners, especially in large, complex or dynamic organizations, analyses can provide valuable information that characterize the development process, assist in identifying improvement opportunities, and provide one basis for predictions (e. g. product quality and resource needs). For researchers, classification data can facilitate evaluating effects of improved practices (e. g. new methods and tools) by analysing classified defect data before and after applying the hypothesized improved practice. Although recognized as a promising approach, there has to date been limited research reported on <b>defect</b> <b>classification</b> schemes—specifically on the efficiency of their application in industry, and on {{the reliability of the}} classification data. Efficient classification is desirable as it minimizes the time required to classify defects. Reliability of the classification data is important as it directly affects the reliability of conclusions drawn from analyses of the data. In this thesis, a <b>defect</b> <b>classification</b> scheme based on and compliant to the standard classification for software anomalies (IEEE Std. 1044) is described and evaluated. The classification scheme, LiDeC (Light-weight <b>Defect</b> <b>Classification</b> Scheme), was adapted to and applied in the development of automotive safety software. Through case studies and an experiment, LiDeC was evaluated with respect to its industrial applicability, efficiency and reliability. The results show that analyses of classification data can provide new and useful information about the effectiveness of current development practices. Applying a classification scheme adapted to the target organization results in analyses that are more directly relevant to that organization. Academic experimentation showed that classification schemes are easy to learn and to apply—even when lacking domain specific knowledge, the experiment subjects were able to arrive at rational classifications. The main contributions of the thesis include: the description of an adaptation of the standard classification scheme to a specific organization while maintaining standard compliance; an initial industrial evaluation of the applicability of the adapted classification scheme; a description of a methodology for comprehensively evaluating <b>defect</b> <b>classification</b> schemes; and finally, an investigation of current state-of-the-art with respect to <b>defect</b> <b>classification,</b> and a proposed roadmap for future research...|$|E
40|$|A {{technique}} {{involving the}} use of Fourier descriptors for characterizing impedance plane trajectories to facilitate <b>defect</b> <b>classification</b> is presented. The Fourier descriptors are obtained by expanding the complex contour function in a Fourier series. Functions of Fourier coefficients which are invariant under transformation of the trajectory are derived and incorporated into a feature vector. <b>Defect</b> <b>classification</b> is obtained by using the K-Means algorithm to cluster the feature vectors. The principal advantage of the approach lies {{in the ability to}} reconstruct the curve from the coefficients. Other advantages include the insensitivity of the descriptors to drift in the eddy current instrument as well as variations in probe speed. Experimental evidence attesting to the ability of the approach to discriminate between trajectories and hence identify defects is presented...|$|E
40|$|The {{reliable}} {{attainment of}} quality requirements {{is still a}} weakness in model-based development projects, especially in the embedded systems domain. A major reason for this situation is the isolated use of construction and subsequent analysis activities. This paper describes a practical strategy for addressing this problem. The strategy relies on an effective combination of development and modelling guidelines as provided by the MARMOT method for component-based development of embedded and real-time systems and rigorous quality checks of the resulting models {{by means of the}} architecture-centric inspection (ACI) approach. This paper describes a strategy for combining analytic and constructive techniques in component-based development via an initial <b>defect</b> <b>classifications</b> for UML design documents. The effects of such a combination are on the one hand high quality component implementations, {{and on the other hand}} a significantly increased confidence that the desired quality levels are attained...|$|R
40|$|Students are {{prepared}} {{in the frame}} of MSc. studies {{in such a way that}} they can solve the most demanding tasks in the studying subject as textile quality management, textile testing, textile marketing, methods of thermal analysis or data exploratory analysis. Named subjects are requiring solving of complex mathematic tasks or evaluation of measured data. Student are supposed to be able to research properties of textile structures and textile materials. With upcoming innovation in textile material engineering (such as nanofibres, nanotechnology, new types of the technical textile, intelligent textile) there is necessary improvement in the education process. Innovation is focused on extended use of MATLAB for automatic defectoscopy and generally on textile evaluation. It is connected mainly to semiautomatic processing of measured dat, the possibilities the data visualization, searching of textile structures <b>defects,</b> <b>defects</b> <b>classification</b> or selected tasks of analytic geometry...|$|R
40|$|Mutation Testing is a {{well-established}} technique {{for assessing the}} quality of test cases by checking how well they detect faults injected into a software artefact (mutant). Using this technique, the most critical activity is the adequate design of mutation operators so that they reflect typical defects of the artefact under test. This paper presents {{the design of a}} set of mutation operators for Conceptual Schemas (CS) based on UML Class Diagrams (CD). In this paper, the operators are defined in accordance with an existing <b>defects</b> <b>classification</b> for UML CS and relevant elements identified from the UML-CD meta-model. The operators are subsequently used to generate first order mutants for a CS under test. Finally, in order to analyse the usefulness of the mutation operators, we measure some basic characteristics of mutation operators with three different CSs under test...|$|R
