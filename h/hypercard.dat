502|11|Public
5|$|The {{original}} Macintosh {{version of}} Myst {{was constructed in}} <b>HyperCard.</b> Each Age was a unique <b>HyperCard</b> stack. Navigation was handled by the internal button system and HyperTalk scripts, with image and QuickTime movie display passed off to various plugins; essentially, Myst functions {{as a series of}} separate multimedia slides linked together by commands. As the main technical constraint that impacted Myst was slow CD-ROM drive read speeds, Cyan had to {{go to great lengths to}} make sure all the game elements loaded as quickly as possible. Images were stored as 8-bit PICT resources with custom color palettes and QuickTime still image compression. Animated elements such as movies and object animations were encoded as QuickTime movies with Cinepak compression; in total, there were more than 66minutes of Quicktime animation. This careful processing made the finished graphics look like truecolor images despite their low bit depth; the stills were reduced in size from 500kB to around 80kB.|$|E
5|$|During {{his initial}} {{research}} into cyberculture, Idol ordered Beyond Cyberpunk! from Gareth Branwyn. The <b>HyperCard</b> stack, which included collections of essays on cyberpunk culture, inspired Idol to include similar material within the Cyberpunk album {{as a special}} edition digipak feature. Discussing the matter with Branwyn, Idol received an initial bid {{for the job of}} producing the disk from the writer. While this bid was under consideration by Idol's management company, Idol had purchased a book-on-disk by Jaime Levy at a Los Angeles bookstore. At the time, Levy was the author and publisher of Electronic Hollywood, one of the first magazines produced on floppy disk. Impressed by its contents, Idol set about contacting her for the job of producing the disk. Successfully under-bidding Branwyn, she was then given the job and a master tape of recorded songs – which were not yet compiled into CD format – for use in sampling. Levy was given permission to include whatever content she desired. Meeting Idol to find what he was interested in presenting in the disk, his only concern was that the whole cyberpunk genre be represented as much as possible.|$|E
5|$|While {{attending}} Waseda University, Saito played SimCity on the Macintosh, {{which prompted}} him to pursue video game creation after graduating. His first game was a simulation title {{that was part of}} a future media project for a publishing house. When Saito asked to develop a second, the business refused because it was not a video game company. He left the company to personally produce the second game, which built on ideas he conceived while working on his first: elevators and towers. Saito teamed up with freelance programmer Takumi Abe to complete the project. To research the gameplay, Saito contacted an elevator company to learn about elevator scheduling and management. However, the company declined to provide the information. Saito handled the graphic design, and started with a monochromatic scaled tower created in <b>HyperCard.</b> The designer added color to differentiate between office- and hotel-type buildings. As development neared completion, Saito noticed that the Mac's performance had improved and decided to increase the color palette size from 16 to 256colors. Saito enlisted a second designer to produce animation for the graphics and improve the details for the color increase.|$|E
50|$|Fractal Music, <b>Hypercards</b> and More...: Mathematical Recreations from Scientific American (1992), W. H. Freeman & Co.|$|R
2500|$|Reprinted with an {{addendum}} as [...] "The Tinkly Temple Bells", Chapter 2 of Fractal Music, <b>Hypercards,</b> {{and more}} ... Mathematical Recreations from Scientific American, W. H. Freeman, 1992, pp.24–38 ...|$|R
50|$|Reprint {{forthcoming}} as Fractal Music, <b>Hypercards,</b> and Chaitin’s Omega: Martin Gardner’s Mathematical Recreations, (Series: The New Martin Gardner Mathematical Library #14); The Mathematical Association of America/Cambridge University Press.|$|R
25|$|At {{the same}} time <b>HyperCard</b> 2.0 was being developed, a {{separate}} group within Apple developed and in 1991 released <b>HyperCard</b> IIGS, a version of <b>HyperCard</b> for the Apple IIGS system. Aimed mainly at the education market, <b>HyperCard</b> IIGS had roughly the same feature set as the 1.x versions of Macintosh <b>HyperCard,</b> while adding support for the color graphics abilities of the IIGS. Although stacks (<b>HyperCard</b> program documents) were not binary-compatible, a translator program (another <b>HyperCard</b> stack) allowed stacks to be moved from one platform to the other.|$|E
25|$|Despite the {{new revenue}} stream, Claris {{did little to}} market <b>HyperCard.</b> Development {{continued}} with minor upgrades, and the first failed {{attempt to create a}} third generation of <b>HyperCard.</b> During this period, <b>HyperCard</b> began losing market share. Without several important, basic features, <b>HyperCard</b> authors began moving to systems such as SuperCard and Macromedia Authorware. Nonetheless, <b>HyperCard</b> continued to be popular and used for a widening range of applications, from the game The Manhole, an earlier effort by the creators of Myst, to corporate information services, and many thousands in between.|$|E
25|$|Activision, {{which was}} until then mainly a game company, saw <b>HyperCard</b> as an entry point into the {{business}} market. Changing their name to Mediagenic, they published several major <b>HyperCard</b> based applications, most notably Danny Goodman's Focal Point, a personal information manager, and Reports For <b>HyperCard,</b> a program by Nine To Five Software that allowed users to treat <b>HyperCard</b> as a full database system with robust information viewing and printing features.|$|E
50|$|The game {{features}} digitized {{voices and}} sounds that were played by <b>HyperCard's</b> sound commands, and 18 tracks of original CD-DA background {{music on the}} Hybrid CD version, much of which was written by Shep Lovick and Robyn Miller and features Kyle Stroud prominently on the saxophone.|$|R
5000|$|One {{feature of}} the OSA is {{scripting}} additions, or OSAX for Open Scripting Architecture eXtension, which were inspired by <b>HyperCard's</b> External Commands. Scripting additions are libraries that allow programmers to extend the function of AppleScript. Commands included as scripting additions are available system-wide, and are not dependent on an application (see also [...] ).|$|R
50|$|A more hidden feature was HyperScript, a macro-programming {{language}} deliberately modelled on <b>HyperCard's</b> HyperTalk. HyperScript allowed {{even new}} users to write fairly powerful macros, which could include user-interface {{features such as}} buttons and dialog boxes. HyperScript 1.0 was missing some rather obvious features. For instance it could not open another spreadsheet, although it could refer to one if the user opened that for it.|$|R
25|$|Apple {{eventually}} folded Claris {{back into}} the parent company, returning <b>HyperCard</b> to Apple's core engineering group. In 1992, Apple released the eagerly anticipated upgrade of <b>HyperCard</b> 2.2 and made many <b>HyperCard</b> enthusiasts happy by including licensed versions of Color Tools and Addmotion II, adding support for color pictures and animations. However, these tools were limited and often cumbersome to use because <b>HyperCard</b> still lacked true, internal color support.|$|E
25|$|Then, Apple {{decided that}} most of its {{application}} software packages, including <b>HyperCard,</b> would be the property of a wholly owned subsidiary called Claris. Many of the <b>HyperCard</b> developers chose to stay at Apple rather than move to Claris, causing the development team to be split. Claris, {{in the business of}} selling software for a profit, attempted to create a business model where <b>HyperCard</b> could also generate revenues. At first the freely-distributed versions of <b>HyperCard</b> shipped with authoring disabled. Early versions of Claris <b>HyperCard</b> contained an Easter Egg: typing 'magic' into the message box would convert the player into a full <b>HyperCard</b> authoring environment. When this trick became nearly-universal they wrote a new viewer only version, the <b>HyperCard</b> Player which Apple distributed with the Macintosh operating system, while Claris sold the full version commercially. Many users were upset that they had to pay to use software that had traditionally been supplied free and which many considered a basic part of the Mac.|$|E
25|$|Asymetrix's Windows {{application}} ToolBook resembled <b>HyperCard,</b> {{and later}} included an external converter to read <b>HyperCard</b> stacks (the {{first was a}} third-party product from Heizer software).|$|E
50|$|HyperPhysics is an {{educational}} website about physics topics. The information {{architecture of the}} website is based on <b>HyperCards</b> (as it was the original development) and a thesaurus organization, with thousands of controlled links and usual trees organizing topics from general to specific. It also exploits concept maps to facilitate smooth navigation. HyperPhysics is hosted by Georgia State University and authored by Georgia State faculty member Rod Nave.|$|R
50|$|HyperNext's main {{programming}} language is simply called HyperNext and is {{loosely based on}} <b>Hypercard's</b> HyperTalk language. HyperNext is an interpreted English-like language and has many features that allow creation of full applications and stacks. These features includes a large variety of keywords to affect and receive feedback from its many GUI control types and multi-media capabilities using Apple QuickTime. Midi notes and sounds can be played using Note Player and HyperNext's sprite surface has various uses including game development. The Macintosh versions of HyperNext include functions to run the AppleScript scripting language.|$|R
50|$|Authorware {{programs}} {{start by}} creating a flowline, which is a flowchart showing {{the structure of the}} developer's program. The developer can add and manage text, graphics, animation, sound and video; develop interactivity and add navigational elements such as links, buttons, and menus. Macromedia Flash and Macromedia Director movies can also be integrated into an Authorware project. Xtras, or add-ins, {{can also be used to}} extend the functionality of Authorware, which is similar to <b>HyperCard's</b> XCMDs. Authorware's power can be even better utilized with the use of variables, functions and expressions. Authorware can interpret both its built-in proprietary scripting language and JavaScript version 1.5.|$|R
25|$|TileStack was {{an attempt}} to create a web based version of <b>HyperCard</b> that is {{compatible}} with the original <b>HyperCard</b> files. The site closed down January 24, 2011.|$|E
25|$|SuperCard, {{the first}} <b>HyperCard</b> clone, {{is similar to}} <b>HyperCard,</b> but with many added {{features}} such as: full color support, pixel and vector graphics, a full GUI toolkit, and support for many modern Mac OS X features. It can create both standalone applications and projects that run on the freeware SuperCard Player. SuperCard can also convert extant <b>HyperCard</b> stacks into SuperCard projects. It runs only on Macs.|$|E
25|$|The Myst {{computer}} game franchise, initially released as a <b>HyperCard</b> stack and included bundled with some Macs (for example the Performa 5300), still lives on, making <b>HyperCard</b> a facilitating technology for starting {{one of the}} best-selling {{computer game}}s of all time.|$|E
5000|$|<b>HyperCard's</b> primary user {{interface}} concept was the card, a display system that emulated an index card. Cards were normally used to store information, {{similar to a}} record in a conventional flat-file database. The graphical layout of the card was created by placing various elements like text fields and buttons on it using the mouse. A master layout [...] "card" [...] known as the background was shown behind the transparent areas of each card. Objects placed on the background, such as fields and buttons, would be shared as a layout among several cards, but with card-specific content. The collection of cards, backgrounds and the associated data stored in them were stored in a single file known as the stack (of cards). Collectively, all of these data-containing objects {{are referred to as}} containers.|$|R
40|$|This {{issue of}} Southern Review brings {{together}} contributors from backgrounds in history, media and communications, information technology, museum studies and education. Each discusses {{the ways in}} which the digitisation of documents and the availability of online records, searchable and sent straight to the desktop, is changing research and teaching. Archives and information retrieval might seem like a dusty topic. Some thrive on the hunt through the records, but most researchers struggle to contain their own archives, much less come to terms with the amount of material ready for them to read, retrievable from their desktop. Piles of paper mount up in the office, the home study or the shed. One reference system replaces another, until there are layers of database versions, <b>hypercards,</b> card indexes and shoeboxes of stuff. These collections are often unplanned; they might be idiosyncratic, but they are probably not private. We live in an archived present. Even the most digital communications-keystrokes, floods of email, the trails of web trawling-are mechanically archived many times over. Efforts to archive HTML pages on the World Wide Web continue, even as the copies of these pages cached on individual desktops multiply. Deletion often seems pointless, but there are new disciplines for managing the memory of machines. [Introduction...|$|R
25|$|<b>HyperCard</b> saw {{a loss in}} {{popularity}} {{with the growth of}} the World Wide Web, since the Web could handle and deliver data {{in much the same way}} as <b>HyperCard</b> without being limited to files on a local hard disk. <b>HyperCard</b> had a significant impact on the web as it inspired the creation of both HTTP (through its influence on Tim Berners-Lee's colleague Robert Cailliau), and JavaScript (whose creator, Brendan Eich, was inspired by HyperTalk). It was also a key inspiration for ViolaWWW, an early web browser.|$|E
25|$|<b>HyperCard</b> was {{originally}} released in 1987 for $49.95 and was included for free with all new Macs sold then. It was withdrawn from sale in March 2004 after its final update in 1998. <b>HyperCard</b> {{ran in the}} Classic Environment, but was not ported to Mac OS X.|$|E
25|$|The QuickTime {{interactive}} {{movie was}} to have been the playback format {{for the next generation of}} <b>HyperCard</b> authoring tool. Both the QuickTime interactive and the <b>HyperCard</b> 3.0 projects were canceled in order to concentrate engineering resources on streaming support for QuickTime 4.0, and the projects were never released to the public.|$|E
25|$|In late 1989, Kevin Calhoun, then a <b>HyperCard</b> {{engineer}} at Apple, led {{an effort to}} upgrade the program. This resulted in <b>HyperCard</b> 2.0, released in 1990. The new version included an on-the-fly compiler that greatly increased performance of computationally intensive code, a new debugger and many improvements to the underlying HyperTalk language.|$|E
25|$|Because <b>HyperCard</b> {{executed}} scripts in stacks {{immediately on}} opening, {{it was also}} one of the first applications susceptible to macro viruses. The Merryxmas virus was discovered in early 1993 by Ken Dunham, two years before the Concept virus. Very few viruses were based on <b>HyperCard,</b> and their overall impact was minimal.|$|E
25|$|<b>HyperCard</b> {{was created}} by Bill Atkinson {{following}} an lysergic acid diethylamide (LSD) trip. Work for it began in March 1985 {{under the name of}} WildCard (hence its creator code of 'WILD'). In 1986, Dan Winkler began work on HyperTalk and the name was changed to <b>HyperCard</b> for trademark reasons. It was initially released in August 1987, with the understanding that Atkinson would give <b>HyperCard</b> to Apple only if the company promised to release it for free on all Macs. Apple timed its release to coincide with the MacWorld Conference & Expo in Boston, Massachusetts to guarantee maximum publicity.|$|E
25|$|The first <b>HyperCard</b> {{virus was}} {{discovered}} in Belgium and the Netherlands in April 1991.|$|E
25|$|HyperStudio, one of {{the first}} <b>HyperCard</b> clones, is , {{developed}} and published by Software MacKiev.|$|E
25|$|Plus, later renamed WinPlus, was {{a product}} similar to <b>HyperCard,</b> for Windows and Macintosh.|$|E
25|$|<b>HyperCard</b> runs {{natively}} only in {{the classic}} Mac OS, but it can still be used in Mac OS X's Classic mode on PowerPC based machines (G5 and earlier). The last functional native <b>HyperCard</b> authoring environment is Classic mode in Mac OS X 10.4 (Tiger) on PowerPC-based machines (although it can be run on modern Intel-based machines, including non-Apple hardware, by using an emulation layer such as SheepShaver).|$|E
25|$|Many {{hardware}} and software vendors provided their tutorials as <b>HyperCard</b> stacks, since the application was bundled with all Macs.|$|E
25|$|In 2017 the Internet Archive {{established}} {{a project to}} preserve and emulate <b>HyperCard</b> stacks, allowing users to upload their own.|$|E
25|$|In {{the years}} that followed, the program saw no more support from Apple, which finally ceased selling <b>HyperCard</b> in March 2004.|$|E
