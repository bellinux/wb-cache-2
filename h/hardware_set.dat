30|243|Public
5000|$|DRM-OPERA: An {{interoperable}} DRM {{architecture that}} is not dependent upon a specific <b>hardware</b> <b>set</b> or operating system.|$|E
50|$|Firebird Studio - Two standard-sized Alnico humbuckers, Tune-o-matic {{bridge with}} stop-bar tailpiece. Chrome or gold <b>hardware.</b> <b>Set</b> neck. Dot inlays and no neck binding.|$|E
50|$|YaST is free {{software}} that SUSE has made available under the GPL in 2004. It {{is a tool}} for administering and maintaining a SUSE Linux installation. It allows administrators to install software, configure <b>hardware,</b> <b>set</b> up networks and servers, and more.|$|E
50|$|Sony Ericsson {{handsets}} using GDFS {{include those}} with the DB2010, DB2012, DB2020, DB3150, DB3200, DB3210 and DB3350 <b>hardware</b> <b>sets.</b>|$|R
50|$|They {{produce a}} range of {{residential}} lock products, including tubular locks, key locking <b>hardware</b> <b>sets,</b> electronic keyless locks, deadbolts, and Mortise locks. They also provide cabinet and drawer pulls for interior spaces like Kitchen cabinets and bathroom cabinets.|$|R
50|$|Vector {{processors}} {{use this}} technique with one additional trick. Because the data layout is in a known format — {{a set of}} numbers arranged sequentially in memory — the pipelines can be tuned to improve the performance of fetches. On the receipt of a vector instruction, special <b>hardware</b> <b>sets</b> up the memory access for the arrays and stuffs the data into the processor as fast as possible.|$|R
50|$|It is {{the first}} and only SNK <b>hardware</b> <b>set</b> capable of {{rendering}} in 3D, and was meant to replace SNK's older MVS system on the market. Company executives planned for the project to bring SNK into the new era of 3D gaming that had arisen during the mid-1990s, and had planned for a corresponding home system to replace the aging and expensive AES home console.|$|E
50|$|In 2006, he {{performed}} at several venues throughout Europe with Justin Maxwell, his newest associate. In October 2007, Tejada and Arian Leviste embarked {{on their first}} tour together throughout Europe. The duo performed a live <b>hardware</b> <b>set</b> at the following venues: Mission (Leeds, UK), Click (Hamburg, Germany), Watergate (Berlin, Germany), Propaganda (Moscow, Russia), Maffia (Reggio Emilia, Italy), Batofar (Paris, France), and Compression @ King King (Los Angeles, California, USA).|$|E
50|$|In October 2007, Leviste and John Tejada {{embarked}} {{on their first}} tour together throughout Europe. The duo performed a live <b>hardware</b> <b>set</b> at the following venues: Mission (Leeds, UK), Click (Hamburg, Germany), Watergate (Berlin, Germany), Propaganda (Moscow, Russia), Maffia (Reggio Emilia, Italy), Batofar (Paris, France), and Compression @ King King (Los Angeles, California, USA). In September 2008 Tejada and Leviste performed at the Nextech Festival in Florence, Italy.|$|E
50|$|Armed {{with the}} proper {{networking}} <b>hardware,</b> Apple <b>set</b> about developing the other key pieces of its business suite.|$|R
5000|$|Configuration for the boot-time <b>hardware</b> probe. <b>Set</b> 'SAFE' to {{something}} other than 'no' to force only safe probes.|$|R
5000|$|On power-up, the <b>hardware</b> <b>sets</b> all the valid bits {{in all the}} caches to [...] "invalid". Some systems {{also set}} a valid bit to [...] "invalid" [...] at other times, such as when multi-master bus {{snooping}} hardware in the cache of one processor hears an address broadcast from some other processor, and realizes that certain data blocks in the local cache are now stale and should be marked invalid.|$|R
50|$|Final Fight (lead=yes) is a side-scrolling beat-'em-up {{video game}} {{produced}} by Capcom. Originally released as an arcade game in 1989, {{it was the}} seventh title released for the CP System <b>hardware.</b> <b>Set</b> in the fictional Metro City, the player controls one of three characters: former pro wrestler and mayor Mike Haggar, his daughter's boyfriend Cody, and Cody's best friend Guy, as {{they set out to}} defeat the Mad Gear gang and rescue Haggar's young daughter Jessica.|$|E
50|$|The JTRS {{was built}} on the Software Communications Architecture (SCA), an open-architecture {{framework}} that tells designers how hardware and software are to operate in harmony. It governs the structure and operation of the JTRS, enabling programmable radios to load waveforms, run applications, and be networked into an integrated system. A Core Framework, providing a standard operating environment, must be implemented on every <b>hardware</b> <b>set.</b> Interoperability among radio sets was increased because the same waveform software can be easily ported to all radios.|$|E
50|$|The {{original}} Z64 has a <b>hardware</b> <b>set</b> {{limit of}} 128 megabits. Because {{it is not}} capable of addressing any RAM above 16 megabytes, the user can not upgrade the RAM in order play bigger games. Once 256 megabit games became more prevalent, the parent company released hardware version 2.0 which includes a fully addressable 32 megabyte RAM chip, allowing the larger games to play. The 1.0 units can not be upgraded to 2.0. No further hardware revision {{has been made to}} allow for the playing of the few 512 megabit games that were released.|$|E
5000|$|All cable {{connectors}} from subject (source) side {{act as a}} write blocker, being read-only via the on-board <b>hardware</b> chip <b>set.</b>|$|R
40|$|The {{decreasing}} hardware cost {{makes it}} affordable to pair Immersive Virtual Environments (IVR) visors with treadmills and exercise bikes. In this paper, {{we discuss the}} application of different gamification techniques in IVR for supporting physical exercise. We describe both the <b>hardware</b> <b>setting</b> and the design of Rift-a-bike, a cycling fitmersive game (immersive games for fitness). We {{evaluate the effectiveness of}} such techniques through a user study, which provides different insights on their effectiveness in designing such applications...|$|R
25|$|The steady {{success in}} {{hardware}} trading has encouraged the Al-Muhaidib <b>Hardware</b> to <b>set</b> up divisions exclusively for supplying contractors, builders and wood manufactures with hardware accessories.|$|R
5000|$|By 1925, Frantz {{garage door}} offerings {{included}} [...] "Swinging Door", [...] "Folding Door", [...] "Pivot Door", and [...] "Around the Corner Door" [...] hardware sets along with glide hangers {{many of which}} were patented. In 1930, development began on an [...] "OVER-THE-TOP" [...] garage door <b>hardware</b> <b>set</b> which gained popularity. A patent was issued in September 1933. Following World War II, hardware for sectional doors was developed and in 1950, Frantz introduced its Model 200 Garage Door Series. Along with the hardware sets, wooden sectional panels were offered and gained popularity. In 1958, Frantz bought a controlling interest in Sterling Electronic Door Control Corporation which had earlier patented a new concept in garage door openers. Frantz then began marketing the openers with the doors. In 1959, Frantz introduced the first successful lightweight fiberglass garage door to the marketplace under the brand name [...] "Filuma". By 1993, Building Products were being sold through six distribution centers in the United States and three distribution centers in Canada. On May 25, 1994, Frantz sold its Building Products Division to Wayne-Dalton Corporation, a privately held manufacturer of garage doors and related products.|$|E
50|$|The first {{installment}} was titled Soul Edge in the arcades, and was updated to Soul Edge Ver. II and exported overseas as Soul Blade on the Sony PlayStation <b>hardware.</b> <b>Set</b> {{in the late}} sixteenth century, the game follows nine warriors in a quest, each of whom {{has his or her}} own reasons for joining the quest but they all share a common goal: to obtain the legendary sword, called 'Soul Edge'. Sega's Golden Axe had employed a similar storyline and setting. After appearing first in arcades, the game was made available for the PlayStation consoles in 1996. Along with its soundtrack, this weapon-based title has been widely praised for being innovative yet traditional to the fighting genre of games. With Versus (one-on-one battle mode), Survival (take on a gauntlet of opponents until the player is unable to continue), Time Attack, Team Battle (a selection of combatants will take on an opposing group, a victor is announced when the last remaining member of a team is defeated) and Training modes, the console port also saw the addition of Edge Master, a single-player mode in which the player would guide one of the ten main characters in a story-like manner while obtaining a variety of weapons for use.|$|E
40|$|We {{demonstrate}} circuits {{that generate}} set and integer partitions {{on a set}} S of n objects {{at a rate of}} one per clock. Partitions are ways to group elements of a set together and have been extensively studied by researchers in algorithm design and theory. We offer two versions of a <b>hardware</b> <b>set</b> partition generator. In the first, partitions are produced in lexicographical order in response to successive clock pulses. In the second, an index input determines the set partition produced. Such circuits are useful in the hardware implementation of the optimum distribution of tasks to processors. We show circuits for integer partitions as well. Our circuits are combinational. For large n, they can have a large delay. However, one can easily pipeline them to produce one partition per clock period. We show (1) analytical and (2) experimental time/complexity results that quantify the efficiency of our designs. For example, our results show that a <b>hardware</b> <b>set</b> partition generator running on a 100 MHz FPGA produces partitions at a rate that is approximately 10 times the rate of a software implementation on a processor running at 2. 26 GHz...|$|E
40|$|A {{systematic}} {{rationale for}} selecting a cost-effective guidance and navigation (G & N) autonomy {{level for the}} solar electric propulsion stage (SEPS) vehicle is developed. After a definition of autonomy levels, a mission analysis is performed for representative SEPS missions using realistic G & N sensor hardware. Cost data for fabricating, integrating and refurbishing onboard avionics hardware and the ground costs corresponding to each autonomy level are generated. Results are presented that indicate performance of various G & N sensor <b>hardware</b> <b>sets</b> and the dominating factors which influence G & N autonomy level selection...|$|R
5000|$|... {{it forces}} the {{programmer}} to {{program for the}} particular <b>hardware</b> and instruction <b>set</b> ...|$|R
50|$|During this phase, {{the final}} version of the system is {{implemented}} by the organization: the <b>hardware</b> is <b>set</b> up, the software is installed, end user documentation is created and, end users trained to use the program, existing data is entered into the system.|$|R
40|$|The {{transformation}} of a preexisting software system {{into a larger}} and more versatile system with different mission requirements is discussed. The history of this transformation is used to illustrate the use of structured real time programming techniques and tools to produce maintainable and somewhat transportable systems. The predecessor system is a single ground diagnostic system; its purpose is to exercise a computer controlled <b>hardware</b> <b>set</b> prior to its deployment in its functional environment, as well as test the equipment set by supplying certain well known stimulas. The successor system (FTE) is required to perform certain testing and control functions while this <b>hardware</b> <b>set</b> is in its functional environment. Both systems must deal with heavy user input/output loads and a new I/O requirement {{is included in the}} design of the FTF system. Human factors are enhanced by adding an improved console interface and special function keyboard handler. The additional features require the inclusion of much new software to the original set from which FTF was developed. As a result, it is necessary to split the system into a duel programming configuration with high rates of interground communications. A generalized information routing mechanism is used to support this configuration...|$|E
40|$|The {{article of}} record as {{published}} may be located at [URL] 10. 1145 / 2629472 We demonstrate circuits that generate set and integer partitions {{on a set}} S of n objects {{at a rate of}} one per clock. Partitions are ways to group elements of a set together and have been extensively studied by researchers in algorithm design and theory. We offer two versions of a <b>hardware</b> <b>set</b> partition generator. In the first, partitions are produced in lexicographical order in response to successive clock pulses. In the second, an index input determines the set partition produced. Such circuits are useful in the hardware implementation of the optimum distribution of tasks to processors. We show circuits for integer partitions as well. Our circuits are combinational. For large n, they can have a large delay. However, one can easily pipeline them to produce one partition per clock period. We show (1) analytical and (2) experimental time/complexity results that quantify the efficiency of our designs. For example, our results show that a <b>hardware</b> <b>set</b> partition generator running on a 100 MHz FPGA produces partitions at a rate that is approximately 10 times the rate of a software implementation on a processor running at 2. 26 GHz...|$|E
40|$|The {{objective}} of this thesis is to finding a solution for mobile computer audio recording and editing. We are searching for appropriate solutions based on defined needs. For calculations we have used the multi-criteria selection method. To be exact, we are searching for computers and external sound cards. The result is {{the location of the}} computer and the sound card. It is a <b>hardware</b> <b>set,</b> which can be used for amateur or semi-professional audio work. The thesis describes more possible solutions and shows {{the advantages and disadvantages of}} them...|$|E
40|$|Abstract. Agile {{software}} development {{methods have been}} suggested as useful in many situations and contexts. However, only few (if any) exp eriences are available {{regarding the use of}} agile methods in embedded domain where the <b>hardware</b> <b>sets</b> tight requirements for the software. This development domain is arguably far away from the agile home ground. This paper explores the possibility of using agile development techniques in this environment and defines the requirements for new agile methods targeted to facilitate the development of embedded software. The findings are based on an empirical study over a period 12 months in the development of low-level telecommunications software. We maintain that by addressing the requirements we discovered, agile methods can be successful also in the embedded software domain. ...|$|R
40|$|Different {{attitude}} control strategies {{of a small}} satellite are {{presented in this paper}} as well as their simulation with the MATLAB ® software. Firstly, the linear mathematical model of the satellite is derived for the gravity gradient (GG) control method, which represents a passive control design. Simulation results show that the response of the satellite to initial conditions is marginally stable. The second phase of the study focuses on the design of a control algorithm used to damp the satellite oscillations around its equilibrium position with a simple <b>hardware</b> <b>setting</b> added to the satellite. The mathematical model of the new system is developed and simulation about the roll and yaw axis are realized. A consequent amelioration in the satellite response can be observed...|$|R
50|$|<b>Hardware</b> abstractions are <b>sets</b> of {{routines}} {{in software}} that emulate some platform-specific details, giving programs {{direct access to}} the hardware resources.|$|R
40|$|Molecular {{contamination}} is a known area {{of concern}} for spacecraft. To mitigate this risk, projects involving space flight <b>hardware</b> <b>set</b> requirements in a contamination control plan that establishes an allocation budget for the exposure of non-volatile residues (NVR) onto critical surfaces. The purpose of this work will focus on non-contact surface analysis and in situ monitoring to mitigate molecular contamination on space flight hardware. By using Scanning Electron Microscopy and Energy Dispersive Spectroscopy (SEM-EDS) with Raman Spectroscopy, an unlikely contaminant was identified on space flight hardware. Using traditional and surface analysis methods provided the broader view of the contamination sources allowing for best fit solutions to prevent any future exposure...|$|E
40|$|Abstract. This paper {{reports about}} the 2004 {{comparative}} evaluation of solvers for quantified Boolean formulas (QBFs), the second {{in a series of}} non-competitive events established with the aim of assessing the advancements in the field of QBF reasoning and related research. We evaluated sixteen solvers on a test set of about one thousand benchmarks, selected from instances submitted to the evaluation and from those available at www. qbflib. org. In the paper we present the evaluation infrastructure, from the criteria used to select the benchmarks to the <b>hardware</b> <b>set</b> up, and we show different views about the results obtained, highlighting the strength of different solvers and the relative hardness of the benchmarks included in the test set. ...|$|E
40|$|This paper {{reports about}} the 2005 {{comparative}} evaluation of solvers for quantified Boolean formulas (QBFs), the third {{in a series of}} non-competitive events established with the aim of assessing the advancements in the eld of QBF reasoning and related research. We evaluated thirteen solvers on a test set of more than three thousands QBFs, selected from instances submitted to the evaluation and from those available at www. qbflib. org. In the paper we present the evaluation infrastructure, from the criteria used to assemble the test set to the <b>hardware</b> <b>set</b> up, and we show dierent views about the results obtained, highlighting the strength of dierent solvers and the relative hardness of the instances included in the test set...|$|E
40|$|Some {{issues in}} the {{relationship}} of coding style and compiler optimization are discussed with regard to Fortran 90 array notation. A review of several important Fortran 90 array constructs and their performance on vector and scalar <b>hardware</b> <b>sets</b> {{the stage for a}} more detailed example based on the kernel of a finite difference computational fluid dynamics model, specifically the nonlinear shallow water equations. Special attention is paid to the optimization of memory use and memory traffic. It is shown that the style of coding interacts with the rules of Fortran 90 and {{the current state of the}} art of Fortran 90 compilers to produce a fairly wide range of performance levels. Although performance degradations are typically small, a few cases of more serious loss of effciency are identified and discussed...|$|R
40|$|Agile {{software}} development {{methods have been}} suggested as useful in many situations and contexts. However, only few (if any) experiences are available {{regarding the use of}} agile methods in embedded domain where the <b>hardware</b> <b>sets</b> tight requirements for the software. This development domain is arguably far away from the agile home ground. This paper explores the possibility of using agile development techniques in this environment and defines the requirements for new agile methods targeted to facilitate the development of embedded software. The findings are based on an empirical study over a period 12 months in the development of low-level telecommunications software. We maintain that by addressing the requirements we discovered, agile methods can be successful also in the embedded software domain. Comment: This is the author's version of the the published paper. The copyright holder's version can be retrieved from [URL]...|$|R
5000|$|Dicer (2010) {{consists}} {{of a pair of}} <b>hardware</b> button <b>sets</b> [...] - [...] five large operational buttons and three mode select buttons [...] - [...] designed to attach to the corners of a turntable or laptop and allow users of DJ applications such as Traktor and Serato the ability to control loops, cues and effects.|$|R
