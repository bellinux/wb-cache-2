9382|8474|Public
5|$|In 2008, a multi-stakeholder {{process was}} {{initiated}} by the World Wildlife Fund and the International Finance Corporation, the private development arm of the World Bank, bringing together industry, supply chain intermediaries, <b>end-users,</b> farmers and civil society organisations to develop standards for certifying the derivative products of sugar cane, {{one of which is}} ethanol fuel.|$|E
5|$|With {{contamination}} of the Excedrin at the source having been ruled out, investigators began to focus their investigation on the <b>end-users</b> of the product. The FBI began an investigation into possible product tampering having {{been the source of}} the poison. At the time, Excedrin was packaged in plastic bottles with the mouth of the bottle sealed with foil and the lid secured to the bottle with plastic wrap.|$|E
25|$|<b>End-users</b> layer: or the users/players of the games.|$|E
50|$|Many <b>end-user</b> {{development}} activities are collaborative in nature, including collaboration between professional developers and <b>end-user</b> developers and collaboration among <b>end-user</b> developers.|$|R
40|$|Abstract. The {{contemporary}} {{practice of}} medicine, which is concerned both with national standards of audit and innovation through local customisation, {{is a prime}} domain for <b>end-user</b> development. In this paper we describe four experiences of <b>end-user</b> development in this domain that offer interesting empirical examples. We look at existing practices through considering <b>end-user</b> customisation of paper charts (1), compare the <b>end-user</b> customisation facilities provided by two applications for electronic patient records (2), assess the structure of an actual <b>end-user</b> development using one of these (3), and propose a longitudinal study of <b>end-user</b> customisation building on this work (4). Keywords. Patient records, Healthcare, <b>End-user</b> customisation...|$|R
40|$|Abstract. <b>End-user</b> {{programming}} {{has become}} ubiquitous, {{so much so}} that there are more <b>end-user</b> programmers today than there are professional programmers. <b>End-user</b> programming empowers—but to do what? Make really bad decisions based on really bad programs? Enter software engineering’s focus on quality. Considering software quality is necessary, because there is ample evidence that the programs end users create are filled with expensive errors. In this paper, I consider what happens when we add to <b>end-user</b> programming environments considerations of software quality, going beyond the “create a program ” aspect of <b>end-user</b> programming. I describe a philosophy to software engineering for end users, and then survey several projects in this area. A basic premise is that <b>end-user</b> software engineering can only succeed {{to the extent that it}} respects the fact that the user probably has little expertise or even interest in software engineering. Keywords: <b>End-user</b> software engineering, <b>End-user</b> programming, <b>End-user</b> development. ...|$|R
25|$|The {{evaluation}} of digital watermarking schemes may provide detailed information for a watermark designer or for <b>end-users,</b> therefore, different evaluation strategies exist. Often {{used by a}} watermark designer is the {{evaluation of}} single properties to show, for example, an improvement. Mostly, <b>end-users</b> {{are not interested in}} detailed information. They want to know if a given digital watermarking algorithm may be used for their application scenario, and if so, which parameter sets seems to be the best.|$|E
25|$|A {{wholesale}} electricity market exists when competing generators {{offer their}} electricity output to retailers. The retailers then re-price the electricity {{and take it}} to market. While wholesale pricing used to be the exclusive domain of large retail suppliers, increasingly markets like New England are beginning to open up to <b>end-users.</b> Large <b>end-users</b> seeking to cut out unnecessary overhead in their energy costs are beginning to recognize the advantages inherent in such a purchasing move. Consumers buying electricity directly from generators is a relatively recent phenomenon.|$|E
25|$|Many regard {{syndication}} of site {{content as}} a Web 2.0 feature. Syndication uses standardized protocols to permit <b>end-users</b> {{to make use}} of a site's data in another context (such as another Web site, a browser plugin, or a separate desktop application). Protocols permitting syndication include RSS (really simple syndication, also known as Web syndication), RDF (as in RSS 1.1), and Atom, all of which are XML-based formats. Observers have started to refer to these technologies as Web feeds. Specialized protocols such as FOAF and XFN (both for social networking) extend the functionality of sites and permit <b>end-users</b> to interact without centralized Web sites.|$|E
40|$|Thesis (Ph. D.) [...] University of Washington, 2012 <b>End-user</b> {{interactive}} {{machine learning}} is a promising tool for enhancing human capabilities with data. Recent work has shown that we can create specific applications that employ <b>end-user</b> interactive machine learning. However, we still lack a generalized {{understanding of how to}} design effective <b>end-user</b> interaction with machine learning. This dissertation advances our understanding of this problem by demonstrating effective <b>end-user</b> interaction with machine learning in a variety of new situations and by characterizing the design factors affecting the <b>end-user</b> interactive machine learning process itself. Specifically, this dissertation presents (1) new interaction techniques for <b>end-user</b> creation of image classifiers in an existing <b>end-user</b> interactive machine learning system called CueFlik, (2) a novel system called ReGroup that employs <b>end-user</b> interactive machine learning for the purpose of access control in social networks, (3) a novel system called CueT that supports <b>end-user</b> driven machine learning for computer network alarm triage, and (4) a novel design space characterizing the goals and constraints impacting the <b>end-user</b> interactive machine learning process itself. Together, these contributions can move us beyond ad-hoc designs for specific applications and provide a foundation for future researchers and developers of <b>end-user</b> interactive machine learning systems...|$|R
5000|$|... {{in which}} the relying party {{requests}} that the OpenID provider not interact with the <b>end-user.</b> All communication is relayed through the <b>end-user's</b> user-agent without explicitly notifying the <b>end-user.</b>|$|R
40|$|Cloud {{computing}} systems {{security is}} to improve when <b>end-user</b> communicates with the cloud server. In {{order to make a}} connection between <b>end-user</b> and the Cloud Server, first <b>end-user</b> or Cloud Server make sure that they are communicating with right counterpart. Multi-Key encryption concept is used to encrypt the request message or data which is sent from <b>end-user</b> or also from Cloud Server. Request message sent by <b>end-user</b> to cloud server should matches with the response received from by <b>end-user</b> from cloud server. Multi-key concept takes more number of iteration when compared to single-key concept when trying to validate the requested message. Multi-Key concept is more secured than single-key...|$|R
25|$|For <b>end-users,</b> Cocoa {{applications}} are those written using the Cocoa programming environment. Such applications {{usually have a}} distinctive feel, since the Cocoa programming environment automates many aspects of an application to comply with Apple's human interface guidelines.|$|E
25|$|CNG is transported at high pressure, {{typically}} {{above 200}} bars. Compressors and decompression equipment are less capital intensive {{and may be}} economical in smaller unit sizes than liquefaction/regasification plants. Natural gas trucks and carriers may transport natural gas directly to <b>end-users,</b> or to distribution points such as pipelines.|$|E
25|$|Cagayan de Oro {{due to its}} {{strategic}} location prompted Pilipinas Shell Petroleum Corporation to put up its multi-billion peso fuel import facility, dubbed as the North Mindanao Import Facility (NMIF) to cater to the power and energy needs of millions of residents, motorists and other <b>end-users</b> and consumers in Visayas and Mindanao.|$|E
50|$|Rapid {{application}} development (RAD) is a methodology {{in which a}} system designer produces prototypes for an <b>end-user.</b> The <b>end-user</b> reviews the prototype, and offers feedback on its suitability. This process is repeated until the <b>end-user</b> is satisfied with the final system.|$|R
40|$|Using {{the results}} of the 1993 Medical Library Association (MLA) Hospital Libraries Section survey of hospital-based <b>end-user</b> search services, this article {{describes}} how <b>end-user</b> search services can become an impetus for an expanded information management and technology role for the hospital librarian. An <b>end-user</b> services implementation plan is presented that focuses on software, hardware, finances, policies, staff allocations and responsibilities, educational program design, and program evaluation. Possibilities for extending <b>end-user</b> search services into information technology and informatics, specialized <b>end-user</b> search systems, and Internet access are described. Future opportunities are identified for expanding the hospital librarian's role in the face of changing health care management, advances in information technology, and increasing <b>end-user</b> expectations...|$|R
40|$|<b>End-user</b> programmers’ code (e. g., accountants’ {{spreadsheet}} formulas) {{is fraught}} with errors. To help mitigate this problem, <b>end-user</b> software engineering research is becoming established. However, most of this work has focused on feature usage, rather than debugging strategies. If a debugging tool were to support <b>end-user</b> programmers’ specific debugging strategy needs, what should it take into account and how? To consider the design of such tools, this work contributes a comprehensive overview of <b>end-user</b> debugging strategies at four strategy levels. An example empirical study in Microsoft Excel demonstrates that this view of debugging provides useful insights, and we argue {{that many of these}} insights generalize to other environments. Our results include <b>end-user</b> debugging tactics and the effective and ineffective moves employed to achieve them, ten <b>end-user</b> debugging strategems applied to a new environment, and how these strategems were used within three contexts: by strategy used, by sensemaking step, and by debugging phase. These findings coalesce into a comprehensive overview of <b>end-user</b> debugging strategies and detailed implications for the design of strategy-based <b>end-user</b> debugging tools...|$|R
25|$|The {{design of}} the IPv6 address space differs {{significantly}} from IPv4. The primary reason for subnetting in IPv4 is to improve efficiency in the utilization of the relatively small address space available, particularly to enterprises. No such limitations exist in IPv6, as the large address space available, even to <b>end-users,</b> is not a limiting factor.|$|E
25|$|Application {{performance}} management (APM): the discipline within systems management {{that focuses on}} monitoring and managing the performance and availability of software applications. APM looks at workflow and related IT tools deployed to detect, diagnose, remedy, and report on application performance issues to ensure that application performance meets or exceeds the expectations of <b>end-users</b> and businesses.|$|E
25|$|In {{addition}} to the new user interface, security capabilities, and developer technologies, several major components of the core operating system were redesigned, most notably the audio, print, display, and networking subsystems; while {{the results of this}} work will be visible to software developers, <b>end-users</b> will only see what appear to be evolutionary changes in the user interface.|$|E
25|$|After the OpenID {{has been}} verified, {{authentication}} is considered successful and the <b>end-user</b> is considered logged into the relying party under the identity {{specified by the}} given OpenID (e.g. alice.openid.example.org). The relying party typically then stores the <b>end-user's</b> OpenID along with the <b>end-user's</b> other session information.|$|R
5000|$|... {{to block}} the {{transmission}} of unwanted communications (e.g. spam) to an <b>end-user,</b> only if the <b>end-user</b> has given consent beforehand; or ...|$|R
50|$|It is {{the type}} of user that {{actually}} interacts with the system that has been resigned, unlike the system designer, <b>end-user</b> doesn`t change any instructions of the system (e.g. software code), <b>end-user</b> only inputs operators in order for the system to produce output that would benefit an <b>end-user.</b>|$|R
25|$|Early builds of Boxee {{included}} a built-in BitTorrent client (not in the Windows version), with a frontend for it {{integrated into the}} Boxee interface, {{and there are also}} Torrent links to legal BitTorrent trackers download sites available incorporated by default. The built-in torrent client was later removed. Through Boxee's Python plugin system it was also possible for the <b>end-users</b> to make their own or add unofficial plugins made by third-party persons for other BitTorrent trackers.|$|E
25|$|The {{question}} of the CDDL license's compatibility with the GPL license resurfaced in 2015, when the Linux distribution Ubuntu announced that it intended to make precompiled OpenZFS binary kernel modules available to <b>end-users</b> directly from the distribution's official package repositories. In 2016, Ubuntu announced that a legal review resulted in the conclusion that providing support for ZFS via a binary kernel module was not {{in violation of the}} provisions of the GPL license. Others followed Ubuntu's conclusion, while the FSF and SFC reiterated their opposing view.|$|E
25|$|Smart TV {{platforms}} or middleware have {{a public}} Software development kit (SDK) and/or Native development kit (NDK) for apps so that third-party developers can develop applications for it, and an app store so that the <b>end-users</b> can install and uninstall apps themselves. The public SDK enables third-party companies and other interactive application developers to “write” applications once and see them run successfully on any device that supports the smart TV platform or middleware architecture which it was written for, no matter who the hardware manufacturer is.|$|E
50|$|FTTH {{started with}} a 10 Mbit/s (<b>end-user</b> rate) passive optical network (PON) by Nippon Telegraph and Telephone (NTT) and 100 Mbit/s (<b>end-user</b> rate) with GEPON (Gigabit Ethernet-PON) or {{broadband}} PON in 2006. PON is NTT's major FTTH system but some competitive services offer 1 Gbit/s (at <b>end-user</b> rate) with SS (Single Star).|$|R
25|$|Some {{observers}} {{have suggested that}} OpenID has security weaknesses and may prove vulnerable to phishing attacks. For example, a malicious relaying party may forward the <b>end-user</b> to a bogus identity provider authentication page asking that <b>end-user</b> to input their credentials. On completion of this, the malicious party (who in this case also controls the bogus authentication page) could then {{have access to the}} <b>end-user's</b> account with the identity provider, and then use that <b>end-user's</b> OpenID to log into other services.|$|R
2500|$|An <b>end-user</b> is {{the entity}} {{that wants to}} assert a {{particular}} identity. A relying party (RP) is a web site or application that wants to verify the <b>end-user's</b> identifier. Other terms for this party include [...] "service provider" [...] or the now obsolete [...] "consumer". An identity provider, or OpenID provider (OP) is a service that specializes in registering OpenID URLs or XRIs. OpenID enables an <b>end-user</b> to communicate with a relying party. This communication is done through the exchange of an identifier or OpenID, which is the URL or XRI chosen by the <b>end-user</b> to name the <b>end-user's</b> identity. An Identity provider provides the OpenID authentication (and possibly other identity services). The exchange is enabled by a user-agent, which is the program (such as a browser) used by the <b>end-user</b> {{to communicate with the}} relying party and OpenID provider.|$|R
25|$|In March 2015, It {{introduced}} Act-On Anywhere, a Chrome application allowing users {{access to}} marketing automation data and functionalities across any web-based browser. Allowing users to embed calls-to-action in web pages and blogs from any web-based content management system, this extension along with Act-On’s open APIs, supports a larger vision {{for an open}} marketing ecosystem, in which third-party applications can plug and play with Act-On – ensuring that <b>end-users</b> can continue to leverage their current systems and augment the use of those systems using engagement data collected within marketing automation.|$|E
25|$|DirectShow, being a developer-centric {{framework}} and API, {{does not directly}} offer end-user control over encoding content, nor does it incorporate a user interface for encoding using installed codecs or to different formats; instead, it relies on developers to develop software using the API. In contrast, other multimedia frameworks such as QuickTime or Video for Windows allow <b>end-users</b> to perform basic video-related tasks such as re-encoding using a different codec and editing files and streams. The convenience offered by an end-user GUI is apparent since the AVI format and codecs used by Video for Windows still remain in use, for example VirtualDub.|$|E
25|$|A {{hydraulic}} power network {{is a system}} of interconnected pipes carrying pressurized liquid used to transmit mechanical power from a power source, like a pump, to hydraulic equipment like lifts or motors. The system is analogous to an electrical grid transmitting power from a generating station to <b>end-users.</b> Only a few {{hydraulic power}} transmission networks are still in use; modern hydraulic equipment has a pump built into the machine. In the late 19th century, a hydraulic network might {{have been used in}} a factory, with a central steam engine or water turbine driving a pump and a system of high-pressure pipes transmitting power to various machines.|$|E
40|$|It is {{estimated}} that by 2005, there will be 55 million <b>end-user</b> programmers compared to 2. 75 million professional programmers. Even though <b>end-user</b> programs have the same reliability problems, software engineering research has largely ignored the <b>end-user</b> community. Because end users are different from professional programmers in motivation, background, and interests, the <b>end-user</b> community cannot be served by repacking tools and techniques developed for professional programmers. This article describes our work in developing software engineering devices for spreadsheet developers, {{one of the largest}} classes of <b>end-user</b> programmers. Software engineering research has focused on aiding programmers throughout the software development and maintenance process. However, this focus has been on professional programmers and has largely ignored the sizeable <b>end-user</b> programmer community. It is predicted that by 2005 in the United States alone there will be 55 million enduse...|$|R
5000|$|An <b>end-user</b> is {{the entity}} {{that wants to}} assert a {{particular}} identity. A relying party (RP) is a web site or application that wants to verify the <b>end-user's</b> identifier. Other terms for this party include [...] "service provider" [...] or the now obsolete [...] "consumer". An identity provider, or OpenID provider (OP) is a service that specializes in registering OpenID URLs or XRIs. OpenID enables an <b>end-user</b> to communicate with a relying party. This communication is done through the exchange of an identifier or OpenID, which is the URL or XRI chosen by the <b>end-user</b> to name the <b>end-user's</b> identity. An Identity provider provides the OpenID authentication (and possibly other identity services). The exchange is enabled by a user-agent, which is the program (such as a browser) used by the <b>end-user</b> {{to communicate with the}} relying party and OpenID provider.|$|R
50|$|Development of <b>end-user</b> {{applications}} {{was possible}} but required {{investment in a}} card-writer {{in addition to the}} forms software from Eden Group, which restricted <b>end-user</b> development.|$|R
