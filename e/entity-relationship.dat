825|6|Public
25|$|The RDF {{data model}} {{is similar to}} {{classical}} conceptual modeling approaches (such as <b>entity–relationship</b> or class diagrams). It {{is based on the}} idea of making statements about resources (in particular web resources) in expressions of the form subject–predicate–object, known as triples. The subject denotes the resource, and the predicate denotes traits or aspects of the resource, and expresses a relationship between the subject and the object.|$|E
50|$|The {{enhanced}} <b>entity-relationship</b> (EER) model (or extended <b>entity-relationship</b> model) {{in computer}} science is a high-level or conceptual data model incorporating extensions to the original <b>entity-relationship</b> (ER) model, used {{in the design of}} databases.|$|E
50|$|In {{software}} engineering, an <b>entity-relationship</b> model (ERM) is {{an abstract}} and conceptual representation of data. <b>Entity-relationship</b> modeling is a database modeling method, {{used to produce}} a type of conceptual schema or semantic data model of a system, often a relational database, and its requirements in a top-down fashion. Diagrams created by this process are called <b>entity-relationship</b> diagrams, ER diagrams, or ERDs.|$|E
5000|$|... #Subtitle level 2: <b>Entity-relationships</b> and {{semantic}} modeling ...|$|R
40|$|Adage is an {{incremental}} software development support environment**. Adage architecture is underlined by {{the concept of}} wide-spectrum services around a common data model, the GDL. This model extends the <b>entity-relationships</b> model and provides useful concepts to support genericity and incrementality like inheritance and self-reflexion. Services respond both to end-user and administrator requirements. The last point is achieved through an active help for tool integration and tool building and so for making the environment evolve to cover the needs...|$|R
40|$|Abstract. Requirements {{modeling}} {{has been}} applied in CASE technologies to formalize knowledge needed for constructing models of information systems. The problem is to acquire knowledge from requirements texts and represent it as intermediate requirements model for <b>entity-relationships</b> or object oriented modeling. Proposed approach is based on formalization of entities and their attributes as formal contexts. It is shown that formal contexts created {{on the set of}} conceptual graphs extracted from requirements text may serve as data source for requirements models have been applied in real CASE technologies...|$|R
50|$|An <b>entity-relationship</b> model (ERM), {{sometimes}} referred to as an <b>entity-relationship</b> diagram (ERD), is an abstract conceptual data model (or semantic data model) used in software engineering to represent structured data. There are several notations used for ERMs.|$|E
50|$|ERIL (<b>Entity-Relationship</b> and Inheritance Language) is {{a visual}} {{language}} for representing the data {{structure of a}} computer system.As its name suggests, ERIL is based on <b>entity-relationship</b> diagrams and class diagrams.ERIL combines the relational and object-oriented approaches to data modeling.|$|E
50|$|The <b>entity-relationship</b> model {{proposes a}} {{technique}} that produces <b>entity-relationship</b> diagrams (ERDs), which can be employed to capture information about data model entity types, relationships and cardinality. A Crow's foot shows a one-to-many relationship. Alternatively a single line represents a one-to-one relationship.|$|E
40|$|Extracting domain-specific <b>entity-relationships</b> {{is useful}} {{in a wide variety}} of applications. For example, {{knowledge}} of camera companies and their product hierarchies can help photography-related search engines greatly in improving search interfaces. In this paper we describe an unsupervised approach for extracting prominent domain specific entityrelationships from query logs. Our approach is complementary to other entity extraction methods. It first constructs a weighted directed graph with query keywords as nodes and then prunes out edges not likely to represent useful relations. Experiments with multiple domains show promising results with over 80 % precision...|$|R
40|$|In {{this paper}} {{we present a}} {{framework}} for the fast prototyping of visual languages exploiting their local context based specification. In previous research, the local context specification {{has been used as}} a weak form of syntactic specification to define when visual sentences are well formed. In this paper we add new features to the local context specification in order to fully specify complex constructs of visual languages such as <b>entity-relationships,</b> use case and class diagrams. One of the advantages of this technique is its simplicity of application and, to show this, we present a tool implementing our framework. Moreover, we describe a user study aimed at evaluating the effectiveness and the user satisfaction when prototyping a visual language...|$|R
40|$|This paper {{focuses on}} data {{modeling}} for traceability of material/work flow in informationlayer of manufacturing control system. The model {{is able to}} trace all associated data throughout theproduct manufacturing from order to final product. Dynamic data processing of Quality and Purchaseactivities are considered in data modeling as well as Order and Operation base on lots particulars. Themodeling consisted of four steps and integrated as one final model. <b>Entity-Relationships</b> Modeling asdata modeling methodology is proposed. The model is reengineered with Toad Data Modeler softwarein physical modeling step. The developed model promises to handle fundamental issues of atraceability system effectively. It supports for customization and real-time control of material in flowin all levels of manufacturing processes. Through enhanced visibility and dynamic store/retrieval ofdata, all traceability usages and applications is responded. Designed solution is initially applicable asreference data model in identical lot-base traceability system. QC 20150618 </p...|$|R
5000|$|Conceptual Database Design: an <b>Entity-Relationship</b> Approach (Benjamin-Cummings, 1992) ...|$|E
5000|$|... #Subtitle level 3: Higher Order Extended <b>Entity-relationship</b> model ...|$|E
5000|$|The <b>entity-relationship</b> {{approach}} (E-R) of Dr Peter Chen (UCLA).|$|E
5000|$|Peter Chen, {{known for}} the {{development}} of <b>entity-relationship</b> modeling.|$|E
5000|$|... #Subtitle level 3: <b>Entity-relationship</b> {{modeling}} and conceptual data modeling ...|$|E
50|$|Another data model, the <b>entity-relationship</b> model, {{emerged in}} 1976 and gained {{popularity}} for database design as it emphasized a more familiar description than the earlier relational model. Later on, <b>entity-relationship</b> constructs were retrofitted as a data modeling construct for the relational model, {{and the difference}} between the two have become irrelevant.|$|E
5000|$|... #Caption: An <b>entity-relationship</b> diagram for an MMORPG using Chen's notation.|$|E
5000|$|... 2000. <b>Entity-Relationship</b> Modeling Foundations of Database Technology. Springer, Berlin 2000, [...]|$|E
50|$|A similar {{technique}} used for database design is <b>Entity-Relationship</b> Modeling (ER Modeling).|$|E
50|$|This language's {{purpose is}} to define the {{structure}} of an <b>Entity-relationship</b> diagram.|$|E
50|$|Metadata {{repositories}} can {{be designed}} as either an <b>Entity-relationship</b> model, or an Object-oriented design.|$|E
5000|$|In his {{original}} 1976 article Chen explicitly contrasts <b>entity-relationship</b> diagrams with record modelling techniques: ...|$|E
5000|$|... #Caption: [...] All 4 MOF {{levels for}} <b>Entity-Relationship</b> Diagrams {{displayed}} in the ConceptBase Graph Editor ...|$|E
50|$|REA {{systems have}} usually been modeled as {{relational}} databases with <b>entity-relationship</b> diagrams, {{though this is}} not compulsory.|$|E
50|$|Value range {{structure}} diagrams (also {{known as}} FMC Entity Relationship Diagrams) {{can be compared}} with the <b>Entity-relationship</b> model.|$|E
50|$|Like <b>entity-relationship</b> models, domain {{models can}} be used to model {{concepts}} or to model real world objects and events.|$|E
5000|$|Prior to this Dr. Markowitz has {{conducted}} research connecting the Relational model with the <b>Entity-relationship</b> model. He {{is also the}} inventor of both ERROL - An <b>Entity-Relationship</b> Role-Oriented query Language, and the related Reshaped relational algebra (RRA), developed as his M.Sc. project. [...] For this he won the 1984 Computer Science Award of ILA - The Israeli Information Technology Association, together with his M.Sc. adviser Dr. Yoav Raz and the ERROL-to-RRA compiler developer Reuven Cohen.|$|E
5000|$|... 1976. [...] "The <b>Entity-Relationship</b> Model--Toward a Unified View of Data". In: ACM Transactions on Database Systems 1/1/1976 ACM-Press ISSN 0362-5915, S. 9-36 ...|$|E
5000|$|Visual schema/E-R design: {{the ability}} to draw <b>entity-relationship</b> {{diagrams}} for the database. If missing, the following two features will also be missing ...|$|E
50|$|Database designs {{also include}} ER (<b>entity-relationship</b> model) diagrams. An ER diagram is a diagram {{that helps to}} design {{databases}} in an efficient way.|$|E
5000|$|The {{enhanced}} <b>entity-relationship</b> model (EER modeling) introduces several concepts not in ER modeling, but {{are closely}} related to object-oriented design, like is-a relationships.|$|E
5000|$|Structured Analysis (SA) editors for <b>entity-relationship</b> diagrams, {{data and}} event flow diagrams, state {{transition}} diagrams, function refinement trees, transaction-use tables and function-entity type tables.|$|E
5000|$|There {{are several}} notations for data modeling. The actual model is {{frequently}} called [...] "Entity relationship model", because it depicts data {{in terms of}} the entities and relationships described in the data. An <b>entity-relationship</b> model (ERM) is an abstract conceptual representation of structured data. <b>Entity-relationship</b> modeling is a relational schema database modeling method, used in software engineering to produce a type of conceptual data model (or semantic data model) of a system, often a relational database, and its requirements in a top-down fashion.|$|E
5000|$|... 1987. [...] "Introducing Data Administration into a Business Organization". With Susan E. Smylie et al. in: Proceedings of the Sixth International Conference on <b>Entity-Relationship</b> Approach. p. 47-51 ...|$|E
