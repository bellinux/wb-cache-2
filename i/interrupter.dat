434|10000|Public
25|$|GFCI (ground fault circuit <b>interrupter)</b> circuit {{breakers}} combine overcurrent protection and differential protection (non-adjustable) in standard, commonly available modules.|$|E
25|$|Residual current breaker with {{over-current}} protection (RCBO) — {{combines the}} functions of an RCD and an MCB in one package. In the United States and Canada, panel-mounted devices that combine ground (earth) fault detection and over-current protection are called ground fault <b>interrupter</b> (GFI) breakers; a wall mounted outlet device or separately enclosed plug-in device providing ground fault detection and interruption only (no overload protection) is called a ground fault circuit <b>interrupter</b> (GFCI).|$|E
25|$|A {{ground fault}} circuit <b>interrupter</b> circuit breaker (GFCI breaker in USA and Canada) and residual-current breaker with {{overload}} (RCBO in Europe) are devices that combine {{the functions of}} a residual-current device with a circuit breaker. They detect both supply imbalance and overload current.|$|E
5000|$|A [...] "reentrant <b>interrupt</b> handler" [...] is an <b>interrupt</b> handler that re-enables <b>interrupts</b> {{early in}} the <b>interrupt</b> handler. This may reduce <b>interrupt</b> latency.In general, while {{programming}} <b>interrupt</b> service routines, it is recommended to re-enable <b>interrupts</b> {{as soon as possible}} in the <b>interrupt</b> handler. This practice helps to avoid losing <b>interrupts.</b>|$|R
50|$|In computing, <b>interrupt</b> latency is {{the time}} that elapses from when an <b>interrupt</b> is {{generated}} to when {{the source of the}} <b>interrupt</b> is serviced. For many operating systems, devices are serviced as soon as the device's <b>interrupt</b> handler is executed. <b>Interrupt</b> latency may be affected by microprocessor design, <b>interrupt</b> controllers, <b>interrupt</b> masking, and the operating system's (OS) <b>interrupt</b> handling methods.|$|R
30|$|MicroBlaze also {{supports}} reset, <b>interrupt,</b> user exception, break and hardware exceptions. For <b>interrupts,</b> MicroBlaze supports only one external <b>interrupt</b> source (connecting to the <b>interrupt</b> input port). If multiple <b>interrupts</b> are needed, an <b>interrupt</b> controller {{must be used}} to handle multiple <b>interrupt</b> requests to MicroBlaze. An <b>interrupt</b> controller is available for use with the Xilinx EDK software tools. The processor will only react to <b>interrupts</b> if the <b>interrupt</b> enable (IE) bit in the MSR is set to 1. On an <b>interrupt</b> the instruction in the execution stage will complete, while the instruction in the decode stage {{is replaced by a}} branch to the <b>interrupt</b> vector (address 0  ×  10). The <b>interrupt</b> return address (the PC associated with the instruction in the decode stage {{at the time of the}} <b>interrupt)</b> is automatically loaded into general-purpose register R 14. In addition, the processor also disables future <b>interrupts</b> by clearing the IE bit in the MSR. The IE bit is automatically set again when executing the RTID instruction.|$|R
25|$|Replacement of {{obsolete}} NEMA 1 receptacles requires either rewiring with {{an additional}} ground conductor for a NEMA 5 receptacle, or a NEMA 5 receptacle complete with a ground fault circuit <b>interrupter</b> for two-wire non-grounded configurations (when a ground conductor is not available).|$|E
25|$|A {{mechanism}} to enable an automatic weapon to fire between the blades of a whirling propeller is usually called an <b>interrupter</b> or synchronizer gear. Both these terms {{are more or}} less misleading, at least in so far as explaining what happens when the gear functions.|$|E
25|$|Residual-current and {{overcurrent}} protection {{may be combined}} in one device for installation into the service panel; this device {{is known as a}} GFCI (ground fault circuit <b>interrupter)</b> breaker in the USA and Canada, and as an RCBO (residual-current circuit breaker with overload protection) in Europe. In the US, GFCI breakers are more expensive than GFCI outlets.|$|E
50|$|In {{computer}} science, a vectored <b>interrupt</b> is a processing {{technique in}} which the <b>interrupting</b> device directs the processor to the appropriate <b>interrupt</b> service routine. This {{is in contrast to}} a polled <b>interrupt</b> system, in which a single <b>interrupt</b> service routine must determine the source of the <b>interrupt</b> by checking all potential <b>interrupt</b> sources, a slow and relatively laborious process.|$|R
50|$|External <b>interrupts</b> are {{triggered}} by falling/rising edges or high/low potential at the <b>interrupt</b> port, {{leading to an}} <b>interrupt</b> request (IRQ) in the controller. Hardware <b>interrupts</b> are divided into maskable <b>interrupts</b> and non-maskable <b>interrupts</b> (NMI). The triggering of maskable <b>interrupts</b> can be stopped in some time-critical functions. If an <b>interrupt</b> is called, the current instruction pointer (IP) is saved on the stack, and the stack pointer (SP) is decremented. The address of the <b>interrupt</b> service routine (ISR) is read from the <b>interrupt</b> vector table and loaded to the IP register, and the ISR is executed as a consequence.|$|R
40|$|Hardware <b>interrupt</b> {{management}} method based on field {{programmable gate array}} is proposed in this study according to the requirement of embedded real-time operating system for real-time performance and the structure model of <b>interrupt</b> management module is also given. <b>Interrupt</b> is subdivided into system and user <b>interrupts</b> owing to different characteristics of <b>interrupt</b> request and response method. <b>Interrupt</b> source management, <b>interrupt</b> vector management, <b>interrupt</b> nesting and clock tick <b>interrupt</b> management have all been implemented by hardware. The simulation results show the feasibility and stability of this kind of <b>interrupt</b> {{management method}}. In a word, the implementation of <b>interrupt</b> management by hardware improves not only the utilization rate of CPU, but also the real-time performance of the whole system...|$|R
25|$|A {{synchronization}} gear, or a gun synchronizer, sometimes rather less accurately {{referred to}} as an <b>interrupter,</b> {{is attached to the}} armament of a single-engined tractor-type aircraft so it can fire through the arc of its spinning propeller without bullets striking the blades. The idea presupposes a fixed armament directed by aiming the aircraft in which it is fitted at the target, rather than aiming the gun independently.|$|E
25|$|He {{was educated}} at Birkenhead School and Shrewsbury School, where he {{demonstrated}} a natural engineering acumen, able to improvise fixes or improvements to almost anything mechanical. During the First World War, {{he created a}} small stir at the War Office by sending them a design for an <b>interrupter</b> gear to allow a machine gun to fire from a propeller-driven aeroplane without damaging the propeller's blades, and also a design for a gyroscopic stabilizer for aircraft.|$|E
25|$|In {{addition}} to Ground Fault Circuit Interrupters (GFCIs), Arc-fault circuit <b>interrupter</b> devices (AFCI) are equally important as they offer added protection from potentially hazardous arc-faults resulting from damage in branch circuit wiring {{as well as}} extensions to branches such as appliances and cord sets. By detecting hazardous arc-faults and responding by interrupting power, AFCIs helps {{reduce the likelihood of}} the home's electrical system being an ignition source of a fire. Dual Function AFCI/GFCI devices offer both electrical fire prevention and shock prevention in one device making them a solution for many rooms in the home, especially when replacing an existing standard receptacle or existing ungrounded receptacle.|$|E
50|$|After {{initialization}} UMMPS {{is entirely}} <b>interrupt</b> driven. The <b>interrupts</b> {{may be due}} to supervisor (SVC) or monitor (MC) call instructions issued by job programs to request services, page fault <b>interrupts</b> for virtual memory pages that are not in real memory when referenced by a job program, program <b>interrupts</b> caused by abnormal conditions in job programs, timer <b>interrupts</b> on behalf of job programs or used internally within the supervisor, <b>interrupts</b> from the input/output subsystem, machine check <b>interrupts,</b> external (operator initiated) <b>interrupts,</b> and <b>interrupts</b> from other processors in a multiprocessor configuration.|$|R
5000|$|An <b>interrupt</b> is an {{indication}} to a thread that it should stop what it is doing and do something else. A thread sends an <b>interrupt</b> by invoking <b>interrupt</b> on the Thread object for the thread to be <b>interrupted.</b> The <b>interrupt</b> mechanism is implemented using an internal flag known as the <b>interrupt</b> status. Invoking [...] sets this flag. By convention, any method that exits by throwing an [...] clears <b>interrupt</b> status when it does so. However, it's always possible that <b>interrupt</b> status will immediately be set again, by another thread invoking <b>interrupt.</b>|$|R
5000|$|Level-triggered <b>interrupt</b> {{is favored}} by some {{because it is}} easy to share the <b>interrupt</b> request line without losing the <b>interrupts,</b> when {{multiple}} shared devices <b>interrupt</b> at the same time. Upon detecting assertion of the <b>interrupt</b> line, the CPU must search through the devices sharing the <b>interrupt</b> request line until one who triggered the <b>interrupt</b> is detected. After servicing this device, the CPU may recheck the <b>interrupt</b> line status to determine whether any other devices also needs service. If the line is now de-asserted, the CPU avoids checking the remaining devices on the line. Since some devices <b>interrupt</b> more frequently than others, and other device <b>interrupts</b> are particularly expensive, a careful ordering of device checks is employed to increase efficiency. The original PCI standard mandated level-triggered <b>interrupts</b> because of this advantage of sharing <b>interrupts.</b>|$|R
25|$|The Hamada pistol is a {{blowback}} {{pistol and}} functionally {{a copy of}} the Browning Model 1910. The most significant design difference between the Hamada pistol and Browning Model 1910 is the replacement of the <b>interrupter</b> lugs used to hold the barrel of the Browning Model 1910 with a dovetail joint. The frame plate lock design and striker assembly were also modified and awarded patents in 1943. The Hamada pistol maintained high quality throughout its production, with the bluing done to a high standard. The safety, rear frame plate, and extractor were heat tempered to a reddish brown and the barrel, striker, and firing mechanism were brightly polished.|$|E
25|$|Arthur Clifford Hartley, CBE (7 January 1889 – 28 January 1960) was a British civil engineer. Graduating with a bachelor's {{degree from}} Imperial College London, Hartley {{worked for the}} North Eastern Railway and an asphalt {{manufacturer}} before joining the Royal Flying Corps during World War I. He became a qualified pilot, with the rank of major and joined the Air Board where he was involved {{with the development of}} <b>interrupter</b> gear. His war work was rewarded with his appointment as an Officer of the Order of the British Empire (OBE). He left the corps after the war and spent five years as a consulting engineer before he joined the Anglo-Persian Oil Company (later Anglo-Iranian).|$|E
25|$|Mixed {{construction}} braced parasol high-wing monoplane, conventional in layout. A fuselage of a {{metal and}} wooden frame, covered with canvas. Wooden two-spar wings, canvas- and plywood-covered, fitted with slats. Wings were folding rearwards (width with folded wings: 3.9 m). Stabilizers of wooden construction. Conventional fixed landing gear, with a rear wheel. Crew of two, sitting in tandem in open cockpits, with twin controls and individual windshields. The observer had a 7.7mm Vickers K machine gun, the pilot had a fixed 7.92mm wz.33 machine gun with an <b>interrupter</b> gear. 9-cylinder air-cooled radial engine PZL G-1620B Mors-II with 430hp (320kW) nominal power and 470hp (350kW) take-off power. Two-blade wooden propeller. A fuel tank with {{a capacity of}} 315 litres in the fuselage, dropped in emergency. The aircraft could be fitted with radio N2L/T and camera.|$|E
25|$|The CPU recognizes seven <b>interrupt</b> levels. Levels 1 through 5 are {{strictly}} prioritized. That is, a higher-numbered <b>interrupt</b> can always <b>interrupt</b> a lower-numbered <b>interrupt.</b> In the status register, a privileged instruction {{allows one to}} set the current minimum <b>interrupt</b> level, blocking lower or equal priority <b>interrupts.</b> For example, if the <b>interrupt</b> level in the status register is set to 3, higher levels from 4 to 7 can cause an exception. Level 7 is a level triggered Non-maskable <b>interrupt</b> (NMI). Level 1 can be <b>interrupted</b> by any higher level. Level 0 means no <b>interrupt.</b> The level is stored in the status register, and is visible to user-level programs.|$|R
5000|$|There was {{a single}} <b>interrupt</b> line on the PDP-8 I/O bus. The {{processor}} handled any <b>interrupt</b> by disabling further <b>interrupts</b> and executing a [...] to location 0000. As {{it was difficult to}} write reentrant subroutines, it was difficult to nest <b>interrupts</b> and this was usually not done; each <b>interrupt</b> ran to completion and re-enabled <b>interrupts</b> just before executing the [...] instruction that returned from the <b>interrupt.</b>|$|R
50|$|The PDP-11 {{supports}} hardware <b>interrupts</b> at four priority levels. <b>Interrupts</b> are {{serviced by}} software service routines, which could specify whether they themselves could be <b>interrupted</b> (achieving <b>interrupt</b> nesting). The event {{that causes the}} <b>interrupt</b> is indicated by the device itself, as it informs the processor of the address of its own <b>interrupt</b> vector.|$|R
25|$|During the First World War Hartley was {{commissioned}} into the Royal Flying Corps {{as a second}} lieutenant on 23 August 1916, and became a qualified pilot. He was promoted lieutenant on 22 February 1918. He ended the war with the rank of major. During the war Hartley joined the armaments section of the Air Board, working with Bertram Hopkinson. He {{was responsible for the}} Air Board's development of George Constantinescu's <b>interrupter</b> gear which allowed a machine gun to be fired through the propeller blades of an aircraft without danger of damage. This invention was said by Air Vice Marshal Sir John Maitland to be responsible for air superiority over German aircraft. He transferred to the Royal Air Force on its establishment as a separate service. He was appointed an Officer of the Order of the British Empire (OBE) on 10 October 1919 in recognition of his war work.|$|E
25|$|In a dual {{resonant}} solid-state Tesla coil (DRSSTC), {{the electronic}} switching of the solid-state Tesla coil {{is combined with}} the resonant primary circuit of a spark-gap Tesla coil. The resonant primary circuit is formed by connecting a capacitor in series with the primary winding of the coil, so that the combination forms a series tank circuit with a resonant frequency near that of the secondary circuit. Because of the additional resonant circuit, one manual and one adaptive tuning adjustment are necessary. Also, an <b>interrupter</b> is usually used to reduce the duty cycle of the switching bridge, to improve peak power capabilities; similarly, IGBTs are more popular in this application than bipolar transistors or MOSFETs, due to their superior power handling characteristics. A current-limiting circuit is usually used to limit maximum primary tank current (which must be switched by the IGBT's) to a safe level. Performance of a DRSSTC can be comparable to a medium-power spark-gap Tesla coil, and efficiency (as measured by spark length versus input power) can be significantly greater than a spark-gap Tesla coil operating at the same input power.|$|E
500|$|Bird {{designed}} his own <b>interrupter</b> circuit {{for delivering}} shocks to patients from a voltaic cell through an induction coil. [...] Previously, the <b>interrupter</b> {{had been a}} mechanical device requiring the physician to turn a cog wheel or employ an assistant to do so. [...] Bird wished to free his hands to apply the electricity more exactly to the required part of the patient. [...] His <b>interrupter</b> worked automatically by magnetic induction at a reasonably fast rate. [...] The faster the <b>interrupter</b> switches, the more frequently an electric shock is delivered to the patient; {{the aim is to}} make the frequency as high as possible.Morus, pp. 250–251 ...|$|E
40|$|<b>Interrupts</b> and in {{particular}} precise <b>interrupts</b> constitute {{an integral part of}} all computer architectures. Implementing precise <b>interrupts</b> can substantially inhibit the performance of computers. To gain some insight into the problem, we divide common <b>interrupts</b> into four classes, and examine the cost of implementing precise <b>interrupts.</b> Two of these classes, external-critical and external-error, can be implemented cheaply on a pipelined processor, with little or no impact on performance. We propose that <b>interrupts</b> be implemented imprecisely, except during debugging, of a third class of <b>interrupts,</b> internal-error <b>interrupts.</b> Finally, we introduced some techniques {{that can be used to}} cheaply implement precise <b>interrupts</b> for the fourth class of <b>interrupts,</b> internal-critical <b>interrupts,</b> but may not apply generally. While the central concern is precision, or lack thereof, we also deal with several peripheral issues that arise when implementing <b>interrupts</b> on aggressive implementation [...] ...|$|R
50|$|The design {{philosophy}} of the Propeller is that a hard real-time multi-core architecture negates the need for dedicated <b>interrupt</b> hardware and support in assembly. In traditional CPU architecture, external <b>interrupt</b> lines are fed to an on-chip <b>interrupt</b> controller and are serviced {{by one or more}} <b>interrupt</b> service routines. When an <b>interrupt</b> occurs, the <b>interrupt</b> controller suspends normal CPU processing and saves internal state (typically on the stack), then vectors to the designated <b>interrupt</b> service routine. After handling the <b>interrupt,</b> the service routine executes a return from <b>interrupt</b> instruction which restores the internal state and resumes CPU processing.|$|R
50|$|A FLIH {{implements}} {{at minimum}} platform-specific <b>interrupt</b> handling similar to <b>interrupt</b> routines. In {{response to an}} <b>interrupt,</b> there is a context switch, and the code for the <b>interrupt</b> is loaded and executed. The job of a FLIH is to quickly service the <b>interrupt,</b> or to record platform-specific critical information which is only {{available at the time}} of the <b>interrupt,</b> and schedule the execution of a SLIH for further long-lived <b>interrupt</b> handling.|$|R
500|$|Bird's <b>interrupter</b> had the {{medically}} disadvantageous {{feature that}} current was supplied {{in opposite directions}} during the make and break operations. [...] Treatment often required the current to be supplied in one specified direction only. [...] Bird produced a unidirectional <b>interrupter</b> using a mechanism now called split rings. [...] This design suffered from the disadvantage that automatic operation was lost and the <b>interrupter</b> had once again to be hand-cranked. [...] Nevertheless, this arrangement remained a cheaper option than electromagnetic generators for some time.Bird, Lectures on Electricity, pp. 119–122 ...|$|E
500|$|A special link {{could be}} {{included}} in the chain which incorporated an <b>interrupter</b> circuit. [...] The purpose of the <b>interrupter</b> is to rapidly connect and disconnect the circuit so that the normally steady current of the battery is turned into a rapidly varying current. [...] The usual practice in the use of medical electrical batteries was to feed the output of the <b>interrupter</b> to an induction coil in order to increase the voltage applied to the patient by transformer action. [...] In Pulvermacher's patent however, {{there is no mention of}} using induction coils - the Pulvermacher battery could produce large voltages merely by adding more links to the chain. [...] However, the <b>interrupter</b> still had an effect in that an interrupted current produces a stronger sensation of electric shock in the patient than a steady current. [...] A novel feature of Pulvermacher's <b>interrupter</b> was that it was operated by the action of a vibrating spring kept in motion by the movements of the patient without the need for any external input. [...] Interrupters of the time typically had to be hand-cranked by the physician, although there were already some in existence using electro-mechanical automatic interrupters. [...] Later versions of the Pulvermacher chain used clockwork driven interrupters whose rate of interruption could be adjusted so that the rate of shock to the patient could be controlled. [...] Such a clockwork <b>interrupter</b> is fitted to the chain shown in figure 1. [...] It is wound up by turning the handle at the left end.Pulvermacher, p.2 ...|$|E
500|$|It {{was already}} {{clear from the}} work of Michael Faraday that {{electricity}} and galvanism were essentially the same. [...] Bird realised this, but continued to divide his apparatus into electrical machines, which (according to him) delivered a high voltage at low current, and galvanic apparatus, which delivered a high current at low voltage. [...] The galvanic equipment available to Bird included electrochemical cells such as the voltaic pile and the Daniell cell, a variant of which Bird devised himself. [...] Also part of the standard equipment were induction coils which, together with an <b>interrupter</b> circuit, were used with one of the electrochemical cells to deliver an electric shock. [...] The electrical (as opposed to galvanic) machines then available were friction-operated electrostatic generators consisting of a rotating glass disc or cylinder on which silk flaps were allowed to drag as the glass rotated. [...] These machines had to be hand-turned during treatment, but it was possible to store small amounts of static electricity in Leyden jars for later use.Payne and McConnellSimpson, pp. 7–8Morus, pp. 179 ...|$|E
50|$|In the x86 architecture, <b>interrupts</b> {{are handled}} through the <b>Interrupt</b> Dispatch Table (IDT). When a device {{triggers}} an <b>interrupt,</b> the <b>interrupt</b> flag (IF) in the flags register is {{set and the}} processor's hardware looks for an <b>interrupt</b> handler in the table entry corresponding to the <b>interrupt</b> number, or IRQ. <b>Interrupt</b> handlers usually save the state of all or some registers before handling it and restore the registers when done.|$|R
5000|$|The {{most common}} cause is when a device [...] "behind" [...] another signals an <b>interrupt</b> to a APIC (Advanced Programmable <b>Interrupt</b> Controller). Most {{computer}} peripherals generate <b>interrupts</b> through an APIC {{as the number of}} <b>interrupts</b> is most always less (typically 15 for the modern PC) than the number of devices. The OS must then query each driver registered to that <b>interrupt</b> to ask if the <b>interrupt</b> originated from its hardware. Faulty drivers may always claim [...] "yes", causing the OS to not query other drivers registered to that <b>interrupt</b> (only one <b>interrupt</b> can be processed at a time). The device which originally requested the <b>interrupt</b> therefore does not get its <b>interrupt</b> serviced, so a new <b>interrupt</b> is generated (or is not cleared) and the processor becomes swamped with continuous <b>interrupt</b> signals. Any operating system can live lock under an <b>interrupt</b> storm caused by such a fault. A kernel debugger can usually break the storm by unloading the faulty driver, allowing the driver [...] "underneath" [...] the faulty one to clear the <b>interrupt,</b> if user input is still possible.|$|R
50|$|Each <b>interrupt</b> {{has its own}} <b>interrupt</b> handler. The {{number of}} {{hardware}} <b>interrupts</b> {{is limited by the}} number of <b>interrupt</b> request (IRQ) lines to the processor, but there may be hundreds of different software <b>interrupts.</b> <b>Interrupts</b> are a commonly used technique for computer multitasking, especially in real-time computing. Such a system is said to be interrupt-driven.|$|R
