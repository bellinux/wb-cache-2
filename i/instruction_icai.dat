23|0|Public
5000|$|Probably the {{earliest}} {{examples of what}} could be considered true IUIs appeared in the Intelligent Computer Assisted <b>Instruction</b> (<b>ICAI,</b> aka. intelligent tutoring systems) community, which arose in the 1960s and 1970s and become popular (among academics) in the 1980s. Also, in the early 1980s, as expert systems took hold in the AI community, expert systems were applied to UIs (e.g., the aptly-named [...] "WIZARD" [...] system). More recent IUIs, such as Clippy, were more statistically-based, using machine learning methods to decide how to tune the interactive experience to the individual user.|$|E
5000|$|The early 1980s {{would also}} see Intelligent Computer-Assisted <b>Instruction</b> (<b>ICAI)</b> and ITS goals diverge from {{their roots in}} CAI. As CAI became {{increasingly}} focused on deeper interactions with content created for a specific area of interest, ITS sought to create systems that focused on knowledge of the task {{and the ability to}} generalize that knowledge in non-specific ways (Larkin & Chabay, 1992). The key goals set out for ITS were to be able to teach a task as well as perform it, adapting dynamically to its situation. In the transition from CAI to ICAI systems, the computer would have to distinguish not only between the correct and incorrect response but the type of incorrect response to adjust the type of instruction. Research in Artificial Intelligence and Cognitive Psychology fueled the new principles of ITS. Psychologists considered how a computer could solve problems and perform 'intelligent' activities. An ITS programme would {{have to be able to}} represent, store and retrieve knowledge and even search its own database to derive its own new knowledge to respond to learner's questions. Basically, early specifications for ITS or (ICAI) require it to [...] "diagnose errors and tailor remediation based on the diagnosis" [...] (Shute & Psotka, 1994, p. 9). [...] The idea of diagnosis and remediation is still in use today when programming ITS.|$|E
40|$|Abstract. With the {{introduction}} of artificial intelligence technology, Intelligent Computer Assisted <b>Instruction</b> (<b>ICAI)</b> not only overcomes many weaknesses of the traditional CAI. But also greatly enhance and improve the teaching quality and efficiency. In this paper, it firstly analysis and study the characteristics {{and structure of the}} ICAI, then proposed the method to achieve ICAI system...|$|E
40|$|Abstract: To use the {{theories}} of artificial intelligence and cognitive science in designing the intelligent computer-assisted <b>instruction</b> (<b>ICAI)</b> systems is a challenging job with much research value. This research collected different types of error patterns that novice learners had during computer programming. These error patterns were analyzed and categorized. The misconception of semantic errors during the programming were also analyzed. The outcome {{will serve as the}} base knowlege for computer programming ICAI system design...|$|E
40|$|Abstract: {{assisted}} instruction (CAI) {{has been}} in use for many years, bringing {{the power of the}} computer to bear on the educational process. Now artificial intelligence methods are being applied to the development of intelligent computer–assisted <b>instruction</b> (<b>ICAI)</b> systems in an attempt to create computerized &quot;tutors &quot; that shape their teaching techniques to fit the learning patterns of individual students. This paper provides some information and conclusions which author gained during analyzing and projecting of such systems...|$|E
40|$|An {{intelligent}} computer-aided <b>instruction</b> (<b>ICAI)</b> program, named GUIDON, {{has been developed}} for teaching infectious disease diagnosis. * ICAI programs use artificial intelligence techniques for representing both subject material and teaching strategies. This paper briefly outlines the difference between traditional instructional programs and ICAI. We then illustrate how GUIDON makes contributions in areas important to medical CAI: interacting with the student in a mixed-initiative dialogue (including the problems of feedback and realism), teaching problem-solving strategies, and assembling a computer-based curriculum...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimited. The main thrust of this thesis is {{the design of}} a usable Intelligent Computer Aided <b>Instruction</b> (<b>ICAI)</b> user interface that does not use a natural language processor and runs on a personal computer. Discrete Mathematics is the knowledge domain for this project and the Discrete Math Tutor (DMT) {{is the name of the}} tutoring system. The DMT will allow the average student to benefit from a tutoring system now and not have to wait until the artificial intelligence researchers solve the natural language interface problem. Leiutenant, United States NavyCaptain, United States Arm...|$|E
40|$|Student {{modeling}} {{has been}} identi ed {{as an important}} component to the long term development of Intelligent Computer-Aided <b>Instruction</b> (<b>ICAI)</b> systems. Two basic approaches have evolved to model student misconceptions. One uses a static, prede ned library of user bugs which contains the misconceptions modeled by the system. The other uses induction to learn student misconceptions from scratch. Here, we present a third approach that uses a machine learning technique called theory revision. Using theory revision allows the system to automatically construct a bug library for use in modeling while retaining the exibility to address novel errors. ...|$|E
40|$|This paper {{examines}} {{research on}} the education of women and girls {{from the perspectives of}} sex differences, gender differences, and feminist studies, with particular reference to the implications of the findings for the design of computer-assisted instruction systems. The four modules of the Ingelligent Computer-Assisted <b>Instruction</b> (<b>ICAI)</b> model [...] domain knowledge, student model, pedagogical knowledge, and interface [...] are then considered in light of the three perspectives, and a framework is developed for comparing, contrasting, and, in some cases, combining problems in instructional design with issues in the education of women and girls. (14 references) (EW) Reproductions supplied by EDRS are the best that can be made from the original document...|$|E
40|$|This thesis {{presents}} {{the design and}} implementation of a rule-based system used for the design and presentation of problem-solving Computer Aided-Learning (CAL) programs. The system is called Tutorial Assistant, acronymed TA, and operates within PC-MATLAB. TA was developed at the McGill University/University of Zimbabwe Engineering CAL Project and {{was an attempt to}} create an Intelligent Computer-Aided <b>Instruction</b> (<b>ICAI)</b> system within PC-MATLAB. After an overview of CAL, the CAL project, and ICAI, several ICAI systems are examined. The implementation of TA and a description of its components follow. Two illustrative example sessions using TA, an evaluation of TA, and an outline for future extensions are presented...|$|E
40|$|Abstract—Traditional Javanese classic {{dance is}} a {{valuable}} inheritance in Java Indonesia. Nowadays, this treasure of culture is no longer belonging to Javanese people only. Many art departments from universities around the world already put this as a subject in their curriculum. Nonetheless, dance is a practical skill. It needs to be practices so often while accompanied by an instructor {{to get the right}} technique. An interactive Computer Aided <b>Instruction</b> (<b>iCAI)</b> that can interactively assist the student to practice is developed. By using this software students can conduct a self practice in studio and get some feedbacks from the software. This CAI is not intended to replace the instructor, but to assist them in increasing the student fly-time in practice. Keywords—Computer Aided Instruction, Javanese classic dance, Accelerometer...|$|E
40|$|Computer-Aided Instruction (CAI) is {{a mature}} {{technology}} {{used to teach}} students {{in a wide variety}} of domains. The introduction of Artificial Intelligence (AI) technology of the field of CAI has prompted research and development efforts in an area known as Intelligent Computer-Aided <b>Instruction</b> (<b>ICAI).</b> In some cases, ICAI has been touted as a revolutionary alternative to traditional CAI. With the advent of powerful, inexpensive school computers, ICAI is emerging as a potential rival to CAI. In contrast to this, one may conceive of Computer-Based Training (CBT) systems as lying along a continuum which runs from CAI to ICAI. Although the key difference between the two is intelligence, there is not commonly accepted definition of what constitutes an intelligent instructional system...|$|E
40|$|While {{the role}} of the user {{interface}} is often stressed from the viewpoint of user-system performance, it is less frequently considered as a basis for user learning. Thus, in his recent survey of research in Intelligent Computer-Assisted <b>Instruction</b> (<b>ICAI),</b> Dede describes the user interface as “a service function with the ICAI system”[l]. (One exception to this neglect is the work of Slator et al., who consider the learning benefits of ‘mnemonic feedback” in a natural language interface 12 f. j The presumption here is that the user interface does nothing more than direct user input and present system output. Yet, current developments in the design of intelligent interfaces suggest the possibility of an interface which acts as a learning environment...|$|E
40|$|In recent years, {{the use of}} {{artificial}} intelligence in education and training has increased rapidly. Computer-assisted learning (CAL) which makes use of expert systems can help improve students' thinking and problem-solving skills. This paper reports on an attempt to build an Intelligent Computer Assisted <b>Instruction</b> (<b>ICAI)</b> system to stimulate the interest of undergraduate students and to familiarise them with claims problems in civil engineering (which is often regarded as a complicated subject). The {{students are expected to}} acquire claims analysis skills after absorbing the experience and knowledge of practical engineers built into the ICAI model. Existing systems and models are briefly studied and a model for use in Hong Kong developed. The paper concludes with a presentation of the students' reaction to the system which is currently under test. link_to_subscribed_fulltex...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedWe constructed an Intelligent Computer Assisted <b>Instruction</b> (<b>ICAI)</b> program to tutor {{the usage of}} the TOPS 20 -MM, an electronic mail facility available on the Defense Data Network (DDN). Learning by experience {{is one of the}} best ways to learn something. The main strategy of tutoring in this thesis was to provide an environment simulating the actual facility that guides the student while he/she tries to perform given tasks. Means-ends analysis, a classic technique for solving search problems in Artificial Intelligence, has been used to figure out the right command to perform a given task. Basic commands, e. g. a command for viewing a message number 7, will be taught first, then the tasks like "Send a message to the people mentioned in message number 3 " will be issued. [URL] Republic of Korea Arm...|$|E
40|$|There is an {{increasing}} demand for computer software which can provide useful personalised feedback to English as a Second Language (ESL) speakers on prosodic aspects of their speech, to supplement the shortage of ESL teachers and {{reduce the cost of}} learning. This thesis concentrates on constructing such an Intelligent Computer Aided <b>Instruction</b> (<b>ICAI)</b> prototype system, particularly focusing on one component — the Speech Analyser. The speech analyser recognises a user’s speech, identifies the rhythmic stress pattern in the speech, discov-ers stress and rhythm errors in the speech, and provides reports for the other component generating personalised feedback to the user on ways of effectively improving the prosodic aspects of the speech. We build an Hidden Markov Model (HMM) based speech recogniser to recognise a user’s speech. A set of parameters for constructing the recogniser is investigated by an exhaustive experiment implemented i...|$|E
40|$|The goal of Intelligent Computer-Aided Engineering (ICAE) is to {{construct}} computer programs which capture a significant fraction of an engineer's knowledge. Today ICAE systems are a goal, not a reality. This paper attempts to refine that goal and suggest {{how to get}} there. We begin by examining several scenarios of what ICAE systems could be like. Next we describe why ICAE won't directly evolve from current applications of expert system technology to engineering problems. We focus on qualitative physics as a critical area where progress is needed, {{both in terms of}} representations and styles of reasoning. To appear in AI Magazine, Fall, 1988. Draft of May 13, 1 Introduction Applications of Artificial Intelligence can provide challenges that drive the field forward. One example is intelligent computer-aided <b>instruction</b> (<b>ICAI)</b> [64]. ICAI research has spawned many important studies of cognition and learning, leading to intellectual advances as well as providing the potential for revoluti [...] ...|$|E
40|$|Model-based {{simulation}} {{systems have}} been created in various fields of engineering to train personnel or students in operation, maintenance and troubleshooting of complex devices and systems. A review of literature indicates a lack of good overviews of the approaches to system design of model-based training simulations in Intelligent Computer Assisted <b>Instruction</b> (<b>ICAI).</b> Though single systems have to some extent been evaluated {{with regard to their}} performance, an organised evaluation, especially a comparative evaluation of the systems that have been created within the field is lacking. To be able to successfully conduct an in-depth review under these conditions, we concentrate and centre our review around the design of the domain simulator component and its implications for the other parts of instructional system. For this purpose we have identified features that are in our opinion suitable to characterise the design approach of a model-based simulation in ICAI for training. We have organised these design features in a framework to enable an effective review. Within this framework, we investigate each feature separately and illustrate it by giving examples from existing applications where appropriate...|$|E
40|$|Ahab, an {{intelligent}} computer-aided <b>instruction</b> (<b>ICAI)</b> program, illustrates an architecture for simulator-based ICAI programs to teach troubleshooting in complex, dynamic environments. The architecture posits three {{elements of a}} computerized instructor: the task model, the student model, and the instructional module. The task model is a prescriptive model of expert performance that uses symptomatic and topographic search strategies {{to provide students with}} directed problem-solving aids. The student model is a descriptive model of student performance {{in the context of the}} task model. This student model compares the student and task models, critiques student performance, and provides interactive performance feedback. The instructional module coordinates information presented by the instructional media, the task model, and the student model so that each student receives individualized instruction. Concept and metaconcept knowledge that supports these elements is contained in frames and production rules, respectively. The results of an experimental evaluation are discussed. They support the hypothesis that training with an adaptive online system built using the Ahab architecture produces better performance than training using simulator practice alone, at least with unfamiliar problems. It is not sufficient to develop an expert strategy and present it to students using offline materials. The training is most effective if it adapts to individual student needs...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimited. Over {{the past twenty}} years, automated tutoring systems have gained an increasing recognition as a prominent area of Artificial Intelligence (AI). During this period, Intelligent Computer Aided <b>Instruction</b> (<b>ICAI)</b> systems have been developed {{using a variety of}} AI techniques to enhance the learning process. The core AI issue in designing these systems concerns knowledge representation. A review of current AI literature shows that there are numerous, distinctly different knowledge representation schemes, and most conventional programming environments do not readily support all of these representation schemes. This thesis proposes that tutoring systems are best designed in a programming environment that supports multiple, integrated knowledge representation schemes. Such an environment allows the designer to select and employ, with ease, the most natural knowledge representation scheme for each type of knowledge in the tutoring system. In this thesis we describe the components of a generalized ICAI system; discuss the various types of knowledge and knowledge representation schemes; and review the knowledge representation schemes used in several noted ICAI systems. In addition, we describe two prototype ICAI systems (Map Reading Tutor and Pilot Emergency Procedure Tutor) which we designed and developed in a specific programming environment that supports multiple, integrated knowledge representation schemes. Captain, United States Arm...|$|E
40|$|Software {{applications}} play {{a critical}} role in many work environments. These applications may be general purpose, such as word-processing and spreadsheet tools, or tailored to specific mission functions, such as systems for airtraffic management and military “command and control ” (C 2). End-user training is critical if these applications are to be adopted and used effectively. With OPTEMPO up, and training budgets under constant pressure to “do more with less, ” it is more important than ever to bring training to the users and enable them to learn whenever they have time, wherever they may be. One way to accomplish this is to embed a training system in the mission application itself. Such embedded training systems (ETSs) have been used to varying degrees throughout the military services, and the United States Army has mandated the use of embedded training techniques for all new systems it procures. Experience has shown that application-operation skills are learned best when trainees are given extensive “handson”, interactive coached practice on the mission application to be used on the job. Our research at MITRE focuses on developing ETSs that approximate the advantages of one-to-one expert human tutoring through the use of intelligent computer-assisted <b>instruction</b> (<b>ICAI)</b> techniques. For ICAI-based ETSs to support interactive coached practice, they must have some means of observing both the trainee’s actions on the mission application, and the application’s response(s) to those actions, and also a way to take control of the mission application for the purpose of demonstratio...|$|E
40|$|The Computer And The Decision-Making Process Contents Preface ix 1. Computer-Assisted Personality Test Interpretation: The Dawn of Discovery Douglas N. Jackson Some Preconditions for Valid Computer- Assisted Test Interpretation 1 The Dawn of Discovery 6 References 9 2. Psychodiagnostic Computing: From Interpretive Programs to Expert Systems 11 Marley W Watkins and Paul A. McDermott Development of Administration and Interpretation Programs 11 Novel Administration and Interpretation Programs 14 Computerized Interpretation Systems 16 A Psychoeducational Diagnostic Model 19 A Computerized Psychoeducational Diagnostic System 23 Summary 36 References 37 3. Assessment of Validity in Computer-Based Test Interpretations Kevin L. Moreland Some History 44 Types of CBTI Systems 45 Validity Studies to Date 51 How to Validate 2 ̆ 2 Automated Clinical 2 ̆ 2 CBTIS 66 Epilogue 67 References 68 4. The Validity of Computer-Based Test Interpretations of the MMPI Lorraine D. Eyde, Dennis M. Kowal, and Francis J. Fishburne, Jr. MMPI Elements for CBTI Use 77 Criticisms of Research on CBTI Systems 80 WRAMC Research Design and Setting 81 Results 93 Discussion 110 Further Research 113 References 114 Appendix A 117 Appendix B 120 5. Use of Computer Technology in Behavioral AssessmentsThomas R. Kratochwill, Elizabeth J. Dol/, and W Patrick Dickson Dimensions of Behavioral Assessment 127 Applications of Microcomputers in Behavioral Assessment 129 Considerations in the Use of Computer- Based Behavioral Assessment 142 Conclusions 149 References 150 6. The Use of the Computer in the Practice of Industrial/Organizational PsychologyLyle F. Schoenfeldt and Jorge L. Mendoza Human Resource Planning 156 Job Analysis 158 Selection 159 Placement 161 Performance Evaluation 164 Computer-Based Training 166 Career Progression 168 Organizational Issues 172 Summary 173 References 174 7. Implementation Decisions in Designing Computer-Based Instructional Testing ProgramsJohn V Noonan and Paul D. Sarvela Introduction 177 Summary 194 References 194 Appendix A 196 8. Issues in Intelligent Computer-Assisted Instruction: Evaluation and Measurement Harold F. O 2 ̆ 7 Neil, Jr., and Eva L. Baker Intelligent Computer-Assisted <b>Instruction</b> (<b>ICAI)</b> 199 Artificial Intelligence and Test Development 217 References 221 9. Legal Issues in Computerized Psychological Testing Donald N. Bersoff and Paul J. Hofer The Legal Profession 2 ̆ 7 s Response to CPT 226 Psychology 2 ̆ 7 s Response to CPT 228 Rights and Responsibilities of Professionals 230 Intellectual Property 232 The Rights of Test Takers 239 Conclusion 241 References 242 10. Guidelines for Computer TestingBert F. Green Establishing the Equivalence of Scores 247 Test Administration 250 Test Interpretations 251 References 253 Appendix 254 The User 2 ̆ 7 s Responsibilities 257 Guidelines for Users of Computer-Based Tests and Interpretations 259 The Developer 2 ̆ 7 s Responsibilities 263 Guidelines for the Developers of Computer-Based Test Services 265 References 272 Author Index 275 Subject Index 28...|$|E
40|$|In {{this chapter}} {{we plan to}} explore two issues {{in the field of}} {{intelligent}} computer assisted <b>instruction</b> (<b>ICAI)</b> that we feel offer opportunities to advance the state of the art. These issues are evaluation of ICAI systems {{and the use of the}} underlying technology in ICAI systems to develop tests. For each issue we will provide a theoretical context, discuss key constructs, provide a brief window to the appropriate literature, suggest methodological solutions and conclude with a concrete example of the feasibility of the solution from our own research. INTELLIGENT COMPUTER-ASSISTED <b>INSTRUCTION</b> (<b>ICAI)</b> ICAI is the application of artificial intelligence to computer-assisted instruction. Artificial intelligence, a branch of computer science, is making computers 2 ̆ 2 smart 2 ̆ 2 in order to (a) make them more useful and (b) understand intelligence (Winston, 1977). Topic areas in artificial intelligence have included natural language processing (Schank, 1980), vision (Winston, 1975), knowledge representation (Woods, 1983), spoken language (Lea, 1980), planning (Hayes-Roth, 1980), and expert systems (Buchanan, 1981). The field of Artificial Intelligence (AI) has matured in both hardware and software. The most commonly used language in the field is LISP (List Processing). A major development in the hardware area is that personal LISP machines are now available at a relatively low cost (20 - 50 K) with the power of prior mainframes. In the software area two advances stand out: (a) programming support environments such as LOOPS (Bobrow 2 ̆ 6 Stefik, 1983) and (b) expert system tools. These latter tools are now running on powerful micros. The application of 2 ̆ 2 expert systems 2 ̆ 2 technology to a host of real-world problems has demonstrated the utility of artificial intelligence techniques in a very dramatic style. Expert system technology is the branch of artificial intelligence at this point most relevant to ICAI. Expert Systems Knowledge-based systems or expert systems are a collection of problem-solving computer programs containing both factual and experiential knowledge and data in a particular domain. When the knowledge embodied in the program is a result of a human expert elicitation, these systems are called expert systems. A typical expert system consists of a knowledge base, a reasoning mechanism popularly called an 2 ̆ 2 inference engine 2 ̆ 2 and a 2 ̆ 2 friendly 2 ̆ 2 user interface. The knowledge base consists of facts, concepts, and numerical data (declarative knowledge), procedures based on experience or rules of thumb (heuristics), and causal or conditional relationships (procedural knowledge). The inference engine searches or reasons with or about the knowledge base to arrive at intermediate conclusions or final results during the course of problem solving. It effectively decides when and what knowledge should be applied, applies the knowledge and determines when an acceptable solution has been found. The inference engine employs several problem-solving strategies in arriving at conclusions. Two of the popular schemes involve starting with a good description or desired solution and working backwards to the known facts or current situation (backward chaining), and starting with the current situation or known facts and working toward a goal or desired solution (forward chaining). The user interface may give the user choices (typically menu-driven) or allow the user to participate in the control of the process (mixed initiative). The interface allows the user: to describe a problem, input knowledge or data, browse through the knowledge base, pose question, review the reasoning process of the system, intervene as necessary, and control overall system operation. Successful expert systems have been developed in fields as diverse as mineral exploration (Duda 2 ̆ 6 Gaschnig, 1981) and medical diagnosis (Clancy, 1981). ICAI Systems ICAI systems use approaches artificial intelligence and cognitive science to teach a range of subject matters. Representative types of subjects include: (a) collection of facts, for example, South American geography in SCHOLAR (Carbonell 2 ̆ 6 Collins, 1973); (b) complete system models, for example, a ship propulsion system in STEAMER (Stevens 2 ̆ 6 Steinberg, 1981) and a power supply in SOPHIE (Brown, Burton, 2 ̆ 6 de Kleer, 1982); (c) completely described procedural rules, for example, strategy learning, WEST (Brown, Burton, 2 ̆ 6 de Kleer, 1982), or arithmetic in BUGGY (Brown 2 ̆ 6 Burton, 1978); (d) partly described procedural rules, for example, computer programming in PROUST (Johnson 2 ̆ 6 Soloway, 1983); LISP Tutor (Anderson, Boyle, 2 ̆ 6 Reiser, 1985); rules in ALGEBRA (McArthur, Stasz, 2 ̆ 6 Hotta, 1987); diagnosis of infectious diseases in GUIDON (Clancey, 1979); and an imperfectly understood complex domain, causes of rainfall in WHY (Stevens, Collins, 2 ̆ 6 Goldin, 1978). Excellent reviews by Barr and Feigenbaum (1982) and Wenger (1987) document many of these ICAI systems. Representative research in ICAI is described by O 2 ̆ 7 Neil, Anderson, and Freeman (1986) and Wenger (1987). Although suggestive evidence has been provided by Anderson et al. (1985), few of these ICAI projects have been evaluated in any rigorous fashion. In a sense they have all been toy systems for research and demonstration. Yet, they have raised a good deal of excitement and enthusiasm about their likelihood of being effective instructional environments. With respect to cognitive science, progress has been made in the following areas: identification and analysis of misconceptions or 2 ̆ 2 bugs 2 ̆ 2 (Clement, Lockhead, 2 ̆ 6 Soloway, 1980), the use of learning strategies (O 2 ̆ 7 Neil 2 ̆ 6 Spielberger, 1979; Weinstein 2 ̆ 6 Mayer, 1986), expert versus novice distinction (Chi, Glaser, 2 ̆ 6 Rees, 1982), the role of mental models in learning (Kieras 2 ̆ 6 Bovair, 1983), and the role of self-explanations in problem solving (Chi, Bassok, Lewis, Reimann, 2 ̆ 6 Glaser, 1987). The key components of an ICAI system consist of a knowledge base: that is, (a) what the student is to learn; (b) a student model, either where the student is now with respect to subject matter or how student characteristics interact with subject matters, and (c) a tutor, that is, instructional techniques for teaching the declarative or procedural knowledge. These components are described in more detail by Fletcher (1985) ...|$|E

