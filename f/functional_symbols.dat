33|23|Public
50|$|Many {{treatments}} of predicate logic don't allow functional predicates, only relational predicates.This is useful, for example, {{in the context}} of proving metalogical theorems (such as Gödel's incompleteness theorems), where one doesn't want to allow the introduction of new <b>functional</b> <b>symbols</b> (nor any other new symbols, for that matter).But there is a method of replacing <b>functional</b> <b>symbols</b> with relational symbols wherever the former may occur; furthermore, this is algorithmic and thus suitable for applying most metalogical theorems to the result.|$|E
50|$|A first-order formula {{with one}} {{universal}} quantification has the fmp. A first-order formula without <b>functional</b> <b>symbols,</b> where all existential quantifications appear {{first in the}} formula, also has the fmp.|$|E
40|$|We {{propose a}} new {{functional}} framework for modeling, querying and reasoning about OLAP databases. The framework represents data (data cubes and dimensional hierarchies) and querying constructs as first-order and second-order <b>functional</b> <b>symbols</b> respectively. A polymorphic attribute-based type system {{is used to}} annotate the <b>functional</b> <b>symbols</b> with proper type information. Furthermore, semantic knowledge about the <b>functional</b> <b>symbols,</b> such as the properties of dimensional hierarchical structures and algebraic identities among query constructs, can be specified by equations which permits equational reasoning on equivalence of OLAP queries and generalized summarizability of aggregate views...|$|E
5000|$|Suppose that {{a closed}} formula [...] is a theorem of a first-order theory , where we denote [...] Let [...] be a theory {{obtained}} from [...] by extending its language with new <b>functional</b> <b>symbol</b> [...] (of arity [...] ) and {{adding a new}} axiom [...] Then [...] is a conservative extension of , i.e. the theories [...] and [...] prove the same theorems not involving the <b>functional</b> <b>symbol</b> [...] ).|$|R
50|$|Specifically, {{the symbol}} F {{in a formal}} {{language}} is a <b>functional</b> <b>symbol</b> if, given any symbol X representing an object in the language, F(X) is again a symbol representing an object in that language.In typed logic, F is a <b>functional</b> <b>symbol</b> with domain type T and codomain type U if, given any symbol X representing an object of type T, F(X) is a symbol representing an object of type U.One can similarly define function symbols {{of more than one}} variable, analogous to functions of more than one variable; a function symbol in zero variables is simply a constant symbol.|$|R
40|$|We generalize a {{well-known}} Smullyan's result, {{by showing that}} any two sets of the kind Ca = {x/⊢ x↔a} and Cb = {x/⊢ x↔b} are effectively inseparable (if I {apl <b>functional</b> <b>symbol</b> slash bar} ↔b). Then we investigate logical and recursive consequences of this fact (see Introduction). © 1981 Kluwer Academic Publishers...|$|R
40|$|This short paper {{addresses}} the open problems {{left in a}} previous paper by Franco Montagna and Carles Noguera. Besides giving solutions to these two problems, some clarification concerning {{the role of the}} full vocabulary (including <b>functional</b> <b>symbols)</b> in the proofs there given is also discussed. Comment: 5 page...|$|E
40|$|It {{has been}} shown {{recently}} that monodic first-order temporal logic without <b>functional</b> <b>symbols</b> but with equality is incomplete, i. e. {{the set of the}} valid formulae of this logic is not recursively enumerable. In this paper we show that an even simpler fragment consisting of monodic monadic two-variable formulae is not recursively enumerable...|$|E
40|$|We {{present a}} unified {{approach}} to study properties of Toeplitz localization operators {{based on the}} Calderón and Gabor reproducing formula. We show that these operators with <b>functional</b> <b>symbols</b> on a plane domain {{may be viewed as}} certain pseudodifferential operators (with symbols on a line, or certain compound symbols). Comment: 11 pages, 1 metapost figur...|$|E
5000|$|The symbol types over S {{are certain}} words over the {{alphabet}} S [...] {×, →}: the relational symbol types s1 × ... × sn, and the <b>functional</b> <b>symbol</b> types s1 × ... × sn→s, for non-negative integers n and s1,s2,...,sn,s [...] S. (For n = 0, the expression s1 × ... × sn denotes the empty word.) ...|$|R
5000|$|The first axiomatization of Boolean lattices/algebras {{in general}} {{was given by}} Alfred North Whitehead in 1898.It {{included}} the above axioms and additionally x∨1=1 and x∧0=0.In 1904, the American mathematician Edward V. Huntington (1874-1952) gave probably the most parsimonious axiomatization based on ∧, ∨, ¬, even proving the associativity laws (see box).He also proved that these axioms are independent of each other.In 1933, Huntington set out the following elegant axiomatization for Boolean algebra. It requires just one binary operation + and a unary <b>functional</b> <b>symbol</b> n, to be read as 'complement', which satisfy the following laws: ...|$|R
5000|$|The {{stages and}} cities are {{represented}} by hundreds of <b>functional</b> place <b>symbols,</b> used with discrimination from the simplest icon of a building with two towers to the elaborate individualized [...] "portraits" [...] of the three great cities. The editors Annalina and Mario Levi concluded that the semi-schematic, semi-pictorial symbols reproduce Roman cartographic conventions of the itineraria picta described by 4th-century writer Vegetius, of which this is the sole known testimony.|$|R
40|$|Abstract. We are {{developing}} {{a new approach to}} sequential object-oriented program verification for a significant C # subset called C#-light. The approach is based on translation of C#-light into an intermediate language called C#-kernel and a Hoare-like axiomatic semantics of C#-kernel. In this paper we describe C#-kernel and its axiomatic semantics. Unlike standard axiomatic semantics, our rules can generate lazy verification conditions which include <b>functional</b> <b>symbols</b> denoting postponed extractions of invariants of labelled statements as well as postponed invocations of methods and delegates. We also present refinement algoritms which eliminate these symbols. ...|$|E
40|$|Abstract. We {{introduce}} a polymorphic attribute-based type system capable of expressing type information of various query constructs. It extends the existing record-type systems by introducing attribute variables to model polymorphic attribute names. Such extension permits modeling query constructs of various languages as typed <b>functional</b> <b>symbols.</b> Type-checking and type-inference of database queries {{are reduced to}} unification of type-expressions in our type system. We first establish that the unification is NP-complete. A complete unification algorithm in EX-PTIME is presented. Finally, we characterize a useful tractable sub-class of unification for which the complete unification algorithm terminates in PTIME. ...|$|E
40|$|In {{this paper}} we study proof {{procedures}} for some variants of first order modal logics, where domains may be either cumulative or freely varying and terms may be either rigid or non-rigid, local or non-local. We define both ground and free variable tableau methods, parametric {{with respect to}} the variants of the considered logics. The treatment of each variant is equally simple and is based on the annotation of <b>functional</b> <b>symbols</b> by natural numbers, conveying some semantical information on the worlds where they are meant to be interpreted...|$|E
40|$|In {{the present}} thesis we study arithmetical {{theories}} {{in the language}} of arithmetic L extended by one binary <b>functional</b> <b>symbol</b> for exponentiation. For arbitrary theory {{in the language of}} arithmetic it is possible todefine its extension in this new language Le by adding axioms postulatingbasic properties of exponentiation. We consider two axiomatic systems for exponentiation - Exp 1 and Exp 2. Thus exponentiation is always defined axiomatically in the theories we deal with. We show that in such theories the Fermat's last theorem is unprovable no matter how strong the original theory is. In the thesis we develop a general method of construction of exponential function. This method subsists of "splitting some original exponential function in shorter segments and of rearranging them to form new exponential function which satisfies required properties. As an application of this method three independence results for stronger variants of negation of Fermat's last theorem are prooved. As a first result we construct model of theory Ar + Exp 1 defined in the thesis in which the equation x + y = z has nonzero solution for cofinally many 's. The second result allows to expand an arbitrary model of I 1 to model of theory Exp 2 in which again Fermat's theorem is violated by cofinally many 's. The third result is a construction [...] ...|$|R
40|$|Document L 2 / 09 - 273 {{proposed}} the encoding of two mathematical symbols, U+ 27 CE SQUARED LOGICAL AND and U+ 27 CF SQUARED LOGICAL OR. The Unicode Technical Committee accepted the two symbols for encoding {{in a future}} version of the standard (Consensus 120 -C 18) and assigned Action Item 120 -A 77 to confirm {{that there are no}} already encoded Unicode characters being used in existing mappings to represent the proposed symbols. This document examines {{the presence or absence of}} the proposed symbols and other similar symbols in existing entity sets and their mappings to Unicode code points, in particular to APL symbols (U+ 2336 –U+ 237 A). The analysis shows that there are no Unicode characters mapped in existing entity sets, which may be used to represent the proposed symbols. The proposed symbols and other similar-looking symbols are not listed or mapped in any of the entity sets and symbol lists enumerated in the next section. Section 3 analyzes the character collection of the STIX Fonts Project [1]. That collection includes one symbol whose glyph consists of a caret enclosed within a rectangle, which had originally been mapped to U+ 2353 APL <b>FUNCTIONAL</b> <b>SYMBOL</b> QUAD UP CARET. However, besides being inadequate for the proposed SQUARED LOGICAL AND, recent research has shown that the original mapping had been misattributed and is being rescinded at the time of writing this document. As a result, there are no mappings to Unicode characters (including APL symbols) to use for representing the proposed symbols, thus leaving the proposed symbols eligible for encoding...|$|R
40|$|In {{the paper}} we {{formulate}} a sufficient criterion {{in order for}} the first order theory with finite set of axioms to be represented by definitions in predicate calculus. We prove the corresponding theorem. According to this criterion such theories as the theory of equivalence relation, the theory of partial order and many theories based on the equality relation with finite set of <b>functional</b> and predicate <b>symbols</b> are represented by definitions in the first-order predicate calculus without equality...|$|R
40|$|The {{commercial}} {{development of the}} Internet has been punctuated with legal disputes {{over the use of}} trademarks as domain names, as metatags, as search terms, and as advertising keywords. As in previous disputes in copyright over the legal status of software, these Internet trademark disputes arise from the overlap of communicative and <b>functional</b> <b>symbols</b> in information technology. Such “cybermarks” are not merely indicators of product source, but function both as symbolic indicia for human recognition and as strings of computer code in the operation of automated search and indexing mechanisms. Application of trademark law’s functionality doctrine, perhaps with some modest amendment, could begin to resolve disputes over the use of cybermarks...|$|E
40|$|The {{notion of}} left {{convergent}} sequences of graphs introduced by Lovász et al. (in relation with homomorphism densities for fixed patterns and Szemerédi's regularity lemma) got increasingly studied {{over the past}} 10 years. Recently, Nešetřil and Ossona de Mendez introduced a general framework for convergence of sequences of structures. In particular, the authors introduced the notion of QF-convergence, which is a natural generalization of left-convergence. In this paper, we initiate study of QF-convergence for structures with <b>functional</b> <b>symbols</b> {{by focusing on the}} particular case of tree semi-lattices. We fully characterize the limit objects and give an application to the study of left convergence of m-partite cographs, a generalization of cographs...|$|E
40|$|This paper {{presents}} a sound and complete free-variable tableau calculus for constant-domain quantified modal logics, with a propositional analytical basis, i. e. {{one of the}} systems K, D, T, K 4, S 4. The calculus is obtained by addition of the classical free-variable -rule and the "liberalized" + -rule [14] to a standard set of propositional rules. Thus, the proposed system characterizes proof-theoretically the constant-domain semantics, which cannot be captured by "standard" (non-pre xed, non-annotated) ground tableau calculi. The calculi are extended so as to deal also with non-rigid designation, {{by means of a}} simple numerical annotation on <b>functional</b> <b>symbols,</b> conveying some semantical information about the worlds where they are meant to be interpreted...|$|E
40|$|Abstract. The unquantified {{set theory}} MLSR {{containing}} the symbols ∪, =, ∈, R (R(x) is {{interpreted as a}} rank of x) is considered. It is proved that there exists an algorithm which for any formula Q of the MLSR theory decides whether Q is true or not using the space c|Q | 3 (|Q | is the length of Q). Let MLSR be an unquantified set theory whose language contains the symbols ∪, =, ∈, R, where R denotes a unary <b>functional</b> <b>symbol</b> and R(x) is interpreted as a rank of the set x {{in the sense of}} J. von Neumann. The decidability problem for the theory MLSR reduces readily to testing the satisfiability of conjunctions of literals of the following types: (=) x = y ∪ z, x = y z, (∈) x ∈ y, (R) x = R(y) (the literal x ∈ y is equivalent to the formula x ∈ z & z = z, while the literal x = y to the formula [u ∈ x & u ∈ y] ∨ [u ∈ y & u ∈ x], where z, u are new variables). The conjunction Q of literals is sometimes treated as a set of its literals. Let, further, MLS be an unquantified set theory whose language contains the symbols ∪, =, ∈. Definition 1. The interpretation α of the MLS language is called the singleton model of a formula ϕ of this language if it associates a subset of the ∅ with each variable and ϕ is true in α. Definition 2. The singleton model α of a set of all literals of the type (=) of the formula Q of the language of MLSR theory is called the place of the conjunction Q. If α is the place of Q and y is the variable occurring in Q, then y(α) is the value of y in α...|$|R
40|$|We {{prove the}} {{regularity}} of the η function for classical pseudodifferential operators with Shubin symbols. We recall {{the construction of}} complex powers and of the Wodzicki and Kontsevich-Vishik <b>functionals</b> for classical <b>symbols</b> on R^n with these symbols. We then define the ζ and η functions associated to suitable elliptic operators. We compute the K_ 0 group of the algebra of zero-order operators and use this knowledge {{to show that the}} Wodzicki trace of the idempotents in the algebra vanishes. From this, it follows that the η function is regular at 0 for any self-adjoint elliptic operator of positive order...|$|R
50|$|While {{working with}} layouts of {{hydraulic}} machinery it is cumbersome to draw actual picture of every valve and other components. Instead of pictures, symbols {{are used for}} variety of components in the hydraulic system to highlight the <b>functional</b> aspects. The <b>symbol</b> for directional control valve is made of number of square boxes {{adjacent to each other}} depending on the number of positions.connections to the valve are shown on these squares by capital letters.usually they are named only in their normal position and not repeated in other positions.actuation system of the valve is also designated in its symbol.|$|R
40|$|The {{research}} of the last years on {{the definition of a}} logic language for databases, has mostly focused on DATALOG (Ceri ' 89), a logic language based on Horn clauses without <b>functional</b> <b>symbols.</b> In this paper we present a higher order form of DATALOG, called DATALOG-II, based on a second order logic programmic language, which appears to be an interesting rich language in its own right. We also make consideration between higher order and metalevel logic programming approaches and we give a kind of implementation of DATALOG-II in a metalevel logic programming languages with a well defined complete semantic, that we use to understand the obtained implementation and from that define the semantic of DATALOG-II...|$|E
40|$|Anybody {{concerned}} with potent political symbols in the United States will read Webb 2 ̆ 7 s new book {{with more than}} passive attention. This professor of American history at the University of Texas gives the anti-monopoly struggle a new twist. Most recent books set finance capital over against {{the rest of the}} community. This book sets the South and West against the monopoly power of the North. These are geographical symbols, not <b>functional</b> <b>symbols.</b> Such sectional symbols have played a disastrous role in the past of the American nation. Will Webb 2 ̆ 7 s attempt to revive them point toward the ultimate breakup of this nation, or, as he intends, put more punch behind the demand to democratize monopoly in the nation as it stands at present...|$|E
40|$|Every pregroup grammar {{is shown}} to be {{strongly}} equivalent to one which uses basic types and left and right adjoints of basic types only. Therefore a semantical interpretation is independent {{of the order of}} the associated logic. Lexical entries are read as expressions in a two sorted predicate logic with ∈ and <b>functional</b> <b>symbols.</b> The parsing of a sentence defines a substitution that combines the expressions associated to the individual words. The resulting variable free formula is the translation of the sentence. It can be computed in time proportional to the parsing structure. Non-logical axioms are associated to certain words (relative pronouns, indefinite article, comparative determiners). Sample sentences are used to derive the characterizing formula of the DRS corresponding to the translation. Keywords: categorial grammars, pregroup grammars, Discourse Representation, semantic interpretatio...|$|E
40|$|A {{complete}} {{classification of}} the regular representations of the relations [T,X_j] = (i/k) X_j, j= 1, [...] .,d, is given. The quantisation of RxR^d canonically (in the sense of Weyl) associated with the universal representation of the above relations is intrinsically "radial", this meaning that it only involves the time variable and {{the distance from the}} origin; angle variables remain classical. The time axis through the origin is a spectral singularity of the model: in the large scale limit it is topologically disjoint from the rest. The symbolic calculus is developed; in particular there is a trace <b>functional</b> on <b>symbols.</b> For suitable choices of states localised very close to the origin, the uncertainties of all spacetime coordinates can be made simultaneously small at wish. On the contrary, uncertainty relations become important at "large" distances: Planck scale effects should be visible at LHC energies, if processes are spread in a region of size 1 mm (order of peak nominal beam size) around the origin of spacetime. Comment: 30 pages, uses hyperre...|$|R
40|$|Abstract. We {{consider}} the quantifier-free set theory MLSUn containing the symbols U, =, ∈, Un. Un(p) is {{interpreted as the}} union of {{all members of the}} set p. It is proved that there exists an algorithm which for any formula Q of the MLSUn theory containing at most one occurrence of the symbol Un decides whether Q is true or not using the space cn 3 log 2 n (n is the length of Q). Let MLSUn (MLS) be a quantifier-free set theory whose language contains the symbols U, =, ∈, Un (U, =, ∈), where Un is a unary <b>functional</b> <b>symbol</b> (Un(p) is understood as a union of all members of the set p). Let MLSUn (1) be the class of formulas of the language MLSUn containing at most one occurrence of the symbol Un. The decidability problem for a class of formulas consists in finding an algorithm which decides whether an arbitrary formula of this class is true or not. For the class MLSUn (1) the problem of decidability can be easily reduced to testing the satisfiability of conjunctions of literals of the following types: (=) x = y ∪ z, x = y z, (∈) x ∈ y, (Un) u = Un(p), where the conjunctions contain the (Un) -type literal not more than once. Let Q be the formula of the MLSUn (1). If Q contains literals u = Un(p) and u = ∅, then Q has a model if and only if Q 0 has a model, where Q 0 denotes the result of removing the clause u = Un(p) from Q and adding either the literal p = ∅ or the clauses ∅ ∈ p, ∅ = x∩p∨ ∅ = x∩p∨ ∅ = p for every variable x of Q. The obtained Q 0 is a formula of the decidable theory MLS [1]. Therefore we can assume Q to contain the literal u = ∅. Let x, z 1, [...] ., zm, y be variables. By P +(x, z 1, [...] ., zm, y) we denote the x ∈ zi 1 &zi 1 ∈ zi 2 & · · · &zik− 1 ∈ zik &zik ∈ y) where disjunction ∨ 〈,i 1, [...] .,ik〉∈I + m I + m is the set of all non-empty ordered subsets of the set 1, [...] ., m...|$|R
40|$|We know {{extensions}} of {{first order logic}} by quantifiers of the kind "there are uncountable many [...] . ", "most [...] . " with new axioms and appropriate semantics. Related are operations such as "set of x, such that [...] . ", Hilbert's ϵ-operator, Churche's λ-notation, minimization and similar ones, which also bind a variable within some expression, the meaning of which is however partly defined by a translation into the language of first order logic. In this paper a generalization is presented that comprises arbitrary variable-binding symbols as non-logical operations. The axiomatic extension is determined by new equality-axioms; models assign <b>functionals</b> to variable-binding <b>symbols.</b> The completeness of this system of the so called "Functional Logic of 1 st Order" will be proved...|$|R
40|$|In {{this paper}} we study proof {{procedures}} for some variants of rst-order modal logics, where domains may be either cumulative or freely varying and terms may be either rigid or non-rigid, local or non-local. We dene both ground and free variable tableau methods, parametric {{with respect to}} the variants of the considered logics. The treatment of each variant is equally simple and is based on the annotation of <b>functional</b> <b>symbols</b> by natural numbers, conveying some semantical information on the worlds where they are meant to be interpreted. This paper is an extended version of a previous work where full proofs were not included. Proofs are in some points rather tricky and may help in understanding the reasons for some details in basic denitions. Keywords: Quantied Modal Logics, Tableaux. 1...|$|E
40|$|The printed {{version has}} been {{published}} April 2007 International audienceEvery pregroup grammar is shown to be strongly equivalent to one which uses basic types and left and right adjoints of basic types only. Therefore a semantical interpretation is independent {{of the order of}} the associated logic. Lexical entries are read as expressions in a two sorted predicate logic with ∈ and <b>functional</b> <b>symbols.</b> The parsing of a sentence defines a substitution that combines the expressions associated to the individual words. The resulting variable free formula is the translation of the sentence. It can be computed in time proportional to the parsing structure. Non-logical axioms are associated to certain words (relative pronouns, indefinite article, comparative determiners). Sample sentences are used to derive the characterizing formula of the DRS corresponding to the translation...|$|E
40|$|We {{propose a}} parsing model for DCGs. Our work embodies {{in a common}} frame a dynamic {{programming}} construction developed for logical push-down automata, and techniques that restrict the computation to a useful part of the search space, inspired by LALR parsing. Unlike preceding approaches, our proposal avoids backtracking in all cases, providing computational sharing and operational completeness for DCGs without <b>functional</b> <b>symbols.</b> Key Words: DCG, Dynamic Programming, LALR Parsing, Push-Down Automata. 1 Introduction The popularity of DCGs is often related to natural language processing. In comparison with other formalisms, {{they seem to be}} particularly wellsuited to controlling the perspicuity with which linguistic phenomena may be understood and expressed in actual language descriptions. However, an adequate description does not guarantee operational efficiency, and computational tractability is required if we intend to use descriptions for mechanical processing. Though much research ha [...] ...|$|E
40|$|Based on {{adaptive}} control of thought-rational (ACT-R), a cognitive architecture for cognitive modeling, researchers {{have developed an}} information-processing model to predict the blood oxygenation level-dependent (BOLD) response of <b>functional</b> MRI in <b>symbol</b> manipulation tasks. As an extension of this research, the current event-related functional MRI study investigates the effect of relatively extensive practice on the activation patterns of related brain regions. The task involved performing transformations on equations in an artificial algebra system. This paper shows that the base-level activation learning in the ACT-R theory can predict the change of the BOLD response in practice in a left prefrontal region reflecting retrieval of information. In contrast, practice has relatively {{little effect on the}} form of BOLD response in the parietal region reflecting imagined transformations to the equation or the motor region reflecting manual programming...|$|R
40|$|Abstract. The design method on bicycle’s {{functional}} elements proposed by {{this research is}} based on analysis on the winning work in the Global Bicycle Design Competition. Via analyzing its creative design on {{functional elements}}, our study is aimed to establish a creative design method on bicycle for designers to develop lots of creative ideas at the concept development stage. This research {{is divided into three}} stages, including analysis on bicycle’s creative design elements, construction of creative design method flow on bicycle’s functional elements, and case study on design prototype. For analysis on bicycle’s creative design elements, we {{have come up with a}} symbol table of bicycle’s creative functional elements. As to construction of creative design method flow on bicycle’s functional elements, we first asked the designer to describe his/her design theme, and then picked bicycle’s creative functional elements according to the contents described. After creative functional elements were picked, we then conducted the space position arrangement of <b>functional</b> element <b>symbols.</b> Based on designer’s requirements, we produced several kinds of space arrangements on creative functional elements, and then we designed a new bicycle by referring to the symbol table of bicycle’s creative functional elements acquired. In the final step, we followed the flow chat of bicycle’s creative functional elements constructed by this research, and proceeded a case study prototype design...|$|R
40|$|We {{present an}} {{adaptive}} {{approach to the}} recognition of handwritten mathematical symbols, in which a recognition weight is associated with each training sample. The weight is computed from the distance to a test character {{in the space of}} coefficients of <b>functional</b> approximation of <b>symbols.</b> To determine the average size of the training set to achieve certain classification accuracy, we model the error drop {{as a function of the}} number of training samples in a class and compute the average parameters of the model with respect to all classes in the collection. The size is maintained by removing a training sample with the minimal average weight after each addition of a recognized symbol to the repository. Experiments show that the method allows rapid adaptation of a default training dataset to the handwriting of an author with efficient use of the storage space. ...|$|R
