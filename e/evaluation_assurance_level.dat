30|451|Public
50|$|Solaris 10 5/09 is Common Criteria {{certified}} at <b>Evaluation</b> <b>Assurance</b> <b>Level</b> EAL4+ {{against the}} CAPP, RBACPP, and LSPP protection profiles.|$|E
50|$|PR/SM on z Systems {{has earned}} Common Criteria <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) 5+ {{security}} certification, and z/VM has earned Common Criteria EAL4+ certification.|$|E
5000|$|The Common Criteria is constructured in a layered manner, with {{multiple}} <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) specifications being available with increasing complexity, timescale and costs as the EAL number rises ...|$|E
5000|$|Recognition of {{evaluations}} against only {{a collaborative}} Protection Profile (cPP) or <b>Evaluation</b> <b>Assurance</b> <b>Levels</b> 1 through 2 and ALC_FLR.|$|R
40|$|Abstract. There is an {{increasing}} demand to certify the security of systems according to the Common Criteria (CC). The CC distinguish several <b>evaluation</b> <b>assurance</b> <b>levels</b> (EALs), level EAL 7 being the highest and requiring the application of formal techniques. We present a method for requirements engineering and (semi-formal and formal) modeling of systems to be certified according to the higher <b>evaluation</b> <b>assurance</b> <b>levels</b> of the CC. The method is problem oriented, i. e. it {{is driven by the}} environment in which the system will operate and by a mission statement. We illustrate our approach by an industrial case study, namely an electronic purse card (EPC) to be implemented on a Java Smart Card. As a novelty, we treat the mutual asymmetric authentication of the card and the terminal into which the card is inserted. ...|$|R
40|$|The “Common Criteria ” is an {{international}} standard for evaluating secure computer systems. The Common Criteria defines seven distinct <b>Evaluation</b> <b>Assurance</b> <b>Levels</b> (EALs). The three highest EALs, the so-called highassurance levels, require some degree of formalism in development. This paper discusses requirements for formalism in the high-assurance levels and our initial experiences in satisfying these requirements using ACL 2. 1...|$|R
5000|$|Trusted Solaris 8 is Common Criteria {{certified}} at <b>Evaluation</b> <b>Assurance</b> <b>Level</b> EAL4+ {{against the}} CAPP, RBACPP, and LSPP protection profiles. It {{is the basis}} for the DoDIIS Trusted Workstation program.|$|E
50|$|Integrity is a POSIX {{real-time}} {{operating system}} (RTOS). An Integrity variant, named Integrity-178B, was certified to Common Criteria <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) 6+, High Robustness in November 2008.Micro Velosity (stylized as µ-velOSity) is a real-time microkernel for resource-constrained devices.|$|E
50|$|In 2008, the Green Hills Integrity-178 RTOS was {{the first}} system to be {{certified}} by the National Information Assurance Partnership (NIAP), composed of National Security Agency (NSA) and National Institute of Standards and Technology (NIST), to <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) 6+.|$|E
50|$|Trusted Solaris 8 was a security-focused {{version of}} the Solaris Unix {{operating}} system. Aimed primarily at the government computing sector, Trusted Solaris adds detailed auditing of all tasks, pluggable authentication, mandatory access control, additional physical authentication devices, and fine-grained access control(FGAC). Versions of Trusted Solaris through version 8 are Common Criteria certified. See http://wwws.sun.com/software/security/securitycert/trustedsolaris.html and http://wwws.sun.com/software/security/securitycert/images/TSol8_7-03CMS.jpgTrusted Solaris Version 8 received the EAL4 certification level augmented {{by a number of}} protection profiles. See http://csrc.nist.gov/cc/Documents/CC%20v2.1%20-%20HTML/PART3/PART36.HTM for explanation of The <b>Evaluation</b> <b>Assurance</b> <b>Levels.</b>|$|R
5000|$|One use of {{the term}} [...] "computer security" [...] refers to {{technology}} that is used to implement secure operating systems. In the 1980s the United States Department of Defense (DoD) used the [...] "Orange Book" [...] standards, but the current international standard ISO/IEC 15408, [...] "Common Criteria" [...] defines a number of progressively more stringent <b>Evaluation</b> <b>Assurance</b> <b>Levels.</b> Many common operating systems meet the EAL4 standard of being [...] "Methodically Designed, Tested and Reviewed", but the formal verification required for the highest levels means that they are uncommon. An example of an EAL6 ("Semiformally Verified Design and Tested") system is Integrity-178B, which is used in the Airbus A380and several military jets.|$|R
40|$|Abstract. We {{introduce}} Interacting State Machines (ISMs), {{a general}} formalism for abstract modeling and verification of reactive systems. We motivate {{and explain the}} concept of ISMs and describe their graphical representation with the CASE tool AutoFocus. The semantics of ISMs is defined using Higher-Order Logic within the theorem prover Isabelle. ISMs {{can be seen as}} high-level variants of Input/Output Automata, therefore we give also a semantic translation from ISMs to IOAs. By the “benchmark ” example of Lowe’s fix of the Needham-Schroeder protocol we demonstrate the strengths of the ISM approach to express and prove security properties in a both elegant and machine-checked way. 1 Motivation and Related Work When investigating the correctness, safety and security of complex IT systems, formal modeling and verification of their key properties are essential for fulfilling strong quality requirements. A prominent example of this approach is security analysis according to the upper <b>evaluation</b> <b>assurance</b> <b>levels</b> defined in the IT se...|$|R
5000|$|In September 2013 the company’s [...] "Good for Enterprise (GFE)" [...] {{solution}} {{became the}} first cross-platform mobile collaboration solution to achieve Common Criteria <b>Evaluation</b> <b>Assurance</b> <b>Level</b> 4 Augmented (EAL4+) and the only containerized solution to meet this level of security certification on either iOS or Android.|$|E
50|$|Improved {{security}} was a primary design goal for Vista. Microsoft's Trustworthy Computing initiative, {{which aims to}} improve public trust in its products, has had a direct effect on its development. This effort {{has resulted in a}} number of new security and safety features and an <b>Evaluation</b> <b>Assurance</b> <b>Level</b> rating of 4+.|$|E
5000|$|The UK IT {{security}} {{evaluation and}} certification scheme provides more detail {{as to the}} internal architecture of the FeliCa card (RC-S860 [...] ). FeliCa IC card (hardware) and its operating system has obtained ISO15408 <b>Evaluation</b> <b>Assurance</b> <b>Level</b> 4 (“EAL4”), a standard which indicates the security level of information technology and consumer products.|$|E
40|$|This paper {{presents}} a formal security policy model for SmartCards with digital signature application. This kind of model {{is necessary for}} each evaluation according to Information Technology Security <b>Evaluation</b> Criteria <b>assurance</b> <b>level</b> E 4 (Common Criteria level EAL 5) and above. Furthermore, we argue that such a model is essential for reasoning about the security of Information Technology components like a specific IT product or IT system. Without an unambiguous definition of what security means, {{it is impossible to}} say whether a product really is secure...|$|R
50|$|The April 2012 {{releases}} by IBM of PowerLinux {{were designed}} specifically to run the Linux OS on the company’s POWER7-based systems. Unlike servers built on the Intel Xeon processor, an x86 descendant with two threads per core, the POWER7 processor provides four threads per core. POWER-based servers are virtualized to provide 60 to 80 percent utilization, compared to a typical 40-percent rate for x86 processors. The PowerVM virtualization program has a Common Criteria <b>Evaluation</b> <b>Assurance</b> (CC) <b>level</b> of 4+, with zero security vulnerabilities reported, as well as unlimited memory use.|$|R
40|$|Security of Information Systems {{is now a}} {{well-established}} field of computer science. The methods used to consider this problem are evolving, as are the ones applied in safety areas, where ad-hoc and empirical approaches are being replaced by formal methods: assurance in system security asks {{for the use of}} true formal methods along the process of software development, starting at the specification level. The Ssurf project consists in: • characterizing and studying the required features that an Integrated Development Environment (IDE) must provide in order not only to obtain software systems in conformance with high <b>Evaluation</b> <b>Assurance</b> <b>Levels</b> (EAL- 5, 6 and 7), but also to ease the evaluation process according to various standards (e. g. IEC 61508, CC, [...] .), and • in developing a formal generic framework describing various security properties, e. g. access control policies, together with their implementations using such an IDE. While the first part aims to elaborate features for an IDE of general purpose, the second one aims to provide a theoretical framework in which security properties and associated implementations can be specified, defined, compared and proved. This theoretical framework will be implemented within the considered IDE, providing a non-trivial illustration of its use. This work will be based on the Foca...|$|R
5000|$|A PP {{specifies}} generic security {{evaluation criteria}} to substantiate vendors' claims {{of a given}} family of information system products. Among others, it typically specifies the <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL), a number 1 through 7, indicating the depth and rigor of the security evaluation, usually {{in the form of}} supporting documentation and testing, that a product meets the security requirements specified in the PP.|$|E
50|$|The {{auditing}} {{and security}} engineering abilities have {{allowed it to}} obtain the <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) 6 rating by the National Security Agency (NSA). The Target of Evaluation (TOE) Architecture in the Security Target for the evaluation excludes components such as those for file system and networking, from {{the definition of the}} TOE, focusing almost solely on the core kernel. Other operating systems, such as Windows or Linux, though evaluated at lower levels of assurance, generally include these abilities within their TOE.|$|E
50|$|The {{platform}} {{has earned}} accreditations and certifications that enable companies {{to comply with}} government regulations around the world. Good software was required in the U.S. Department of Defense's first approval of Android devices in 2012. In 2013, the platform became the first cross-platform mobile collaboration solution to achieve Common Criteria <b>Evaluation</b> <b>Assurance</b> <b>Level</b> 4 Augmented (EAL4+) and the only containerized solution to meet this level of security certification on either iOS or Android. It was also listed on Australia's Defence Signals Directorate's Evaluated Products List.|$|E
40|$|Security-critical {{applications}} at {{the highest}} <b>Evaluation</b> <b>Assurance</b> <b>Levels</b> (EAL) require formal proofs of correctness {{in order to achieve}} certification. To support secure application development {{at the highest}} EALs, we have developed techniques to largely automate the process of producing proofs of correctness of machine code. As part of the Secure, High-Assurance Development Environment program, we have produced in ACL 2 an executable formal model of the Rockwell Collins AAMP 7 G microprocessor at the instruction set level, in order to facilitate proofs of correctness about that processor’s machine code. The AAMP 7 G, currently in use in Rockwell Collins secure system products, supports strict time and space partitioning in hardware, and has received a U. S. National Security Agency (NSA) Multiple Independent Levels of Security (MILS) certificate based in part on a formal proof of correctness of its separation kernel microcode. Proofs of correctness of AAMP 7 G machine code are accomplished using the method of “compositional cutpoints”, which requires neither traditional clock functions nor a Verification Condition Generator (VCG). In this paper, we will summarize the AAMP 7 G architecture, detail our ACL 2 model of the processor, and describe our development of the compositional cutpoint method into a robust machine code proof framework...|$|R
40|$|A {{smart card}} is an {{embedded}} {{system that is}} generally used to supply security to an information system. Traditionally the application and the OS were developed in a secure environment by the card issuer. For a few years, open platforms (e. g., Java Card, MultOS and Smart Card for Windows) have provided new facilities for application developers. They allow dynamic storage and execution of downloaded executable code. Such architecture introduces new risks: it offers the possibility to attack the card from an applet by exploiting some implementation faults. This document {{provides an overview of}} a set of techniques required to obtain Common Criteria (CC) high <b>Evaluation</b> <b>Assurance</b> <b>Levels</b> (EALs) of a Java Card. It is not dedicated to smart card specialists as it presents the security stakes of such a technology. We present the motivation for a Java Card evaluation: reach the same security level for the new open smart card than for traditional embedded platforms. We introduce the UML and the B method to illustrate the semi-formal and formal models required for a high level evaluation. The B method has been already used in GEMPLUS to formally model security mechanisms of the Java Card: bytecode verifier, interpreter and firewall. These case studies reveal the interest of using the B method to formalize the Java Card Virtual Machine (JCVM). In a CC evaluation the use of semi-formal and formal techniques is required to obtain the assurance of a high security level...|$|R
50|$|<b>Assurance</b> <b>Level</b> 1: Little or no {{confidence}} in the asserted identity's validity.Assurance Level 2: Some confidence in the asserted identity's validity. <b>Assurance</b> <b>Level</b> 3: High confidence in the asserted identity's validity. <b>Assurance</b> <b>Level</b> 4: Very high confidence in the asserted identity's validity.|$|R
50|$|The <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL1 through EAL7) of an IT {{product or}} {{system is a}} {{numerical}} grade assigned following {{the completion of a}} Common Criteria security evaluation, an international standard in effect since 1999. The increasing assurance levels reflect added assurance requirements that must be met to achieve Common Criteria certification. The intent of the higher levels is to provide higher confidence that the system's principal security features are reliably implemented. The EAL level does not measure the security of the system itself, it simply states at what level the system was tested.|$|E
50|$|An ST defines {{information}} assurance security and functional {{requirements for the}} given information system product, which is called the Target of Evaluation (TOE). An ST is a complete and rigorous description of a security problem in terms of TOE description, threats, assumptions, security objectives, security functional requirements (SFRs), security assurance requirements (SARs), and rationales. The SARs are typically given as a number 1 through 7 called <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL), indicating the depth and rigor of the security evaluation, usually {{in the form of}} supporting documentation and testing, that the product meets the SFRs.|$|E
5000|$|Consequently, {{microkernel}} designs {{have been}} used for systems designed for high-security applications, including KeyKOS, EROS and military systems. In fact common criteria (CC) at the highest assurance level (<b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) 7) has an explicit requirement that the target of evaluation be [...] "simple", an acknowledgment of the practical impossibility of establishing true trustworthiness for a complex system. Unfortunately, again, the term [...] "simple" [...] is misleading and ill-defined. At least the Department of Defense Trusted Computer System Evaluation Criteria introduced somewhat more precise verbiage at the B3/A1 classes: ...|$|E
40|$|Sensor {{networks}} are deployed {{to monitor the}} surroundings and keep the end-user informed about the events witnessed. Different types of events have different levels of importance for the user. Information Assurance is an ability to disseminate different information at different <b>assurance</b> <b>levels</b> to the end-user. The <b>assurance</b> <b>level</b> {{is determined by the}} criticality of the sensed phenomenon. Thus, information assurance capability allows a sensor network to deliver critical information with high assurance albeit potentially at a higher cost, while saving energy by delivering less important information at a lower <b>assurance</b> <b>level...</b>|$|R
40|$|The term {{security}} assurance {{has been used}} in the computer science literature to express the confidence that one has in the strength of the security measures. The need for a methodology to measure current security <b>assurance</b> <b>levels</b> of a system has been reported in the literature as vital in order to maintain and improve the overall security. However, a scrutiny of the literature reveals that in the area of IT {{security assurance}}, a large number of research questions still remain without an answer. Although a number of works have been presented in recent years, especially with respect to assurance metrics development, little effort has been made in developing a robust operational methodology for the evaluation of IT service infrastructures security assurance. This paper captures the current status of research efforts made in the field of security <b>assurance</b> <b>evaluation.</b> It collects previous and current academic, normalization and commercial work on security assurance, and establishes a comprehensive state of the art in the domain. In addition, the paper outlines the general features of an ongoing work aiming at the development of a security <b>assurance</b> <b>evaluation</b> framework that takes into account the evolving and ubiquitous IT infrastructures. The novelty of this ongoing work lies not only on the adaptability of the security <b>assurance</b> <b>evaluation</b> system to the evolving infrastructure model but also on the use of a “bottomup” approach in evaluating the security <b>assurance</b> <b>level</b> of a service using aggregation techniques. The methodology is intended to assist network managers in addressing more promptly security failures within the infrastructure as well as to increase the trust of end users in using IT systems...|$|R
50|$|The Software Level, {{also known}} as the Design <b>Assurance</b> <b>Level</b> (DAL) or Item Development <b>Assurance</b> <b>Level</b> (IDAL), is {{determined}} from the safety assessment process and hazard analysis by examining the effects of a failure condition in the system. The failure conditions are categorized by their effects on the aircraft, crew, and passengers.|$|R
5000|$|<b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) - the {{numerical}} rating describing {{the depth and}} rigor of an evaluation. Each EAL corresponds to a package of security assurance requirements (SARs, see above) which covers the complete development of a product, with a given level of strictness. Common Criteria lists seven levels, with EAL 1 being the most basic (and therefore cheapest to implement and evaluate) and EAL 7 being the most stringent (and most expensive). Normally, an ST or PP author will not select assurance requirements individually but choose one of these packages, possibly 'augmenting' requirements in a few areas with requirements from a higher level. Higher EALs do not necessarily imply [...] "better security", they only mean that the claimed security assurance of the TOE has been more extensively verified.|$|E
5000|$|The Common Criteria for Information Technology Security Evaluation (Common Criteria or CC) is an {{international}} standard (International Organization for Standardization (ISO) and International Electrotechnical Commission (IEC) 15408) for computer security certification. Common Criteria allows specifying and verifying vendor claims relating to security functionality and assurance requirements. Verification of claims is performed using approved testing laboratories. [...] The <b>Evaluation</b> <b>Assurance</b> <b>Level</b> of EAL4 permits the developer to gain maximum assurance from positive security engineering based on good commercial development practices which, though rigorous, do not require substantial specialist knowledge, skills, and other resources. EAL4 is the highest level at which {{it is likely to}} be economically feasible to retrofit to an existing product line. EAL4 is therefore applicable in those circumstances where developers or users require a moderate to high level of independently assured security in conventional commodity TOEs and are prepared to incur additional security-specific engineering costs. Augmented with ALC_FLR.2 establishes and verifies the claim that the developer has established flaw remediation procedures that describe the tracking of security flaws, the identification of corrective actions, and the distribution of corrective action information to TOE users.|$|E
50|$|Customers that deploy trusted {{operating}} systems typically {{require that the}} product complete a formal computer security evaluation. The evaluation is stricter for a broader security range, which are the lowest and highest classification levels the system can process. The Trusted Computer System Evaluation Criteria (TCSEC) was the first evaluation criteria developed to assess MLS in computer systems. Under that criteria {{there was a clear}} uniform mapping between the security requirements and the breadth of the MLS security range. Historically few implementations have been certified capable of MLS processing with a security range of Unclassified through Top Secret. Among them were Honeywell's SCOMP, USAF SACDIN, NSA's Blacker, and Boeing's MLS LAN, all under TCSEC, 1980s vintage and Intel 80386-based. Currently, MLS products are evaluated under the Common Criteria. In late 2008, the first operating system (more below) was certified to a high evaluated assurance level: <b>Evaluation</b> <b>Assurance</b> <b>Level</b> (EAL) - EAL 6+ / High Robustness, under the auspices of a U.S. government program requiring multilevel security in a high threat environment. While this assurance level has many similarities to that of the old Orange Book A1 (such as formal methods), the functional requirements focus on fundamental isolation and information flow policies rather than higher level policies such as Bell-La Padula. Because the Common Criteria decoupled TCSEC's pairing of assurance (EAL) and functionality (Protection Profile), the clear uniform mapping between security requirements and MLS security range capability documented in CSC-STD-004-85 has largely been lost when the Common Criteria superseded the Rainbow Series.|$|E
40|$|International audienceAuthentication <b>assurance</b> <b>level</b> {{taxonomies}} {{that have}} been specified in many real-world smart identity token deployments do not fully reflect all the security properties associated with their underlying authentication mechanisms. In this paper we describe the development and application of a new methodology called SID-AAM (where the abbreviation stands for Smart Identity Token - Authentication <b>Assurance</b> <b>Level</b> Methodology) that identifies {{a new set of}} authentication factors appropriate for this technology, identifies all the security properties that need to be verified based on bindings between various entities involved in the authentication processes and then derives an authentication <b>assurance</b> <b>level</b> taxonomy based on the set of security properties verified in the various authentication modes specified in the deployment. The advantages of SID-AAM methodology compared to current approaches for determining authentication <b>assurance</b> <b>levels</b> for smart identity token deployments are highlighted...|$|R
30|$|Step 2. Map the {{identified}} {{risks to the}} appropriate <b>assurance</b> <b>level.</b>|$|R
30|$|Step 4. Confirm {{whether the}} {{implemented}} system has met the required <b>assurance</b> <b>level.</b>|$|R
