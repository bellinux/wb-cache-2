0|8138|Public
40|$|International audienceThis paper {{introduces}} Preisach {{model to}} describe hysteretic input nonlinearities of extended Hammerstein systems. Preisach model is {{proved to be}} an effective model to cover most of hysteretic input nonlinearities studied in the existing literatures on identification of extended Hammerstein systems. That is, Preisach model encloses the backlash-type nonlinearities and the hysteresis-relay nonlinearities as special cases, but excludes the switch-type nonlinearities. Hence, the usage of Preisach model is able to resolve an issue that <b>types</b> of hysteretic <b>input</b> nonlinearities are often inaccessible in practice, but most of existing identification methods have to <b>know</b> the <b>type</b> of <b>input</b> hysteretic nonlinearity a priori. For identification of extended Hammerstein systems with input nonlinearity described by Presiach model, the persistently exciting (PE) condition of input is established and the consistency of estimated model parameters is proved. In particular, the requirement on inputs to meet with the PE condition covers a wide class of signals, which resolves another issue in the existing studies that specially designed inputs are usually required. Numerical and industrial examples are provided to illustrate the obtained results...|$|R
5000|$|Character mode (a.k.a. character-at-a-time mode): In this mode, <b>typed</b> <b>input</b> is sent {{immediately}} to the receiving system.|$|R
2500|$|A. M. Mathai (1982) Storage {{capacity}} of a dam with gamma <b>type</b> <b>inputs,</b> Annals of the Institute of Statistical Mathematics, 34, 591–597 ...|$|R
50|$|The {{community}} {{is working on}} being able to handle more <b>type</b> of <b>input</b> formats. Each <b>type</b> of <b>input</b> is handle by a dedicated bot.|$|R
25|$|Interactive fiction usually {{relies on}} {{reading from a}} screen and on <b>typing</b> <b>input,</b> {{although}} text-to-speech synthesizers allow {{blind and visually impaired}} users to play interactive fiction titles as audio games.|$|R
5000|$|... "USEing" [...] a use-file is the {{simplest}} way for performing several instruction with minimal <b>typed</b> <b>input.</b> (This operation roughly corresponds to what [...] "source-ing" [...] a file is in other scripting languages.) ...|$|R
40|$|International audienceWe give in {{this paper}} a purely syntactical {{definition}} of <b>input</b> and output <b>types</b> of system F. We define the syntactical data <b>types</b> as <b>input</b> and output <b>types.</b> We show that any type with positive quantifiers is a syntactical data type and that an <b>input</b> <b>type</b> is an output type. We give some restrictions on the ∀-elimination rule {{in order to prove}} that an output <b>type</b> is an <b>input</b> <b>type...</b>|$|R
40|$|In the {{polymorphic}} �-calculus, one may explicitly define {{functions that}} take a <b>type</b> as <b>input</b> and return a term as output. This work focuses on how such functions {{depend on their}} <b>input</b> <b>types.</b> Indeed, these functions are generally understood to have an essentially constant meaning on <b>input</b> <b>types.</b> We show how the proof theory of the polymorphic �-calculus suggests a clear syntactic description of this phenomenon. Namely, under a reasonable condition, we show that if two polymorphic functions agree on an <b>input</b> <b>type,</b> then they are, in fact, the same function. Equivalently, <b>types</b> are generic <b>inputs</b> to polymorphic functions...|$|R
30|$|The {{parameters}} {{that were}} studied for comparison of different applications include: type of ANN model, characteristics of dataset, soil <b>type,</b> <b>input</b> and output variables, error criteria used for validation with respective error value, and selected method of comparison.|$|R
40|$|We compare three {{approaches}} for quantifying uncertainty through a measurement equation: the International Organization for Standardization (ISO) Guide to the Expression of Uncertainty in Measurement (GUM), draft GUM Supplement 1 and Bayesian statistics. For illustration, {{we use a}} measurement equation for simple linear calibration that includes both Type A and <b>Type</b> B <b>input</b> variables. We consider three scenarios: (i) the measurement equation is linear with one <b>Type</b> B <b>input</b> variable having a normal distribution, (ii) the measurement equation is non-linear with two <b>Type</b> B <b>input</b> variables each having a normal distribution and (iii) the measurement equation is non-linear with two <b>Type</b> B <b>input</b> variables each having a rectangular distribution. We consider both small and large uncertainties for the <b>Type</b> B <b>input</b> variables. We use {{each of the three}} approaches to quantify the uncertainty in measurement {{for each of the three}} scenarios. Then we discuss the merits and limitations of each approach...|$|R
30|$|Outputs of the {{developed}} system are presented by using a numerical example by considering data collected from factory 2 for 11 part types with 15 machine <b>types.</b> <b>Input</b> data used for the numerical example are given in “Appendix A”.|$|R
30|$|We {{demonstrated}} that incorporation of motion-related information into user-specific offset models {{can improve the}} accuracy of <b>typing</b> <b>input.</b> Including gait phase or acceleration data as an additional input to a Gaussian Process offset model gave a 1 % absolute improvement in error rate over a position-only model.|$|R
50|$|Punched {{paper tape}} was the {{external}} storage medium. The desk {{also had an}} electronic typewriter for printed output and a keyboard integrated with the system console to allow <b>typed</b> <b>input</b> and system control. Programs written in machine code could be input to the system from the console.|$|R
40|$|AbstractThe well-definedness {{problem for}} a {{programming}} language consists of checking, given an expression and an <b>input</b> <b>type,</b> whether the semantics of the expression is defined for all inputs adhering to the <b>input</b> <b>type.</b> A related problem is the semantic type-checking problem which consists of checking, given an expression, an <b>input</b> <b>type,</b> and an output type whether the expression always returns outputs adhering to the output <b>type</b> on <b>inputs</b> adhering to the <b>input</b> <b>type.</b> Both problems are undecidable for general-purpose programming languages. In this paper we study these problems for the Nested Relational Calculus, a specific-purpose database query language. We also investigate how these problems behave {{in the presence of}} programming language features such as singleton coercion and type tests...|$|R
50|$|EmoSPARK {{was created}} by French {{inventor}} Patrick Levy-Rosenthal, as an emotionally intelligent artificial life unit for the home that can interact with people. It is powered by Android and can communicate with users through <b>typed</b> <b>input</b> from a computer, tablet, smartphone or TV {{as well as through}} spoken commands.|$|R
40|$|Producer {{survey results}} are {{analyzed}} to determine factors influencing value-enhanced grain (VEG) risk perceptions and VEG crop insurance adoption. VEG production {{is perceived to}} be riskier than commodity production. VEG <b>types,</b> <b>input</b> costs, and production problems affect risk perceptions. Factors including previous insurance use impact VEG crop insurance adoption. Risk and Uncertainty,...|$|R
40|$|In the APS {{storage ring}} cavities, {{magnetic}} loop <b>type</b> <b>input</b> couplers are used. The loaded Q fo a cavityvaries as the beam loading changes 1. The beam loading changes the cavity input impedance. Therefore, the input coupler must {{be adjusted to}} maintain a good impedance match. Measurements {{have been made to}} determine the coupler loop position (depth of penetration...|$|R
5000|$|Eucalyptus haemastoma, {{the best}} <b>known</b> <b>type</b> {{occurring}} near Sydney ...|$|R
50|$|There are six <b>known</b> <b>types</b> of mycotoxins {{that affect}} animals.|$|R
50|$|Various <b>types</b> of <b>input</b> {{including}} mouse, keyboard, joystick and Wii Remote are supported.|$|R
5000|$|Ciphers can be {{distinguished}} into two types by the <b>type</b> of <b>input</b> data: ...|$|R
30|$|Controllers {{are tested}} in {{presence}} of different level and <b>types</b> of <b>input</b> torque disturbance.|$|R
5000|$|In {{adventure}} games, a text parser takes <b>typed</b> <b>input</b> (a command) {{from the}} player and simplifies it to something the game can understand. Usually, words {{with the same}} meaning are turned into the same word (e.g. [...] "take" [...] and [...] "get") and certain filler words are dropped (e.g. articles, or the [...] "at" [...] in [...] "look at rock").|$|R
50|$|There {{are three}} <b>known</b> <b>types</b> of werewolves in the Teen Wolf mythology.|$|R
25|$|Different {{influenza}} viruses encode {{for different}} hemagglutinin and neuraminidase proteins. For example, the H5N1 virus designates an influenza A subtype {{that has a}} type 5 hemagglutinin (H) protein and a type 1 neuraminidase (N) protein. There are 18 <b>known</b> <b>types</b> of hemagglutinin and 11 <b>known</b> <b>types</b> of neuraminidase, so, in theory, 198 different combinations of these proteins are possible.|$|R
25|$|H5 {{stands for}} the fifth of several <b>known</b> <b>types</b> of the protein hemagglutinin.|$|R
25|$|N1 {{stands for}} the first of several <b>known</b> <b>types</b> of the protein neuraminidase.|$|R
50|$|H5 {{stands for}} the fifth of several <b>known</b> <b>types</b> of the protein hemagglutinin.|$|R
50|$|N1 {{stands for}} the first of several <b>known</b> <b>types</b> of the protein neuraminidase.|$|R
5000|$|Following {{is a list}} of {{the best}} <b>known</b> <b>types</b> of {{advanced}} process control: ...|$|R
5000|$|But, {{inverters}} {{are also}} classified {{based on the}} <b>type</b> of <b>input</b> source. And they are, ...|$|R
5000|$|... {{they provide}} full support for any <b>type</b> of <b>input</b> device, {{as well as}} for haptic {{feedback}} ...|$|R
50|$|Web browsers on devices {{with various}} <b>types</b> of <b>input</b> devices {{including}} mouse, touch panel, and pen may generate integrated input events. Users {{can see what}} <b>type</b> of <b>input</b> device is pressed, what button is pressed on that device, and how strongly the button is pressed {{when it comes to}} a stylus pen. As of October 2013, this event is only supported by Internet Explorer 10 and 11.|$|R
40|$|AbstractThis paper {{focuses on}} how {{terms of the}} {{polymorphic}} λ-calculus, which may take <b>types</b> as <b>inputs,</b> depend on <b>types.</b> These terms are generally understood, in all models, to have an “essentially” constant meaning on <b>input</b> <b>types.</b> We show the proof theory of polymorphic λ-calculus suggests a clear syntactic description of this phenomenon. Namely, under a reasonable condition, we show that if two polymorphic functions agree on a single type, then they agree on all types (equivalently, <b>types</b> are generic <b>inputs)</b> ...|$|R
50|$|Other <b>known</b> <b>types</b> of water-in-water {{emulsions}} {{involve the}} separation of different biopolymers in aqueous solution.|$|R
50|$|The element <b>type</b> (called the <b>input</b> <b>type)</b> is indexed by {{shape and}} position, {{so it can}} vary by shape and position, and the {{extension}} (called the output type) is also indexed by shape.|$|R
