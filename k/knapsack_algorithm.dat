41|58|Public
25|$|One early {{application}} of knapsack algorithms {{was in the}} construction and scoring of tests in which the test-takers have a choice as to which questions they answer. For small examples it is a fairly simple process to provide the test-takers with such a choice. For example, if an exam contains 12 questions each worth 10 points, the test-taker need only answer 10 questions to achieve a maximum possible score of 100 points. However, on tests with a heterogeneous distribution of point valuesi.e. different questions are worth different point values {{it is more difficult}} to provide choices. Feuerman and Weiss proposed a system in which students are given a heterogeneous test with a total of 125 possible points. The students are asked to answer all of the questions {{to the best of their}} abilities. Of the possible subsets of problems whose total point values add up to 100, a <b>knapsack</b> <b>algorithm</b> would determine which subset gives each student the highest possible score.|$|E
30|$|Firstly, {{this section}} {{elucidates}} {{the structure of}} the system for simulation. Then, the fuzzy theory, the <b>knapsack</b> <b>algorithm</b> (KA), GRA, and the proposed GRAMAKA are described.|$|E
40|$|This paper {{presents}} {{the generation of}} digital signature along with message recovery based on Elliptic Curve Cryptography (ECC) and <b>knapsack</b> <b>algorithm.</b> In digital signature along with message recovery scheme, signature alone is sent and message is recovered from the signature (r, s). ECC provides greater security with less key size, when compared to integer factorization and discrete logarithm system. As the strength of <b>knapsack</b> <b>algorithm</b> depends on {{the selection of the}} series, the proposed algorithm uses modified Stern series which not only reduces the time complexity but also provides better security. ...|$|E
30|$|To {{compensate}} for the adverse effects caused by radio link in worldwide interoperability for Microwave Access (WiMAX) networks, many radio resource management approaches have been present to assign orthogonal frequency division multiplexing access slots for seeking better performance. However, no WiMAX standards for optimal slot allocation have been defined. In this study, a new uplink bandwidth allocation scheme, GRAMA, which combines grey relational analysis with multiple attributes and the <b>knapsack</b> <b>algorithms,</b> is proposed to improve resource utilization while satisfying the user’s requirements of throughput and fairness. Channel aware technology and service flow priority {{are used in the}} proposed scheme to achieve the highest performance index. A series of simulation is conducted under the scenarios of constant-bit-rate (CBR) voice traffic, variable-bit-rate (VBR) video traffic, and VBR data traffic. The performance is evaluated in terms of bandwidth utilization, transmission throughput, and fairness and simulation result which indicate that the proposed GRAMKA outperforms the conventional fuzzy and <b>knapsack</b> <b>algorithms.</b>|$|R
40|$|International audienceAn {{efficient}} Binary Search-based {{approach used}} to determine the sets of human resources allowing one to reach, for an enterprise process, a given performance level is presented. It is based on an enterprise process performance methodology integrating human skill influence. In a first step, this approach is compared with algorithms such as Hybrid Taboo-Descent, Simulated Annealing and <b>Knapsack</b> <b>algorithms</b> for different performance points of view (temporal, financial, quality oriented) on limited and large complexity examples. In a second step, this approach is generalized to integrate simultaneously several viewpoints...|$|R
40|$|This paper {{presents}} hybrid algorithms for {{a variation}} of the Bounded Knapsack Problem which we call the Oregon Trail Knapsack. Our problem entails imposing a cost as well as a weight limit, constraining the values of types of items by means of a variety of value functions, and allowing the value of one item type to be dependent on {{the presence or absence of}} another type in the knapsack. These modifications to the original problem make it more complex and require adaptations of known <b>knapsack</b> <b>algorithms.</b> To solve this problem, we combine constraint propagation techniques and domain pruning with classic branch and bound approaches that require a sorting of the items. Our experiments compare a constraint-language implementation with a simulation of the constraint-based system in a procedural language. Results indicate that the constraint-based solution is natural to the problem and efficient enough to solve large problem instances typical of the application. 1. Introduction The knapsack [...] ...|$|R
30|$|We further {{consider}} the limited communication bandwidth during encountering of vehicles and apply a selection mechanism based on 0 - 1 <b>knapsack</b> <b>algorithm</b> for vehicles {{to choose the}} most priority data chunks {{on top of the}} results of the above multiple knapsack solution.|$|E
40|$|AbstractIn LTE systems, {{multicast}} services must {{be delivered}} efficiently {{in response to}} the need for strong QoS support. However, each class of quality services has its own requirements to be satisfied. These quality constraints limit the scheduling flexibility, and the LTE downlink resource allocating algorithms need to assimilate these con- straints while trying to maximize system performance in terms of fairness and throughput. This paper addresses this fundamental problem of LTE downlink scheduling by adopting the time-domain <b>Knapsack</b> <b>algorithm</b> over the traffic overload patterns. We fine tune the <b>Knapsack</b> <b>algorithm,</b> to overcome this problem and improve system performance objectives. We demonstrate that more efficient performance can be achieved in terms of fairness index and system throughput, which is evaluated using simulation results...|$|E
40|$|Abstract:- The {{admission}} control mechanism developed for wireless LAN, HCCA (hybrid coordination function controlled channel access) is not adaptable to {{variable bit rate}} (VBR) traffic since it considers only the mean data rate and packet size for scheduling. In my paper, we propose a transmission opportunity (TXOP) allocation scheme by using a <b>knapsack</b> <b>algorithm.</b> Proposal results show that our scheme offers higher channel utilization than the wireless LAN standard...|$|E
40|$|We present {{autonomous}} bidding {{strategies for}} ad auctions, {{first for a}} stylized problem, and then for the more realistic Trading Agent Competition for Ad Auctions (TAC AA) —a simulated market environment that tries to capture some of the complex dynamics of bidding in ad auctions. We decompose the agent’s problem into a modeling subproblem, where we estimate values such as click probability and cost per click, and an optimization sub-problem, where we determine what to bid given these estimates. Our optimization algorithms, {{the focus of this}} paper, come in two flavors: rule-based algorithms, which can make reasonable decisions even with inaccurate models; and greedy multiple choice <b>knapsack</b> <b>algorithms,</b> which can make better decisions but require more accurate models to do so. We evaluate agent performance in the game-theoretic TAC AA domain, as well as in a more controlled testing framework that decouples the modeling and optimization subproblems. Although decision-theoretic in nature, we argue that it is nonetheless reasonable to use our controlled testing framework to determine which optimization algorithm is most suitable for an agent with a given amount of model error, and which model improvements would lead to the greatest gain in overall agent performance. 1...|$|R
40|$|We {{introduce}} a hybrid algorithm for the 0 - 1 multi-dimensional multiobjective <b>knapsack</b> problem. This <b>algorithm,</b> called GTS, combines a genetic procedure and a tabu search operator. The algorithm is evaluated on 9 well-known benchmark instances and shows highly competitive results compared with two state-of-the-art algorithms...|$|R
40|$|This paper {{presents}} {{a framework for}} smart services of robots in an intelligent environment. Within such intelligent environment, the target platform consists of service robots and a framework for smart services including task allocation and task scheduling. For task allocation, we use an auction-based method and a <b>knapsack</b> problem <b>algorithm.</b> In this paper, {{the characteristics of the}} algorithm for allocation balancing are to delegate executing task to another robot, to reallocate the delayed task to more than one robot, and to withdraw over-allocated robots from the current task...|$|R
40|$|This {{software}} {{is used to}} optimize the arrangement of objects in twodimensional display. arrangement in two dimensions, require identification to enter the right size and type of display or a place to meet as a full. In the <b>Knapsack</b> <b>Algorithm</b> applied {{as a point of}} the concept to progress this project. object which is used here is “size type” of Ad Spot, using java-based programming languages and GUI languages. i...|$|E
40|$|Elliptic Curve Cryptography {{provides}} a secure means of exchanging keys among communicating hosts using the Diffie Hellman Key Exchange algorithm. Encryption and Decryption of texts and messages {{have also been}} attempted. This paper presents the implementation of ECC by first transforming the message into an affine point on the EC, and then applying the <b>knapsack</b> <b>algorithm</b> on ECC encrypted message over the finite field GF(p). In ECC we normally start with an affine point called $P_{m}$(x,y). This point lies on the elliptic curve. In this paper we have illustrated encryption/decryption involving the ASCII value of the characters constituting the message, and then subjecting it to the <b>knapsack</b> <b>algorithm.</b> We compare our proposed algorithm with RSA algorithm and show that our algorithm is better due to {{the high degree of}} sophistication and complexity involved. It is almost infeasible to attempt a brute force attack. Moreover only one parameter, namely the Knapsack vector ai alone needs to be kept secret. On the contrary in RSA, three parameters such as the modulus n, its factors p and q need to be kept secret...|$|E
3000|$|... (Cui 2005) {{proposed}} an algorithm to produce T-shape cutting patterns {{applied in the}} manufacturing of circular and sectional blanks for stators and rotors. The proposed algorithm uses the <b>knapsack</b> <b>algorithm</b> and an enumeration method to determine the optimal combination of blank rows in the strips, the strip numbers and directions in the pattern. A heuristic algorithm for the one-dimensional cutting stock problem with usable leftover is presented by (Cui & Yang 2010).|$|E
40|$|Caching certain {{results of}} {{computation}} {{has been shown}} to be an effective performance enhancement tool in the context of complex objects and rule-based systems [JHIN 88, STONSO]. In this paper we establish certain analytic results about such caching. In particular we show that caching the identifiers of the constituent subobjects may prove useful when the set of subobjects of an object is represented procedurally. How-ever, caching the values of the subobjects is often more effec-tive. We also establish certain performance characteristics of a <b>knapsack</b> based <b>algorithm</b> which can be used to optimally decide which of the precomputed results to cache. ...|$|R
40|$|This paper {{proposes to}} solve the Area Problem with {{generalization}} and {{to find a good}} structure of chromosome. The problem with a particular Large Object was presented in [IL 04]. We use the 2 biggest square heuristics to restrict the area of possibilities and to find the length of chromosome. We have a single square Large Object and square Little Objects, where each size may appear only once. The problem is to cover with these squares the Large Object, minimizing the waste. This paper can be categorized cf. [WHS 04] as Single Knapsack Problem. (SKP) Key words: rectangle placement, <b>knapsack,</b> genetic <b>algorithm</b> 1...|$|R
40|$|We propose {{an exact}} method which {{combines}} the resolution search and branch & bound algorithms for solving the 0 – 1 Multidimensional <b>Knapsack</b> Problem. This <b>algorithm</b> {{is able to}} prove large–scale strong correlated instances. The optimal values of the 10 constraint, 500 variable instances of the OR-Library are exposed. These values were previously unknown...|$|R
40|$|Abstract. A {{strategy}} for energy saving in {{wireless sensor networks}} is to manage the duty cycle of sensors, by dynamically selecting {{a different set of}} nodes to be active in every moment. We propose a {{strategy for}} node selection in multihop sensor networks that prioritizes nodes with larger residual energy and relevance for the application. The proposed scheme is based on an implementation of the <b>knapsack</b> <b>algorithm</b> and it seeks to maximize the network lifetime, while assuring the application QoS. An environmental monitoring application was simulated and huge energy savings were achieved with the proposed scheduling algorithm. 1...|$|E
40|$|Abstract. We {{study the}} problem of finding the most {{relevant}} candidates within a finite set of items under budget constraints. The choice of whether to bag an item not only depends on the actual sample {{but also on the}} associated costs and the remaining budget. We cast {{the problem of}} adapting a ranking function into the structural learning framework to capture the involved multiple-way dependencies. Key to our approach is the linearity of the rephrased task that can be solved optimally by the <b>knapsack</b> <b>algorithm.</b> Since inference is not tractable in general settings, we provide an ɛ-approximation that can be computed in polynomial time. ...|$|E
40|$|We {{present a}} simple family of {{algorithms}} for solving the Generalized Assignment Problem (GAP). Our technique {{is based on}} a novel combinatorial translation of any algorithm for the knapsack problem into an approximation algorithm for GAP. If the approximation ratio of the <b>knapsack</b> <b>algorithm</b> is α and its running time is O(f (N)), our algorithm guarantees a (1 + α) -approximation ratio, and it runs in O(M · f(N) + M · N),whereNis the number of items and M is the number of bins. Not only does our technique comprise a general interesting framework for the GAP problem; it also matches the best combinatorial approximation for this problem, with a much simpler algorithm and a better running time...|$|E
40|$|An {{efficient}} heuristic {{for solving}} two-dimensional knapsack problems is proposed. The algorithm selects an optimal subset of optimal generated strips by solving {{a sequence of}} one-dimensional knapsack problems. We show {{that the number of}} these knapsacks can be reduced to only four <b>knapsacks.</b> The <b>algorithm</b> gives an excellent worst-case experimental approximation ratio (0. 98), and a high percentage of optimal solutions (91 %). From this heuristic, we derive an approximation algorithm for which we prove some refined bounds and we show that its approximation ratio is ~. 4 Our numerical study on large size instances shows the efficiency of these algorithms for solving real-world problems which are hardly handled by other known methods, which are often limited by computer storage facilities...|$|R
40|$|A {{number of}} {{asymmetric}} cryptosystems (including {{one of the}} very first asymmetric cryptosystems – the Merkle–Hellman cryptosystem) are based on the knapsack problem. Many of these cryptosystems are proven either insecure or inapplicable due to extensive amounts of computation necessary. Never the less, presently the knapsack problem is considered to be of importance for cryptography. In this article, the <b>knapsack</b> problem solution <b>algorithm</b> based on <b>knapsack</b> packing tree search is described for the first time...|$|R
40|$|Abstract—In this paper, we {{approximately}} {{solved the}} multiple-choice multi-dimensional knapsack problem (known as MMKP), an NP-Hard combinatorial optimization problem using genetic algorithm. The performance of genetic algorithm has been evaluated on several problem instances. Parameters of genetic algorithm have been varied {{to analyze the}} effect upon result. This performance {{has been compared to}} other existing algorithms for solving MMKP. Encouraging results have been obtained. Index Terms—genetic <b>algorithm,</b> <b>knapsack</b> problem, admission control, multimedia system I...|$|R
40|$|Part 2 : Session 2 : Cloud Resource ManagementInternational audienceIn a cloud {{computing}} environment, virtual machine allocation {{is an important}} task for providing infrastructure services. Generally, the datacenters, on which a {{cloud computing}} platform runs, are distributed over a wide area network. Therefore, communication cost {{should be taken into}} consideration when allocating VMs across servers of multiple datacenters. A network-aware VM allocation algorithm for cloud is developed. It tries to minimize the communication cost and latency between servers, with the number of VMs, VM configurations and communication bandwidths are satisfied to users. Specifically, a two-dimensional <b>knapsack</b> <b>algorithm</b> is applied to solve this problem. The algorithm is evaluated and compared with other ones through experiments, which shows satisfying results...|$|E
40|$|Efficient lumber {{utilization}} at the saw {{has become}} a key issue in the woodworking industry. This is because of shrinking supply and increasing raw material prices. In this paper, formulation of the cross-cut first method of cutting defects out of lumber, as a one-dimensional stock cutting problem is discussed. A Monte-Carlo simulation method {{has been used for}} generating boards of a given grade. This simulation greatly aids in comparing alternate solution procedures proposed in the paper. To facilitate real- time application, a fast heuristic for the digital computer is introduced. This is followed by a discussion of cutting length priority allocation. The heuristic solution is compared with the optimal solution obtained using Kolesar's <b>knapsack</b> <b>algorithm...</b>|$|E
40|$|In {{research}} of existing item bank system extensively, we provide an implementation based on B/S mode network exam platform (Item bank online platform, IBOP). The design of IBOP platform {{is based on}} ASP. NET fourlayered structure model, so that the platform has good universality, expansibility and security. Subsequently, combining with Web 2  0 technology, the key function module (such as the strategy of generating test paper module, word web access module, etc) in IBOP are described in detail, and given the specific ideas of realization module by using 0 / 1 <b>knapsack</b> <b>algorithm,</b> SOAOFFICE middleware module respectively. The method on webbased item bank platform proposed in this paper can provide useful experience for other universities. ...|$|E
40|$|Abstract. This paper {{studies the}} {{worst-case}} {{performance of the}} successive approximation algorithm for four identical <b>knapsacks.</b> The <b>algorithm</b> packs the <b>knapsacks</b> successively by using an exact algorithm on the remaining items for each single knapsack. We show {{that it is an}} 8 11 -approximation algorithm, and the bound is tight. 1. Introduction. The multiple knapsack problem (MKP for short) can be defined as follows: Given a set of n items and m knapsacks such that each item j has a profit pj and a weight wj, and each knapsack i has a capacity ci. The goal is to select a subset of items that can be packed into m knapsacks and the total profit of all items in the knapsacks is maximized. For m = 1, MKP reduces to the classica...|$|R
40|$|We {{present a}} highly {{efficient}} incremental algorithm for propagating bounded <b>knapsack</b> constraints. Our <b>algorithm</b> {{is based on}} the sublinear filtering <b>algorithm</b> for binary <b>knapsack</b> constraints by Katriel et al. and achieves similar speed-ups of one to two orders of magnitude when compared with its lineartime counterpart. We also show that the representation of bounded knapsacks as binary knapsacks leads to ineffective filtering behavior. Experiments on standard knapsack benchmarks show that the new algorithm significantly outperforms existing methods for handling bounded knapsack constraints...|$|R
40|$|Abstract We give {{efficient}} algorithms {{to sample}} uniformly, and count approximately, {{solutions to the}} zero-one <b>knapsack</b> problem. The <b>algorithm</b> is based on using dynamic programming to provide a deterministic relative approximation. Then &quot;dart throwing &quot; techniques are used to give arbitrary approximation ratios. We extend this approach to several related problems: the m-constraint zero-one knapsack, the general integer knapsack (including its m-constraint version) and contingency tables with constantly many rows. We also indicate how further improvements can be obtained using randomized rounding...|$|R
40|$|Abstract: This {{research}} paper combined optimization algorithms, capacity planning, scheduling and discrete event simulation in the tile manufacturing plant, by determining the tooling, personnel and equipment {{resources that are}} required for optimal efficiency in the manufacturing process. A Dynamic Programming <b>knapsack</b> <b>algorithm</b> is used to optimally select jobs (in a 12 -stage manufacturing process) such that they contribute to the production plan within a specified duration of time (28 days). This was done {{in such a way}} that each stage contributed to an overall optimal production plan for the tile manufacturing process with minimal costs. It is recommended that the designing of production processes should match volume-variety requirements, process design positioning and the incorporation of appropriate process technology. Furthermore job designs, recognising process variability, appropriately configuring process tasks, capacity and adopting a minimal cost task-precedence are also recommended...|$|E
40|$|Abstract: Both the {{material}} usage and {{the complexity of}} the cutting process should be considered in generating cutting patterns. This paper presents an algorithm for generating guillotine-cutting patterns for rectangular blanks. It simplifies the cutting process by allowing only one size of blanks to appear in a strip. The direction of a strip is either in the sheet length direction or in the sheet width direction. The algorithm uses an implicit enumeration method and the <b>knapsack</b> <b>algorithm</b> to determine the optimal combination of strips and strip directions to make {{the material}} usage reach its maximum. The algorithm is compared with the well-known two-stage algorithm through experimental computations. The computational results indicate that the algorithm is efficient both in computation time and in material usage, and it is able to simplify the cutting process greatly. Finally, the solution to an example is given...|$|E
40|$|An optimal data packets {{scheduling}} algorithm for wireless {{data communication}} systems, knapsack filling algorithm (KFA), is presented based on Knapsack theory, {{in which the}} most suitable data packets were selected among the data packets scheduled for transmission and transfer them through frames by using dynamic program technology. The setting of the parameters of KFA was analyzed. Being different from the traditional <b>Knapsack</b> <b>algorithm,</b> KFA is for multiple-objective optimization. The system simulation {{results show that the}} system data packet throughputs of FIFS algorithm and KFA are similar when users in each cell are less than 300, but the throughput of KFA would increased by 20 % when the user number in each cell is large in the wireless communication system. KFA algorithm can improve the data throughput and satisfy different QoS requirements for users, and used in many wireless communication systems such as 3 G and 4 G systems...|$|E
50|$|While the {{knapsack}} problem {{is one of}} the most commonly solved operation research (OR) problems, there are limited efficient algorithms that can solve 0-1 quadratic <b>knapsack</b> problems. Available <b>algorithms</b> include but are not limited to brute force, linearization, and convex reformulation. Just like other NP-hard problems, it is usually enough to find a workable solution even if it is not necessarily optimal. Heuristic algorithms based on greedy algorithm, dynamic programming can give a relatively “good” solution to the 0-1 QKP efficiently.|$|R
40|$|International audienceGeometric Constraint and Cutting planes {{have been}} {{successfully}} used to solve the 0 – 1 multidimensional <b>knapsack</b> problem. Our <b>algorithm</b> combines Linear Programming with an efficient tabu search. It gives best results when compared with other algorithms on benchmarks issued from the OR-LImage. Embedding this algorithm in a variables fixing heuristic still improves our previous results. Furthermore difficult sub problems with about 100 variables issued from the 500 original ones could be generated. These small sub problems are always very hard to solve...|$|R
40|$|Recent {{advances}} in algorithms for the multidimensional multiple choice knap-sack problems have {{enabled us to}} solve rather large problem instances. How-ever, these algorithms are evaluated with very limited benchmark instances. In this study, we propose new methods to systematically generate comprehen-sive benchmark instances. Some instances with special correlation properties between parameters {{are found to be}} several orders of magnitude harder than those currently used for benchmarking the algorithms. Experiments on an exist-ing exact algorithm and two generic solvers show that instances whose weights are uncorrelated with the profits are easier compared with weakly or strongly correlated cases. Instances with classes containing similar set of profits for items and with weights strongly correlated to the profits are the hardest among all instance groups investigated. These hard instances deserve further study and understanding their properties may shed light to better algorithms. Key words: multidimensional, multiple choice, <b>knapsack</b> problem, <b>algorithm,</b> performance evaluation ∗Corresponding author...|$|R
