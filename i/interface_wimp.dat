0|73|Public
50|$|Meanwhile, average desktop {{computers}} are still based on <b>WIMP</b> <b>interfaces,</b> and have started undergoing major operational improvements to surpass the hurdles inherent {{to the classic}} <b>WIMP</b> <b>interface.</b> These include the exploration of virtual 3D space, interaction techniques for window/icon sorting, focus, and embellishment.|$|R
40|$|Abstract: Modern {{graphical}} {{user interfaces}} {{are based on the}} WIMP (Window, Icon, Menu, Pointing device) paradigm which has been introduced around 1980 and used without any dramatic change until today. In 2007, Microsoft introduced the Ribbon: a radically redesigned user interface for the Office suite as a reaction to increas-ing complexity of the Office suite user interface with each new version release. We carried out a qualitative user study on the Microsoft Word 2007 in order to analyse how the Ribbon user interface is accepted by users. Keyâ€“Words: User <b>interfaces,</b> <b>WIMP</b> paradigm, Ribbon user interface, user study, evaluation, qualitative approach. ...|$|R
50|$|The reason <b>WIMP</b> <b>interfaces</b> {{have become}} so {{prevalent}} since their conception at Xerox PARC {{is that they are}} very good at abstracting work-spaces, documents, and their actions. Their analogous paradigm to documents as paper sheets or folders makes <b>WIMP</b> <b>interfaces</b> easy to introduce to other users. Furthermore their basic representations as rectangular regions on a 2D flat screen make them a good fit for system programmers, thus favoring the abundance of commercial widget toolkits in this style.|$|R
50|$|The first {{iteration}} of Apple's <b>WIMP</b> <b>interface</b> was {{a floppy}} disk where files could be spatially moved around. After months of usability testing, Apple designed the Lisa interface of windows and icons.|$|R
50|$|In computing, post-WIMP ("windows, icons, menus, pointer") {{comprises}} work on user interfaces, mostly graphical user interfaces, which {{attempt to}} go beyond the paradigm of windows, icons, menus and a pointing device, i.e. <b>WIMP</b> <b>interfaces.</b>|$|R
5000|$|A desktop {{environment}} typically {{consists of}} icons, windows, toolbars, folders, wallpapers and desktop widgets (see Elements of graphical user <b>interfaces</b> and <b>WIMP).</b> [...] A GUI might also provide {{drag and drop}} functionality and other features that make the desktop metaphor more complete. A desktop environment aims to be an intuitive way for the user {{to interact with the}} computer using concepts which are similar to those used when interacting with the physical world, such as buttons and windows.|$|R
50|$|Before the MS-Windows age, {{and with}} the lack of a true common GUI under MS-DOS, most {{graphical}} applications which worked with EGA, VGA and better graphic cards had proprietary built-in GUIs. One of the best known such graphical applications was Deluxe Paint, a popular painting software with a typical <b>WIMP</b> <b>interface.</b>|$|R
5000|$|Other users {{claim that}} once the new {{interface}} is learned, the average user can create [...] "professional-looking documents faster". One study reported fairly good acceptance by users except highly experienced users and users of word processing applications with a classical <b>WIMP</b> <b>interface,</b> but was less convinced in terms of efficiency and organisation.|$|R
40|$|This article {{introduces}} a new interaction model called Instrumental Interaction that extends and generalizes {{the principles of}} direct manipulation. It covers existing interaction styles, including traditional <b>WIMP</b> <b>interfaces,</b> {{as well as new}} interaction styles such as two-handed input and augmented reality. It defines a design space for new interaction techniques and a set of properties for comparing them. Instrumental Interaction describes graphical user interfaces in terms of domain objects and interaction instruments. Interaction between users and domain objects is mediated by interaction instruments, similar to the tools and instruments we use in the real world to interact with physical objects. The article presents the model, applies it to describe and compare a number of interaction techniques, and shows how it was used to create a new interface for searching and replacing text. Keywords Interaction model, <b>WIMP</b> <b>interfaces,</b> direct manipulation, post-WIMP interfaces, instrumental [...] ...|$|R
5000|$|Multiple {{studies have}} {{explored}} {{the possibilities of}} moving past the <b>WIMP</b> <b>interface,</b> such as using reality-based interaction, making the interface [...] "three-dimensional" [...] by adding visual depth {{through the use of}} monocular cues, and even combining depth with physics. The latter resulted in the development of BumpTop desktop and its acquisition and release by Google.|$|R
40|$|Belinda Barnet {{interviews}} Doug Engelbart [...] -among other things, {{he invented}} the mouse, gave the world's first public demonstration of {{what became the}} <b>WIMP</b> <b>interface</b> (a design that went to Xerox {{and then on to}} Apple), created the first working hypertext system, and also pioneered video conferencing. His lab was the network information center for the early ARPANET...|$|R
50|$|Amiga created {{utilities}} {{for hard}} disk partitioning; diagnostic tools; VGA promoting tools for ancient Amiga software with TV resolution graphic screens; game loaders for storing and auto-loading from hard disks, auto-starting non-standard floppy disks; disk copiers; backup and recovery tools, archive and compression utilities; command line interfaces and text-based shells; graphical GUI <b>interfaces</b> with <b>WIMP</b> paradigm; advanced graphics systems; PostScript; fonts; font design; audio system; native, external, widely common used, and third-party filesystems; MultiView; MIME types; USB stacks; Firewire stacks (IEEE 1394); printer drivers; video digitizers; graphic tablets; scanner drivers; genlocks, chroma-key, signal video inverters; infrared devices and remote controls; WiFi and Bluetooth devices; and special devices.|$|R
40|$|This paper {{describes}} {{an attempt to}} enhance a windows based (WIMP - Windows Icon Menu Pointer) environment. The goal is to establish whether user interaction on the common desktop PC can be augmented by adding new modalities to the <b>WIMP</b> <b>interface,</b> thus bridging the gap between todays interaction patterns and future interfaces comprising e. g. advanced conversational capabilities, VR technology, etc...|$|R
40|$|This paper {{reports on}} the work {{that has been done}} by the teams above within the EvalWeb project. The work {{presented}} here describes how ergonomic rules, that are valid for the design of graphical user interfaces, should be refined and extended in order to be suitable for the ergonomic design and evaluation of web sites. To this end a distinction is made between web user <b>interfaces</b> and classical <b>WIMP</b> ones...|$|R
40|$|Research Interests The goal of my {{research}} is to improve everyday graphical user interfaces, multimodal interfaces, and other human-computer interaction techniques that encourage people to use computers as well as improving efficiency in performing individual operations. My current research interests focus on common WIMP (windows, icons, menus, and pointers) widgets. I believe that traditional <b>WIMP</b> <b>interfaces</b> can be improved by exploiting extra spatial information, e. g., mouse position and movement, which have been paid little attention so far...|$|R
40|$|International audienceIn this work, we have {{explored}} an approach {{based on the}} hybridisation of physical and digital content for mind-mapping activities at schools. Based on the literature {{in the fields of}} cognitive science and HCI, we have designed a mixed-reality (MR) interface called Reality-Map. We conducted a pilot study with 11 participants suggesting that learning and manipulating information about the brain and their cognitive functions could be improved by the use of such a MR interface compared to a traditional <b>WIMP</b> <b>interface...</b>|$|R
40|$|Since {{pioneering}} {{studies in}} the area of Human-Computer Interactions (HCI), there have been leaps in technologies such as graphical user interfaces, input devices, computer vision, speech processing, artificial intelligence, etc. Today we are witnessing a growing interest and a shift from traditional computer <b>interfaces</b> (<b>WIMP)</b> to advanced, entertaining, pervasive and more natural systems (post-WIMP). Due to its cross-disciplinary nature, the design and development of advanced human-computer interactions is not only conceptually but also practically a very challenging task. Seamless reuse and adaptation of the plethora of existing technologies is a key to successful exploration of non-conventional techniques. However, to this date, researchers and practitioners willing to explore new paths, design and implement innovative systems usually have to build ad hoc tools in order to replicate existing results or implement new interaction techniques. Incremental development is hard to achieve mainly because these ad hoc tools have not been thought in a reusable way. This thesis studies how to support HCI researchers and practitioners in their exploration and experimentation activities towards non-conventional human-computer interactions. With this work we strive for supporting innovation by providing methods, software architectures and tools which aim to unify mature techniques from communities such as HCI and Signal Processing (eye-gaze tracking, brain interface, input devices, computer vision, etc.). We propose a multi-fidelity design method based on a unifying component model and supported by an advanced tool suite, the OpenInterface Platform Workbench. This solution allows leveraging of existing resources and fosters creation of non-conventional interaction techniques. More specifically we provide a coarse-grained component-based model and a runtime platform (OIKernel) tailored for seamless reuse and composition of heterogeneous interaction components. Additionally an Eclipse-based design platform (SKEMMI) that supports collaboration of application designers and programmers and centralizes the complete multi-fidelity experimentation process (from design to implementation) is also delivered. The workbench allows exploring novel interaction techniques through seamless integration and adaptation of heterogeneous components, high-fidelity rapid prototyping and runtime evaluation of designed systems. (FSA 3) [...] UCL, 201...|$|R
40|$|We {{explore the}} use of hand postures to {{interact}} with stroke-based rendering (SBR) on touch-sensitive large displays. In contrast to traditional <b>WIMP</b> <b>interfaces,</b> we allow people to directly engage with and influence a rendering. Our system allows {{the creation of new}} stroke primitives as well as provides mechanisms to distribute and then manipulate them on the canvas. We offer a set of natural mappings from hand postures to rendering parameterizations. The resulting system allows an intuitive exploration of SBR without the need for traditional desktop interfaces. ...|$|R
40|$|The Windows-Icons-Menus-Pointer (<b>WIMP)</b> <b>interface</b> {{paradigm}} dominates modern computing systems. Yet these {{interaction techniques}} were originally developed for machines {{that are now}} 10, 15, or nearly 20 years old. Human-computer interaction currently faces the challenge of getting past this "WIMP plateau" and introducing new techniques which {{take advantage of the}} capabilities of today's computing systems and which more effectively match human capabilities. Two-handed spatial interaction techniques form one possible candidate for the post-WIMP interface in application areas such as scientific visualization, computer aided design, and medical applications...|$|R
50|$|The <b>WIMP</b> <b>interface</b> {{incorporates}} three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window {{order control}} (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The Icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|R
25|$|The <b>WIMP</b> <b>interface</b> {{is based}} around a {{stacking}} window manager and incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|R
50|$|However, <b>WIMP</b> <b>interfaces</b> are not optimal {{for working}} with complex tasks such as {{computer-aided}} design, working on large amounts of data simultaneously, or interactive games. WIMPs are usually pixel-hungry, so given limited screen real estate they can distract attention from the task at hand. Thus, custom interfaces can better encapsulate workspaces, actions, and objects for specific complex tasks. Applications for which WIMP is not well suited include those requiring continuous input signals, showing 3D models, or simply portraying an interaction {{for which there is}} no defined standard widget.|$|R
40|$|Paper is {{preferred}} and utilized {{far more than}} computers in the composerâ€™s music creation cycle {{because it is the}} natural medium in which music notation convention is learned. Current music notation software utilizes only <b>WIMP</b> <b>interfaces</b> (Windows, Icon, Menus and point and click). Our system enables users to create musical compositions by utilizing digital pen technology and having their work captured and recognized into music notation in the digital world. This recognized pen gesture data has the potential of being imported into a popular musical notation composition program for editing purposes...|$|R
50|$|The <b>WIMP</b> <b>interface</b> {{is based}} around a {{stacking}} window manager and incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|R
50|$|The Workplace Shell (WPS) is an {{object-oriented}} desktop shell (also called Desktop Environment) {{produced by}} IBM's Boca Raton development lab for OS/2 2.0. It {{is based on}} Common User Access and made a radical shift away from the Program Manager type interface that earlier versions of OS/2 shared with Windows 3.x or the application-oriented <b>WIMP</b> <b>interface</b> of the Apple Macintosh. The Workplace Shell was also used in OS/2 Warp 3 and Warp 4, and is still the user interface of the revamped successor to OS/2 called eComStation of Serenity Inc.|$|R
5000|$|The GFA BASIC {{interpreter}} is {{compact and}} reasonably fast, and was shipped with a runtime {{that could be}} distributed freely with one's programs. When a compiler was made available, execution speed could be increased by approximately a factor of 2. GFA BASIC allowed extreme optimisations for execution speed, supporting some direct assembler-level calls, and even the ability to embed sections of assembler code directly within the BASIC source code. GFA BASIC integrated neatly into GEM and TOS, the Atari ST's operating system, providing menus, dialog boxes, and mouse control. (See <b>WIMP</b> <b>interface.)</b> ...|$|R
25|$|Since the {{commands}} available in command line interfaces can be many, complex operations {{can be performed}} using a short sequence of words and symbols. This allows greater efficiency and productivity once many commands are learned, but reaching this level takes some time because the command words may not be easily discoverable or mnemonic. Also, using the command line can become slow and error-prone when users must enter long commands comprising many parameters or several different filenames at once. However, windows, icons, menus, pointer (<b>WIMP)</b> <b>interfaces</b> present users with many widgets that represent and can trigger some of the system's available commands.|$|R
40|$|This paper {{describes}} {{recent work}} which challenges {{the predominance of}} the <b>WIMP</b> (Windows-Icons-Menus-Pointers) computer <b>interface</b> for use in real-time situations. The results of the work have implications {{for the design of}} user-interfaces for real-time control tasks (of which musical performance and experimentation are clear examples). This paper describes the tests, the interfaces, and the results from a variety of test subjects over several weeks. It then draws conclusions about the appropriateness of commonly accepted interfaces for complex and creative tasks. 1. Background The <b>WIMP</b> <b>interface</b> (Windows-Icons-Menus-Pointers) originated in the 1970 â€™s as what was then a radical way o...|$|R
50|$|Since the {{commands}} available in command line interfaces can be many, complex operations {{can be performed}} using a short sequence of words and symbols. This allows greater efficiency and productivity once many commands are learned, but reaching this level takes some time because the command words may not be easily discoverable or mnemonic. Also, using the command line can become slow and error-prone when users must enter long commands comprising many parameters or several different filenames at once. However, windows, icons, menus, pointer (<b>WIMP)</b> <b>interfaces</b> present users with many widgets that represent and can trigger some of the system's available commands.|$|R
40|$|Recent keyboard-based {{alternatives}} to <b>WIMP</b> <b>interfaces</b> {{do not have}} good support for commands that require multiple parameters. We remedy this by extending a previous design and mimicking dialog boxes to provide good visual feedback while still keeping the advantages of keyboard input. A laboratory study showed the new technique to be competitive with dialog boxes on speed and error rate, but strongly preferred over dialog boxes by experienced command line users. This is a marked improvement over the previous design, which was also preferred by the target user group but did not compete with dialog boxes in terms of performance. Author Keywords Command-line interfaces, dialog boxes, WIM...|$|R
40|$|NoThe {{boundaries}} between {{different kinds of}} media spaces are complex and challenging. The convergence of computing, media, and telecommunications produces environments that contain elements of their origins, but also contain new components that allow interaction in new ways by new users with new kinds of information. This poses problems for effective human computer interaction and human media interaction because the paradigms are not well understood. Converged environments are driving these new uses just as the first PCs supported keyboards and then <b>WIMP</b> <b>interfaces.</b> Traditional models of human computer interaction are not adequate {{to deal with this}} complexity, and the shifting of the boundaries brought about by convergence...|$|R
40|$|Abstract: We have {{developed}} a browsing tool for visualizing information about the lunar surface that uses map-based AR (augmented reality) in which virtual objects are superimposed on an actual map, resulting in a tangible user interface. In particular, our browsing tool enables a user {{to learn about the}} exploration conducted during the Apollo 17 mission by using a map of the lunar surface with geographically embedded information. We conducted a preliminary experiment to investigate the practicality of this interface compared to a WIMP (window, icon, menu, pointer) interface. The results showed that the AR interface is suitable for learning about the lunar surface and that it is probably better for children than the <b>WIMP</b> <b>interface...</b>|$|R
5000|$|Included in Office 2007. This {{release was}} a major upgrade from the {{previous}} version. Similar to other updated Office products, Excel in 2007 used the new Ribbon menu system. This was different from what users were used to, and was met with mixed reactions. One study reported fairly good acceptance by users except highly experienced users and users of word processing applications with a classical <b>WIMP</b> <b>interface,</b> but was less convinced in terms of efficiency and organisation. However, an online survey reported {{that a majority of}} respondents had a negative opinion of the change, with advanced users being [...] "somewhat more negative" [...] than intermediate users, and users reporting a self-estimated reduction in productivity.|$|R
40|$|This {{invited paper}} {{describes}} a vision and progress towards a fundamentally new approach {{for dealing with}} the massive information overload situation of the emerging global information age. Today we use techniques such as data mining, through a <b>WIMP</b> <b>interface,</b> for searching or for analysis. Yet, the human mind can deal and interact simultaneously with millions of information items, e. g. documents. The challenge is to find visual paradigms, interaction techniques, and physical devices that encourage a new human information discourse between the human and their massive global and corporate information resources. After the vision, the current progress towards some core technology development, we present the grand challenges to bring this vision to reality. KEYWORDS: Information visualization, World Wide Web, data mining, digital libraries, visual paradigms, higherorde...|$|R
40|$|The human-computer {{interface}} {{is a crucial}} element {{in the design of}} the next generation of Geographic Information Systems (GISs). We discuss the user interface design process by separating the formalization of the problem domain (identifying the objects a user manipulates, and their pertinent operations) from its visualization (describing human-computer interaction techniques such as windows and dialog boxes). This framework is used to examine the process of manipulating attribute data in a GIS on the basis of the common cartographic concept of a categorical coverage. The characteristics of categorical coverage data and the user requirements for interacting with this data are formalized in the form of a set of fundamental objects and operations. A visualization for a windows-icons-menus-pointing devices (<b>WIMP)</b> <b>interface</b> is presented...|$|R
40|$|Computer vision-based sensing {{of people}} enables {{a new class}} of public {{multi-user}} computer interfaces. Computing resources in public spaces, such as automated, information-dispensing kiosks, represent a computing paradigm that differs from the conventional desktop environment and, correspondingly, require a user-interface metaphor quite unlike the traditional <b>WIMP</b> <b>interface.</b> This paper describes a prototype public computer interface, which employs color and stereo tracking to sense the users' activity and an animated, speaking agent to attract attention and communicate through visual and audio modalities. URL: [URL] Keywords: Agents, Blob Tracking, Color Tracking, Facial Animation, HumanComputer Interaction, Smart Kiosk, Stereo c flDigital Equipment Corporation 1996. All rights reserved. CONTENTS i Contents 1 Introduction 1 2 Characteristics of Public User-Interfaces 2 3 The Smart Kiosk Interface 3 3. 1 Designing the I [...] ...|$|R
