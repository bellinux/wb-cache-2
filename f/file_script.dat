2|453|Public
40|$|These {{resources}} {{are designed to}} support students in gaining more confidence with using Matlab. The PDFs provide guidance and information; Objectives: Introduce basic syntax and data preparation for graphing with Matlab by providing some data, examples of code and some background documents. Outcomes: -how to write an m <b>file</b> <b>script</b> -the importance of syntax -how to load files -how to produce simple graphs -where to get help and further examples There are also some data files to provide example data for students to work with in producing Matlab resources...|$|E
40|$|The {{purpose of}} this lab is to get {{familiar}} with the Radon transform and tomographic imaging {{with the help of}} matlab and the image processing toolbox. A short lab report should be submitted in electronic form as a PDF file. Illustrate your results with images and brief explanatory comments. A short lab report should be submitted in electronic form as a PDF file. Hand in your work as a zip file containing your report, your code in one running. m <b>file</b> (<b>script)</b> and any supporting functions, along with the images you have used (reference your images with relative paths in your code). Submit your. zip files to mlanger@esrf. fr. Deadlines are: 27 / 01 / 2015 for the Tuesday group 29 / 01 / 2015 for the Thursday group. Assignments Properties of the Radon transform The {{purpose of this}} section is to investigate the effect on the sinogram of geometrical transformations (translation, rotation, change of scale) on the input image...|$|E
5000|$|Batch <b>file</b> <b>scripting,</b> {{command-line}} interface and [...]NET wrapper ...|$|R
5000|$|Basecamp adopted Chef as a {{means of}} “documenting an entire {{infrastructure}} setup in a single code base, rather than a set of disparate <b>files,</b> <b>scripts</b> and commands.” ...|$|R
5000|$|It is also {{sometimes}} useful to avoid escaping strings manually, particularly for using literals of XML <b>files,</b> <b>scripting</b> languages, or regular expressions. C++11 provides a raw string literal: ...|$|R
5000|$|Examples of {{artifacts}} include model <b>files,</b> source <b>files,</b> <b>scripts,</b> and binary executable files, {{a table in}} a database system, a development deliverable, or a word-processing document, a mail message.|$|R
5000|$|SWFTools (specifically, swfc) is an {{open-source}} ActionScript 3.0 compiler which generates SWF <b>files</b> from <b>script</b> <b>files,</b> {{which includes}} SVG tags.|$|R
5000|$|An ELI file {{ends with}} [...] is an ELI <b>script</b> <b>file</b> which {{contains}} all methods and data. A {{simple way to}} create a <b>script</b> <b>file</b> is using the command [...] However, a clean workspace without any debugging/error information left is required before you can output a <b>script</b> <b>file.</b> Later, the command [...] is able to load the <b>script</b> <b>file</b> back.|$|R
5000|$|The JobScheduler {{can start}} {{executable}} <b>files,</b> shell <b>scripts</b> and database procedures.|$|R
40|$|Lots {{of small}} fixes and {{improvements}} 	script to plot cube <b>files</b> 	<b>script</b> to convert intermediate cube format written by Quantum ESPRESSO to Gaussian cube format 	script to perform STS plots with Quantum Espresso (also works with intermediate cube format) 	read dielectric matrix from BerkeleyGW 	orbital extrapolation: average hartree potential where electrons are 	bug fixe...|$|R
5000|$|The test specification. This {{specifies}} all {{the tests}} {{that are to}} be performed and what results are to be checked for. Often tests are run within automated test harnesses and the tests specified either within code <b>files</b> or <b>script</b> <b>files.</b>|$|R
5000|$|It {{is often}} useful to put several sed {{commands}}, one command per line, into a <b>script</b> <b>file</b> such as , {{and then use}} the [...] option to run the commands (such as [...] ) from the file:sed -f subst.sed inputFileName > outputFileNameAny number of commands may be placed into the <b>script</b> <b>file,</b> and using a <b>script</b> <b>file</b> also avoids problems with shell escaping or substitutions.|$|R
40|$|Here {{practical}} {{aspects of}} conducting research via computer simulations are discussed. The following issues are addressed: software engineering, object-oriented software development, programming style, macros, make <b>files,</b> <b>scripts,</b> libraries, random numbers, testing, debugging, data plotting, curve fitting, finite-size scaling, information retrieval, and preparing presentations. Because {{of the limited}} space, usually only short introductions to the specific areas are given and references to more extensive literature ar...|$|R
5000|$|A {{server-side}} {{script that}} can be included by the user-facing <b>file.</b> This <b>script</b> outputs the [...] "Content"; ...|$|R
5000|$|HP SiteScope {{supports}} {{more than}} 100 types of application in physical and virtual environments and can monitor servers, databases, applications, networks, web transactions, streaming technology and integration technology, {{as well as}} generic elements including <b>files,</b> <b>scripts</b> and directories. [...] HP SiteScope monitoring supports mid-tier processes, URLs, utilization of servers and response time of the mid-tier processes. Users can set thresholds for specific characteristics and be alerted for critical or warning conditions.|$|R
40|$|Motivation: Identification {{of genes}} coding for ribosomal RNA (rRNA) is {{considered}} an important goal {{in the analysis of}} data from metagenomics projects. Here, we report the development of a software program designed for the identification of rRNA genes from metagenomic fragments based on hidden Markov models (HMMs). This program provides rRNA gene predictions with high sensitivity and specificity on artificially fragmented genomic DNAs. Availability: Supplementary <b>files,</b> <b>scripts</b> and sample data are available a...|$|R
40|$|This {{document}} {{assumes that}} you have read and understood the Wingz user`s manuals. CaWingz is an external Wingz program which, when combined {{with a set of}} <b>script</b> <b>files,</b> provides easy-to-use EPICS channel access interface functions for Wingz users. The external function run allows Wingz user to invoke any Unix processor within caWingz. Few additional functions for accessing static database field and monitoring of value change event is available for EPICS users after release 3. 11. The functions, <b>script</b> <b>files,</b> and usage are briefly described in this document. The <b>script</b> <b>files</b> supplied here serve as examples only. Users are responsible for generating their own spreadsheet and <b>script</b> <b>files.</b> CaWingz communicates with IOC through channel access function calls...|$|R
5000|$|Separation: For {{the benefit}} of other and future web developers, all JavaScript code is {{maintained}} separately, without impacting other <b>files</b> of <b>script,</b> markup or code.|$|R
40|$|Summary: Quantification {{applications}} of short-tag sequencing data (such as CNVseq and RNAseq) depend on knowing {{the uniqueness of}} specific genomic regions at a given threshold of error. Here, we present the ‘uniqueome’, a genomic resource for understanding the uniquely mappable proportion of genomic sequences. Pre-computed data are available for human, mouse, fly and worm genomes in both color-space and nucletotide-space, and we demonstrate the utility of this resource as applied to the quantification of RNAseq data. Availability: <b>Files,</b> <b>scripts</b> and supplementary data are available fro...|$|R
50|$|Like many game data formats, {{the file}} {{is able to}} archive several files used by the game. These may include graphics, 3d models, animations, sound <b>files,</b> and <b>scripts.</b>|$|R
40|$|This work {{deals with}} develop of PC {{application}} to support automated testing of prototypes, which are developing in Honeywell International, Inc., ACS division in Brno. There was created a PC software witch executes testing process based on input <b>script</b> <b>files.</b> For select <b>script</b> <b>files</b> and specify other necessary information was designed a graphic user interface. Testing information are being {{presented in a}} program information control in real-time as the same as results of tests. The application also allow to users save the log file. The program has been realized in C# programing language...|$|R
50|$|A {{feature of}} many {{command-line}} shells {{is the ability}} to save sequences of commands for re-use. A data file can contain sequences of commands which the CLI can be made to follow as if typed in by a user. Special features in the CLI may apply when it is carrying out these stored instructions. Such batch <b>files</b> (<b>script</b> <b>files)</b> can be used repeatedly to automate routine operations such as initializing a set of programs when a system is restarted. Batch mode use of shells usually involves structures, conditionals, variables, and other elements of programming languages; some have the bare essentials needed for such a purpose, others are very sophisticated programming languages in and of themselves. Conversely, some programming languages can be used interactively from an operating system shell or in a purpose-built program.|$|R
30|$|All the {{executable}} <b>files</b> and <b>scripts</b> {{are stored}} in an NFS directory that is accessible by all nodes. This way Castadiva makes storage capacity independent of wireless nodes' memory.|$|R
5000|$|Email {{notifications}} and triggers for batch <b>files,</b> executables and <b>scripts</b> ...|$|R
50|$|The PIKT {{binaries}} {{are written}} {{using a combination}} of C, lex (flex), and yacc (bison). PIKT's configuration combines free-form text <b>files,</b> Pikt <b>scripts,</b> and programs written in other popular scripting languages.|$|R
5000|$|It is not {{necessary}} to maintain proper order of <b>script</b> <b>files</b> declaration; ...|$|R
5000|$|A MenuBox project {{consists}} of a single, redistributable binary file (MenuBox.exe, may also be renamed), one configuration file (in INI format, may be merged into Autorun.inf) and the actual content <b>files</b> (HTML, <b>scripts,</b> images, etc.) ...|$|R
40|$|Para_zscore data Input data, {{annotation}} of all hg 19 missense variants, {{score for}} every gene having a paralog {{in the human}} genes. This dataset is a supplement for the publication Lal. et al. Information on the <b>files,</b> <b>scripts</b> to generate and use the para_zscore are available under [URL] Version 840860 changes: The family 225. para. 1 changed because of {{a problem with the}} multiple alignment of TTN. TTN is now not part of the family anymore. Updated files with the according changes for this family and family members have been added, plus a new track that can directly plugged into Annovar has been added...|$|R
50|$|Gradle has a {{very tight}} {{integration}} with Ant, and even treats Ant build <b>files</b> as <b>scripts</b> that could be directly imported while building. The example below shows a simplistic Ant target being incorporated as a Gradle task.|$|R
40|$|Introduction [...] 2 2 Data Formats (for BATCH learning) [...] . 3 3 Parameters & <b>Script</b> <b>File</b> [...] 3 3. 1 Script descriptors, Parameters & their {{interpretation}} [...] . 3 3. 2 Example <b>script</b> <b>file</b> [...] 9 4 Basic {{elements of the}} program code [...] 11 4. 1 The event loop [...] 11 4. 2 Details of the Main C-Routine [...] 13...|$|R
50|$|Script editors {{provide a}} unified programing {{environment}} for AppleScripts, including tools for composing, validating, compiling, running, and debugging scripts. They also provide mechanisms for opening and viewing AppleScript dictionaries from scriptable applications, saving scripts {{in a number}} of formats (compiled <b>script</b> <b>files,</b> application packages, <b>script</b> bundles, and plain text files), and usually provide features such as syntax highlighting and prewritten code snippets.|$|R
5000|$|May 2008 - psake {{originally}} {{written by}} James Kovacs as a PowerShell V1 <b>script</b> <b>file</b> ...|$|R
5000|$|The current version {{ships with}} four JAR <b>files,</b> and shell <b>scripts</b> to launch four JMF-based applications: ...|$|R
50|$|The University of Southern California Warner Bros. Archives is {{the largest}} single studio {{collection}} in the world. Donated in 1977 to USC's School of Cinema-Television by Warner Communications, the WBA houses departmental records that detail Warner Bros. activities from the studio's first major feature, My Four Years in Germany (1918), to its sale to Seven Arts in 1968. It presents a complete view of the production process during the Golden Age of Hollywood. UA donated pre-1950 Warner Bros. nitrate negatives to the Library of Congress and post-1951 negatives to the UCLA Film and Television Archive. Most of the company's legal <b>files,</b> <b>scripts,</b> and production materials were donated to the Wisconsin Center for Film and Theater Research.|$|R
50|$|The Konica Minolta Mediaglobe system {{provides}} full-dome digital animation. The Mediaglobe I {{system provides}} {{the ability to}} display night-time scenery {{similar to those of}} Stellarium and other on-earth planetarium software. It also allows the playback of 1280x1024 MPEG video at 30fps using a 1024 pixel diameter inscribed circle. The Mediaglobe II further improves on the Mediaglobe software and hardware allowing for off-earth space simulations similar to those in Celestia. Video on the Mediaglobe II system is more difficult to display and requires a container file linking the OGG sound file and the m2v video <b>file.</b> <b>Scripting</b> for the Mediaglobe II is provided by a Java implementation, while scripting for the Mediaglobe I system is a custom Basic format.|$|R
50|$|VBScript can be {{included}} in two other types of scripting files: Windows <b>Script</b> <b>Files,</b> and HTML Applications.|$|R
