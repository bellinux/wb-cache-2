1101|10000|Public
5|$|In {{computational}} geometry, the duality between Voronoi diagrams and Delaunay triangulations {{implies that}} any algorithm for constructing a Voronoi diagram can be immediately converted into an algorithm for the Delaunay triangulation, and vice versa. The same duality {{can also be}} used in <b>finite</b> <b>element</b> <b>mesh</b> generation. Lloyd's algorithm, a method based on Voronoi diagrams for moving a set of points on a surface to more evenly spaced positions, is commonly used as a way to smooth a <b>finite</b> <b>element</b> <b>mesh</b> described by the dual Delaunay triangulation. This method improves the mesh by making its triangles more uniformly sized and shaped.|$|E
5000|$|Topping, B.H.V., Muylle, J., Ivan´ yi, P., Putanowicz, R., Cheng, B., <b>Finite</b> <b>Element</b> <b>Mesh</b> Generation, Saxe-Coburg Publications, Stirling, 2004 ...|$|E
50|$|In {{computational}} geometry, the duality between Voronoi diagrams and Delaunay triangulations {{implies that}} any algorithm for constructing a Voronoi diagram can be immediately converted into an algorithm for the Delaunay triangulation, and vice versa. The same duality {{can also be}} used in <b>finite</b> <b>element</b> <b>mesh</b> generation. Lloyd's algorithm, a method based on Voronoi diagrams for moving a set of points on a surface to more evenly spaced positions, is commonly used as a way to smooth a <b>finite</b> <b>element</b> <b>mesh</b> described by the dual Delaunay triangulation. This method improves the mesh by making its triangles more uniformly sized and shaped.|$|E
40|$|Electrical Impedance Tomography (EIT) {{intends to}} obtain the {{conductivity}} distribution of a domain from the electrical boundary conditions. This is an ill-posed inverse problem usually solved on <b>finite</b> <b>element</b> <b>meshes.</b> Wavelet transforms are widely used for medical image reconstruction. However, because of the irregular form of the <b>finite</b> <b>element</b> <b>meshes,</b> the canonical wavelet transforms is impossible to perform on meshes. In this article, we present a framework that combines multi-scales wavelet transforms and <b>finite</b> <b>element</b> <b>meshes</b> by viewing meshes as undirected graphs and applying spectral graph wavelet transform on the meshes...|$|R
40|$|Adaptive mesh {{refinement}} procedures with <b>finite</b> <b>elements</b> {{have been}} used for some time in computing compressible high-speed flows. Mesh refinement procedures for triangular <b>finite</b> <b>element</b> <b>meshes</b> were initially detailed by Zienkiewicz et al. Applications of these procedures to compressible flow have been extensively demonstrated by Ramakrishnan et al. Adaptive procedures for <b>finite</b> <b>element</b> <b>meshes</b> with quadrilateral <b>elements</b> are discussed in Oden et al. and Shapiro and Murman...|$|R
5000|$|DOLFIN, a C++/Python library {{providing}} data {{structures and}} algorithms for <b>finite</b> <b>element</b> <b>meshes,</b> automated <b>finite</b> <b>element</b> assembly, and numerical linear algebra.|$|R
5000|$|In {{two-dimensional}} space, {{the lowest}} order Raviart Thomas space, , has {{degrees of freedom}} {{on the edges of}} the elements of the <b>finite</b> <b>element</b> <b>mesh.</b> The th edge has an associated basis function defined by ...|$|E
50|$|The {{condition}} {{number of the}} stiffness matrix depends strongly {{on the quality of}} the numerical grid. In particular, triangles with small angles in the <b>finite</b> <b>element</b> <b>mesh</b> induce large eigenvalues of the stiffness matrix, degrading the solution quality.|$|E
50|$|It {{was long}} conjectured by {{engineers}} that passing the patch test {{is sufficient for}} the convergence of the finite element, that is, {{to ensure that the}} solutions from the finite element method converge to the exact solution of the partial differential equation as the <b>finite</b> <b>element</b> <b>mesh</b> is refined. However, this is not the case, and the patch test is neither sufficient nor necessary for convergence.|$|E
40|$|The use of <b>finite</b> <b>element</b> {{software}} packages has become commonplace {{in the application}} of geotechnical engineering. The application of the majority of this software remains hobbled by the need to manually draw <b>finite</b> <b>element</b> <b>meshes.</b> Manual generation of <b>finite</b> <b>element</b> <b>meshes</b> has further hindered the jump to the application of 3 D <b>finite</b> <b>element</b> models as it remains difficult to create a 3 D model in a reasonable time frame. Significant convergence problems further hinder model solution once <b>finite</b> <b>element</b> <b>meshes</b> are created. This paper studies the application of automatic mesh generation and automatic mesh refinement to a variety of typical problems encountered in geotechnical engineering. Common seepage, contaminant transport, and thermal geotechnical problems are examined. In particular, the application of the SVFlux and ChemFlux {{software packages}} to a variety of common problems is examined. The advantages of the automatic mesh generation and automatic mesh refinement are examined in detail...|$|R
40|$|An {{approach}} for the fully automatic generation of two-dimensional <b>finite</b> <b>element</b> <b>meshes</b> is presented. The method {{follows from the}} basic concept of the quadtree encoding technique with the specific modifications made to produce valid, user controllable <b>finite</b> <b>element</b> <b>meshes.</b> The use of quadtree method for mesh generation was pioneered by Shephard and Yerry, (6). Our work is similar but more general than theirs. In this thesis after giving an overview of <b>finite</b> <b>element</b> method and <b>mesh</b> requirements, the quadtree and modified quadtree techniques are introduced. Then paper emphasizes on those algorithmic aspects of the mesh generator especially on transferring quadtree code to finite mesh. Finally, examples are included to demonstrate this technique and conclusions are given...|$|R
5000|$|Generate a 2D or 3D mesh for {{analysis}} calculations. Automatic algorithms can create <b>finite</b> <b>element</b> <b>meshes,</b> or users can create structured meshes {{to maintain control}} over element quality.|$|R
5000|$|... #Caption: Fig. 5 Schematic {{explanation}} of failure of Sleipner A Oil Platform, Norway 1991. The tricell of this $500 million, 190m meters tall, structure imploded under water head of 67 m, causing the platform so sink within 18 minutes (no fatalities). A government commission identified two factors causing failure: poor detailing of reinforcement, and poor <b>finite</b> <b>element</b> <b>mesh.</b> A separate investigation documented a third contributing factor: the size {{effect in the}} shear failure shown, which reduced the shear capacity by about 40%.|$|E
50|$|In <b>finite</b> <b>element</b> <b>mesh</b> generation, Laplacian {{smoothing}} is {{a common}} method for postprocessing a generated mesh {{to improve the quality}} of its elements; it is particularly popular for quadrilateral meshes, for which other methods such as Lloyd's algorithm for triangular mesh smoothing are less applicable. In this method, each vertex is moved to or towards the average of its neighbors' positions, but this motion is only performed for a small number of iterations, to avoid large distortions of element sizes or (in the case of non-convex mesh domains) tangled non-planar meshes.|$|E
5000|$|... p-FEM or the p-version of {{the finite}} element method is a {{numerical}} method for solving partial differential equations. It is a discretization strategy in which the <b>finite</b> <b>element</b> <b>mesh</b> is fixed and the polynomial degrees of elements are increased such that the lowest polynomial degree, denoted by , approaches infinity. This is {{in contrast with the}} [...] "h-version" [...] or [...] "h-FEM", a widely used discretization strategy, in which the polynomial degrees of elements are fixed and the mesh is refined such that the diameter of the largest element, denoted by [...] approaches zero.|$|E
40|$|A {{method is}} {{presented}} to recover nearly optimal <b>finite</b> <b>element</b> <b>meshes</b> represented by mesh density functions described by a few parameters. The density representation of <b>finite</b> <b>element</b> <b>meshes</b> {{is part of a}} methodology for adaptive solution of linear or non linear parameter dependent problems allowing easy optimization, storage, and comparison of meshes. This gives the possibility of easy prediction of meshes for future parameter values for parametrized problems. Asymptotical results showing the optimality of the recovered meshes are given, and computational examples show the validity of the results also for coarse meshes 1...|$|R
40|$|A {{method for}} {{automated}} generation of <b>finite</b> <b>element</b> <b>meshes</b> for unidirectional composites with waviness defects is proposed. Images {{used as input}} for mesh generation are recorded with X-ray computed micro-tomography. Quality and contrast of the scanned images is such that fiber directions cannot be detected everywhere. To generate <b>finite</b> <b>elements</b> <b>mesh</b> that follow fiber directions it is suggested to interpolate available fiber slope data using radial basis functions and to create mesh nodes by integrating ordinary differential equations for fiber slopes. Examples demonstrate practical steps of detecting waviness from volume slice images and generation of meshes that model waviness defects with acceptable accuracy...|$|R
40|$|Ø Implicit {{function}} {{methods such as}} level-set method, although attractive, require periodic reinitialization, for example, to {{a signed}} distance function for numerical convergence. Ø Polygonal/Polyhedral <b>elements</b> circumvent the <b>mesh</b> bias observed in standard <b>finite</b> <b>element</b> <b>meshes</b> (triangles/tetrahedra or quads/bricks) ...|$|R
5000|$|When [...] {{needs to}} be adjusted, the {{softening}} stress strain relation is adjusted so as to maintain the correct energy dissipation [...] A more versatile method is the nonlocal damage model in which the stress at a continuum point is a function not of the strain at that point but of {{the average of the}} strain ﬁeld within a certain neighborhood of size [...] centered at that point. Still another method is the gradient damage model in which the stress depends not only on the strain at that point but also on the gradient of strain. All these computational methods can ensure objectivity and proper convergence with respect to the reﬁnement of the <b>ﬁnite</b> <b>element</b> <b>mesh.</b>|$|E
5000|$|DIVA (Data-Interpolating Variational Analysis) {{allows the}} spatial interpolation/gridding of data (analysis) in an optimal way, {{comparable}} to optimal interpolation (OI), {{taking into account}} uncertainties on observations. In comparison to standard OI, used in Data assimilation, DIVA, when applied to ocean data, takes into account coastlines, sub-basins and advection because of its variational formulation on the real domain. Calculations are highly optimized and rely on a finite element resolution. Tools to generate the <b>finite</b> <b>element</b> <b>mesh</b> are provided as well as tools to optimize {{the parameters of the}} analysis. Quality control of data can be performed and error fields can be calculated. Also detrending of data is possible. Finally 3D and 4D extensions are included with emphasis on direct computations of climatologies from ODV [...] spreadsheet files.|$|E
50|$|For {{selecting}} {{points from}} a continuous space {{such as the}} Euclidean plane, rather than a finite set of candidate points, these methods will not work directly, because {{there would be an}} infinite number of distances to maintain. Instead, each new point should be selected as the center of the largest empty circle defined by the previously-selected point set. This center will always lie on a vertex of the Voronoi diagram of the already selected points, or at a point where an edge of the Voronoi diagram crosses the domain boundary. In this formulation the method for constructing farthest-first traversals has also been called incremental Voronoi insertion. It is similar to Ruppert's algorithm for <b>finite</b> <b>element</b> <b>mesh</b> generation, but differs in the choice of which Voronoi vertex to insert at each step.|$|E
40|$|The recent {{transition}} from meshing the whole model towards the independent meshing {{of the assembly}} parts introduced new challenges also in the task of visualizing and pre-processing the <b>finite</b> <b>element</b> <b>meshes.</b> One part of our work is the visualization and removal of mesh penetrations and perforations, a frequently encountered problem when assembly parts are meshed independently. Further on, {{we focus on the}} visualization and the interactive definition of mesh-independent connections between car components represented by <b>finite</b> <b>element</b> <b>meshes.</b> We present methods to automatize the flange recognition, as connections are usually placed along flanges. There are basically three types of connections to visualize and edit: point links, line links and surface links...|$|R
40|$|Neither the <b>finite</b> <b>element</b> method nor the Discontinuous Deformation Analysis (DDA) method {{can solve}} {{problems}} {{very well in}} rock mechanics and engineering due to their extreme complexities. In this paper, the Three-Dimensional Discontinuous Deformation Analysis (3 -D DDA) is derived, based on <b>finite</b> <b>element</b> <b>meshes</b> to enhance 3 -D DDA’s capabilities of modeling a deformable block. The formulations of the equilibrium equations in 3 -D DDA with <b>finite</b> <b>element</b> <b>meshed</b> block system due to elastic stress, initial stress, point load, fixed point, inertia force, and normal contact force are extended by incorporating the conventional eight-node hexahedron isoparametric elements. Two illustrative examples are presented to show the improvement achieved by use of <b>finite</b> <b>element</b> in association with 3 -D DDA to handle problems under large displacements and deformations. The calculated result...|$|R
40|$|Zienkiewicz–Zhu error estimators on {{anisotropic}} tetrahedral and triangular <b>finite</b> <b>element</b> <b>meshes</b> Preprint SFB 393 / 01 - 20 We {{consider a}} posteriori error estimators {{that can be}} applied to anisotropic tetrahedral <b>finite</b> <b>element</b> <b>meshes,</b> i. e. meshes where the aspect ratio of the elements can be arbitrarily large. Two kinds of Zienkiewicz–Zhu (ZZ) type error estimators are derived which are both based on some recovered gradient. Two different, rigorous analytical approaches yield the equivalence of both ZZ error estimators to a known residual error estimator. Thus reliability and efficiency of the ZZ error estimation is obtained. Particular attention is paid to the requirements on the anisotropic mesh. The analysis is complemented and confirmed by several numerical examples...|$|R
50|$|The {{extended}} {{finite element}} method was developed to ease difficulties in solving problems with localized features that are not efficiently resolved by mesh refinement. One of the initial applications was the modelling of fractures in a material. In this original implementation, discontinuous basis functions are added to standard polynomial basis functions for nodes that belonged to elements that are intersected by a crack to provide a basis that included crack opening displacements. A key advantage of XFEM is that in such problems the <b>finite</b> <b>element</b> <b>mesh</b> {{does not need to}} be updated to track the crack path. Subsequent research has illustrated the more general use of the method for problems involving singularities, material interfaces, regular meshing of microstructural features such as voids, and other problems where a localized feature can be described by an appropriate set of basis functions.|$|E
50|$|The SWMS_2D and CHAIN_2D models {{formed the}} bases of {{versions}} 1.0 (for 16-bit Windows 3.1) and 2.0 (for 32-bit Windows 95) of HYDRUS-2D (Šimůnek et al., 1999). A unique feature of HYDRUS-2D was that it used a Microsoft Windows based Graphics User Interface (GUI) to manage the input data required to run the program, {{as well as for}} nodal discretization and editing, parameter allocation, problem execution, and visualization of results. It could handle flow regions delineated by irregular boundaries, as well as three-dimensional regions exhibiting radial symmetry about the vertical axis. The code includes the MeshGen2D mesh generator, which was specifically designed for variably-saturated subsurface flow and transport problems. The mesh generator may be used for defining very general domain geometries, and for discretizing the transport domain into an unstructured <b>finite</b> <b>element</b> <b>mesh.</b> HYDRUS-2D has been recently fully replaced with HYDRUS (2D/3D) as described below.|$|E
30|$|The <b>Finite</b> <b>Element</b> <b>mesh</b> is {{composed}} of 116,  136 HEX 8 elements, with 147,  245 nodes.|$|E
40|$|Summary: Unconstrained Paving and Plastering [1] were {{introduced}} as {{new methods of}} generating all-quadrilateral and all-hexahedral <b>finite</b> <b>element</b> <b>meshes.</b> Their introduction was after preliminary conceptual studies. This paper presents an update on Unconstrained Paving and Plastering after significant implementation and conceptual development. ...|$|R
40|$|In this study, {{we present}} {{triangular}} mesh generation method considering stress concentration near internal crack tip. The {{total number of}} nodes and elements affect the computational time, and it is desired that the location of nodes is distributed such that distribution of physical variables is appropriately expressed. In this study, {{we focus on the}} distribution of stress components near crack tip, and propose the automatic mesh generation method considering the stress concentration. In addition, the stress analysis using the <b>finite</b> <b>element</b> <b>meshes</b> obtained by the present method is carried out, and the stress distribution near crack tip is compared with that obtained by using the other meshes. Furthermore, the stress analysis for V-notched plate is carried out using the <b>finite</b> <b>element</b> <b>meshes</b> obtained by the present method...|$|R
5000|$|Generation of 3D <b>finite</b> <b>element</b> (FE) <b>meshes</b> from {{segmented}} image data ...|$|R
40|$|A new, {{simple and}} {{effective}} finite element procedure is presented for the practical solution of heat transfer conditions with phase changes. In this method, a fixed <b>finite</b> <b>element</b> <b>mesh</b> is employed, and a relatively coarse <b>finite</b> <b>element</b> <b>mesh</b> and large time step {{can be used}} in the incremental solution. The results of various numerical studies using the algorithm are presented that demonstrate the effectiveness of the procedure...|$|E
40|$|Abstract. A new slip {{field of}} slope method based on <b>finite</b> <b>element</b> <b>mesh</b> {{generated}} by abaqus is introduced. In this method {{the weight of}} soil mass beyond the slip surface is calculated by summing the weight of every <b>finite</b> <b>element</b> <b>mesh</b> beyond the slip surface, which are generated by abaqus software. Similarly, the sliding resistance force on the slip surface is calculated by summing the resistance force of every <b>finite</b> <b>element</b> <b>mesh</b> on the slip surface, which are generated by abaqus software. By this way, the difficult work to identify whether a soil mass is beyond or on the slip surface in traditional slip field method is changed to simple adding operation in this new method. Thus, the new slip field of slope method {{can be used to}} analyze the complex geological slope...|$|E
40|$|The {{technique}} of showing the internal {{structure of a}} 3 D solid <b>finite</b> <b>element</b> <b>mesh</b> by the method of plane sectioning is presented. The cut section of a solid <b>finite</b> <b>element</b> <b>mesh</b> {{can be obtained by}} considering the intersection between the sectional plane and each individual element of the mesh one at a time. Computational procedure for different types of solid finite elements is described, and examples are given to demonstrate the proposed algorithm. © 1990. link_to_subscribed_fulltex...|$|E
5000|$|... #Caption: Example of {{unstructured}} grid for a <b>finite</b> <b>element</b> analysis <b>mesh.</b>|$|R
40|$|These viewgraphs present three {{examples}} of structural grid generation from MSFC analysts. The propulsion systems components include high performance requirements and multi-curved surfaces. Grid generation or <b>finite</b> <b>element</b> <b>meshing</b> for structural and thermal analysis models is currently accomplished using interactive graphics based software on personal workstations...|$|R
40|$|<b>Finite</b> <b>element</b> <b>meshes</b> are large, richly {{structured}} sets whose internal relationships must {{be visible}} to {{different parts of}} a <b>finite</b> <b>element</b> program. This causes software engineerings problems that increase when adaptive mesh refinement and multilevel preconditioners are applied. Even more problems arise when <b>finite</b> <b>element</b> methods have to be implemented for parallel computers since the meshes have to be mapped onto the hardware topology so that their locality is preserved. We have designed a framework for parallel adaptive <b>finite</b> <b>element</b> methods that centers upon a problem-oriented index scheme as a new high level description method for <b>finite</b> <b>element</b> <b>meshes.</b> Within the index scheme, important mesh relations can be expressed by simple algebraic operations in Z n. We give {{an overview of the}} indexing methodology and outline the main parts of the framework. Special emphasis is on the reuse of several C++ template libraries [...] -including standard container classes and the library for da [...] ...|$|R
