29|1731|Public
50|$|Fundamental to P4 is {{the concept}} of match-action pipelines. Conceptually, <b>forwarding</b> <b>network</b> packets or frames can be broken down into a series of table lookups and {{corresponding}} header manipulations. In P4 these manipulations are known as “actions” and generally consist of things such as copying byte fields from one location to another based on the lookup results on learned forwarding state. P4 addresses only the data plane of a packet forwarding device, it does not specify the control plane nor any exact protocol for communicating state between the control and data planes. Instead, P4 uses the concept of tables to represent forwarding plane state. An interface between the control plane and the various P4 tables must be provided to allow the control plane to inject/modify state in the program. This interface is generally referred to as the “program API”.|$|E
40|$|Abstract—In this paper, we {{extend our}} {{proposed}} scheme of cooperative communications based on Alamouti scheme which was {{aided by a}} single relay node to forward network coded bits to the destination. In this work, instead of a single relay node, we consider multiple relays <b>forwarding</b> <b>network</b> coded bits, of the information received from the cooperating users, to the destination. With analytical results on the outage probability, we show that the cooperative diversity gain of the proposed scheme increases linearly with m, the number of relay nodes assisting cooperating users by <b>forwarding</b> <b>network</b> coded bits of their information to the destination. I...|$|E
40|$|Abstract—One of {{the most}} {{challenging}} issues in mobile ad-hoc networks (MANETs) arena, which consist of autonomous and self interested nodes, is the problem of providing incentives for nodes to cooperate in <b>forwarding</b> <b>network</b> packets. In this paper, we propose Express as a cooperation mechanism which is both efficient in computations imposed on mobile nodes and secure against deceptive threats by nodes. Using Express, network nodes gain credit for participating in <b>forwarding</b> <b>network</b> packets. Recent works utilize digital signatures to provide security against cheating actions by nodes. Express substitutes hash operations for digital signature operations as much as possible, which consequently reduces computational overhead to a great extent. Setting credits and penalties through this mechanism, each node beneficially tends to adopt cooperative behavior. Keywords-MANET; cooperation mechanism; hash chain; game theory. I...|$|E
40|$|In {{this paper}} we built {{three types of}} {{artificial}} neural <b>networks,</b> namely: Feed <b>forward</b> <b>networks,</b> Elman <b>networks</b> and Cascade <b>forward</b> <b>networks,</b> for forecasting wind speeds and directions. A similar network topology was used for all the forecast horizons, regardless of the model type. All the models were then trained with real data of collected wind speeds and directions {{over a period of}} two years in the municipal of Puumala, Finland. Up to 70 th percentile of the data was used for training, validation and testing, while 71 – 85 th percentile was presented to the trained models for validation. The model outputs were then compared to the last 15 % of the original data, by measuring the statistical errors between them. The feed <b>forward</b> <b>networks</b> returned the lowest errors for wind speeds. Cascade <b>forward</b> <b>networks</b> gave the lowest errors for wind directions; Elman networks returned the lowest errors when used for short term forecasting...|$|R
5000|$|... #Caption: In a feed <b>forward</b> <b>network</b> {{information}} always moves one direction; {{it never}} goes backwards.|$|R
50|$|The {{simulator}} collects various {{statistical data}} such as sent, received, or <b>forwarded</b> <b>network</b> traffic per node, successful or unsuccessful packet delivery, and packet hop count.|$|R
30|$|In this scenario, the {{principles}} selected {{to guide the}} design of the Internet focused on inter-terminal connectivity through routers (host-centrism); designing of a simple (but robust) <b>forwarding</b> <b>network,</b> in which more complex features were left to the upper layers at the terminals (end-to-end principle); and on end-to-end communications among computer applications.|$|E
30|$|Fine-grained {{multithreading}} resolves {{the data}} dependencies for a thread within the pipeline: the thread is only active {{in a single}} pipeline stage. Therefore, the <b>forwarding</b> <b>network</b> can be completely removed from the processor. This is an important simplification of the pipeline because the forwarding multiplexer is often part of the critical path that restricts the maximum clock frequency.|$|E
40|$|Abstract—Operand {{register}} {{files are}} small, inexpensive register files that are integrated with function {{units in the}} execute stage of the pipeline, effectively extending the pipeline operand registers into register files. Explicit operand forwarding lets software opportunistically orchestrate the routing of operands through the <b>forwarding</b> <b>network</b> to avoid writing ephemeral values to registers. Both mechanisms let software capture short-term reuse and locality close to the function units, improving energy efficiency by allowing a significant fraction of operands to be delivered from inexpensive registers that are integrated with the function units. An evaluation shows that capturing operand bandwidth close to the function units allows operand registers to reduce the energy consumed in the register files and <b>forwarding</b> <b>network</b> of an embedded processor by 61 %, and allows explicit forwarding to reduce the energy consumed by 26 %. Index Terms—energy efficient register organization, operand registers, explicit operand forwarding, embedded processor I...|$|E
40|$|Abstract—The paper {{presents}} a controller for feeding {{power to the}} load on the generator to ensure economic load dispatch for varying load demands on the generating plant. What shall be the fuel supply for feeding the desired power demand on the generator? has been obtained {{with the help of}} a neural network. the experience of operating personals have been used to provide training data for feed <b>forward</b> <b>network.</b> The test results of feed <b>forward</b> <b>network</b> as a knowledge base to set throttle opening i. e. fuel supply to the generator so that it supplies the desired power demand. The power delivered by the generator equals the power demand as a result of the control exercised on fuel supply for economic load dispatch by the simulink model. Keywords-Throttle opening, feedback controller, simulink model, economic load dispatch, knowledge base, feed <b>forward</b> <b>network,</b> power delivered, varying load demand. 1. ...|$|R
40|$|Abstract: In this {{research}} {{the ability of}} a hybrid model of artificial neural <b>network</b> (ANN), feed <b>forward</b> <b>networks</b> (FFN) and recurrent neural networks (RNN), is investigated with genetic algorithm (GA). GA is used {{in order to determine the}} optimal structure of ANN (i. e. the number of neurons for each hidden layer). Furthermore, hybrid model's results are compared with radial basis function neural network (RBF). A water supply network located in Kerman, Iran is considered as case study in order to illustrate the efficiency of the modeling procedure. Obtained results apparently show that the ANN-GA models can be used successfully to estimate leakage rate in water distribution networks. In addition, a comparative study of models indicates that the feed <b>forward</b> <b>networks</b> hybrid with GA performed better than the other models. Key words:Leakage Water distribution <b>network</b> Feed <b>forward</b> <b>network</b> Recurrent neural network Radial basis function Genetic algorith...|$|R
40|$|This paper investigates {{schemes to}} improve TCP {{performance}} in multipath <b>forwarding</b> <b>networks.</b> In multipath routing, packets {{for the same}} destination are sent to multiple next-hops in either packet-level or flow-level forwarding mode. Effective bandwidth is increased since we can use unused capacity of multiple paths to the destination. In packet-level multipath <b>forwarding</b> <b>networks,</b> TCP performance may not be enhanced due to frequent out-of-order segment arrivals at the receiver because of different delays among paths. To overcome this problem, we propose two TCP modifications. At the sender, the fast retransmission threshold is adjusted considering the number of paths. At the receiver, delayed acknowledgment scheme is modified such that an acknowledgment for an out-of-order segment arrival is delayed {{in the same way}} for the in-order one. The number of unnecessary retransmissions and congestion window reductions is reduced, which is verified by extensive simulations. In flow-level multipath <b>forwarding</b> <b>networks,</b> hashing is used at routers to select outgoing link of a packet. Here, we prove that TCP performance is increased in proportion to the number of paths regardless of delay differences...|$|R
40|$|Abstract. ZigBee routing {{protocol}} study and optimization {{for the problem}} of the effects of flooding AODVjr algorithm RREQ packet. By introducing new coordinate parameters and other methods to control the RREQ packet <b>forwarding.</b> <b>Network</b> robustness problem and prolong the life of the network, by changing the algorithm in the case of low energy strategy. And simulation comparison to verify the effectiveness of the optimization algorithm...|$|E
40|$|Abstract—ZigBee routing {{protocol}} study and optimization {{for the problem}} of the effects of flooding AODVjr algorithm RREQ packet. By introducing new coordinate parameters and other methods to control the RREQ packet <b>forwarding.</b> <b>Network</b> robustness problem and prolong the life of the network, by changing the algorithm in the case of low energy strategy. And simulation comparison to verify the effectiveness of the optimization algorithm. Keywords- wireless sensor networks; ZigBee; low energy; RREQ; MATLAB...|$|E
40|$|An {{architecture}} for {{a pipeline}} processor circuit, preferably of the VLIW type, comprises {{a plurality of}} stages (IF, ID; EX, MEM, WB) and a network of forwarding paths (EX-EX, MEM-EX, MEM-ID) which connect pairs of said stages, {{as well as a}} register file (RF) for operand write-back. An optimization of power consumption function is provided via inhibition of writing (Write Inhibit) and subsequent readings in said Register File (RF) of operands retrievable from said <b>forwarding</b> <b>network</b> on account of their reduced liveness lengt...|$|E
30|$|Radial basis {{function}} {{neural networks}} are trained with supervised learning algorithms {{and can be}} perceived as improvements of the multilayer feed <b>forward</b> back propagation <b>networks.</b> Many of their characteristic features {{are similar to those}} of feed <b>forward</b> neural <b>networks</b> because they perform linear representations and weights summations. However, the transformations performed are local, resulting in their much faster training. Radial basis networks may require more neurons than standard feed <b>forward</b> <b>networks,</b> but often they can be designed to take a fraction of time it takes to train standard feed <b>forward</b> <b>networks.</b> It is proven that RBFs with one hidden layer can approximate any function; as a result they are called universal approximators. Perceptrons also have the capability of universal approximation but only RBFs possess the ability of optimum approximation. Even if structurally they are less complicated than feed <b>forward</b> back propagation <b>networks</b> they can achieve better arbitrary functions approximations with only one hidden layer. Also, it has been observed that they work best when many training vectors are available. When for every input which must be classified there is a basis function Φ(‖x − y‖) the network will give a function, adaptive to every pattern.|$|R
25|$|A {{computer}} {{called a}} router {{is provided with}} an interface to each <b>network.</b> It <b>forwards</b> <b>network</b> packets {{back and forth between}} them. Originally a router was called gateway, but the term was changed to avoid confusion with other types of gateways.|$|R
30|$|A feed <b>forward</b> neural <b>network</b> has no {{feedback}} {{paths and}} inputs are processed {{in the forward}} direction. For forecasting GHI, we have implemented a three-layer feed <b>forward</b> neural <b>network</b> consisting of an input layer, a hidden layer and an output layer.|$|R
40|$|Virtualized {{networks}} {{provide a}} shared infrastructure plat-form for hosting multiple independent networks with differ-ent protocol stacks. The infrastructure and the virtual net-works are operated by different entities {{who may not}} trust each other. In our work, we address one of the arising secu-rity issues by providing data confidentiality for <b>forwarding</b> <b>network</b> traffic. We propose an encrypted representation of IP addresses and forwarding data structures that hides {{the operations of the}} virtual network from the infrastructure provider. We describe the cryptographic computations and data structures that forwards network traffic and discuss their space requirements...|$|E
40|$|This paper {{presents}} {{the design and}} implementation of an incrementally scalable architecture for middleboxes based on commodity servers and operating systems. xOMB, the eXtensible Open MiddleBox, employs general programmable network processing pipelines, with user-defined C++ modules responsible for parsing, transforming, and <b>forwarding</b> <b>network</b> flows. We implement three processing pipelines in xOMB, demonstrating good performance for load balancing, protocol acceleration, and application integration. In particular, our xOMB load balancing switch is able to match or outperform a commercial programmable switch and popular open-source reverse proxy while still providing a more flexible programming model...|$|E
30|$|In {{the case}} of {{correlated}} sources, distributed source coding [11, 12] on top of packet forwarding is proved to be sufficient, when dealing with networks of lossless links [13]. Similar to packet <b>forwarding,</b> <b>network</b> coding can be separately applied on top of distributed source coding for correlated sources [14, 15]. However, one has to perform joint source network decoding {{in order to achieve}} theoretical performance limits, which may not be feasible because of its computational complexity [15]. Different solutions have been proposed to tackle this practicality issue [16 – 18], by using low-density codes and sum product algorithm [19] for decoding.|$|E
40|$|Abstract: This paper investigates {{schemes to}} improve TCP {{performance}} in multipath <b>forwarding</b> <b>networks.</b> In multipath routing, packets {{to the same}} destination are sent to multiple next-hops in either packet-level or flow-level forwarding mode. Effective bandwidth is increased since we can utilize unused capacity of multiple paths to the destination. In packet-level multipath <b>forwarding</b> <b>networks,</b> TCP performance may not be enhanced due to frequent out-of-order segment arrivals at the receiver because of different delays among paths. To overcome this problem, we propose simple TCP modifications. At the sender, the fast retransmission threshold is adjusted taking the number of paths into consideration. At the receiver, the delayed acknowledgment scheme is modified such that an acknowledgment for an out-of-order segment arrival is delayed {{in the same way}} for the in-order one. The number of unnecessary retransmissions and congestion window reductions is diminished, which is verified by extensive simulations. In flow-level multipath <b>forwarding</b> <b>networks,</b> hashing is used at routers to select outgoing link of a packet. Here, we show by simulations that TCP performance is increased in proportion to the number of paths regardless of delay differences. Index Terms: TCP, fast retransmission, delayed ACK, multipath...|$|R
40|$|Recurrent neural {{networks}} {{have been used}} for time-series prediction with good results. In this dissertation recurrent {{neural networks}} are compared with time-delayed feed <b>forward</b> <b>networks,</b> feed <b>forward</b> <b>networks</b> and linear regression models on a prediction task. The data used in all experiments is real-world sales data containing two kinds of segments: campaign segments and non-campaign segments. The task is to make predictions of sales under campaigns. It is evaluated if more accurate predictions can be made when only using the campaign segments of the data. Throughout the entire project a knowledge discovery process, identified in the literature has been used to give a structured work-process. The results show that the recurrent network is not better than the other evaluated algorithms, in fact, the time-delayed feed <b>forward</b> neural <b>network</b> showed to give the best predictions. The results also show that more accurate predictions could be made when only using information from campaign segments...|$|R
40|$|Machine {{learning}} {{presents a}} general, systematic {{framework for the}} generation of formal theoretical models for physical description and prediction. Tentatively standard linear modeling techniques are reviewed; followed by a brief discussion of generalizations to deep <b>forward</b> <b>networks</b> for approximating nonlinear phenomena. Comment: 4 page...|$|R
40|$|Common {{networks}} with source, internal, and destination nodes put data packets in queues for <b>forwarding.</b> <b>Network</b> coding aims {{to improve}} network throughput and energy consumption by combining received data packets before forwarding. In this survey, we will explore various network coding schemes, {{along with the}} behavior of network coding in applications. Sensor, wireless routing, and distributed storage networks can benefit greatly from network coding implementations. Flooding is a procedure in distributed systems which broadcasts a message to all nodes in the network. NC-Flooding is introduced, which uses network coding to possibly decrease the message complexity and/or time complexity of flooding...|$|E
40|$|This paper {{proposes a}} Petri net {{model for a}} {{commercial}} network processor (Intel IXP architecture) which is a multithreaded multiprocessor architecture. We consider and model three different applications viz., IPv 4 <b>forwarding,</b> <b>Network</b> Address Translation, and IP Security running on IXP 2400 / 2850. A salient feature of the Petri net model {{is its ability to}} model the application, architecture and their interaction in great detail. The model is validated using the Intel proprietary tool (SDK 3. 51 for IXP architecture) over a range of configurations. We conduct a detailed performance evaluation, identify the bottleneck resource, and propose a few architectural extensions and evaluate them in detail. ...|$|E
40|$|Interactive grid {{computing}} requires steering {{of remote}} parallel applications. On the one hand, the control data stream {{of a local}} steering part of a distributed application need to be forwarded onto all involved nodes in the grid. On the other hand, results from the grid need to be collected and {{sent back to the}} local application. Interactivity requires that these data streams pass through the network with as little delay as possible. In theory, {{the amount of time spent}} for computation and transmission should be below the threshold of human perception. The glogin tool offers interactive connections for the grid and various methods of <b>forwarding</b> <b>network</b> traffic by using interactive connections for remote parallel applications in the grid. ...|$|E
5000|$|The first command assigns TCP port 80 on IP address 192.168.0.1 to {{the virtual}} server. The chosen {{scheduling}} algorithm for load balancing is round-robin (...) [...] The {{second and third}} commands are adding IP addresses of real servers to the LVS setup. The <b>forwarded</b> <b>network</b> packets shall be masked (...) [...]|$|R
40|$|Prediction {{of protein}} {{secondary}} structure from the {{amino acid sequence}} is a classical bioinformatics problem. Common methods use feed <b>forward</b> neural <b>networks</b> or SVMs combined with a sliding window, as these models does not naturally handle sequential data. Recurrent neural networks are an generalization of the feed <b>forward</b> neural <b>network</b> that naturally handle sequential data. We use a bidirectional recurrent neural network with long short term memory cells for prediction of secondary structure and evaluate using the CB 513 dataset. On the secondary structure 8 -class problem we report better performance (0. 674) than {{state of the art}} (0. 664). Our model includes feed <b>forward</b> <b>networks</b> between the long short term memory cells, a path that can be further explored. Comment: v 2 : adds larger network with slightly better results, update author affiliation...|$|R
40|$|Feed <b>forward</b> <b>network</b> for {{modelling}} {{of discrete}} multimedia traffic source has been proposed. ANN is trained to classify each time slot into its transmission status & state. Training data are obtained using MMBP source model. It is highly recommended for slowly changing video scenes. Index Term: ATM, CAC, ANN, Source Utilisation...|$|R
40|$|In current {{computer}} networks, {{the transmission}} links between network nodes {{are generally not}} the performance bottleneck in the system. Instead, the bottleneck tends to lie at the network nodes, specifically, the processing that goes on at the network nodes, such as packet <b>forwarding.</b> <b>Network</b> processors are processors tailored towards the computer network space and generally perform packet processing operations. Network processors address the performance bottleneck in computer network design while maintaining the flexibility to adapt to future network protocols. This literature survey examines the design characteristics of network processor architectures. This survey goes on to describe the project objective and implementation issues, which {{have to do with}} network processor designs that attain high performance and flexibility...|$|E
40|$|Abstract —This paper {{considers}} {{the problem of}} locating and <b>forwarding</b> <b>network</b> traffic {{to any one of}} a set of distributed servers or service points—primarily in the context of mobile ad hoc networks. The advantages of providing such a capability in mobile networks through the use of anycast routing techniques at the network layer are discussed. The results of a simulation study are highlighted to demonstrate how anycast routing techniques can provide a one-toany communication capability with greater efficiency than traditional unicast based techniques. The simulation results also indicate anycast routing simplifies required configuration and management and reduces connection setup latency and overall message packet delay. Potential applications of anycast routing technology in military networks are presented and related issues are discussed...|$|E
40|$|Traffic Engineering (TE) is {{the stage}} {{which deals with}} {{geometric}} design planning and traffic operation of networks, network devices and relationship of routers for the transportation of data. TE is that feature of network engineering which concentrate on problems of performance optimization of operational networks. It involves techniques and application of knowledge to gain performance objectives, which includes movement of data through network, reliability, planning of network capacity and efficient use of network resources. This thesis addresses the problems of traffic engineering and suggests a solution by using the concept of Multi-Protocol Label Switching (MPLS). We have done simulation in Matlab environment to compare the performance of MPLS against the IP network in a simulated environment. MPLS is a modern technique for <b>forwarding</b> <b>network</b> data. It broadens routing according to path controlling and packet forwarding. In this thesi...|$|E
40|$|This paper {{presents}} {{a study of}} wavelet self-organizing maps (WSOM) for face recognition. The WSOM is a feed <b>forward</b> <b>network</b> that estimates optimized wavelet based for the discrete wavelet transform (DWT) {{on the basis of}} the distribution of the input data, where wavelet basis transforms are used as activation function...|$|R
40|$|Pente is a {{derivative}} of the Japanese game Go-moku, {{both of which}} are normally played with only two players. We extend the game of Pente to three players and study the ability of neuro-evolution via the Enforced Sub-Populations (ESP) algorithm to evolve Pente players for 7 by 7 boards capable of beating pairs of opponents taken from a set of five simple handcoded opponents. We also compare the performance of feed <b>forward</b> <b>networks</b> to that of simple recurrent networks and simple recurrent networks that pay attention to the board by reading inputs from it on every player’s turn, not just their own. Evolving networks that beat all pairs of opponents in threeplayer games proves difficult, and we also find that against the given opponents feed <b>forward</b> <b>networks</b> are superior to either type of simple recurrent network. ...|$|R
50|$|The Senior Center for the Arts is {{structured}} {{as a separate}} 501(c)(3) subsidiary of Fifty Forward which operates senior centers throughout middle Tennessee. By 2008, SCA had surpassed the generated revenue {{of all of the}} other Centers within the Fifty <b>Forward</b> <b>network.</b> In 2010, Fifty Forward branded the theatre program at SCA The Larry Keeton Theatre.|$|R
