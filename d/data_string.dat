95|487|Public
25|$|Another {{possibility}} to access <b>data</b> <b>STRING</b> {{is to use}} the application programming interface (API) by constructing a URL that contain the request.|$|E
2500|$|The Kolmogorov {{structure}} {{function of}} an individual <b>data</b> <b>string</b> expresses {{the relation between the}} complexity level constraint on a model class and the least log-cardinality of a model in the class containing the data. The structure function determines all stochastic properties of the individual data string: for every constrained model class it determines the individual best-fitting model in the class irrespective of whether the true model is in the model class considered or not. In the classical case we talk about a set of data with a probability distribution, and the properties are those of the expectations. In contrast, here we deal with individual data strings and the properties of the individual string focussed on. In this setting, a property holds with certainty rather than with high probability as [...] in the classical case. The Kolmogorov structure function precisely quantify the goodness-of-fit {{of an individual}} model with respect to individual data.|$|E
5000|$|... resource: Resource <b>data</b> <b>string</b> being transmitted, e.g., an IP address or email address.|$|E
40|$|A {{method used}} preferably with LZSS-based {{compression}} methods for compressing {{a stream of}} digital data. The method uses a run-length encoding scheme especially suited for <b>data</b> <b>strings</b> of identical <b>data</b> bytes having large run-lengths, such as data representing scanned images. The method reads an input data stream to determine {{the length of the}} <b>data</b> <b>strings.</b> Longer <b>data</b> <b>strings</b> are then encoded {{in one of two ways}} depending on the length of the <b>string.</b> For <b>data</b> <b>strings</b> having run-lengths less than 18 bytes, a cleared offset and the actual run-length are written to an output buffer and then a run byte is written to the output buffer. For <b>data</b> <b>strings</b> of 18 bytes or longer, a set offset and an encoded run-length are written to the output buffer and then a run byte is written to the output buffer. The encoded run-length is written in two parts obtained by dividing the run length by a factor of 255. The first of two parts of the encoded run-length is the quotient; the second part is the remainder. Data bytes that are not part of <b>data</b> <b>strings</b> of sufficient length are written directly to the output buffer...|$|R
5000|$|Null-terminated {{arrays of}} 8 bit encoded <b>data</b> (C-style <b>strings)</b> ...|$|R
40|$|Spatial encoded {{video is}} used for {{a large number of}} mapping {{projects}} for various applications (McCarthy T., 1999). GPS data can be encoded onto the video or audio track using different techniques. One encoding/decoding hardware system, designed by Navtech (NavTech, 2007), enables 1 Hz GPS ASCII <b>data</b> <b>strings</b> to be encoded onto...|$|R
50|$|If, on {{the other}} hand, the symbol in the string was a 1, the rule {{separator}} changes into a new structure which admits the incoming production rule. Although the new structure is again destroyed when it encounters the next rule separator, it first allows a series of structures to pass through towards the left. These structures are then made to append themselves {{to the end of}} the cyclic tag system's <b>data</b> <b>string.</b> This final transformation is accomplished by means of a series of infinitely repeating, right-moving clock pulses, in the right-moving pattern shown above. The clock pulses transform incoming left-moving 1 symbols from a production rule into stationary 1 symbols of the <b>data</b> <b>string,</b> and incoming 0 symbols from a production rule into stationary 0 symbols of the <b>data</b> <b>string.</b>|$|E
50|$|The differing memory {{layout and}} storage {{requirements}} of strings {{can affect the}} security of the program accessing the string <b>data.</b> <b>String</b> representations requiring a terminating character are commonly susceptible to buffer overflow problems if the terminating character is not present, caused by a coding error or an attacker deliberately altering the <b>data.</b> <b>String</b> representations adopting a separate length field are also susceptible if the length can be manipulated. In such cases, program code accessing the string data requires bounds checking to ensure that it does not inadvertently access or change data outside of the string memory limits.|$|E
5000|$|The {{firmware}} of D-Link {{products such}} as routers are notorious for containing the following hidden <b>data</b> <b>string</b> (probably as a joke from the programmers): [...] "Hey Moe, it don't woik. Nyuk nyuk nyuk nyuk *bop* Owww!" ...|$|E
5000|$|... 8-bit {{character}} <b>data,</b> in <b>strings</b> {{of length}} 0 to 255 characters; ...|$|R
40|$|Software package {{consists}} of FORTRAN subroutines that perform universal noiseless coding and decoding of integer and binary <b>data</b> <b>strings.</b> Purpose {{of this type}} of coding to achieve data compression in sense that coded data represents original data perfectly (noiselessly) while taking fewer bits to do so. Routines universal because they apply to virtually any "real-world" data source...|$|R
40|$|A {{system and}} method is {{described}} for converting an analog signal into a digital signal. The gain and offset of an ADC is dynamically adjusted {{so that the}} N-bits of input data are assigned to a narrower channel instead of the entire input range of the ADC. This provides greater resolution {{in the range of}} interest without generating longer digital <b>data</b> <b>strings...</b>|$|R
50|$|A TDSC {{detector}} digitises {{the original}} calls and derives a two dimensional <b>data</b> <b>string</b> by analysing {{the parameters of}} each call with respect to time. This is analysed by a neural network to provide pattern recognition for each species.|$|E
50|$|Additionally, if {{the total}} number of data bits {{available}} in the symbol is not a multiple of the codeword size, the <b>data</b> <b>string</b> is prefixed with an appropriate number of 0 bits to occupy the extra space. These bits are not included in the check word computation.|$|E
50|$|ECC 200, {{the newer}} version of Data Matrix, uses Reed-Solomon codes for error and erasure recovery. ECC 200 allows the routine {{reconstruction}} of the entire encoded <b>data</b> <b>string</b> when the symbol has sustained 30% damage, assuming the matrix can still be accurately located. Data Matrix has an error rate of less than 1 in 10 million characters scanned.|$|E
5000|$|In {{the above}} [...] "compare" [...] code, the {{original}} (KDP10?) instruction set compared {{from right to}} left, requiring the whole length of the <b>data</b> <b>strings</b> to be compared, a character at a time. KDP8 was enhanced to compare from left to right, so the comparison could stop {{as soon as the}} relative values were clear, speeding up processing of such instructions considerably.|$|R
5000|$|... 4+ bytes {{optional}} extra <b>data</b> <b>strings</b> = short integer type + short unsigned string length (types are Extended Info End = -1; Directory Name = 0; Directory IDs = 1; Absolute Path = 2; AppleShare Zone Name = 3; AppleShare Server Name = 4; AppleShare User Name = 5; Driver Name = 6; Revised AppleShare info = 9; AppleRemoteAccess dialup info = 10) ...|$|R
50|$|It {{specifies}} {{a list of}} supported <b>data</b> types: <b>String,</b> Integer, Float, Boolean, Datetime, Array, and Table.|$|R
50|$|Organic {{search is}} a method for {{entering}} one or a plurality of search items in a single <b>data</b> <b>string</b> into a search engine. Organic search results are listings on search engine results pages that appear because of their relevance to the search terms, as opposed to their being advertisements. In contrast, non-organic search results may include pay per click advertising.|$|E
5000|$|These are the {{simplest}} kind of shift registers. The <b>data</b> <b>string</b> is presented at 'Data In', and is shifted right one stage each time 'Data Advance' is brought high. At each advance, the {{bit on the}} far left (i.e. 'Data In') is shifted into the first flip-flop's output. The bit on the far right (i.e. Data Out) is shifted out and lost.|$|E
50|$|When a left-moving rule {{separator}} {{encounters a}} stationary symbol in the cyclic tag system's <b>data</b> <b>string,</b> it causes the first symbol it encounters to be destroyed. However, its subsequent behavior {{varies depending on}} whether the symbol encoded by the string had been a 0 or a 1. If a 0, the rule separator changes into a new structure which blocks the incoming production rule. This new structure is destroyed when it encounters the next rule separator.|$|E
30|$|An {{efficient}} {{solution to}} this direction, without adding new requirements like the use of dedicated hardware (i.e., smart cards), would be a password authentication mechanism. A simple approach of a password-based authentication scheme could be the use of sufficiently large and randomly generated <b>data</b> <b>strings</b> employed as passwords. In such a scheme, all nodes could agree on a password and achieve mutual authentication supported by a trivial authentication protocol.|$|R
5000|$|There is no {{character}} <b>string</b> <b>data</b> type. <b>Strings</b> {{are represented}} by a sequence of integer values. However, because literal strings are so commonly used in programming, Euphoria interprets double-quote enclosed characters as a sequence of integers. Thus [...] "ABC"is seen as if the coder had written: {'A', 'B', 'C'}which is the same as: {65, 66, 67} ...|$|R
40|$|Gene {{expression}} profiles obtained through microarray or data mining analyses often exist as vast <b>data</b> <b>strings.</b> To interpret {{the biology of}} these genetic profiles, investigators must analyze this data {{in the context of}} other information such as the biological, biochemical, or molecular function of the translated proteins. This is particularly challenging for a human analyst because large quantities of less than relevant data often bury such information. To address this need we implemented an automated routine, called Onto-Expres...|$|R
50|$|Tangible {{items are}} {{distinguished}} {{from one another}} by the assignment of a unique identifier {{in the form of}} a unique <b>data</b> <b>string</b> and encoded in a bar code placed on the item. An item unique identifier is only assigned to a single item and is never reused. Once assigned to an item, the IUID is never changed even if the item is modified or re-engineered. IUID is similar to social security numbering used to distinguish citizens of the United States from one another.|$|E
50|$|After bit stuffing, the <b>data</b> <b>string</b> is padded to {{the next}} {{codeword}} boundary by appending 1 bits. If this {{would result in a}} code word of all ones, the last bit is changed to zero (and will be ignored by the decoder as a bit-stuffing bit). On decoding, the padding bits may be decoded as shift and latch codes, but that will not affect the message content. The reader must accept and ignore a partial code {{at the end of the}} message, as long as it is all-ones.|$|E
50|$|The <b>data</b> <b>string</b> in the cyclic tag {{system is}} {{represented}} {{by a series of}} stationary repeating structures of the type shown above. Varying amounts of horizontal space between these structures serve to differentiate 1 symbols from 0 symbols. These symbols represent the word on which the cyclic tag system is operating, and the first such symbol is destroyed upon consideration of every production rule. When this leading symbol is a 1, new symbols are added {{to the end of the}} string; when it is 0, no new symbols are added. The mechanism for achieving this is described below.|$|E
5000|$|Data {{types are}} {{restricted}} to the following core <b>data</b> types: boolean, <b>string,</b> integer, real, date, timestamp, and arbitrary_id, {{or one of the}} following domain-specific <b>data</b> types: numeric, <b>string,</b> enumerated, and composite. Domain-specific numeric and <b>string</b> <b>data</b> types can represent subsets of the core data types. The domain-specific composite data type is to always be treated as a single unit within the domain. e.g., a MailingAddress composite data type could be declared, but city information couldn't be extracted from it.|$|R
40|$|The thesis has {{aimed to}} test data {{generation}} from EFSM model with <b>string</b> <b>data</b> input. In testing area {{a very few}} work is done to generate test <b>data</b> with <b>string</b> <b>data</b> input. So this topic is interesting to the testing arena. To reach the goal a genetic algorithm (GA) tool is developed. A study was carried out to choose the best fitness function for <b>string</b> <b>data</b> input; resulting modified edit distance algorithm {{was used as a}} fitness function. Firstly, string and alphanumeric values with different lengths were passed through the GA tool and evaluated the result. Then three EFSM models were designed and deployed to the GA tool where most of cases the whole path is passed. This work was limited to string equality and there is a scope to work with string ordering in future...|$|R
40|$|Summary: Medusa is a Java {{application}} for visualizing and manipulating graphs of interaction, such as <b>data</b> from the <b>STRING</b> database. It features an intuitive user interface developed {{with the help}} of biologists. Medusa is optimized for accessing protein interaction <b>data</b> from <b>STRING,</b> but can be used for any type of graph from any scientific field. Availability: Medusa, along with sample datasets and instructions, can be downloaded fro...|$|R
50|$|The data is {{weighted}} {{and integrated}} and a confidence score is calculated for all protein interactions. Results {{of the various}} computational predictions can be inspected from different designated views. There are two modes of STRING: Protein-mode and COG-mode. Predicted interactions are propagated to proteins in other organisms for which interaction {{has been described by}} inference of orthology. A web interface is available to access the data and to give a fast overview of the proteins and their interactions. A plug-in for cytoscape to use STRING data is available.Another possibility to access <b>data</b> <b>STRING</b> is to use the application programming interface (API) by constructing a URL that contain the request.|$|E
50|$|Tuxedo {{applications}} can utilize {{a variety}} of message formats depending upon the type of data {{that is to be}} passed. One of the most popular formats is the FML buffer format which is much like a binary XML or ASN.1 format. FML buffers can contain an arbitrary number of named fields of arbitrary type. Fields can be repeated and nested. As it is a self-describing binary format, the processing of fields incurs very little overhead in comparison to the parsing necessary to support something like XML. VIEW buffers are essentially records, C structures, or COBOL copybooks. A VIEW buffer has an external description which allows Tuxedo to access the fields within it if necessary for things like data dependent routing. Other buffer formats include XML, CARRAY (opaque binary <b>data),</b> <b>STRING,</b> and MBSTRING (a string buffer containing multibyte characters.) Tuxedo can automatically and transparently convert FML buffers to and from XML buffers.|$|E
5000|$|...; This program runs in 32-bit {{protected}} mode.; gcc {{links the}} standard-C library by default; build: nasm -f elf -F stabs name.asm; link: gcc -o name name.o;; In 64-bit long mode {{you can use}} 64-bit registers (e.g. rax instead of eax, rbx instead of ebx, etc..); Also change [...] "-f elf [...] " [...] for [...] "-f elf64" [...] in build command.; global mainmain must be defined as it being compiled against the C-Standard Library extern printfdeclares use of external symbol as printf is declared in a different object-module.Linker resolves this symbol later.segment [...]datasection for initialized <b>data</b> <b>string</b> db 'Hello world!', 0Ah, 0hmessage string with new-line char (10 decimal) and the NULL terminatorstring now refers to the starting address at which 'Hello, World' is stored.segment [...]textmain: push stringpush the address of first character of string onto stack. This will be argument to printf call printfcalls printf add esp, 4advances stack-pointer by 4 flushing out the pushed string argument retreturn ...|$|E
40|$|Motivated by {{considerations}} in XML database theory and model checking, <b>data</b> <b>strings</b> {{have been introduced}} {{as an extension of}} finite alphabet strings which carry, at each position, a symbol and a data value from an infinite domain. Previous work has shown {{that it is difficult to}} come up with an expressive yet decidable automaton model for data languages. Recently, such a model, data automata, was introduced. This paper introduces a simpler but equivalent model and investigates its expressive power, algorithmic and closure properties, and some extensions. ...|$|R
50|$|SAL {{supports}} integer and <b>string</b> <b>data</b> types.|$|R
40|$|Abstract. Motivated by {{considerations}} in XML theory and model checking, <b>data</b> <b>strings</b> {{have been introduced}} {{as an extension of}} finite alphabet strings which carry, at each position, a symbol and a data value from an infinite domain. Previous work has shown that {{it is not easy to}} come up with an expressive yet decidable automata model for data languages. Recently, such an automata model, data automata has been introduced. This paper introduces a simpler but equivalent model and investigates its expressive power, algorithmic and closure properties and some extensions. ...|$|R
