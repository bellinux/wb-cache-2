6138|8018|Public
25|$|Greentree {{operates}} {{in real-time and}} uses an integrated single design architecture which enables complete inter-module <b>data</b> <b>flow.</b>|$|E
25|$|Now, {{with these}} symbols, a {{process can be}} {{represented}} as a network of these symbols. This decomposed process is a DFD, <b>data</b> <b>flow</b> diagram.|$|E
25|$|<b>Data</b> <b>flow</b> diagrams, {{drawings}} {{in which the}} nodes represent the components of an information system and the edges represent the movement of information from one component to another.|$|E
50|$|Reactive {{programming}} can be purely static {{where the}} <b>data</b> <b>flows</b> {{are set up}} statically, or be dynamic where the <b>data</b> <b>flows</b> can change during the execution of a program.|$|R
40|$|A {{switching}} apparatus is provided for switching information transported using a hierarchical data structure, the hierarchical data structure comprising at least {{first and second}} order <b>data</b> <b>flows,</b> The {{switching apparatus}} comprises an input stage (210) comprising at least one input switching unit (21 11 to 21 1 H), and an output stage (230) comprising at least one output switching unit (2311 to 231 H). A central stage (220) is coupled between the input stage (210) and the output stage (230), the central stage (220) comprising a central switching unit (221). The at least one input switching unit (21 11 to 21 1 H) and {{the at least one}} output switching unit (2311 to 231 H) are configured to switch first order <b>data</b> <b>flows</b> contained within second order <b>data</b> <b>flows.</b> The central switching unit (221) is configured to switch only second order <b>data</b> <b>flows,</b> wherein the second order <b>data</b> <b>flows</b> have a higher order than the first order <b>data</b> <b>flows...</b>|$|R
40|$|ITC/USA 2009 Conference Proceedings / The Forty-Fifth Annual International Telemetering Conference and Technical Exhibition / October 26 - 29, 2009 / Riviera Hotel & Convention Center, Las Vegas, NevadaIncorporating network-based {{telemetry}} components into {{a flight}} test article creates {{new types of}} network-based <b>data</b> <b>flows</b> between a test article and a telemetry ground station. The emerging integrated Network Enhanced Telemetry (iNET) Standard defines new, network-based data delivery protocols which can produce various network <b>data</b> <b>flows.</b> Augmenting existing Serial Streaming Telemetry (SST) <b>data</b> <b>flows</b> with these network-based <b>data</b> <b>flows</b> is crucial to enhancing current flight test capabilities. This paper briefly introduces the network protocols referenced in the iNET Standard and then identifies the various <b>data</b> <b>flows</b> generated by network-based components which comply with the iNET Standard. Several combinations of SST and TmNS <b>data</b> <b>flows</b> are presented and the enhanced telemetry capabilities provided by each combination are identified. Identifying time intervals of unused telemetry network bandwidth explicitly for reallocation to other test articles is also addressed...|$|R
25|$|Exception {{handling}} {{is often}} not handled correctly in software, especially when there are multiple sources of exceptions; <b>data</b> <b>flow</b> analysis of 5 million lines of Java code found over 1300 exception handling defects.|$|E
25|$|Fog {{computing}} is {{a viable}} alternative to prevent such large burst of <b>data</b> <b>flow</b> through Internet. The edge devices' computation power can be used to analyse and process data, thus providing easy real time scalability.|$|E
25|$|A {{functional}} modeling perspective concentrates on describing the dynamic process. The main concept in this modeling perspective is the process, {{this could be}} a function, transformation, activity, action, task etc. A well-known example of a modeling language employing this perspective is <b>data</b> <b>flow</b> diagrams.|$|E
40|$|It is {{our belief}} that network {{applications}} relying on globally distributed shared resources will increasingly adopt meta-level descriptions to describe the data streaming in the application at runtime. Our group has developed the notion of computational data streams to describe and act upon such <b>data</b> <b>flows.</b> Our work conceptualizes the <b>data</b> <b>flows</b> as database relations over which useful operations, such as querying, can be performed. This paper shows how one can make the step from a meta-level description of <b>data</b> <b>flows</b> to an actual implementation using CORBA-style event channels and binary I/O for data transport. ...|$|R
40|$|Strength {{reduction}} {{of a large}} expression cannot be performed as a second-order effect of optimizing its subexpression(s). The ideas of composite hoisting and strength reduction are used to develop an algorithm for the strength {{reduction of}} a large expression (SRLE) as a single entity using the framework for partial redundancy elimination. SRLE subsumes the conventional optimizations of code hoisting, common subexpression elimination, loop invariant movement and strength reduction, thereby performing comprehensive optimization of a program. It performs partial-redundancy elimination as effectively as other recent algorithms, and also eliminates several suboptimalities of previously published work in partial-redundancy-based strength reduction. The SRLE algorithm involves use of nonsingular bidirectional <b>data</b> <b>flows,</b> giving rise to interesting issues concerning the desired fixed point of the <b>data</b> <b>flows.</b> A solution method {{based on the principle}} of decomposition of bidirectional <b>data</b> <b>flows</b> into a sequence of unidirectional <b>data</b> <b>flows</b> is shown to achieve the desired fixed point of the bidirectional <b>data</b> <b>flows</b> more elegantly than earlier methods. Experimental results as well as proof of correctness of the algorithm are included...|$|R
2500|$|... {{a dynamic}} {{visualization}} of <b>data</b> <b>flowing</b> over the Tor network ...|$|R
25|$|A slow read attack sends {{legitimate}} {{application layer}} requests, but reads responses very slowly, thus trying to exhaust the server's connection pool. It {{is achieved by}} advertising {{a very small number}} for the TCP Receive Window size, {{and at the same time}} emptying clients' TCP receive buffer slowly, which causes a very low <b>data</b> <b>flow</b> rate.|$|E
25|$|Some smart TV {{platforms}} {{also support}} interactive advertising, addressable advertising with local advertising insertion and targeted advertising, and other advanced advertising {{features such as}} ad telescoping using VOD and DVR, enhanced TV for consumer call-to-action and audience measurement solutions for ad campaign effectiveness. The marketing and trading possibilities offered by Smart TVs are sometimes summarized by the term t-commerce. Taken together, this bidirectional <b>data</b> <b>flow</b> means that smart TVs can be and are used for clandestine observation of the owners. Even in sets that are not configured off-the-shelf to do so, default security measures are often weak and will allow hackers to easily break into the TV.|$|E
25|$|Data is {{read from}} these log files using Ptail, an {{internally}} built tool to aggregate data from multiple Scribe stores. It tails the log files and pulls data out (thus the name). Ptail data are separated out into three streams {{so they can}} eventually be sent to their own clusters in different data centers (Plugin impression, News feed impressions, Actions (plugin + news feed)). Puma is used to manage periods of high <b>data</b> <b>flow</b> (Input/Output or IO). Data is processed in batches to lessen {{the number of times}} needed to read and write under high demand periods (A hot article will generate a lot of impressions and news feed impressions which will cause huge data skews). Batches are taken every 1.5 seconds, limited by memory used when creating a hash table.|$|E
5000|$|Net neutrality, i.e. equal {{treatment}} of all online <b>data</b> <b>flows</b> ...|$|R
50|$|Differences exist, as well, in {{the nature}} of the {{connection}}s. An MPLS connection (LSP) is unidirectional—allowing <b>data</b> to <b>flow</b> in only one direction between two endpoints. Establishing two-way communications between endpoints requires a pair of LSPs to be established. Because 2 LSPs are required for connectivity, <b>data</b> <b>flowing</b> in the forward direction may use a different path from <b>data</b> <b>flowing</b> in the reverse direction. ATM point-to-point connections (virtual circuits), on the other hand, are bidirectional, allowing <b>data</b> to <b>flow</b> in both directions over the same path (Both SVC and PVC ATM connections are bidirectional. Check ITU-T I.150 3.1.3.1).|$|R
5000|$|Interfaces between {{applications}} - that is: events, {{messages and}} <b>data</b> <b>flows</b> ...|$|R
2500|$|There is a {{connection}} between quantum-dot cells and cellular automata. Cells can only be in one of 2 states and the conditional change of state in a cell is dictated {{by the state of}} its adjacent neighbors. However, a method to control <b>data</b> <b>flow</b> is necessary to define the direction in which state transition occurs in QCA cells. The clocks of a QCA system serve two purposes: powering the automaton, and controlling <b>data</b> <b>flow</b> direction. [...] QCA clocks are areas of conductive material under the automaton’s lattice, modulating the electron tunneling barriers in the QCA cells above it.|$|E
2500|$|... The DISA {{sponsored}} Net-Centric Enterprise Services (NCES) {{program has}} established an early adopters program and invited participants {{to enroll in}} a pilot project to exercise the NCES information services. The DACS is supporting AFRL/IF and the Secretary of the Air Force, Net Centric Enterprise Office, and the Warfighter Integration Office (SAF/XCISS). AFRL/IF and SAF/XCISS are sponsoring experiments that will define NCES capabilities for tactical users. The DACS, under the ANTE effort, is conducting research and development for NCES tactical users with restricted bandwidth. The ANTE effort follows a tactical scenario that illustrates an expected <b>data</b> <b>flow</b> in which a tactical warfighter needs data to complete a mission. The <b>data</b> <b>flow</b> incorporates reach back access through NCES and local access through a tactical enclave.|$|E
2500|$|In 2003 ESA {{reported}} {{the failure of}} the antenna Y-axis stepper motor, necessary for pointing the high-gain antenna and allowing the downlink of high-rate data. At the time, it was thought that the antenna anomaly might cause two- to three-week data-blackouts every three months. However, ESA and NASA engineers managed to use SOHOs low-gain antennas together with the larger 34 and 70 meter DSN ground stations and judicious use of SOHOs Solid State Recorder (SSR) to prevent total data loss, with only a slightly reduced <b>data</b> <b>flow</b> every three months.s antenna anomaly: things are much better than expected | url=http://www.esa.int/export/esaCP/SEM0VZWO4HD_index_0.html | accessdate=14 March 2005}} ...|$|E
50|$|Other issues {{addressed}} by the IBI-ICC related to trans-border <b>data</b> <b>flows</b> especially of the protection of personal information. To this end the first International Conference on Transborder <b>Data</b> <b>Flows</b> was organized in Rome (Italy) in September 1980 followed by a second held in 1984, also in Rome (Italy). Both conferences saw a large participation from countries and experts.|$|R
5000|$|... #Caption: Some <b>data</b> <b>flows</b> {{and storage}} {{levels in the}} Git {{revision}} control system.|$|R
5000|$|Fine-grained {{quality of}} service (QoS) control for {{different}} applications, users, or <b>data</b> <b>flows</b> ...|$|R
2500|$|Figure 7 shows a {{clock signal}} with its four stages {{and the effects}} on a cell at each clock stage. A typical QCA design {{requires}} four clocks, {{each of which is}} cyclically 90 degrees out of phase with the prior clock. If a horizontal wire consisted of say, 8 cells and each consecutive pair, starting from the left were to be connected to each consecutive clock, data would naturally flow from left to right. The first pair of cells will stay latched until the second pair of cells gets latched and so forth. In this way, <b>data</b> <b>flow</b> direction is controllable through clock zones ...|$|E
2500|$|These 16-bit {{versions}} of CP/M required application programs to be re-compiled {{for the new}} CPUs—or, if they were written in assembly language, to be translated using tools like Digital Research's XLT86, a program written by Gary Kildall in 1981, which translated [...]ASM source code for the Intel 8080 processor into [...]A86 source code for the Intel 8086. Using global <b>data</b> <b>flow</b> analysis on 8080 register usage, the translator would also optimize the output for code size {{and take care of}} calling conventions, so that CP/M-80 and MP/M-80 programs could be ported to the CP/M-86 and MP/M-86 platforms automatically. XLAT86 itself was written in PL/I-80 and was available for CP/M-80 platforms as well as for DEC VMS (for VAX 11/750 or 11/780).|$|E
2500|$|Legend-class cutters have {{increased}} data link bandwidth. The EADS North America TRS-3D radar system provides three-dimensional air and surface search functions {{and is used}} in the LCS program as well as the German Korvette 130 program. [...] The cutters are also equipped with the AN/SLQ-32 Electronic Warfare (EW) system used in the DDG-51. [...] The Legend class is equipped with the same 220 rpm Bofors 57 mm gun as mounted on the USN's Littoral combat ships. [...] The Missile Defense duties are handled by the NULKA decoy systems, the MK 36 SRBOC decoy systems also used on the FFG-7 and CG-47 programs and the CIWS. The combination of the Mk 110 and the Phalanx give the cutter's Anti-Surface capability, limited Air-Defense capability and the capability to provide naval gunfire support. The cutters increased interoperability means they are capable of executing assigned naval warfare tasks with the US Navy. The sonar is reported as having mine and underwater swimmer location ability. The cutters have space, weight, and power reserved for additional weapons and systems which includes mine warfare systems, non-line of sight missiles, and can have a SeaRAM replace the 20mm Phalanx CIWS. [...] The NSC has a NBC detection and defense system to repel chemical, biological, or radiological attacks and has wash-down systems. The cutters weapons, command and control suite can be upgraded and is hardened to survive potential attacks and process increased <b>data</b> <b>flow.</b>|$|E
5000|$|Diagrams - for example, how <b>data</b> <b>flows</b> {{from one}} {{structure}} {{to the other}} ...|$|R
40|$|The {{phenomena}} of transborder <b>data</b> <b>flows</b> {{have emerged from}} rapid technical changes {{in the area of}} computer communications. Attendant upon this, new economic opportunities are inducing institutional changes designed to modify the manner in which economic gains are to be partitioned. This has, in turn, led to government actions that go beyond conventional allocative and redistributive roles of governmental intervention. This paper discusses some of the welfare implications of 'protectionism' that have appeared on the international scene. By so doing we may begin to anticipate and perhaps circumvent the economic inefficiencies of barriers to trade involving <b>data</b> <b>flows.</b> Transborder <b>data</b> <b>flows</b> Economics International trade...|$|R
50|$|Direct Integrations (DIs): Pre-built {{integrations}} that manage <b>data</b> <b>flows</b> and <b>data</b> synchronizations between Applications.|$|R
50|$|A SLIMbus Port (P) {{provides}} the connection path for <b>data</b> <b>flow</b> between Devices. SLIMbus Ports are normally used for digital audio <b>data</b> <b>flow,</b> {{but may also}} be used for other digital <b>data</b> <b>flow.</b>|$|E
50|$|The use of data {{switches}} in the <b>data</b> <b>flow</b> graph {{could to}} some extent make a static <b>data</b> <b>flow</b> graph appear as dynamic, and blur the distinction slightly. True dynamic reactive programming however could use imperative programming to reconstruct the <b>data</b> <b>flow</b> graph.|$|E
5000|$|A <b>data</b> <b>flow</b> diagram (DFD) is a {{graphical}} {{representation of the}} [...] "flow" [...] of data through an information system. It differs from the flowchart as it shows the <b>data</b> <b>flow</b> instead of the control flow of the program. A <b>data</b> <b>flow</b> diagram {{can also be used}} for the visualization of data processing (structured design). <b>Data</b> <b>flow</b> diagrams were invented by Larry Constantine, the original developer of structured design, based on Martin and Estrin's [...] "data flow graph" [...] model of computation.|$|E
50|$|The {{functions}} performed by {{services and the}} service <b>data</b> <b>flows</b> among service functions (activities).|$|R
5000|$|Customers have {{difficulty}} following how {{the concept is}} mapped into <b>data</b> <b>flows</b> and bubbles ...|$|R
5000|$|Below are a {{few areas}} of <b>data</b> <b>flows</b> that may need {{perennial}} DQ checks: ...|$|R
