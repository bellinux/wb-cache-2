3268|160|Public
5|$|One of {{the main}} sources of {{confusion}} and ambiguity in the creationâ€“evolution debate {{is the definition of}} evolution itself. In the context of biology, evolution is genetic changes in populations of organisms over successive generations. The word also has a number of different meanings in different fields, from <b>evolutionary</b> <b>computation</b> to molecular evolution to sociocultural evolution to stellar and galactic evolution. When biological evolution is conflated with other evolutionary processes, this can cause errors such as the claim that modern evolutionary theory says anything about abiogenesis or the Big Bang.|$|E
5|$|One of {{the most}} {{prominent}} debates arising during the 1970s was over the theory of punctuated equilibrium. Niles Eldredge and Stephen Jay Gould proposed that there was a pattern of fossil species that remained largely unchanged for long periods (what they termed stasis), interspersed with relatively brief periods of rapid change during speciation. Improvements in sequencing methods resulted in a large increase of sequenced genomes, allowing the testing and refining of evolutionary theories using this huge amount of genome data. Comparisons between these genomes provide insights into the molecular mechanisms of speciation and adaptation. These genomic analyses have produced fundamental changes in the understanding of the evolutionary history of life, such as the proposal of the three-domain system by Carl Woese. Advances in computational hardware and software allow the testing and extrapolation of increasingly advanced evolutionary models and the development of the field of systems biology. One of the results has been an exchange of ideas between theories of biological evolution and the field of computer science known as <b>evolutionary</b> <b>computation,</b> which attempts to mimic biological evolution for the purpose of developing new computer algorithms. Discoveries in biotechnology now allow the modification of entire genomes, advancing evolutionary studies to the level where future experiments may involve the creation of entirely synthetic organisms.|$|E
25|$|<b>Evolutionary</b> <b>computation</b> uses {{a form of}} {{optimization}} search. For example, {{they may}} begin {{with a population of}} organisms (the guesses) and then allow them to mutate and recombine, selecting only the fittest to survive each generation (refining the guesses). Forms of <b>evolutionary</b> <b>computation</b> include swarm intelligence algorithms (such as ant colony or particle swarm optimization) and evolutionary algorithms (such as genetic algorithms, gene expression programming, and genetic programming).|$|E
5000|$|... {{artificial}} intelligence methods and techniques: artificial neural networks, neuro-fuzzy systems, expert systems, <b>evolutionary</b> <b>computations</b> ...|$|R
40|$|We apply {{evolutionary}} algorithms to Hopfield {{model of}} associative memory. Previously we {{reported that a}} genetic algorithm using ternary chromosomes evolves the Hebb-rule associative memory to enhance its storage capacity by pruning some connections. This paper describes a genetic algorithm using real-encoded chromosomes which successfully evolves over-loaded Hebbian synaptic weights to function as an associative memory. The goal {{of this study is}} to shed new light on the analysis of the Hopfield model, which also enables us to use the model as more challenging test suite for <b>evolutionary</b> <b>computations.</b> 1 Introduction In the field of <b>evolutionary</b> <b>computations,</b> a lot of complicated functions have been proposed as test suites for comparing and evaluating the effectiveness of various <b>evolutionary</b> <b>computations</b> [1, 2, 3, 4, 5, 6, 7, 8]. However as Mulenbein [9] pointed out: But are such problems typical applications? We have not encountered such a problem. these functions are far from re [...] ...|$|R
40|$|We apply genetic {{algorithms}} to Hopfield's {{neural network model}} of associative memory. Previously, using ternary chromosomes, we successfully evolved both random weight matrix and over-loaded Hebbian weight matrix to function as an associative memory. In this paper, we present a real-encoded genetic algorithm to evolve random synaptic weights to store some number of patterns as associative memory. The goal is to study how can we use the Hopfield model as a test suite for <b>evolutionary</b> <b>computations.</b> 1 Introduction In the field of <b>Evolutionary</b> <b>computations,</b> various kinds of test functions has been proposed (see, e. g., [1, 2, 3]). In this paper, we discuss the Hopfield model of associative memory as a more challenging test suite for the <b>evolutionary</b> <b>computations.</b> Hopfield model of associative memory has almost infinite number of combinations of synaptic weights which give the network a function of associative memory [4]. At the same time, there is a tradeoff between its storage capacity an [...] ...|$|R
25|$|In {{the field}} of optimization, {{simulations}} of physical processes are often {{used in conjunction with}} <b>evolutionary</b> <b>computation</b> to optimize control strategies.|$|E
25|$|Intelligent control uses various AI {{computing}} approaches like neural networks, Bayesian probability, fuzzy logic, machine learning, <b>evolutionary</b> <b>computation</b> {{and genetic}} algorithms {{to control a}} dynamic system.|$|E
25|$|Creativity techniques: Heuristic {{methods to}} {{facilitate}} creativity {{in a person}} {{or a group of}} people. Generally, most creativity techniques use associations between the goal (or the problem), the current state (which may be an imperfect solution to the problem), and some stimulus (possibly selected randomly). There is an analogy between many creativity techniques and methods of <b>evolutionary</b> <b>computation.</b>|$|E
40|$|Different {{types of}} niching {{can be used}} in genetic {{algorithms}} (GAs) or <b>evolutionary</b> <b>computations</b> (ECs) to sustain the diversity of the sought optimal solutions and to increase the effectiveness of evolutionary multi-objective optimization solvers. In this paper four schemes of niching are proposed, which are also considered in two versions with respect to the method of invoking: a continuous realization and a periodic one. The characteristics of these mechanisms are discussed, while as their performance and effectiveness are analyzed by considering exemplary multi-objective optimization tasks both of a synthetic and an engineering (FDI) design nature. Keywords: niching, ranking, Pareto-optimality, genetic algorithms, <b>evolutionary</b> <b>computations,</b> multi-objective optimization, solutions diversity, engineering designs, detection observer...|$|R
40|$|This paper {{describes}} a evolutionary optimization algorithm {{that is a}} hybrid based on particle swarm but {{with the addition of}} a standard selection mechanism from <b>evolutionary</b> <b>computations.</b> A comparison is per-formed between hybrid swarm and particle swarm that shows selection to provide an advantage for some but not all complex functions. ...|$|R
40|$|Feasibility of <b>evolutionary</b> <b>computations</b> for {{supersonic}} wing {{design optimization}} was {{demonstrated by the}} single-objective aerodynamic optimization and multiobjective, multidisciplinary optimization. The aerodynamic optimization problem seeks an optimal supersonic wing shape using the Euler equations. The multidisciplinary optimization problem seeks an optimal supersonic wing planform shape using linearized aerodynamics and wing weight algebraic estimation. ...|$|R
25|$|Since {{hypotheses}} for {{the origins}} of sex are difficult to test experimentally (outside of <b>Evolutionary</b> <b>computation),</b> most current work {{has focused on the}} maintenance of sexual reproduction. Sexual reproduction must offer significant fitness advantages to a species because despite the two-fold cost of sex, it dominates among multicellular forms of life, implying that the fitness of offspring produced outweighs the costs. Sexual reproduction derives from recombination, where parent genotypes are reorganized and shared with the offspring. This stands in contrast to single-parent asexual replication, where the offspring is identical to the parents. Recombination supplies two fault-tolerance mechanisms at the molecular level: recombinational DNA repair (promoted during meiosis because homologous chromosomes pair at that time) and complementation (also known as heterosis, hybrid vigor or masking of mutations).|$|E
25|$|Phenomena from {{mathematics}} {{and computer science}} such as cellular automata, random graphs, and some instances of <b>evolutionary</b> <b>computation</b> and artificial life exhibit features of self-organization. In swarm robotics, self-organization is used to produce emergent behavior. In particular the theory of random graphs {{has been used as}} a justification for self-organization as a general principle of complex systems. In the field of multi-agent systems, understanding how to engineer systems that are capable of presenting self-organized behavior is an active research area. Optimization algorithms can be considered self-organizing because they aim to find the optimal solution to a problem. If the solution is considered as a state of the iterative system, the optimal solution is the selected, converged structure of the system. Self-organizing networks include small-world networks and scale-free networks. These emerge from bottom-up interactions, unlike top-down hierarchical networks within organizations, which are not self-organizing. Cloud computing systems have been argued to be inherently self-organising, but while they have some autonomy, they are not self-managing as they do not have the goal of reducing their own complexity.|$|E
25|$|The {{second is}} {{evolutionary}} robots. This is a methodology that uses <b>evolutionary</b> <b>computation</b> to help design robots, especially the body form, or motion and behavior controllers. In {{a similar way}} to natural evolution, a large population of robots is allowed to compete in some way, or their ability to perform a task is measured using a fitness function. Those that perform worst are removed from the population and replaced by a new set, which have new behaviors based on those of the winners. Over time the population improves, and eventually a satisfactory robot may appear. This happens without any direct programming of the robots by the researchers. Researchers use this method both to create better robots, and to explore the nature of evolution. Because the process often requires many generations of robots to be simulated, this technique may be run entirely or mostly in simulation, then tested on real robots once the evolved algorithms are good enough. Currently, there are about 10 million industrial robots toiling around the world, and Japan is the top country having high density of utilizing robots in its manufacturing industry.|$|E
40|$|This paper {{presents}} an original framework for evolving a vision-based mobile robot controller using genetic programming. This framework {{is built on}} the Open BEA-GLE framework for the <b>evolutionary</b> <b>computations,</b> and on OpenGL for simulating the visual environment of a physical mobile robot. The feasibility of this framework is demonstrated through a simple, yet non-trivial, line following problem. ...|$|R
40|$|Genetic algorithms, DNA computing, and {{in vitro}} {{evolution}} are brie#y discussed. Elements {{of these are}} combined into laboratory procedures, and preliminary results are shown. The traditional test problem for genetic algorithms called the MAX 1 s problem is addressed. Preliminary experimental results indicate successful laboratory #separation by #tness" of DNA encoded candidate solutions. 1. Introduction Evolution is a concept of obtaining adaptation through the interplay of selection and diversity. Analogies from evolution {{have been used in}} both computing and molecular biology. These two areas are called respectively #evolutionary computation " and #in vitro evolution. " From the beginning of DNA based computing to the present there have been calls # 11, 22, 28 # to consider carrying out <b>evolutionary</b> <b>computations</b> using genetic materials in vitro. In this paper we identify elements of <b>evolutionary</b> <b>computations</b> and in vitro evolution that we recommend combining to address three simp [...] ...|$|R
40|$|Abstractâ€”In this paper, {{we focus}} on game rule design by using two <b>Evolutionary</b> <b>Computations.</b> The first EC is a Multi-Objective Evolutionary Algorithm in order to {{generate}} various skilled players. By using acquired skilled players, i. e., Pareto individuals in MOEA, another EC (Evolutionary Programming) adjusts game rule parameters i. e, an appropriate point of each card in the COMMONS GAME...|$|R
500|$|In {{terms of}} {{practical}} application, {{an understanding of}} evolution has been instrumental to developments in numerous scientific and industrial fields, including agriculture, human and veterinary medicine, and the life sciences in general. Discoveries in evolutionary biology have made a significant impact {{not just in the}} traditional branches of biology but also in other academic disciplines, including biological anthropology, and evolutionary psychology. [...] <b>Evolutionary</b> <b>computation,</b> a sub-field of artificial intelligence, involves the application of Darwinian principles to problems in computer science.|$|E
500|$|In {{the words}} of the philosopher Daniel Dennett, [...] "Darwin's {{dangerous}} idea" [...] of evolution by natural selection is a [...] "universal acid," [...] which cannot be kept restricted to any vessel or container, as it soon leaks out, working its way into ever-wider surroundings. Thus, in the last decades, the concept of natural selection has spread from evolutionary biology to other disciplines, including <b>evolutionary</b> <b>computation,</b> quantum Darwinism, evolutionary economics, evolutionary epistemology, evolutionary psychology, and cosmological natural selection. This unlimited applicability has been called universal Darwinism.|$|E
2500|$|Evolutionary {{robotics}} [...] {{a methodology}} that uses <b>evolutionary</b> <b>computation</b> to develop controllers for autonomous robots ...|$|E
40|$|This paper {{presents}} Distributed BEAGLE, a new master-slave architecture for parallel {{and distributed}} <b>evolutionary</b> <b>computations.</b> It is {{designed as a}} robust, adaptive, and scalable system targeted for local networks of workstations and Beowulf clusters. Results obtained with a plausible deployment scenario demonstrate that system performance degrades gracefully when failures occurred, while still achieving near linear speedup in the ideal cas...|$|R
40|$|We apply <b>evolutionary</b> <b>computations</b> to Hopfield's {{neural network}} model of {{associative}} memory. We reported elsewhere that a fully connected neural network with random synaptic weights evolves to create fixed point attractors exactly at the locations of patterns to be memorized by a genetic algorithm. In this paper, we present {{the process of the}} evolution from chaotic behaviors to an associative memory. [URL]...|$|R
40|$|We {{present the}} results of stellar <b>evolutionary</b> <b>computations</b> to study the {{sensitivity}} of lithium depletion in models of mass and metallicity close to solar, and its dependence on the micro [...] macro physical inputs in the models, like thermodynamics, mixing, overshooting and the convective model. We find that even marginal chemical inhomogeneities in stellar formation regions lead to a spread in Li [...] abundances for such stars...|$|R
2500|$|Evolutionary {{robotics}} (ER) is {{a methodology}} that uses <b>evolutionary</b> <b>computation</b> to develop controllers for autonomous robots. Algorithms in ER frequently operate on populations of candidate controllers, initially selected from some distribution. [...] This population is then repeatedly modified {{according to a}} fitness function. [...] In the case of genetic algorithms (or [...] "GAs"), a common method in <b>evolutionary</b> <b>computation,</b> the population of candidate controllers is repeatedly grown according to crossover, mutation and other GA operators ...|$|E
2500|$|M. Dorigo & L. M. Gambardella, 1997. [...] "Ant Colony System: A Cooperative Learning Approach to the Traveling Salesman Problem". IEEE Transactions on <b>Evolutionary</b> <b>Computation,</b> 1 (1): 53â€“66.|$|E
2500|$|In rare cases, <b>evolutionary</b> <b>computation</b> {{may be used}} {{to design}} the {{physical}} structure of the robot, in addition to the controller. [...] One of the most notable examples of this was Karl Sims' demo for Thinking Machines Corporation.|$|E
40|$|This {{paper is}} a {{literature}} review of <b>evolutionary</b> <b>computations,</b> reinforcement learn-ing, nature inspired heuristics, and agent-based techniques for combinatorial optimization. Combinatorial optimization problems are often NP-hard and heuristic techniques are re-quired to develop scalable algorithms. Reinforcement learning and agent-based methodolo-gies are two related general approaches to introduce heuristic search algorithms. This paper reviews techniques in this domain such as Genetic Algorithms (GA), Population-Based In...|$|R
40|$|Masbiole) {{has been}} {{proposed}} as a new learning and evolutionary method for Multiagent Systems (MAS) recently, {{which is based on}} symbiotic phenomena among creatures. In this paper, a symbiotic evolutional model of Masbiole is proposed using Genetic Network Programming (GNP), which has been also proposed as one of the <b>evolutionary</b> <b>computations.</b> In the simulations, the proposal Masbiole is applied to the tileworld model and various characteristics of Masbiole have been clarified. ...|$|R
40|$|This paper {{introduces}} a new mathematical {{model of the}} master-slave architecture for distributed <b>Evolutionary</b> <b>Computations</b> (EC). This model is validated using a concrete implementation based on the Distributed BEAGLE C++ framework. Results show that contrary to (current) popular belief, master-slave architectures are able to scale well over LANs of workstations using off-the-shelf networking equipment. The main properties of the master-slave are also {{compared with those of}} the more mainstream island-model...|$|R
2500|$|Evolving Cellular Automata with Genetic Algorithms: A Review of Recent Work, Melanie Mitchell, James P. Crutchfeld, Rajarshi Das (In Proceedings of the First International Conference on <b>Evolutionary</b> <b>Computation</b> and Its Applications (EvCA'96). Moscow, Russia: Russian Academy of Sciences, 1996.) ...|$|E
2500|$|Interest in neural {{networks}} and [...] "connectionism" [...] was revived by David Rumelhart {{and others in}} the middle of 1980s. Neural networks are an example of soft computing --- they are solutions to problems which cannot be solved with complete logical certainty, and where an approximate solution is often sufficient. Other soft computing approaches to AI include fuzzy systems, <b>evolutionary</b> <b>computation</b> and many statistical tools. The application of soft computing to AI is studied collectively by the emerging discipline of computational intelligence.|$|E
2500|$|CMA-ES {{stands for}} Covariance Matrix Adaptation Evolution Strategy. Evolution {{strategies}} (ES) are stochastic, derivative-free methods for numerical optimization [...] of non-linear or non-convex continuous optimization problems. They {{belong to the}} class of evolutionary algorithms and <b>evolutionary</b> <b>computation.</b> [...] An evolutionary algorithm is broadly {{based on the principle}} of biological evolution, namely the repeated interplay of variation (via recombination and mutation) and selection: in each generation (iteration) new individuals (candidate solutions, denoted as [...] ) are generated by variation, usually in a stochastic way, of the current parental individuals. Then, some individuals are selected to become the parents in the next generation based on their fitness or objective function value [...] Like this, over the generation sequence, individuals with better and better -values are generated.|$|E
40|$|We apply some {{variants}} of <b>evolutionary</b> <b>computations</b> to the Hopfield model of associative memory. In this paper, {{we use the}} Breeder Genetic Algorithm (BGA) to explore the optimal set of synaptic weights {{with respect to the}} storage capacity. We present the BGA has tremendous ability to search a solution in the massively multi-modal landscape of the synaptic weight space. The main goal {{of this study is to}} shed new light on the analysis of the Hopfield model of associative memory. We also expect the model to be used as a new test function of <b>evolutionary</b> <b>computations.</b> 1 INTRODUCTION Associative memory is a dynamical system which has a number of stable states with a domain of attraction around them [1]. If the system starts at any state in the domain, it will converge to the stable state. In 1982, Hopfield [2] proposed a fully connected neural network model of associative memory in which we can store information by distributing it among neurons, and we can recall it from its noisy and/or p [...] ...|$|R
40|$|The recent {{availability}} of cheap Beowulf clusters has generated much interest for Parallel and Distributed <b>Evolutionary</b> <b>Computations</b> (PDEC) [1]. Another often neglected source of CPU power for PDEC are networks of PCs, in many case very powerful workstations, that run idle {{each day for}} long periods of time. To exploit efficiently both Beowulfs and networks of heterogeneous workstations we argue that the classic master-slave distribution model is superior to the currently more popular island-model [1]. The key features of a good PDEC capable of exploiting networks of heterogeneous workstations are transparency for the user, robustness, and adaptivity. Transparency is essential to both the user of the PDEC and the user of the workstation, as none want to deal with the other. One way to implement such a PDEC is as a screen-saver. Robustness is very important because <b>evolutionary</b> <b>computations</b> may execute {{over long periods of time}} during which different types of failures are expected: hard failures caused by network problems, system crashes or reboots, and soft failures that stem from the use of the workstation for othe...|$|R
40|$|Abstract. Genetic algorithms, DNA computing, and {{in vitro}} {{evolution}} are briefly discussed. Elements {{of these are}} combined into laboratory procedures, and preliminary results are shown. The traditional test problem for genetic algorithms called the MAX 1 s problem is addressed. 1 Introduction Evolution is a concept of obtaining adaptation through the interplay of selection and diversity. Analogies from evolution {{have been used in}} both computing and molecular biology. These two areas are called respectively &quot;evolutionary computation &quot; and &quot;in vitro evolution. &quot; From the beginning of DNA based computing to the present there have been calls [15, 3] to consider carrying out <b>evolutionary</b> <b>computations</b> using genetic materials in vitro. Almost two years ago, however, the first design for a DNA based genetic algorithm for a specific class of problems was proposed [2]. Unfortunately, this has not yet been carried out in the laboratory. In this paper we identify elements of <b>evolutionary</b> <b>computations</b> and in vitro evolution that we recommend combining to address three simple problems. Specifically, we choose &quot;genetic algorithms &quot; because they manipulate bitstrings using operations of pointwise mutation and crossover. These operations can be performed by modifications of techniques from in vitro evolution. In particular, single point crossover extends results due to Stemmer [17, 13]...|$|R
