18|206|Public
5000|$|A <b>GRAPHIC</b> <b>WINDOW</b> is the {{equivalent}} of a Windows dialog box containing a static control on which drawing operations can be done. A single BASIC statement will create a <b>GRAPHIC</b> <b>WINDOW</b> and specify its size, position and title. It is not essential to specify a WNDPROC for the <b>GRAPHIC</b> <b>WINDOW.</b> A short source code example for a complete <b>GRAPHIC</b> <b>WINDOW</b> application follows:#Compile Exe ' using either PBCC6 or PBWIN10 compiler#Dim AllFunction PBMain [...] Local GW As Dword ' start a <b>GRAPHIC</b> <b>WINDOW</b> <b>Graphic</b> <b>Window</b> New [...] "graphic window", 100, 100, 200, 200 to GW ' show a coloured disc Graphic Ellipse (10, 10)-(190, 190), %rgb_Red, %rgb_SeaGreen, 0 ' wait for a keypress Graphic Waitkey$End Function ...|$|E
5000|$|Context menus {{accessible}} in {{the construction}} tree and in the <b>graphic</b> <b>window</b> ...|$|E
5000|$|Unlike Sierra or LucasArts' classic {{adventure}} games, MacVentures {{are played}} in first-person perspective. The player's current view is {{displayed in a}} <b>graphic</b> <b>window</b> accompanied by a symbolic birds-eye view of exits in a side window. The name of the current location is displayed {{as the title of}} the <b>graphic</b> <b>window.</b> A characteristic feature is the [...] "self" [...] window which provides a reference to the player himself for putting on clothes and the like.|$|E
5000|$|Text may {{be written}} to the command window (output stream) using [...] and to the <b>graphics</b> <b>window</b> using ...|$|R
5000|$|VPC-Y21EFX and VPC-Y21SFX: Intel Core i3-330UM 1.20GHz, 4GB RAM, 320GB 5200rpm hard drive, Intel GS45 <b>graphics,</b> <b>Windows</b> 7 Home Premium ...|$|R
5000|$|Some system {{components}} (such as filesystem, GWES (<b>graphics,</b> <b>windowing,</b> events server), device driver manager) {{have been moved}} to the kernel space.|$|R
50|$|The early Sierra games, {{like the}} first three King's Quest games (1984-1986), used {{commands}} from an internal command line to move the character around in the <b>graphic</b> <b>window.</b>|$|E
50|$|Using PB GRAPHIC statements, a <b>GRAPHIC</b> (<b>WINDOW,</b> BITMAP or control) {{is first}} {{selected}} as the current GRAPHIC target, then operations are done on it without requiring it to be identified again. Contrast this with the GDI API approach, where the Device Context handle is required for every drawing operation.|$|E
5000|$|The point-and-click {{approach}} {{means that}} no text commands are used except for occasional speech entered {{in a dialog}} box. Events {{taking place in the}} <b>graphic</b> <b>window,</b> as well {{as the result of the}} [...] "examine" [...] command (similar to [...] "look" [...] in other adventure games) are explained in a text window which also acts as a log of recent gameplay.|$|E
5000|$|VPC-Y115FX: Intel Core 2 SU7300 (1.30 GHz), 4GB RAM, 320GB 5200rpm hard drive, Intel GS45 <b>graphics,</b> <b>Windows</b> 7 Home Premium ($799) ...|$|R
50|$|The clean {{interface}} {{consists of}} a text <b>window,</b> and a <b>graphics</b> <b>window.</b> The text window contains fully editable notebooks, and the <b>graphics</b> <b>window</b> the <b>graphics</b> output. Graphics {{can be added to}} the notebook window too, or can be exported in various formats (PNG, SVG, WMF, Clipboard). Graphic types include line, bar or point plots in 2D and 3D, including anaglyph plots of 3D surfaces and other 3D plots. Euler has an API to use the open raytracer POV-Ray.|$|R
50|$|Both the Console Compiler and Windows Compiler {{can create}} <b>graphic</b> <b>windows.</b> The <b>GRAPHICs</b> {{statements}} are higher-level than Windows' Graphics Device Interface(GDI) library functions.|$|R
50|$|Circuit's Edge is a {{computer}} game developed by Westwood Associates and released by Infocom in 1989. It is based on George Alec Effinger's 1987 novel When Gravity Fails. The game is a hybrid interactive fiction/role-playing game; it contains a window of text, a <b>graphic</b> <b>window</b> for depiction of the player's current location, and various menus and mini-windows for character statistics and other game functions.|$|E
5000|$|In 2000, artist Chris Doyle created [...] "Leap", a {{very large}} {{projection}} consisting of hundreds of New Yorkers ascending the facade of 2 Columbus Circle. The project was sponsored by Creative Time, who {{referred to it as}} [...] "a celebration of hope and pure pleasure." [...] After renovation in March 2007, artist Emily Katrencik created an homage to Edward Durell Stone's lost design at the Exit Art gallery in Manhattan. The artist formed a sculpture of hung lollipops containing flakes of marble from Stone's original facade. The sculpture’s architectural form, outlining the shape of the building, slowly eroded as visitors to the exhibit were invited to take a lollipop. Later, but also after the renovation, Mikasa & Company created a china pattern inspired by [...] "the <b>graphic</b> <b>window</b> pattern" [...] of Edward Durell Stone's original design.|$|E
40|$|A robot is an {{electro-mechanical}} {{device that}} can perform autonomous or pre-programmed task. A robot can work or {{carry out an}} assigned task successfully {{with the help of}} a program. The objective of this work is to make the navigation of the robot more precise and add intelligence to it by using programming software. In this work C++ compiler is used to stimulate the mobile robots within these environments. Controller programs helped to read input values and show the required simulation in a <b>graphic</b> <b>window.</b> The goal reaching character of the mobile robot is successfully carried out using C++ program...|$|E
5000|$|VPC-Y118GX: Intel Core 2 SU7300 (1.30 GHz), 4GB RAM, 500GB 5200rpm hard drive, Intel GS45 <b>graphics,</b> <b>Windows</b> 7 Home Premium, {{included}} additional high-capacity battery ($999) ...|$|R
5000|$|VPC-Y11S1E (Sold in Europe): Intel Core 2 SU7300 (1.30 GHz), 4GB RAM, 320GB 5400rpm hard drive, Intel Media Accelerator 4500 MHD <b>graphics,</b> <b>Windows</b> 7 Home Premium 64-bit ...|$|R
25|$|X derives {{its name}} as a {{successor}} to a pre-1983 window system called W (the letter preceding X in the English alphabet). W ran under the V operating system. W used a network protocol supporting terminal and <b>graphics</b> <b>windows,</b> the server maintaining display lists.|$|R
40|$|This paper {{describes}} {{a package of}} programs for handling and analyzing nucleic acid and protein sequences using the Apple Macintosh microcomputer. There are three important features of these programs: first, because of the now classical Macintosh interface the programs can be easily used by persons {{with little or no}} computer experience. Second, it is possible to save all the data, written in an editable scrolling text window or drawn in a <b>graphic</b> <b>window,</b> as files that can be directly used either as word processing documents or as picture documents. Third, sequences can be easily exchanged with any other computer. The package is composed of thirteen programs, written in Pascal programming language...|$|E
40|$|Abstract: This paper {{presents}} an advanced restoration expert system for Korean 154 kV distribution substations. The proposed expert system has a topology based general structure and it utilizes basic rules including heuristic rules, topology identification rules and searching rules to generate switching sequence for adequate restoration process. Also, the rule-base {{of the proposed}} expert system comprises searching rules to use the bus-tie which is between the 22. 9 kV buses connected to one transformer. The proposed expert system displays the restoration process with a text window and the switching sequence of restoration with a <b>graphic</b> <b>window.</b> User friendly graphic user interface is developed using visual programming in the windows XP environment. The proposed expert system showed the promising performance through the several case studies...|$|E
40|$|The paper {{describes}} the GALINDENT system that LTF - Galileo Hardness Testing Department, in co-operation with the Institute of Metrology "G. Colonnetti", has {{developed for the}} geometrical verification of Rockwell, Vickers diamond indenters, as prescribed by ISO Standards. This system consists of two instruments: an Interferometric Sine-Bar, for angular, straightness and flatness measures and a Rotary Table, for the verification of the spherical tip of Rockwell indenters. These two devices {{can be set up}} in one workstation, interfaced with the same computer for data analysis. A software package has been specifically developed to manage the entire system. The measurement test cycle is completely automated in order to ensure objective and reliable results. The operator interface, based on a <b>graphic</b> <b>window</b> menu in the Windows® environment, is extremely user friendly and it does not require any programming knowledge...|$|E
50|$|In {{addition}} to the kernel, BeRTOS provides a hardware abstraction layer that includes large number of peripheral drivers (timer, serial, ADC, motors, LCD display, NTC sensors, keyboard, buzzer, memories), algorithms (hash table, CRC, MD2, entropy pool, RLE), communication protocols and a <b>graphic</b> <b>windowing</b> subsystem for small displays.|$|R
5000|$|VPC-2190X: Intel Pentium U5400 (1.20GHz), Core i3-330UM (1.20GHz) or Core i5-430UM (1.20GHz with Turbo Boost to 1.73GHz), 320 or 500GB {{hard drive}} or 256GB SSD, 2GB, 4GB, 6GB or 8GB of RAM, Intel GMA 4500 or ATI Mobility Radeon HD 4550 <b>graphics,</b> <b>Windows</b> 7 Home Premium or Professional ...|$|R
50|$|GRAPHIC WINDOWS are {{dedicated}} dialogs each containing a single control which fills the dialog's client area. GRAPHIC controls are child windows which support the same GRAPHIC drawing functionality as <b>GRAPHIC</b> <b>windows.</b> <b>GRAPHIC</b> BITMAPS are also defined, again supporting the GRAPHIC drawing functionality, but as purely memory objects, like Windows Bitmaps or DIB Sections. Keyboard and mouse handling statements are included among the GRAPHIC statements. Character output to a GRAPHIC target uses fonts specified via the FONT NEW statement.|$|R
40|$|The aim {{of project}} with name Classification ECG by {{artificial}} neural networks is simplify and speed up working a doctor. That reaches created program that the is capable simply and {{almost at once}} classify EKG signal using artificial neuronal nets. Created program will give to the doctor basic information about used electrocardiogram, as are time period and amplitude signal in single surveyed sections. Subsequently will program warn doctor about abnormalities from normal. Part of program is also <b>graphic</b> <b>window</b> with painted signal and on him in color points and partitions marked by program behind special. In next phase program alone classifies gained data and designating without doctor diagnose that doctor can evaluate and in case agreeable it sign and place for true diagnose patient. This program is also fit for data reading from bigger {{of the number of}} hours as far as days. It is concerned primarily Holter ECG monitoring...|$|E
40|$|In this thesis, we {{describe}} {{the construction of a}} Function Cross-Reference Browser, a tool of software visualization. The Browser is able to parse all the source files of a software application written in ANSI C++, to extract the information on the function cross reference hierarchy, and to provide 3 D display of the call hierarchy. The Browser can handle a proper subset of the standard C++ features (including dynamic binding), and it provides a convenient way to traverse the function call tree in a <b>graphic</b> <b>window,</b> as well as other features for clear displaying. This thesis demonstrates the design and implementation of the Browser, provides detailed analysis of its execution behavior, discusses the limitations of it, and outlines some possible enhancements in the future. In summary, the work done by this thesis adds a new member to the area of software visualization. The Browser is a useful tool for software engineers. It can help them better understand a large, complicated software application written in C++ languag...|$|E
40|$|Proceedings {{to appear}} in Journal of Physics : Conference SeriesInternational audienceGeant 4 is a toolkit for the {{simulation}} of the passage of particles through matter. This object-oriented toolkit supports a variety of visualisation drivers including OpenGL, OpenInventor, HepRep, DAWN, VRML, RayTracer, gMocren and ASCIITree, with diverse and complementary functionalities. In 2013, Gean 4 -MT[1] has brought multi-threading to Geant 4. The OpenGL suite of visualization drivers has been significantly improved by adding many functionalities, some specially for MT, in particular in the OpenGL Qt driver. Users may browse the scene tree and render the scene in multiple frames. The Qt driver is also able to treat multi-thread output separately and change view parameters in a <b>graphic</b> <b>window.</b> Migrating from old OpenGL (based on Display Lists) to modern OpenGL (based on Vertex Buffer Object) compliant code {{was not only a}} major implementation, but it also allowed us to include WebGL [2]. Furthermore, there have been efforts to make the user interface more user friendly, but still allow users to customize it by adding menus, buttons, toolbars, viewpoints on scene and many others...|$|E
5000|$|Futaba - the <b>graphics</b> and <b>windowing</b> library, {{containing}} widgets and themes.|$|R
5000|$|A full IRAF working {{environment}} usually requires two other applications: an extended xterm <b>window</b> with a <b>graphics</b> <b>windows</b> (called xgterm and distributed {{in a separate}} X11-IRAF package by NOAO) and an image display program referred to as an [...] "image server". The two most popular image servers are ds9 (by SAO) and ximtool (NOAO).|$|R
5000|$|Vsxu, music visual / {{real-time}} 3D <b>graphics</b> generation (<b>Windows,</b> GNU/Linux, and macOS) ...|$|R
40|$|Serpents and Snails” is a {{group of}} ceramic sculptures I made during a three-month {{residency}} at the European Ceramics Workcentre (EKWC) in Holland. The project was funded by an AHRB Research Leave Award in 2001 and was inspired by my interest in the CALM Project, an arts and technology initiative, and a large scale commission I received from Sculpture at Goodwood. My main aim was to explore relationships between sculpture as a process, materials-driven activity, and the more design-oriented context of 3 D computer modelling. The reciprocity between computer modelling and the more direct form-making procedures associated with sculpture became the main focus of my research and {{led to the development of}} new techniques for integrating algorithmic information with craft-based procedures. The sculptures contribute to a phenomenological understanding of the experience of working digitally; for example, by making equivalents between ceramic glaze and electronic pixelation, or the <b>graphic</b> <b>window</b> referencing the space in which objects reside. The “grounding” of the digital in the material integrates the two realms, often separated in experience, offering an original perspective which alters the ways in which objects are consciously perceived. Sculptors, namely Kapoor and Gormley, employ 3 D modelling as a design tool to realise large scale projects. The significance of my work focuses on the interactive process of the digital/material nexus, embedding this process in the sculptures themselves...|$|E
40|$|International Telemetering Conference Proceedings / October 17 - 20, 1988 / Riviera Hotel, Las Vegas, NevadaDramatic {{increases}} in telemetry data rates and sources require test engineers to view and digest real-time data {{in order to}} make cogent decisions about whether to continue or modify flight tests. Traditional telemetry systems offer limited insight through a myriad of strip charts and alphanumeric displays. Attempts to improve this human interface employed expensive central superminicomputers and display systems. Although these methods have been successful, development and procurement costs and delays have limited their deployment. Recent advances in low-cost standard display, processing, and network technology have {{led to the development of}} the System 500. The System 500 employs a distributed architecture. Independent, relatively low cost, high-resolution color graphics workstations connect to the data acquisition and processing subsystems via Ethernet. * Each station is independent, requesting and then receiving only data for display. The combined ability to physically display and update only a few hundred parameters, each at relatively few samples per second makes Ethernet and standard upper layer protocols ideal for this application. The state-of-the-art human interface lets users select or mix a variety of methods to create and modify display contents, including: choosing from a list using arrow keys or a mouse, moving a scroll bar to pan through parameter files, or entering commands via keyboard where response anticipation reduces keystrokes to those uniquely defining a choice. A repertoire of <b>graphic</b> <b>window</b> displays is available to present real-time and static data concisely in analog and alphanumeric formats. Window size, location, and color have been chosen to focus attention rather than beautify. Standard windows and accent colors direct user attention to specific areas without cluttering and distracting...|$|E
40|$|This project {{uses the}} Lego Mindstorms NXT Kit {{to develop an}} {{application}} that emphasizes the use of certain sensors of the Kit using the Matlab software. The design is the representation of an explorer robot, which {{will be able to}} move freely on a determined area defined by the user. The robot will avoid obstacles and take independent decisions. Part of his process will be donned using an ultrasonic sensor, which detects nearby objects; in addition a touch sensor has been located in {{the lower part of the}} robot to avoid collisions that cannot be detected by the ultrasonic sensor. The program to move the robot was developed using Simulink, a Matlab tool that allows a block programming approach for the robot movements. Afterwards the program is loaded into the NXT brain. This robot was designed not only to control movements but also to serve as a data acquisition unit of a variable that will be shown to the user later. This variable represents sound data. In this case a sound sensor was used to capture noise levels, in decibels, from the environment. The capture data is sent from the Lego Mindstorm robot through a Bluetooth interface to the computer where it will be processed using a program developed in Matlab. The data will be presented later on a graphic interface. On this interface the acquired data will be shown on a <b>graphic</b> <b>window</b> with the option to save the data on an Excel sheet or a. bmp file. This will allow the user to create a database with the sensing information. The final result it will be an explorer robot that can take movement decisions and make data acquisitions at the same time...|$|E
40|$|We {{present an}} {{application}} {{that allows for}} easy creation of simple problem solving exercises in Java, providing robust and safe I/O {{as well as a}} basic <b>graphics</b> <b>window.</b> We discuss possible uses for unit testing of classes and explore how the design of this application can be a case study in an object oriented design course. 1...|$|R
50|$|A <b>graphics</b> and <b>windowing</b> system {{implementing}} the AWT API is also written in Java.|$|R
5000|$|Optional: nVidia GeForce 8600M, ATI Radeon HD 2600 {{or better}} <b>graphics</b> for <b>Windows</b> Aero support ...|$|R
