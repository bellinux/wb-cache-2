487|4560|Public
5|$|The Steam client {{includes}} a digital storefront called the Steam Store through which users can purchase computer games. Once {{the game is}} bought, a software license is permanently attached to the user's Steam account, allowing {{him or her to}} download the software on any compatible device. Game licenses can be given to other accounts under certain conditions. Content is delivered from an international network of servers using a proprietary <b>file</b> <b>transfer</b> <b>protocol.</b> Steam sells its products in US and Canadian dollars, euros, pounds sterling, Brazilian reais, Russian rubles, Indonesian rupiah and Indian rupees depending on the user's location. From December 2010, the client supports the Webmoney payment system, which is popular in many European, Middle Eastern, and Asian countries. Starting in April 2016, Steam began accepting payments in Bitcoin, valued based on the user's geolocation, with transactions handled by BitPay. The Steam storefront validates the user's region; the purchase of titles may be restricted to specific regions because of release dates, game classification, or agreements with publishers. Since 2010, the Steam Translation Server project offers Steam users to assist with the translation of the Steam client, storefront, and a selected library of Steam games for twenty-seven languages. Steam also allows users to purchase downloadable content for games, and for some specific game titles such as Team Fortress 2, the ability to purchase in-game inventory items. In February 2015, Steam began to open similar options for in-game item purchases for third-party games.|$|E
25|$|<b>File</b> <b>transfer</b> <b>protocol</b> {{filesystem}} translator.|$|E
25|$|Trivial <b>File</b> <b>Transfer</b> <b>Protocol</b> (TFTP) is {{a simple}} lockstep <b>File</b> <b>Transfer</b> <b>Protocol</b> which allows a client to get a file from or put a file onto a remote host. One of its primary uses is {{in the early stages}} of nodes booting from a local area network. TFTP has been used for this {{application}} because it is very simple to implement.|$|E
50|$|Supported {{terminal}} emulation modes included ASCII, Avatar, ANSI, RIP, VT102, and others. A number of <b>file</b> <b>transfer</b> <b>protocols</b> like Zmodem were {{built into the}} application, along with support for external protocols like HS/Link and BiModem. The built-in support for advanced <b>file</b> <b>transfer</b> <b>protocols</b> made Terminate very popular at the time.|$|R
5000|$|Securely <b>transfer</b> <b>files</b> over {{public and}} private {{networks}} using encrypted <b>file</b> <b>transfer</b> <b>protocols.</b>|$|R
5000|$|Support {{multiple}} <b>file</b> <b>transfer</b> <b>protocols</b> including FTP/S, OFTP, SFTP, SCP, AS2, and HTTP/S.|$|R
25|$|Compatibility with extant {{systems and}} protocols: Repositories can be {{published}} via Hypertext Transfer Protocol (HTTP), <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP), rsync (removed in Git 2.8.0), or a Git protocol over either a plain socket, or Secure Shell (ssh). Git {{also has a}} CVS server emulation, which {{enables the use of}} extant CVS clients and IDE plugins to access Git repositories. Subversion and svk repositories can be used directly with git-svn.|$|E
25|$|The {{emergence}} {{and growth}} of blogs in the late 1990s coincided {{with the advent of}} web publishing tools that facilitated the posting of content by non-technical users who did not have much experience with HTML or computer programming. Previously, a knowledge of such technologies as HTML and <b>File</b> <b>Transfer</b> <b>Protocol</b> had been required to publish content on the Web, and as such, early Web users tended to be hackers and computer enthusiasts. In the 2010s, the majority are interactive Web 2.0 websites, allowing visitors to leave online comments, and it is this interactivity that distinguishes them from other static websites. In that sense, blogging {{can be seen as a}} form of social networking service. Indeed, bloggers do not only produce content to post on their blogs, but also often build social relations with their readers and other bloggers. However, there are high-readership blogs which do not allow comments.|$|E
500|$|PHP {{includes}} various {{free and}} open-source libraries in its source distribution, or uses them in resulting PHP binary builds. PHP is fundamentally an Internet-aware system with built-in modules for accessing <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP) servers and many database servers, including PostgreSQL, MySQL, Microsoft SQL Server and SQLite (which is an embedded database), LDAP servers, and others. [...] Numerous functions familiar to C programmers, {{such as those}} in the stdio family, are available in standard PHP builds.|$|E
5000|$|The <b>file</b> <b>transfer</b> <b>protocols</b> ZModem/CRC32, ZModem, Telink, SEAlink Overdrive, SEAlink, and XModem/CRC with no {{size limit}} (apart from DOS limits).|$|R
50|$|Telix {{can be used}} to dial {{bulletin}} board systems or other phone-line based services. It supports ANSI emulation and various <b>file</b> <b>transfer</b> <b>protocols.</b>|$|R
50|$|BiModem {{was one of}} {{the last}} <b>file</b> <b>transfer</b> <b>protocols</b> {{developed}} for use in bulletin board systems. It was created by Erik Labs, and was revolutionary for its day.|$|R
2500|$|John Klensin's {{involvement}} with Internet began in 1969, {{when he worked}} on the <b>File</b> <b>Transfer</b> <b>Protocol.</b>|$|E
2500|$|TFTP {{has always}} been {{associated}} to network booting. One of the first attempts in this regard was the Bootstrap Loading using TFTP standard RFC 906, published in 1984, which established the 1981 published Trivial <b>File</b> <b>Transfer</b> <b>Protocol</b> standard RFC 783 {{to be used as}} the standard <b>file</b> <b>transfer</b> <b>protocol</b> for bootstrap loading. It was [...] followed shortly after by the Bootstrap Protocol standard RFC 951 (BOOTP), published in 1985, which allowed a disk-less client machine to discover its own IP address, the address of a TFTP server, and the name of a Network Bootstrap Program (NBP) to be TFTP transferred, loaded into memory, and executed. Dynamic Host Configuration Protocol standard RFC 2131 (DHCP) published in 1997 improved BOOTP capabilities. Finally, the Preboot Execution Environment (PXE) version 2.0 was released in December 1998, and the update 2.1 was made public in September 1999 counting on TFTP as its <b>file</b> <b>transfer</b> <b>protocol.</b> Intel has recently decided to widely support PXE within the new UEFI specification extending the TFTP support to all EFI/UEFI environments.|$|E
2500|$|One of {{the first}} {{attempts}} in this regard was the Bootstrap Loading using TFTP standard RFC 906, published in 1984, which established the 1981 published Trivial <b>File</b> <b>Transfer</b> <b>Protocol</b> (TFTP) standard RFC 783 {{to be used as}} the standard <b>file</b> <b>transfer</b> <b>protocol</b> for bootstrap loading. It was [...] followed shortly after by the Bootstrap Protocol standard RFC 951 (BOOTP), published in 1985, which allowed a disk-less client machine to discover its own IP address, the address of a TFTP server, and the name of an NBP to be loaded into memory and executed. Difficulties on BOOTP implementation among other reasons eventually {{led to the development of}} the Dynamic Host Configuration Protocol standard RFC 2131 (DHCP) published in 1997. This pioneer TFTP/BOOTP/DHCP approach fell short because, at the time, it did not define the required standardized client side of the provisioning environment.|$|E
40|$|Many {{applications}} use {{remote storage}} and compute resources. To do so, {{they need to}} include code {{to interact with the}} scheduling systems and <b>file</b> <b>transfer</b> <b>protocols</b> used on those remote machines. Unfortunately, many different scheduler systems and <b>file</b> <b>transfer</b> <b>protocols</b> exists, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously. Xenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code...|$|R
50|$|FrontDoor ran under DOS and OS/2 as well {{as under}} most DOS-based {{multitasking}} environment (like Windows). <b>File</b> <b>transfer</b> <b>protocols</b> supported by FrontDoor were Zmodem, Zmodem/CRC-32, Telink, SEAlink, SEAlink Overdrive, and Xmodem/CRC.|$|R
50|$|<b>File</b> <b>transfer</b> is the {{transmission}} of a computer file through a communication channel from one computer system to another. Typically, <b>file</b> <b>transfer</b> is mediated by a communications protocol. In the history of computing, {{a large number of}} <b>file</b> <b>transfer</b> <b>protocols</b> have been designed for different contexts.|$|R
2500|$|The {{application}} layer includes the protocols used by most applications for providing user services or exchanging application data over the network connections {{established by the}} lower level protocols. This may include some basic network support services such as protocols for routing and host configuration. Examples of {{application layer}} protocols include the Hypertext Transfer Protocol (HTTP), the <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP), the Simple Mail Transfer Protocol (SMTP), and the Dynamic Host Configuration Protocol (DHCP). Data coded according to application layer protocols are [...] encapsulated into transport layer protocol units (such as TCP or UDP messages), which in turn use lower layer protocols to effect actual data transfer.|$|E
2500|$|NCSA Mosaic, {{or simply}} Mosaic, is the web browser that popularized the World Wide Web and the Internet. [...] It {{was also a}} client for earlier {{internet}} protocols such as <b>File</b> <b>Transfer</b> <b>Protocol,</b> Network News Transfer Protocol, and Gopher. The browser was named for its support of multiple internet protocols. Its intuitive interface, reliability, Windows port and simple installation all contributed to its popularity within the web, {{as well as on}} Microsoft operating systems. Mosaic was also the first browser to display images inline with text instead of displaying images in a separate window. While often described as the first graphical web browser, Mosaic was preceded by WorldWideWeb, the lesser-known Erwise and ViolaWWW.|$|E
2500|$|File sharing is {{an example}} of {{transferring}} large amounts of data across the Internet. A computer file can be emailed to customers, colleagues and friends as an attachment. It can be uploaded to a website or <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP) server for easy download by others. It can be put into a [...] "shared location" [...] or onto a file server for instant use by colleagues. The load of bulk downloads to many users can be eased by the use of [...] "mirror" [...] servers or peer-to-peer networks. In any of these cases, access to the file may be controlled by user authentication, the transit of the file over the Internet may be obscured by encryption, and money may change hands for access to the file. The price can be paid by the remote charging of funds from, for example, a credit card whose details are also passed– usually fully encrypted– across the Internet. The origin and authenticity of the file received may be checked by digital signatures or by MD5 or other message digests. These simple features of the Internet, over a worldwide basis, are changing the production, sale, and distribution of anything that can be reduced to a computer file for transmission. This includes all manner of print publications, software products, news, music, film, video, photography, graphics and the other arts. This in turn has caused seismic shifts in each of the existing industries that previously controlled the production and distribution of these products.|$|E
5000|$|... 5.1A was {{the first}} [...] "high speed" [...] modem version that could exceed 9600 bit/s using a {{supplied}} driver written in compiled Pascal language. It also had the <b>file</b> <b>transfer</b> <b>protocols</b> supplied with it.|$|R
5000|$|XMODEM, {{like most}} <b>file</b> <b>transfer</b> <b>protocols,</b> breaks up the {{original}} data {{into a series}} of [...] "packets" [...] that are sent to the receiver, along with additional information allowing the receiver to determine whether that packet was correctly received.|$|R
50|$|<b>File</b> <b>transfer</b> <b>{{protocol}}s</b> usually {{operate on}} top of a lower-level protocol in a protocol stack. For example, the HTTP protocol operates at the topmost application layer of the TCP/IP stack, whereas XMODEM, YMODEM, and ZMODEM typically operate across RS-232 serial connections.|$|R
50|$|EFTP (various {{expansions}} of {{this have}} been given, including Easy <b>File</b> <b>Transfer</b> <b>Protocol,</b> Ether <b>File</b> <b>Transfer</b> <b>Protocol,</b> and Experimental <b>File</b> <b>Transfer</b> <b>Protocol)</b> {{was a very}} simple <b>file</b> <b>transfer</b> <b>protocol</b> developed {{as part of the}} PUP protocol suite at Xerox PARC in the late 1970s. It was part of the inspiration for the Trivial <b>File</b> <b>Transfer</b> <b>Protocol</b> (TFTP) in the TCP/IP suite.|$|E
5000|$|File transfer: <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP), Trivial <b>File</b> <b>Transfer</b> <b>Protocol</b> (TFTP) ...|$|E
50|$|Crax Commander {{improves}} productivity {{by offering}} user configurable keyboard shortcuts, built-in text editor with sync coloring, full user interface customizing including fonts and colors, archive support, and built in <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP), Server Message Block (SMB), Apple Filing Protocol (AFP), SSH <b>File</b> <b>Transfer</b> <b>Protocol</b> (SSH), and SSH <b>File</b> <b>Transfer</b> <b>Protocol</b> (sFTP).|$|E
50|$|MassTransit {{supports}} {{a number of}} TCP/IP based <b>file</b> <b>transfer</b> <b>protocols</b> including HTTP, HTTPS, FTP, SFTP, an optimized proprietary protocol MTAP, a secure version of MTAP {{as well as a}} UDP Data Transport version of MTAP based on User Datagram Protocol (UDP).|$|R
50|$|The {{following}} tables compare {{general and}} technical information {{for a number}} of FTP clients and related clients that use other <b>file</b> <b>transfer</b> <b>protocols.</b> Unless otherwise specified in footnotes, comparisons are based on the stable versions without any add-ons, extensions or external programs.|$|R
50|$|Although {{with respect}} to BitTorrent and other {{distributed}} <b>file</b> <b>transfer</b> <b>protocols</b> {{there is no difference}} between uploading and downloading (as clients can do both) or any meaningful distinction between client and server (as both are the same) there are some segmented uploading technologies that do exist.|$|R
5000|$|Simple <b>File</b> <b>Transfer</b> <b>Protocol</b> (SFTP), the {{historical}} protocol ...|$|E
50|$|At {{the outset}} of the IETF Secure Shell File Transfer project, the Secsh group stated that its {{objective}} of SSH <b>File</b> <b>Transfer</b> <b>Protocol</b> was to provide a secure file transfer functionality over any reliable data stream, and to be the standard <b>file</b> <b>transfer</b> <b>protocol</b> for use with the SSH-2 protocol.|$|E
5000|$|Checks {{availability}} and responsiveness of <b>File</b> <b>Transfer</b> <b>Protocol</b> (FTP) servers.|$|E
5000|$|Switching from Networks II to ASCII Express Professional without {{disconnecting}} the user. This allowed Networks II to indirectly support XMODEM, Ward Christensen protocol, ZMODEM, {{and other}} advanced <b>file</b> <b>transfer</b> <b>protocols.</b> The {{only problem with}} this hack is that ASCII Express Pro cannot re-connect to Networks II.|$|R
40|$|What problem does Xenon solve? Many {{applications}} use {{remote storage}} and compute resources. To do so, {{they need to}} include code {{to interact with the}} scheduling systems and <b>file</b> <b>transfer</b> <b>protocols</b> used on those remote machines. Unfortunately, many different scheduler systems and <b>file</b> <b>transfer</b> <b>protocols</b> exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously. Xenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code. Notable changes compared to v 2. 1. 0 : 	added getCredential to Scheduler and FileSystem 	fixed a bug in equals of CredentialMap 	added proper check of supported credential types in adaptors 	many small bugfixes, additional tests, etc...|$|R
50|$|MOVEit is a managed <b>file</b> <b>transfer</b> {{software}} {{produced by}} Ipswitch, Inc. MOVEit encrypts files and uses secure <b>File</b> <b>Transfer</b> <b>Protocols</b> to <b>transfer</b> data with automation, analytics and failover options. The software {{has been used}} in the healthcare industry by companies such as Rochester Hospital and Medibank, as well as thousands of IT departments in financial services, high technology, and government.|$|R
