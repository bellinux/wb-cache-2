1809|84|Public
5|$|Python's {{development}} {{practices have}} also been emulated by other languages. The practice of requiring a document describing the rationale for, and issues surrounding, a change to the language (in Python's case, a PEP) is also used in Tcl and <b>Erlang</b> because of Python's influence.|$|E
25|$|The term <b>Erlang</b> is used interchangeably with Erlang/OTP, or OTP, which {{consists}} of the <b>Erlang</b> runtime system, a number of ready-to-use components mainly written in <b>Erlang,</b> {{and a set of}} design principles for <b>Erlang</b> programs.|$|E
25|$|Pids: Pid {{is short}} for process identifiera Pid is created by the <b>Erlang</b> {{primitive}} spawn(...) Pids are references to <b>Erlang</b> processes.|$|E
30|$|The system {{capacity}} is almost 50 <b>Erlangs</b> for a call setup delay constraint of 50 ms, which {{corresponds to the}} LTE standard specification (Figure 6 a,b). LTE-A indicates call setup times of 10 ms, reducing the RA capacity to some 25 <b>Erlangs</b> in this case (Figure 6 c,d). The capacity can be improved by using more powerful processors. Assuming Φ(n)[*]=[*]n[*]/[*] 1.5, for example, leads to ρmax[*]=[*] 35 <b>Erlangs</b> for the LTE-A case (Figure 6 e,f).|$|R
50|$|Hence, in {{a one-hour}} period: 1 CCS = 100 Call-Seconds = 1/36 <b>erlangs.</b>|$|R
40|$|We {{discuss how}} to fit {{mixtures}} of <b>Erlangs</b> to censored and truncated data by iteratively using the EM algorithm. Mixtures of <b>Erlangs</b> form a very versatile, yet analytically tractable, class of distributions making them suitable for loss modeling purposes. The {{effectiveness of the}} proposed algorithm is demonstrated on simulated data as well as real data sets. nrpages: 26 status: publishe...|$|R
25|$|In 1998, Ericsson {{released}} <b>Erlang</b> as {{open source}} {{to ensure its}} independence from a single vendor and to increase awareness of the language. <b>Erlang,</b> together with libraries and the real-time distributed database Mnesia, forms the Open Telecom Platform (OTP) collection of libraries. Ericsson {{and a few other}} companies offer commercial support for <b>Erlang.</b>|$|E
25|$|<b>Erlang</b> has {{now been}} adopted by {{companies}} worldwide, including Nortel and T-Mobile. <b>Erlang</b> is used in Ericsson’s support nodes, and in GPRS, 3G and LTE mobile networks worldwide.|$|E
25|$|The Ericsson <b>Erlang</b> {{implementation}} loads {{virtual machine}} bytecode which {{is converted to}} threaded code at load time. It also includes a native code compiler on most platforms, developed by the High Performance <b>Erlang</b> Project (HiPE) at Uppsala University. Since October 2001 the HiPE system is fully integrated in Ericsson's Open Source Erlang/OTP system. It also supports interpreting, directly from source code via abstract syntax tree, via script as of R11B-5 release of <b>Erlang.</b>|$|E
3000|$|... (1 ≤i≤M) of {{individual}} call classes, expressed in <b>Erlangs.</b> In {{the case of}} the WCDMA interface, parameters [t [...]...|$|R
3000|$|... in <b>Erlangs),</b> by the {{individual}} traffic of a single user of this service (obtained from the connection rate [...]...|$|R
5000|$|A full REPL for {{interactive}} {{development and}} testing (unlike <b>Erlang's</b> shell, the CSCM REPL supports function and macro definitions) ...|$|R
25|$|<b>Erlang</b> was {{designed}} {{with the aim}} of improving the development of telephony applications. The initial version of <b>Erlang</b> was implemented in Prolog and was influenced by the programming language PLEX used in earlier Ericsson exchanges. By 1988 <b>Erlang</b> had proven that it was suitable for prototyping telephone exchanges, but the Prolog interpreter was far too slow. One group within Ericsson estimated that it would need to be 40 times faster in order to be suitable for production use. In 1992 work began on the BEAM virtual machine which compiles <b>Erlang</b> to C using a mix of natively compiled code and threaded code {{to strike a balance between}} performance and disk space. According to Armstrong, the language went from lab product to real applications following the collapse of the next-generation AXE exchange named AXE-N in 1995. As a result, <b>Erlang</b> was chosen for the next ATM exchange AXD.|$|E
25|$|Since {{the open}} source release, <b>Erlang</b> {{has been used}} by several firms worldwide, {{including}} Nortel and T-Mobile. Although <b>Erlang</b> was designed to fill a niche and has remained an obscure language for most of its existence, its popularity is growing due to demand for concurrent services.|$|E
25|$|<b>Erlang</b> {{has found}} some use in fielding MMORPG servers.|$|E
3000|$|... <b>erlangs</b> with a 100 % of nodes {{participating}} or {{even for}} lower traffic with a 40 % of nodes participating.|$|R
50|$|CSCM has lambda, {{just like}} scheme. It also, however, has lambda-match {{to account for}} <b>Erlang's</b> {{pattern-matching}} capabilities in anonymous function calls.|$|R
5000|$|Offered traffic (in <b>erlangs)</b> {{is related}} to the call arrival rate, λ, and the average call-holding time (the average time of a phone call), h, by: ...|$|R
25|$|While threads require {{external}} library {{support in}} most languages, <b>Erlang</b> provides language-level features for creating and managing processes {{with the aim}} of simplifying concurrent programming. Though all concurrency is explicit in <b>Erlang,</b> processes communicate using message passing instead of shared variables, which removes the need for explicit locks (a locking scheme is still used internally by the VM).|$|E
25|$|<b>Erlang</b> has no {{method of}} {{defining}} classes, {{although there are}} external libraries available.|$|E
25|$|<b>Erlang</b> began {{life with}} a Prolog-based {{implementation}} and maintains much of Prolog's unification-based syntax.|$|E
40|$|A {{surprisingly}} {{simple and}} explicit expression for the waiting time {{distribution of the}} M/D/c queueing system is derived by a full probabilistic analysis, requiring neither generating functions nor Laplace transforms. Unlike the solutions known so far, this expression presents no numerical complications, not even for high traffic intensities. Finally, the result is proved explicitly to satisfy <b>Erlang’s</b> integral equation for the M/D/c queue, which has been somewhat problematic for the expressions known so far. M/D/c waiting time distribution, numerically convenient explicit formula, full probabilistic analysis, <b>Erlang’s</b> M/D/c integral equation. ...|$|R
40|$|Abstract — We {{consider}} {{the problem of}} estimating steady-state blocking probability for circuit-switched networks that allow alternate routing with particular emphasis on networks protected by trunk reservation. We use a recently proposed blocking probability estimate, the Overflow Priority Classification Ap-proximation (OPCA) {{as an alternative to}} the currently used <b>Erlang’s</b> Fixed-Point Approximation (EFPA). We demonstrate empirically that OPCA provides a better blocking estimate than EFPA for circuit-switched networks with alternate routing, that are reasonably protected by trunk reservation. Index Terms — <b>Erlang’s</b> Fixed Point Approximation, blocking probability, circuit switching, network design. I...|$|R
5000|$|... {{which is}} {{referred}} to as <b>Erlang's</b> C formula and is often denoted C(c, λ/μ) or E2,c(λ/μ). The average number of customers in the system (in service and in the queue) is given by ...|$|R
25|$|The {{sequential}} {{subset of}} the <b>Erlang</b> language supports eager evaluation, single assignment, and dynamic typing.|$|E
25|$|Elixir: a functional, concurrent, {{general-purpose}} {{programming language}} {{that runs on}} the <b>Erlang</b> Virtual Machine (BEAM).|$|E
25|$|In <b>Erlang,</b> {{the dollar}} sign precedes {{character}} literals. The dollar sign {{as a character}} can be written $$.|$|E
3000|$|... in {{each time}} slot {{depends on the}} number of interferers on that {{particular}} link. The maximum throughput achievable by a network using slotted ALOHA is 0.3679, i.e., slotted ALOHA provides a maximum channel utilization of 0.3679 <b>Erlangs</b> [37].|$|R
50|$|Whilst MPT 1327 systems, unlike DMR or dPMR, do not employ {{digital speech}} {{compression}} to gain any Spectral Efficiency (voice channels per 6.25 kHz), {{there are several}} methods used that increase the Spectrum Efficiency (<b>Erlangs</b> per square kilometre, per 6.25 kHz).|$|R
25|$|In practice, {{systems are}} built up using design {{principles}} from the Open Telecom Platform {{which leads to}} more code upgradable designs. Successful hot code loading is a tricky subject; Code needs to be written with care {{to make use of}} <b>Erlang's</b> facilities.|$|R
25|$|There {{are several}} new dialects of Lisp: Arc, Hy, Nu, Clojure, Liskell, LFE (Lisp Flavored <b>Erlang)</b> and Racket.|$|E
25|$|The {{number of}} phone calls {{arriving}} at a call centre within a minute. This example was made famous by A.K. <b>Erlang</b> (1878 – 1929).|$|E
25|$|He {{authored}} {{a telecommunications}} patent {{and contributed to}} a number of open-source <b>Erlang</b> and C++ projects. He also published several Perl modules on CPAN.|$|E
50|$|A third {{measurement}} of traffic is instantaneous traffic, {{expressed as a}} certain number of <b>erlangs,</b> meaning the exact number of calls taking place at a point in time. In this case the number is an integer. Traffic-level-recording devices, such as moving-pen recorders, plot instantaneous traffic.|$|R
40|$|We propose {{and analyze}} a {{probabilistic}} model of packet reception in the steady state regime of a non-slotted wireless communication channel. It {{is an extension}} of the classical M/D/ 1 / 0 <b>Erlang's</b> loss model where the interference created by different packet emissions is introduced by means of a shot-noise process. More precisely, we assume that a given packet is admitted by the single receiver if this latter is idle at the packet arrival epoch and successfully received if, in addition, its signal-to-interference-and-noise ratio averaged over the reception period is large enough. As the main result we prove an analog of the <b>Erlang's</b> formula for the ergodic rate of the successfully received packets. Our work is motivated by some applications to transmit-only sensor networks...|$|R
30|$|As LTE medium access {{protocol}} is orthogonal frequency-division multiple access (OFDMA), several articles dimension multiservice demand using K–R for OFDMA access. Blaszczyszyn and Karray [23] use an <b>Erlang’s</b> loss model to dimension downlink in OFDMA networks. Karray [24] particularizes the downlink QoS study to streaming and elastic traffics.|$|R
