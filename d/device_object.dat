15|468|Public
50|$|The <b>device</b> <b>object</b> in the I/O {{subsystem}} of Windows NT-family {{operating systems}} is another very similar structure.|$|E
5000|$|Multithreaded {{rendering}} — {{to render}} {{to the same}} Direct3D <b>device</b> <b>object</b> from different threads for multi core CPUs ...|$|E
50|$|The ZDO (zigbee <b>Device</b> <b>Object),</b> a {{protocol}} in the zigbee protocol stack, {{is responsible for}} overall device management, security keys, and policies. It is responsible for defining {{the role of a}} device as either coordinator or end device, as mentioned above, but also for the discovery of new (one-hop) devices on the network and the identification of their offered services. It may then go on to establish secure links with external devices and reply to binding requests accordingly.|$|E
50|$|His work {{investigates the}} human body as a medium for computation, new {{materials}} {{as a tool to}} embody interactions and design as a vehicle for mindfulness. His work takes form of <b>devices,</b> <b>objects,</b> installations, new technology and materials.|$|R
40|$|The {{management}} {{of power and}} the optimization of systems generating and using power are critical technologies. A new architecture is developed to advance {{the current state of the}} art by providing an intelligent and autonomous solution for power systems management. The architecture is two-layered and implements a decentralized approach by defining software objects, similar to software agents, which provide for local optimization of power devices such as power generating, storage, and load devices. These software <b>device</b> <b>objects</b> also provide an interface to a higher level of optimization. This higher level of optimization implements the second layer in a centralized approach by coordinating the individual software <b>device</b> <b>objects</b> with an intelligent expert system thus resulting in architecture for total system power management. In this way, the architecture acquires the benefits of both the decentralized and centralized approaches. The architecture is designed to be portable, scalable, simple, and autonomous, with respect to devices and missions. Metrics for evaluating these characteristics are also defined. Decentralization achieves scalability and simplicity through modularization using software <b>device</b> <b>objects</b> that can be added and deleted as modules based on the devices of the power system are being optimized. Centralization coordinates these software <b>device</b> <b>objects</b> to bring autonomy and intelligence of the whole power system and mission to the architecture. The centralization approach is generic since it always coordinates software device objects; therefore it becomes another modular component of the architecture. Three example implementations illustrate the evolution of this power management system architecture. The first implementation is a coal-fired power generating station that utilized a neural network optimization for the reduction of nitrogen oxide emissions. This illustrates the limitations of this type of black-box optimization and serves as a motivation for developing a more functional architecture. The second implementation is of a hydro-generating power station where a white-box, software agent approach illustrates some of the benefits and provides initial justification of moving towards the proposed architecture. The third implementation applies the architecture to a vehicle to grid application where the previous hydro-generating application is ported and a new hybrid vehicle application is defined. This demonstrates portability and scalability in the architecture, and linking these two applications demonstrates autonomy. The simplicity of building this application is also evaluated...|$|R
40|$|The {{following}} paper {{presents a}} further {{extension of the}} Suggested Upper Merged Ontology (SUMO), i. e. the development of default physical measurements {{for most of its}} classes (Artifacts, <b>Devices,</b> <b>Objects)</b> and respective children. The extension represents an ar-bitrary, computable and reproducible approximation of defaults for upper and middle-level con-cepts. The paper illustrates advantages of such extension, challenges encountered during the compilation, related work and future research. ...|$|R
40|$|A RHIC Accelerator <b>Device</b> <b>Object</b> is an {{abstraction}} {{which provides a}} software view {{of a collection of}} collider control points known as parameters. A grammar has been defined which allows these parameters, along with code describing methods for acquiring and modifying them, to be specified efficiently in compact definition files. These definition files are processed to produce C++ source code. This source code is compiled to produce an object file which can be loaded into a front end computer. Each loaded object serves as an Accelerator <b>Device</b> <b>Object</b> class definition. The collider will be controlled by applications which set and get the parameters in instances of these classes using a suite of interface routines. Significant features of the grammar are described with details about the generated C++ code. I...|$|E
30|$|Radio {{positioning}} can {{be defined}} as a method of determining the coordinates of a radio <b>device</b> (<b>object)</b> using the properties of radio waves. Various methods have been developed over the years, including the measurements of angle of arrival (AOA), time of arrival (TOA), time difference of arrival (TDOA), and received signal strength (RSS).|$|E
40|$|Status of this Memo This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. This document specifies the requirements and uses cases for some optional administrative operations for use with the Internet Printing Protocol (IPP) version 1. 0 and version 1. 1. Some of these administrative operations operate on the IPP Job and Printer objects. The remaining operations operate on a new <b>Device</b> <b>object</b> that mor...|$|E
50|$|As {{a driver}} for {{connecting}} devices {{to the internet}} of things, Telenor Objects is {{a founding member of}} coosproject.org, a general-purpose, modular, pluggable and distributable open source middleware platform in Java; designed for connecting service and <b>device</b> <b>objects</b> that communicate via messages and enabling monitoring and management. The initiative is among several, newly established steps by Telenor into the open source and open innovation sphere.|$|R
50|$|Zigbee {{builds on}} the {{physical}} layer and media access control defined in IEEE standard 802.15.4 for low-rate WPANs. The specification includes four additional key components: network layer, application layer, zigbee <b>device</b> <b>objects</b> (ZDOs) and manufacturer-defined application objects which allow for customization and favor total integration. ZDOs are responsible for some tasks, including keeping track of device roles, managing requests to join a network, as well as device discovery and security.|$|R
40|$|Traditionally, {{computer}} systems have managed files stored on hard drives. In ubiquitous computing computers have {{to manage a}} distributed collection of files, services, <b>devices,</b> <b>objects</b> etc. stored in different locations and accessed by many users. In UbiCollab, the collection of services, <b>devices,</b> <b>objects,</b> files etc. that the user owns or uses are represented as the user's Service Domain. A user's service domain will typically contain his/her devices at home or office (e. g. stereo, TV, lights, computers). UbiCollab Service Domain Management subsystem allows users and the system to manage what is in each user's service domain, how to add or remove things for the service domain, etc. The objective of this project task is to further develop UbiCollab Service Domain Management subsystem. The main research questions to be answered by this project task:- How can we extend existing service management architectures to support user-centered and community-based service management?- What technologies and architectures are most suitable for implementing user-centered and community-based service management?- How can we evaluate the usability and utility of user-centered and community-based service management? What are the most compelling scenarios? Expected deliverables:- Scenarios for user-centered service management...|$|R
3000|$|In addition, we {{configured}} the emulated MDA setup {{with two}} man-in-the-middle objects. These objects {{are responsible for}} modifying the authentication request frames sent from a mobile client to the cloud server, and authentication response frames sent from the cloud server to a mobile device. Upon creation of the mobile <b>device</b> <b>object,</b> we perform the registration process by sending the registration request to the cloud server. The cloud server object uses SHA 1 algorithm to generate the client and cloud message digests. RSA Keypair generation is performed at the cloud server and the Pk_pub_cloud is sent along with the M [...]...|$|E
30|$|Via {{the three}} datatype {{properties}} ba:deviceName, ba:deviceIngressProtection, and ba:deviceSPID {{the name of}} the device ("Lumina RDA 2 "), its ingress protection (20), and its standard program ID (" 90003 A 82003 F 0411 ") are defined. Furthermore, the enumerated property ba:deviceMountingForm defines that the mounting form is cap-rail mounting. The device has two functional profiles, defined via the object property ba:deviceProfile and corresponding individuals of the concept ba:FunctionalProfile, of which sp:FP_ 58 _ 21502 _ 4 _ 1 _ 11 _ 465 represents the light controller profile from Figure 3. The processor of the <b>device</b> (<b>object</b> property ba:deviceProcessor) is the individual hw:Neuron_ 3150 from the hardware ontology of Layer 2 of the ontology layer architecture (cf. Figure 1).|$|E
40|$|Simple devices always support ReadProperty and but {{not always}} ReadPropertyMultiple. Having a simple {{property}} to read- similar to the <b>Device</b> <b>object</b> Object_List- for each object that would return the enumeration of all of its properties, would be very useful for device discovery. Additionally, if the device has a small APDU size, the array property can be returned a single property at a time, which is not possible for ReadPropertyMultiple ALL. Note that ReadPropertyMultiple ALL returns all the properties and their values, and this new property is only expected to return the property enumerations. Revisions: References: Solution Summary: Add a BACnetARRAY property to every object that defines the list of ALL properties, similar to what can be determined from a ReadPropertyMultiple ALL...|$|E
25|$|Photovoltaics {{may also}} be {{incorporated}} as energy conversion <b>devices</b> for <b>objects</b> at elevated temperatures and with preferable radiative emissivities such as heterogeneous combustors.|$|R
50|$|The Omnipotent Voice: A mysterious {{voice that}} can project itself through various <b>devices</b> and <b>objects</b> such as {{computers}} and newspapers and who orders the residents about.|$|R
40|$|This paper {{proposes a}} new {{approach}} of implementing low-level OS components, especially device drivers. We introduce the notion of concurrent <b>objects</b> into <b>device</b> driver programming. A device driver for every hardware device is implemented as independent concurrent <b>objects.</b> A <b>device</b> driver <b>object</b> has a single thread of control, so that mutual exclusion operations such as spl and semaphores are not necessary. Mechanisms of synchronization, scheduling objects, and interrupt mask handling are clearly separated from actual device control programs, and these are implemented by the system for <b>device</b> driver <b>objects.</b> Both an interrupt and a service request to a <b>device</b> driver <b>object</b> will be delivered as a message, so programmers need not to distinguish {{these two types of}} invocation requests. Therefore, programmers can concentrate on writing the actual device control codes without writing auxiliary codes for synchronization, and the codes will be executed much safer. We show our implementation on [...] ...|$|R
40|$|Reverse {{engineering}} {{is the process}} of discovering the technological principles of a <b>device,</b> <b>object</b> or system through analysis of its structure, function, and operation. From a device used in clinical practice, as the corneal topographer, reverse engineering will be used to infer physical principles and laws. In our case, reverse engineering involves taking this mechanical device apart and analyzing its working detail. The initial knowledge of the application and usefulness of the device provides a motivation that, together with the combination of theory and practice, will help the students to understand and learn concepts studied in different subjects in the Optics and Optometry degree. These subjects belong to both the core and compulsory subjects of the syllabus of first and second year of the degree. Furthermore, the experimental practice is used as transverse axis that relates theoretical concepts, technology transfer and research. Red 2510. Programa de Redes de Investigación en Docencia Universitaria 2011 / 12. GITE- 09003 -UA-DOCIVIS...|$|E
40|$|Póster presentado en EDULEARN 12, International Conference on Education and New Learning Technologies, Barcelona, 2 nd- 4 th July 2012. Reverse {{engineering}} {{is the process}} of discovering the technological principles of a <b>device,</b> <b>object</b> or system through analysis of its structure, function, and operation. From a device used in clinical practice, as the corneal topographer, reverse engineering will be used to infer physical principles and laws. In our case, reverse engineering involves taking this mechanical device apart and analyzing its working detail. The initial knowledge of the application and usefulness of the device provides a motivation that, together with the combination of theory and practice, will help the students to understand and learn concepts studied in different subjects in the Optics and Optometry degree. These subjects belong to both the core and compulsory subjects of the syllabus of first and second year of the degree. Furthermore, the experimental practice is used as transverse axis that relates theoretical concepts, technology transfer and research. RED 2510 Programa de Redes de Investigación en Docencia Universitaria 2011 / 12. GITE- 09003 -UA-DOCIVIS. Universidad de Alicant...|$|E
40|$|Abstract—The {{process of}} {{duplicating}} an existing component, subassembly, or product, {{without the aid}} of drawings, documentation, or computer model is known as reverse engineering. So reverse engineering is the process of learning the design of an object by studying its implementation. It is the process of discovering the technological principles of a <b>device,</b> <b>object</b> or system through analysis of its structure, function and operation. The role of reverse engineering in software evolution is important. It provides the means for recapturing lost information, restructuring complex systems or transforming old systems to a new, more maintainable and better architecture. Reverse engineering software helps researchers to examine the strength of systems and identify their weaknesses in terms of performance, security, and interoperability. The goal of reverse engineering itself is the improved documentation of how the original product works by uncovering the underlying design. In this paper various reverse engineering tools are discussed which help in developing software design better by the use of existing source code. Index Terms—software engineering, forward engineering, reverse engineering, debugger, decompiler, clean room design. I...|$|E
30|$|This study proposes three pillars or key {{features}} {{that make a}} <b>device</b> or <b>object</b> “smart”, namely Autonomy, context-awareness and connectivity. It can be inferred that almost any <b>device</b> or <b>object</b> can become smart by adding these features. For example, if a chair gets a sensor (context-awareness) for detecting when, then it processes that information (autonomous computing) and sends it through a network (device connectivity), in that moment we can call that chair “Smart”. Moreover, by using a similar approach with other devices, we can easily implement the paradigm of IoT in the industry and homes.|$|R
5000|$|Concealment <b>device,</b> an {{inconspicuous}} <b>object</b> used to hide things ...|$|R
50|$|A camera {{stabilizer}} is any <b>device</b> or <b>object</b> {{that is used}} to externally {{stabilize the}} camera. This could be a Steadicam, a tripod, the camera operator's hand, or anything in-between.|$|R
40|$|Testing {{a single}} {{hardware}} unit of an accelerator control system often requires the setup {{of a program}} with graphical user interface. Developing a dedicated application for a specific hardware unit test could be time consuming and the application may become obsolete after the unit tests. This paper documents a methodology for quick design and setup of an interface focused on performing unit tests of accelerator equipment with minimum programming work. The method has three components. The first is a generic accelerator <b>device</b> <b>object</b> (ADO) manager {{which can be used}} to setup, store, and log testing controls parameters for any unit testing system. The second involves the design of a TAPE (Tool for Automated Procedure Execution) sequence file that specifies and implements all te testing and control logic. The sting third is the design of a PET (parameter editing tool) page that provides the unit tester with all the necessary control parameters required for testing. This approach has been used for testing the horizontal plane of the Stochastic Cooling Motion Control System at RHIC...|$|E
40|$|Reverse Engineering (RE) is {{the process}} of {{discovering}} the technological principles of a <b>device,</b> <b>object</b> or system through analysis of its structure, function, and operation. The RE process involves measuring an object and then reconstructing it as a 3 D model. The physical object can be measured using 3 D scanner like CMM, laser scanner, structured light digitizer and computed tomography. This study focuses on the technique and method of measuring and modeling 3 D object using Konica Minolta Vivid 910 close range laser scanner and RapidForm 2004 software. Vivid 910 is powerful tool for scanning 3 D objects and RapidForm 2004 is standard software for processing the point cloud into 3 D model. In this study, Eurocopter 350 Z Prototype Helicopter Model data have been captured using close range laser scanner and been processed using RapidForm 2004. There are several stages in processing point cloud including point-processing and polygon optimization. The result 3 D model was exported into RE formats i. e. STL, IGES and STEP for RE downstream applications using RE software. In summary, the laser scanner technology offer wide potential applications in 3 D measurement and modeling...|$|E
40|$|Abstract [...] Legacy {{substation}} automation protocols and architectures typically provided basic functionality for power system automation and {{were designed to}} accommodate the technical limitations of the networking technology available for implementation. There has recently been a vast improvement in networking technology that has changed dramatically what is now feasible for power system automation in the substation. Technologies such as switched Ethernet, TCP/IP, high-speed wide area networks, and high-performance low-cost computers are providing capabilities that could barely be imagined when most legacy {{substation automation}} protocols were designed. IEC 61850 is an important new international standard for substation automation {{that will have a}} very significant impact on how electric power systems are designed and built for many years to come. IEC 61850 {{is a part of the}} International Electrotechnical Commission’s (IEC) Technical Committee 57 (TC 57) architecture for electric power systems. The model-driven approach of the TC 57 standards, including IEC 61850, is an innovative approach that requires a new way of thinking about substation automation that will result in very significant improvements in both costs and performance of electric power systems. This half-day IEC 61850 Tutorial takes a practical approach to helping utility engineers understand how IEC 61850 can be used to benefit their organization. The tutorial begins by explaining why these standards are important, how they differ from legacy technology, and how these differences will benefit users. The student is then guided through the IEC 61850 standard itself to illustrate how IEC 68150 delivers these benefits via standardized <b>device,</b> <b>object,</b> and service models. Definitions and overviews of the most important concepts will be presented with detailed examples that relate to actual power systems. Index Terms—IEC 61850, standards, benefits, communications, networking, substation automation, protectio...|$|E
5000|$|The Council is {{also looking}} into the {{introduction}} of body scans at Australian airports.This is where full body scan machines at airports of which random members are selected to go through and allows screeners to detect non-metallic <b>devices,</b> <b>objects</b> and weapons concealed on a person's body, but they also reveals body outlines, organs and genitals.The Queensland Council for Civil Liberties has opposed their use, calling them [...] "a virtual strip search." [...] The Council {{is concerned about the}} impact of this equipment on citizens rights to privacy and has made several submissions to the state and federal Government on this particular issue.|$|R
5000|$|Another <b>device</b> {{to detect}} <b>objects</b> on the seabed {{with the naked}} eye.|$|R
30|$|What are {{the risks}} of {{different}} driver behaviours? Risks of several secondary tasks will be evaluated focusing on visual-manual distracting factors such as operating a phone, tablet, or other <b>devices</b> or <b>objects</b> while driving.|$|R
50|$|As {{with any}} <b>device</b> {{containing}} <b>objects</b> of value, ATMs and the systems {{they depend on}} to function are the targets of fraud. Fraud against ATMs and people's attempts to use them takes several forms.|$|R
5000|$|... "Psychophant": a <b>device</b> {{creates an}} <b>object</b> that symbolises {{the person who}} touches it.|$|R
40|$|The Internet of Things (IoT) {{could be}} seen as an {{umbrella}} term for interconnected technologies, <b>devices,</b> <b>objects</b> and services. It is not a single technology, rather it is a concept in which many physical objects are interconnected and enabled with intelligent technologies. The fact that interconnected objects represent activities related to all-day applications (e. g., health care, energy management, etc.), imposes different challenges to manage the heterogeneity of interchanged content and underlying technologies. In this paper, we introduce a mechanism to select the proper communication technology based on the exchanging Machine-to-Machine (M 2 M) traffic pattern from sensors/devices and gateways to an M 2 M server platform...|$|R
40|$|The Front End Computer (FEC) {{environment}} imposes special {{demands on}} software, beyond real time performance and robustness. FEC software must manage a diverse inventory of devices with individualistic timing requirements and hardware interfaces. It must implement network services which export device {{access to the}} control system at large, interpreting a uniform network communications protocol into the specific control requirements of the individual <b>devices.</b> <b>Object</b> oriented languages provide programming techniques which neatly address these challenges, and also offer benefits in terms of maintainability and flexibility. Applications are discussed which exhibit the use of inheritance, multiple inheritance and inheritance trees, and polymorphism {{to address the needs}} of FEC software...|$|R
5000|$|As a <b>device</b> {{to harness}} <b>objects</b> that {{can then be}} used as improptu weapons by the craft ...|$|R
50|$|TANGO {{is based}} on the concept of <b>Devices.</b> <b>Devices</b> {{implement}} <b>object</b> oriented and service oriented approaches to software architecture. The Device model in TANGO implements commands/methods, attributes / data fields and properties for configuring Devices. In TANGO all control <b>objects</b> are <b>Devices.</b>|$|R
