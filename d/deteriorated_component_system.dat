0|10000|Public
40|$|The {{reachability}} {{problem in}} <b>component</b> <b>systems</b> is PSPACE-complete. We show here {{that even the}} reachability problem in the subclass of <b>component</b> <b>systems</b> with "tree-like'' communication is PSPACE-complete. For this purpose we reduce the question if a Quantified Boolean Formula (QBF) is true to the reachability problem in "tree-like'' <b>component</b> <b>systems...</b>|$|R
40|$|Abstract: This paper {{presents}} a simulation {{study of the}} influence of deterioration of suspension components on vehicle handling and safety. The emphasis is placed on the deterioration of the shock absorbers and rubber bushings and their effects on vehicle ride control. The study is based on a 3 D multibody model of a passenger car. The models of <b>deteriorated</b> <b>components</b> are varied on the reference vehicle model and a safety benchmark, an emergency braking with anti-lock brakes is evaluated in order to indicate the influence...|$|R
40|$|In {{this paper}} {{we present a}} new {{component}} concept equivalent to a previous one which is more appropiate for distributed applications. After that, we present the notion of <b>component</b> <b>system</b> and define a set of operations of <b>component</b> <b>systems</b> which {{some of them are}} used to define an ambient calculus with <b>component</b> <b>systems.</b> Finally we present an example. Postprint (published version...|$|R
40|$|Along {{with the}} {{development}} of information technologies and control systems, large and sophisticated mechanical systems are able to perform unattended on production and service lines previously managed by humans. Consequently, upkeep of system condition has been a big concern for many organizations. Since the <b>components</b> <b>deteriorate,</b> <b>system</b> is often maintained periodically and its reliability value is evaluated in each period. The thesis models various systems over multiple periods to optimize their reliabilities under constraints and designs experiments to analyze the models and the systems. ^ For this purpose, the system reliability and optimization techniques related literature is reviewed firstly. After different maintenance models are identified and classified, typical system structures and common solution approaches are summarized. Furthermore a selection of publications about system reliability optimization problem is presented. ^ The main part of the thesis starts the discussion with the evaluation of <b>system</b> reliability from <b>component</b> reliabilities in identified system configuration. After developing the calculation formulas, a reliability calculation program is developed based on a defined nomenclature for system configurations using Visual Basic for Applications (VBA). ^ In the next part the thesis models different systems as single machine maintenance problem (SMMP) or multiple machine maintenance problem (MMMP) under limited budgets. The modeled problems are solved using genetic algorithm (GA) and mixed integer nonlinear program (MINLP). After the demonstration of GA procedures, a complex system is used to analyze the models and the parameters of the system by design of experiments (DOE) to unveil the characteristics of the systems. For example, the effect of budget on the optimized value is examined; the relationship between the budget and number of periods when the objective values are the same. In the end the conclusions are summarized and possible further research is recommended. ...|$|R
25|$|The {{communications}} system may have 4 <b>component</b> <b>systems.</b>|$|R
5000|$|Picture {{archiving}} {{and communication}} <b>system</b> (PACS) and <b>component</b> <b>systems</b> ...|$|R
40|$|The {{application}} {{relates to}} the field of plant biotechnology. A two <b>component</b> <b>system</b> for making hybrid plants capable of producing seedless fruits is provided. Using the two <b>component</b> <b>system,</b> for example seedless tomatoes, peppers, aubergines and melons can 5 be made. Also provided is a method for inducible seed set...|$|R
50|$|There are {{two types}} of free-radical photoinitators: A two <b>component</b> <b>system</b> where the radical is {{generated}} through abstraction of a hydrogen atom from a donor compound (also called co-initiator), and a one <b>component</b> <b>system</b> where two radicals are generated by cleavage. Examples of each type of free-radical photoinitiator is shown below.|$|R
5000|$|M-334S (1990, {{portable}} stereo <b>component</b> <b>system</b> with detachable recorder M-332S) ...|$|R
5000|$|The Hilbert {{space of}} a {{composite}} system is the Hilbert space tensor product of the state spaces associated with the <b>component</b> <b>systems</b> (for instance, J. M. Jauch, Foundations of quantum mechanics, section 11.7). For a non-relativistic system consisting of {{a finite number of}} distinguishable particles, the <b>component</b> <b>systems</b> are the individual particles.|$|R
40|$|To allow {{comfortable}} and easy development, <b>component</b> <b>systems</b> {{have to provide}} a rather a big set of development supporting tools including at least a tool for composition and repository for storing and retrieving components. In this paper, we evaluate and present advantages of using MOF and meta-modeling during definition of <b>component</b> <b>system</b> and also during development of the supporting tools. Most of the presented arguments {{are based on a}} broad practical experience with designing the <b>component</b> <b>systems</b> SOFA and SOFA 2; the former designed in the classical ad hoc “manual ” way, while the latter via meta-modeling. ...|$|R
40|$|To allow {{efficient}} and user-friendly {{development of a}} component-based application, <b>component</b> <b>systems</b> have to provide a rather complex development infrastructure, including a tool for component composition, component repository, and a runtime infrastructure. In this paper, we present and evaluate benefits of using meta-modeling {{during the process of}} defining a <b>component</b> <b>system</b> and also during creation of the development and runtime infrastructures. Most of the presented arguments are based on a broad practical experience with designing the <b>component</b> <b>systems</b> SOFA and SOFA 2; the former designed in a classical ad hoc “manual ” way, while the latter using meta-modeling...|$|R
40|$|Expanded {{graphite}} (EG) adsorbent {{was prepared}} with graphite as raw materials, potassium permanganate as oxidant, and vitriol as intercalation compound. Polyethylene glycol (PEG) 10000 and Acid brilliant red 3 B (ABR) with obvious difference in molecular weights were selected as organic adsorbates, and their adsorption and competitive adsorption thermodynamics and kinetics on EG were investigated. The results are: In both single <b>component</b> <b>system</b> and dual <b>component</b> <b>system,</b> the adsorption and competitive adsorption isotherm of PEG 10000 and ABR on EG are all type I. In dual <b>component</b> <b>system,</b> {{the existence of}} another component would decrease the single component adsorbance, which might be caused by the competitive adsorption of these adsorbates for the same adsorbing site on EG. Adsorption and competitive adsorption are spontaneous, and the increase of ionic strength, temperature and expanded volume of the adsorbent would cause the increase of adsorbance. No matter the single <b>component</b> <b>system</b> or the dual <b>component</b> <b>system,</b> the adsorption kinetics models can all be well described with pseudo second-order model. Adsorption rate increases {{with the increase of}} temperature. Physical adsorption is the main action between EG with these adsorbates...|$|R
5000|$|... #Caption: Complementary ground <b>component</b> <b>system</b> {{as part of}} {{a mobile}} {{satellite}} system ...|$|R
5000|$|Four main <b>component</b> <b>systems</b> {{form the}} basis of a modern {{induction}} heater ...|$|R
40|$|We {{present a}} tool which {{integrates}} the Unified Modeling Language with a processoriented technique for <b>component</b> <b>system</b> specification and design. We have transformed {{the definition of}} process inheritance into definitions of inheritance of UML diagrams. The definitions of UML diagrams inheritance have been built into the tool to guarantee <b>component</b> <b>system</b> development with correct inheritance of component behaviour...|$|R
40|$|We {{compare the}} {{techniques}} of voting and stacking for system combination in datadriven dependency parsing, using a set of eight different transition-based parsers as <b>component</b> <b>systems.</b> Experimental results show that both methods lead to significant improvements over the best <b>component</b> <b>system,</b> and that voting gives the highest overall accuracy. We also investigate different weighting schemes for voting. ...|$|R
5000|$|For {{a single}} <b>component</b> <b>system,</b> only three second {{derivatives}} {{are needed in}} order to derive all others, and so only three material properties are needed to derive all others. For a single <b>component</b> <b>system,</b> the [...] "standard" [...] three parameters are the isothermal compressibility , the specific heat at constant pressure , and the coefficient of thermal expansion [...]|$|R
2500|$|... man manual {{pages for}} each command, library <b>component,</b> <b>system</b> call, header file, etc.|$|R
5000|$|... #Caption: Fisher MC-3010 Integrated <b>Component</b> <b>System</b> (Receiver and 8-Track Player/Recorder Combo Circa 1975) ...|$|R
5000|$|IBM System Object Model SOM, a <b>component</b> <b>system</b> from IBM used in OS/2 ...|$|R
5000|$|Indutrade AB - marketing, <b>components,</b> <b>systems</b> and {{services}} (10% stake, 10% voting rights) ...|$|R
5000|$|... man manual {{pages for}} each command, library <b>component,</b> <b>system</b> call, header file, etc.|$|R
40|$|This diploma thesis {{deals with}} component-based {{software}} development using an advanced process object methodology in problem domains with multilayer process logic. In the present study, the corporate process domain Human resources management (HRM [...] Human Resource Management) was analysed and its process and data modelling on selected process subsystems was carried out. It is modelling {{was brought to}} a successful conclusion by creating target software {{in the form of}} a <b>component</b> <b>system</b> applying the object methodology Unified Process (UP) with associated dominance of development of <b>component</b> <b>systems.</b> The obtained <b>component</b> <b>system</b> of the Human Resource Management domain was physically implemented using the Java NetBeans Platform component mode...|$|R
50|$|Electragil, a Swiss company located {{close to}} Winterthur, markets an {{integrated}} E-Bike <b>component</b> <b>system.</b>|$|R
50|$|The second-generation Dimensia audio {{components}} were also {{made for the}} Digital Command <b>Component</b> <b>System.</b>|$|R
40|$|The Constructive System-of-Systems (SoS) Integration Cost Model (COSOSIMO) is {{designed}} to estimate the effort associated with the Lead System Integrator (LSI) activities to define the SoS architecture, identify sources to either supply or develop the required SoS <b>component</b> <b>systems,</b> and eventually integrate and test these high level <b>component</b> <b>systems.</b> For {{the purposes of this}} cost model, an SoS is defined as a...|$|R
40|$|A {{heterogeneous}} {{information system}} can be built on {{a large number of}} <b>component</b> <b>systems</b> which are interconnected by a LAN or WAN. The data stored in these <b>component</b> <b>systems</b> are likely to have very different naming, structural and semantic representations. The querying facility of the information system needs to couple with an information mediation facility to resolve data heterogeneity problems so that a user can issue queries in the terms and receive data in the data representations that are familiar to him/her. In this work, we introduce an object-oriented modeling language for modeling the data resources and object services of the <b>component</b> <b>systems,</b> and a mediation specification language for explicitly specifying the similarities and differences among data representations, as well as the methods needed to do data conversions. Based on the schemas and the mediation specifications defined for the <b>component</b> <b>systems,</b> a compiler has been developed to generate enhanced program bindings for [...] ...|$|R
40|$|PLAS {{framework}} {{is designed for}} easy development of multiplatform applications in form of <b>component</b> <b>system</b> in JAVA programming language. Target application can be distributed to multiple connected, user defined computer. User has full control over computation part of component and data flow ie. vertices of <b>component</b> <b>system</b> and edges between them. Framework acts as a transparent communication layer, delivers data to child states using user defined routing informations, which are defined in annotation of an object. Data can be split into multiple copies on demand (when state has multiple edges to child nodes defined) so parts of aplicationi can process their own copy simultaneously. Split data can be again merged in user defined parts of <b>component</b> <b>system...</b>|$|R
50|$|Comparison of Host-based {{intrusion}} detection <b>system</b> <b>components</b> and <b>systems.</b>|$|R
40|$|This paper {{presents}} {{the framework of}} a stochastic decision-support system for life cycle asset maintenance management of building elements and systems. This system is based on a probabilistic modeling of the performance and risk of failure of building components. The maintenance optimization is formulated as a multi-stage and multiobjective optimization problem where the simultaneous satisfaction of several conflicting objectives, including minimization of maintenance costs, maximization of performance, and minimization of risk of failure, is sought. Compromise programming is used to determine the optimal ranking of the <b>deteriorated</b> <b>components</b> in terms of their priority for repair and replacement, by achieving a satisfactory trade-off between the competing or conflicting objectives. A product model of the building system is used to provide the data framework for collecting and processing data...|$|R
50|$|It {{implements}} a core with <b>component</b> <b>system</b> and plugin {{support for}} fast development of 3D scene with physics.|$|R
40|$|Unlike many {{proprietary}} <b>component</b> <b>systems,</b> {{the academic}} ones {{do not have}} sufficient support in integrated development environments. This the- sis analyzes development of component-based applications {{in terms of the}} SOFA 2 <b>component</b> <b>system</b> and it finds out that the main issue is an in- sufficient connection between processes of common application design and creation of particular components. Based on this analysis, it defines a subset of the UML, a universal language for application design, and its semantics regarding entities of the SOFA 2 <b>component</b> <b>system.</b> Furthermore, it creates a tool integrated to the Eclipse IDE, which enables a developer to automat- ically generate these entities from a UML component model as well as to connect this model with already existing entities enabling their automatic correction in case of model changing. This tool is designed modularly so {{that it is possible to}} easily change semantics of the model or using it for other models. Finally, this thesis analyzes possibilities of extensions of this tool for other <b>component</b> <b>systems,</b> code generation and component behaviour verification...|$|R
40|$|Reuse is {{considered}} {{as one of the}} most crucial software engineering concerns. It allows for delivering software systems faster with less effort. Therefore, the thesis explores limits of reuse in the context of <b>component</b> <b>systems.</b> It analyzes in depth contemporary <b>component</b> <b>systems,</b> finds their commonalities and variation points, and introduces a meta-component system [...] a software product line which allows for producing a tailored <b>component</b> <b>system</b> based on a set of requirements. The thesis addresses the meta-component system definition and focuses on its crucial aspects which play the key role in <b>component</b> <b>systems</b> preparation- (1) a configurable execution environment and (2) generation of implementation artifacts. To address the first aspect, the thesis proposes a model-driven method for creating configurable execution environments. Motivated by creating execution environments, the thesis contributes to (2) by introducing a notion of domain-specific languages interoperability in the context of the code generation. Furthermore, the thesis elaborates the proposed notion resulting into a family of interoperable domain-specific languages which is parametrized by a general purpose language...|$|R
5000|$|Software testing {{involves}} {{the execution of}} a software <b>component</b> or <b>system</b> <b>component</b> to evaluate one or more properties of interest. In general, these properties indicate {{the extent to which}} the <b>component</b> or <b>system</b> under test: ...|$|R
5000|$|IBM System Object Model SOM and DSOM [...] - [...] <b>component</b> <b>systems</b> from IBM used in OS/2 and AIX ...|$|R
