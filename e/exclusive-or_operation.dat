34|55|Public
5000|$|Stream ciphers, where {{plaintext}} bits {{are combined}} with a cipher bit stream by an <b>exclusive-or</b> <b>operation</b> (xor), can be very secure if used properly. However they are vulnerable to attack if certain precautions are not followed: ...|$|E
50|$|Pseudo-random number (PRN) generators, {{specifically}} Linear feedback shift registers, {{are defined}} in terms of the <b>exclusive-or</b> <b>operation.</b> Hence, a suitable setup of XOR gates can model a linear feedback shift register, in order to generate random numbers.|$|E
5000|$|These {{characteristics}} {{suggest a}} simple and fast method of translating a binary value into the corresponding Gray code. Each bit is inverted if the next higher bit of the input value is set to one. This can be performed in parallel by a bit-shift and <b>exclusive-or</b> <b>operation</b> if they are available: the nth Gray code is obtained by computing ...|$|E
50|$|On {{systems with}} 32-bit or larger words, it is {{possible}} to speed up execution of this cipher by combining the SubBytes and ShiftRows steps with the MixColumns step by transforming them into a sequence of table lookups. This requires four 256-entry 32-bit tables, and utilizes a total of four kilobytes (4096 bytes) of memory—one kilobyte for each table. A round can then be done with 16 table lookups and 12 32-bit <b>exclusive-or</b> <b>operations,</b> followed by four 32-bit <b>exclusive-or</b> <b>operations</b> in the AddRoundKey step.|$|R
40|$|Abstract. This paper {{introduces}} and analyzes an algorithm {{to compile}} a series of <b>exclusive-or</b> <b>operations.</b> The compiled series is quite efficient, almost always beating the so-called “Four Russians ” approach, and uses no temporary storage beyond its outputs. The algorithm is reasonably fast and surprisingly simple. ...|$|R
50|$|Lagged Fibonacci {{generators}} have {{a maximum}} period of (2k - 1)*2M-1 if addition or subtraction is used, and (2k-1)*k if <b>exclusive-or</b> <b>operations</b> {{are used to}} combine the previous values. If, on the other hand, multiplication is used, the maximum period is (2k - 1)*2M-3, or 1/4 of period of the additive case.|$|R
50|$|Usually, but not always, an {{implementation}} appends n 0-bits (n {{being the}} size of the CRC) to the bitstream to be checked before the polynomial division occurs. Such appending is explicitly demonstrated in the Computation of CRC article. This has the convenience that the remainder of the original bitstream with the check value appended is exactly zero, so the CRC can be checked simply by performing the polynomial division on the received bitstream and comparing the remainder with zero. Due to the associative and commutative properties of the <b>exclusive-or</b> <b>operation,</b> practical table driven implementations can obtain a result numerically equivalent to zero-appending without explicitly appending any zeroes, by using an equivalent, faster algorithm that combines the message bitstream with the stream being shifted out of the CRC register.|$|E
50|$|Playback of ANIMs {{will usually}} require two buffers, as {{mentioned}} above, and double-buffering between them. The frame {{data from the}} ANIM file is used to modify the hidden frame to the next frame to be shown. When using the XOR mode, the usual run-length-decoding routine can be easily modified to do the <b>exclusive-or</b> <b>operation</b> required. Note that runs of zero bytes, which will be very common, can be ignored, as an exclusive or of any byte value to a byte of zero will not alter the original byte value. The general procedure, for all compression techniques, is to first decode the initial ILBM picture into the hidden buffer and double buffer it into view. Then this picture is copied to the other (now hidden) buffer. At this point each frame is displayed with the same procedure. The next frame is formed in the hidden buffer by applying the DLTA data (or the XOR data from the BODY chunk) and the new frame is double-buffered into view. This process continues {{to the end of}} the file.|$|E
5000|$|One {{method of}} evading {{signature}} detection {{is to use}} simple encryption to encipher (encode) {{the body of the}} virus, leaving only the encryption module and a static cryptographic key in cleartext which does not change from one infection to the next. In this case, the virus consists of a small decrypting module and an encrypted copy of the virus code. If the virus is encrypted with a different key for each infected file, {{the only part of the}} virus that remains constant is the decrypting module, which would (for example) be appended to the end. In this case, a virus scanner cannot directly detect the virus using signatures, but it can still detect the decrypting module, which still makes indirect detection of the virus possible. Since these would be symmetric keys, stored on the infected host, it is entirely possible to decrypt the final virus, but this is probably not required, since self-modifying code is such a rarity that it may be reason for virus scanners to at least [...] "flag" [...] the file as suspicious. An old but compact way will be the use of arithmetic operation like addition or subtraction and the use of logical conditions such as XORing, where each byte in a virus is with a constant, so that the <b>exclusive-or</b> <b>operation</b> had only to be repeated for decryption. It is suspicious for a code to modify itself, so the code to do the encryption/decryption may be part of the signature in many virus definitions. A simpler older approach did not use a key, where the encryption consisted only of operations with no parameters, like incrementing and decrementing, bitwise rotation, arithmetic negation, and logical NOT. Some viruses will employ a means of encryption inside an executable in which the virus is encrypted under certain events, such as the virus scanner being disabled for updates or the computer being rebooted. This is called cryptovirology. At said times, the executable will decrypt the virus and execute its hidden runtimes, infecting the computer and sometimes disabling the antivirus software.|$|E
3000|$|By {{employing}} techniques from array code design, it is {{also able}} to design other ([...] n,k) [...] threshold LDPC secret sharing schemes. In the efficient LDPC or BP-XOR secret sharing schemes that it builds, only linear number of XOR (<b>exclusive-or)</b> <b>operations</b> on binary strings are necessary for both secret reconstruction phase and secret distribution phase.|$|R
3000|$|This paper proposes application-specific {{instructions}} and their bit manipulation unit (BMU), which efficiently support scrambling, convolutional encoding, puncturing, interleaving, and bit stream multiplexing. The proposed DSP employs the BMU supporting parallel shift and XOR (<b>exclusive-OR)</b> <b>operations</b> and bit insertion/extraction operations on multiple data. The proposed architecture has been modeled by VHDL and synthesized using the SEC 0.18 [...]...|$|R
40|$|Realization of a bit-serial {{multiplication}} algorithm for the encoding of Reed-Solomon (RS) codes {{on a single}} VLSI chip using NMOS technology is demonstrated to be feasible. A dual basis (255, 223) over a Galois field is used. The conventional RS encoder for long codes often requires look-up tables to perform the multiplication of two field elements. Berlekamp's algorithm requires only shifting and <b>exclusive-OR</b> <b>operations...</b>|$|R
3000|$|... {{operator}} is the <b>exclusive-or</b> <b>operation</b> used {{to detect}} disagreement between corresponding bit pairs in the two templates, [...]...|$|E
3000|$|... [...]). The dissimilarity {{between a}} pair of codes is {{measured}} by their Hamming distance based on an <b>exclusive-OR</b> <b>operation.</b>|$|E
30|$|In {{the above}} two processes, {{encryption}} or decryption is performed through an <b>exclusive-OR</b> <b>operation,</b> {{all of which}} require the participation of keys, where K represents a key that generates a chaotic sequence. This kind of chaotic encryption algorithm has good data confidentiality and controllability, so it is very practical and has been widely used.|$|E
40|$|We present MDS array {{codes of}} size (p- 1) ×(p- 1), p {{is a prime}} number, that can correct any row or column in error without a priori {{knowledge}} of what type of error that has occurred. The complexity of the encoding and decoding algorithms is {{lower than that of}} known codes with the same error-correcting power, since our algorithms are based on <b>exclusive-OR</b> <b>operations</b> over lines of different slopes, as opposed to algebraic operations over a finite field...|$|R
40|$|Abstract—We {{present a}} disk array {{organization}} that can sur-vive three simultaneous disk failures while only using <b>exclusive-or</b> <b>operations</b> {{to calculate the}} parities that generate this failure tolerance. The reliability of storage systems using magnetic disks depends on how prone individual disks are to failure. Unfortunately, disk failure rates are impossible to predict and {{it is well known}} that individual batches might be subject to much higher failure rates at some point during their lifetime. It is also known that many disk drive families, but not all, suffer a substantially higher failure rate at the beginning and some at the end of their economic lifespan. Our proposed organization can be built on top of a dense two-failure tolerant layout using only <b>exclusive-or</b> <b>operations</b> and with a ratio of parity to data disks of 2 /k. If the disk failure rates are higher than expected, the new organization can be super-imposed on the existing two-failure tolerant organization by introducing (k+ 1) / 2 new parity disks and (k+ 1) / 2 new reliability stripes to yield a three-failure tolerant layout without moving any data or calculating any other parity but the new one. We derive the organization using a graph visualization and a construction by Lawless of factoring a complete graph into paths. I...|$|R
40|$|We {{present a}} family of maximum-distance {{separable}} (MDS) array codes of size (p- 1) ×(p- 1), p a prime number, and minimum criss-cross distance 3, i. e., the code is capable of correcting any row or column in error, without a priori knowledge of what type of error occurred. The complexity of the encoding and decoding algorithms is {{lower than that of}} known codes with the same error-correcting power, since our algorithms are based on <b>exclusive-OR</b> <b>operations</b> over lines of different slopes, as opposed to algebraic operations over a finite field. We also provide efficient encoding and decoding algorithms for errors and erasures...|$|R
40|$|Using a {{trace of}} address references, we {{compared}} the efficiency of several different hashing functions, such as cyclic redundancy checking (CRC) polynomials, Fletcher checksum, folding of address octets using the <b>exclusive-or</b> <b>operation</b> and bit extraction from the address. Guidelines are provided for determining {{the size of the}} hashmark required to achieve a specified level of performance...|$|E
40|$|The {{alternating}} sum of volumes (ASV) decomposition is {{a widely}} used technique for converting a B-Rep into a CSG model. The obtained CSG tree has convex primitives at its leaf nodes, while the contents of its internal nodes alternate between the set union and difference operators. This work first shows that the obtained CSG tree T can also be expressed as the regularized <b>Exclusive-OR</b> <b>operation</b> among all the convex primitives at the leaf nodes of T, regardless the structure and internal nodes of T. This is an important result in the case in which EVM represented orthogonal polyhedra are used because in this model the <b>Exclusive-OR</b> <b>operation</b> runs much faster than set union and difference operations. Therefore this work applies this result to EVM represented orthogonal polyhedra. It also presents experimental results that corroborate the theoretical results and includes some practical uses for the ASV decomposition of orthogonal polyhedra. Postprint (published version...|$|E
40|$|An Identity based {{cryptography}} {{based on}} visual cryptography scheme was proposed for protecting color image. A color image {{to be protected}} and authentic entities such as account number, password, signature image are given as input. The binary key image is obtained by distributing the digital signature of obtained authentic entities. A secret color image which needs to be communicated is decomposed into three grayscale tones of Y-Cb-Cr color component. Then these grayscale images are half-toned to binary image, and finally the obtained binary images are encrypted using binary key image to obtain binary cipher images. To encrypt <b>Exclusive-OR</b> <b>operation</b> is done on binary key image and three half-tones of secret color image separately. These binary images are combined to obtain cipher. In decryption the shares are decrypted by applying <b>Exclusive-OR</b> <b>operation</b> on cipher and key, then the recovered binary images are inverse half-toned and combined to get secret color image. This scheme is more efficient for communicating natural images across diffident channel...|$|E
40|$|Abstract—This paper {{presents}} {{a new class}} of rate-compatible LDPC codes, protograph-based Raptor-like (PBRL) codes. The proposed PBRL codes are jointly decodable with an iterative belief propagation decoder. As with Raptor codes, additional parity bits can be easily produced by <b>exclusive-or</b> <b>operations</b> on the precoded bits, providing extensive rate compatibility. This paper provides a design procedure that optimizes this class of rate-compatible LDPC codes. The new PBRL codes outperform 3 GPP rate-compatible turbo codes with the same short blocklength at high SNR and show no sign of an error floor at the FER region of 10 − 7. I...|$|R
40|$|Geocast is {{a scheme}} which allows packets {{to be sent}} to a {{destination}} area instead of an address. This allows the addressing of any device in a specific region without further knowledge. In this paper we present an addressing mechanism that allows efficient referral to areas of arbitrary size. The binary representation of our addressing mechanism fits in an IPv 6 address and can be used for route lookup with simple <b>exclusive-or</b> <b>operations.</b> We show that our addressing mechanism can be used to address areas accurately enough {{to be used as a}} mechanism to route packets close to their destination...|$|R
40|$|This paper proposes application-specific {{instructions}} and their bit manipulation unit (BMU), which efficiently support scrambling, convolutional encoding, puncturing, interleaving, and bit stream multiplexing. The proposed DSP employs the BMU supporting parallel shift and XOR (<b>exclusive-OR)</b> <b>operations</b> and bit insertion/extraction operations on multiple data. The proposed architecture has been modeled by VHDL and synthesized using the SEC 0. 18 µm standard cell library and the gate {{count of the}} BMU is only about 1700 gates. Performance comparisons show {{that the number of}} clock cycles can be reduced about 40 %∼ 80 % for scrambling, convolutional encoding, and interleaving compared with existing DSPs...|$|R
40|$|The {{alternating}} sum of volumes (ASV) decomposition is {{a widely}} used technique for converting a b-rep into a CSG model, with all its implicit uses and advantages -like form feature recognition, among others. The obtained CSG tree has convex primitives at its leaf nodes, while the contents of its internal nodes alternate between the set - union and set-difference operators. This paper first shows that the obtained CSG tree T can also be expressed as the regularized <b>Exclusive-OR</b> <b>operation</b> among all the convex primitives at the leaf nodes of T, regardless the structure and internal nodes of T. The importance of this result becomes apparent, for example, with those solid modeling schemes, for which the <b>Exclusive-OR</b> <b>operation</b> can be performed much faster than both the set union and set difference operators. This {{is the case for}} the Extreme Vertices Model (EVM) for orthogonal polyhedra. Therefore, this paper is then devoted for applying this result to orthogonal polyhedra, using the Extreme Vertices Model. It also includes a comparision of using this result vs. not-using it when finding the ASV decomposition of orthogonal polyhedra, as well as some practical uses for the ASV decomposition of orthogonal polyhedra...|$|E
40|$|Abstract—Binary Decision Diagram (BDD) {{has been}} shown to be {{applicable}} in image coding. A technique presented in this paper extends the functionality of BDD in image coding to cover major geometric transformations of image such as translation, rotations, scaling and shearing. By introducing the concept of transition branch, nonuniform and uniform translation of image by a given displacement could be obtained using only <b>exclusive-or</b> <b>operation.</b> Based on the translation, we show that image rotation, scaling and shearing could be achieved...|$|E
40|$|This paper {{illustrates}} how analog circuitry {{can be used}} to decode turbo and turbo-like codes. For ease of exposition, the focus is on a simple two dimensional product code comprised of a 2 by 2 array of (3, 2) single parity check codes. It is shown that the heart of the decoder is a soft <b>exclusive-or</b> <b>operation</b> which is easily implemented in analog as a modified Gilbert multiplier. Finally, a complete decoder design is presented which is capable of achieving throughput on the order of hundreds of Mbps...|$|E
40|$|Part 2 : Middleboxes and AddressingInternational audienceGeocast is {{a scheme}} which allows packets {{to be sent}} to a {{destination}} area instead of an address. This allows the addressing of any device in a specific region without further knowledge. In this paper we present an addressing mechanism that allows efficient referral to areas of arbitrary size. The binary representation of our addressing mechanism fits in an IPv 6 address and can be used for route lookup with simple <b>exclusive-or</b> <b>operations.</b> We show that our addressing mechanism can be used to address areas accurately enough {{to be used as a}} mechanism to route packets close to their destination...|$|R
40|$|We present ˆB a novel {{data layout}} method for tolerating {{multiple}} disk failures within disk arrays. In a disk array with 2 n disks, ˆB tolerates at most 2 (n − 1) simultaneous failures; reconstruction work is {{spread over the}} surviving disks using only <b>exclusive-or</b> <b>operations.</b> The data layout is based upon ˆB array-codes; our approach provides an efficient software implementation. ˆB utilizes the minimal amount of redundant storage space. Our detailed performance comparison with RAID- 5 and EVENODD shows ˆB read operations to be very competitive especially {{in the presence of}} failures; ˆB write operations are more expensive than RAID- 5 and EVENODD write operations. In the presence of failures, the performance gradually degrades as the number of failures increases. 1...|$|R
40|$|Abstract—This paper {{presents}} a new construction of punctured-node protograph-based Raptor-like (PN-PBRL) codes that {{is suitable for}} long-blocklength applications. As with the Raptor codes, additional parity bits can be easily produced by <b>exclusive-OR</b> <b>operations</b> on the precoded bits, providing extensive rate compatibility. The new construction provides low iterative decoding thresholds that are within 0. 45 dB of the capacity for all code rates studied, and the construction is suitable for long blocklengths. Comparing at the same information block size of k = 16368 bits, the PN-PBRL codes {{are as good as}} the best known AR 4 JA codes in the waterfall region. The PN-PBRL codes also perform comparably to DVB-S 2 LDPC codes even though the DVB-S 2 codes have longer blocklength and outer BCH codes. I...|$|R
40|$|DNA {{computing}} based image encryption is a new, promising field. In this paper, {{we propose}} a novel image encryption {{scheme based on}} DNA encoding and spatiotemporal chaos. In particular, after the plain image is primarily diffused with the bitwise <b>Exclusive-OR</b> <b>operation,</b> the DNA mapping rule is introduced to encode the diffused image. In order to enhance the encryption, the spatiotemporal chaotic system is used to confuse the rows and columns of the DNA encoded image. The experiments demonstrate that the proposed encryption algorithm is of high key sensitivity and large key space, and it can resist brute-force attack, entropy attack, differential attack, chosen-plaintext attack, known-plaintext attack and statistical attack...|$|E
40|$|Multi-site coding {{techniques}} allow fast {{simulations of}} cellular automata that are economical {{in the use}} of memory. In these techniques the transition rule must be expressed using only bitwise operations. We present an algorithm for the simulation of generic totalistic and outer totalistic cellular automata which uses a multi-site coding technique. The algorithm is based on the careful use of (a) improvements over the canonical forms by using the <b>exclusive-or</b> <b>operation,</b> (b) optimal storage of the configuration in the computer memory, and (c) appropriate construction of stochastic rules. Items (b) and (c) of the method can be also applied to non-totalistic automata in any dimension...|$|E
3000|$|... [...]. H is the {{parity check}} matrix of the (n, n − k) Hamming code. T is the {{transpose}} operation, and ⊕ is the <b>exclusive-or</b> <b>operation.</b> Next, if the computed syndrome vector z is (0, 0,…, 0), then {{the group of}} n marked pixels R is set to be equal to c; otherwise, find the i-th column of H that {{is equal to the}} transposed syndrome vector z^T. The group of n marked pixels R is calculated by R = e_i⊕c, where e_i is a unit vector of length n with “ 1 ” located at the i-th position. At the receiving side, a receiver can extract the original binary string s from the received group R by s = R×H^T.|$|E
30|$|Gray-code curve The Gray-code curve (Fig.  1 b) mapping {{computation}} is {{very similar}} to the z-order curve as it requires only an extra step. After obtaining the z value as described above, it is transformed to Gray-code by performing <b>exclusive-or</b> <b>operations</b> to successive bits. For example, the Gray-code value of 0100 _ 2 would be calculated as follows. Initially, the MSB is left the same. Then, the second bit would be an exclusive-or of the first and second (0 _ 2 ⊕ 1 _ 2 = 1 _ 2), the third and exclusive-or of the second and third (1 _ 2 ⊕ 0 _ 2 = 1 _ 2) and the fourth an exclusive-or of the third and fourth (0 _ 2 ⊕ 0 _ 2 = 0 _ 2). Thus, the final Grey-code value would be 0110 _ 2.|$|R
40|$|To access {{a network}} system legally, {{efficiently}} and securely, the authentication scheme is essential and very important. In this paper, we propose a nonce-based authentication scheme using smart card. We use Diffie-Hellman scheme {{to enhance the}} security of our protocol. To lessen the computation load, the remote system alone proceeds the exponentiation computation and it also implements only once. The other computations are all concerned with simple one-way hash functions or <b>exclusive-or</b> <b>operations.</b> No verification table is needed in our protocol. The protocol provides not only mutual authentication between a user and the remote server but also achievement of key agreement. The protocol also supports convenient password update at the user’s terminal. To avoid the identity duplication, we introduce the idea of transformed identity in our protocol. Povzetek: Opisana je nova shema dostopa do omrežja s pomočjo pametne kartice. ...|$|R
40|$|Abstract—Over {{the past}} decade, besides authentication, own-ership {{management}} protocols {{have been suggested}} to transfer or delegate the ownership of RFID tagged items. Recently, Niu et al. have proposed an authentication and ownership management protocol based on 16 -bit pseudo random number generators and <b>exclusive-or</b> <b>operations</b> which both can be easily implemented on low-cost RFID passive tags in EPC global Class- 1 Generation- 2 standard. They claim that their protocol offers location and data privacy and also resists against desynchronization attack. In this paper, we analyze the security of their proposed authentication and ownership management protocol and show that the protocol is vulnerable to secret disclosure and desynchronization attacks. The complexity {{of most of the}} attacks are only two runs of the protocol and the success probability of the attacks are almost 1. Index Terms—RFID, ownership transfer, ownership delegation, secret disclosure attack, desynchronization attack. I...|$|R
