4222|4396|Public
5|$|The {{traditional}} Belarusian dress originates {{from the}} Kievan Rus' period. Due to the cool climate, clothes {{were designed to}} preserve body heat and were usually made from flax or wool. They were decorated with ornate patterns influenced by the neighboring cultures: Poles, Lithuanians, Latvians, Russians, and other European nations. Each region of Belarus has developed specific <b>design</b> <b>patterns.</b> One ornamental pattern common in early dresses currently decorates the hoist of the Belarusian national flag, adopted in a disputed referendum in 1995.|$|E
5|$|Various {{forms of}} Chinese {{architecture}} exist throughout Indonesia with marked differences between {{urban and rural}} areas and among the different islands. Architectural developments by the Chinese in Southeast Asia differ from those in mainland China. By blending local and European (Dutch) <b>design</b> <b>patterns,</b> numerous variations of fusion styles emerged. Chinese architecture in Indonesia has manifested in three forms: religious temples, study halls, and houses. Cities during the colonial period were divided into three racial districts: European, oriental (Arabs, Chinese, and other Asians), and indigenous. There usually were no physical boundaries among the zones, except for rivers, walls, or roads in some cases. Such legal boundaries promoted high growths in urban density within each zone, especially in the Chinese quarters, often leading to poor environmental conditions.|$|E
25|$|While SLATES {{forms the}} basic {{framework}} of Enterprise 2.0, {{it does not}} contradict all of the higher level Web 2.0 <b>design</b> <b>patterns</b> and business models. It includes discussions of self-service IT, the long tail of enterprise IT demand, and many other consequences of the Web 2.0 era in enterprise uses.|$|E
40|$|We {{describe}} the <b>Design</b> <b>Pattern</b> Modelling Language, a notation supporting the specification of <b>design</b> <b>pattern</b> solutions and their instantiation into UML design models. DPML provides {{a set of}} modelling constructs allowing <b>design</b> <b>pattern</b> solutions to be modelled and reused. A corresponding notation links <b>design</b> <b>pattern</b> solution elements to UML model elements, verifying fulfilment of the <b>design</b> <b>pattern</b> in the UML model. A prototype tool is described, together with {{an evaluation of the}} language and tool...|$|R
5000|$|Proxy <b>design</b> <b>pattern</b> is {{also known}} as {{surrogate}} <b>design</b> <b>pattern.</b>|$|R
50|$|In {{software}} engineering, a distributed <b>design</b> <b>pattern</b> is a <b>design</b> <b>pattern</b> {{focused on}} distributed computing problems.|$|R
25|$|In {{recent times}} Iranian carpets {{have come under}} fierce {{competition}} from other countries producing fakes of the original Persian designs as well as genuine cheaper substitutes. Most of the problems facing this traditional art is due to absence of patenting and branding the products as well as reduced quality of raw materials in the local market and the consistent loss of original <b>design</b> <b>patterns.</b> The absence of modern R is causing rapid decline in the size as well as market value of this art.|$|E
25|$|In the 1950s, post-war {{demand for}} housing led the State Government to create a public housing programme, {{providing}} cheap accommodation to cope with returning servicemen, and the boom in migrant labour. Suburbs such as Bellerive, Lindisfarne, Montagu Bay, Mornington, Rosny and Warrane all expanded dramatically throughout the 1950s and 1960s, and housing from the period still often bears the distinctive <b>design</b> <b>patterns</b> of former government housing. For {{many parts of the}} city electricity supply only arrived in the 1950s, and sealed roads, mains water, and sewage only began to be provided in the 1960s.|$|E
25|$|Narayan Debnath {{was born}} {{and spent most of}} his life living in Shibpur, Howrah, India. His family hailed from Bikrampur in what is now in Bangladesh but had {{migrated}} to Shibpur before his birth. In an interview published by Laalmati Publication in Narayan Debnath Comics Samagra, Debnath confessed that he was interested in visual arts from a very early age. The family business was retailing gold and he had ample scope to <b>design</b> <b>patterns</b> for jewellery. During the time of World War II, Debnath would study fine arts at the Indian Art College for five years. He did not continue to get his degree but instead discontinued in his final year. For the next few years he freelanced for advertising agencies creating movie slides and logos. Debnath recounts in Narayan Debnath Comics Samagra, Vol. 2 that on the day of his wedding Gandhi was assassinated, which caused much inconvenience to the guests. The four volumes of Narayan Debnath Comics Samagra provide rich information about the life of the author.|$|E
40|$|This paper {{presents}} a new object-oriented <b>design</b> <b>pattern</b> — State Machine <b>design</b> <b>pattern.</b> This pattern extends capabilities of State <b>design</b> <b>pattern.</b> These patterns allow an object to alter its behavior when its internal state changes. Introduced event-driven approach loosens coupling. Thus automata could be constructed from independent state classes. The classes designed with State Machine pattern are more reusable than ones <b>designed</b> with State <b>pattern...</b>|$|R
40|$|International audienceAccording to the {{characteristics}} of industrial robots, user-customized configuration <b>design</b> <b>pattern</b> is showing to achieve rapid development of industrial robotics. In this paper, the definition of user-customized configuration <b>design</b> <b>pattern</b> is determined. The implementation approach of this pattern is given through introducing what role industrial robot stakeholders including suppliers, manufacturers, designers and users should play in the pattern. Then, the key technologies of implementation approach are introduced. Finally, system dynamics models are established for this <b>design</b> <b>pattern</b> and for traditional <b>design</b> <b>pattern</b> of industrial robots and are simulated by Anylogic simulation software. The simulation results prove that the proposed <b>design</b> <b>pattern</b> has better performances than traditional <b>design</b> <b>pattern</b> with regard to inventory and order response speed...|$|R
40|$|There {{are many}} {{recurring}} patterns of classes which exist in several object oriented software as {{an experience of}} developers. <b>Design</b> <b>Pattern</b> Mining {{is an important part}} of many solutions to Software Reuse practices. <b>Design</b> <b>pattern</b> instances are highly important and useful for program understanding and software maintenance. Hence an automatic and reliable <b>design</b> <b>pattern</b> mining capability is required. Here we are proposing a new method for <b>design</b> <b>pattern</b> detection based on Boolean functions...|$|R
25|$|Stone age tools {{dating from}} the Middle Stone Age (around 200,000 years ago) found near Kelibia are the {{earliest}} evidence of human activity in the region. Finds have been made of stone blades, tools, and small figurines of the Capsian culture (named after Gafsa in Tunisia), which lasted from around 10,000 to 6,000 BC (the Mesolithic period). Seasonal migration routes evidence their ancient journeys. Saharan rock art, consisting of inscriptions and paintings that show <b>design</b> <b>patterns</b> as well as figures of animals and of humans, are attributed to the Berbers and also to black Africans from the south. Dating these outdoor art works has proven difficult and unsatisfactory. Egyptian influence is thought very unlikely. Among the animals depicted, alone or in staged scenes, are large-horned buffalo (the extinct bubalus antiquus), elephants, donkeys, colts, rams, herds of cattle, a lion and lioness with three cubs, leopards or cheetahs, hogs, jackles, rhinoceroses, giraffes, hippopotamus, a hunting dog, and various antelope. Human hunters may wear animal masks and carry their weapons. Herders are shown with elaborate head ornamentation; a few other human figures are shown dancing, while others are driving chariots or riding camels.|$|E
500|$|Very {{little of}} the design from Freelance Police was carried over into Save the World; LucasArts still held onto the assets created for use in Freelance Police, and Telltale was wary of using similar <b>design</b> <b>patterns.</b> While Ferguson and Purcell had both been {{involved}} with the canceled LucasArts project, Grossman had not. The team decided to just start from fresh, and pursue a different treatment of the game's subject. Purcell himself wanted to ensure that the game conveyed the [...] "gritty" [...] feel of the original comics—something he felt was lacking from the LucasArts renditions of the franchise. Grossman stated that [...] "we wanted {{to get a little bit}} more of that dirt on the streets, and the paper cups and people being mean and nasty". This [...] "gritty" [...] feeling also influenced artistic design. For instance, on Purcell's suggestion, the sky was changed from blue to yellow in the street outside Sam and Max's office, instantly making the environment feel [...] "filthy and disgusting".|$|E
500|$|According to Stemmle, the {{cancellation}} decision {{was prompted by}} the report of an external marketing analysis group hired by LucasArts, which claimed that the European market for adventure games [...] "had simply disappeared. Not shrunk, not cratered, just... disappeared". A newly established German company, Bad Brain Entertainment, claimed to have entered negotiations with LucasArts to acquire the game, although nothing resulted from these talks. LucasArts subsequently dismissed many of the designers involved with developing their adventure games, and in 2006 stated {{that they did not}} intend to return to the adventure genre until the next decade. Some of the former Freelance Police development team formed Telltale Games in June 2004 to continue developing the sort of adventure games that LucasArts no longer wished to produce. Telltale Games later unsuccessfully attempted to buy the rights to Freelance Police from LucasArts, which would have enabled the team to finish developing the game. When the LucasArts license expired in mid-2005, Purcell took the franchise to Telltale Games, where it was developed into an episodic series of games. However, very little of the work done on Freelance Police was carried over by the developers to Telltale Games; LucasArts still held onto the game's assets and Telltale was wary about using similar <b>design</b> <b>patterns.</b> The new series debuted in October 2006 with Sam & Max Save the World.|$|E
50|$|The {{following}} documentation {{categories for}} the private class data <b>design</b> <b>pattern</b> follows the <b>design</b> <b>pattern</b> documentation style precedent set by the Gang of Four.|$|R
30|$|A careful {{examination}} of the strategy <b>design</b> <b>pattern</b> (Fig.  10) shows that the context is in turn designed by using the template <b>design</b> <b>pattern.</b> The intent of the template <b>design</b> <b>pattern</b> is to define the skeleton of an algorithm (or a function) in an operation that defers some steps to subclasses [23].|$|R
40|$|<b>Design</b> <b>pattern</b> is a {{reusable}} module {{to improve the}} problem and defines solution among all those methods techniques & algorithms to choose the best one then applies for our requirement. When designing a system or end product usually need to control how an object is used and prevent users from making copies of it or creating new instances. <b>Design</b> <b>pattern</b> are used in object oriented programming language, Dot Net, Java. <b>Design</b> <b>pattern</b> is simple research but it is innovative, to achieve our analysis for particular query in search engine, we are using <b>design</b> <b>pattern</b> to identify the solution in development. In this paper define a problem & solution using of <b>design</b> <b>pattern</b> our aim is to detect unwanted information in particular analysis and provide the relevant information, to retrieve the information from databases our solution may use the mining algorithm and <b>design</b> <b>pattern</b> {{in the development of}} our end product “Novel <b>Design</b> <b>Pattern</b> Mining”. This work improves the mining process and reduces the time and effort for developers...|$|R
2500|$|A {{design pattern}} {{is a general}} {{reusable}} solution to a commonly occurring problem in software design. [...] In Prolog, <b>design</b> <b>patterns</b> go under various names: skeletons and techniques, cliches, program schemata, and logic description schemata. [...] An alternative to <b>design</b> <b>patterns</b> is higher order programming.|$|E
2500|$|Erik M. Buck, Donald A. Yacktman: Cocoa <b>Design</b> <b>Patterns,</b> Addison-Wesley Professional, 1st Edition 2009, Paperback, ...|$|E
2500|$|The newly {{designed}} RM50 banknote retains the predominant colour of green-blue, but is designed {{in a new}} theme, dubbed the [...] "National Mission", expressing the notion of Malaysia [...] " [...] the economy up the value chain", in accordance to Malaysia's economic transformation to higher value-added activities in agriculture, manufacturing and services sectors of the economy. The dominant intaglio portrait of the first Yang di-Pertuan Agong, Tuanku Abdul Rahman, is retained {{on the right and}} the national flower, the hibiscus, is presented in the center on the obverse of the note. <b>Design</b> <b>patterns</b> from songket weaving, which are in the background and edges of the banknote, are featured to reflect the traditional Malay textile handicraft and embroidery.|$|E
30|$|The {{development}} process is sequential. It kicks off by analyzing and {{reflecting on the}} corporate culture (<b>design</b> <b>pattern</b> 0) to provide {{the foundation for the}} entire design effort. The corporate culture can hardly be constructed directly—for the most part, this is done indirectly via the other four fields—so this first pattern serves only for analysis and reflection. The next step is to actively work on factors for user centricity (<b>design</b> <b>pattern</b> A) and then build on this work to develop didactical variety (<b>design</b> <b>pattern</b> B). Then it is time to design the spatial aspects (<b>design</b> <b>pattern</b> C). The final step is to address the technological factors relevant to intelligent learning systems (<b>design</b> <b>pattern</b> D).|$|R
5000|$|Use When: [...] "Context of use" [...] is a {{critical}} component of the <b>design</b> <b>pattern.</b> This element helps people understand situations when the <b>design</b> <b>pattern</b> applies (and when it does not.) ...|$|R
30|$|A <b>design</b> <b>pattern</b> and a runtime {{mechanism}} {{are proposed}} in this section. The <b>design</b> <b>pattern</b> enables a mobile application to be computation offloaded. And the runtime mechanism supports the application to be offloaded on the fly.|$|R
2500|$|Eugene {{is noted}} for its [...] "{{community}} inventiveness." [...] Many U.S. trends in community development originated in Eugene. The University of Oregon's participatory planning process, known as The Oregon Experiment, {{was the result of}} student protests in the early 1970s. The book of the same name is a major document in modern enlightenment thinking in planning and architectural circles. The process, still used by the university in modified form, was created by Christopher Alexander, whose works also directly inspired the creation of the Wiki. Some research for the book A Pattern Language, which inspired the <b>Design</b> <b>Patterns</b> movement and Extreme Programming, was done by Alexander in Eugene. Not coincidentally, those engineering movements also had origins here. Decades after its publication, A Pattern Language {{is still one of the}} best-selling books on urban design.|$|E
2500|$|A {{class of}} heavier, more {{elongated}} pieces, probably produced in Africa, are often labelled by collectors as [...] "King" [...] or [...] "Queen" [...] manillas. Usually with flared ends {{and more often}} copper than brass, they show {{a wide range of}} faceting and <b>design</b> <b>patterns.</b> Plainer types were apparently bullion monies, but the fancier ones were owned by royalty and used as bride price and in a pre-funeral [...] "dying ceremony." [...] Unlike the smaller money-manillas, their range was not confined to west Africa. A distinctive brass type with four flat facets and slightly bulging square ends, ranging from about -, was produced by the Jonga of Zaire and called 'Onganda', or 'onglese', phonetic French for [...] "English.". Other types which are often called manillas include early twisted heavy-gauge wire pieces (with and without [...] "knots") of probable Calabar origin, and heavy, multi-coil copper pieces with bulging ends from Nigeria.|$|E
5000|$|Efforts {{have also}} been made to codify <b>design</b> <b>patterns</b> in {{particular}} domains, including use of existing <b>design</b> <b>patterns</b> as well as domain specific <b>design</b> <b>patterns.</b> Examples include user interface <b>design</b> <b>patterns,</b> information visualization, secure design, [...] "secure usability", Web design [...] and business model design.|$|E
50|$|In {{computer}} programming, the adapter <b>design</b> <b>pattern</b> (often {{referred to}} as the wrapper pattern or simply a wrapper) is a <b>design</b> <b>pattern</b> for adapting one interface of a class into another interface that a client expects.|$|R
40|$|Abstract:- <b>Design</b> <b>pattern</b> {{selection}} {{is a difficult}} task. Evaluating the text based problem statement and finding the pattern is a challenging task. Improper text evaluation leads to incorrect pattern selection. The current paper describes a text support model (XML) for <b>design</b> <b>pattern</b> organization called Unified Pattern Document Repository (UPDR), related work of pattern repositories, pattern indexing process, and <b>pattern</b> retrieval. Keywords:- <b>Design</b> <b>pattern,</b> Inverted Index, Lucene index, JAXB, Document and pattern retrieval, an...|$|R
40|$|In {{this report}} we {{introduce}} the C++ <b>design</b> <b>pattern</b> called “Sandwich Pattern”. This <b>design</b> <b>pattern</b> is {{a variation of}} plain static polymorphism to statically replace certain static and dynamic characteristics of a data type while keeping certain other characteristics unchanged. This <b>design</b> <b>pattern</b> is for example applied in the pe rigid multibody physics engine to statically adapt rigid bodies and contacts between these bodies to specific algorithms that are selected at compile time. ...|$|R
5000|$|<b>Design</b> <b>Patterns,</b> {{the book}} which {{gave rise to}} the study of <b>design</b> <b>patterns</b> in {{computer}} science ...|$|E
50|$|Significant {{criticism}} {{has been directed}} at the concept of software <b>design</b> <b>patterns</b> generally, and at <b>Design</b> <b>Patterns</b> specifically.|$|E
50|$|Although <b>design</b> <b>patterns</b> {{have been}} applied {{practically}} for a long time, formalization {{of the concept of}} <b>design</b> <b>patterns</b> languished for several years.|$|E
50|$|In {{computer}} science, {{a software}} <b>design</b> <b>pattern,</b> {{in the sense}} of a template, is a general solution to a problem in programming. A <b>design</b> <b>pattern</b> provides a reusable architectural outline that may speed the development of many computer programs.|$|R
40|$|This paper {{discusses}} {{an object}} orient approach based on <b>design</b> <b>pattern</b> and computational reflection concept to implement non- functional requirements of complex control system. Firstly we brief about software architecture design, followed by control-monitor safety pattern, Tri-Modular redundancy (TMR) pattern, reflective state pattern and fault tolerance redundancy patterns that are use {{for safety and}} fault management. Reflection state pattern is a refinement of the state <b>design</b> <b>pattern</b> based on reflection architectural pattern. With variation in reflective <b>design</b> <b>pattern</b> we can develop a well structured fault tolerant system. The main goal {{of this paper is}} to separate control and safety aspect from the application logic. It details its intent, motivation, participants, consequences and implementation of safety <b>design</b> <b>pattern...</b>|$|R
40|$|What is a <b>Design</b> <b>Pattern?</b> A <b>design</b> <b>pattern</b> is {{a general}} {{solution}} to a commonly encountered problem in object-oriented design. Here's an analogy to bend your brain [...] . What is a <b>Design</b> <b>Pattern?</b> Iterator Strategy Factory Singleton Facade Composite What is a <b>Design</b> <b>Pattern?</b> A <b>design</b> <b>pattern</b> {{is a general}} solution to a commonly encountered problem in object-oriented design. Here's an analogy to bend your brain [...] . The Pattern of Myths: Hero with a thousand faces In his 1948 book, Hero with a thousand faces Joseph Campbell discusses how myths from various cultures share a common structure: the monomyth: A hero ventures forth {{from the world of}} common day into a region of supernatural wonder: fabulous forces are there encountered and a decisive victory is won: the hero comes back from this mysterious adventure with the power to bestow boons on his fellow man. Important roles are filled by archetypes: characters that adhere to particular patterns...|$|R
