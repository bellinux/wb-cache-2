102|6150|Public
25|$|Octave {{includes}} the C-like <b>increment</b> <b>and</b> <b>decrement</b> operators '++' and '--' in both their prefix and postfix forms.|$|E
2500|$|The pre- and post- <b>increment</b> <b>and</b> <b>decrement</b> {{operators}} (i++, --i ...) are unsupported (from Swift 3 onward), more {{so since}} C-style for statements are also unsupported from Swift 3 onward.|$|E
50|$|However, <b>increment</b> <b>and</b> <b>decrement</b> {{operators}} are not supported.|$|E
5000|$|... #Caption: On {{the skin}} {{envelope}} of the breast, stretch marks may indicate the relative-size <b>increments</b> <b>and</b> <b>decrements</b> {{occurred during the}} life of the woman.|$|R
40|$|Experiments were {{performed}} on the quasi-static perception of brightness and of apparent contrast of a foveal 1 -deg disk, presented either as a luminance increment or decrement against a 300 cd. m- 2 background. Results suggest that the perceptual attributes of brightness and apparent (or subjective) contrast should be distinguished. For an equal brightness difference {{with respect to the}} background, luminance increments are more effective than decrements. For an equal apparent contrast it is found that <b>increments</b> <b>and</b> <b>decrements,</b> up to 100 cd. m- 2, are about equally effective; for higher values luminance decrements are more effective. Brightness <b>increments</b> <b>and</b> <b>decrements</b> can both be described by a Stevens power function of the respective luminance <b>increments</b> <b>and</b> <b>decrements.</b> Apparent contrast can, apart from applying a usual luminance contrast formula, also be described as a power function of the luminance difference with the background...|$|R
50|$|In digital clocks {{a series}} of {{integrated}} circuit counters or dividers add the pulses up digitally, using binary logic. Often pushbuttons on the case allow the hour and minute counters to be <b>incremented</b> <b>and</b> <b>decremented</b> to set the time.|$|R
5000|$|<b>Increment</b> <b>and</b> <b>decrement</b> operators—special case of {{augmented}} assignment, by 1 ...|$|E
5000|$|Octave {{includes}} the C-like <b>increment</b> <b>and</b> <b>decrement</b> operators [...] and [...] in both their prefix and postfix forms.Octave also does augmented assignment, e.g[...]|$|E
5000|$|The pre- and post- <b>increment</b> <b>and</b> <b>decrement</b> {{operators}} ( [...] , ...) are unsupported (from Swift 3 onward), more {{so since}} C-style [...] statements are also unsupported from Swift 3 onward.|$|E
30|$|Random walk sub-chains (see, Figure 2 c): {{the value}} of the {{descriptor}} variable is subject to random, but constrained, <b>increments</b> <b>and</b> <b>decrements.</b> Examples of random walk sub-chains are channel state descriptors and variables tracking the number of packets in a buffer.|$|R
3000|$|... m− 1 } to {{represent}} {{the number of items}} that are hashed to its cells. Insertions and deletions can now be handled easily by <b>incrementing</b> <b>and</b> <b>decrementing</b> the corresponding counters. Later, Bonomi et al. presented an improved version of CBF based on d-left hashing (Bonomi et al. 2006).|$|R
40|$|AbstractWe {{evaluated}} the proposal that there exist detectors {{of the following}} four cardinal phases in human vision: +cosine, −cosine, +sine, and −sine. First, we assessed whether there was evidence that these cardinal phases were processed by independent ‘labeled lines,’ using a discrimination at detection threshold paradigm. Second, we assessed whether suprathreshold phase discrimination was best at phases intermediate between these cardinal values. Third, we tried to replicate previous evidence showing that an absence of facilitation occurs only between cosine pedestals and sine tests (or vice-versa). In all three experimental approaches we found no compelling evidence for four cardinal phase groupings. We did however find evidence for independent detectors for pure <b>increments</b> <b>and</b> <b>decrements</b> (±cosine). We suggest that phase discrimination, whether at threshold or suprathreshold, is mediated by mechanisms that encode the relative positions and contrasts of local <b>increments</b> <b>and</b> <b>decrements</b> within the stimulus...|$|R
50|$|<b>Increment</b> <b>and</b> <b>decrement</b> {{operators}} are unary operators that add or subtract one from their operand, respectively. They are commonly implemented in imperative programming languages. C-like languages feature two versions (pre- and post-) of each operator with slightly different semantics.|$|E
5000|$|Use of l-values as {{operator}} operands {{is particularly}} notable in unary <b>increment</b> <b>and</b> <b>decrement</b> operators. In C, for instance, {{the following statement}} is legal and well-defined, and depends {{on the fact that}} array indexing returns an l-value:x = ++ai; ...|$|E
50|$|Arithmetic {{overflow}} of the buckets is {{a problem}} and the buckets should be sufficiently large to make this case rare. If it does occur then the <b>increment</b> <b>and</b> <b>decrement</b> operations must leave the bucket set to the maximum possible value in order to retain the properties of a Bloom filter.|$|E
50|$|The GObject {{object-oriented}} programming framework implements reference counting on its base types, including weak references. Reference <b>incrementing</b> <b>and</b> <b>decrementing</b> uses atomic operations for thread safety. A {{significant amount of}} the work in writing bindings to GObject from high-level languages lies in adapting GObject reference counting to work with the language's own memory management system.|$|R
40|$|AbstractWeber {{contrast}}, ΔL/L, is {{a widely}} used contrast metric for aperiodic stimuli. Zele, Cao & Pokorny [Zele, A. J., Cao, D., & Pokorny, J. (2007). Threshold units: A correct metric for reaction time? Vision Research, 47, 608 – 611] found that neither Weber contrast nor its transform to detection-threshold units equates human reaction times in response to luminance <b>increments</b> <b>and</b> <b>decrements</b> under selective rod stimulation. Here we show that their rod reaction times are equated when plotted against the spatial luminance ratio between the stimulus and its background (Lmax/Lmin, the larger and smaller of background and stimulus luminances). Similarly, reaction times to parafoveal S-cone selective <b>increments</b> <b>and</b> <b>decrements</b> from our previous studies [Murzac, A. (2004). A comparative study of the temporal characteristics of processing of S-cone incremental and decremental signals. PhD thesis, New Bulgarian University, Sofia, Murzac, A., & Vassilev, A. (2004). Reaction time to S-cone <b>increments</b> <b>and</b> <b>decrements.</b> In: 7 th European conference on visual perception, Budapest, August 22 – 26. Perception, 33, 180 (Abstract). ], are better described by the spatial luminance ratio than by Weber contrast. We assume {{that the type of}} stimulus detection by temporal (successive) luminance discrimination, by spatial (simultaneous) luminance discrimination or by both [Sperling, G., & Sondhi, M. M. (1968). Model for visual luminance discrimination and flicker detection. Journal of the Optical Society of America, 58, 1133 – 1145. ] determines the appropriateness of one or other contrast metric for reaction time...|$|R
50|$|<b>Incrementing</b> <b>and</b> <b>decrementing</b> {{reference}} counts {{every time}} a reference is created or destroyed can significantly impede performance. Not only do the operations take time, but they damage cache performance {{and can lead to}} pipeline bubbles. Even read-only operations like calculating the length of a list require a large number of reads and writes for reference updates with naive reference counting.|$|R
5000|$|... (2) Its {{heating and}} cooling must be reversible. That is to say, the {{material}} {{must be able to}} be heated and cooled indefinitely often by the same <b>increment</b> <b>and</b> <b>decrement</b> of heat, and still return to its original pressure, volume and temperature every time. Some plastics do not have this property; ...|$|E
50|$|An adder is {{a digital}} circuit that {{performs}} addition of numbers.In many {{computers and other}} kinds of processors adders are used in the arithmetic logic units. They are also utilized {{in other parts of the}} processor, where they are used to calculate addresses, table indices, <b>increment</b> <b>and</b> <b>decrement</b> operators, and similar operations.|$|E
5000|$|Examples of unary {{operators}} {{in mathematics and}} in programming include the unary minus and plus, the <b>increment</b> <b>and</b> <b>decrement</b> {{operators in}} C-style languages (not in logical languages), and the factorial, reciprocal, floor, ceiling, fractional part, sign, absolute value, complex conjugate (unary of [...] "one" [...] complex number, that however has two parts at {{a lower level of}} abstraction), and norm functions in mathematics. The two's complement, address reference and the logical NOT operators are examples of unary operators in math and programming.|$|E
40|$|AbstractThe human {{visual system}} is adept at {{detecting}} global structure, or form, within a scene. The initial stage of post-retinal processing for {{all aspects of}} vision is fed by On- and Off-centre cells sensitive to centred luminance <b>increments</b> <b>and</b> <b>decrements</b> respectively. These cells provide input to two parallel pathways that process variations in local luminance (first-order pathway) and local contrast (second-order pathway). Here, we investigate the contribution of luminance and contrast information to global form detection, a stage between the extraction of local orientation and the recognition of objects. The underlying processes involve two stages. We find that signals in the On-, Off- and second-order pathways are segregated at both stages of processing. Surprisingly, the non-linear stage in the second-order form pathway {{is different from that}} in motion processing: the second-order form detectors show an asymmetry in sensitivity to <b>increments</b> <b>and</b> <b>decrements</b> that is not apparent in motion. A functional architecture for global form detection is proposed along with its possible neural substrates...|$|R
40|$|Research {{literature}} is reviewed, identifying {{a need to}} design instruction to support multi-digit mental computation and critiquing conventional place value instruction. A distinctive instructional domain is proposed, called conceptual place value (CPV) – <b>incrementing</b> <b>and</b> <b>decrementing</b> numbers by units of ones, tens and hundreds. A design research study is reported, focusing on refining the instructional design for CPV with low-attaining 3 rd and 4 th graders. Two cases of extensive instruction in CPV are described, drawn from 10 -week, 1 -on- 1 teaching cycles of 29 and 32 25 -minute lessons. Three key features of instruction that appear to support the two students 2 ̆ 7 learning of CPV are identified: advancing the level of tasks over the lessons, micro-adjusting tasks within lessons and the linking of number words, numerals and quantity. Three dimensions for advancing the level of tasks are identified: extending the range of numbers, making <b>increments</b> <b>and</b> <b>decrements</b> more complex <b>and</b> progressively distancing materials...|$|R
40|$|The {{mismatch}} negativity (MMN) {{component of}} the auditory event-related potential (ERP) reflects {{the process of change}} detection in the auditory system. The present study investigated the effect of deviance direction (<b>increment</b> vs. <b>decrement)</b> <b>and</b> calculation method (traditional vs. same-stimulus) on the amplitude of MMN. MMN was recorded for <b>increments</b> <b>and</b> <b>decrements</b> in frequency <b>and</b> duration in 20 adults. The stimuli (standard/deviant) were 250 Hz/ 350 Hz (frequency MMN) and 200 ms/ 300 ms (duration MMN) for <b>increment</b> MMN <b>and</b> vice versa for decrement MMN. Amplitude of MMN was calculated in two ways: the traditional method (subtracting ERP to the standard from the deviant presented in the same block) and the same-stimulus method (subtracting ERP to identical stimuli presented as standard in one block and deviant in another block). We found that increments in frequency produced higher MMN amplitudes compared to decrements for both methods of calculation. For duration deviance, the decrement MMN was absent in the traditional method, while the <b>decrement</b> <b>and</b> <b>increment</b> MMN did not differ for the same-stimulus method. These findings suggest that the brain processes frequency <b>increments</b> <b>and</b> <b>decrements</b> in different ways. The results also suggest the use of same-stimulus method for the calculation of duration MMN when long duration stimuli are used. 5 page(s...|$|R
5000|$|Thompson invented {{arithmetic}} assignment operators for B, using [...] to add y to x (in C {{the operator}} is written [...] ). B also introduced the <b>increment</b> <b>and</b> <b>decrement</b> operators ( [...] and [...] ). Their prefix or postfix position determines whether the value is taken {{before or after}} alteration of the operand. These innovations {{were not in the}} earliest versions of B. Some guess that they were created for the auto-increment and auto-decrement address modes of the DEC PDP-11. This is historically impossible as there was no PDP-11 at the time that B was developed.|$|E
5000|$|C++ {{implements}} iterators {{with the}} semantics of pointers in that language. In C++, a class can overload {{all of the}} pointer operations, so an iterator can be implemented that acts more or less like a pointer, complete with dereference, <b>increment,</b> <b>and</b> <b>decrement.</b> This has the advantage that C++ algorithms such as [...] can immediately be applied to plain old memory buffers, {{and that there is}} no new syntax to learn. However, it requires an [...] "end" [...] iterator to test for equality, rather than allowing an iterator to know that it has reached the end. In C++ language, we say that an iterator models the iterator concept.|$|E
50|$|The phone has a 1.5 inches LCD TFT/TFD color display. Its 860mAh {{removable}} Li-Ion battery gives {{a battery}} backup of 240 h maximum {{in standby mode}} and 3.5 h maximum in talktime mode. MicroUSB and a headset jack of 2.5 mm {{is supported by the}} device. The software feature BREW in the mobile allows external games and applications to be downloaded. Speaker-dependent voice dialling is also supported by the mobile. The phone also has volume keys in its side which makes it easy for volume <b>increment</b> <b>and</b> <b>decrement.</b> The input is through numeric keypad and Soft keys. It also has the feature of Predictive Text Input. The SAR head is 1.46 W/kg and that of body is 0.35 W/kg.|$|E
40|$|AbstractPrevious work [Vassilev, А., Mihaylova, M., Racheva, K., Zlatkova, M., & Anderson, R. S. (2003). Spatial {{summation}} of S-cone ON and OFF signals: Effects of retinal eccentricity. Vision Research, 43, 2875 – 2884; Vassilev, A., Zlatkova, M., Krumov, A., & Schaumberger, M. (2000). Spatial {{summation of}} blue-on yellow light <b>increments</b> <b>and</b> <b>decrements</b> in human vision. Vision Research, 40, 989 – 1000] {{has shown that}} spatial summation of brief S-cone selective stimuli depends on their polarity, increments or decrements, suggesting involvement of S-ON and OFF pathways, respectively. This assumption was tested in two experiments using a modified two-color threshold method of Stiles to selectively stimulate the S-cones. In the first experiment we measured detection threshold for small 100 ms S-cone selective <b>increments</b> <b>and</b> <b>decrements</b> presented within three types of temporal window, rectangular, ramp onset/rapid offset and rapid onset/ramp offset. The ramp-onset threshold was higher than the ramp-offset threshold regardless of stimulus sign. In the second experiment we measured reaction time (RT) with near-threshold stimuli spatially coincident with the background to avoid spatial contrast. RT distribution for S-cone selective 500 ms <b>increments</b> <b>and</b> <b>decrements</b> was unimodal <b>and</b> followed stimulus onset. An increase of stimulus duration to 1000 and 2000 ms resulted in the appearance of responses following stimulus offset. The results suggest that, for brief S-cone selective increments or decrements, the human visual system is more sensitive to stimulus onset than to stimulus offset. Only for longer stimuli is the offset important, probably due to slow adaptation at a postreceptoral level...|$|R
30|$|The {{position}} of all control levers {{of the driving}} simulator (windshield wipers, blinker, ignition key and light switch) is transmitted to the driving computer. All operational elements, steering wheel, accelerator pedal, brake pedal, gearshift lever and handbrake lever, provide nature-true force reactions. The gearshift functions like in the real car either as automatic or “soft tip” with <b>incrementing</b> <b>and</b> <b>decrementing</b> the six gears and with reverse gear.|$|R
50|$|One {{disadvantage}} {{of the call}} stack mechanism is the increased cost of a procedure call and its matching return. The extra cost includes <b>incrementing</b> <b>and</b> <b>decrementing</b> the stack pointer (and, in some architectures, checking for stack overflow), and accessing the local variables and parameters by frame-relative addresses, instead of absolute addresses. The cost may be realized in increased execution time, or increased processor complexity, or both.|$|R
5000|$|A common {{strategy}} in CRDT development is to combine multiple CRDTs {{to make a}} more complex CRDT. In this case, two G-Counters are combined to create a data type supporting both <b>increment</b> <b>and</b> <b>decrement</b> operations. The [...] "P" [...] G-Counter counts increments; and the [...] "N" [...] G-Counter counts decrements. The value of the PN-Counter {{is the value of}} the P counter minus the value of the N counter. Merge is handled by letting the merged P counter be the merge of the two P G-Counters, and similarly for N counters. Note that the CRDT's internal state must increase monotonically, even though its external state as exposed through query can return to previous values.|$|E
50|$|The role of {{the cache}} memory, {{independent}} of the main memory, was to hold the top of an evaluation stack for a procedure oriented language. The cache had a two cycle latency after which it could deliver one word per cycle and was divided {{into a number of}} pages each with 512 32-bit words with parity protection. The pages were grouped in pairs with an architectural maximum of 16 pairs. The original machine implemented two pairs. The second member of each pair was typically used as additional fast registers and scratch storage without affecting the stack page. The lower nine bits of the CPU register, which addressed the cache, was implemented with counters and allowed <b>increment</b> <b>and</b> <b>decrement</b> operations (push and pop) as wells as random access.|$|E
5000|$|The {{following}} C code fragment {{illustrates the}} difference between the pre and post <b>increment</b> <b>and</b> <b>decrement</b> operators:int x;int y;// Increment operatorsx = 1;y = ++x; // x is now 2, y is also 2y = x++; // x is now 3, y is 2// Decrement operatorsx = 3;y = x--; // x is now 2, y is 3y = --x; // x is now 1, y is also 1 The post-increment operator is commonly used with array subscripts. For example:// Sum the elements of an arrayfloat sum_elements(float arr, int n){ float sum = 0.0; int i = 0; while (i < n) sum += arri++; // Post-increment of i, which steps // through n elements of the array return sum;} ...|$|E
50|$|Riak 1.4 {{features}} PN-Counters, {{which is}} the database's first distributed data type, which are eventually consistent <b>and</b> can be <b>incremented</b> <b>and</b> <b>decremented</b> on any node across the cluster. It has a compact binary data format that reduces storage overheads connected with small objects or large bucket names. Riak CS 1.4 provides compatibility with OpenStack, OpenStack Object Storage (Swift) and CEPH object stores with increased scalability.|$|R
40|$|Motion-Induced Blindness (MIB) is the perceived, {{spontaneous}} {{disappearance of}} a salient target {{when it is}} viewed {{in the presence of}} a moving mask, and is believed to be controlled by extrastriate area 5 (Donner et al., 2008). The ON and OFF pathways in the human visual system are responsible for the detection of <b>increments</b> <b>and</b> <b>decrements</b> of light, respectively. The OFF pathway is more sensitive to decrements than the ON pathway is to increments before the middle layers of V 1. However, after this point, the sensitivities are comparable in strength. Past experiments in this lab have shown that the ON and OFF pathways retain some differences past V 1. The purpose of this study was to further examine the asymmetries between the ON and OFF cell pathways by measuring the perceived MIB under different increment/decrement conditions. This was done by varying the luminance of the mask <b>and</b> target between <b>increments</b> <b>and</b> <b>decrements,</b> with 6 different possible combinations, and measuring the perceived disappearance of the target. Results have shown that decrement targets are harder to mask than increment targets...|$|R
50|$|In {{terms of}} throughput, tracing {{by its nature}} {{requires}} some implicit runtime overhead, though {{in some cases the}} amortized cost can be extremely low, in some cases even lower than one instruction per allocation or collection, outperforming stack allocation. Manual memory management requires overhead due to explicit freeing of memory, and reference counting has overhead from <b>incrementing</b> <b>and</b> <b>decrementing</b> reference counts, <b>and</b> checking if the count has overflowed or dropped to zero.|$|R
