599|71|Public
25|$|The {{meaning of}} {{negation}} in logic programs {{is closely related}} to two theories of nonmonotonic reasoning— autoepistemic logic and <b>default</b> <b>logic.</b> The discovery of these relationships was a key step towards the invention of the stable model semantics.|$|E
2500|$|N. Bidoit and C. Froidevaux [...] Minimalism subsumes <b>default</b> <b>logic</b> and circumscription. In: Proceedings of LICS-87, pages 89–97.|$|E
2500|$|... can be {{understood}} as the default that allows us to derive [...] from [...] assuming that [...] is consistent. The stable model semantics uses the same idea, but it does not explicitly refer to <b>default</b> <b>logic.</b>|$|E
5000|$|Three systems {{implementing}} <b>default</b> <b>logics</b> are DeReS,XRay andGADeL ...|$|R
40|$|In this article, {{we study}} {{translations}} between variants of <b>defaults</b> <b>logics</b> {{such that the}} extensions of the theories that are the input and {{the output of the}} translation are in a bijective correspondence. We assume that a translation can introduce new variables and that the result of translating a theory can either be produced in time polynomial {{in the size of the}} theory or its output is polynomial in that size; we however restrict to the case in which the original theory has extensions. This study fills a gap between two previous pieces of work, one studying bijective translations among restrictions of <b>default</b> <b>logics,</b> and the other one studying non-bijective translations between <b>default</b> <b>logics</b> variants. ...|$|R
40|$|Abstract. <b>Default</b> <b>logics</b> {{represent}} an important {{class of the}} nonmonotonic formalisms. Using simple by powerful inference rules, called <b>defaults,</b> these <b>logic</b> systems model reasoning patterns of the form ”in the absence of information to the contrary of [...] . ”, and thus formalize the default reasoning, a special type of nonmonotonic reasoning. In this paper we propose an automated system, called DARR, with two components: a propositional theorem prover and a theorem prover for constrained and rational propositional <b>default</b> <b>logics.</b> A modified version of semantic tableaux method is used to implement the propositional prover. Also, this theorem proving method is adapted for computing extensions because one of its purpose is to produce models, and extensions are models of the world described by default theories. 1...|$|R
2500|$|In <b>default</b> <b>logic,</b> a default {{is similar}} to an {{inference}} rule, except that it includes, besides its premises and conclusion, a list of formulas called justifications. A default {{can be used to}} derive its conclusion under the assumption that its justifications are consistent with what is currently believed. Nicole Bidoit and Christine Froidevaux [...] proposed to treat negated atoms in the bodies of rules as justifications. For instance, the rule ...|$|E
5000|$|... propositional <b>default</b> <b>logic</b> {{restricted}} to seminormal theories; ...|$|E
5000|$|Disambiguation {{based on}} {{operational}} semantics of <b>default</b> <b>logic.</b>|$|E
5000|$|U. Junker and K. Konolige (1990). Computing the {{extensions}} of autoepistemic and <b>default</b> <b>logics</b> with a truth maintenance system. In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI'90), pages 278-283. MIT Press.|$|R
40|$|Abstract. Unsatisfiable {{concepts}} {{are a major}} cause for inconsistencies in Description Logics knowledge bases. Popular methods for repairing such concepts aim to remove or rewrite axioms to resolve the conflict by the original logics used. Under certain conditions, however, the structure and intention of the original axioms must be preserved in the knowledge base. This, in turn, requires changing the underlying logics for repair. In this paper, we show how Probabilistic Description Logics, a variant of Reiter’s <b>default</b> <b>logics</b> with Lehmann’s Lexicographical Entailment, {{can be used to}} resolve conflicts fully-automatically and receive a consistent knowledge base from which inferences can be drawn again. Key words: <b>default</b> <b>logics,</b> unsatisfiability, justifications, TBox repair...|$|R
40|$|In {{this paper}} we {{consider}} constrained and rational <b>default</b> <b>logics</b> We provide two characterizations of constrained extensions One {{of them is}} used to derive complexity results for decision problems involving constrained extensions In particular, we show {{that the problem of}} membership of a formula in at least one (in all) constrained extension(s) of a default theory is Ef-complete (Ilf-complete) We establish the relationship between constrained and rational <b>default</b> <b>logics</b> We prove that rational ex tensions determine constrained extensions and that for seminormal default theories there is A one-to-one correspondence between these objects We also show that the definition of a constrained extension can be extended to cover the case of default theories which may contain justification-free defaults...|$|R
5000|$|The {{computational}} {{complexity of}} the following problems about <b>default</b> <b>logic</b> is known: ...|$|E
5000|$|The translatability between propositional <b>default</b> <b>logic</b> andthe {{following}} logics {{have been}} studied: ...|$|E
5000|$|Faithful : this {{condition}} {{only makes sense}} when translating between two variants of <b>default</b> <b>logic</b> or between <b>default</b> <b>logic</b> and a logic in which a concept similar to extension exists, e.g., models in modal logic; a translation is faithful if there exists a mapping (typically, a bijection) between the extensions (or models) of the original and translated theories; ...|$|E
25|$|<b>Default</b> <b>logics,</b> non-monotonic logics and {{circumscription}} are {{forms of}} logic {{designed to help}} with default reasoning and the qualification problem. Several extensions of logic {{have been designed to}} handle specific domains of knowledge, such as: description logics; situation calculus, event calculus and fluent calculus (for representing events and time); causal calculus; belief calculus; and modal logics.|$|R
40|$|We {{present a}} {{spectrum}} of <b>default</b> <b>logics,</b> using powerdomains to encode default constraints. The resulting non-monotonic entailment relations all satisfy the law of reasoning by cases. This result {{is a consequence of}} two general theorems valid for any Scott domain: the Dichotomy Theorem and the Extension Splitting Theorem. We briefly indicate that for propositional logic, the complexity of entailment is complete for co-NP(3), 1 Introduction 1. 1 Synopsis This paper is concerned with using Scott's domain theory to generalize and improve the kind of default reasoning introduced by Reiter [11]. We can define a new class of <b>default</b> <b>logics,</b> each of which is totally faithful to Reiter's ideas, and also has much better semantic properties. The key is to integrate defaults with the model theory of the logic, instead of keeping them as pseudo-deductive rules. To do this adequately, we have to keep track of disjunctions model-theoretically. This entails using the Smyth powerdomain to define def [...] ...|$|R
40|$|We apply logic program {{development}} technology to define abstract proof procedures, {{in the form}} of logic programs, for computing the admissibility semantics for default reasoning proposed in [2]. The proof procedures are derived from a formal specification. The derivation guarantees the soundness of the proof procedures. The completeness of the proof procedures is shown by employing a technique of symbolic execution of logic programs to compute (an instance of) a relation implied by the specification. 1 Introduction In [2], we have shown that many <b>default</b> <b>logics</b> [13, 19, 14, 15] can be understood as special cases of a single abstract framework, based upon an abductive interpretation of the semantics of logic programming [7, 8] and its abstractions [4, 5, 1, 11], and extending Theorist [18]. Moreover, we have proposed a new semantics for <b>default</b> <b>logics,</b> more liberal than their standard semantics and generalising the admissibility semantics for logic programming [4], equivalent to the [...] ...|$|R
50|$|<b>Default</b> <b>logic</b> is a {{non-monotonic logic}} {{proposed}} by Raymond Reiter to formalize reasoning with default assumptions.|$|E
50|$|The {{following}} {{variants of}} <b>default</b> <b>logic</b> {{differ from the}} original one on both syntax and semantics.|$|E
50|$|The {{following}} alternative inference {{rules for}} <b>default</b> <b>logic</b> are {{all based on}} the same syntax as the original system.|$|E
40|$|Abstract. Explicitly {{representing}} aspect interactions {{is vital}} {{so that they}} can be shared and used in the course of system evolution. As a consequence, guidance can be given to the software developer and automated support for handling interactions becomes possible. In this paper, we propose to use <b>default</b> <b>logics</b> for modeling context-dependent aspect interference. We motivate and illustrate our work by an example interference from the domotica world...|$|R
50|$|Proof-theoretic {{formalization}} of a {{non-monotonic logic}} begins with adoption of certain non-monotonic rules of inference, and then prescribes {{contexts in which}} these non-monotonic rules may be applied in admissible deductions. This typically is accomplished by means of fixed-point equations that relate the sets of premises and the sets of their non-monotonic conclusions. <b>Defaults</b> <b>logics</b> and autoepistemic logic {{are the most common}} examples of non-monotonic logics that have been formalized that way.|$|R
40|$|Plausibility {{structures}} for default reasoning Abstract. Friedman and Halpern have introduced the inference by plausibility structures, which provides semantics for various <b>default</b> <b>logics.</b> This is a generalization of known inferences, {{such as those}} based on expectations, or on possibilistic logic. We argue that a slightly different inference by plausibility would be more appropriate for default reasoning. It would still be appropriate for all the <b>default</b> <b>logics</b> considered by Friedman and Halpern. Significant cases, such as subsets of normal defaults with multiple extensions, or a formalism extending circumscription to the cases where (AND) is falsified, can be translated into the new formalism only. In order to prove our results, we complete {{the list of the}} reasoning properties for the (two versions of the) inference by plausibility. Since these properties describe the behavior of a given inference in an intuitive and non technical way, this list is important for any potential user. Moreover, it happens that considering these properties only, without going into the technicalities of the plausibility approach, is enough to describe the main results given here. ...|$|R
5000|$|The {{counterpart}} of the <b>default</b> <b>logic</b> solution {{in the language}} of answer set programming is a rule with strong negation: ...|$|E
5000|$|Rational: {{similar to}} {{constrained}} <b>default</b> <b>logic,</b> but {{the consequence of}} the default to add is not considered in the consistency check; ...|$|E
5000|$|... "An {{implementation}} of Statistical <b>Default</b> <b>Logic</b> (with Carlos Damasio), in Logics in Artificial Intelligence (JELIA 2004 Proceedings), J Alferes and J. Leite (eds.), LNCS Series, 121-33, 2004.|$|E
40|$|We {{investigate}} {{the complexity of}} reasoning {{with a number of}} limited <b>default</b> <b>logics.</b> Surprising negative results (the high complexity of simple three literal default rules) as well as positive results (a fast algorithm for skeptical reasoning with binary defaults) are reported, and sources of complexity are discussed. These results impact on work on defeasible inheritance hierarchies as well as default reasoning in general. 1 Introduction It has been suggested that some kind of default inference can be used to simplify and speed commonsense reasoning. Researchers have appealed to <b>default</b> <b>logics</b> as {{a solution to the problem}} of generating and reasoning with large numbers of &quot;frame axioms&quot;; as a way of simplifying complex probabilistic calculations; and recently as a way of &quot;vivifying &quot; (filling out) an incomplete knowledge base, thus suppressing the complexities of reasoning with uncertainty [10, 11]. While current formal theories of default inference are computationally much worse than ordinary logic, it has been tacitly assumed that this additional complexity arises from their use of consistency tests. Our interest in fast, special purpose inference mechanisms led us to investigate very simple propositional, disjunction-free systems of default reasoning, where consistency checking is trivial. Here, we thought, default reasoning should shine...|$|R
40|$|International audienceIn this paper, we extend Simple Conceptual Graphs with Reiter's default rules. The {{motivation}} for this extension {{came from the}} type of reasonings involved in an agronomy application, namely the simulation of food processing. Our contribution is many fold: rst, the expressivity of this new language corresponds to our modeling purposes. Second, we provide an effective characterization of sound and complete reasonings in this language. Third, we identify a decidable subclass of Reiter's <b>default</b> <b>logics.</b> Last we identify our language as a superset of SREC-, and provide the lacking semantics for the latter language...|$|R
40|$|Many {{variants}} of <b>default</b> <b>logics</b> exist. Two {{of the main}} differences among them arise from the choice between local and global consistency, and the choice {{of whether or not}} to accept maximally successful sets of defaults. In this paper, we characterize theories that do not depend at all on what makes the semantics different, that is, theories for which these two choices do not matter. A result that is proved for such theories holds not only for all the considered semantics, but also for every other semantics that differs from them on the two choices...|$|R
5000|$|Many {{fundamental}} logical formalisms {{are essential}} to section I.2 on artificial intelligence, for example modal logic and <b>default</b> <b>logic</b> in Knowledge representation formalisms and methods, Horn clauses in logic programming, and description logic.|$|E
5000|$|Disjunctive <b>default</b> <b>logic</b> : the {{consequence}} of a default {{is a set of}} formulae instead of a single formula. Whenever the default is applied, at least one of its consequences is nondeterministically chosen and made true.|$|E
5000|$|... can be {{understood}} as the default that allows us to derive [...] from [...] assuming that [...] is consistent. The stable model semantics uses the same idea, but it does not explicitly refer to <b>default</b> <b>logic.</b>|$|E
40|$|Abstract. <b>Default</b> <b>logics</b> {{represent}} {{a simple but}} a powerful class of nonmonotonic formalisms. The main computational problem specific to these logical systems is a search problem: finding all the extensions (sets of nonmonotonic theorems- beliefs) of a default theory. GADEL is an automated system based on a heuristic approach of the classical default extension computing problem and applies the principles of genetic algorithms to solve the problem. The {{purpose of this paper}} is to extend this heuristic approach for computing all type of default extensions: classical, justified, constrained and rational. 1...|$|R
40|$|In {{the past}} we {{developed}} a semantics for a restricted annotated logic language for inheritance reasoning. Here we generalize it to annotated Horn logic programs. We first provide a formal account of the language, describe its semantics, and provide an interpreter written in Prolog for it. We then investigate its relationship to Belnap 2 ̆ 7 s 4 -valued logic, Gelfond and Lifschitz 2 ̆ 7 s semantics for logic programs with negation, Brewka 2 ̆ 7 s prioritized <b>default</b> <b>logics</b> and other annotated logics due to Kifer et al...|$|R
40|$|Abstract. Agents {{working in}} an {{environment}} with incomplete information may need not only knowledge, but also beliefs to supplement their information. <b>Default</b> <b>Logics</b> have been frequently used to represent beliefs. Since inconsistent beliefs give rise to different extensions (scenarios), priorities are introduced to establish a preference among scenarios. We present a hybrid framework in which beliefs are represented by both monotonic and non-monotonic sets of clauses, avoiding thus the need for introducing priorities. Finally we give a glimpse of further work in process and comment briefly {{on the possibility of}} updating the database with new information. ...|$|R
