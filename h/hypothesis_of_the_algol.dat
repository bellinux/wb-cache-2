0|10000|Public
5000|$|As {{its name}} suggests, S-algol {{is a member}} <b>of</b> <b>the</b> <b>ALGOL</b> family <b>of</b> {{programming}} languages. Morrison identifies five characteristics <b>of</b> <b>the</b> <b>ALGOL</b> family: ...|$|R
5000|$|Peter Naur: [...] "As editor <b>of</b> <b>the</b> <b>ALGOL</b> Bulletin I {{was drawn}} into <b>the</b> {{international}} discussions <b>of</b> <b>the</b> language and {{was selected to}} be member <b>of</b> <b>the</b> European language design group in November 1959. In this capacity I was <b>the</b> editor <b>of</b> <b>the</b> <b>ALGOL</b> 60 report, produced as <b>the</b> result <b>of</b> <b>the</b> <b>ALGOL</b> 60 meeting in Paris in January 1960." ...|$|R
2500|$|<b>The</b> form <b>of</b> <b>the</b> titles <b>of</b> <b>the</b> {{standards}} documents since R3RS, [...] "Revisedn Report on the Algorithmic Language Scheme", is {{a reference}} to <b>the</b> title <b>of</b> <b>the</b> <b>ALGOL</b> 60 standard document, [...] "Revised Report on <b>the</b> Algorithmic Language <b>Algol</b> 60," [...] <b>The</b> Summary page <b>of</b> R3RS is closely modeled on <b>the</b> Summary page <b>of</b> <b>the</b> <b>ALGOL</b> 60 Report.|$|R
50|$|FLACC is an {{implementation}} <b>of</b> <b>the</b> <b>ALGOL</b> 68 programming language.|$|R
5000|$|ALGOL 60 {{and some}} other members <b>of</b> <b>the</b> <b>ALGOL</b> family allow [...] as an expression: ...|$|R
50|$|Dart is a {{descendant}} <b>of</b> <b>the</b> <b>ALGOL</b> language family, alongside C, Java, C#, JavaScript, and others.|$|R
5000|$|January 2010 with Computer Conservation Society, <b>The</b> 50th Anniversary <b>of</b> <b>the</b> {{publication}} <b>of</b> <b>the</b> <b>Algol</b> 60 Report ...|$|R
50|$|<b>The</b> <b>ALGOL</b> 68 to C {{translator}} {{written by}} Praxis for the ELLA system contains most <b>of</b> <b>the</b> <b>ALGOL</b> 68RS compiler. <b>The</b> notable {{exception is the}} code for handling formats.|$|R
5000|$|A copy <b>of</b> <b>the</b> <b>ALGOL</b> 68-R compiler, runnable under David Holdsworth's George 3 emulator, is {{available}} at http://sw.ccs.bcs.org/CCs/g3/index.html ...|$|R
5000|$|In <b>the</b> context <b>of</b> <b>the</b> <b>ALGOL</b> 68 {{programming}} language, {{the input}} and output facilities are collectively referred to as transput. <b>The</b> <b>ALGOL</b> 68 transput library recognizes the following standard files/devices: , , [...] and [...]|$|R
50|$|IFIP WG 2.1 {{was formed}} {{as the body}} {{responsible}} for the continued support and maintenance <b>of</b> <b>the</b> <b>ALGOL</b> 60 programming language.The Modified Report on <b>the</b> Algorithmic Language <b>ALGOL</b> 60 and <b>the</b> <b>ALGOL</b> 68 programming language were produced by WG 2.1.|$|R
5000|$|In a 2009 talk, Tony Hoare traced <b>the</b> {{invention}} <b>of</b> <b>the</b> {{null pointer}} to his design <b>of</b> <b>the</b> <b>Algol</b> W language {{and called it}} a [...] "mistake": ...|$|R
50|$|Dartmouth ALGOL 30 was an 1960s-era implementation, firstly <b>of</b> <b>the</b> <b>ALGOL</b> 58 {{programming}} language, then <b>of</b> <b>ALGOL</b> 60 for <b>the</b> LGP-30 at Dartmouth College, {{hence the}} name.|$|R
50|$|The Navy Electronics Laboratory International ALGOL Compiler or NELIAC is a dialect and {{compiler}} implementation <b>of</b> <b>the</b> <b>ALGOL</b> 58 {{programming language}} {{developed by the}} Naval Electronics Laboratory in 1958.|$|R
40|$|This {{publication}} {{provides the}} programmer {{with the information}} needed to use the IBM System/ 360 Operating System <b>ALGOL</b> compiler for <b>the</b> solution <b>of</b> scientific and technical problems. ALGOL has been introduced {{in a number of}} univerSities and technical institutes for communication and education purposes. To assist that particular area, <b>the</b> OS <b>ALGOL</b> Compiler is intended to provide a bridge to System/ 360 for existing ALGOL,users. A basic lmowledge <b>of</b> <b>the</b> <b>ALGOL</b> language is assumed. This publication consists of two main parts. The first {section 1 to 5) describes <b>the</b> elements <b>of</b> <b>the</b> <b>ALGOL</b> language, <b>the</b> second (section 6) describes the input/output procedures to be called when using ALGOL...|$|R
40|$|The MTS Manual is {{a series}} of volumes that {{describe}} in detail the facilities provided by the Michigan Terminal System. This manual describes <b>the</b> <b>Algol</b> W language, <b>the</b> <b>Algol</b> W compiler, and aspects of MTS relevant to <b>the</b> use <b>of</b> <b>the</b> <b>Algol</b> W compiler. Algol W is a general-purpose programming language which is a development of Algol 60...|$|R
5000|$|Atlas Autocode (AA) was a {{programming}} language developed around 1965 at Manchester University. A variant <b>of</b> <b>the</b> <b>ALGOL</b> {{programming language}}, it was developed by Tony Brooker and Derrick Morris for the Atlas Computer.|$|R
50|$|ABC ALGOL is an {{extension}} <b>of</b> <b>the</b> <b>Algol</b> 60 programming language with arbitrary data structures and user-defined operators, targeted for symbolic mathematics. Despite its advances, it was never used as widely as Algol proper.|$|R
5000|$|He {{was active}} in <b>the</b> {{definition}} <b>of</b> <b>the</b> <b>ALGOL</b> programming language and cited by Tony Hoare as one <b>of</b> <b>the</b> people who taught him ALGOL 60 and hence facilitated his expression of powerful recursive algorithms: ...|$|R
50|$|She {{was also}} a pioneer in making {{theoretical}} hydrodynamic simulations <b>of</b> <b>the</b> <b>Algol</b> binary stars, where the gas flows from one star and hits <b>the</b> surface <b>of</b> <b>the</b> other one. Additionally, she developed distance correlation methods to discover associations in large astrophysical databases.|$|R
50|$|NSVS 14256825, {{also known}} as V1828 Aquilae, is an eclipsing binary system (<b>of</b> <b>the</b> <b>Algol</b> type) in <b>the</b> {{constellation}} <b>of</b> Aquila. <b>The</b> system comprises an eclipsing subdwarf OB star and red dwarf star. The two stars orbit each other every 2.648976 hours.|$|R
5000|$|S-algol was {{designed}} to differ from previous members <b>of</b> <b>the</b> <b>ALGOL</b> family by being designed according to semantic principles to provide power through simplicity, and simplicity through greater generality. (See Orthogonal.) Morrison describes three semantic principles that guided <b>the</b> design <b>of</b> S-algol: ...|$|R
5000|$|The man or boy {{test was}} {{proposed}} by computer scientist Donald Knuth {{as a means}} of evaluating implementations <b>of</b> <b>the</b> <b>ALGOL</b> 60 programming language. <b>The</b> aim <b>of</b> <b>the</b> test was to distinguish compilers that correctly implemented [...] "recursion and non-local references" [...] from those that did not.|$|R
25|$|A {{conditional}} {{using an}} if-then-else syntax {{was invented by}} McCarthy in a Fortran context. He proposed its inclusion in ALGOL, {{but it was not}} made part <b>of</b> <b>the</b> <b>Algol</b> 58 specification. For Lisp, McCarthy used the more general cond-structure. Algol 60 took up if-then-else and popularized it.|$|R
40|$|We present first {{results from}} long {{baseline}} optical and radio interferometry observations <b>of</b> <b>the</b> <b>Algol</b> system. We probe the close binary in these different regimes with comparable resolution (milliarcsecond scales) with the CHARA and the e-EVN arrays∗. From planets to dark energy: the modern radio univers...|$|R
50|$|A {{conditional}} {{using an}} if-then-else syntax {{was invented by}} McCarthy in a Fortran context. He proposed its inclusion in ALGOL, {{but it was not}} made part <b>of</b> <b>the</b> <b>Algol</b> 58 specification. For Lisp, McCarthy used the more general cond-structure. Algol 60 took up if-then-else and popularized it.|$|R
50|$|<b>The</b> {{development}} <b>of</b> <b>the</b> <b>ALGOL</b> - Pascal - Modula-2 - Oberon - Component Pascal language {{family is}} marked by a reduction in <b>the</b> complexity <b>of</b> <b>the</b> language syntax. The entire Oberon-2 language is described (Mössenböck & Wirth, 1993) using only 33 grammatical productions in the extended Backus-Naur form, as shown below.|$|R
50|$|In 1958, {{disputes}} between European and American delegates over <b>the</b> correct representation <b>of</b> <b>the</b> decimal mark nearly stalled <b>the</b> development <b>of</b> <b>the</b> <b>ALGOL</b> computer programming language. ALGOL ended up allowing different decimal marks, but most computer languages and standard data formats (e.g. C, Java, Fortran, Cascading Style Sheets (CSS)) specify a dot.|$|R
5000|$|Racket {{comes with}} a {{complete}} implementation <b>of</b> <b>the</b> <b>ALGOL</b> 60 language. #lang algol60begin integer procedure SIGMA(x, i, n); value n; integer x, i, n; begin integer sum; sum := 0; for i := 1 step 1 until n do sum := sum + x; SIGMA := sum; end; integer q; printnln(SIGMA(q*2-1, q, 7));end ...|$|R
5000|$|Peter Naur (25 October 1928 - 3 January 2016) was a Danish {{computer}} science pioneer and Turing award winner. His last name is the [...] "N" [...] in the BNF notation (Backus-Naur form), used in <b>the</b> description <b>of</b> <b>the</b> syntax for most programming languages. He contributed to <b>the</b> creation <b>of</b> <b>the</b> <b>ALGOL</b> 60 programming language.|$|R
50|$|<b>The</b> authors <b>of</b> <b>the</b> <b>ALGOL</b> 60 Report met in Rome, Italy in April 1962 {{to resolve}} most <b>of</b> <b>the</b> ambiguities and errors {{known at the}} time, {{resulting}} in the Revised Report on <b>the</b> Algorithmic Language <b>ALGOL</b> 60. During that meeting, the authors decided to institutionalize {{the responsibility for the}} continued support and maintenance of ALGOL 60 by transferring it to the young international IFIP organization.|$|R
5000|$|The [...] "⏨" [...] {{character}} was also part <b>of</b> <b>the</b> <b>ALGOL</b> programming language specifications and {{was incorporated into}} the then German character encoding standard ALCOR. GOST 10859 also included numerous other non-ASCII characters/symbols useful to ALGOL programmers, e.g.: ∨, ∧, ⊃, ≡, ¬, ≠, ↑, ↓, &times;, ÷, ≤, ≥, ° & ∅. c.f. ALGOL operatorshttp://www.masswerk.at/algol60/report.htm.|$|R
5000|$|Chaz and {{his allies}} connect the world's {{troubles}} to a cult leader called Zio, [...] "The Black Magician," [...] whose aims appear to be total annihilation, not only of Motavia, but <b>of</b> <b>the</b> whole <b>Algol</b> solar system. <b>The</b> heroes stop Zio in order to restore the computer systems maintaining Motavia. However, it soon becomes clear that Zio is merely the vanguard to a much larger enemy, long buried in the past. <b>The</b> secrets <b>of</b> <b>the</b> <b>Algol</b> star system are revealed as Chaz and company discover both <b>the</b> nature <b>of</b> <b>the</b> threat to their worlds {{as well as the}} safeguards placed in a time long forgotten.|$|R
50|$|The {{following}} code {{samples are}} <b>ALGOL</b> 68 versions <b>of</b> <b>the</b> above <b>ALGOL</b> 60 code samples.|$|R
40|$|Attention {{is given}} to semidetached {{binaries}} <b>of</b> <b>the</b> <b>Algol</b> type and to related interacting systems, such as Beta Lyrae and the W Serpentis stars. A brief description is given <b>of</b> observational problems. <b>The</b> basic properties <b>of</b> <b>the</b> <b>Algol</b> variables are satisfactorily explained by means of evolutionary models that assume considerable mass transfer between the components. It is pointed out that ultraviolet spectra obtained with the IUE satellite corroborate {{the view that the}} present subgiant secondary component was initially the more massive star and that it has been stripped of a large fraction of its mass so that the deep layers affected by CNO processing are now denuded. It is believed that <b>the</b> present-day 'classical' <b>Algols</b> must have undergone a phase of rapid mass transfer in the past and that Beta Lyrae and the W Serpentis stars are probably closer to that stage than ordinary <b>Algols.</b> Around <b>the</b> accreting star a complex structure is formed, and an induced stellar wind may blow a large part <b>of</b> <b>the</b> transferred matter out <b>of</b> <b>the</b> system...|$|R
5000|$|Beta Lyrae {{systems are}} {{sometimes}} {{considered to be}} a subtype <b>of</b> <b>the</b> <b>Algol</b> variables; however, their light curves are different (<b>the</b> eclipses <b>of</b> <b>Algol</b> variables are much more sharply defined). On the other hand, beta Lyrae variables look a bit like W Ursae Majoris variables; however, the latter are in general yet closer binaries (so-called contact binaries), and their component stars are mostly lighter than the beta Lyrae system components (about [...] ).|$|R
