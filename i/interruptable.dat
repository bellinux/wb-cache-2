15|0|Public
40|$|The {{development}} of service robots has gained {{more and more}} attention over the last years. Advanced robots {{have to cope with}} many different situations and contingencies while executing concurrent and <b>interruptable</b> complex tasks. To manage the sheer variety of different execution variants the robot has to decide at run-time for the most appropriate behavior to execute. That requires task coordination mechanisms that provide the flexibility to adapt at run-time and allow to balance between alternatives. 1 Introduction, Motivation and Relate...|$|E
40|$|Research {{under this}} grant {{successfully}} developed and tested the <b>Interruptable</b> Control System (ICE). The best description of ICE {{is in the}} M. S. thesis of Jim Vezina, who was the primary designer and implementer of ICE. Vezina's thesis is included as the bulk of this report. To test the general usefulness and maintainability of the ICE System, the examples of the ICE system in action given in Vezina's thesis were extended. The extensions consisted of two components: debugging and rewriting the simulation of passive and active agents, both controlled and uncontrolled, and benchmarking more extensively the HES expert system concerned with monitoring sensors. The expert system was chosen because it demonstrates the ability of CLIPS...|$|E
40|$|Abstract. There are {{a number}} of {{challenges}} {{that need to be addressed}} when aligning large ontologies. Previous work has pointed out scal-ability and efficiency of matching techniques, matching with background knowledge, support for matcher selection, combination and tuning, and user involvement as major requirements. In this paper we address these challenges. Our first contribution is an ontology alignment framework that enables solutions to each of the challenges. This is achieved by introducing different kinds of <b>interruptable</b> sessions. The framework allows partial computations for generating mapping suggestions, partial validations of mapping suggestions and use of validation decisions in the (re-) computation of mapping suggestions and the recommendation of alignment strategies to use. Further, we describe an implemented system providing solutions to each of the challenges and show through experiments the advantages of our approach...|$|E
40|$|Abstract. PVM (the current version 3. 4) {{as well as}} many current MPI {{implementations}} {{force application}} programmers to use active polling (also known as busy waiting) in larger parallel programs. This serious problem is related to thread-unsafety of these communication libraries. While the MPI specification is very careful in this respect, the implementations are not. We present a new mechanism of <b>interruptable</b> blocking receive which makes PVM and MPI quasi-thread-safe. This mechanism does not require any modifications to the existing semantics of PVM or MPI (we only extend the interfaces with two new functions) and allows writing multi-threaded programs without active polling. Then we sketch how the interrupt mechanism can be hidden in the implementations of PVM and MPI, making both PVM and MPI completely threadsafe without active polling. Results of our experiments promise a significant speedup for all larger communication-intensive parallel applications...|$|E
40|$|This paper {{describes}} {{resource management}} in a massively parallel, distributed-memory {{implementation of a}} branch-and-bound method for mixed integer programming (MIP) problems. Our parallel branch-and-bound algorithm decomposes {{into a variety of}} interacting but largely asynchronous tasks. These tasks perform the algorithm's basic computations, maintain various kinds of global information, or attempt to balance workloads. The optimal amount of parallelism and data centralization varies from task to task. The organization of our application code is intended to accommodate this variability, while making flexible and full use of each CPU. In particular, each processor uses a proportional-share scheduling mechanism to maintain a balance between the fractions of time devoted to compute-intensive but <b>interruptable</b> tasks [...] - computing bounds to subproblems and heuristically searching for better feasible solutions. While described in the specific context of mixed integer programming, we expect th [...] ...|$|E
40|$|Many {{utilities}} {{have completed}} long-term planning studies and {{have shown that}} a load management program is cost effective. They are now actively implementing large-scale, system-wide programs such as demand subscription, <b>interruptable</b> rates, and time-of-day rates for industrial customers. Utilities are relying on analytical tools such as PERT/CPM, linear programming, and decision analysis to plan and administer the programs. Industrial users {{should be aware of}} the methods utilities are using to design these program since the results will directly affect the type of service and rates the industrial customers will be offered. This paper discusses the issues involved in implementing a load management program, presents some of the analytical tools being used by utilities, and suggests ways industrial customers can optimally respond to management programs. It is shown that industrial customers can use some of the same tools as those used by the utilities, to successfully incorporate load management into their operations...|$|E
40|$|Different {{approaches}} for speaker adaptive speech recognition in cars have been combined and compaired. For extraction of word boundaries for isolated word recognizing under variable levels of background noise and adaptive parameter estimation is described. The signal to niose ratio is improved by confining the frequency region to 920 - 6400 Hz excluding thus {{most of the}} energy of the disturbing noises. From spectral characteristics Bark-frequency and Bark-cepstral coefficients have been derived. Besides dynamic programming for isolated word recognition Hidden-Markov models are described and a neural classfier has been introduced. The classifier represents and adaptive condensed nearest neighbour network equipped with a redundancy elimination and an <b>interruptable</b> retraining mode for speech recognition. Efficiency of the established algorithms under real time conditions has been proved by a system prototype during several car tours. (WEN) SIGLEAvailable from TIB Hannover: RR 4652 (10) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
40|$|Computer Systems Laboratory, Stanford University, CA 94305, 1992. J. E. Smith and A. R. Pleszkun. "Implementation of precise {{interrupts}} in pipelined processors". In Procccdigs of the 12 t/ Itcratioal Symposium o Computer Architecture, pages 36 44, June 1985. G. S. Sohi and S. Vajapeyam. "Instruction issue logic for high-performance <b>interruptable</b> pipelined processors". In Procccditgs of the 14 t/ Ittcrtatiotal Symposium o Computer Architecture, pages 27 34, June 1987. R. M. Tomasulo. "an Efficient Algorithm for Exploiting Multiple Arithmetic Units". IBM Journal, 11 : 25 33, January 1967. "Operating System Concepts". [17] [15] [19] [20] [21] [22] [23] [24] [25] J. S. Kowalik, editor. "Parallel MIMD Computation: and its Applications". MIT Press, Cambrigde, 1985. 100 The HEP Supercomputer J. K. F. Lee and A. J. Smith. "Branch prediction {{strategies and}} branch target buffer design". IEEE Computer, 17 : 6 22, January 1984. D. Lenoski, J. Laudon, K. Gharachorloo, Anoop Gupta, and John H...|$|E
40|$|This paper {{addresses}} {{the problem of}} enabling a user of a process-centered SDE, hosted on a high-speed network, to continue working on a detached mobile workstation connected by a lower speed <b>interruptable</b> communications link. The focus of the paper is a process for determining whether and how to allow detachment. The process takes into account {{a broad range of}} factors, including the speed and reliability of the mobile link, the relative sizes and speeds of the mobile and networked workstations, the nature and state of the development process, and the importance of the detaching user. The paper presents a formal framework that allows us to specify the various factors, and an objective function that quantifies the inconvenience incurred by the detachment. The process uses the framework to determine which tools and resources to relocate when the user detaches from the network. A detailed example is used to illustrate this process. Keywords Process-centered SDEs, wireless, detachment, re [...] ...|$|E
40|$|AbstractIntegrating {{knowledge}} from multiple sources {{is an important}} aspect of automated reasoning systems. In {{the first part of this}} series of papers, we presented a uniform declarative framework, based on annotated logics, for amalgamating multiple knowledge bases when these knowledge bases (possibly) contain inconsistencies, uncertainties, and nonmonotonic modes of negation. We showed that annotated logics may be used, with some modifications, to mediate between different knowledge bases. The multiple knowledge bases are amalgamated by embedding the individual knowledge bases into a lattice. In this paper, we briefly describe an SLD-resolution-based proof procedure that is sound and complete w. r. t. our declarative semantics. We will then develop an OLDT-resolution-based query processing procedure, MULTI_OLDT, that satisfies two important properties: (1) efficient reuse of previous computations is achieved by maintaining a table—we describe the structure of this table, and show that table operations can be efficiently executed, and (2) approximate, <b>interruptable</b> query answering is achieved, i. e., it is possible to obtain an “intermediate, approximate” answer from the QPP by interrupting it at any point in time during its execution. The design of the MULTI_OLDT procedure will include the development of run-time algorithms to incrementally and efficiently update the table...|$|E
40|$|Integrating {{knowledge}} from multiple sources {{is an important}} aspect of automated reasoning systems. In {{the first part of this}} series of papers, we presented a uniform declarative framework, based on annotated logics, for amalgamating multiple knowledge bases when these knowledge bases (possibly) contain inconsistencies, uncertainties, and non-monotonic modes of negation. We showed that annotated logics may be used, with some modifications, to mediate between different knowledge bases. The multiple knowledge bases are amalgamated by embedding the individual knowledge bases into a lattice. In this paper, we briefly describe an SLD-resolution based proof procedure that is sound and complete w. r. t. our declarative semantics. We will then develop an OLDT -resolution based query processing procedure, MULTI-OLDT, that satisfies two important properties: (1) efficient reuse of previous computations is achieved by maintaining a table [...] we describe the structure of this table and show that table operations can be efficiently executed, and (2) approximate, <b>interruptable</b> query answering is achieved, i. e. it is possible to obtain an ``intermediate, approximate'' answer from the query processing procedure by interrupting it at any point in time during its execution. The design of the MULTI-OLDT procedure will include the development of run-time algorithms to incrementally and efficiently update the table. (Also cross-referenced as UMIACS-TR- 94 - 35...|$|E
40|$|VLIW {{architectures}} are well-suited {{for implementing}} application-specific programmable pro-cessors {{because of their}} great scalability and modularity. VLIW architectures take advantage of not only temporal parallelism found in RISC architectures but also spatial parallelism by using multiple functional units. However, the large instruction storage and bandwidth requirements have prevented VLIW architectures from being used in cost-sensitive systems. This thesis describes a VLIW DSP processor called UTDSP, which incorporates a novel and flexible instruction packing and fetching mechanism to reduce the code size and bandwidth prob-lems plaguing other VLIW architectures. With this scheme {{it is possible to}} actually achieve some code compression while attaining significant performance speedup over a traditional architecture. The UTDSP is flexible in that additional functional units with application-specific instructions can be easily added when required for performance with little impact on its compiler. The VLSI design and implementation of the UTDSP is presented. This implementation, consist-ing of five pipeline stages, is capable of executing seven instructions per cycle and provides zero-overhead hardware loops that are nestable and <b>interruptable.</b> A GUI-based assembly debugger and architecture simulator were implemented. The UTDSP adopts a synthesis-based design meth-odology and a novel hierarchical CAD flow that can significantly reduce its area. i To Hsiao-ching, Hsien-yuan, and Yu-liang i...|$|E
40|$|Experiments were {{conducted}} to investigate the role of attention in peripheral detection and discrimination. Advance spatial cues informed subjects about likely target positions; the task required to detect/discriminate plus localise a target briefly presented at cued or uncued locations, with accuracy {{as the dependent variable}} ("cost-benefit" analysis). Spatial cueing produced reliable advantages for cued over uncued locations, in single and in multiple element displays. However, costs plus benefits were less marked for single displays. Thus, advance knowledge of the likely target location enhances performance also when there are no competing stimuli present in the visual field. But costs plus benefits are smaller because single target onsets at uncued locations summon attention in the same "automatic" fashion as peripheral cues. Peripheral cues trigger a rapid facilitatory component (automatic), fading out within 300 msec after cue onset. Facilitation is then maintained by a less effective mechanism (controlled). Central cues initiate only this second component. Sustained, controlled, orienting in response to central cues is <b>interruptable</b> by automatic orienting in response to uninformative peripheral flashes. Interruption also occurs when irrelevant flashes compete with peripheral cues. However, interference is less marked for the early automatic than for the following controlled orienting component. Indication of a second position (four-location display) to be most likely resulted in a marked sensitivity gain for this position, relative to uncued locations in a single cue condition. That is, attention could be simultaneously shared between two cued positions. For a luminance detection task (single target), cued locations showed no advantage in sensitivity; but for letter detection tasks (target plus distractors), there was a marked priming effect. That is, letter detection is capacity limited, whereas luminance detection is not. In all tasks, decision criteria are largely preset according to a-priori target probabilities assigned to particular locations, i. e. more liberal for cued and more conservative for uncued locations...|$|E

