58|63|Public
5|$|The Baccano! light {{novels are}} written by Ryohgo Narita and {{illustrated}} by Katsumi Enami. Originally, Narita entered the first novel <b>into</b> <b>ASCII</b> Media Works' ninth Dengeki Novel Prize in 2002 and the novel won the Gold Prize, placing third. The first novel was released in February 2003 under ASCII Media Works' Dengeki Bunko imprint, and as of March 3, 2013, twenty novels have been released. In addition, one novel accompanied the first drama CD, released on March 31, 2006, and two gaiden novels were released in parts with DVDs of the anime adaption, released from October 24, 2007 to May 28, 2008.|$|E
25|$|Usenet was {{originally}} created to distribute text content encoded in the 7-bit ASCII character set. With {{the help of}} programs that encode 8-bit values <b>into</b> <b>ASCII,</b> it became practical to distribute binary files as content. Binary posts, due to their size and often-dubious copyright status, were in time restricted to specific newsgroups, {{making it easier for}} administrators to allow or disallow the traffic.|$|E
25|$|ASCII's {{revenue in}} its fiscal year ending March 1996 was 56billion yen, {{broken down by}} sectors: Publication (52.5% or 27.0billion yen), Game {{entertainment}} (27.8% or 14.3billion yen), Systems & semiconductors (10.8% or 6billion yen) and others. Despite its struggles to remain focused on its core businesses, the company continued to suffer from accumulated debts, until an arrangement was set up that CSK Corporation execute a major investment <b>into</b> <b>ASCII</b> in 1997.|$|E
2500|$|ASCII85Decode {{a filter}} {{used to put}} the stream <b>into</b> 7-bit <b>ASCII</b> ...|$|R
25|$|ITRANS: a {{transliteration}} scheme <b>into</b> 7-bit <b>ASCII</b> {{created by}} Avinash Chopde {{that used to}} be prevalent on Usenet.|$|R
50|$|Description: {{waits for}} the {{keyboard}} interrupt and reads a single character and converts the key value <b>into</b> an <b>ASCII</b> character. The character is not echoed to the console screen, it is simply read and stored into a register.|$|R
25|$|Accel World {{began as}} a light novel series written by Reki Kawahara and {{illustrated}} by HiMA. Originally, Kawahara entered the first novel in the series <b>into</b> <b>ASCII</b> Media Works' 15th Dengeki Novel Prize in 2008 and the novel won the Grand Prize. The first novel was published by ASCII Media Works on February 10, 2009 under their Dengeki Bunko imprint. As of June 2016, 20 volumes have been published. At their Japan Expo USA panel, Yen Press announced the rights to publish the light novels in English. The first volume was released on July 22, 2014.|$|E
50|$|AAlib is a {{software}} library which allows applications to automatically convert still and moving images <b>into</b> <b>ASCII</b> art.|$|E
50|$|The Harvard-Kyoto Convention is {{a system}} for transliterating Sanskrit and other {{languages}} that use the Devanāgarī script <b>into</b> <b>ASCII.</b> It is predominantly used informally in e-mail, and for electronic texts.|$|E
5000|$|... {{shifts the}} value of letters and numbers from the ASCII {{graphics}} range, down <b>into</b> the <b>ASCII</b> control characters. For example, CTRL-S is XOFF (stops many programs as they print to screen) CTRL-Q is XON (resume printing stopped by CTRL-S).|$|R
50|$|With MIME, {{a message}} and all its {{attachments}} are encapsulated in a single multipart message, with base64 encoding used to convert binary <b>into</b> 7-bit <b>ASCII</b> text - or on some modern mail servers, optionally full 8-bit support via the 8BITMIME extension.|$|R
5000|$|... libcaca is a {{software}} library that converts pixel information <b>into</b> colored <b>ASCII</b> art. It includes the library itself, and several programs including cacaview, an image viewer that works inside a terminal emulator, and img2txt, which can convert an image to other text-based format.|$|R
50|$|JavE (Java ASCII Versatile Editor) is a {{computer}} program that allows the user to create ASCII art. In the workspace, users can draw with their mouse {{and it will be}} converted <b>into</b> <b>ASCII.</b>|$|E
50|$|The BIOS in many {{personal}} computers stores {{the date and}} time in BCD because the MC6818 real-time clock chip used in the original IBM PC AT motherboard provided the time encoded in BCD. This form is easily converted <b>into</b> <b>ASCII</b> for display.|$|E
50|$|Printed output on a Teletype Model 33 ASR was {{controlled}} by a single pole relay. A subroutine would convert the LINC character codes <b>into</b> <b>ASCII</b> and use timing loops to toggle the relay on and off, generating the correct 8-bit output to control the Teletype printer.|$|E
5000|$|Some names {{may appear}} {{the same if}} {{simplified}} <b>into</b> a basic <b>ASCII</b> script, as for example on websites, but are different names: ...|$|R
50|$|Usenet and {{email message}} bodies were {{intended}} to contain only ASCII characters (RFC 822 or RFC 2822). Most competing encodings represent binary files by converting them <b>into</b> printable <b>ASCII</b> characters, because the range of printable ASCII characters is supported by most operating systems. However, since this reduces the available character set considerably, there is significant overhead (wasted bandwidth) over 8bit-byte networks. For example, in uuencode and Base64, three bytes of data are encoded <b>into</b> four printable <b>ASCII</b> characters, which equals four bytes, a 33% overhead (not including the overhead from headers). yEnc uses one character (one byte) to represent one byte of the file, with a few exceptions.|$|R
5000|$|In Esri grid data, {{the first}} six lines {{indicate}} the reference of the grid, followed by the values listed in [...] "English reading order" [...] (left-right and top-down). For example, consider a grid, shown to the left. This could be encoded <b>into</b> an <b>ASCII</b> grid file, that would look like: ...|$|R
50|$|Description: prints {{an array}} of {{characters}} or string onto the console window. The address of the first character is stored in R0 of the GPRs; each register holds two characters and the data is converted <b>into</b> <b>ASCII</b> before printing to the screen. Printing continues following {{the path of the}} string until the program finds consecutive data reading 0x0000.|$|E
50|$|ASCII art may {{be created}} from an {{existing}} digital image using an ASCII art converter, an online tool or a software application that automatically converts an image <b>into</b> <b>ASCII</b> art, using vector quantization. Typically, {{this is done}} by sampling the image down to grayscale with less than 8-bit precision, so that each value corresponds to different ASCII character.|$|E
50|$|Ro-Kyu-Bu! {{began as}} a light novel series written by Sagu Aoyama with {{illustrations}} by Tinkle. Originally, Aoyama entered the first novel in the series <b>into</b> <b>ASCII</b> Media Works' 15th Dengeki Novel Prize in 2008 and the novel won the Silver Prize. ASCII Media Works published 15 novels under their Dengeki Bunko imprint between February 10, 2009 and July 10, 2015.|$|E
5000|$|First an encoded data must be {{separated}} <b>into</b> plain <b>ASCII</b> text chunks (including +es {{followed by a}} dash) and nonempty Unicode blocks as mentioned in the description section. Once this is done, each Unicode block must be decoded with the following procedure (using {{the result of the}} encoding example above as our example) ...|$|R
40|$|Because of the {{convenience}} of a text-based format 3 D content is often published in form of a gzipped file that contains an ASCII description of the scene graph. While compressed image, audio, and video data is kept in separate binary files, polygon meshes and interpolators are usually included uncompressed <b>into</b> the <b>ASCII</b> description, {{as there is no}} widely-accepted standard for such data...|$|R
50|$|JPRS {{is also a}} {{participant}} in the internationalized domain names (IDN) effort, which seeks to allow non-ASCII characters to be used in domain names. JPRS supports Internationalizing Domain Names in Applications (IDNA) which is a system by which Japanese characters can be converted <b>into</b> an <b>ASCII</b> representation of those characters, allowing Japanese characters to be used in applications without the underlying DNS system being altered.|$|R
50|$|Usenet was {{originally}} created to distribute text content encoded in the 7-bit ASCII character set. With {{the help of}} programs that encode 8-bit values <b>into</b> <b>ASCII,</b> it became practical to distribute binary files as content. Binary posts, due to their size and often-dubious copyright status, were in time restricted to specific newsgroups, {{making it easier for}} administrators to allow or disallow the traffic.|$|E
5000|$|Since RFC 2822, {{conforming}} {{message header}} names and values should be ASCII characters; values that contain non-ASCII data {{should use the}} MIME encoded-word syntax (RFC 2047) instead of a literal string. This syntax uses a string of ASCII characters indicating both the original character encoding (the [...] "charset") and the content-transfer-encoding used to map the bytes of the charset <b>into</b> <b>ASCII</b> characters.|$|E
50|$|Another {{choice would}} be to replace each letter with its binary representation, {{transpose}} that, and then convert the new binary string into the corresponding ASCII characters. Looping the scrambling process on the binary string multiple times before changing it <b>into</b> <b>ASCII</b> characters would likely {{make it harder to}} break. Many modern block ciphers use more complex forms of transposition related to this simple idea.|$|E
5000|$|The Extended Speech Assessment Methods Phonetic Alphabet (X-SAMPA; [...] ) is {{a variant}} of SAMPA {{developed}} in 1995 by John C. Wells, professor of phonetics at the University of London. It is designed to unify the individual language SAMPA alphabets, and extend SAMPA to cover {{the entire range of}} characters in the International Phonetic Alphabet (IPA). The result is a SAMPA-inspired remapping of the IPA <b>into</b> 7-bit <b>ASCII.</b>|$|R
40|$|Here we {{describe}} {{a project that}} deals with license plate location in raster images. The algorithm takes a raster image as input, and yields {{the position of a}} plate in the image. After the position is determined, the algorithm can determine the locations of the license plate characters, which could be easily combined with an OCR algorithm to convert the license plate number <b>into</b> an <b>ASCII</b> string. 1...|$|R
40|$|Data Management System for Mobile Satellite Propagation" {{software}} package collection of FORTRAN programs and UNIX shell scripts {{designed to handle}} huge amounts of data resulting from mobile/satellite radio-propagation experiments. Data from experiments converted into standard and more useful forms. Software package contains program to convert binary format of data <b>into</b> standard <b>ASCII</b> format suitable for use with wide variety of computing-machine architectures. Written in either FORTRAN 77 or UNIX shell scripts...|$|R
50|$|ASCII's {{revenue in}} its fiscal year ending March 1996 was 56 billion yen, {{broken down by}} sectors: Publication (52.5% or 27.0 billion yen), Game {{entertainment}} (27.8% or 14.3 billion yen), Systems & semiconductors (10.8% or 6 billion yen) and others. Despite its struggles to remain focused on its core businesses, the company continued to suffer from accumulated debts, until an arrangement was set up that CSK Corporation execute a major investment <b>into</b> <b>ASCII</b> in 1997.|$|E
50|$|The {{digital signage}} system {{operated}} on an Amiga 2000 computer system running Response Television software from the Response Television Corporation of Iowa City, Iowa. Using a device {{similar to a}} modem, home viewers' touch tones were converted <b>into</b> <b>ASCII</b> data that the Amiga could use to call up specific screens. Screens were created on an Amiga 1200 system which served as a backup computer. Background music was provided by local public radio stations.|$|E
5000|$|Bob Bemer {{introduced}} the [...] "\" [...] character <b>into</b> <b>ASCII</b> on September 18, 1961, {{as the result}} of character frequency studies. In particular the \ was introduced so that the ALGOL boolean operators &and; (AND) and &or; (OR) could be composed in ASCII as [...] "/\" [...] and [...] "\/" [...] respectively. Both these operators were included in early versions of the C programming language supplied with Unix V6, Unix V7 and more currently BSD 2.11.|$|E
40|$|The paper {{presents}} the Neural Network based Bilingual OCR system which can read printed document images, written in two scripts of English and Kannada languages. Such systems are highly preferred in automation of multi-script, multi lingual document processing. The developed system includes document image pre-processor, dynamic feature extractor, neural network based script classifier, Kannada character recognition system and English character recognition system. Document image pre-processor, accepts the bilingual document image and performs grey to two tone conversion, segmentation into lines and words. Dynamic feature extractor extracts distinctive {{equal number of}} features from each separated word irrespective of size of the word. These features are accepted by probabilistic neural classifier and are sorted by script, Kannada and Roman. Developed Kannada character recognition system accepts these words and further segments each word into characters and maps the recognized characters <b>into</b> corresponding <b>ASCII</b> values of the chosen Kannada font. Similarly specifically developed English character recognition system, segments English words into characters and maps to corresponding ASCII value of the specific English font. Thus recognized English and Kannada characters are written <b>into</b> separate <b>ASCII</b> files language wise. The results are exciting and proved {{the effectiveness of the}} approach...|$|R
40|$|This paper {{describes}} the organisation of a database for human mitochondrial control-region sequences. The data are divided <b>into</b> three <b>ASCII</b> files that contain aligned sequences from the hypervariable region I (HVRI), from the hypervariable region II (HVRII), and the available {{information about the}} individuals, from whom the sequences stem. The current collection comprises 4079 HVRI and 969 HVRII sequences. From 728 individuals sequences of both HVRI and HVRII are available. For easy access, the collection is {{made available to the}} scientific community via World Wid...|$|R
50|$|String {{values are}} {{enclosed}} in 'and '' characters {{and may be}} pushed on the stack and stored in registers. The 'a' command will convert the low order byte of the numeric value <b>into</b> an <b>ASCII</b> character, or if {{the top of the}} stack is a string it will replace it with the first character of the string. There are no ways to build up strings or perform string manipulation other than executing it with the 'x' command, or printing it with the 'P' command.|$|R
