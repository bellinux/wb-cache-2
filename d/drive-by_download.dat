78|40|Public
25|$|HuntBar, aka WinTools or Adware.Websearch, was {{installed}} by an ActiveX <b>drive-by</b> <b>download</b> at affiliate Web sites, or by advertisements displayed by other spyware programs—an {{example of how}} spyware can install more spyware. These programs add toolbars to IE, track aggregate browsing behavior, redirect affiliate references, and display advertisements.|$|E
25|$|Download {{and execute}} {{is a type}} of remote shellcode that {{downloads}} and executes some form of malware on the target system. This type of shellcode does not spawn a shell, but rather instructs the machine to download a certain executable file off the network, save it to disk and execute it. Nowadays, it is commonly used in <b>drive-by</b> <b>download</b> attacks, where a victim visits a malicious webpage that in turn attempts to run such a download and execute shellcode in order to install software on the victim's machine. A variation of this type of shellcode downloads and loads a library. Advantages of this technique are that the code can be smaller, that it does not require the shellcode to spawn a new process on the target system, and that the shellcode does not need code to clean up the targeted process as this can be done by the library loaded into the process.|$|E
50|$|In April 2014, the {{discovery}} of a sophisticated <b>Drive-by</b> <b>download</b> attacks, revealed how <b>drive-by</b> <b>download</b> attacks are used to target specific website visitors after their authentication on a compromised web resource.|$|E
40|$|As the web {{continues}} to play an ever increasing role in information exchange, so too is it becoming the prevailing platform for infecting vulnerable hosts. In this paper, we provide a detailed study of the pervasiveness of so-called <b>drive-by</b> <b>downloads</b> on the Internet. <b>Drive-by</b> <b>downloads</b> are caused by URLs that attempt to exploit their visitors and cause malware to be installed and run automatically. Our analysis of billions of URLs over a 10 month period shows that a non-trivial amount, of over 3 million maliciousURLs, initiate <b>drive-by</b> <b>downloads.</b> An even more troubling finding is that approximately 1. 3 % of the incoming search queries to Google’s search engine returned at least one URL labeled as malicious in the results page. We also explore several aspects of the <b>drive-by</b> <b>downloads</b> problem. We study {{the relationship between the}} user browsing habits and exposure to malware, the different techniques used to lure the user into the malware distribution networks, and the different properties of these networks...|$|R
3000|$|Infection stage, {{during which}} the bot spreads (this might happen through <b>drive-by</b> <b>downloads,</b> a {{malicious}} software being installed by the end-user, infected USB sticks, etc.) [...]...|$|R
5000|$|Users may {{be exposed}} to more {{security}} risks by downloading more pages, or from un-requested sites (additionally compounded as <b>drive-by</b> <b>downloads</b> become more advanced and diverse).|$|R
5000|$|When {{creating}} a <b>drive-by</b> <b>download,</b> an attacker must first create their malicious content {{to perform the}} attack. With the rise in exploit packs that contain the vulnerabilities needed to carry out <b>drive-by</b> <b>download</b> attacks, the skill level needed to perform this attack has been reduced.|$|E
50|$|Spam {{messages}} that include malicious attachments, links to binaries and <b>drive-by</b> <b>download</b> sites are another common mechanism for distributing rogue security software. Spam emails are often sent with content associated with typical day-to-day {{activities such as}} parcel deliveries, or taxation documents, designed to entice users to click on links or run attachments. When users succumb to these kinds of social engineering tricks they are quickly infected either directly via the attachment, or indirectly via a malicious website. This {{is known as a}} <b>drive-by</b> <b>download.</b> Usually in <b>drive-by</b> <b>download</b> attacks the malware is installed on the victim’s machine without any interaction or awareness and occurs simply by visiting the website.|$|E
5000|$|<b>Drive-by</b> <b>download</b> means two things, each {{concerning}} the unintended download of computer software from the Internet: ...|$|E
50|$|Some rogue {{security}} software, however, propagate onto users' computers as <b>drive-by</b> <b>downloads</b> which exploit security vulnerabilities in web browsers, PDF viewers, or email {{clients to}} install themselves without any manual interaction.|$|R
50|$|A DDoS attack {{can be used}} to {{take down}} {{malicious}} websites, such as those being used for phishing or <b>drive-by</b> <b>downloads.</b> Thousands of people generate traffic to a website, flooding it such that it goes over quota or simply can't serve that many requests in a timely manner.|$|R
50|$|With the {{emergence}} of Web 2.0, increased information sharing through social networking and increasing business adoption of the Web {{as a means of}} doing business and delivering service, websites are often attacked directly. Hackers either seek to compromise the corporate network or the end-users accessing the website by subjecting them to <b>drive-by</b> <b>downloading.</b>|$|R
50|$|BLADE (Block All <b>Drive-by</b> <b>Download</b> Exploits) is a {{computer}} program that was developed by Phillip Porras and Vinod Yegneswaran at SRI International; and Long Lu and Wenke Lee at the Georgia Institute of Technology. BLADE is funded by grants from the National Science Foundation, the United States Army Research Laboratory, and the Office of Naval Research. The {{program is designed to}} prevent <b>drive-by</b> <b>download</b> malware attacks.|$|E
50|$|Network Investigative Technique, or NIT, {{is a form}} of malware (or hacking) {{employed}} by the FBI since at least 2002. It is a <b>drive-by</b> <b>download</b> computer program designed to provide access to a computer.|$|E
50|$|HuntBar, aka WinTools or Adware.Websearch, was {{installed}} by an ActiveX <b>drive-by</b> <b>download</b> at affiliate Web sites, or by advertisements displayed by other spyware programs—an {{example of how}} spyware can install more spyware. These programs add toolbars to IE, track aggregate browsing behavior, redirect affiliate references, and display advertisements.|$|E
2500|$|Users may {{encounter}} {{this kind of}} threat when they visit websites that attempt to convince them to remove non-existent malware or security risks from their computers by installing the bogus software. The Trojan can also be installed by other malware, <b>drive-by</b> <b>downloads,</b> and when downloading and installing other software. Users may be directed to these sites {{by way of the}} following methods: ...|$|R
5000|$|Users cannot report {{phishing}} URLs via {{an online}} form. Rather, users must click the suspicious URL {{and visit the}} website using Internet Explorer's [...] "report this website" [...] feature. This exposes the user to <b>drive-by</b> <b>downloads</b> or other malicious content {{in order to be}} able to report the phishing website. Users cannot use non-Microsoft web browsers to report phishing URLs to Microsoft.|$|R
5000|$|Users may {{encounter}} {{this kind of}} threat when they visit websites that attempt to convince them to remove non-existent malware or security risks from their computers by installing the bogus software. The Trojan can also be installed by other malware, <b>drive-by</b> <b>downloads,</b> and when downloading and installing other software. Users may be directed to these sites {{by way of the}} following methods: ...|$|R
50|$|In {{addition}} to actively crawling and analyzing web sites, Norton Safe Web relies on feedback from users and Norton Community participants. When a <b>drive-by</b> <b>download</b> occurs at a web site, the suspicious URL is automatically reported to Norton Safe Web for analysis. The reported site is rated as unsafe if the analysis {{confirms that the}} download is malicious.|$|E
5000|$|... 2011: Spotify had a malvertising attack {{which used}} the Blackhole exploit kit - {{this was one}} of the first {{instances}} of a <b>drive-by</b> <b>download,</b> where a user doesn’t even have to click on an ad to become infected with malware. According to Bluecoat Security Systems Report 2011, saw an increase of 240% in malvertising based malicious sites.|$|E
5000|$|During the Conficker worm's initial attack, Porras {{was running}} a {{honeypot}} {{and was one of}} the first security researchers to notice it; and was part of the [...] "Conficker Cabal" [...] that helped combat the worm. Porras' team in SRI published an extensive analysis of the worm. In 2010, Porras was a co-author of BLADE, a collaboration between SRI and Georgia Tech researchers designed to prevent <b>drive-by</b> <b>download</b> malware attacks.|$|E
50|$|The {{vulnerability}} {{was located}} in gdi32.dll and existed in all versions of Microsoft Windows from Windows 3.0 to Windows Server 2003 R2. However, attack vectors only exist in NT-based versions of Windows (Windows NT, Windows 2000, Windows XP and Windows Server 2003). Exploits {{taking advantage of the}} vulnerability on Windows NT-based systems facilitated the propagation of various types of malware, typically through <b>drive-by</b> <b>downloads.</b>|$|R
50|$|The {{exploit kit}} gathers {{information}} on the victim machine, finds vulnerabilities and determines the appropriate exploit, and delivers the exploit, which typically silently <b>drive-by</b> <b>downloads</b> and executes malware. Kits are becoming ever more sophisticated. They tend to be neatly packaged, and do not require any understanding of exploits, and very little computer proficiency. Kits may have a Web interface showing active victims and statistics. They may have a support period and updates like commercial software.|$|R
40|$|Abstract. Client-based {{attacks on}} {{internet}} users with malicious web pages rep-resent {{a serious and}} rising threat. Internet Browsers with enabled active content technologies such as JavaScript are vulnerable to so-called <b>drive-by</b> <b>downloads.</b> <b>Drive-by</b> <b>downloads</b> are able to automatically infect a victim's system during a single visit of a crafted web page testing various vulnerabilities and installing e. g. malware files or illegal content without user interaction. In this paper we present MonkeyWrench, a low-interaction web-honeyclient allowing automatic identification of malicious web pages by performing static analysis of the HTML-objects in a web page as well as dynamic analysis of scripts by execu-tion in an emulated browser environment. Using this hybrid approach Monkey-Wrench overcomes shortcomings of existing low-interaction web-honeyclients in dealing with obfuscated JavaScript while outperforming high-interaction systems. Further MonkeyWrench is {{able to identify the}} exact vulnerability trig-gered by a malicious page and to extract payloads from within obfuscated scripts which are valuable information to security analysts and researchers. Re-sults of an examination of several hundred thousand web pages demonstrate MonkeyWrench's ability to expose rising threats of the web, and to collect malware and JavaScript exploit samples...|$|R
50|$|Blackshades infects {{computer}} systems by downloading onto a victim's computer when the victim accesses a malicious webpage (sometimes downloading onto the victim's computer without the victim's knowledge, {{known as a}} <b>drive-by</b> <b>download)</b> or through external storage devices, such as USB flash drives. Blackshades also included tools that assisted hackers in maximizing the amount of {{computer systems}} infected, such as a tool that sends infected links that masquerade as an innocuous site to other potential victims via the victim's social networking service.|$|E
50|$|Trojan {{horses are}} {{generally}} spread by {{some form of}} social engineering, for example where a user is duped into executing an e-mail attachment disguised to be unsuspicious, (e.g., a routine form to be filled in), or by <b>drive-by</b> <b>download.</b> Although their payload can be anything, many modern forms act as a backdoor, contacting a controller which can then have unauthorized access to the affected computer. While Trojan horses and backdoors are not easily detectable by themselves, computers may appear to run slower due to heavy processor or network usage.|$|E
50|$|DoubleClick {{is often}} {{linked with the}} {{controversy}} over spyware because browser HTTP cookies are set to track users as they travel from website to website and record which commercial advertisements they view and select while browsing.DoubleClick has also been criticized for misleading users by offering an opt-out option that is effectively useless. According to a San Francisco IT consulting group, although the opt-out option affects cookies, DoubleClick does not allow users {{to opt out of}} IP address-based tracking. DoubleClick and MSN were shown serving malware via <b>drive-by</b> <b>download</b> exploits by a group of attackers for some time in December 2010.|$|E
5000|$|The {{patent pending}} LinkScanner {{technology}} acquired from Exploit Prevention Labs and built into most AVG products, provides real-time updated protection against exploits and <b>drive-by</b> <b>downloads.</b> LinkScanner includes: Search-Shield - a safe search component that places safety ratings {{next to each}} link in Google, Yahoo! and MSN search results; plus Active Surf-Shield - a safe surf component that scans {{the contents of a}} web site in real-time to ensure it's safe being opened. Concerns regarding web analytics have made LinkScanner a controversial component (see below [...] "LinkScanner Concerns").|$|R
40|$|Internet <b>drive-by</b> <b>downloads</b> {{attacks are}} the {{preferred}} vehicle to infect desktop computers. In this paper, we propose a new URL analysis framework that combines lightweight virtualization and novel {{modifications to the}} WINE engine to detect heap spray attacks against applications. In addition, {{we are able to}} extract the attack shellcode used to further download other malicious binaries to the victim machine. Our preliminary results indicate that our system offers a compelling alternative to other process monitoring and virtualization technologies including QEMU and VMware since it can scale to thousands of instances per machine. ...|$|R
50|$|SmartScreen (officially called Windows SmartScreen, Windows Defender SmartScreen and SmartScreen Filter in {{different}} places) is a cloud-based anti-phishing and anti-malware component included in several Microsoft products, including Windows 8 and later, Internet Explorer, Microsoft Edge and Outlook.com. It {{is designed to}} help protect users against attacks that utilize social engineering and <b>drive-by</b> <b>downloads</b> to infect a system by scanning URLs accessed by a user against a blacklist of websites containing known threats. With the Windows 10 Creators Update, Microsoft placed the SmartScreen settings into the Windows Defender Security Center.|$|R
50|$|Trojans are {{generally}} spread by {{some form of}} social engineering, for example where a user is duped into executing an e-mail attachment disguised to be unsuspicious, (e.g., a routine form to be filled in), or by <b>drive-by</b> <b>download.</b> Although their payload can be anything, many modern forms act as a backdoor, contacting a controller which can then have unauthorized access to the affected computer. Trojans may allow an attacker to access users' personal information such as banking information, passwords, or personal identity (IP address). Ransomware attacks are often carried out using a Trojan. Most affected antivirus from Trojan is Webroot and Norton.|$|E
5000|$|Vundo inserts {{registry}} {{entries to}} suppress Windows warnings about the disabling of firewall, antivirus, and the Automatic Updates service, disables the Automatic Updates service and quickly re-disables it if manually re-enabled, and attacks Malwarebytes' Anti-Malware, Spybot Search & Destroy, Lavasoft Ad-Aware, HijackThis, {{and several other}} malware removal tools. It frequently hides itself from Vundofix and Combofix. Rather than pushing fake antivirus products, the new [...] "ad" [...] popups for the drive by download attacks are copies of ads by major corporations, faked so that simply closing them allows the <b>drive-by</b> <b>download</b> exploit to insert the payload into the user's computer.|$|E
50|$|Computers can be co-opted into a botnet {{when they}} execute {{malicious}} software. This {{can be accomplished}} by luring users into making a <b>drive-by</b> <b>download,</b> exploiting web browser vulnerabilities, or by tricking the user into running a Trojan horse program, which may come from an email attachment. This malware will typically install modules that allow the computer to be commanded and controlled by the botnet's operator. After the software is downloaded, it will call home (send a reconnection packet) to the host computer. When the re-connection is made, depending on how it is written, a Trojan may then delete itself, or may remain present to update and maintain the modules.|$|E
40|$|Abstract—Drive-by {{download}} attacks {{attempt to}} compromise a victim’s computer through browser vulnerabilities. Often they are launched from Malware Distribution Networks (MDNs) consisting of landing pages to attract traffic, intermediate redirection servers, and exploit servers which attempt the compromise. In this paper, {{we present a}} novel approach to discovering the landing pages that lead to <b>drive-by</b> <b>downloads.</b> Starting from partial knowledge of a given collection of MDNs we identify the malicious content on their landing pages using multiclass feature selection. We then query the webpage cache of a commercial search engine to identify landing pages containing the same or similar content. In this way {{we are able to}} identify previouslyunknown landing pages belonging to already identified MDNs, which allows us to expand our understanding of the MDN. We explore using both a rule-based and classifier approach to identifying potentially malicious landing pages. We build both systems and independently verify using a high-interaction honeypot that the newly identified landing pages indeed attempt <b>drive-by</b> <b>downloads.</b> For the rule-based system 57 % of the landing pages predicted as malicious are confirmed, and this success rate remains constant in two large trials spaced five months apart. This extends the known footprint of the MDNs studied by 17 %. The classifier-based system is less successful, and we explore possible reasons. Keywords—Drive-by download; malware distribution network; signature; I...|$|R
40|$|Social {{engineering}} {{is used as}} an umbrella term for {{a broad spectrum of}} computer exploitations that employ a variety of attack vectors and strategies to psychologically manipulate a user. Semantic attacks are the specific type of social engineering attacks that bypass technical defences by actively manipulating object characteristics, such as platform or system applications, to deceive rather than directly attack the user. Commonly observed examples include obfuscated URLs, phishing emails, <b>drive-by</b> <b>downloads,</b> spoofed web- sites and scareware to name a few. This paper presents a taxonomy of semantic attacks, as well as a survey of applicable defences. By contrasting the threat landscape and the associated mitigation techniques in a single comparative matrix, we identify the areas where further research can be particularly beneficial...|$|R
40|$|University of Minnesota Ph. D. dissertation. September 2016. Major: Computer Science. Advisor: Zhi-Li Zhang. 1 {{computer}} file (PDF); x, 104 pages. The popularity of online services, {{such as social}} networks and online banking, has made them a popular platform for attackers. Cybercriminals leverage them to spread malicious software (malware) and steal personal information. In a cybercriminal operation, miscreants infect their victims'’ machines with malware that performs malicious activities. This occurs due to poor security measures implemented by enterprise networks, and the complexity of network management tools. By studying existing malware distribution networks and enterprise networks management tools, we aim to understand the techniques used to infect victims such as <b>drive-by</b> <b>downloads,</b> study malware families and design better detection methodologies, and seek solutions towards an improved network management framework. Towards these goals, this thesis studies three orthogonal problems aiming at addressing security and management problems in modern networks. First, we study malware infections due to <b>drive-by</b> <b>downloads</b> using a large ISP dataset. We show that attackers employ redirections which automatically redirect users' requests {{through a series of}} intermediate websites, before landing on the final distribution site. To detect these malicious redirections, we developed a machine learning framework that relies on a distinctive set of features to label the malicious redirections and block them. Second, we study malware network traces for infected hosts in an enterprise network using real malware traces, and we show that malware traffic comes mixed up with legitimate user traffic such as browsing traffic. To improve malware detection, we developed a novel system that decomposes the traffic into separate components, and applies the detection system to the suspected malware component only, and consequently improve detection rates. Third, we postulate native network functions within the Software-defined Network (SDN) data plane, where the same logical controller controls both network services and routing. This is enabled by extending Software-defined Networking to support stateful flow handling based on higher layers in the packet beyond layers 2 - 4. As a result, network functions (a. k. a middleboxes) can be chained on demand, directly on the data plane. We present an implementation of this architecture based on Open vSwitch, and show that it enables popular network functions effectively and addresses the management problems in enterprise networks. In summary, this thesis addresses these three closely related problems by: (1) protecting enterprise networks from <b>drive-by</b> <b>downloads</b> launched using redirections via a data-driven approach; (2) detecting existing malware activity on the network by decomposing the end-host traffic into a benign component and a suspected malware component, then classifying the malware into its malware family; and (3) building a flexible network architecture that enables managing network functions (e. g. such as systems in (1) and (2) and others like firewalls and load balancers) within the data plane along with the routing using a unified control plane...|$|R
