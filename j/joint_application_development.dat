19|10000|Public
50|$|An {{alternative}} to the SDLC is rapid application development, which combines prototyping, <b>joint</b> <b>application</b> <b>development</b> and implementation of CASE tools. The advantages of RAD are speed, reduced development cost, and active user involvement in the development process.|$|E
5000|$|User {{design phase}} - during this phase, users {{interact}} with systems analysts and develop models and prototypes that represent all system processes, inputs, and outputs. The RAD groups or subgroups typically {{use a combination}} of <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) techniques and CASE tools to translate user needs into working models. User Design is a continuous interactive process that allows users to understand, modify, and eventually approve a working model of the system that meets their needs.|$|E
40|$|Various {{health service}} and {{voluntary}} sector agencies dealing with drug misusers {{in a large}} city in the North of England {{have set up a}} task group to co-ordinate their assessment and referral process. An IT solution to their needs was believed to be desirable but raises serious issues concerning confidentiality, and the suitability of an IT solution to the particular information problem. The approach is informed by Social Informatics and utilises Soft Systems Methodology within the framework of <b>Joint</b> <b>Application</b> <b>Development...</b>|$|E
40|$|The {{importance}} {{attached to}} user participation in {{contributing to the}} success of an information system has been a long held theoretical belief. Systems development techniques have been promoted that involve user participation such as prototyping, rapid <b>application</b> <b>development</b> and <b>joint</b> <b>application</b> design. Interestingly, the research literature on the topic has not been conclusive about the real value of user partic ipation, although the perception of value has still existed. The importance of user participation could be seen as a myth in information systems...|$|R
40|$|Abstract. Secure{{computation}}isapromisingapproachtobusinessproblems {{in which}} several parties {{want to run}} a <b>joint</b> <b>application</b> and cannot reveal their inputs. Secure computation preserves the privacy of input data using cryptographic protocols, allowing the parties to obtain the benefits of data sharing {{and at the same}} time avoid the associated risks. These business applications need protocols that support all the primitive data types and allow secure protocol composition and efficient <b>application</b> <b>development.</b> Secure computation with rational numbers has been a challenging problem. We present in this paper a family of protocols for multiparty computation with rational numbers using fixed-point representation. This approach offers more efficient solutions for secure computation than other usual representations...|$|R
40|$|Since {{the advent}} of Next Generation Sequencing (NGS) technology, the amount of data from whole genome {{sequencing}} has been rising fast. In turn, the availability of these resources led to the tapping of whole new research fields in molecular and cellular biology, producing even more data. On the other hand, the available computational power is only increasing linearly. In recent years though, special-purpose high-performance devices started to become prevalent in today’s scientific data centers, namely graphics processing units (GPUs) and, to a lesser extent, field-programmable gate arrays (FPGAs). Driven by the need for performance, developers started porting regular applications to GPU frameworks and FPGA configurations to exploit the special operations only these devices may perform in a timely manner. However, applications using both accelerator technologies are still rare. Major challenges in <b>joint</b> GPU/FPGA <b>application</b> <b>development</b> include the required deep knowledge of associated programming paradigms and the efficient communication both types of devices. In this work, two algorithms from bioinformatics are implemented on a custom hybrid-parallel hardware architecture and a highly concurrent software platform. It is shown that such a solution is not only possible to develop but also its ability to outperform implementations on similar- sized GPU or FPGA clusters {{in terms of both}} performance and energy consumption. Both algorithms analyze case/control data from genome- wide association studies to find interactions between two or three genes with different methods. Especially in the latter case, the newly available calculation power and method enables analyses of large data sets for the first time without occupying whole data centers for weeks. The success of the hybrid-parallel architecture proposal {{led to the development of}} a high- end array of FPGA/GPU accelerator pairs to provide even better runtimes and more possibilities...|$|R
40|$|Abstract—The {{increasing}} demand of software products for different business organization and individuals day-by-day enforces the developers to use policy, technology in a planned manner {{for the development}} of quality software products. It is important to entertain all different phases of software development life cycle (SDLC) i. e. from requirements to implementation, maintenance to re-engineering with the use of integrated computer-aided software engineering (CASE) tools and the use of group support systems (GSS) and <b>joint</b> <b>application</b> <b>development</b> (JAD) in the context of CASE environments to facilitate the entire development process. An integrated framework is proposed that facilitates the developers to build up confidence for the improvement of quality for software products...|$|E
40|$|While <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) and Rapid Application Development (RAD) {{have the}} {{potential}} for accelerated development and increased customer acceptance, formal processes for Knowledge Acquisition (KA) and requirements gathering, analysis, and refinement is typically not emphasized. This paper presents the Knowledge-based Integrated Design and Development Environment (KIDDE), an iterative software development methodology which merges a formal KA process for eliciting requirements with subsequent JAD sessions and RAD prototypes. The process emphasizes incremental development and feedback among KA, JAD, and RAD activities. The paper focuses on the representation of functional, data, and performance requirements in a Domain Reference Architecture representation that serves as a blueprint for incremental system component development and system integration. Keywords Knowledge Acquisition, Requirements engineering, Modeling, Software engineering Submitted to 12 th Workshop on K [...] ...|$|E
40|$|Interviewing {{and other}} {{conventional}} approaches {{failed to produce}} the user-devel oper understanding required to establish high-quality systems requirements for software development [...] <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) {{was introduced in the}} late 1970 s, and has been widely used to alleviate this problem. But JAD s success has been critically dependent on the excellence of facilitation to deflect many of the relational problems that are typically experienced with the freely interacting group structure used to conduct JAD sessions. While the use of JAD is pervasive, excellent facilitators are scarce, which ham pers or even precludes some JAD efforts. In this article we recommend a solution to this problem—using the nominal group technique (NGT) in JAD sessions to reduce the impact of negative group dynamics on JAD results. We provide some indications of the potential effectiveness of this proposal...|$|E
40|$|There {{is a wide}} {{diversity}} of traditional approaches for identify-ing and gathering software requirements, including <b>joint</b> <b>application</b> design sessions, requirements management tech-niques, prototyping, rapid <b>application</b> <b>development,</b> eXtreme Programming, and others. When done properly these techniques typically deliver a form of documented user requirements. After a series of user and peer reviews, these formal requirements are typi-cally assumed to represent the complete set of user requirements. However, the full set of user requirements is generally not complete until the project’s end and continues to emerge as it progresses. As a result the project encounters rework, schedule slippage, and budget overruns, the extent of which depends {{on the degree of}} originally unknown requirements. With some Department of Defense projects this problem is further com-pounded due to requirements that are outcome- or perform-ance-based, and functional requirements are developed as par...|$|R
40|$|Many {{researchers}} and practitioners consider user {{participation in the}} development of an information system is essential {{to the success of the}} system. System designers have promoted development techniques that demand user participation, such as prototyping, rapid <b>application</b> <b>development</b> and <b>joint</b> <b>application</b> design. Interestingly, the research literature on the topic has not been conclusive about the value of user participation, although the perception of value has still existed. The importance of user participation in information systems could be seen as a myth. The time pressure to develop Web based e-commerce systems and the propagation of the view that e-commerce is different and subject to different rules has led developers to question the value of customer participation in the development process. Indeed, the notion of the &quot;user &quot; has become confused. No longer is a user necessarily found in-house, but may be a geographically remote customer unknown to an organization. This paper proposes and validates a model that examines the role of key users and stakeholders in e-commerce <b>applications</b> <b>development.</b> Despite the business need for remote, untrained users to quickly feel comfortable and satisfied in an e-commerce site encounter, it appears that many organisations are making little effort to engage users in e-commerce site developmental activities...|$|R
3000|$|... • Prescriptive Methods – {{to create}} better {{solutions}} by exploiting the <b>joint</b> <b>application</b> of predictive models and optimization technology.|$|R
40|$|While <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) and Rapid Application Development (RAD) {{have the}} {{potential}} for accelerated development and increased customer acceptance, formal processes for Knowledge Acquisition (KA) and requirements gathering, analysis, and refinement is typically not emphasized. This paper presents an iterative software development methodology that merges a formal KA process for eliciting requirements with subsequent JAD sessions and RAD prototypes. The process emphasizes incremental development and feedback among KA, JAD, and RAD activities. The paper focuses the KA required for the derivation of a Domain Reference Architecture representation that serves as a blueprint for incremental system component development and integration. The methodology presented in this paper is employed in a Defense Advance Research Project Agency (DARPA) project and draws heavily from the Systems Engineering Process Activities (SEPA) methodology under development at The University of Texas at [...] ...|$|E
40|$|Investments in {{electronic}} commerce technology typically require {{large sums of}} money and the realisation of possible benefits is often highly uncertain. Possible investors may also be confronted with the so-called free rider-problem. Innovators have to bear all development costs. Once standards are established followers (free riders) may easily imitate the investment. Hence, innovators {{may not be able to}} build up sustaining competitive advantages that make their investments worthwhile. As a result, available technology may not be used in an efficient way. A typical prisoner's dilemma scenario prevails. Pre-competitive collaboration may be a possible solution to this problem. The term "pre-competitive" refers to the possibility of <b>joint</b> <b>application</b> <b>development</b> and/or sharing of information, knowledge and ability. It should not be confused with collusion which may be legally restricted or even forbidden. The goal of the paper is to analyse whether there are economic incentives for pre-competitive collaboration as sketched above. The analysis is carried out with the help of a microeconomic model and techniques from game theory...|$|E
40|$|The {{growth of}} Enterprise Resource Planning (ERP) systems since the 90 ’s has been immense. Their {{organisational}} wide functionality is vast and overall capabilities are enormous but their success, usability and the user perception is questioned {{in the information}} systems (IS) literature. This paper looks at an implemented ERP system in a large Australian University. The core aspect of {{the paper is the}} user perception on the implemented system, which is measured by two criterions: user satisfaction and post-implementation factors. The author is using interviews, documentary analysis and observation techniques for data gathering. Based on the gathered findings, the author portrays the use of participatory design (PD) methods as a possible tool for successful ERP implementation. User-Centred Design (UCD) and <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) were compared as part of the PD approach and it was concluded that the UCD approach would best suit for the development and the implementation of an ERP system...|$|E
50|$|In 2005, {{her name}} {{was added to the}} list on a <b>joint</b> <b>application</b> called 1,000 Women for the Nobel Peace Prize.|$|R
5000|$|... 2) <b>Application</b> <b>Development</b> : Presentations {{on custom}} <b>application</b> <b>development,</b> ranging from paper {{prototyping}} to <b>application</b> <b>development</b> techniques specific to Lotus software products.|$|R
40|$|The {{importance}} {{attached to}} user participation in {{contributing to the}} success of an information system has been a long held theoretical belief. Systems development techniques have been promoted that involve user participation such as prototyping, rapid <b>application</b> <b>development</b> and <b>joint</b> <b>application</b> design. Interestingly, the research literature on the topic has not been conclusive about the real value of user partic ipation, although the perception of value has still existed. The importance of user participation could be seen as a myth in information systems. In e-commerce the pressure to develop Web based systems in Internet time and the propagation of the view that e-commerce is different and subject to different rules has led developers to question the value of customer participation in the development process. Indeed, the notion of the "user" has become confused. The IS/E-commerce discipline may be guilty of misinformation. This paper proposes and validates a model to examine the role of key users or stakeholders in ecommerce <b>application</b> <b>development.</b> This framework for analysing user participation and system success takes into account the different requirements of each distinct group. Despite the business need for remote, untrained users to quickly feel comfortable and satisfied in an e-commerce site encounter, it appears that many organisations are making little effort to engage users in e-commerce site developmental activities...|$|R
40|$|Information Systems (IS) {{projects}} {{failure is}} ‘a {{gap between what}} the users expect from an IS and how well these expectations are met by the perceived performance of the delivered system’. IS projects fail more than they succeed. IS failure rates in the Developing Countries (DCs) are much higher {{than those in the}} Industrialised Countries (ICs) because among other reasons, the gaps tend to be exaggerated by the huge difference between the ideas/IS projects and the political /behavioural realities in the DCs. These chronic failure rates have continued to place the DCs {{on the wrong side of}} the digital divide, turning IS projects and ICTs in general into a technology of inequality. Solution: employment of <b>Joint</b> <b>Application</b> <b>Development</b> (JAD); a software development methodology that will involve the stakeholders in the entire process of IS implementation. This paper explains how JAD can be used to eradicate most of the causes of IS projects ’ failures in the DCs using the University of Nairobi case study. The CHAOS Ten Success factors have been employed to analyze data for nine IS projects...|$|E
40|$|The users’ {{participation}} in the information system definitions {{since the beginning of}} its development is encouraged by most of the software development methodologies. There are specific techniques to obtain a consensual solution among the participants, as for instance, <b>joint</b> <b>application</b> <b>development</b> (JAD), motivating meetings among users, stakeholders and developers, being basically the target to understand what the system should accomplish. Other aspects concerning the users’ collective involvement are not considered, as for instance, the way that the future system could help in the task of participating in a common work. This fact happens because, in general, the user is seen independently of the environment or group in which he/she is inserted, with the individual model generalized for the collective behavior study involving all the users. This work proposes a model that uses ergonomics, cognition mental models and software engineering techniques to deal with the issues involving the workers’ collective work, under the information system point of view. Research-action will be used as the research method, applied during a corporate workflow system development in a Brazilian technological research compan...|$|E
40|$|This paper {{describes}} a role-play exercise {{used in a}} second-year tertiary Systems Analysis and Design course, and the quantitative and qualitative analysis of the students' responses to a survey that solicited their perceptions of that role-play experience. The role-play involved students in eliciting user requirements from customers during a <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) session, thus simulating a common industry practice. Each JAD team had to interact to resolve conflicting customer requirements and record in IBM[R] Rational[R] Rose[R] the use cases necessary for a software solution. Completed diagrams were presented to the class using SynchronEyes technology, for review and discussion. The effectiveness of the role-play method was confirmed by students' perceptions collected in the survey following the exercise. The goal of the survey was to discover if students respond positively to learning about JAD, and use case diagrams, through role-play, and if {{they believe that they}} have improved their knowledge {{as a result of that}} experience. Student responses showed enthusiasm for experiential learning in the form of role-play and belief that learning had occurred. After experiencing the role-plays, students were also able to identify some of the limitations in the use of use cases, thus highlighting aspects that would require their future attention...|$|E
5000|$|Generally {{includes}} <b>joint</b> <b>application</b> design (JAD), where {{users are}} intensely involved in system design, via consensus building in either structured workshops, or electronically facilitated interaction.|$|R
5000|$|<b>Joint</b> <b>application</b> design (JAD) is a {{methodology}} which evolved from RAD, {{in which a}} system designer consults with a group consisting of the following parties: ...|$|R
50|$|With JDeveloper, Oracle has {{aimed to}} simplify <b>application</b> <b>development</b> by {{focusing}} on providing a visual and declarative approach to <b>application</b> <b>development</b> in addition to building an advanced coding-environment. Oracle JDeveloper integrates with the Oracle <b>Application</b> <b>Development</b> Framework (Oracle ADF) - an end-to-end Java EE-based framework that further simplifies <b>application</b> <b>development.</b>|$|R
40|$|This {{special report}} {{is the third}} in a series by the Software Engineering Institute {{focusing}} on the practical application of the Security Quality Requirements Engineering (SQUARE) process. In this report, a student team presents their results of working with three clients {{over the course of}} a semester. Each client was developing a large-scale software application and worked with the students to generate security requirements. The students 2 ̆ 7 main contribution to the SQUARE process was to determine how existing software requirements-elicitation techniques could be applied to software security requirements (as opposed to end-user requirements). With each client, the students implemented a different structured requirements-elicitation technique: Issue-Based Information Systems with an information technology firm, <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) with the Delta client, and the Accelerated Requirements Method (ARM) with the Beta client. The ARM technique, which is a variant of JAD, held the most promise for inclusion in future applications of SQUARE. In addition to an analysis of the three elicitation techniques, the student team also generated feedback and recommendations on different steps of the SQUARE process, such as requirements prioritization and inspection. They found the Analytic Hierarchy Process to be highly useful for prioritizing requirements quickly; however, they did not find a requirements inspection technique that was well suited for any of the clients...|$|E
40|$|JAD (<b>Joint</b> <b>Application</b> <b>Development)</b> is a meeting-centered {{methodology}} used {{to address}} the problem of getting users involved in the systems development process. Industry has used the JAD approach to develop systems for over a decade, predominantly for in-house software applications. Electronic Meeting Systems (EMS) are networked software systems that support meetings through a variety of software tools. The combination of the two [...] JAD and EMS [...] creates Electronic JAD (E-JAD). A field study was conducted to investigate whether applying EMS to JAD benefits the systems development process. The field study compared five traditional JAD sessions to six E-JAD sessions. All E-JAD sessions made use of the University of Arizona GroupSystems EMS. All sessions involved actual software development efforts conducted in a half dozen organizations and were all held in a face-to-face setting. There was some evidence that the E-JAD approach was beneficial as compared to traditional JAD techniques on the variables of efficiency and equalizing participation and influence. Traditional JAD sessions showed benefits over E-JAD in handling conflicts (particularly in resolving conflicts) and in enforcing a higher degree of structure. Neither of the approaches dominated on all criteria, hence an examination of E-JAD's weaknesses identifies two key areas for improvement: fit of GroupSystems tools to tasks (with discussion of divergence and convergence), and greater involvement of the session facilitator. Other constructs analyzed and discussed are: completeness, creativity, satisfaction, IS-user bonding, user expectations, users' mental models, JAD costs, group size, and planning activities...|$|E
40|$|Many modern {{software}} development projects use application composition methods. These methods use an Integrated Computer-Aided Software Engineering (ICASE) environment and are typically small, requiring {{only a few}} people for several months. Many of these projects also utilize integrated product development teams who employ Rapid Application Development (RAD) to quickly evolve a series of product versions. For such projects, sizing the product in terms of lines of code is not practical. Instead new size measures are needed to estimate the development effort. Boehm and his colleagues have proposed a measure called Application Points [Boehm, 2000]. In August 1999 our organization had an opportunity to use the COCOMO II Application Point Model to estimate the effort for an internally funded rapid application development project. This project produced a cost tracking and invoicing system. The project was schedule constrained and used <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) techniques to elicit the system’s requirements from subject matter experts representing multiple departments within the organization (finance, accounting, contracts, project control, and project management). During the project we collected the effort expended on various activities. In this paper we will use the collected information to compute the actual productivity of the staff and to compute the distribution of effort by activity (development, test, management, etc.) By comparing the observed productivity with the predictions of the Application Point Model, we can get an initial data point to gauge the accuracy of the model. We will also suggest some possible improvements to the Application Point Model that might make it easier to use and which might lead to increased accuracy...|$|E
50|$|Arnie Lind's {{idea was}} simple: {{rather than have}} {{application}} developers learn about people's jobs, why not teach the people doing the work how to write an application? Arnie pitched the concept to IBM Canada's Vice President Carl Corcoran (later President of IBM Canada), and Carl approved a pilot project. Arnie and Carl together named the methodology JAD, an acronym for <b>joint</b> <b>application</b> design, after Carl Corcoran rejected the acronym JAL, or <b>joint</b> <b>application</b> logistics, upon realizing that Arnie Lind's initials were JAL (John Arnold Lind).|$|R
50|$|In 2012 Cycling Southland {{hosted the}} 2012 UCI Juniors Track World Championships after the UCI awarded {{the event to}} Invercargill, {{following}} a <b>joint</b> <b>application</b> by Cycling Southland and BikeNZ.|$|R
50|$|Apex Award for <b>Application</b> <b>Development</b> (2004) - Editors' Choice {{winner in}} the <b>Application</b> <b>Development</b> Systems category.|$|R
40|$|Logistics can {{be defined}} as the process of {{strategically}} managing the acquisition, movement, and storage of materials, parts, and finished inventory (and the related information flow) through the organization and its marketing channels in a cost effective manner. It is concerned with delivering the right product to the right customer {{in the right place at}} the right time. The logistics function is composed of inventory management, facilities management, communications unitization, transportation, materials management, and production scheduling. The relationship between logistics and information systems is clear. Systems such as Electronic Data Interchange (EDI), Point of Sale (POS) systems, and Just in Time (JIT) inventory management systems are important elements in the management of product development and delivery. With improved access to market demand figures, logisticians can decrease inventory sizes and better service customer demand. However, without accurate, timely information, little, if any, of this would be feasible in today's global markets. Information systems specialists can learn from logisticians. In a manner similar to logistics management, information logistics is concerned with the delivery of the right data, to the ring customer, at the right time. As such, information systems are integral components of the information logistics system charged with providing customers with accurate, timely, cost-effective, and useful information. Information logistics is a management style and is composed of elements similar to those associated with the traditional logistics activity: inventory management (data resource management), facilities management (distributed, centralized and decentralized information systems), communications (participative design and <b>joint</b> <b>application</b> <b>development</b> methodologies), unitization (input/output system design, i. e., packaging or formatting of the information), transportations (voice, data, image, and video communication systems), materials management (data acquisition, e. g., EDI, POS, external data bases, data entry) and production scheduling (job, staff, and project scheduling) ...|$|E
40|$|Rapidly {{changing}} technology constantly modifies the way {{in which}} tasks are conceived and executed. Furthermore, leading organisations also encourage the use of new technology to support and establish innovative ways of doing business. For example, technology has helped to drive the globalization and tighter integration of world markets. This has facilitated, and even necessitated, business organisations to compete for work across national borders. For geographically dispersed organisations, collaboration has become critical. But this has presented time and space work complexities. Communication and collaboration technologies, for example, are needed to support such emerging co-operative business practices. The short development cycle of technology, communication and collaborative technologies included, leaves little time for testing and less for understanding the impact of new technology. To compound the problem, no established formulae exist for matching technology with work: over-investment is a waste of resources, while under-investment could lead to work failure. This research proposes a framework to assist organisations in selecting the appropriate level of technology with the work required. In this study, the methodology developed by the Evaluation Working Group, the DARPA Intelligent Collaboration and Visualization program is extended, and a matrix framework is constructed which compares the success of generic work tasks against a range of technology resources. The framework is tested using a low resource configuration, with selected work task types generally found in software development. (The <b>Joint</b> <b>Application</b> <b>Development</b> (JAD) methodology for software development is used as the contextual basis of the experiment.) All activities are evaluated according to selected measure components of success. A collection of research methods known as ethnography is used to examine and test the framework. Methods employed include questionnaires, interviews, interaction analysis and ethnomethodology. The results indicate that even at a low resource level, given selected criteria, collaborative technology successfully supports certain collaborative work activities. Findings also indicate that softer people issues require much more attention in order for technology to support natural collaborative work. Finally, user defined parameter testing has indicated that the framework functions as expected and designed. ...|$|E
40|$|Software {{developers}} and users do not, in many cases, work efficiently and effectively together to elicit and agree on software requirements. A {{different approach to}} requirement elicitation and approval is proving extremely successful in industry. This approach uses a methodology and technique called <b>Joint</b> <b>Application</b> <b>Development</b> (JAD). JAD is both a team-technique and a methodology that emphasizes structure, a detailed agenda, and an active, trained facilitator. In recent years, {{there has been a}} growing interest in the use of information technology to support group work. Electronic meeting system (EMS) technology, a specific type of group support system, has evolved since the early 1980 s to address the need to provide computer support to work groups. This research study hypothesizes that the union of EMS technology with IAO-like meetings addressing a complex task such as software requirement elicitation will result in improved efficiency and effectiveness, higher quality decisions, greater member satisfaction, and improved consensus. Because testing these hypotheses using a controlled software project is impractical, data synthesis (meta-analysis) techniques were applied to the results from 180 historical laboratory experiments and field studies that examined EMS to support group decision-making. Results were grouped for analysis by research setting and by outcome variable (efficiency, effectiveness, quality, satisfaction and consensus). The results confirm that EMS technology improves group decision-making efficiency and effectiveness, results in higher quality decisions and greater member satisfaction, and improves the process for obtaining consensus in both laboratory and field research settings. The composite field study’s effects were 1 y, to 3 times more significant than those from laboratory experiments. The results support the widely held research premise that historical laboratory and field results are not inconsistent but rather reflect different research situations. In this study, the laboratory findings were categorized to reflect treatments similar to those in field studies (medium to large size groups, medium to difficult tasks); the resulting outcomes were consistent. Because of this consistency of effect between controlled laboratory and field study results, the credibility and generalizability of historical field study outcomes is considerably strengthened...|$|E
5000|$|<b>Application</b> <b>Development</b> Toolkit (ADT) {{contains}} {{tools for}} <b>application</b> <b>development,</b> including the IDE, debugger, and analysis tools.|$|R
5000|$|Natural - a 4GL <b>application</b> <b>development</b> {{language}} {{can be used}} along with ADABAS for <b>application</b> <b>development</b> ...|$|R
50|$|Web {{engineering}} {{focuses on the}} methodologies, techniques, and tools that are the foundation of Web <b>application</b> <b>development</b> and which support their design, development, evolution, and evaluation. Web <b>application</b> <b>development</b> has certain characteristics that make it different from traditional software, information system, or computer <b>application</b> <b>development.</b>|$|R
