205|209|Public
5|$|Heartbleed is a {{security}} bug in the OpenSSL cryptography library, {{which is a}} widely used implementation of the Transport Layer Security (TLS) protocol. It was introduced into the software in 2012 and publicly disclosed in April 2014. Heartbleed may be exploited {{regardless of whether the}} vulnerable OpenSSL instance is running as a TLS server or client. It results from improper <b>input</b> <b>validation</b> (due to a missing bounds check) in the implementation of the TLS heartbeat extension, thus the bug's name derives from heartbeat. The vulnerability is classified as a buffer over-read, a situation where more data can be read than should be allowed.|$|E
500|$|In 2013, 9% of all {{vulnerabilities}} {{listed by}} the National Vulnerability Database {{were linked to}} PHP; historically, about 30% of all vulnerabilities listed since 1996 in this database are linked to PHP. [...] Technical security flaws of the language itself or of its core libraries are not frequent (these numbered 22 in 2009, which was about 1% of the total, although PHP applies to about 20% of programs listed.) [...] Recognizing that programmers make mistakes, some languages include taint checking to automatically detect the lack of <b>input</b> <b>validation</b> which induces many issues. Such a feature is being developed for PHP, but its inclusion into a release has been rejected {{several times in the}} past.|$|E
2500|$|Security best {{practices}} (<b>Input</b> <b>Validation,</b> SQL Injection, Cross-Site Scripting, etc. [...] ) ...|$|E
50|$|QDB {{users are}} invited to {{validate}} chemistry sets either directly or by validating the results of models which use these chemistry sets as <b>inputs.</b> <b>Validation</b> of the chemistry sets provided in the database {{will be based on}} the foundations of Uncertainty Quantification for calculations of complex systems.|$|R
5000|$|US 9,294,493 - Computer {{security}} {{method and}} system with <b>input</b> parameter <b>validation</b> ...|$|R
5000|$|Gather <b>input</b> and <b>validation</b> {{from the}} global {{business}} community on trade agenda priorities and recommendations for achieving a Doha victory ...|$|R
2500|$|Ensure <b>input</b> <b>validation</b> {{to avoid}} cross-site {{scripting}} flaws or SQL injections flaws ...|$|E
2500|$|Alternative {{approaches}} to exception handling in software are error checking, which maintains normal program flow with later explicit checks for contingencies reported using special return values or some auxiliary global {{variable such as}} C's [...] or floating point status flags; or <b>input</b> <b>validation</b> to preemptively filter exceptional cases.|$|E
2500|$|An {{example of}} a DOM-based XSS {{vulnerability}} is the bug found in 2011 {{in a number of}} JQuery plugins. Prevention strategies for DOM-based XSS attacks include very similar measures to traditional XSS prevention strategies but implemented in JavaScript code and contained in web pages (i.e. <b>input</b> <b>validation</b> and escaping). Some JavaScript frameworks have built-in countermeasures against this and other types of attack [...] for example Angular.js.|$|E
5000|$|Calibration {{is defined}} as the process of quantitatively {{defining}} the system response to known, controlled signal <b>inputs.</b> <b>Validation</b> {{is defined as}} the process of assessing by independent means the quality of the data provided. Higher level products can be successfully generated from satellite sensor data only if both calibration and validation are present. This allows Earth observation satellites the ability to get calibration measurements and allows them to get validation of their data retrieval algorithms.|$|R
5000|$|Form <b>input</b> and <b>validation,</b> {{supporting}} validation both on client- (for faster user feedback) and server-side (aiming {{to ensure}} data integrity and data security ...|$|R
50|$|Data storage {{has also}} standardized. Relational {{databases}} are developed by different suppliers to common formats and conventions. Common file formats {{can be shared}} by large main-frames and desk-top personal computers, allowing online, real time <b>input</b> and <b>validation.</b>|$|R
5000|$|<b>Input</b> <b>validation,</b> such as {{whitelisting}} {{only known}} good values ...|$|E
5000|$|Security best {{practices}} (<b>Input</b> <b>Validation,</b> SQL Injection, Cross-Site Scripting, etc. [...] ) ...|$|E
5000|$|Ensure <b>input</b> <b>validation</b> {{to avoid}} cross-site {{scripting}} flaws or SQL injections flaws ...|$|E
5000|$|The control {{rules for}} {{estimating}} module values {{are based on}} logic relationships between inputs and outputs, expressed in linguistic terms by 'if-then' statements. For example, when two <b>input</b> variables (<b>validation</b> metrics) are aggregated four rules are required, formalized as: ...|$|R
50|$|Since its launch, the World Trade Agenda {{initiative}} {{has organized}} consultations with CEOs and senior executives in all major {{regions of the}} world to gather <b>input</b> and <b>validation</b> of its recommendations. These business priorities were released during the ICC World Trade Agenda Summit on 22 April 2013 in Doha.|$|R
40|$|Various {{studies have}} {{highlighted}} an {{apparent lack of}} analyses associated with the modal choice characteristics of transit-oriented developments (TODs) and emphasized the need for quick response models for estimating transit share in TOD areas. In this paper, a methodology for developing transit-share model for TOD’s using travel activity data is presented. A transit-share model is formulated as an innovative combination of the direct generation, urban travel factor (UTF), and logit models. This model determines transit usage in TODs based on household auto ownership as the primary input and the transit system variables as secondary <b>inputs.</b> <b>Validation</b> of the model indicates a close agreement with observed data. Since the input requirements to the TOD transit-share model are minimal, this model structure {{is expected to be}} very useful for sketch analysis of many TOD project alternatives...|$|R
5000|$|<b>Input</b> <b>validation</b> [...] - [...] {{verify that}} each sensor is {{providing}} valid data ...|$|E
5000|$|<b>Input</b> <b>validation,</b> e.g. (in SQL): [...] is {{an example}} of a SQL {{injection}} vulnerability ...|$|E
5000|$|Improper <b>input</b> <b>validation</b> [...] - [...] {{a type of}} {{software}} security vulnerability particularly relevant for user-given strings ...|$|E
50|$|Many {{computer}} systems implement data entry forms, but data collection systems {{tend to be}} more complex, with possibly many related forms containing detailed user <b>input</b> fields, data <b>validations,</b> and navigation links among the forms.|$|R
40|$|Web {{applications}} require exchanging parameters {{between a}} client and a server to function properly. In real-world {{systems such as}} online banking transfer, traversing multiple pages with parameters contributed by both the user and server is a must, and hence the applications have to enforce workflow and parameter dependency controls across multiple requests. An application that applies insufficient server-side <b>input</b> <b>validations</b> is however vulnerable to parameter tampering attacks, which manipulate the exchanged parameters. Existing fuzzing-based scanning approaches however neglected these important controls, and this caused their fuzzing requests to be dropped before they can reach any vulnerable code. In this paper, we propose a novel approach to identify the workflow and parameter dependent constraints, which are then maintained and leveraged for automatic detection of server acceptances during fuzzing. We realized the approach by building a generic blackbox parameter tampering scanner. It successfully uncovered a number of severe vulnerabilities, including one from the largest multi-national banking website, which other scanners miss. Comment: 12 pages, 2 tables, 3 figures To appear in ACM ASIA CCS' 14, Kyoto, Japa...|$|R
40|$|Building {{simulation}} {{is currently}} looking towards interdisciplinary experiences, aiming to {{the integration of}} simulation tools in different technical domains. At the same time, {{the interest of the}} building community to high performance buildings has also strengthened the interest on Life Cycle performances of such buildings, due to the reduction in their operational stage impacts. In this context, the paper proposes an integration of building simulation and Life Cycle Assessment through the programming of a TRNSYS component. It can perform Life Cycle Assessment studies, while having as output as well energy balances and energy and environmental payback times. Currently, the tool is tailored to calculate the indicators Global energy requirement and Global warming potential, but its flexibility allows to calculate any kind of indicator, if given the right <b>inputs.</b> <b>Validation</b> results report percentage deviations variable between 10 E- 3 % and 10 E- 8 % if compared to a standard Life Cycle Assessment study, thus it is possible to state that the Type is a reliable tool for such applications...|$|R
50|$|For instance, {{database}} normalization is {{the process}} of organizing the fields and tables of a relational database to minimize redundancy and dependency. In the field of software security, a common vulnerability is unchecked malicious input. The mitigation for this problem is proper <b>input</b> <b>validation.</b> Before <b>input</b> <b>validation</b> may be performed, the input must be normalized, i.e., eliminating encoding (for instance HTML encoding) and reducing the input data to a single common character set.|$|E
5000|$|With SQL Injection, {{one can use}} {{parameterized}} queries, stored procedures, whitelist <b>input</b> <b>validation,</b> {{and more}} to help mitigate Code Injection problems.|$|E
50|$|Improper <b>input</b> <b>validation</b> or {{unchecked}} {{user input}} {{is a type}} of vulnerability in computer software that may be used for security exploits.|$|E
40|$|Future space {{transportation}} programme reasonable alternatives are considered with {{regard for the}} total risk forecast. The analysis run tool utilizing the methodology of arriving at a decision under uncertainty conditions and a given goals hierarchy, is bound to provide for <b>input</b> data <b>validation,</b> procedures verification and interactive analysis and selection mode. The statement of the problem actuality is demonstrated by the example of forming future Space Transportation Systems (STS) development programme options...|$|R
40|$|In the {{following}} document the equivalent mechanical mass- spring-dashpot {{model and the}} analytical ones calculating hy- drodynamics forces and momenta caused by liquid motion is validated. Models are applied on an upright cylindrical tank {{in the case of}} small perturbations so they can be assumed as linear and their calibration is done both in case of traslational and pitching <b>inputs.</b> The <b>validation</b> is carried out taking into account the differences between model’s and CFD’s result...|$|R
40|$|Suggested fluid {{mechanics}} research {{to be conducted}} in the National Transonic Facility include: wind tunnel calibration; flat plate skin friction, flow visualization and measurement techniques; leading edge separation; high angle of attack separation; shock-boundary layer interaction; submarine shapes; low speed studies of cylinder normal to flow; and wall interference effects. These theoretical aerodynamic investigations will provide empirical <b>inputs</b> or <b>validation</b> data for computational aerodynamics, and increase the usefulness of existing wind tunnels...|$|R
50|$|LDAP {{injection}} is a known {{attack and}} can be prevented by simple measures. All of the client supplied input must be checked/sanitized of any characters that may result in malicious behavior. The <b>input</b> <b>validation</b> should verify the input by checking {{for the presence of}} special characters that {{are a part of the}} LDAP query language, known data types, legal values, etc. White list <b>input</b> <b>validation</b> can also be used to detect unauthorized input before it is passed to the LDAP query.|$|E
50|$|WMLScript is a {{client-side}} {{scripting language}} and {{is similar to}} JavaScript. Just like JavaScript WMLScript is used for tasks such as user <b>input</b> <b>validation,</b> generation of error message and other Dialog boxes etc.|$|E
50|$|Two central {{categories}} of mitigation {{to the problems}} caused by weird machine functionality include <b>input</b> <b>validation</b> within the software and protecting against problems arising from the platform on which the program runs, such as memory errors. <b>Input</b> <b>validation</b> aims to limit the scope and forms of unexpected inputs e.g. through whitelists of allowed inputs, so that the software program itself would not end up in an unexpected state by interpreting the data internally. Equally importantly, secure programming practices such as protecting against buffer overflows make it less likely that input data becomes interpreted in unintended ways by lower layers, such as the hardware on which the program is executed.|$|E
30|$|Sachin Shah, J. Narasimha Teja, & Samit Bhattacharya, [29] - The {{prediction}} {{approach could}} be validated with empirical data involving 57 participants performing 7 touch <b>input</b> tasks. The <b>validation</b> study demonstrates a high prediction accuracy of 90.47 %.|$|R
30|$|Prediction module {{it takes}} as <b>input</b> a sliding <b>{{validation}}</b> {{window of a}} given size (a “prediction horizon” such as the next 24 h) and calculates the validation MAPE (mean absolute percentage error) for each ARIMA model stored in the Repository of Models.|$|R
40|$|Geothermal {{operators}} use complex reservoir engineering {{models to}} design their well fields and production/injection strategies and {{to predict the}} performance of their reservoirs. Collection of in-situ data for <b>input</b> and <b>validation</b> of these models in wells is expensive, and geophysical measurements from the surface or remotely at some distance from boreholes can be cost effective. The Hydrothermal Research Program of DOE is developing techniques to track injected fluid and to monitor the effects of production and injection geothermal fields using geophysical means...|$|R
