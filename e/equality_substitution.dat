6|8|Public
40|$|We {{investigate}} and compare various ways of transforming equality for-mulas to propositional formulas, {{in order to}} be able to solve satisfiability in equality logic by means of satisfiability in propositional logic. We pro-pose <b>equality</b> <b>substitution</b> as a new approach combining desirable properties of earlier methods, we prove its correctness and show its applicability by experiments. ...|$|E
40|$|The E-Resolution {{inference}} principle {{described in}} this paper is a single-inference logic system for the first-order predicate calculus with equality. Special axioms for equality (i. e., axioms for symmetry, reflexivity, transitivity, and substitutivity) {{are not required to}} be added to the original set of clauses. Other advantages of E-Resolution are the relatively small number of intermediate clauses which must be retained in a proof and the distinct possibility that search strategies suitable for Resolution will also be suitable for E-Resolution. Although it is not known whether or not E-Resolution is complete, this topic is currently being investigated by the author. Key terms: automatic theorem-proving, <b>equality</b> <b>substitution,</b> E-Resolution, firstorder predicate calculus with equality, theorem-proving. I...|$|E
40|$|Resolution reasoners, {{when applied}} to set theory problems, {{typically}} suffer from “lack of focus. ” MARS is a program that attempts to rectify this difficulty by exploiting the definition-like character of the set theory axioms. As {{in the case of}} its predecessor, SLIM, it employs a tableau proof procedure based on binary resolution, but MARS IS enhanced by an <b>equality</b> <b>substitution</b> rule and a device for introducing previously proved theorems as lemmas. MARS’s performance compares favorably with that of other existing automated reasoners for this domain. MARS finds proofs for many basic facts about functions, construed as sets of ordered pairs. MARS is being used to attack the homomorphism test problem, the theorem that the composition of two group homomorphisms is a group homomorphism...|$|E
50|$|The let {{expression}} is understandable {{as a natural}} language expression. The let expression represents the substitution of a variable for a value. The substitution rule describes the implications of <b>equality</b> as <b>substitution.</b>|$|R
40|$|This report {{describes}} {{a system which}} maintains canonical expressions for designators under a set of <b>equalities.</b> <b>Substitution</b> is used to maintain all knowledge in terms of these canonical expressions. A partial order on designators, termed the better-name relation, {{is used in the}} choice of canonical expressions. It is shown that with an appropriate better-name relation an important engineering reasoning technique, propagation of constraints, can be implemented as a special case of this substitution process. Special purpose algebraic simplification procedures are embedded such that they interact effectively with the equality system. An electrical circuit analysis system is developed which relies upon constraint propagation and algebraic simplification as primary reasoning techniques. The reasoning is guided by a better-name relation in which referentially transparent terms are preferred to referentially opaque ones. Multiple description of subcircuits are shown to interact strongly with the reasoning mechanism...|$|R
40|$|AbstractA {{model of}} {{computation}} dealing with infinite alphabets is proposed. This model {{is based on}} replacing the <b>equality</b> test by <b>substitution.</b> It {{appears to be a}} natural generalization of the classical Rabin-Scott finite-state automata and possesses many of their closure and decision properties. Also, when restricted to finite alphabets the model is equivalent to finite-state automata...|$|R
40|$|Abstract. This {{article is}} the thirty-second {{of a series}} of {{articles}} discussing various open research problems in automated reasoning. The problem proposed for research asks one to find a variant of the infer-ence rule hyperparamodulation that avoids generating many of the binary paramodulants ordinarily deduced. Key words. Automated reasoning, hyperparamodulation, inference rule, unsolved research problem. Question: What is the appropriate definition of hyperparamodulation that avoids generating all paramodulants? (This question is the ninth of 33 problems proposed for research in [6] and will be referred to as Research Problem 9 throughout this article. All references to sections, chapters, test prob-lems, and such also refer to [6].) An automated reasoning program employing paramodulation [4, 11] treats equality as ‘‘understood’’ or ‘‘built in’’; this inference rule generalizes the usual notion of <b>equality</b> <b>substitution.</b> A reason-ing program using hyperresolution [5] combines a number of small (binary resolution) deduction steps into one. Observing the successes obtained with these inference rules naturally suggested research whose goal was to find an inference rule that would possess the good features of both. The result wa...|$|E
40|$|The {{unification}} of simply typed λ-terms modulo {{the rules of}} ß- and η-conversions is often called 2 ̆ 2 higher-order 2 ̆ 2 unification because of the possible presence of variables of functional type. This kind of unification is undecidable in general and if unifiers exist, most general unifiers may not exist. In this paper, we show that such unification problems can be coded as a query of the logic programming language Lλ in a natural and clear fashion. In a sense, the translation only involves explicitly axiomatizing in Lλ the notions of <b>equality</b> and <b>substitution</b> of the simply typed λ-calculus: {{the rest of the}} unification process can be viewed as simply an interpreter of Lλ searching for proofs using those axioms...|$|R
40|$|We {{consider}} countable so-called rich subsemigroups of (ωω,∘); each such semigroup T gives {{a variety}} CPEA_T that is axiomatizable by a finite schema of equations {{taken in a}} countable subsignature of that of ω-dimensional cylindric-polyadic algebras with <b>equality</b> where <b>substitutions</b> are restricted to maps in T. It is shown that for any such T, A∈ CPEA_T iff A is representable as a concrete set algebra of ω-ary relations. The operations in the signature are set-theoretically interpreted like in polyadic equality set algebras, but such operations are relativized to a union of cartesian spaces that are not necessarily disjoint. This {{is a form of}} guarding semantics. We show that CPEA_T is canonical and atom-canonical. Imposing an extra condition on T, we prove that atomic algebras in CPEA_T are completely representable and that CPEA_T has the super amalgamation property. If T is rich and finitely represented, it is shown that CPEA_T is term definitionally equivalent to a finitely axiomatizable Sahlqvist variety. Such semigroups exist. This can be regarded as a solution to the central finitizability problem in algebraic logic for first order logic with equality if we do not insist on full fledged commutativity of quantifiers. The finite dimensional case is approached from the view point of guarded and clique guarded (relativized) semantics of fragments of first order logic using finitely many variables. Both positive and negative results are presented...|$|R
40|$|This paper aims at {{supporting}} the same idea. Our justification {{of the claim}} is, however, {{quite different from the}} one offered by Girard. The latter, cf. [9], translates every sequent of the usual propositional logic (classical, or intuitionistic) into a sequent of commutative linear logic. Then one shows that a sequent can be proved classically, resp., intuitionistically, iff its translation can be proved linearly. By contrast, our embedding only works on the level of predicate logic. We show that every theory of classical logic of predicates with equality lives as a theory within a non-commutative intuitionistic substructural logic: the logic of predicates with <b>equality</b> and explicit <b>substitution.</b> Also, our explanation does not require to call upon so called exponentials [...] - the modalities introduced by Girard just to facilitate his embedding. Our construction is also different from other proposals to move substitutions from the level of metatheory to the theory of logic, cf. [16]. They add substitutions as modal constructions. Here, substitutions are considered new atomic formulae...|$|R
40|$|We {{experiment}} {{a method}} for representing a concurrent object calculus in the Calculus of Inductive Constructions. Terms are first defined in de Bruijn style, then names are re-introduced in binders. The terms of the calculus are formalized in the mechanized logic by suitable subsets of the de Bruijn terms; namely those whose de Bruijn indices are relayed beyond the scene. The ff-equivalence relation is the Leibnitz <b>equality</b> and the <b>substitution</b> functions can de defined as sets of partial rewriting rules on these terms. We prove induction schemes for both the terms and some properties of the calculus which internalize the renaming of bound variables. We show that, despite that the terms which formalize the calculus are not generated by a last fixed point relation, we can prove the desire inversion lemmas. We formalize the computational part of the semantic and a simple type system of the calculus. At least, we prove a subject reduction theorem and see that the specications and proofs have the nice feature of not mixing de Bruijn technical manipulations with real proofs...|$|R
40|$|Abstract Background Many {{recent studies}} that relax the {{assumption}} of independent evolution of sites have done so {{at the expense of}} a drastic {{increase in the number of}} substitution parameters. While additional parameters cannot be avoided to model context-dependent evolution, a large increase in model dimensionality is only justified when accompanied with careful model-building strategies that guard against overfitting. An increased dimensionality leads to increases in numerical computations of the models, increased convergence times in Bayesian Markov chain Monte Carlo algorithms and even more tedious Bayes Factor calculations. Results We have developed two model-search algorithms which reduce the number of Bayes Factor calculations by clustering posterior densities to decide on the <b>equality</b> of <b>substitution</b> behavior in different contexts. The selected model's fit is evaluated using a Bayes Factor, which we calculate via model-switch thermodynamic integration. To reduce computation time and to increase the precision of this integration, we propose to split the calculations over different computers and to appropriately calibrate the individual runs. Using the proposed strategies, we find, in a dataset of primate Ancestral Repeats, that careful modeling of context-dependent evolution may increase model fit considerably and that the combination of a context-dependent model with {{the assumption of}} varying rates across sites offers even larger improvements in terms of model fit. Using a smaller nuclear SSU rRNA dataset, we show that context-dependence may only become detectable upon applying model-building strategies. Conclusion While context-dependent evolutionary models can increase the model fit over traditional independent evolutionary models, such complex models will often contain too many parameters. Justification for the added parameters is thus required so that only those parameters that model evolutionary processes previously unaccounted for are added to the evolutionary model. To obtain an optimal balance between the number of parameters in a context-dependent model and the performance in terms of model fit, we have designed two parameter-reduction strategies and we have shown that model fit can be greatly improved by reducing the number of parameters in a context-dependent evolutionary model. </p...|$|R

