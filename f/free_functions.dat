134|1248|Public
5000|$|UFCS, {{a way to}} use <b>free</b> <b>functions</b> as {{extension}} methods {{provided in}} the D programming language ...|$|E
5000|$|Since {{there is}} one {{condition}} on the three , there should only be two <b>free</b> <b>functions,</b> which Misner chooses to be , defined as ...|$|E
50|$|An ATL {{program is}} {{composed}} of a header, {{of a set of}} side-effect <b>free</b> <b>functions</b> called helpers and of a set of rules.|$|E
40|$|Automated theorem provers {{might be}} {{improved}} {{if they are}} enabled to reuse previously computed proofs. Our approach for reuse is based on generalizing computed proofs by replacing function symbols with function variables. This yields a schematic proof which is instantiated subsequently for obtaining proofs of new, similar conjectures. Our reuse method, which requires no human support, demands two steps of proof adaptation, viz. solution of so-called <b>free</b> <b>function</b> variables and patching of completely instantiated proofs. We develop algorithms for solving <b>free</b> <b>function</b> variables and for computing patched proofs and demonstrate their usefulness with several examples...|$|R
40|$|We {{propose a}} new type of claw <b>free</b> <b>function</b> family, a pseudo self-definable claw <b>free</b> <b>function</b> family, which provides, by Damgard's construction, a {{collision}} intractable hash function family that is more suitable in several cryptographic applications such as digital signature, bit commitment, etc. We give an example of self-definable claw <b>free</b> <b>function</b> families based on the hardness of some number theoretic problem. We also show some concrete situation where our claw free notion is indeed necessary. 1. Introduction One-way hash functions are widely used in many cryptographic applications such as digital signature, bit commitment, etc. In some applications, one-wayness is insufficient, and we need some additional requirements such as "collision intractability". In [Dam 88 b], Damgard introduced the notion of "claw free", and showed a way to construct a collision intractable family of hash functions from a family of claw free permutations. He also showed [Dam 88 a, Dam 88 b] some examples [...] ...|$|R
40|$|The {{concept of}} limb salvage led to {{increased}} demand for more complex and sophisticated reconstructive options to achieve better functional and cosmetic outcome. Reconstruction of the total or partial loss of quadriceps muscle after soft tissue sarcomas excision with <b>free</b> <b>functioning</b> latissimus dorsi muscle transfer had become more popular in the last years. PATIENTS AND METHODS: Between November 1993 and October 2004, 11 patients with average age 45. 5 years underwent excision of quadriceps muscle followed by simultaneous reconstruction with <b>free</b> <b>functioning</b> latissimus dorsi muscle. There were six men and five women. The tumors were high grade in 90. 9...|$|R
50|$|In {{the context}} of partial {{differential}} equations, constraint counting is a crude but often useful way of {{counting the number of}} <b>free</b> <b>functions</b> needed to specify a solution to a partial differential equation.|$|E
50|$|NSPR {{provides}} API {{to perform}} the basic malloc, calloc, realloc and <b>free</b> <b>functions.</b> Depending on the platform, the functions may be implemented almost entirely in the NSPR runtime or simply shims that call immediately into the host operating system's offerings.|$|E
5000|$|A {{function}} [...] {{such that}} [...] for all [...] is called fixed point free. The fixed-point theorem shows that no computable function is fixed point free, {{but there are}} many non-computable fixed-point <b>free</b> <b>functions.</b> Arslanov's completeness criterion states that the only recursively enumerable Turing degree that computes a fixed point free function is 0&acute;, the degree of the halting problem (Soare 1987, p. 88) ...|$|E
40|$|This {{article is}} devoted to the study of several algebras which are related to {{symmetric}} functions, and which admit linear bases labelled by various combinatorial objects: permutations (<b>free</b> quasi-symmetric <b>functions),</b> standard Young tableaux (<b>free</b> symmetric <b>functions)</b> and packed integer matrices (matrix quasi-symmetric <b>functions).</b> <b>Free</b> quasi-symmetric <b>functions</b> provide a kind of noncommutative Frobenius characteristic for a certain category of modules over the 0 -Hecke algebras. New examples of indecomposable $H_n(0) $-modules are discussed, and the homological properties of $H_n(0) $ are computed for small $n$. Finally, the algebra of matrix quasi-symmetric functions is interpreted as a convolution algebra. Comment: 46 pages, LaTex, epsf macro...|$|R
40|$|Abstract 1 We {{investigate}} {{the improvement of}} theorem provers by reusing previously computed proofs. A proof of a conjecture is generalized by replacing function symbols with function variables. This yields a schematic proof of a schematic conjecture which is instantiated subsequently for obtaining proofs of new, similar conjectures. Our reuse method requires solving so-called <b>free</b> <b>function</b> variables, i. e. variables which cannot be instantiated by matching the schematic conjecture with a new conjecture. We develop an algorithm for solving <b>free</b> <b>function</b> variables by combining the techniques of symbolic evaluation and second-order matching. Heuristicsfor controlling the algorithm are presented, and several examples demonstrate their usefulness. We also show how our reuse proposal supports the discovery of useful lemmata. ...|$|R
40|$|We {{develop a}} theory of {{holomorphic}} functions in several noncommuting (free) variables and thus {{provide a framework for}} the study of arbitrary n-tuples of operators. The main topics are the following: <b>Free</b> holomorphic <b>functions</b> and Hausdorff derivations; Cauchy, Liouville, and Schwartz type results for free holomorphic functions; Algebras of free holomorphic functions; Free analytic functional calculus and noncommutative Cauchy transforms; Weierstrass and Montel theorems for free holomorphic functions; <b>Free</b> pluriharmonic <b>functions</b> and noncommutative Poisson transforms; Hardy spaces of <b>free</b> holomorphic <b>functions.</b> Comment: 51 page...|$|R
5000|$|It {{has been}} {{proposed}} (as of 2016) for addition to C++ by Bjarne Stroustrup and Herb Sutter, to reduce the ambiguous decision between writing <b>free</b> <b>functions</b> and member functions, to simplify the writing of templated code. Many programmers are tempted to write member-functions to get {{the benefits of the}} member-function syntax - e.g. [...] "dot-autocomplete" [...] to list member functions, however this leads to excessive coupling between classes.|$|E
5000|$|An {{example of}} Type 1 is SVC 10, used for both GETMAIN and FREEMAIN, which allocates {{an area of}} main storage to a task and to {{subsequently}} release it, respectively. SVC 10 is known informally as [...] "REGMAIN" [...] as it exchanges parameters through general purpose registers, only, and can both GET and FREE storage. SVC 4 and SVC 5 can perform similar GET and <b>FREE</b> <b>functions,</b> respectively, but exchange parameters through in-storage parameter lists.|$|E
5000|$|In the C and C++ {{programming}} languages, subprograms are termed functions (further {{classified as}} member functions when {{associated with a}} class, or <b>free</b> <b>functions</b> when not). These languages use the special keyword [...] to indicate that a function takes no parameters (especially in C) or does not return any value. Note that C/C++ functions can have side-effects, including modifying any variables whose addresses are passed as parameters (i.e., passed by reference). Examples: ...|$|E
40|$|AbstractIn this work, a double-well {{network model}} (DWNM) is {{presented}} for generating a coarse-grained <b>free</b> energy <b>function</b> {{that can be}} used to study the transition between reference conformational states of a protein molecule. Compared to earlier work that uses a single, multidimensional double-well potential to connect two conformational states, the DWNM uses a set of interconnected double-well potentials for this purpose. The DWNM <b>free</b> energy <b>function</b> has multiple intermediate states and saddle points, and is hence a “rough” free energy landscape. In this implementation of the DWNM, the <b>free</b> energy <b>function</b> is reduced to an elastic-network model representation near the two reference states. The effects of <b>free</b> energy <b>function</b> roughness on the reaction pathways of protein conformational change is demonstrated by applying the DWNM to the conformational changes of two protein systems: the coil-to-helix transition of the DB-loop in G-actin and the open-to-closed transition of adenylate kinase. In both systems, the rough <b>free</b> energy <b>function</b> of the DWNM leads to the identification of distinct minimum free energy paths connecting two conformational states. These results indicate that while the elastic-network model captures the low-frequency vibrational motions of a protein, the roughness in the <b>free</b> energy <b>function</b> introduced by the DWNM can be used to characterize the transition mechanism between protein conformations...|$|R
50|$|Rinzai Zen {{is marked}} by the {{emphasis}} it places on kensho ("seeing one's true nature") as the gateway to authentic Buddhist practice, and for its insistence on many years of exhaustive post-kensho training to embody the <b>free</b> <b>functioning</b> of wisdom within the activities of daily life.|$|R
40|$|SPASS+T is an {{extension}} of the superposition-based theorem prover SPASS that allows us to enlarge the reasoning capabilities of SPASS using an arbitrary SMT procedure for arithmetic and <b>free</b> <b>function</b> symbols as a black-box. We discuss the architecture of SPASS+T and the capabilities, limitations, and applications of such a combination...|$|R
5000|$|Psychophysics Toolbox Version 3 (PTB-3) is a {{collection}} of <b>free</b> <b>functions</b> for MATLAB or GNU Octave intended for use by neuroscience and vision researchers. It synthesizes and shows accurately controlled visual and auditory stimuli and interacts with the observer. It has [...] an active forum, and many citations. PTB-3 is based on the Psychophysics Toolbox Version 2 (PTB-2) but its MATLAB extensions (in C) were rewritten to be more modular and use OpenGL. Psychtoolbox is offered alongside many alternative toolboxes for programming Psychophysics and Psychology experiments, such as PsychJava for Java, or PsychoPy for Python.|$|E
5000|$|The general {{notion of}} claw-free {{permutation}} (not necessarily trapdoor) was further studied by Ivan Damgård in his PhD thesis The Application of Claw <b>Free</b> <b>Functions</b> in Cryptography (Aarhus University, 1988), where he showed how to construct Collision Resistant Hash Functions from claw-free permutations. [...] The notion of claw-freeness {{is closely related}} to that of collision resistance in hash functions. The distinction is that claw-free permutations are pairs of functions in which it is hard to create a collision between them, while a collision-resistant hash function is a single function in which it's hard to find a collision, i.e. a function H is collision resistant if it's hard to find a pair of distinct values x,y such that ...|$|E
50|$|Programming language-independent vs language-dependent: Most {{high-level}} languages {{share common}} programming constructs and abstractions: decision (if, switch, case), looping (for, while, repeat.. until, do.. while), and encapsulation (structures, objects). Thus similar optimization techniques {{can be used}} across languages. However, certain language features make some kinds of optimizations difficult. For instance, the existence of pointers in C and C++ {{makes it difficult to}} optimize array accesses (see alias analysis). However, languages such as PL/1 (that also supports pointers) nevertheless have available sophisticated optimizing compilers to achieve better performance in various other ways. Conversely, some language features make certain optimizations easier. For example, in some languages functions are not permitted to have side effects. Therefore, if a program makes several calls to the same function with the same arguments, the compiler can immediately infer that the function's result need be computed only once. In languages where functions are allowed to have side effects, another strategy is possible. The optimizer can determine which function has no side effects, and restrict such optimizations to side effect <b>free</b> <b>functions.</b> This optimization is only possible when the optimizer has access to the called function.|$|E
50|$|When the dynamically-allocated {{memory is}} no longer needed, it should be {{released}} back to the run-time system. This is done with {{a call to the}} <b>free</b> <b>function.</b> It takes a single parameter: a pointer to previously allocated memory. This is the value that was returned by a previous call to malloc.|$|R
5000|$|... the Helmholtz <b>free</b> energy <b>function</b> (named after Hermann von Helmholtz) ...|$|R
5000|$|... 1 Allocated and deallocated {{using the}} malloc (...) and <b>free</b> (...) library <b>functions.</b>|$|R
40|$|We {{construct}} an infinite family of one-dimensional equilibrium solutions for purely magnetized quantum plasmas {{described by the}} quantum hydrodynamic model. The equilibria depends on the solution of a third-order ordinary differential equation, which is written in terms of two <b>free</b> <b>functions.</b> One of these <b>free</b> <b>functions</b> is associated to the magnetic field configuration, while the other is specified by an equation of state. The case of a Harris sheet type magnetic field, together with an isothermal distribution, is treated in detail. In contrast to the classical Harris sheet solution, the quantum case exhibits an oscillatory pattern for the density. Comment: 2 figure...|$|E
40|$|We {{consider}} a perfectly homogeneous, isotropic and spatially flat universe which undergoes a sudden phase transition producing topological defects. We assume that these defects form a coherent network which scales like the background density during the radiation and matter dominated eras, and describe {{them in terms}} of a few <b>free</b> <b>functions.</b> We carefully model the loss of scaling invariance during the transition from radiation to matter dominated era. We choose a simple set for the <b>free</b> <b>functions,</b> compute the microwave background temperature anisotropies generated by such a network, and compare our results to previous calculations. Comment: 30 pages, submitted to Phys. Rev. D. On CDROM of the Proceedings of the XIXth Texas Symposium (04 / 26...|$|E
40|$|We {{prove the}} {{existence}} of a class of perfect-fluid cosmologies with polarised Gowdy symmetry and a Kasner-like singularity. These solutions of the Einstein equations depend on four <b>free</b> <b>functions</b> of one space coordinate and are constructed by solving a system of Fuchsian equations. Comment: 8 pages, LaTe...|$|E
5000|$|Muslims (<b>FREE)</b> small <b>function</b> Hall. only misc {{expenses}} {{need to be}} paid ...|$|R
40|$|In {{this paper}} we develop {{a theory of}} <b>free</b> {{holomorphic}} <b>functions</b> on noncommutative Reinhardt domains generated by positive regular <b>free</b> holomorphic <b>functions</b> in n noncommuting variables. We show that the free biholomorphic classification of these domains {{is the same as}} the classification, up to unital completely isometric isomorphisms, of the corresponding noncommutative domain algebras. Comment: 40 pages, corrected typo...|$|R
5000|$|Because of the Uniform Function Call Syntax (UFCS) in D, method {{chaining}} {{is particularly}} easy. If you write x.toInt (...)and {{the type of}} [...] {{does not provide a}} [...] member function, then the compiler looks for a <b>free</b> <b>function</b> of the form toInt(x);This enables chaining methods in a fluent way like this x.toInt (...) [...]toString(format);instead of thistoString(toInt(x),format); ...|$|R
40|$|The {{well known}} Douglas Lemma {{says that for}} {{operators}} A,B on Hilbert space that AA^*-BB^*≽ 0 implies B=AC for some contraction operator C. The result carries over directly to classical operator-valued Toeplitz operators by simply replacing operator by Toeplitz operator. <b>Free</b> <b>functions</b> generalize the notion of free polynomials and formal power series and trace back {{to the work of}} J. Taylor in the 1970 s. They are of current interest, in part because of their connections with free probability and engineering systems theory. For <b>free</b> <b>functions</b> a and b on a free domain defined free polynomial inequalities, a sufficient condition on the difference aa^*-bb^* to imply the existence a free function c taking contractive values on such that a=bc is established. The connection to recent work of Agler and McCarthy and their free Toeplitz Corona Theorem is exposited. Comment: 12 Page...|$|E
40|$|In {{this paper}} we {{approach}} the problems of rounding errors in geometric algorithms. Particularly, {{we are interested in}} geometric algorithms used by TerraLib a spatial component library used to construct small GIS. We describe some techniques that were used to (re) implement and adapt some TerraLib functions to produce robust (roundoff error <b>free)</b> <b>functions.</b> Pages: 379 - 38...|$|E
40|$|Building on {{previous}} work, we explore the parameter space of general <b>free</b> <b>functions</b> in non-relativistic modified gravity theories motivated by k-essence and other scalar-tensor theories. Using a few proposed tests, {{we aim to}} update Solar System based constraints on these ideas in line with previous theories and suggest their utility in constraining modification to GR, potentially even being able to test k-essence type theories. Comment: 8 page...|$|E
40|$|Combining commoving {{coordinates}} {{with the}} cosmic rest frame {{leads to a}} unique solution of Einstein's equations for a spherically symmetric inhomogeneous universe with zero pressure dust. This solution corresponds to a special Datt-Ruban solution in the LTB model. It contains one <b>free</b> <b>function.</b> As a consequence any Hubble diagram can be represented exactly without introducing a cosmological constant. Comment: 21 pages, no figur...|$|R
2500|$|The {{negative}} logarithm of {{the probability}} of any field configuration H is the <b>free</b> energy <b>function</b> ...|$|R
5000|$|For {{isothermal}} elastic processes, {{the strain}} energy density function {{relates to the}} Helmholtz <b>free</b> energy <b>function</b> , ...|$|R
