24|2665|Public
50|$|The first node {{is called}} Node <b>I.</b> <b>Node</b> I has a public {{component}} Ki {{and a private}} component i. The second node is called Node J. Node J has a public component Kj and a private component j.|$|E
5000|$|In time t {{there are}} [...] nodes If the new coming node {{does not have}} the {{information}} about the global network, it will link to <b>i</b> <b>node</b> in the local system with the probability [...] Thus, the dynamics may be written as follows: ...|$|E
50|$|Configuring a node is done {{by writing}} to registers. Each (Level <b>I)</b> <b>node</b> {{provides}} access to 256 registers. The highest 128 registers are reserved for VSCP core functions. In these 128 registers we find items such as node GUID, Nickname, MDF and a paging register. The lower 128 registers are free for application specific use. If 128 registers are not sufficient {{then there is a}} 16bit paging possibility. This allows for 65536 x 128 8bit registers for application use.Writing/reading these registers is done using CLASS 0 events. Class 0 events are VSCP protocol functionality messages intended for configuring and managing nodes.|$|E
30|$|Search out the {{shortest}} path’s tail <b>node</b> <b>i’s</b> neighbor <b>nodes</b> and calculate distance from S to <b>node</b> <b>i’s</b> neighbor <b>nodes.</b>|$|R
5000|$|We {{model the}} process {{introduced}} above {{on a network}} in discrete time, that is, we can model it as a DTMC. Say we have a network with N nodes, then we can define [...] to be the state of <b>node</b> <b>i</b> at time t. Then [...] is a stochastic process on [...] At a single moment, some <b>node</b> <b>i</b> and <b>node</b> j interact with each other, {{and then one of}} them will change its state. Thus we define the function [...] so that for [...] in , is when the state of network is , <b>node</b> <b>i</b> and <b>node</b> j interact with each other, and one of them will change its state. The transition matrix depends on the number of ties of <b>node</b> <b>i</b> and <b>node</b> j, as well as the state of <b>node</b> <b>i</b> and <b>node</b> j. For any , we try to find [...] If <b>node</b> <b>i</b> is in state <b>I</b> and <b>node</b> j is in state S, then if <b>node</b> <b>i</b> is in state <b>I</b> and <b>node</b> j is in state <b>I,</b> then if <b>node</b> <b>i</b> is in state <b>I</b> and <b>node</b> j is in state R, then [...] For all other , [...] The procedure on a network is as follows: ...|$|R
5000|$|As defined, D(i,j) is {{a measure}} of the average {{influence}} of node j on the directed paths from <b>node</b> <b>i</b> to all other nodes k. The node structural dependencies define a dependency matrix D whose (i,j) element is the dependency of <b>node</b> <b>i</b> on <b>node</b> j, or the influence of node j on <b>node</b> <b>i.</b> It is important to note that the dependency matrix D is nonsymmetrical - [...] since the influence of node j on <b>node</b> <b>i</b> is not equal to the influence of <b>node</b> <b>i</b> on <b>node</b> j.|$|R
3000|$|... is 1 {{if there}} exists an RS m' that {{satisfies}} the following conditions: (<b>i)</b> <b>node</b> m {{is within the}} transmission range of m'; (ii) [...]...|$|E
3000|$|... —the {{difference}} between the experimental and theoretical deformation values in the <b>i</b> <b>node.</b> For the functional minimization we use the quasi-Newton method of linear search. The iteration process stops when the current increment of the minimization parameter becomes less than 10 − 6.|$|E
30|$|When {{feedback}} node j requests {{a specific}} service s, the managed node M_j {{searches for the}} trust node which can provide service s. If there exists such a node, say node <b>i,</b> <b>node</b> j requests the service from node i. If not, M_j searches for the recommendation node k. Then, node k recommends a service node i with the maximum trust degree that can provide service s to node j. If there does not exist a recommendation node k, the transaction fails.|$|E
30|$|Node {{weighting}} factor w_N = <b>i</b> for <b>node</b> <b>i</b> describes <b>node</b> <b>i’s</b> activity, that is, {{the probability of}} forwarding an event of influence to neighbouring nodes. Similarly, link {{weighting factor}}s w_L = i,j are additional factors needed {{in cases where the}} influence spreading between <b>nodes</b> <b>i</b> and j are not equal for all the directed links between nodes of the network.|$|R
5000|$|Next, {{we define}} the total {{influence}} of node j on <b>node</b> <b>i,</b> or the dependency D(i,j) of <b>node</b> <b>i</b> on <b>node</b> j to be: ...|$|R
30|$|Let d_ij be the {{distance}} of <b>node</b> <b>i</b> and <b>node</b> j. Let B(k)=A^k, where A is the adjacency matrix of graph G and k is a natural number. Let B_ij(k) be the element of the matrix B(k). Then B_ij(k) {{is the number of}} walks with length k between <b>node</b> <b>i</b> and <b>node</b> j. If B_ij(k)= 0, there is no walk with length k between <b>nodes</b> <b>i</b> and j.|$|R
30|$|In Eqs. (4), (5), and (6), {{the trust}} {{parameter}} α and β {{can be interpreted}} respectively as the observed number of positive outcomes and the observed number of negative outcomes regarding a certain transaction. For example, in a packet delay transaction, node i asks node j to transmit its data packets; after 10 requests from node <b>i,</b> <b>node</b> j has successfully transmitted 5 packets and failed 4 packets, then the trust parameters about node j can be expressed as α+= 5 and β+= 4 which are observed and recorded by node i.|$|E
40|$|Antenna {{characteristics}} and propagation are of fundamental {{importance to the}} coverage, capacity and service quality of all wireless communication systems. This paper presents short-range narrowband propagation measurements at 2. 445 GHz for sensor network applications in an indoor environment. The effect of sensor node location on a wall has been determined {{for a pair of}} linearly polarised rectaxial antennas and a pair of ceramic patch antennas. Propagation loss has been measured as a function of (<b>i)</b> <b>node</b> separation (i. e. link length), (ii) node drop (i. e. vertical displacement of nodes below the ceiling) and (iii) node height (i. e. the perpendicular displacement of the nodes from the wall surface). It is observed that there is no significant effect of wall offset. In addition, the path loss exponent n generally increases with decreasing node drop...|$|E
40|$|This paper {{presents}} {{the impact of}} floral branches on the production of seeds and fruit The first and second nodes {{were the most important}} for yield. 1000 seed mass ranged from 2. 82 g in variety Dunavski rubin, to 3. 27 g in variety Novosadski jabučar. All genotypes showed significant differences in 1000 seed mass on <b>I</b> <b>node.</b> Mass of 1000 seeds in Novosadski jabučar and line V 14 decreased from I to IV node, while in Dunavski rubin and Pegaz highest mass were on III node. Seed yield per plant ranged from 5. 2 - 6. 6 g. Total seed yield/ha ranged from 147 kg/ha (Pegaz) to 186 kg/ha (Novosadski jabučar). Very important parameter in tomato seed production is mass of fruit needed for 1 kilogram of dry seeds. Novosadski jabučar requires 247 kg of fruit, Pegaz 324 kg, line V 14 332 kg, and Dunavski rubin 430 kg...|$|E
3000|$|... is {{the current}} energy <b>i</b> of <b>node,</b> einit is the initial energy <b>i</b> of <b>node,</b> and β is the {{regulatory}} factor.|$|R
40|$|Abstract—Increasing {{penetration}} of distributed resources have enabled {{the development of}} the microgrid concept. Similar to traditional generators, microgrids can participate in the energy market to achieve technical, economical and environmental ben-efits. In order to facilitate the participation in energy markets, microgrid operators {{need to be aware of}} the full capability of the microgrids. This paper presents a systematic approach for developing a capability chart for a grid-tied microgrid which represents the active and reactive power capability at the grid supply point. Capability charts have been developed for two different microgrids and the impacts of different modelling aspects have been analysed under several scenarios. Furthermore, operating points of the capability charts have been verified using time-domain simulations. Index Terms—Capability chart, distribution system, grid-tied microgrid, optimisation. LIST OF SYMBOLS δi Phase of the voltage at <b>node</b> <b>i</b> φik Phase of the line admittance between <b>node</b> <b>i</b> and <b>node</b> k∑ Ploss Total active power losses in the microgrid Iik Magnitude of the current between <b>node</b> <b>i</b> and <b>node</b> k Pgi Active power output from the generator at <b>node</b> <b>i</b> PGSP Active power through the grid supply point Pi Active power through <b>node</b> <b>i</b> Pli Active power demand of the load at <b>node</b> <b>i</b> Qgi Reactive power output of the generator at <b>node</b> <b>i</b> Qi Reactive power through <b>node</b> <b>i</b> Qli Reactive power demand of the load at <b>node</b> <b>i</b> Str Rated apparent power of the transformer Vi Magnitude of the voltage at <b>node</b> <b>i</b> Yik Magnitude of the line admittance between <b>node</b> <b>i</b> and <b>node</b> k <b>I...</b>|$|R
5000|$|The mean first {{passage time}} from <b>node</b> <b>i</b> to <b>node</b> j is the {{expected}} number of steps it takes for the process to reach node j from <b>node</b> <b>i</b> for the first time: ...|$|R
40|$|Given {{a complex}} {{biological}} or social network, how many clusters {{should it be}} decomposed into? We define the distance d_i,j from node i to node j as {{the average number of}} steps a Brownian particle takes to reach j from <b>i.</b> <b>Node</b> j is a global attractor of i if d_i,j≤ d_i,k for any k of the graph; it is a local attractor of i, if j∈ E_i (the set of nearest-neighbors of i) and d_i,j≤ d_i,l for any l∈ E_i. Based on the intuition that each node should have a high probability {{to be in the same}} community as its global (local) attractor on the global (local) scale, we present a simple method to uncover a network's community structure. This method is applied to several real networks and some discussion on its possible extensions is made. Comment: 5 pages, 4 color-figures. REVTeX 4 format. To appear in PR...|$|E
40|$|A node {{splitting}} {{network that}} classifies binary patterns by Hamming distance {{has been presented}} in [5]. There {{it has been shown}} that the node splitting training algorithm can produce a network with much fewer connections than Lippmann's Hamming net [9]. Now this network (NOSDIC) has been further developed to process integer values. For a pattern recognition problem in mobile radio communications traces of quantized signal levels have been used as input to the NOSDIC network. In this application the new version taking integer input vectors has resulted in a much smaller and more efficient network. <b>I.</b> <b>Node</b> Splitting Network for Integer Values The Node Splitting Distance Classifying Network (NOSDIC) originally designed for binary patterns [5] has been extended to take integer input values. Basically, the network consists of two layers of neurons whose number grows during training. In the first layer, neurons take their input from selected pattern components and partially compute the di [...] ...|$|E
40|$|This is {{an article}} {{reporting}} the largest phyllodes tumor {{and the role}} of radiotherapy in patients of phyllodes tumor of breast, based on Medline search for articles in English language using keywords “role of radiotherapy in phyllodes tumor of breast”. 32  years female presented with a lump in right breast since last 4  months. This was the second recurrence of similar lump in last 6  years. Biopsy from the lump proved to be cystosarcoma phyllodes. Radical Mastectomy with level <b>I</b> <b>node</b> sampling and reconstruction with Latissimus Dorsi Myocutaneous flap was done as a curative procedure. The tumor measured exactly to be 50 [*]×[*] 25. 2 [*]×[*] 16. 4  cm in size and 15  kg in weight. Proliferation markers like Ki- 67 and p 53 were in the range of 1 - 2 % and 3 - 4 % respectively. Histopathological diagnosis of the tumor was borderline phyllodes tumor. Patient had an uneventful postoperative course and is presently on three monthly follow up since 1  year...|$|E
30|$|If d_ij=k, {{there exists}} {{at least one}} path with length k from <b>node</b> <b>i</b> to <b>node</b> j. Since a path of a graph is a walk between two nodes without repeating nodes, there exists at least one walk with length k between the <b>node</b> <b>i</b> and the <b>node</b> j. So B_ij(k) 0.|$|R
3000|$|... {{corresponds}} to {{the average number of}} nodes reached in a network with N - <b>i</b> <b>nodes</b> and can be recursively computed in the same way.|$|R
3000|$|... d_ijt is the {{shortest}} distance or time from <b>node</b> <b>i</b> to <b>node</b> j in period t; N_it set of sites which can cover <b>node</b> <b>i</b> in period t; h_it demand weight on <b>node</b> <b>i</b> in period t;P_t number of facilities operational in period t.x_jt—if a facility is operating at site j in period t, set x_jt = 1, otherwise, set x_jt = 0; Y_it—if a facility is operating at <b>node</b> <b>i</b> in period t, set Y_it = 1, otherwise, set Y_it = 0.|$|R
40|$|The {{movement}} operation Verb Second {{moves the}} finite verb from its base-generated position in VP to C via the <b>I</b> <b>node</b> within the Chomsky (1986) framework. As the finite verb and the complementiser are in complementary distribution, the above predicts that, contrary to fact, Verb Second {{is not possible}} in embedded clauses. However, in Frisian and Swedish Verb Second does occur in embedded clauses. This entails that a lexical complementiser does not always prevent a finite verb from undergoing Verb Second. 'The aim {{of this paper is}} to provide a survey of Old English and Middle English root clauses particularly with respect to Verb Second. Old English does not strictly conform to Verb Second in declarative root clauses. In Old English finite verbs also occur in first position and in third position in declarative root clauses. A comparison with Icelandic data will be provided as this language displays all three verb placements in declarative head main clauses as well...|$|E
40|$|Anycast is an {{important}} way of communication for Mobile Ad hoc Networks (MANETs) in terms of resources, robustness and efficiency for replicated service applications. Most of the anycast routing protocols for MANETs select unstable and congested intermediate nodes, thereby causing frequent path failures and packet losses. We propose Node movement Stability and Congestion aware Anycast Routing scheme in MANETs (NSCAR) that employs two models, namely (<b>i)</b> <b>Node</b> Movement Stability Model To Identify Stable Nodes, and (ii) Congestion Model That Considers Congestion Aware Parameters Like Channel Load And Buffer Occupancy. These models and Dynamic Source Routing (DSR) protocol {{are used in the}} route discovery process to select nearest k-servers that facilitate creation of stable paths from designated client to one of the nearest servers. A server among k-servers is selected based on route stability, channel load, hops, and server load. The simulation results indicate that proposed NSCAR demonstrates reduction in control overheads, improvement in Packet Delivery Ratio (PDR) and reduction in end-to-end delays compared to existing methods such as flooding and load balanced service discovery...|$|E
40|$|Energy {{harvesting}} (EH) is {{a promising}} technology for realizing energy efficient wireless networks. In this paper, we utilize the ambient RF energy, particularly interference from neighboring transmissions, to replenish the batteries of the EH enabled nodes. However, RF energy harvesting imposes new challenges into {{the analysis of}} wireless networks. Our objective in this work is to investigate {{the performance of a}} slotted Aloha random access wireless network consisting of two types of nodes, namely Type I which has unlimited energy supply and Type II which is solely powered by an RF energy harvesting circuit. The transmissions of a Type <b>I</b> <b>node</b> are recycled by a Type II node to replenish its battery. We characterize an inner bound on the stable throughput region under half-duplex and full-duplex energy harvesting paradigms {{as well as for the}} finite capacity battery case. Additionally, we analyze the case where RF energy harvesting serves as a backup for an unlimited energy source. We present numerical results that validate our analytical results, and demonstrate their utility for the analysis of the exact system...|$|E
30|$|Proof: This is {{directly}} obtained by considering Equation (2). Replacing the hop-distance on that equation by two values, i 1 and i 2, where i 1 [*]>[*]i 2, the estimated error is bigger for <b>node</b> <b>i</b> 1 than for <b>node</b> <b>i</b> 2. Therefore, <b>node</b> <b>i</b> 1 demands more synchronization processes.|$|R
3000|$|... {{denote the}} probabilities for <b>node</b> <b>i</b> and <b>node</b> j {{bringing}} no interference to PU base station. The derivation of [...]...|$|R
3000|$|... [...]. H(i) {{represents}} {{the number of}} children <b>node</b> <b>i</b> has, and <b>node</b> j belongs to the set I 1 [*]−[*]hop, which contains all children of <b>node</b> <b>i,</b> one-hop away from it.|$|R
40|$|Durra is a {{language}} designed {{to support the}} construction of distributed applications using concurrent, coarse-grain tasks running on networks of heterogeneous processors. An application written in Durra describes the tasks to be instantiated and executed as concurrent processes, the types of data to be exchanged by the processes, and the intermediate queues required to store the data as they move from producer to consumer processes. This report describes an experiment in implementing a command, control, communications and intelligence (C 3 <b>I)</b> <b>node</b> using reusable components. The experiment involves writing task descriptions and type declarations for {{a subset of the}} TRW testbed, a collection of C 3 I software modules developed by TRW Defense Systems Group. The experiment illustrates the development of a typical Durra application. This is a three-step process: first, a collection of tasks (programs) is designed and implemented (these are the testbed programs); second, a collection of task descriptions corresponding to the task implementations is written in Durra, compiled, and stored in a library; and finally, an application description is written in Durra and compiled, resulting in a set of resource allocation and scheduling commands to be interpreted at runtime...|$|E
40|$|Rift fault {{networks}} can be complex, {{particularly those}} developed by multiple periods of non-coaxial extension, comprising non-colinear faults with many interactions. Thus, topology, rather than simple geometry, {{is required to}} characterise such networks, as it provides a way to describe the arrangement of individual faults in the network. Topology is analysed here in terms of nodes (isolated I nodes or connected Y or X nodes) and branches (I–I, I–C, C–C branches). In map view, the relative proportions of these parameters vary in natural single- and multi-phase rift fault networks and in scaled physical models {{at different stages of}} development and strain. Interactions in single-phase rifting are limited to fault splays and along-strike fault linkage (<b>I</b> <b>node</b> and I-I or I–C branch dominated networks), whereas in multi-phase rifting the topology evolves towards Y node and C–C branch dominated networks, with the degree of connectivity increasing with greater strain. The changes in topology and network connectivity have significant implications for fluid flow and reservoir compartmentalisation studies. Furthermore, topology helps to distinguish single and multiple phase extension (i. e. tectonic histories), and thus provide constraints on the geodynamic context of sedimentary basins...|$|E
3000|$|Secondly, {{for those}} nodes {{connected}} with node <b>i,</b> <b>node</b> j would be selected with anti-preferential probability. That is, the node j is {{selected from the}} neighborhood (Oi) of node i (o.r) with probability K_i^- 1 ∏^∗(k_j), where K_i=∑_j∈O_i∏^∗(k_j) [...]. Then, delete the links of nodes i and j and repeat this step mp times. The anti-preferential deletion {{is consistent with the}} topological dynamic changes caused by node and link failure in WSN. When remaining energy of node in the network is consumed to a certain threshold after a period of time, the link with which it is connected will fail and be deleted. The anti-preferred deletion mechanism exists in many practical networks. For example, in a user’s e-mail network, a user’s address book is used as a node, and an address in the address book is used as a link. When the address in the address book has not been used for a long time, the link represented by this address will be deleted in the e-mail network that has evolved. Similarly, in the language network, when some old expressions and sentences are no longer used, some languages will be isolated and deleted. In this paper, isolated nodes with a degree of 0 will also be permanently deleted from the network.|$|E
50|$|A simple {{example of}} why mutual {{exclusion}} is important in practice can be visualized using a singly linked list of four items, where {{the second and third}} are to be removed. The removal of a node that sits between 2 other nodes is performed by changing the next pointer of the previous node to point to the next node (in other words, if <b>node</b> <b>i</b> is being removed, then the next pointer of <b>node</b> <b>i</b> − 1 is changed to point to <b>node</b> <b>i</b> + 1, thereby removing from the linked list any reference to <b>node</b> <b>i).</b> When such a linked list is being shared between multiple threads of execution, two threads of execution may attempt to remove two different nodes simultaneously, one thread of execution changing the next pointer of <b>node</b> <b>i</b> − 1 to point to <b>node</b> <b>i</b> + 1, while another thread of execution changes the next pointer of <b>node</b> <b>i</b> to point to <b>node</b> <b>i</b> + 2. Although both removal operations complete successfully, the desired state of the linked list is not achieved: <b>node</b> <b>i</b> + 1 remains in the list, because the next pointer of <b>node</b> <b>i</b> − 1 points to <b>node</b> <b>i</b> + 1.|$|R
3000|$|... {{represents}} {{the total number}} of walks from <b>node</b> <b>i</b> to <b>node</b> j, of any length {{less than or equal to}} (t+ 1).|$|R
30|$|In {{the current}} round, {{it is the}} time shot of node i; if <b>node</b> <b>i</b> and cluster head j have a common channel available, <b>node</b> <b>i</b> will send data to cluster head j ordinarily {{as long as the}} sensed value meets the {{requirements}} of HT and ST. If there are no common channels available between <b>nodes</b> <b>i</b> and j, <b>node</b> <b>i</b> in this time slot does not transmit data to j and wait for the next round.|$|R
