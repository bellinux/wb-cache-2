408|10000|Public
25|$|In November 2010 the Air Force Research Laboratory (AFRL) {{created a}} {{powerful}} supercomputer by connecting together 1,760 Sony PS3s which include 168 separate <b>graphical</b> <b>processing</b> <b>units</b> and 84 coordinating servers {{in a parallel}} array capable of performing 500 trillion floating-point operations per second (500TFLOPS). As built the Condor Cluster was the 33rd largest supercomputer {{in the world and}} would be used to analyze high definition satellite imagery.|$|E
5000|$|All <b>graphical</b> <b>processing</b> <b>units</b> in the GeForce 9M series feature: ...|$|E
5000|$|Quantum Chemistry on <b>Graphical</b> <b>Processing</b> <b>Units.</b> 2. Direct Self-Consistent Field Implementation ...|$|E
25|$|Balasubrahmanyan S, Aravind krishnan and Sreekanth S -Co-inventors of NVIDIA® GeForce® 9400 GT <b>graphical</b> <b>processing</b> <b>unit.</b>|$|R
40|$|Abstract GRUEL: AN EL REASONER USING GENERAL PURPOSE COMPUTING ON A <b>GRAPHICAL</b> <b>PROCESSING</b> <b>UNIT</b> Myriam Kharma The third {{installment}} of the worldwide web (Web 3. 0) relies on an infrastructure of efficient reasoners, able to quickly infer new knowledge from existing data. We have created a reasoner using general purpose computing on a <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) for the “Existential Language” description language, denoted with EL, that exploits the processing power of a GPU while attempting to solve a logic-based artificial intelligence problem. To classify small ontologies, our system is nearly 70...|$|R
5000|$|NVIDIA Tesla M2090 <b>Graphical</b> <b>Processing</b> <b>Unit</b> (GPU) with 1024 GPU cores: This {{facility}} may be {{used for}} an emerging paradigm of parallel computing which uses GPUs as computing units ...|$|R
5000|$|Dynamic Precision for Electron Repulsion Integral Evaluation on <b>Graphical</b> <b>Processing</b> <b>Units</b> (GPUs) ...|$|E
5000|$|Quantum Chemistry on <b>Graphical</b> <b>Processing</b> <b>Units.</b> 1. Strategies for Two-Electron Integral Evaluation ...|$|E
5000|$|Quantum Chemistry on <b>Graphical</b> <b>Processing</b> <b>Units.</b> 3. Analytical Energy Gradients and First Principles Molecular Dynamics ...|$|E
30|$|DualSPHysics 3.1 {{is used in}} {{the present}} study and it {{requires}} hardware with a Central <b>Processing</b> <b>Unit</b> (CPU) or a <b>Graphical</b> <b>Processing</b> <b>Unit</b> (GPU). The computational efficiency offered by the GPU makes high-performance computing ready for computational fluid dynamics applications especially in very large modeling domains.|$|R
40|$|Phase field {{methods for}} {{fracture}} employ a continuous field variable to model cracks. In this paper, {{we discuss the}} use of a single <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) to accelerate the solution of a phase field formulation of a fracture problem. International audiencePhase ﬁeld models for fracture employ a continuous ﬁeld variable to model cracks. Therefore, in contrast to discrete descriptions of fracture, numerical tracking of discontinuities in the displacement ﬁeld are not required. This really reduces implementation complexity. In this paper, we discuss {{the use of a}} single <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) to accelerate the solution of a phase ﬁeld formulation of a fracture problem using a regular ﬁnite element method (FEM) on unstructured meshes...|$|R
40|$|We {{document}} speed-up {{gains of}} <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) computing over central <b>processing</b> <b>unit</b> (CPU) for {{the estimation of}} discrete choice random coefficient demand model. When we use a moderate-sized GPU, the computation is six to twenty times faster, where the smallest speed-up factor, six, is obtained from a comparison with the parallel computing over sixteen CPU cores...|$|R
5000|$|Excited-State Electronic Structure with Configuration Interaction Singles and Tamm-Dancoff Time-Dependent Density Functional Theory on <b>Graphical</b> <b>Processing</b> <b>Units</b> ...|$|E
50|$|Over time, Schulten {{targeted}} biological {{structures of}} increasing size and complexity, with {{larger and larger}} computers. By 2007 he was exploring molecular modeling using <b>graphical</b> <b>processing</b> <b>units</b> (GPUs). Validation of models against experimental results {{is an integral part}} of development, for example, using molecular dynamics in combination with cryo-electron microscopy and X-ray crystallography. to study the structures of large macromolecular complexes.|$|E
50|$|In November 2010 the Air Force Research Laboratory {{created a}} {{powerful}} supercomputer by connecting together 1,760 Sony PS3s which include 168 separate <b>graphical</b> <b>processing</b> <b>units</b> and 84 coordinating servers {{in a parallel}} array capable of performing 500 trillion floating-point operations per second (500 TFLOPS). As built the Condor Cluster was the 33rd largest supercomputer {{in the world and}} would be used to analyse high definition satellite imagery.|$|E
40|$|The aim of {{this thesis}} is non-realistic video rendering. It starts with a summary of {{existing}} techniques and then this thesis concentrates on selected methods {{that are able to}} work in real-time. To process video more effectivelly, we use accelleration on <b>graphical</b> <b>processing</b> <b>unit</b> with usage of OpenGL and GLSL...|$|R
40|$|The {{interaction}} between surface and subsurface hydrology flow systems {{is important for}} water supplies. Accurate, efficient numerical models are needed to estimate the movement of water through unsaturated soil. We investigate a water infiltration model and develop very fast serial and parallel implementations that are suitable for a computer with a <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) ...|$|R
40|$|This paper {{presents}} Phase Only Correlation (POC) {{methods in}} hierarchical search motion estimation for high resolution digital video using <b>Graphical</b> <b>Processing</b> <b>Unit</b> (GPU). Using the POC function, one can estimate the translational displacement {{as well as}} the degree of similarity between two image blocks from the location and height of the correlation peak, respectively[1]. Motion Estimation is a process for defining object movement in digital video sequences. Motion Estimation is a system used in some field such as image processing, image analysis, video coding, and computer vision. A POC based hierarchical search is a high cost algorithm results in long processing time, thus the system developed in this paper proceed POC function in <b>Graphical</b> <b>Processing</b> <b>Unit</b> using parallel threading technology. The evaluation counts processing time speed of the methods using <b>Graphical</b> <b>Processing</b> <b>Unit</b> in high definition video with 1280 x 720 pixel resolution. The results show that the methods using GPU performs accelerating speed more than two times faster processing 2 layer hierarchical search in 256 x 256 POC block size than doing the same methods using CPU. Using the NVidia GeForce 9600 GT GPU, kernel execution with 256 thread per block, 9 32 -bit register per thread, and 36 bytes of memory shared for every thread block, the multiprocessor maximum occupancy is 100 %, with 768 active threads per multiprocessor, 24 Active Warps per multiprocessor, and 3 active thread blocks per multiprosessor. Key words...|$|R
5000|$|Mitrionics has {{developed}} a SDK that enables software written using a single assignment language to be compiled and executed on FPGA-based computers. The Mitrion-C software language and Mitrion processor enable software developers to write and execute applications on FPGA-based computers {{in the same manner}} as with other computing technologies, such as <b>graphical</b> <b>processing</b> <b>units</b> (“GPUs”), cell-based processors, parallel processing units (“PPUs”), multi-core CPUs, and traditional single-core CPU clusters. (out of business) ...|$|E
50|$|Professor Martínez is a {{theoretical}} chemist whose research focuses primarily on developing first-principles approaches to chemical reaction dynamics, {{starting from the}} fundamental equations of quantum mechanics. He is particularly interested in electronically excited states and the response of molecules to light. Reactions of electronically excited molecules often involve conical intersections, around which the potential energy surfaces have the shape of intersecting cones. He developed a method known as ab initio multiple spawning, or AIMS, which predicts the dynamic evolution of systems having conical intersections. He has created models for photoinduced isomerization in retinal, which represents the biophysical basis for vision. He has also shown how videogame hardware, especially <b>graphical</b> <b>processing</b> <b>units</b> (GPUs), {{can be used to}} accelerate quantum chemistry simulations.|$|E
50|$|XK7 is a {{supercomputing}} platform, {{produced by}} Cray, launched on October 29, 2012. XK7 {{is the second}} platform from Cray to {{use a combination of}} central processing units ("CPUs") and <b>graphical</b> <b>processing</b> <b>units</b> ("GPUs") for computing; the hybrid architecture requires a different approach to programming to that of CPU-only supercomputers. Laboratories that host XK7 machines host workshops to train researchers in the new programming languages needed for XK7 machines. The platform is used in Titan, the world's second fastest supercomputer in the November 2013 list as ranked by the TOP500 organization. Other customers include the Swiss National Supercomputing Centre which has a 272 node machine and Blue Waters has a machine that has Cray XE6 and XK7 nodes that performs at approximately 1 petaFLOPS (1015 floating-point operations per second).|$|E
40|$|The main aim of {{this thesis}} is the {{comparison}} of parallel and sequential algorithm implementation for solving Travelling Salesman Problem using Genetic algorithms. The parallel algorithm is being executed on a <b>graphical</b> <b>processing</b> <b>unit</b> and sequential algorithm on central <b>processing</b> <b>unit.</b> The latter algorithm has {{been converted into a}} parallel form by using processor threads. It also focuses {{on the quality of the}} developed solutions in co-dependence with different sets of crossovers and mutations with the presence of migrations. Contrary to our expectations, the parallel algorithm does not reach speedups on the <b>graphical</b> <b>processing</b> <b>unit.</b> The analysis demonstrates the commonly used crossovers to be unfit for implementation on massively parallel architectures. We have not been successful in transforming them to parallel form. We have successfully proven the positive effects of migrations on general solution fitness. The smaller the number of solutions being transferred between separate populations, the bigger the effect. Distribution of average solution fitness could offer further guidelines for selection of crossovers that could be beneficial if transformed into parallel form. ...|$|R
5000|$|In {{the field}} of 3D {{computer}} graphics, the Unified Shader Model (known in Direct3D 10 as [...] "Shader Model 4.0") refers {{to a form of}} shader hardware in a <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) where all of the shader stages in the rendering pipeline (geometry, vertex, pixel, etc.) have the same capabilities. They can all read textures and buffers, and they use instruction sets that are almost identical.|$|R
40|$|This survey paper reviews how the <b>Graphical</b> <b>Processing</b> <b>Unit</b> (GPU) can be {{leveraged}} by accelerating queries for the Relational Database Management System. Queries {{can be accelerated}} in {{many ways}} like optimizing primitives, using an opcode execution model, using an in memory database, kernel fusion, batching and data placement. Data trans-fer remains a significant bottleneck and thus the mitigation methods such as database compression, differential update and unified address space are reviewed...|$|R
30|$|To {{develop and}} {{evaluate}} a fast and accurate Monte Carlo simulation (MCS) based scatter correction for PET/MR imaging, based on Geant 4 using <b>graphical</b> <b>processing</b> <b>units</b> (GPUs).|$|E
40|$|Bachelor {{thesis is}} focused on using <b>graphical</b> <b>processing</b> <b>units</b> for {{parallel}} data processing, specifically on image processing. Main focus of this thesis is determining time difference in image processing using graphical processing unit and classic approach on processor. Another focus is accessing webcam and processing of captured frames...|$|E
40|$|Article {{begins on}} next page) The Harvard {{community}} {{has made this}} article openly available. Please share how this access benefits you. Your story matters. Citation Olivares-Amaya, Roberto, Mark A. Watson, Richard G. Edgar,Leslie Vogt, Yihan Shao, and Alán Aspuru-Guzik. 2010. Accelerating correlated quantum chemistry calculations using <b>graphical</b> <b>processing</b> <b>units</b> and a mixed-precision matri...|$|E
40|$|The rapid {{analysis}} of ongoing gravitational microlensing events has been {{integral to the}} successful detection and characterisation of cool planets orbiting low mass stars in the Galaxy. In this paper we present an implementation of search and fit techniques on <b>Graphical</b> <b>Processing</b> <b>Unit</b> hardware. The method allows for the rapid identification of candidate planetary microlensing events and their subsequent followup for detailed characterisation. Comment: 7 pages, 5 figures, accepted for MNRA...|$|R
40|$|A non-rigid {{registration}} method implemented on GPU: {{proof of}} concept and first experiments Abstract. In a intra-operative context, there is an increasing need for fast implementation of image analysis processes. Among the various image analysis tasks, non-rigid image registration is particularly needed and also computationally prohibitive process. This paper presents the GPU (<b>Graphical</b> <b>Processing</b> <b>Unit)</b> implementation of the Demons algorithm [6], using a GPU implementation of Gaussian recursive filtering [1]. Keywords: Non-rigid registration, GPU implementation. ...|$|R
40|$|In this paper, {{we present}} a {{comparative}} performance analysis of different parallel sorting algorithms: Bitonic sort and Parallel Radix Sort. In order to study {{the interaction between the}} algorithms and architecture, we implemented both the algorithms in OpenCL and compared its performance with Quick Sort algorithm, the fastest algorithm. In our simulation, we have used Intel Core 2 Duo CPU 2. 67 GHz and NVidia Quadro FX 3800 as <b>graphical</b> <b>processing</b> <b>unit...</b>|$|R
40|$|Several highly {{effective}} algorithms {{that have been}} proposed recently for compressed sensing and image processing applications can be implemented efficiently on commodity <b>graphical</b> <b>processing</b> <b>units</b> (GPUs). The properties of algorithms and application that make for efficient GPU implementation are discussed, and computational results for several algorithms are presented that show large speedups over CPU implementations...|$|E
40|$|Abstract — In this paper, I {{describe}} the methods I used {{for creating a}} Particle Swarm Optimizer (PSO) that runs under the Khronos Open Compute Language (OpenCL) on General Purpose <b>Graphical</b> <b>Processing</b> <b>Units.</b> The implementation is compared to similar work done in NVIDIA Common Unified Device Architecture (CUDA) [1] and a well written parallel version, the 2006 Standard PSO (SPSO) [3]...|$|E
40|$|International audienceNonnegative matrix factorisation (NMF) with β-divergence is {{a popular}} method to {{decompose}} real world data. In this paper we propose mini-batch stochastic algorithms to perform NMF efficiently on large data matrices. Besides the stochastic aspect, the mini-batch approach allows exploiting intensive computing devices such as general purpose <b>graphical</b> <b>processing</b> <b>units</b> to decrease the processing time {{and in some cases}} outperform coordinate descent approach...|$|E
40|$|Several {{methods for}} {{simulating}} {{a body of}} water and a water surface has been investigated. A method by Layton & van de Panne based on a simplification of the Navier-Stokes equations was selected. A number of simplifications was made to increase the performance of the method, and it was implemented on the programmable <b>graphical</b> <b>processing</b> <b>unit</b> (GPU) using the Jacobi method to solve the linear equations. A conjugate gradient solver was also implemented on the GPU. The performance of the methods were measured and recorded...|$|R
40|$|In recent years, {{significant}} number of papers [1][2] have been published about general-purpose <b>graphical</b> <b>processing</b> <b>unit</b> (GPGPU) programs which are able to accelerate computationally intensive applications by several times over conventional CPU programs. These papers raise an important question: With the current developer tools {{is it possible to}} integrate these GPU programs into a major industry application without serious performance degradation? We chose the k-Nearest Neighbors algorithm {{and one of the most}} popular open source data mining tool, RapidMiner, to analyze the potential of GPU plugin development. ...|$|R
25|$|Another {{major focus}} of the {{expansion}} is to update the game with DirectX 11 support. The DirectX 11 version of the game includes improvements to water physics, light refraction in water, reflections, and visual quality of shadows and textures over the DirectX 9 client. In addition, the new client is less resource-intensive on the <b>graphical</b> <b>processing</b> <b>unit</b> and may improve frame rates. However, there are no current plans to upgrade to DirectX 12. For consoles, the development team committed to maintaining support for the PlayStation 3 client {{through the end of}} the Heavensward patch cycle.|$|R
