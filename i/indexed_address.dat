2|419|Public
50|$|Arithmetic is 10-based {{with the}} one's {{position}} at the high- and the most significant decimal digit at the low-address end of a multi-digit field, thus of ″big-endian″ style. This pertains for both, the (possibly <b>indexed)</b> <b>address</b> calculation for the access of operands and for the various operands of the arithmetic instructions. Whereas an address field in an instruction, designating an operand, is of fixed length (which depends {{on the size of}} the storage), the numeric operands of arithmetic instructions may be of arbitrary (positive) length. The word mark approach allows the 1410 to access a field (depending on the instruction to be performed) at either end, so that the most efficient access can be chosen. This way, the compiler of a higher level programming language has to take care of the initial increment of the operand address (by operand length minus 1) e. g. for add, subtract, or multiply instructions.|$|E
40|$|At DASA, {{computational}} grids using monoblock structures {{have been}} in high favour since {{more than a decade}} and reached nowadays a great level of maturity. In fact complex 3 D-configurations with intake, exhaust, gaps, fairings, flaps deflected and external stores are handled by this technique without special efforts. Different types of elliptical generators can be activated in order to resolve such meshes within H" 3 -topologies. 'Smart grids' have been direectly derived from these codes in order to simplify and to generalize the postprocessing efforts. Within such a 'smart grid', each node has beyond its normal <b>indexed</b> <b>address</b> a set of additional attributes for a more precise identification of its location and properties within the grid. So it can be easily assigned to the surface, to the outer boundary, to the interior body or flowfield or as close-to-the-surface point. Such an identification system is not only indispensable for quick postprocessors but also for setting up an effective grid overlapping technique. This technique, called DOG, is similar to the 'chimera' principle and is universally applicable to any type of time dependent problems. Such applications will be shown for external store problems, especially highlighting the great advantages of this approach. (orig.) SIGLEAvailable from TIB Hannover / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
25|$|Has {{powerful}} <b>indexed</b> <b>addressing</b> modes.|$|R
50|$|<b>Index</b> <b>addressing</b> {{was only}} {{possible}} for index registers.|$|R
5000|$|... 4 bits (20 to 23) {{specifying the}} Index {{register}} {{to use with}} <b>indexed</b> <b>addressing</b> modes ...|$|R
50|$|Below is {{an example}} that will strength-reduce all the loop multiplications that arose from array <b>indexing</b> <b>address</b> calculations.|$|R
5000|$|It was an 18-bit machine, with 17 {{magnitude}} {{bits and}} a sign bit. The addresses were 13 bits long; MSB indicated <b>index</b> <b>addressing.</b>|$|R
25|$|MIPS IV is {{the fourth}} version of the architecture. It is a superset of MIPS III and is {{compatible}} with all existing versions of MIPS. MIPS IV was designed to mainly improve floating-point (FP) performance. To improve access to operands, an <b>indexed</b> <b>addressing</b> mode (base + index, both sourced from GPRs) for FP loads and stores was added, as were prefetch instructions for performing memory prefetching and specifying cache hints (these supported both the base + offset and base + <b>index</b> <b>addressing</b> modes).|$|R
50|$|The fetch/execute {{mechanism}} {{was completely}} redesigned, optimizing {{the timing and}} allowing partial fetches when the P or Q fields were not needed. Instructions took either 1, 4, or 6 Memory cycles (10 µs, 40 µs, or 60 µs) to fetch and a variable number of memory cycles to execute. Indirect addressing added 3 memory cycles (30 µs) for each level of indirection. <b>Indexed</b> <b>addressing</b> added 5 memory cycles (50 µs) for each level of indexing. Indirect and <b>indexed</b> <b>addressing</b> could be combined at any level of indirection or indexing.|$|R
50|$|This {{is similar}} to scaled <b>index</b> <b>addressing,</b> except that the {{instruction}} has two extra operands (typically constants), and the hardware checks that the index value is between these bounds.|$|R
50|$|The {{address space}} was 15 bits, {{limiting}} the 1130 to 32,768 16-bit words (65,536 bytes) of memory. The 1130 used magnetic-core memory, which the processor addressed on word boundaries, using direct, indirect, and <b>indexed</b> <b>addressing</b> modes.|$|R
5000|$|One of {{the reasons}} for the 8051s {{popularity}} is its range of operations on single bits. Bits are always specified by absolute addresses; there is no register-indirect or <b>indexed</b> <b>addressing.</b> Instructions that operate on single bits are: ...|$|R
50|$|<b>Indexed</b> <b>addressing</b> modes add a 16-bit {{extension}} {{word to the}} instruction. If both {{source and}} destination are indexed, the source extension word comes first. x refers to the next extension word in the instruction stream in the table below.|$|R
40|$|Several {{different}} adressing {{mechanisms are}} evaluated {{within the context}} of VLIW and superscalar processor design. The results suggest that traditional RISC addressing mechanisms are less effective than the other simpler addressing mechanisms considered. In particular, the ORed <b>indexing</b> <b>addressing</b> mechanism significantly improves performance...|$|R
50|$|The {{proposed}} {{specifications for}} the 8104 appear {{similar to the}} 8103. It featured {{a full complement of}} instructions for fixed and floating point arithmetic and storage-to-storage character operations. All instructions were 32 bits in length. The 8104 supported direct addressing, indirect <b>addressing,</b> and <b>indexed</b> <b>addressing</b> with 255 <b>index</b> registers.|$|R
40|$|This {{publication}} {{is available}} in microform and annually on CD-Rom. Papers published in this journal are covered in BECITM, INSPEC, Chemical Abstracts, and Science Citation <b>Index.</b> <b>Address</b> remittances, orders for subscriptions and single copies, claims for missing numbers, and notices of change of address to IS&T at 7003 Kilworth Lane...|$|R
50|$|Most operands {{can apply}} any of eight {{addressing}} modes to eight registers. The addressing modes provide register, immediate, absolute, relative, deferred (indirect), and <b>indexed</b> <b>addressing,</b> and can specify autoincrementation and autodecrementation of a register by one (byte instructions) or two (word instructions). Use of relative addressing lets a machine-language program be position-independent.|$|R
5000|$|Within the subprogram, {{parameters}} {{could be}} accessed by indirect <b>indexed</b> <b>addressing</b> as shown above in Variations, so, given that XR1 has been suitably prepared, an integer parameter could be {{loaded into the}} accumulator with an instruction like this: LD I1 0 Load {{the value of the}} first parameter (offset 0) into the accumulator ...|$|R
50|$|This {{addressing}} mode {{is closely related}} to the <b>indexed</b> absolute <b>addressing</b> mode.|$|R
5000|$|... #Caption: This {{illustration}} {{shows how}} a cube map is <b>indexed</b> and <b>addressed.</b>|$|R
50|$|Interleaving has {{performance}} {{implications for}} cache coherency, ease of leveraging SIMD hardware, and leveraging a computer's addressing modes. (e.g. - interleaved data may require one address to be calculated, from which individual fields may then be accessed via immediate offsets; conversely {{if only one}} field is required by index, de-interleaved data may leverage scaled <b>index</b> <b>addressing).</b>|$|R
5000|$|Whitespace, if {{instruction}} specifies any <b>index</b> registers, <b>addressing</b> mode or a parameter {{and then}} comma-separated: ...|$|R
40|$|Issued {{also under}} title: Account of the centennial celebration in Danvers. Another edition with similar t. p. has 63 p. Includes bibliographical {{references}} and <b>index.</b> <b>Address</b> / by J. W. Proctor [...] Danvers, a poem / by Andrew Nichols [...] Danvers centennial celebration [...] Proceedings {{of the town}} of Danvers, in relation to the donation of George Peabody, Esq., of London. Mode of access: Internet...|$|R
5000|$|He never married, and, in the Posts {{employee}} <b>index,</b> his <b>address</b> {{was listed}} as simply [...] "The Washington Post".|$|R
30|$|Inversion {{process is}} preferably {{replaced}} by look-up table (LUT). LUT is appraised as an efficient implementation of inversion process by using memory instead {{of large numbers}} of logical elements. Both resource utilization and propagation delay are reduced at the cost of accuracy. The utilized LUT should contain all possible inverse values. The value x intended to be inverted is used directly as the LUT <b>index</b> (<b>address)</b> to retrieve the inverse value 1 /x.|$|R
5000|$|If SIMPL took {{parameters}} coded in-line {{following the}} BSI instruction, SIMPL could {{gain access to}} them with <b>indexed</b> <b>addressing</b> off XR1. The first could be obtained by , the second by , and so on. If the second parameter was {{the address of the}} actual parameter, then [...] would obtain its value. Before returning, SIMPL would increment XR1 past the n parameters with an instruction such as [...] so as to place the right value at RETN+1.|$|R
5000|$|Structure of arrays (or SoA) is a layout {{separating}} {{elements of}} a record (or 'struct' in the C programming language) into one parallel array per field. The motivation is easier manipulation with packed SIMD instructions in most instruction set architectures, since a single SIMD register can load homogeneous data, possibly transferred by a wide internal datapath (e.g. 128-bit). The downside is requiring more cache ways when traversing data, and inefficient <b>indexed</b> <b>addressing.</b> (see also: planar image format) ...|$|R
50|$|Each {{instruction}} contained six bits of opcode, one bit specifying whether {{indirect addressing}} used, two bits of <b>index</b> register <b>address</b> and fifteen bits of address.|$|R
5000|$|The 2010 Human Development Report {{continued}} the HDI tradition of measurement innovation by introducing new <b>indices</b> that <b>address</b> crucial development factors not directly {{reflected in the}} HDI: ...|$|R
40|$|The {{development}} of an index to compare different sources of energy is presented; the <b>index</b> <b>address</b> the appraisal {{of the source of}} energy from its sustainable performance and also using the factors that influence the user's decision making process of adopting an alternative energy. The index is used to compare the fuel cell system and the traditional grid system powered by coal fired power plants, for a typical residential unit located in the rural Appalachian region in Ohio. M. S. Committee Chair: Castro-Lacouture, Daniel; Committee Member: Gentry, Russell; Committee Member: Thomas-Mobley, Lind...|$|R
40|$|Simplified S 08 {{instruction}} set with added high-performance instructions — LDA, STA, and CLR instructions support the short addressing mode; address $ 0000 to $ 001 F {{can be accessed}} via a single-byte instruction — ADD, SUB, INC, and DEC instructions support the tiny addressing mode; address $ 0000 to $ 000 F can be accessed via a single-byte instruction with reduced instruction cycle — Shadow PC register instructions: SHA and SLA Pending interrupt indication <b>Index</b> <b>addressing</b> via D[X] and X register Direct page access to the entire memory map through paging windo...|$|R
40|$|Original article can {{be found}} at: [URL] Copyright Elsevier B. V. DOI: 10. 1016 / 0165 - 6074 (93) 90060 -X [Full text {{of this article is}} not {{available}} in the UHRA]RISC processors employ simple addressing modes which allow memory addresses to be calculated in a single processor cycle. This paper demonstrates that VLIW and Superscalar processor performance can be improved by further simplifying the addressing modes. In particular, the distinctive ORed <b>indexing</b> <b>addressing</b> mechanism employed by the HARP VLIW processor boosts performance by 10 %. Register indirect addressing on its own yields a similar performance improvement...|$|R
40|$|A new index, the Perception and Exposure Local Corruption index (PELCI), is {{suggested}} as a composite index of two indices (PLCI and ELCI) reflecting two: perception of {{and exposure to}} corruption. Each <b>index</b> <b>addresses</b> several aspects of corruption. Results indicate {{that the level of}} corruption perception is higher than the level of exposure on the local level and suggests that corruption has its local aspects that need to be taken into consideration. PELCI can be used to motivate champions of corruption alleviation and to enrich evidence based dialogue on action plan to implement and evaluate specific interventions on the local level. Key words: accountability, local governance, corruption assessment. 1...|$|R
40|$|We {{develop a}} quality-adjusted cost index to {{estimate}} expected returns to investments in new technologies. The <b>index</b> <b>addresses</b> {{the problem of}} measuring social benefits from innovations in service sector inputs, where real output is not directly observable. We forecast welfare gains from two U. S. Advanced Technology Program innovations equaling 25 %- 50 % of expected price, and aggregate consumer benefits of $ 1 -$ 2 billion, relative to trends in existing technologies. Our model’s probabilistic parameters reflect uncertainty about prospective outcomes and in our hedonic estimates of shadow values for selected product attributes. The index can be readily adopted by research and development (R&D) managers in industry and government. ...|$|R
50|$|Half of the {{instruction}} (15 bits) was unused. The unused half {{could be used for}} extra instructions, <b>indexing,</b> indirect <b>addressing,</b> or a second (+1) address to locate the next instruction, each of which could increase program performance.|$|R
30|$|Based {{on these}} three components, IRI has been {{developing}} educational and training activities for local partners in the R 4 project, who lead the on-the-ground implementation of index insurance and climate risk management activities. These trainings, usually {{in the form of}} workshops, have acted as a foundation for project technical capacity development. Presentations, hands-on exercises using real case study data, interactive games, reading materials, and group discussions are used to demonstrate the main concepts of index insurance and get feedback on issues such as farmers’ vulnerabilities, local historic climate information, cropping cycles, farming decisions and input for draft indices. This process helps ensure that <b>indices</b> <b>address</b> the specific climate and production risks that each region faces.|$|R
