34|369|Public
2500|$|A {{short code}} in the Mathematica {{internal}} language: the recursive procedure SiPyramid generates a 3D pyramid of arbitrary order n as the displayable <b>graphic</b> <b>object</b> Graphics3D: ...|$|E
5000|$|Inline Images [...] - [...] Supports {{floating}} <b>graphic</b> <b>object</b> {{types that}} are inline with the text.|$|E
5000|$|A {{short code}} in the Mathematica {{internal}} language: the recursive procedure SiPyramid generates a 3D pyramid of arbitrary order n as the displayable <b>graphic</b> <b>object</b> Graphics3D: ...|$|E
25|$|It {{is a human}} {{readable}} ASCII format. It consists of a stream of commands generating an ordered stream of <b>graphics</b> <b>objects.</b> The <b>graphics</b> <b>objects</b> can be positive or negative. Superimposed in the correct order they create the final image.|$|R
30|$|Move the <b>graphics</b> <b>object</b> forward.|$|R
30|$|When the <b>graphics</b> <b>object</b> {{reaches the}} destination, stop timer.|$|R
50|$|Ignition uses an {{implementation}} of Python version 2.5 called Jython. Python script {{is used for}} component Event Handling. An example {{of this would be}} opening a popup window when a user clicks on a <b>graphic</b> <b>object.</b> Another common use are event scripts such as a timer that checks for alarms or a logon script.|$|E
40|$|Abstract. For {{small screen}} devices, such as PDAs, which totally {{depend on a}} pen-based user interface, {{traditional}} menu-selection/button-clicking based user interface becomes inconvenient for graphics inputting. In this paper, a novel sketch-based graphics inputting user interface is presented. By sketching a few constituent primitive shapes of the user-intended <b>graphic</b> <b>object,</b> the candidate graphic objects in the shape database are guessed and displayed in a ranked list according to their partial structural similarity to what the user has drawn. The user can then choose the right one from the list and replace the sketchy strokes with the exact <b>graphic</b> <b>object</b> with proper parameters, such as position, size and angle. This user interface is natural for graphics input and is especially suitable for schematic design. ...|$|E
40|$|We {{propose a}} new {{representation}} method, the multistage color-depth panoramic map (or panomap), for compressing 3 D graphic objects. The {{idea of the}} proposed method is to transform a 3 D <b>graphic</b> <b>object,</b> including both the shape and color information, into a single image. With a pseudo cylinder (or sphere), the color/depth information of a 3 D <b>graphic</b> <b>object</b> can be recorded completely via a main panomap combined {{with a set of}} residual panomaps. Then, an index sequence is constructed to index non-redundant blocks in the residual panomaps. A rectangular image, the compact multistage panomap (CMP), is formed based on the panomaps and index sequence. Existing image compression techniques can be applied for compressing the CMP structure, which can achieve a highly efficient representation due to its regularity...|$|E
5000|$|The TIA also {{supported}} five separate <b>graphics</b> <b>objects</b> consisting of: ...|$|R
40|$|This paper {{proposes a}} novel model for {{vectorization}} systemthe Object-Oriented Progressive-Simplificationbased Vectorization (OOPSV) model. With {{the idea of}} progressively simplifying the complexity of raster image as the vectorization proceeds, we propose an integrated set of ############### ########### vectorization algorithms for various classes of <b>graphic</b> <b>objects</b> in engineering drawings. Its {{ultimate goal is to}} recognize <b>graphic</b> <b>objects</b> in complex environments, typically intersecting or touchin...|$|R
5000|$|... 2. Spatial Freedom Astroid: A {{rotating}} orb {{input device}} used to move 3D <b>graphics</b> <b>objects.</b>|$|R
40|$|In this paper, {{we propose}} a {{framework}} for engineering drawings recognition using a case-based approach. The key idea of our scheme is that, interactively, the user {{provides an example of}} one type of <b>graphic</b> <b>object</b> in an engineering drawing, then the system learns the graphical knowledge of this type of <b>graphic</b> <b>object</b> from the example and uses this learned knowledge to recognize or search for similar graphic objects in engineering drawings. The scheme emphasizes the following three distinct characteristics: automatism, run-time-ness, and robustness. We summarized five types of geometric constraints to represent the generic graphical knowledge. We also developed two algorithms for case-based graphical knowledge acquisition and knowledge-based graphics recognition, respectively. Experiments have shown that our proposed framework is both efficient and effective for recognizing various types of graphic objects in engineering drawings. 1...|$|E
40|$|The {{subject of}} this {{bachelor}} thesis {{was to create a}} library of graphic objects called FACEPLATES in WinCC flexible. <b>Graphic</b> <b>object</b> are used to control an electro components and they can be connected with code in PLC. FACEPLATE function is demonstrated in sample problem. The sample problem presents simple process of filling, heating, circulation and taking-off sterile clean water...|$|E
40|$|A brief {{survey on}} on-line {{graphics}} recognition is presented. We first present some common scenarios and applications of on-line graphics recognition and then identify major problems and sub-problems at three levels: primitive shape recognition, composite <b>graphic</b> <b>object</b> recognition, and document recognition and understanding. Representative approaches {{to these problems}} are also presented. We also list several open problems at the end...|$|E
5000|$|Speech {{balloons}} and other <b>graphic</b> <b>objects</b> - geometrical shapes to highlight {{an object in}} the video.|$|R
5000|$|<b>Graphics</b> <b>Object</b> Content Architecture for AFP (AFP GOCA), {{which is}} used to define and {{generate}} vector graphics.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimited. An interactive graphical interface helps intelligent computer- assisted instruction systems, because many applications can be well represented by <b>graphic</b> <b>objects.</b> One {{approach is a}} facility whereby a teacher constructing a tutor can associate specific graphics with specific predicate-calculus expressions describing a state in a tutoring simulation. This further requires a specification of the arrangement of <b>graphic</b> <b>objects</b> on the screen, how <b>graphic</b> <b>objects</b> can change position with simulation states. It also requires a language for teachers to specify <b>graphic</b> <b>objects.</b> This thesis addresses both. We introduce a broader applications of cartoon animation modelling ideas to tutoring, that have been limited so far by the complexity of their implementation. The special tools provided help computer-inexperienced instructors {{to develop their own}} cartoon animation modelling tutor without the need of mathematical description of shapes or activities to be represented. The tutor generator used employes means-ends analysis, and the language for the teachers is built using Prowindows, a Prolog extension for object-oriented design. Lieutenant Colonel, Indonesian Air Forc...|$|R
40|$|Existing {{vectorization}} {{systems for}} engineering drawings usually take a two-phase workflow: convert a raster image to raw vectors and recognize graphic {{objects from the}} raw vectors. The first phase usually separates a ground truth <b>graphic</b> <b>object</b> that intersects or touches other graphic objects into several parts, thus, the second phase faces the difficulty of searching for and merging raw vectors belonging to the same object. These operations slow down vectorization and degrade the recognition quality. Imitating the way humans read engineering drawings, we propose an efficient one-phase object-oriented vectorization model that recognizes each class of graphic objects from their natural characteristics. Each ground truth <b>graphic</b> <b>object</b> is recognized directly in its entirety at the pixel level. The raster image is progressively simplified by erasing recognized graphic objects to eliminate their interference with subsequent recognition. To evaluate {{the performance of the}} proposed model, we present experimental results on real-life drawings and quantitative analysis using third party protocols. The evaluation results show significant improvement in speed and recognition rate...|$|E
40|$|Information from {{monitored}} {{systems is}} displayed in three dimensional cyberspace representations defining a virtual universe having three dimensions. Fixed and dynamic data parameter outputs from the monitored systems are visually represented as graphic {{objects that are}} positioned in the virtual universe based on relationships to the system and to the data parameter categories. Attributes {{and values of the}} data parameters are indicated by manipulating properties of the <b>graphic</b> <b>object</b> such as position, color, shape, and motion...|$|E
40|$|Graphical {{material}} {{represented in}} the Postscript language {{can be incorporated into}} 'I) $-based documents and ultimately printed on a printer having a PostScript interpreter. Successfully completing this incorporation process requires an understanding of PostScript and its use in programs to generate graphics and in programs associated with document preparation. It also requires an understanding of the particular DVI-to-Postscript translator program being used. PostScript concepts such as a stack of dictionaries, commands such as "translate", "rotate", "scale", and the idea of saving the state of virtual memory must be mastered. Different graphics generation programs use somewhat different mechanisms to produce the PostScript description of a <b>graphic</b> <b>object.</b> The graphics programs Adobe Illustrator, Cricket Draw, and MacDraft illustrate the diversity of possible PostScript output files. Text manipulation programs, such as AWK, can be used to examine these PostScript output files, establish the correct origin for these files when incorporated into documents, and prepare them for inclusion in m-based documents. A number of special cases need to be considered depending on the use of landscape or portrait modes in both the l) $-based document and the <b>graphic</b> <b>object.</b> 1...|$|E
50|$|These {{drawings}} included Droguinhas (Little Nothings), c. 1965-68, Trenzinho (Little Train), 1965, and the Objetos graficos (<b>Graphic</b> <b>objects),</b> 1967.|$|R
40|$|In this report, {{the design}} of a 3 D graphic editor is {{provided}} with object-oriented technology and OpenGL GLUT framework. The functionalities and features in the system of this project contain documenting 3 D <b>graphic</b> <b>objects,</b> dynamically creating multiple windows and subwindows, and manipulating OpenGL features, such as, lighting, colors, solid and wire mesh states. A hierarchical data structure is built to enable import and export assembled object data. The application of building <b>graphic</b> <b>objects</b> shows that the system performs its functionalities...|$|R
40|$|We {{present an}} {{object-oriented}} architecture of a visualization toolkit which integrates geometric modeling and behavioral modeling. It {{is based on}} sharing <b>graphics</b> <b>objects</b> between geometrical scene descriptions and descriptions for the flow of time and events. We discuss the properties <b>graphics</b> <b>objects</b> should possess in such a system {{so that they can}} be used by different rendering toolkits and can be linked to time- and event-dependent processes. We introduce a new methodology for the symmetric modeling of geometry and behavior based on geometry graphs and behavior graphs...|$|R
40|$|This {{paper will}} {{draw upon the}} work of feminist design historians (Buckley 1986, Scotford 2000, Attfield 2000) in order to reappraise the role that self-publishing print {{platforms}} have played {{in the construction of}} a feminist history. Mainstream magazines have been the conventional frame through which feminist and 'feminine‘ identities have been constructed and critiqued. However, it may be argued that DIY publications (e. g. fanzines and broadsheets) generated 'below critical radar‘ provide an equally rich resource for shaping a history/critique through both content and mode of production. Ultimately the <b>graphic</b> <b>object</b> becomes the vehicle through which subject/object relationships may be explored (Attfield 2000) ...|$|E
40|$|The only <b>graphic</b> <b>object</b> which TEX {{can handle}} {{internally}} {{is the picture}} environment, {{which is on the}} one hand very easy to use, {{but on the other hand}} very restrictive. All other graphical material must be encapsulated in commands and later extracted by the DVI processor, for example, dvips into PostScript code. Packages like pstricks (and its extensions pst-xxxx) and psfrag can create such commands. Unfortunately, pdflatex cannot work when one of these packages is part of the document file. The new package ps 4 pdf makes it possible to collect all PostScript-related parts and convert them to PDF in a single run. ...|$|E
40|$|The ephemeral {{nature of}} graphic design {{is the focus}} of the paper, and {{specifically}} {{the way in which the}} shift from print to digital-based artefacts has affected an interpretation of the <b>graphic</b> <b>object</b> and its place in history. The case study is the British punk fanzine Ripped & Torn produced by Tony Drayton in print form (1976 – 79) and his website of the same name (2011 –present). With the full cooperation of Drayton, the author conducted in-depth interviews, gaining access to personal archive material. Such an analysis of Drayton’s punk fanzines and website has not been published previously. This research began in response to an invitational keynote talk for ‘Impact 7 : Intersections & Counterpoints: International Multi-disciplinary Printmaking Conference’, Monash University, Melbourne, Australia 27 – 30 September 2011. The conference was international in scope with 420 academics, printmakers, book artists and graphic designers a day in attendance (with 600 delegate tickets issued in total). The resulting 8000 -word paper was published in 2013 in a substantial book of the proceedings (96 authors) which has been considered as essential reading for anyone interested in the past, present and future of print. The paper draws on methods from historiography and (sub) cultural theory and addresses two main questions: ‘What does it mean when an ephemeral <b>graphic</b> <b>object</b> is captured in time?’ and, ‘When does the fleeting moment become “fixed” and what impact does this have on meaning, history and the notion of original intent?’. The paper examines the printed fanzine and its history, but also explores the future impact of electronic archives and the historiography of fanzines. A 2, 600 -word essay on the subject was also commissioned for a special issue of the French academic journal Poli: Politique de l’Image, on questioning the role of archives and documents (2012) ...|$|E
40|$|Building {{upon the}} {{existing}} literature, we are suggesting {{to regard the}} building blocks of all graphics as falling into three main categories: a) the <b>graphic</b> <b>objects</b> that are shown (e. g., a dot, a pictogram, an arrow), b) the meaningful graphic spaces into which these objects are arranged (e. g., a geographic coordinate system, a timeline), and c) the graphic properties of these objects (e. g., their colors, their sizes). We suggest that <b>graphic</b> <b>objects</b> come in different syntactic categories, such as nodes, labels, frames, links, etc. Such syntactic categories of <b>graphic</b> <b>objects</b> can explain the permissible spatial relationships between <b>objects</b> in a <b>graphic</b> representation. In addition, syntactic categories provide a criterion for distinguishing meaningful basic constituents of graphics. Based on the above, we discuss how the concept of syntactics can be applied to graphics. Finally we distinguish different types of meaningful graphic spaces {{that can be used to}} construct graphics. Throughout the paper we relate our proposals to the relevant existing literature...|$|R
5000|$|A Multimedia Database (MMDB) hosts {{one or more}} {{multimedia}} data types (i.e. text, images, <b>graphic</b> <b>objects,</b> audio, video, animation sequences) [...] These data types are broadly categorized into three classes: ...|$|R
40|$|Abstract: Many {{students}} in the college two of the authors work for have suffered lower performance in three-dimensional linear algebra for a long time. It is partially because they have learned linear algebra {{as a set of}} symbolic procedures isolated from graphical or verbal representations, and also from real world applications. Procedural knowledge without understanding the concept seems to evaporate just after the examinations. To help students building conceptual knowledge of linear algebra, we have been constructing a learning system, which shows the dynamic relations of three representations: vector equations, 3 D <b>graphic</b> <b>objects</b> represented by the equations, and verbal explanations of the features of equations and <b>graphic</b> <b>objects.</b> The system serves a series of activities, where students are able to touch or transform some parts of the <b>graphic</b> <b>objects</b> in virtual space, observe animated transformations of the <b>graphic</b> <b>objects</b> and simultaneous changes of symbolic expressions, and connect them to a list of verbal explanations. By experiencing the activities in the system, the students are expected to recognize the links between the three representations in 3 D linear algebra. The system is a combination of several software programs including web-browser/server, a database management system, a dynamic geometry software, and a computer algebra system. The structure and several activities of the system are presented in this talk...|$|R
40|$|Many {{problems}} in computer visualization, scientific computing, medical imag- ing, computer-aided design and manufacturing (CAD/CAM) require to recon- struct a <b>graphic</b> <b>object</b> starting from an unorganized 2 D/ 3 D point cloud, i. e. {{a set of}} scattered points in R^ 2 or R^ 3. Here, we – establish how the problem parameters and the results {{have to be taken}} in order to find meaningful solutions and avoid artifacts and similar drawbacks; – study the conditioning of the problem in terms of number of points, point cloud topology and standard deviation of several functions; – suggest a strategy for decreasing the condition number of the problem by means of a two stages selective reduction of the cloud points; – show a parallel code for preconditioning and solving the problem with very large data sets...|$|E
40|$|EN] [EN] In {{this paper}} {{we present a}} new method for image {{primitives}} tracking based on a CART (Classification and Regression Tree). Primitives tracking procedure uses lines and circles as primitives. We have applied the proposed method to sport event scenarios, specifically, soccer matches. We estimate CART parameters using a learning procedure based on RGB image channels. In order to illustrate its performance, it {{has been applied to}} real HD (High Definition) video sequences and some numerical experiments are shown. The quality of the primitives tracking with the decision tree is validated by the percentage error rates obtained and the comparison with other techniques as a morphological method. We also present applications of the proposed method to camera calibration and <b>graphic</b> <b>object</b> insertion in real video sequences. </p...|$|E
40|$|Virtual Aquarium is an {{application}} {{which can be}} used to display an aquarium together with its content that is look like a real one. By using this application, users can see the display of the aquarium like they are looking at the real object because it is displayed in 3 D animation. WebGL is one of the technologies {{that can be used to}} build this 3 D web. It is a canvas context from a HTML element which provides a 3 D API <b>graphic</b> <b>object</b> that is implemented into a web browser without using the plug-in. WebGL can provide an interface program for 3 D graphic. This new technology use a HTML 5 version by accessing the canvas element which then it is accessed by using Document Object Model Interface. As a result, the user can see a Web interface which formerly in 2 D, and then it is developed into 3 D where the object can be seen from any other sides...|$|E
5000|$|IBM ILOG Views, a {{visualization}} {{development system}} and toolkit based on C++ with add ons for charts, maps and reactive <b>graphic</b> <b>objects.</b> This product still exists as Rogue Wave Software Views.|$|R
40|$|An example-driven {{graphics}} recognition {{scheme is}} presented, {{which is an}} extension of the generic graphics recognition algorithm we presented years ago. The key idea is that, interactively, the user can specify one or more examples of one type of <b>graphic</b> <b>objects</b> in an engineering drawing image, an the system then learn the constraint rules among the components in this type of <b>graphic</b> <b>objects</b> and recognize similar objects in the same drawing or similar drawings by matching the constraint rules. Preliminary experiments have shown that this is a promising way for interactive graphics recognition. Keywords: graphics recognition, rule-based approach, case-based reasoning, SSPR...|$|R
50|$|The TIA {{differs from}} the {{conventional}} framebuffer approach in that {{the image on the}} screen is composed by manipulating five movable <b>graphic</b> <b>objects</b> (2 players, 2 missiles and 1 ball) and a static playfield object. These are all generated on every scan line from their respective registers, unlike the technique used in a framebuffer-mapped model, requiring the program to update these on every scan line. Horizontal resolution is not uniform, as its size depends on the particular <b>graphics</b> <b>object.</b> The smallest unit of pixel corresponds to 1 color clock cycle of the chip, of which there are 160 visible ones on a line.|$|R
