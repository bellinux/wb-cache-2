4|4|Public
40|$|Abstract: In {{order to}} {{precisely}} estimate the diversity in any microbial community, many samples of that community {{need to be}} analyzed. The accuracy of the diversity level increases linearly with the sample size until the full level of diversity in the community is recognized. The larger the number, the better is the estimate. However, due to both time and economic constraints, collecting and analyzing the entire community is not feasible. Based on this real-world limitation in microbial community analysis, our goal in this project {{was to develop a}} mathematical software tool that can estimate the full level of morphological diversity in a microbial community based on a partial set of existing image analysis data. Our design of the project output is an <b>interactive</b> <b>macro</b> operating in Excel 2000 which creates several graphs displaying the relationship of diversity versus sample size of existing data, plus a result window displaying the desired results of sampling statistic computations. This tool will be very useful for microbial ecologists using the MSU-based CMEIAS program to analyze microbial community structure...|$|E
40|$|Critical speed {{analysis}} of rotor systems {{is a difficult}} process {{due to the fact}} that there exists no direct formula to determine the natural frequency of a multi-section rotor. Finite Element packages provide a suitable platform for such an analysis but demand considerable experience on part of the user to perform modeling, meshing, solving and post-processing. The primary objective of this paper is to identify a suitable method for determining rigid bearing critical speeds of multi-section rotors in order to validate the results obtained through traditional FEA package and also to simplify the latter. The only drawback of transfer matrix analysis is the existence of mathematical equations and multiple roots which makes it a cumbersome process by solving manually. This problem has been tackled in this present work through the use of Ansys Parametric Design Language (APDL). The strength of APDL as a macro language have been taken advantage of in this present work to develop an <b>interactive</b> <b>macro</b> which mimics the Finite Element Method and thus relaxes the rigorous routine involved in a traditional tool-based finite element analysis. The results thus obtained through Transfer Matrix Analysis and FEM macro are compared with traditional ANSYS results...|$|E
40|$|VEGA is an {{interactive}} geometric modelling system {{which has been}} developed at Carnegie-mellon University primarily for education in architecture and the arts. Its educational use is twofold: first as a medium for description and manipulation of form to aid in creative work and second as a base package of procedures {{that may be used}} by advanced architecture students in the creation of specialized modelling packages. VEGA is written in PASCAL. There are versions of VEGA currently running on VAX 11 / 780 computer under the UNIX and VMS operating systems. VEGA has been designed to run on a stand-alone personal computer. Currently VEGA is being converted to run on Sun Microsystems and PERQ machines. VEGA is used in the undergraduate curriculum of the School of Architecture at Carnegie-Mellon University. Its primary use to date has been as a means to introduce geometric modelling to architecture students who have minimal computer experience. VEGA may be viewed as a complete geometric modelling package or as a programming aid for development of special purpose geometric modelling programs. To date, one such specialized system, a robot arm design package, has been created as a student project. The development of the VEGA system is continuing. Current areas of interest include the development of more powerful geometric operations on polyhedra, parametric shapes and assemblies, instancing of sub- assemblies, user definition of primitive shapes and an <b>interactive</b> <b>macro</b> language for the manipulation of for...|$|E
40|$|This {{paper will}} try to {{establish}} a dialogue between the process of rational geometric construction and the intuitive process of discovering shapes. This will involve: a geometric principle that works as a geometric generation law and two <b>interactive</b> <b>macros.</b> The geometric principle is the affinity between circles and ellipses. The macros, developed in VisualLisp languagefor AutoCAD, allow the students to construct 3 D abstract structures. In order to provide support for the student in the task of analysing the 3 D structures a methodology has been established to classify shapes giving each one an alphanumeric string. The string reflects the transformation order during the creation of each spacial structure. With the aid of interactivity it is intended that this exercise in discovering space creates a tension allowing the rational and intuitive states of mind overlap...|$|R
40|$|FRAME {{technology}} {{allows us}} to develop user interfaces that are friendly to use. They are the basis for many SAS applications in which end-users determine {{what happens with the}} click-of-a-button. This paper presents a framework for building intuitive user-based applications. Here we will develop a simple application, which builds on itself iteratively. By exploring some of the most common FRAME objects and understanding how events are handled in SAS/AF, we will build a simple interface for an applications. SAS/AF 1 Through this step-by-step process, we will show you how to build an interface that collects user input, which can be used to front-end traditional SAS macros. Despite itâ€™s simplicity, this paper should give the reader a methodology for developing user-based applications that can serve to front-end most runtime, <b>interactive</b> <b>macros.</b> This paper is intended for both new users of SAS Software as well as experienced SAS programmers with little or no experience in SAS/AF...|$|R
5000|$|In {{its first}} {{extended}} event {{outside of the}} annual November Festival, Microwave also held the [...] "A-Glow-Glow" [...] <b>Macro</b> <b>Interactive</b> Media Art Exhibition in April 2008, which {{was funded by the}} Hong Kong Arts Development Council and aimed for more mass appeal. Two large-scale interactive LED artworks were placed by the Tsim Sha Tsui waterfront, right across the harbour from the Hong Kong City Hall, where the annual festival main exhibition is held.|$|R
40|$|Standard unit of {{information}} Bit generates any natural process through discrete (yes-no) interactions, including <b>interactive</b> <b>macro</b> impulses in classical physics and elementary micro impulses of quantum interactions. The elementary interaction of random impulses measures (yes-no) probability events according to Kolmogorov 1 - 0 law for random process. In natural interactive process, each impulse step-down action cuts correlations {{of the process}} prior interactive events. This cuts the process entropy defined by its probability memorizing the cutting entropy as information hidden in the correlation. Memory freezes the information impulse in the cutting off correlation. The interactive impulse reveals information as phenomenon of interaction. The interacting actions curve impulse whose curvature creates asymmetry and allows encoding qubits in memorized bit. Each Bit is naturally extracted or erased {{at the cost of}} cutting this energy and encoding information in the interacting physical state by the impulse step-up action. The impulse sequential natural encoding merges memory with the time of memorizing information and compensates the cutting cost by running time intervals of encoding. The information process, preserving invariant impulse cutting information, binds the inner impulse reversible microprocess and multiple impulses irreversible macroprocess in information dynamics. The encoding process unites the information path functional integrating observer geometrical cellular information structure which composes rotating helix of the sequencing cells Bits. This natural encoding satisfied Landauer principle and compensates for the cost of Maxwell Demon. Energy of specific interaction limits the universal code length and density. The conditions and results validate the computer simulation, multiple experiments in coding genetic information, experimental encoding by spiking neurons, others. Comment: 15 pages, arXiv admin note: substantial text overlap with arXiv: 1603. 0187...|$|E
40|$|SAS {{software}} macros {{provide the}} flexibility to perform advanced programming techniques such as processing real-time user-entered parameters to determine which blocks of code will run and how often. In my previous paper (Part I), I described {{how to use these}} techniques to write more elegant code. In this paper, I will show how to apply these techniques to read multiple external files based on a user query. Specifically, I will use a real life application and show how it was implemented, using a tightly written program comprised of macros. I needed to determine how often the public accessed the files on my web server. Through iterations of programs that were the evolution of a thought process, I have developed SAS programs that read the web server's log files based on the time periods requested in an <b>interactive</b> SAS <b>macro</b> window. These programs can generate a summarized report of web usage. This paper is a learning tool for the professional programmer on conceiving and generating a computer program, using SAS Base and macro software. Those who also want to track hits to their web servers will find this information useful...|$|R

