150|1492|Public
2500|$|The primary {{objective}} of PackML {{is to bring}} a common “look and feel” and operational consistency to all machines {{that make up a}} Packing Line (note: can be used for other types of <b>discrete</b> <b>process)</b> PackML provides: ...|$|E
5000|$|Manufacturing : <b>Discrete,</b> <b>Process,</b> Manufacturing Execution System ...|$|E
50|$|This {{protocol}} {{is primarily}} used for analog and <b>discrete</b> <b>process</b> control devices. The primary advantage is configuration by functional block concept.|$|E
5000|$|Inseparability - {{production}} and consumption cannot be separated (compared with goods where {{production and}} consumption are entirely <b>discrete</b> <b>processes)</b> ...|$|R
50|$|The {{modelling}} {{of physical}} components {{is based on}} the EcosimPro language (EL) which is very similar to other conventional Object-oriented programming languages but is powerful enough to model continuous and <b>discrete</b> <b>processes.</b>|$|R
5000|$|Banking BPO {{services}} are typically defined by industry analysts, advisors and {{leaders in the}} sourcing industry, such as the set of <b>discrete</b> <b>processes</b> or transactional activities that support the lending lifecycle as follows: ...|$|R
5000|$|For a <b>discrete</b> <b>process</b> {{with known}} mean and {{variance}} {{for which we}} observe [...] observations , {{an estimate of the}} autocorrelation may be obtained as ...|$|E
5000|$|The primary {{objective}} of PackML {{is to bring}} a common “look and feel” and operational consistency to all machines {{that make up a}} Packing Line (note: can be used for other types of <b>discrete</b> <b>process)</b> [...] PackML provides: ...|$|E
50|$|Discrete - Found in many manufacturing, {{motion and}} {{packaging}} applications. Robotic assembly, {{such as that}} found in automotive production, {{can be characterized as}} <b>discrete</b> <b>process</b> control. Most discrete manufacturing involves the production of discrete pieces of product, such as metal stamping.|$|E
30|$|For our purpose, we {{introduce}} the following definitions and results about almost periodic <b>discrete</b> <b>processes</b> which {{are given in}} [3, 17, 18] for the continuous case. For the discrete case we mention [11, 12].|$|R
40|$|One-dimensional <b>discrete</b> <b>processes,</b> {{which can}} be {{measured}} repetitively for discrete values of arguments after discrete periodic or non periodic intervals of time, are discussed in this study. These processes can be under effect of different perturbations with different frequency, amplitudes, with accidental measurement error, etc. The problem investigated, is whether repetitive, local, relatively small effects (RLEs) can be extracted from this data. A simple method for such effects detection is proposed. A model for the simulation of <b>discrete</b> <b>processes</b> with local effects is introduced. Experiments with the method indicate that it is stable in detecting local effects and can be useful for many applications...|$|R
40|$|This paper {{deals with}} {{identification}} in Markov dynamic <b>discrete</b> decision <b>processes.</b> It shows the nonparametric {{identification of the}} behavioral responses to counterfactual policy interventions that modify the one- period utility function. Dynamic <b>discrete</b> decision <b>processes,</b> Identification, Counterfactual policy experiments. ...|$|R
50|$|The {{exponential}} distribution {{may be viewed}} as a continuous counterpart of the geometric distribution, which describes the number of Bernoulli trials necessary for a <b>discrete</b> <b>process</b> to change state. In contrast, the {{exponential distribution}} describes the time for a continuous process to change state.|$|E
50|$|The {{jury found}} {{no place in}} the 1950 Indian Constitution, and it was ignored in many Indian states. The Law Commission {{recommended}} its abolition in 1958 in its 14th Report. Jury trials were abolished in India by a very <b>discrete</b> <b>process</b> during the 1960s, finishing with the 1973 Code of Criminal Procedure, which is still in force today.|$|E
5000|$|The Ornstein-Uhlenbeck {{process can}} be {{interpreted}} as a scaling limit of a <b>discrete</b> <b>process,</b> {{in the same way that}} Brownian motion is a scaling limit of random walks. Consider an urn containing [...] blue and yellow balls. At each step a ball is chosen at random and replaced by a ball of the opposite colour (equivalently, a ball chosen uniformly at random changes color). Let [...] be the number of blue balls in the urn after [...] steps. Then [...] converges in law to an Ornstein-Uhlenbeck process as [...] tends to infinity.|$|E
50|$|Sometimes the {{interrupt}} handler will add longer tasks to a queue structure. Later, after the {{interrupt handler}} has finished, these tasks are {{executed by the}} main loop. This method brings the system close to a multitasking kernel with <b>discrete</b> <b>processes.</b>|$|R
40|$|The {{properties}} of ω-limit set and global asymptotic behavior are first obtained for asymptotically autonomous <b>discrete</b> dynamical <b>processes</b> on metric spaces. Then certain equivalence of the asymptotic behavior between an asymptotically periodic semiflows {{and its associated}} asymptotically autonomous <b>discrete</b> dynamical <b>process</b> is proved. As some applications, the global behavior of asymptotically periodic scalar Kolmogorov parabolic equations and predator-prey parabolic systems are also discussed. Key words and phrases: asymptotically periodic semiflow, <b>discrete</b> dynamical <b>process,</b> ω-limit set, global asymptotic behavior and nonautonomous parabolic equations...|$|R
40|$|Abstract: The paper {{describes}} a multi-agent support system (MASS) for <b>discrete</b> <b>processes</b> control design. The system {{is intended for}} <b>discrete</b> production <b>processes.</b> However some functions may work for continuous production processes as well. The proposed support system consists of several intelligent agents. The core of the systems is created by a database of modeling, control and simulation tools (algorithms) for <b>discrete</b> manufacturing <b>processes</b> and an intelligent decision system. The goal is to utilize information from the system‘s database and support a process control design {{on the basis of}} designer‘s requirements. The system consists of three modules: modeling, simulation and control. The intelligent decision system provides relevant reasoning about suitable algorithms and tools in respect of user’s requirements and description of a process...|$|R
40|$|The model determines a {{stochastic}} {{continuous process}} as continuous limit of a stochastic <b>discrete</b> <b>process</b> so {{to show that}} the stochastic continuous process converges to the stochastic <b>discrete</b> <b>process</b> such that we can integrate it. Furthermore, the model determines the expected volatility and the expected mean so {{to show that the}} volatility and the mean are increasing function of the time. ...|$|E
3000|$|Kast and Lapied (2010 b) {{showed that}} the {{symmetric}} <b>discrete</b> <b>process</b> defined above converges to a distorted generalized Brownian motion. More precisely, we quote the following result: [...]...|$|E
40|$|The exact {{distribution}} of extremes of a non-gaussian stationary <b>discrete</b> <b>process</b> is obtained and their crossing intervals are studied {{in terms of}} the autocorrelation coefficients for any level of crossing. This process is an important model for some physical magnitudes. extreme distribution downcrossing and upcrossing intervals non-Gaussian process type 1 extremes distribution...|$|E
40|$|Timed {{frames are}} {{introduced}} as objects that can form {{a basis of}} a model theory for <b>discrete</b> time <b>process</b> algebra. An algebraic setting for timed frames is proposed and results concerning its connection with <b>discrete</b> time <b>process</b> algebra are given. The presented theory of timed frames captures the basic algebraic properties of timed transition systems for the relative time case. Further structure on timed frames is provided by adding signal inserted states and conditional transitions, thus giving a semantic basis for <b>discrete</b> time <b>process</b> algebra with propositional signals. Time condition...|$|R
40|$|In <b>discrete</b> <b>processes,</b> as {{computational}} or genetic ones, {{there are}} many entities and each entity has a state at a given time. The update of states of the entities constitutes an evolution in time of the system, that is, a discrete dynamical system. The relations among entities are usually represented by a graph. The update of the states {{is determined by the}} relations of the entities and some local functions which together constitute (global) evolution operator of the dynamical system. If the states of the entities are updated in a synchronous manner, the system is called a parallel dynamical system. This paper is devoted to review the main results on the dynamical behavior of parallel dynamical systems over graphs which constitute a generic tool for modeling <b>discrete</b> <b>processes...</b>|$|R
40|$|We {{consider}} a locally compact, noncompact, totally disconnected, nondis-crete, metrizable abelian group G {{that is the}} union of a countable chain of compact subgroups. On G we {{consider a}} stationary standard Markov pro-cess defined by a semigroup µt of probability measures, satisfying µs+t = µs ∗ µt and limt→ 0 µt = δ 0, and we consider the Lévy measure associated to the process through the Lévy–Khintchine formula. Under {{the hypothesis that the}} Lévy measure is unbounded, we show that the process may be ob-tained as a limit of <b>discrete</b> <b>processes</b> defined on the discrete quotient groups G/Gn, where Gn is a descending chain of compact open subgroups. These <b>discrete</b> <b>processes,</b> in turn, are defined by means of a random walk on a homogeneous tree, naturally associated to G. 1. Introduction an...|$|R
40|$|Software process {{models have}} been {{simulated}} using system dynamics and discrete modeling paradigms. System dynamics models describe the interaction between project factors, but do not easily represent queues and <b>discrete</b> <b>process</b> steps. On the other hand, discrete event models describe process steps, but may not have enough events to represent feedback loops accurately. We develop a combined model that represents the software development process {{as a series of}} <b>discrete</b> <b>process</b> steps executed in a continuously varying project environment. We demonstrate the feasibility of this model by combining a discrete event model of the ISPW 6 software process example with the system dynamics model developed by Abdel-Hamid and Madnick [Abdel-Hamid and Madnick 91]. The combination of these two modeling paradigms creates the opportunity to examine new problems and issues that are highly relevant to software project managers. 1...|$|E
40|$|The multiple-effect {{evaporators}} {{problem has}} been studied to try an approach to the <b>discrete</b> <b>process</b> problem. In this report, the solution has been represented by flow graph and two problems have been brought forward. The one is relative {{to the construction of}} the solvable flow graph, and the other is relative to the classification of the multiple-effect evaporators problem...|$|E
40|$|The {{dynamics}} of high-volume, discrete-parts semiconductor manufacturing supply-chain {{systems can be}} described {{using a combination of}} Discrete EVent System Specification (DEVS) and Model Predictive Control (MPC) modeling approaches. To formulate the interactions between the <b>discrete</b> <b>process</b> model and its controller, another model called Knowledge Interchange Broker (KIB) is used. A robust and scalable testbed supporting DEVS-based manufacturing process modeling, MPC-based controller design, and the KIBDEV S/MPC interaction model is developed. A suite of experiments have been devised and simulated using this testbed. The flexibility of this approach for modeling, simulating, and evaluating stochastic <b>discrete</b> <b>process</b> models under alternative control schemes is detailed. The testbed illustrates the benefits and challenges associated with developing and using realistic manufacturing process models and process control policies. The simulation environment demonstrates the importance of explicitly defining and exposing the interactions between the manufacturing and control subsystems of complex semiconductor supply-chain systems...|$|E
30|$|For our purpose, we {{introduce}} the following definitions and results about almost periodic <b>discrete</b> <b>processes</b> which {{are given in}} [3, 17, 18] for the continuous case. For the discrete case we mention [11, 12]. With the objective to make this manuscript self contained we decided to include {{the majority of the}} proofs.|$|R
40|$|Following our {{previous}} results on Markov chains on periodic graphs, we study the convergence in rough path topology {{of a certain}} class of <b>discrete</b> <b>processes,</b> the hidden Markov walks, to a Brownian motion with an area anomaly. This area anomaly, which is a new object keeps track of the time-correlation of the discrete models and brings into light the question of embeddings of <b>discrete</b> <b>processes</b> into continuous time. We also identify an underlying combinatorial structure in the hidden Markov walks, {{which turns out to}} be a generalization of the occupation time from the classical ergodic theorem in the spirit of rough paths. Finally, we construct a rough path out of iterated sums of a hidden Markov walk, compare it to the classical canonical lift of the piecewise linear interpolation of the process and analyze its convergence to a non-geometric rough path...|$|R
40|$|In this paper, {{we present}} an {{approach}} {{for developing a}} simulation-tool-independent description for <b>discrete</b> <b>processes</b> and for converting such a general model into simulation-tool-specific models. Our aim is to develop models by means of SysML and to build converters from SysML models to models of a large variety of simulation tools. We developed Translator-Plugins for Anylogic, Simcron, Factory Explorer and Flexsim. Based on this architecture, we develop a general model description for <b>discrete</b> <b>processes</b> which permits to create comprehensive scenarios. Modeling {{can be divided into}} a structural, a behavioral and a control part. Our main domain is production systems but we show which elements are not domain specific and can be generalized to an approach for a standard to model discrete production planning and control problems. We also test domains like hospitals, logistics and civil engineering. ...|$|R
40|$|What is {{the optimal}} {{dividend}} strategy, that is, the strategy that maximizes {{the expectation of}} the discounted dividends until the possible ruin of a company? De Finetti (1957) formulated the problem and solved it {{under the assumption that}} the surplus of the company is a <b>discrete</b> <b>process,</b> with steps of size plus or minus one only. In this model a...|$|E
40|$|We {{present a}} three-phase, {{interdisciplinary}} study undertaken to improve methods of steel production within timing and capital investment constraints. The defined {{objective of this}} study was to increase the throughput of the hydrogen annealing process via assessment of various operating policies and resource levels. The three phases of the study successively involved work measurement project management, and <b>discrete</b> <b>process</b> simulation...|$|E
40|$|We {{present the}} continuous-time {{particle}} filter (CTPF) – {{an extension of}} the discrete-time particle filter for monitoring continuous-time dynamic systems. Our methods apply to hybrid systems containing both discrete and continuous variables. The dynamics of the discrete state system are governed by a Markov jump process. Observations of the <b>discrete</b> <b>process</b> are intermittent and irregular. Whenever the <b>discrete</b> <b>process</b> is observed, CTPF samples a trajectory of the underlying Markov jump process. This trajectory is then used to estimate the continuous variables using the system dynamics determined by the discrete state in the trajectory. We use the unscented Kalman-Bucy filter to handle nonlinearities and continuous time. We present results showing that CTPF is more stable in its performance than discrete-time particle filtering, even when the discrete-time algorithm is allowed to update many more times than CTPF. We also present a method for online learning of the Markov jump process model that governs the discrete states. ...|$|E
40|$|AbstractThe {{study of}} dynamic systems on time scales unifies {{continuous}} and <b>discrete</b> <b>processes.</b> In this paper, we shall examine Green's function for an nth-order focal boundary value problem. With this, {{we can then}} consider eigenvalue comparisons for higher-order focal boundary value problems on time scales using the theory of operators on a Banach space...|$|R
5000|$|The {{standard}} specifies {{principles and}} processes {{for the management}} of alarm systems based on distribute control systems and computer-based Human-Machine Interface (HMI) technology for the process industries. It covers alarms from all systems presented to the operator, which can include basic process control systems, annunciator panels, safety instrumented systems, fire and gas systems, and emergency response systems.The practices are applicable to continuous, batch, and <b>discrete</b> <b>processes.</b> The process industry sector includes many types of manufacturing processes, such as refineries, petrochemical, chemical, pharmaceutical, pulp and paper, and power.|$|R
40|$|In this paper, {{we build}} a {{central limit theorem}} for {{triangular}} arrays of sequences which satisfy a mild mixing condition. This result allows us to study asymptotic normality of density kernel estimators for some classes of continuous and <b>discrete</b> time <b>processes.</b> central limit theorem strongly mixing sequence triangular array Kernel estimator continuous and <b>discrete</b> time <b>processes...</b>|$|R
