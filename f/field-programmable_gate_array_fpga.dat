855|6561|Public
5|$|Reconfigurable {{computing}} {{is the use}} of a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> as a co-processor to a general-purpose computer. An FPGA is, in essence, {{a computer}} chip that can rewire itself for a given task.|$|E
25|$|As of July 2013, five {{companies}} were using Intel's fabs via the Intel Custom Foundry division: Achronix, Tabula, Netronome, Microsemi, and Panasonic most are <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> makers, but Netronome designs network processors. Only Achronix began shipping chips made by Intel using the 22-nm Tri-Gate process. Several other customers also exist {{but were not}} announced at the time.|$|E
2500|$|Since 1988, he {{has been}} {{employed}} at Xilinx, a fabless semiconductor company in San Jose, Silicon Valley, CA. [...] He {{was a member of}} the architecture definition group for the Xilinx XC4000 <b>Field-Programmable</b> <b>Gate</b> <b>Array</b> (<b>FPGA),</b> the first FPGA with dedicated arithmetic and memory. [...] At the same time, he was the technical leader for the XC4000 design automation software. [...] He led the architecture definition group for the Xilinx XC4000X device families. [...] He developed a Time-Multiplexed FPGA and software to map to it in the 1990s, long before Tabula commercialized the time-folded FPGA. [...] He is an inventor on approximately thirty patents in this area. [...] In the early 1990s, he edited and co-wrote Field-Programmable Gate Array Technology, introducing the first generation of academic researchers to the industrial side of programmable-logic architecture, tools and design.|$|E
5000|$|<b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGA)</b> - {{common for}} soft microprocessors, and {{more or less}} {{required}} for reconfigurable computing ...|$|R
3000|$|A {{high-speed}} hardware architecture {{based on}} Rainbow signature on <b>Field-Programmable</b> <b>Gate</b> <b>Arrays</b> (<b>FPGAs)</b> was proposed in [38]; [...]...|$|R
40|$|Abstract—This letter {{proposes a}} {{classification}} algorithm {{to discriminate between}} recoverable and not recoverable faults occurring in {{static random access memory}} (SRAM) -based <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs),</b> with the final aim of devising a methodology to enable the exploitation of these devices also in space applications, typically characterized by long mission times, where permanent faults become an issue. By starting from a characterization of the radiation effects and aging mechanisms, we define a controller able to classify such faults and consequently to apply the appropriate mitigation strategy. Index Terms—Fault tolerant systems, <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGA).</b> I...|$|R
5000|$|Altera, <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> {{manufacturer}} now Intel ...|$|E
5000|$|Fully {{reprogrammable}} software/firmware functionality {{by using}} <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> technology.|$|E
5000|$|Minimig - a re-implementation of an Amiga 500 using a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b>|$|E
25|$|Deep {{learning}} frameworks {{are still}} evolving, {{making it hard}} to design custom hardware. Reconfigurable devices like <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGA)</b> make it easier to evolve hardware, frameworks and software alongside each other.|$|R
50|$|Actel Corporation (formerly NASDAQ:ACTL) (now Microsemi) was a {{manufacturer}} of nonvolatile, low-power <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs),</b> mixed-signal FPGAs, and programmable logic solutions. It was headquartered in Mountain View, California, with offices worldwide.|$|R
50|$|Its {{most recent}} product, RTX64, focuses on 64-bit and {{symmetric}} multiprocessing (SMP) to replace dedicated hardware based {{systems such as}} digital signal processors (DSPs) or <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> with multicore PCs.|$|R
5000|$|Minimig is a {{hardware}} compatible open source re-implementation of an Amiga 500 using a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b>|$|E
50|$|Minimig (short for Mini Amiga) is an {{open source}} re-implementation of an Amiga 500 using a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b>|$|E
50|$|A <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> is an {{integrated}} circuit {{designed to be}} configured by a customer or a designer after manufacturing.|$|E
50|$|In {{combination}} with XCore processors, XC {{is used to}} build embedded systems with levels of I/O, real-time performance and computational ability usually attributed to <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> or application-specific integrated circuit (ASIC) devices.|$|R
40|$|Current {{high-performance}} {{applications are}} typically implemented on large-scale general-purpose distributed or multiprocessing systems {{often based on}} commodity microprocessors. <b>Field-Programmable</b> <b>Gate</b> <b>Arrays</b> (<b>FPGAs)</b> have now reached a level of sophistication that they too {{could be used for}} such applications...|$|R
50|$|Lola is {{designed}} to be a simple hardware description language for describing synchronous, digital circuits. Niklaus Wirth developed the language to teach digital design on <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> to computer science students while a professor at ETH Zürich.|$|R
50|$|The ZPU is a {{microprocessor}} stack machine designed by Norwegian company Zylin AS to run supervisory code in electronic systems {{that include a}} <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b>|$|E
50|$|In computing, a logic {{block or}} {{configurable}} logic block (CLB) {{is a fundamental}} building block of <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> technology. Logic blocks can be configured by the engineer to provide reconfigurable logic gates.|$|E
50|$|Reconfigurable {{computing}} {{is the use}} of a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> as a co-processor to a general-purpose computer. An FPGA is, in essence, {{a computer}} chip that can rewire itself for a given task.|$|E
50|$|CFESat, the Cibola Flight Experiment Satellite, {{examines}} radio spectra for ionospheric {{and lightning}} studies, using <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs).</b> As well as science observation, the mission aims to show use of reconfigurable FPGAs {{to work in}} the radiation environment of low Earth orbit.|$|R
50|$|LatticeMico32 is a 32-bit {{microprocessor}} {{soft core}} from Lattice Semiconductor optimized for <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs).</b> It uses a Harvard architecture, {{which means the}} instruction and data buses are separate. Bus arbitration logic {{can be used to}} combine the two buses, if desired.|$|R
50|$|In {{addition}} to ASICs, placement retains its prime importance in <b>gate</b> <b>array</b> {{structures such as}} <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs).</b> In FPGAs, placement maps the circuit’s subcircuits into programmable FPGA logic blocks {{in a manner that}} guarantees the completion of the subsequent stage of routing.|$|R
5000|$|Xilinx, Inc. ( [...] ) is an American {{technology}} company, {{primarily a}} supplier of programmable logic devices. It {{is known for}} inventing the <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> and as the first semiconductor company with a fabless manufacturing model.|$|E
50|$|Minimig is an {{open source}} {{hardware}} implementation of the Amiga 500 with the custom chipset implemented using a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA),</b> released under the GNU General Public Licence. It uses the MC68000 CPU chip from Freescale.|$|E
50|$|Nallatech is a {{computer}} hardware and software firm based in Camarillo, California, United StatesThe company specializes in <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> integrated circuit technology applied in computing. As of 2007 the company's primary markets were defense and high-performance computing.|$|E
40|$|Abstract: <b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> {{are used}} {{in a wide variety}} of {{applications}} and end markets, including digital signal processing, medical imaging, and high-performance computing. This application note outlines the issues related to powering FPGAs. It also discusses Maxim's solutions for powering Altera ® FPGAs...|$|R
5000|$|Digital {{circuitry}} is used {{to create}} general purpose computing chips, such as microprocessors, and custom-designed logic circuits, known as application-specific integrated circuit (ASICs). <b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs),</b> chips with logic circuitry whose configuration can be modified after fabrication, are also widely used in prototyping and development.|$|R
40|$|We {{overview}} {{a library}} generation framework called Spiral. For {{the domain of}} linear transforms, Spiral automatically generates implementations for parallel platforms including SIMD vector extensions, multicore processors, <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> and FPGA accelerated processors. The performance of the generated code is competitive with the best available hand-written libraries...|$|R
5000|$|The Amber core {{is fully}} {{compatible}} with the ARMv2a instruction set and is thus supported by the GNU toolchain. This older version of the ARM instruction set is supported {{because it is not}} covered by patents, and so can be implemented with no license from ARM Holdings, unlike some prior open source projects. [...] The cores were developed in Verilog 2001 and are optimized for <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> synthesis. For example, there is no reset logic: all registers are reset as part of FPGA initialization. The Amber project provides a complete embedded <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA)</b> system incorporating the Amber core and several peripherals, including universal asynchronous receiver/transmitters (UARTs), timers, and an Ethernet MAC.|$|E
50|$|A common array for very-high-volume {{embedded}} systems {{is the system}} on a chip (SoC) which contains a complete system consisting of multiple processors, multipliers, caches and interfaces on a single chip. SoCs can be implemented as an application-specific integrated circuit (ASIC) or using a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b>|$|E
50|$|A Verilog {{hardware}} description {{model is}} available for designing the W65C02S core into an application-specific integrated circuit (ASIC) or a <b>field-programmable</b> <b>gate</b> <b>array</b> (<b>FPGA).</b> As is common in the semiconductor industry, WDC offers a development system, which includes a developer board, an in-circuit emulator (ICE) and a software development system.|$|E
40|$|<b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> are an {{inexpensive}} and flexible "low risk" design alternative to custom integrated circuits. While FPGA partitioning and technology mapping have been well-studied, FPGA routing has received much less attention. In this {{paper we propose}} a unified general framework for FPGA routing, which allows simultaneous optimization of multiple competing objectives under a smooth designer-controlled tradeoff. Our approach is based on a new and general multi-weighted graph formulation, enabling a good theoretical performance characterization, as well as an effective, practical implementation. Our router is architectureindependent, computationally efficient, and performs very well on industrial benchmarks. Finally, our multi-weighted graph formulation is quite general and is directly applicable to many other areas of combinatorial optimization. 1 Introduction <b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGAs)</b> are {{an inexpensive}} and flexible design alternative to c [...] ...|$|R
2500|$|Massive {{centralized}} {{systems at}} times use special-purpose processors {{designed for a}} specific application, and may use <b>field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGA)</b> chips to gain performance by sacrificing generality. Examples of special-purpose supercomputers include Belle, Deep Blue, and Hydra, for playing chess, Gravity Pipe for astrophysics, [...] MDGRAPE-3 for protein structure computation ...|$|R
50|$|<b>Field-programmable</b> <b>gate</b> <b>arrays</b> (<b>FPGA)</b> {{are making}} it {{possible}} to build truly reconfigurable computers. The computer architecture is transformed by on the fly reconfiguration of the FPGA circuitry. The optimal matching between architecture and algorithm improves the performance of the reconfigurable computer. The key feature is hardware performance and software flexibility.|$|R
