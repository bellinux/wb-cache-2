20|321|Public
5000|$|In Linux, the [...] and [...] {{commands}} {{can be used}} {{to change}} and <b>display</b> <b>file</b> attributes.|$|E
50|$|Web {{applications}} are rarely used, although XML files and other output may be passed {{to a computer}} for <b>display.</b> <b>File</b> systems with folders are typically absent as are SQL databases.|$|E
5000|$|FileMon (from a {{concatenation}} of [...] "File" [...] and [...] "Monitor") — {{was a free}} utility for 32/64-bit Microsoft Windows {{operating systems}} which provided users with a powerful tool to monitor and <b>display</b> <b>file</b> system activity.|$|E
50|$|A SharePoint library {{stores and}} <b>displays</b> <b>files</b> and folders.|$|R
5000|$|A {{mechanism}} for creating, maintaining and <b>displaying</b> <b>file</b> descriptions ...|$|R
5000|$|... #Caption: Screenshot of Crax Commander window <b>displaying</b> <b>files</b> in List view.|$|R
5000|$|Code point 1 is the double-quote (") {{character}} {{when used}} in the <b>display</b> <b>file,</b> but uniquely to the ZX80 it is used internally as the string terminator character so the BASIC function [...] returns a null string; [...] translates to the printable [...] " [...] character.|$|E
5000|$|Code point 11 is the double-quote (") symbol {{when used}} in the <b>display</b> <b>file.</b> The BASIC {{function}} [...] prints as the same character but is shown as [...] "" [...] in BASIC source listings; it is used for including the literal [...] " [...] character in a string without conflict with the [...] " [...] string delimiter.|$|E
50|$|Standard input is stream data (often text) {{going into}} a program. The program {{requests}} data transfers by use of the read operation. Not all programs require stream input. For example, the dir and ls programs (which <b>display</b> <b>file</b> names contained in a directory) may take command-line arguments, but perform their operations without any stream data input.|$|E
5000|$|... fsstat <b>displays</b> <b>file</b> system {{statistical}} information about an image or storage medium.|$|R
5000|$|... #Caption: Screenshot of an OS X 10.10 YosemiteFinder window, <b>displaying</b> <b>files</b> in Cover Flow view.|$|R
5000|$|... : Apparatus {{for holding}} and guiding {{a chain of}} slides for {{successive}} <b>display</b> (<b>filed</b> Nov 17, 1948, issued Aug 14, 1951) ...|$|R
5000|$|In 4.4BSD and 4.4BSD-Lite and derivatives, the [...] and [...] {{commands}} {{can be used}} {{to change}} and <b>display</b> <b>file</b> attributes. To change a [...] "user" [...] attribute on a file in 4.4BSD-derived operating systems, the user must be the owner of the file or the superuser; to change a [...] "system" [...] attribute, the user must be the superuser.|$|E
50|$|A display list (or <b>display</b> <b>file)</b> is {{a series}} of {{graphics}} commands that define an output image. The image is created (rendered) by executing the commands to combine various primitives. This activity is most often performed by specialized display or processing hardware partly or completely independent of the system's CPU for the purpose of freeing the CPU from the overhead of maintaining the display, and may provide output features or speed beyond the CPU's capability.|$|E
50|$|The {{character}} set has 64 unique glyphs present at code points 0-63. With {{the most significant}} bit set the character is generated in inverse video; corresponding to code points 128-191. These 128 values are the only displayable ones allowed in the video memory (known as the <b>display</b> <b>file).</b> The remaining code points (64-127 and 192-255) are used as control characters such as 118 for newline, or uniquely to Sinclair BASIC for keywords, while some are unused.|$|E
50|$|If {{you need}} to convert or <b>display</b> <b>files</b> that might contain {{meaningful}} CAMG chunks, see the 'Notes on working with LBM files' below.|$|R
50|$|Menu driven DOS with {{enhanced}} features. Sorts disk directory listings and can set <b>display</b> options. <b>File</b> directory can be compressed. Can <b>display</b> deleted <b>files</b> and undelete them. Some advanced features {{required a}} proprietary TOP-DOS format.|$|R
25|$|Some {{projects}} {{have attempted to}} implement a three-dimensional method of <b>displaying</b> <b>files</b> and directory structures. Three-dimensional file browsing has not yet become popular; the exact implementation tends to differ between projects, {{and there are no}} common standards to follow.|$|R
5000|$|The default {{behavior}} of File Explorer, the file browser provided with Microsoft Windows, is for filename extensions {{to not be}} displayed. Malicious users have tried to spread [...] computer viruses and [...] computer worms by using file names formed like [...] The hope is that this will appear as , a harmless text file, without alerting the user {{to the fact that}} it is a harmful computer program, in this case written in VBScript. Default behavior for ReactOS is to <b>display</b> <b>file</b> extensions in ReactOS Explorer.|$|E
5000|$|Microsoft Windows has {{supported}} PTP from Windows ME onwards (excluding Windows CE). Microsoft implements PTP on Windows through Windows Image Acquisition. [...] A disadvantage of PTP on Windows {{as compared to}} USB mass storage is that Windows does not assign drive letters to PTP devices, so image files on them cannot be manipulated by scripts or standard Windows programs, only by Windows Explorer or applications with specially written PTP support. Also, Windows Explorer does not <b>display</b> <b>file</b> modification timestamps (though these are available via the file Properties popup).|$|E
50|$|Sketchpad {{ran on the}} Lincoln TX-2 (1958) {{computer}} at MIT, which had 64k of 36-bit words. Of the 36 bits available to store each display spot in the <b>display</b> <b>file,</b> 20 gave the coordinates of that spot for the display system and the remaining 16 gave {{the address of the}} n-component element responsible for adding that spot to display.In 1963 most computers ran jobs in batch job mode only, using punched cards or magnetic tape reels submitted by professional programmers or engineering students. A considerable amount of work was required to make the TX-2 operate in interactive mode with a large CRT screen. When Sutherland had finished with it, it had to be reconverted to run in batch mode again.|$|E
5000|$|Without options, ls <b>displays</b> <b>files</b> in a bare format. This bare format however {{makes it}} {{difficult}} to establish the type, permissions, and size of the files. The most common options to reveal this information or change the list of files are: ...|$|R
50|$|The file's name is {{generally}} always written in upper case. On Unix-like systems in particular {{this makes it}} easily noticedboth because lower case filenames are more usual, and because traditionally the ls command sorts and <b>displays</b> <b>files</b> in ASCIIbetical ordering, so that upper-case filenames appear first.|$|R
50|$|Phoca Download is an {{open source}} project, {{download}} managing software which runs in Joomla! CMS. It is programmed in PHP and runs on web server with enabled PHP support and installed Joomla!. It includes component, modules and plugins and allows users to <b>display</b> <b>files</b> on their websites which can be downloaded, played, previewed.|$|R
40|$|This paper {{describes}} a simple method to classify the binary document into scalar type or vector type. Any image can be basically classified into 1. Vector image 2. Scalar Image. Vector images are represented as <b>display</b> <b>file</b> containing {{set of drawing}} primitive commands (like move, line, curve, rectangle, circle etc) along with related parameters (like coordinates, angle, radius etc.). Scalar images are represented as pixel information ex. Bitmap. Thus memory required to store vector image is very less than of scalar image. Vector image is best to represent text since letters of text are generally formed by set of primitive drawing commands. If the vector image portions of a binary document are identified, then it can be represented as <b>display</b> <b>file</b> by the <b>display</b> <b>file</b> Generating-programs. Remaining portion of the file i. e. scalar portion can be compressed and kept/sent separately. Initially the binary document images are segmented using Constrained Run Length Algorithm (CRLA) which splits the entire binary image into labeled segment blocks. Next step is to calculate the features for each block according to the block size and data transition (zero-to-one / one-to-zero). Next, the block – features are fed into input layer of Feed Forward Neural Network(FFNN) and it is trained using back propagation method to train the network to classify content of each block into scalar or vector type. Hidden layer and neurons in hidden layer can be developed using constructive approach. FFNN training can be improved using momentum, learning rate and bias if necessary...|$|E
40|$|An {{intelligent}} system, {{based on}} a refreshed display device and associated memory, which permits conversational dialogue with two host systems concurrently and has interactive graphics capability, is described. Its use, both as an intelligent terminal and a graphics device, is illustrated {{within the context of}} the Durham Education and Research Multi Access Network (DERMAN). Details of the communications aspects, graphics protocol and <b>display</b> <b>file</b> management are given. Future lines of development of the system are discussed...|$|E
40|$|Englewood Cliffs, New Jersey: Prentice-Hall, Inc., 1978. {{includes}} bibliography: p. 320 - 329 and indexes. Part 1 {{is devoted}} to data structures and algorithms: {{an introduction to the}} subject and chapters on data structure, data bases, and list handling, picture structure and picture transformations, interpolation of curves and surfaces, and rendering of surfaces and solids. Part 2 emphasizes languages and their interpreters: interactive handling, the display processor, <b>display</b> <b>file</b> and picture file organization, language concepts for interactive computer graphics, and high level language implementation of display programming system...|$|E
5000|$|When decrypting a file, the {{attacker}} decrypts the sub-private key [...] "00000000.eky" [...] and saves the file as [...] "00000000.dky" [...] for decrypting the file {{after receiving the}} decrypted file. The sample itself also has another pair of primary RSA public keys and private keys, which are used to decrypt the <b>display</b> <b>files.</b>|$|R
50|$|Integrated FFmpeg {{support for}} <b>displaying</b> video <b>file</b> content in 3D applications.|$|R
50|$|IrfanView, {{an image}} viewer, uses Flash Player to <b>display</b> SWF <b>files.</b>|$|R
40|$|Vibration Pattern Imager (VPI) {{system and}} {{software}} designed {{to control and}} acquire data from laser vibrometer sensors. Based on personal computer, includes digital signal-processing (DSP) board and analog input/output (I/O) circuit board to control sensors and process data. Originally developed for use with Ometron VPI Sensor, adapted to any commercially available sensor that provides analog output signal and requires analog inputs for control of mirror position. VPI system includes graphical user interface providing for interactive control through keyboard and mouse-selected menu options. Main menu controls all functions for setup, acquisition of data, <b>display,</b> <b>file</b> operations, and leaving program. Two types of data acquired with system: single point or "full field". Written in C language and Texas Instrument' TMS 320 C 30 assembly language...|$|E
40|$|Architecture of a {{light weight}} three {{dimensional}} graphic framework model using traditional graphic methods is presented in this paper. The traditional graphics concepts are redesigned and remodeled for present requirements and development technologies. A pattern approach is adapted for presenting the model. Several pattern frames are suggested based on this model to suit new development methodologies. A pattern frame for porting traditional graphic models into new technologies is presented. A set of block diagrams and UML diagrams are {{used to describe the}} model. Lists of classified graphic functionalities to support graphic requirements of this model are listed. A sample client application of this model in VB is presented. General Terms Pattern, pattern-frames, pattern approach, traditional graphic model, display files, <b>display</b> <b>file</b> interpreter, graphic vector generation algorithms/functions, graphic Segments...|$|E
40|$|This project studies {{artificial}} societies, {{especially the}} Sugarscape and the Schelling segregation model. To implement the Sugarscape, {{a display of}} the sugar-filled environment with agents is outputted. The simulation allows agents to harvest sugar, consume sugar, die of starvation, and die of old age and al-lows the environment to grow back at a given rate. To implement the Schelling segregation model, two distinct groups of agents {{are added to the}} environ-ment with a preference for neighbors of their own kind {{to determine the effects of}} the individual pref-erences on the society at large. The reasons these two projects are being implemented is because while both are often compared, the two models in their original forms have not been combined and analyzed in a single simulation. In addition to displaying the environment, graphs showing the population growth and wealth distribution are displayed. These graphs analyze what is occurring in the simulation. Agents asexually reproduce. Seasons are implemented to an-alyze agent migration. The program code is broken up into files: a main file, an environment file, an agent file, a location file, a <b>display</b> <b>file,</b> and a simulation file. The conclusions show that the the model conforms to Axtell and Epstein’s models in the areas which were implemented. But more importantly, it shows that the simulation conforms to real world phenom-ena reasonably well. ...|$|E
5000|$|... #Subtitle level 2: Molecular {{visualization}} software {{capable of}} <b>displaying</b> PDB <b>files</b> ...|$|R
5000|$|New Desktop, {{comprises}} a redesigned 3-D {{dock with}} a new grouping feature called Stacks, which <b>displays</b> <b>files</b> in either a [...] "fan" [...] style, [...] "grid" [...] style, or (since 10.5.2) a [...] "list" [...] style. Rory Prior, on the ThinkMac blog, criticized the shelf-like Dock along {{with a number of}} other changes to the user interface.|$|R
5000|$|... : Electrically {{illuminated}} <b>display</b> apparatus (<b>filed</b> Jul 26, 1944, issued Nov 16, 1948) ...|$|R
