215|929|Public
25|$|The {{power of}} HyperCard could be {{increased}} significantly {{through the use}} of external command and external <b>function</b> <b>modules,</b> more commonly termed XCMDs and XFCNs. These were code libraries packaged in a resource fork that integrated into either the system generally or the HyperTalk language specifically; this was an early example of the plug-in concept. Unlike conventional plug-ins, these did not require separate installation before they were available for use; they could be included in a stack, where they were directly available to scripts in that stack.|$|E
50|$|RFC <b>function</b> <b>modules</b> in an SAP {{system must}} be proper <b>function</b> <b>modules</b> and must be {{registered}} in the SAP system as remote.|$|E
50|$|RFC-supported and GUI-supported {{interfaces}} {{can be used}} {{by external}} programs to call <b>function</b> <b>modules</b> in SAP systems, and execute them in these systems. Likewise, ABAP programs can also use these interfaces to use functions supplied by external programs.|$|E
30|$|The term ‘fault’ may {{refer to}} single or {{multiple}} faults occurring within the <b>function</b> <b>module</b> {{which may not}} cause a catastrophic failure of the <b>function</b> <b>module.</b> On the other hand, the term ‘fault’ when used {{in the context of}} a <b>function</b> <b>module,</b> as used in this footnote, may mean a complete <b>function</b> <b>module</b> failure implying that the <b>function</b> <b>module</b> outputs are no more reliable. The meaning of the term ‘fault’ therefore has to be carefully interpreted in reference to the context of its usage.|$|R
5000|$|Independent <b>functions</b> <b>modules</b> - modules that handle {{specific}} operations (e.g. <b>Module</b> <b>Functions</b> - various mathematical or scientific <b>functions,</b> <b>module</b> triangulation - performs advanced triangulation, Module LUD - equations systems solver); ...|$|R
5000|$|The Extended <b>Functions</b> <b>module</b> {{contained}} 124 registers of Extended memory. More {{could be}} added by ... Extended Memory modules.The HP-41CX contained the Extended <b>Functions</b> <b>module</b> as standard.|$|R
50|$|Each chassis {{consists}} of a power supply, and a backplane with slots for the addition of various option boards. Available options include serial and Ethernet communications, digital input and output cards, analog signal processing boards, counter cards, and other specialized interface and <b>function</b> <b>modules.</b>|$|E
50|$|In {{addition}} to the predefined expression types (decision table, decision tree, formula, database access, loops, etc.) and actions (sending e-mails, triggering a workflow, etc.), BRFplus can be extended by custom expression types. Also, direct calls of <b>function</b> <b>modules</b> as well as ABAP OO class methods are supported so that {{the entire range of}} the ABAP programming language is available for solving business tasks.|$|E
50|$|Synthesizers.com modular {{synthesizer}} products use analog circuitry as did {{the classic}} synthesizers produced by Moog, ARP, etc. Systems are constructed using <b>function</b> <b>modules</b> to provide customization and flexibility. Modules include the basic VCO, VCF, VCA synthesizer functions along with more advanced modules such assequencers, ring modulators and quantizers. Cabinets of various construction styles are offered to house modules and power components.|$|E
50|$|Each ABAP {{program can}} call a remote <b>function</b> <b>module</b> using the command CALL FUNCTION...DESTINATION. The {{parameter}} DESTINATION informs the SAP system that the called <b>function</b> <b>module</b> {{runs in a}} different system to the calling system. RFC communication with the remote system takes place {{as a part of}} the CALL FUNCTION command.|$|R
30|$|SUs {{can harvest}} {{energy from the}} {{environment}} with the <b>function</b> <b>module</b> of sensors [9 – 12].|$|R
5000|$|This {{transaction}} links an inbound {{processing code}} specified in a partner profile to a <b>function</b> <b>module.</b>|$|R
50|$|The {{power of}} HyperCard could be {{increased}} significantly {{through the use}} of external command and external <b>function</b> <b>modules,</b> more commonly termed XCMDs and XFCNs. These were code libraries packaged in a resource fork that integrated into either the system generally or the HyperTalk language specifically; this was an early example of the plug-in concept. Unlike conventional plug-ins, these did not require separate installation before they were available for use; they could be included in a stack, where they were directly available to scripts in that stack.|$|E
50|$|After graduation, Henson went to {{work for}} Burr-Brown Research, now merged into Texas Instruments, in Tucson, Arizona. While there, he worked on {{extremely}} low distortion quadrature oscillators and non-linear <b>function</b> <b>modules</b> (multipliers, vector adders and root-mean-square). His first patent was a design for a 4-quadrant log-antilog multiplier. He claims to have been fired (not from Burr-Brown) in 1972 for refusing to certify an electronic module for a nuclear power plant that failed to meet a required MTBF specification. Henson then set up his own company, Analog Precision Inc., producing specialized computer interface equipment and related industrial control devices.|$|E
5000|$|An INCLUDE module gets {{included}} at {{generation time}} into the calling unit; {{it is often}} used to subdivide large programs.Subroutine pools contain ABAP subroutines (blocks of code enclosed by FORM/ENDFORM statements and invoked with PERFORM).Function groups are libraries of self-contained <b>function</b> <b>modules</b> (enclosed by FUNCTION/ENDFUNCTION and invoked with CALL FUNCTION).Object classes and interfaces [...] are similar to Java classes and interfaces; the first define a set of methods and attributes, the second contain [...] "empty" [...] method definitions, for which any class implementing the interface must provide explicit code.Type pools define collections of data types and constants.|$|E
40|$|XM radio {{service is}} an {{emerging}} satellite digital audio radio service suitable for automotive environment, it offers users high-quality radio programs with better signal coverage by adopting communication satellite broadcasting technology. In order to incorporate XM radio function into a digital car audio {{system based on}} the embedded system industry standard ITRON, we analyze both software and hardware requirements of the XM <b>function</b> <b>module</b> in this work. Architectural design that separates the XM radio <b>function</b> <b>module</b> into five layers is given. The operating system selected for the microcontroller used in the car audio system is introduced. Implementation details of the XM <b>function</b> <b>module,</b> such as control commands and device communication protocol of the XM tuner, the state transition matrix layer and the application layer are also presented in this work. </p...|$|R
50|$|The Extended <b>Functions</b> <b>module</b> added many {{functionalities}} {{the users}} had wanted for ages, {{as the ability}} toprogrammatically assign functions to keys, repartition memory, etc.|$|R
50|$|Extended memory modules {{added more}} {{extended}} memory to the HP-41C. They required an extended <b>functions</b> <b>module</b> to be present, or theHP-41CX {{version of the}} calculator.|$|R
5000|$|Real-time {{virtualization}} capability {{based on}} open platform: This {{is different from}} the traditional base station built on proprietary hardware, where the software and hardware are closed-sources and provided by one single vendor. C-RAN BBU pool is built on open hardware, like x86/ARM CPU based servers, plus interface cards to handle fiber link to RRH and inter-connection in the pool. Real-time virtualization make sure the resources in the pool can be allocated dynamically to base station software stacks, say 4G/3G/2G <b>function</b> <b>modules</b> from different vendors according to network load. However, to satisfy the strict timing requirement of wireless communication system, the real-time performance for C-RAN is at the level of 10s of micro-seconds, which is two magnitude higher than the milli-second level 'real-time' performance usually seen in Cloud Computing environment.|$|E
30|$|Figure  6 c {{shows how}} the error {{signalling}} logic of the QMR system is realized. Since 3 out of 5 <b>function</b> <b>modules</b> forms {{a majority in the}} QMR system and since a majority of the <b>function</b> <b>modules</b> are expected to be in correct operation, there are a total of 5 C 3 (i.e. 10) combinations reflecting the distinct majority groups of <b>function</b> <b>modules.</b> Although groups of 4 or 5 <b>function</b> <b>modules</b> also form a majority with respect to a QMR system, nevertheless, they would be implicitly covered by the majority groups comprising just 3 <b>function</b> <b>modules.</b> The matching logic outputs of the majority groups are combined using a NOR gate, whose output is designated as ERROR in Fig.  6 c. At least one matching logic output corresponding to a majority group of the <b>function</b> <b>modules</b> has to be 1, which would indicate no error. Otherwise, an error signal would be produced conveying that the Boolean majority criterion is violated. The error signalling logic of an NMR system would signal an error if a majority of the <b>function</b> <b>modules</b> becomes faulty, i.e. if only a minority of the <b>function</b> <b>modules</b> exhibit correct operation. The cause of multiple function module failures may be temporary or permanent.|$|E
30|$|Adaptability: {{customized}} and personalized <b>function</b> <b>modules</b> {{are designed}} to satisfy different requirements of customers. The impact of customized and personalized functional modules on the common <b>function</b> <b>modules</b> should be reduced to the minimum.|$|E
5000|$|Business Application Programming Interface (BAPI) {{is used in}} mySAP {{to achieve}} {{business}} related functionalities. It is a remote-enabled <b>function</b> <b>module</b> which is provided by SAP.|$|R
30|$|According to the {{principle}} of the system composition, each <b>function</b> <b>module</b> of the system is taken into detailed circuit design. The main functional module realization is described as follows.|$|R
40|$|The current {{thesis is}} aimed at {{exploring}} differences in executive functions (EFs) between healthy adults; additionally, {{the aim is to}} examine the relationship between EFs and intelligence through the comparison of younger and older adults. The Executive <b>Functions</b> <b>Module</b> of the Neuropsychological Assessment Battery (NAB), as a measure of EFs, and the Wechsler Adult Intelligence Scale a Fourth Edition (WAIS-IV), as a measure of intelligence, were implemented. Data of 485 NAB participants aged 18 - 99 were analyzed to examine age-related differences in EFs. Data of 126 NAB participants aged 18 - 88, who additionally completed the WAIS-IV, were used to investigate the relationship between EFs and intelligence. Decreases in the mean scores and increases in the dispersion of performance on the NAB Executive <b>Functions</b> <b>Module</b> subtests with advancing age were observed. Additionally, age-related relationships between the NAB Executive <b>Functions</b> <b>Module</b> and the WAIS-IV were demonstrated. Age-related differences with regard to the relationship between EFs and intelligence were associated with higher scores in older adults...|$|R
30|$|The primary system outputs viz. P 1 to PK, Q 1 to QK and R 1 to RK {{are also}} {{simultaneously}} processed by the error signalling logic {{to generate the}} ERROR signal. The architecture of the error signalling logic {{is dependent on the}} number of <b>function</b> <b>modules</b> outputs and basically utilizes the matching logic (shown in Fig.  3). The purpose of the error signalling logic is to confirm whether or not the respective outputs of a majority group of the <b>function</b> <b>modules</b> match, and if a match is established with respect to even a single majority group of the <b>function</b> <b>modules,</b> the output of the error signalling logic viz. ERROR would be asserted low (i.e. binary 0). Otherwise, ERROR would be asserted high (i.e. binary 1) indicating that the Boolean majority condition of the <b>function</b> <b>modules</b> is violated. An NMR system, where a majority M out of N <b>function</b> <b>modules</b> is expected to operate correctly, would have a total of NCM majority groups, i.e. NCM unique combinations of correctly operating <b>function</b> <b>modules.</b>|$|E
3000|$|... [...]) are met, and 0 {{even if one}} {{equality}} {{condition is}} not met. Figure  6 b shows how the matching logic corresponding to the 3 <b>function</b> <b>modules</b> viz. I, J and K is realized. The matching logic outputs of the pairs of <b>function</b> <b>modules</b> considered (i.e. I, J and J, K) viz. MIJ and MJK are combined using an AND gate to produce the matching logic output (MIJK) corresponding to the 3 example <b>function</b> <b>modules.</b>|$|E
40|$|Key words：clustering preprocessing; {{heuristic}} rule; Immune Algorithm; function module clustering Abstract：A two-step {{strategy was}} proposed {{to solve the}} problems that inefficiency and inaccuracy of <b>function</b> <b>modules</b> clustering for complex product. Firstly, the three principles were proposed that weldment simplification, outsourcing simplification and borrowed component reduction to preprocess and simplify complex product. Then the complex product preprocessed can be clustered into different <b>function</b> <b>modules</b> by using the advanced Immune Algorithm amalgamated with heuristic rule(R-Immunity). By comparing the efficiency, accuracy and robustness of <b>function</b> <b>modules</b> clustering among the Genetic Algorithm, the Immune Algorithm and the R-Immunity Algorithm, we consider that the R-Immunity Algorithm is more efficient and precise {{to solve the problems}} related to <b>function</b> <b>modules</b> clustering. Finally, starting with the structure properties of complex product, the clustering results were optimized for the purposes of reducing coupling between modules and satisfying configuration requirements of customer...|$|E
5000|$|Global {{parameters}} modules - modules which handle global parameters like recognized property lists, time {{handling and}} <b>functions,</b> etc. (e.g. <b>module</b> globaldata, <b>module</b> time); Independent <b>functions</b> <b>modules</b> - modules that handle specific operations (e.g. <b>module</b> <b>functions</b> - various mathematical or scientific <b>functions,</b> <b>module</b> triangulation - performs advanced triangulation, Module LUD - equations systems solver); Structural modules - modules that handle geometry domain discretization, transformation and referentials, using variables like distances, areas, volumes, compute points, etc. (e.g. Module HorizontalGrid - handles the horizontal discretization, module horizontalmap - handles 2D horizontal mapping of grid cells like covered and uncovered cells, module map - handles 3D mapping of grid cells, Module Geometry - handles the vertical discretization and volumes); Data handling modules - modules that perform I/O operations (e.g. Module EnterData - reads and writes ASCII data files, Module HDF5 - reads and writes matricial data into HDF5 format (Hierarchical Data Format), Module TimeSerie - reads and writes formatted time series ASCII files); ...|$|R
30|$|OpenDaylight {{utilizes}} Open Services Gateway initiative (OSGi) {{framework to}} provide network management functions [11]. OSGi framework is a modular system for Java [12]. With OSGi, OpenDaylight can dynamically add or remove a <b>function</b> <b>module</b> {{while it is}} running. The <b>function</b> <b>module</b> is called a bundle in OSGi framework [13]. In this paper, the ANDSF server is implemented at the OpenDaylight bundle level, which configures the OFSs to establish appropriate data routing paths. In this way, the ANDSF messages can be directly delivered to the ANDSF server by OFPT_PACKET_IN messages [9] when they arrive at the OFSs.|$|R
40|$|We {{test the}} umbral methods {{introduced}} by Rota and Taylor within {{the theory of}} representation of the symmetric group. We prove that the volume polynomial of Pitman and Stanley represents the Frobenius characteristic of the Haiman parking <b>function</b> <b>module,</b> when the set of its variables consists of suitable umbrae. We also show that the volume polynomial in any set of similar and uncorrelated umbrae is umbrally equivalent, up to a constant term, to an Abel-like umbral polynomial. An analogous treatment of the parking <b>function</b> <b>module</b> of type B is given. Keywords: parking functions, noncrossing partitions, volume polynomial, umbral calculus, Abel polynomials. AMS subjec...|$|R
40|$|WEPP模型是USDA为了克服USLE的缺点而推出的以替代USLE的新一代水蚀预测模型。对WEPP模型的基础理论、特点、结构、功能模块等方面进行了详细介绍,其中功能模块包括天气随机生成模块、冬季过程模块、灌溉模块、水文过程模块、土壤模块、植物生长模块、残留物分解模块、地表径流模块、侵蚀模块。WEPP {{model is}} the physically-based model of water erosion prediction,developed by USDA for {{replacing}} USLE to use soil erosion investigation in the United States. The authors outline WEPP model,including fundamental theory,characteristics,structure,and <b>function</b> <b>modules</b> and components. <b>Function</b> <b>modules</b> are composited of weather generator,winter process,irrigation component,hillslope surface hydrology,soil component,plant growth component,residue decoposition and management,hydraulics of overland flow and hillsl [...] ...|$|E
40|$|This paper {{presents}} a system level specification for codesign of control modules and <b>function</b> <b>modules</b> in multimedia applications which have significant computational requirements {{as well as}} complex control systems. In the proposed compositional approach, control modules and <b>function</b> <b>modules</b> are separately described with extended FSM, called fFSM, and dataflow respectively, and integrated in the top-level codesign backplane. The codesign backplane supports interaction requirements between control and <b>function</b> <b>modules,</b> enables cosimulation of their composition, and will provide cosynthesis. Since fFSM and dataflow models are formal models of computation, we can analyze the specification of each module. Comparison with previous approaches and preliminary experiments show novelty and practicality of the proposed technique...|$|E
30|$|Openness: {{personalized}} <b>function</b> <b>modules</b> {{are designed}} to open to third-party vendors through open interfaces.|$|E
40|$|AbstractWith the {{completion}} of the Three Gorges Project, the supergiant water resources and hydropower construction has entered a new time. However there still are many problems in supergiant water resources and hydropower construction, especially in emergency management. The paper mainly study on the development of emergency management system in the supergiant water resources and hydropower construction, including the <b>function</b> <b>module</b> and the system architecture of the emergency management system. The paper presents a platform which has the complete <b>function</b> <b>module</b> and the advanced system architecture. It can provide guidance and assistance for many water resources and hydropower companies...|$|R
50|$|In {{production}} from 2012 the RX630 series included E2 data flash capable of 100,000 rewrites and enhanced peripheral functions, USB 2.0 <b>function</b> <b>module,</b> RTC with timestamp, temperature sensor, independent WDT, and POR / LVD.|$|R
30|$|The word-voter {{is meant}} to handle common mode {{multiple}} <b>function</b> <b>module</b> faults only in the TMR system. Let us now presume that after the application of specific inputs, the correct outputs of half adder 2 are Sum 2  =  1 and Cout 2  =  1. Assuming that half adders 1 and 3 have become faulty, let their outputs be assumed as Sum 1  =  0, Cout 1  =  1; and Sum 3  =  1, Cout 3  =  0. As a result, the internal word-voter outputs viz. W 12, W 23 and W 13, which govern the matching/non-matching of the pairs of <b>function</b> <b>module</b> outputs will evaluate to 0. Hence, the error output (ErrorWV) produced by the word-voter would be 1, which is correct, indicating that the TMR system is experiencing multiple <b>function</b> <b>module</b> faults, thus suggesting a repair is necessary. Since W 13 equals 0, the outputs of half adder 2 viz. Sum 2 and Cout 2 are reflected as the TMR system outputs i.e. Sum =  1 and Cout =  1, which is also correct.|$|R
