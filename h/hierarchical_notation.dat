1|7|Public
30|$|An {{integrated}} approach {{to assist the}} design of context-sensitive systems is described in (Vieira et al. 2011). Their work includes a context metamodel for representing structural and behavioral aspects on CSS. In order to support the modeling of behavioral concepts, the authors propose {{the use of a}} Unified Modeling Laguage (UML) profile to model the application behavior using the UML activity diagram with the semantics defined in the Contextual Graphs (CxG)(Br√©zillon 2007). However, the authors observed in their empirical study that the usage of UML Activity diagram to model the contextual graphs following the CxG profile, caused misunderstandings, since the semantics of the elements of this diagram conflicted with the contextual graph elements semantics. In our work, we use the statecharts to specify the intended behavior of context-sensitive systems since it is a popular choice for representing the behavioral view of a system and it is also adopted by UML language. Besides, this notation is an interesting visual formalism for modeling context-sensitive systems since they are reactive and adapt their requirements. Moreover, an activity diagram is a special case of a statechart. Statecharts, otherwise, are a powerful graphical notation to describe reactive systems that allow nested super- /sub-state structure for abstraction or decomposition. This <b>hierarchical</b> <b>notation</b> of statecharts allows the description of the behavior of context-sensitive systems at different levels of abstraction. This property of statecharts makes them much more concise and usable than activity diagrams and contributes to a lower structural complexity of the models. Besides, we also concerned with the satisfaction of NFRs, thus we propose an activity in our process that deals with variants prioritization.|$|E
40|$|We {{describe}} {{the design of}} VIP, a graphical front-end to the model checker SPIN. VIP supports a visual formalism, called v-Promela that connects the model checker to modern <b>hierarchical</b> <b>notations</b> for the specification of objectoriented, reactive systems. The formalism is comparable to formalisms such as UML-RT, ROOM, and Statecharts, but is presented here in a framework {{that allows us to}} combine the benefits of a visual, hierarchical specification method with the power of LTL model checking provided by SPIN. Like comparable formalisms, VIP can describe hierarchies of behaviour and of system structure. The formalism is designed to be transparent to the SPIN model checker itself, by allowing all central constructs to be translated mechanically into basic PROMELA, as already supported by the existing model checker. 1. Introduction To manage the complexity of the software engineering process the software life-cycle has been split up into a number of stages, and software process models ass [...] ...|$|R
40|$|One of {{the most}} {{interesting}} results of the application of formal methods in the HCI field is that precise descriptions of task models can be given. ConcurTaskTree supplies a <b>hierarchical</b> graphical <b>notation</b> providing a precise semantics for specifying concurrent task models, and this paper describes a first attempt for applying this notation on en-route case study, with the possibility to introduce data link communication in addition to the current tools (radiotelephony) ...|$|R
500|$|The Dewey Decimal Classification organizes library {{materials}} by discipline or {{field of}} study. Main divisions include philosophy, social sciences, science, technology, and history. The scheme {{is made up}} of ten classes, each divided into ten divisions, each having ten sections. The system's notation uses Arabic numbers, with three whole numbers making up the main classes and sub-classes and decimals creating further divisions. The classification structure is <b>hierarchical</b> and the <b>notation</b> follows the same hierarchy. Libraries not needing the full level of detail of the classification can trim right-most decimal digits from the class number to obtain a more general classification. For example: ...|$|R
40|$|This paper {{considers}} the background history, development and modern {{use of the}} IPC as a storage and retrieval tool. Although originally designed as a shelf-location tool for paper search-files, the classification has certain features which make it an attractive option for subject-based patent searching of electronic databases. The online load of the IPC by the major host systems is considered, together {{with a discussion of}} how to enhance search results by using the classification. International Patent Classification Patent searching Online databases Precedence rules Revision practice Concordances <b>Hierarchical</b> structure Dot-level <b>notation</b> Search term truncation Last place rule Scope notes Hybrid systems User aids...|$|R
5000|$|The Dewey Decimal Classification organizes library {{materials}} by discipline or {{field of}} study. Main divisions include philosophy, social sciences, science, technology, and history. The scheme {{is made up}} of ten classes, each divided into ten divisions, each having ten sections. The system's notation uses Arabic numbers, with three whole numbers making up the main classes and sub-classes and decimals creating further divisions. The classification structure is <b>hierarchical</b> and the <b>notation</b> follows the same hierarchy. Libraries not needing the full level of detail of the classification can trim right-most decimal digits from the class number to obtain a more general classification. For example: ...|$|R
40|$|A {{system for}} {{physiological}} {{modeling and simulation}} is presented. The architecture is considering hardware and software support for real-time physiological simulators, which are very important for medical education and risk management. In contrary to other modeling methods, in this work the focus is to provide maximal modeling flexibility and extensibility. This is provided {{on the one hand}} by a <b>hierarchical</b> modeling <b>notation</b> in XML and on other hand by extending current methods by dynamic stochastic system modeling. Dynamic Bayesian Networks as well as deterministic system modeling by systems of algebraic and differential equations lead towards a sophisticated environment for medical simulation. Specific simulations of haemodynamics and physiological based pharmacokinetics and pharmacodynamics are performed by the proposed methods, demonstrating the applicability of the approaches. In contrary to physiological modeling and analysis tools, for an educational simulator, the models have to be computed in real-time, which requires extensive design of the hardware and software architecture. For this purpose generic and extensible frameworks have been suggested and realized. All the components together lead to a novel physiological simulator environment, including a dummy, which emulates ECG, SaO 2 and IBP vital signals in addition to software signal simulation. The modeling approaches with DBN are furthermore analyzed in the domains of psychological and physiological reasoning, which should be integrated into a common basis for medical consideration. Furthermore the system is used to show new concepts for dependable medical data monitoring, which are strongly related to physiological and psychological simulations...|$|R
40|$|Abstract. This paper {{deals with}} issue of {{properties}} specification for software verifications and translation between formal languages. Through this paper, the unique framework of property specifications including most kinds of formal specifications logics, automatic methods are shown by a property specifications guided system and PVSL(The Pattern based Visual property Specification Language). Additionally, a properties to specify and structures, Interconnection {{of them are}} also described by property charts. In this study, the pattern based visual property specification language (PVSL) is defined and property specifications method is also designed by convenience specifications of required property. Required properties can be described by its charts and analyzes its meaning and structures as using patterns diagrams and property and-or tree. On the other hands, it also guarantees stability and limitation of utilizations of patterns using much stronger specifying Dwyer`s meaning based property classification. The PVSL and property charts use <b>hierarchical</b> state machine <b>notation</b> {{to take advantage of}} knowledge a person who is one of practitioners has as much as possible, and for Nu-SMV, CW-CNC. They can be adapted to describe property charts and analyze into examples of CTL (Computation Tree Logic) and Modal Mu-Calculus logic that have been already used...|$|R

