223|168|Public
50|$|The k-vector is a range searching {{technique}} {{that can be}} applied to fast retrieve data from any static database. The k-vector technique was initially proposed to identify stars observed by star trackers on board spacecrafts. Then, it has been applied to solve different kinds of problems belonging to different fields, such as: 1) nonlinear functions inversion and intersection, 2) extensive sampling data generation with assigned analytical (or numerical) distribution, 4) find approximate solutions of nonlinear Diophantine equations, and 4) <b>iso-surface</b> identification for 3-dimensional data distributions and level set analysis.|$|E
40|$|Figure 1 : First {{three levels}} and final {{result of our}} {{hierarchical}} <b>iso-surface</b> extraction algorithm. In this paper we present a novel approach to <b>iso-surface</b> extraction {{which is based on}} a multiresolution volume data representation and hierarchically approximates the <b>iso-surface</b> with a semiregular mesh. After having generated a hierarchy of volumes, we extract the <b>iso-surface</b> from the coarsest resolution with a standard Marching Cubes algorithm, apply a simple mesh decimation strategy to improve the shape of the triangles, and use the result as a base mesh. Then we iteratively fit the mesh to the <b>iso-surface</b> at the finer volume levels, thereby subdividing it adaptively {{in order to be able}} to correctly reconstruct local features. We also take care of generating an even vertex distribution over the <b>iso-surface</b> so that the final result consists of triangles with good aspect ratio. The advantage of this approach as opposed to the standard method of extracting the <b>iso-surface</b> from the finest resolution with Marching Cubes is that it generates a mesh with subdivision connectivit...|$|E
40|$|Abstract. The Centered Cubic Lattice {{method is}} used for an <b>iso-surface</b> extraction. This paper focuses on its {{comparison}} with other fundamental methods (Marching Cubes, Marching Tetrahedra) that are also used to extract an <b>iso-surface</b> from regular volume data. Iso-surfaces that are generated using above mentioned methods and mathematical data are compared due to area and volume approximation. The Hausdorff and RMS distances are also utilized for comparisons. Also all possible cell tessellations into 6 tetrahedra are discussed and analyzed. We think that such a comparison can be helpful to decide which of tested methods should be chosen when we have concrete demands concerning the <b>iso-surface.</b> Also newly developed methods can be compared with existing ones in the similar way. Key words. Computer graphics, <b>Iso-surface,</b> Comparison, Error, Hausdorff distance, Volume dat...|$|E
5000|$|Contour based reconstruction: Iso-contours are {{attached}} to form <b>iso-surfaces</b> ...|$|R
40|$|Abstract — Dual Contouring is a feature-preserving <b>iso-surfacing</b> {{method that}} {{extracts}} crack-free surfaces from both uniform and adaptive octree grids. We present {{an extension of}} Dual Contouring that further guarantees that the mesh generated is a manifold even under adaptive simplification. Our main contribution is an octree-based, topology-preserving vertex clustering algorithm for adaptive contouring. The contoured surface generated by our method contains only manifold vertices and edges, preserves sharp features, and possesses much better adaptivity than those generated by other <b>iso-surfacing</b> methods under topologically safe simplification. Index Terms — <b>iso-surfacing,</b> contour simplification, vertex clustering, manifold I...|$|R
5000|$|MultiSurfaceCoverage: sets {{of values}} {{associated}} with surfaces located in space/time (such as <b>iso-surfaces)</b> ...|$|R
40|$|There {{are various}} methods for extracting iso-surfaces from {{volumetric}} data. Marching cubes or tetrahedra or raytracing methods are mostly used. There are many specific techniques {{to increase speed}} of computation and decrease memory requirements. Although a precision of <b>iso-surface</b> extraction is very important, too, it is not mentioned usually. A comparison of the selected methods was made in different aspects: <b>iso-surface</b> extraction process time, number of triangles generated and estimation of radius, area and volume errors based on approximation of a sphere. Surprisingly, experiments proved {{that there is no}} direct relation between precision of extracted and human perception of the extracted <b>iso-surface...</b>|$|E
40|$|Figure 1 : First {{three levels}} and final {{result of our}} {{hierarchical}} <b>iso-surface</b> extraction algorithm. The extraction and display of iso-surfaces is a standard method for the visualization of volume data sets. In this paper we present a novel approach that utilizes a hierarchy on both the input and the output data. For the generation of a coarse base mesh, we construct a hierarchy of volumes and extract an <b>iso-surface</b> from the coarsest resolution with a standard Marching Cubes algorithm. We additionally apply a simple mesh decimation algorithm to improve {{the shape of the}} triangles. We iteratively fit this mesh to the <b>iso-surface</b> at the finer volume levels. To be able to reconstruct fine detail of the <b>iso-surface</b> we thereby adaptively subdivide the mesh. To evenly distribute the vertices of the triangle mesh over the <b>iso-surface</b> and generate a triangle mesh with evenly shaped triangles, we have integrated a mesh smoothing algorithm into the fitting process. The advantage of this approach is that it generates a mesh with subdivision connectivity which can be utilized by several multiresolution algorithms such as compression and progressive transmission. As applications of our method we show how to reconstruct the surface of archaeological artifacts and the reconstruction of the brain surface for the simulation of the brain shift phenomenon. ...|$|E
40|$|The Centered Cubic Lattice {{method is}} used for an <b>iso-surface</b> extraction. This paper focuses on its {{comparison}} with other fundamental methods (Marching Cubes, Marching Tetrahedra) that are also used to extract an <b>iso-surface</b> from regular volume data. Iso-surfaces that are generated using above mentioned methods and mathematical data are compared due to area and volume approximation. The Hausdorff and RMS distances are also utilized for comparisons. Also all possible cell tessellations into 6 tetrahedra are discussed and analyzed. We think that such a comparison can be helpful to decide which of tested methods should be chosen when we have concrete demands concerning the <b>iso-surface.</b> Also newly developed methods can be compared with existing ones in the similar way...|$|E
40|$|A {{method is}} {{presented}} to extract space curves, defined by differential invariants, at increasing scales. The curves are considered as the intersection of two <b>iso-surfaces</b> in 3 D, so their moving paths or orbits can be explicitly obtained in scale space as the intersection of two <b>iso-surfaces</b> in 4 D. This method {{is based on a}} novel algorithm to search for <b>iso-surfaces</b> and their intersections in nD. The algorithm is a significant extension of the 3 D Marching Lines algorithm with new orientation and implementation considerations. As a result of these considerations, the reconstructed <b>iso-surfaces</b> and their intersections can be proved to have good topological properties; moreover the implementation is quite straightforward. Specifically, a 4 D extension has been implemented to follow spatial curves efficiently via scale. The algorithm automatically finds the connection order of singularities, so tracking remains reliable even if scale is not densely sampled. As an example, the develo [...] ...|$|R
40|$|We {{present an}} {{algorithm}} to extract space curves, defined by differential invariants, at increasing scales. The algorithm uses {{an extension of}} the 3 D Marching Lines that allows us to search for <b>iso-surfaces</b> and their intersections in spaces of arbitrary dimension. Specifically, we have implemented a 4 D extension that we apply to track lines efficiently on <b>iso-surfaces.</b> We show that it automatically finds the connection order of singularities. As an example we visualize the development of parabolic and crest lines across scale...|$|R
40|$|Given {{an image}} data set, D, {{defined as an}} {{explicit}} trivariate hypersurface in four space, we present an algorithm to extract arbitrary <b>iso-surfaces</b> out of D in sub-linear complexity, {{in terms of the}} number of voxels in D. Off line construction of an hierarchical high order trivariate t to D with arbitrary precision extends a similar notion of Octree optimization of three dimensional images. During the interaction stage, the hierarchy is employed so arbitrary <b>iso-surfaces</b> can be extracted in a sub-linear time, and with maintained accuracy...|$|R
40|$|The {{extraction}} {{and display}} of iso-surfaces {{is a standard}} method for the visualization of volume data sets. In this paper we present a novel approach that utilizes a hierarchy on both the input and the output data. For the generation of a coarse base mesh, we construct a hierarchy of volumes and extract an <b>iso-surface</b> from the coarsest resolution with a standard Marching Cubes algorithm. We additionally apply a simple mesh decimation algorithm to improve {{the shape of the}} triangles. We iteratively fit this mesh to the <b>iso-surface</b> at the finer volume levels. To be able to reconstruct fine detail of the <b>iso-surface</b> we thereby adaptively subdivide the mesh. To evenly distribute the vertices of the triangle mesh over the <b>iso-surface</b> and generate a triangle mesh with evenly shaped triangles, we have integrated a mesh smoothing algorithm into the fitting process. The advantage of this approach is that it generates a mesh with subdivision connectivity which can be utilized by several multiresolution algorithms such as compression and progressive transmission. As applications of our method we show how to reconstruct the surface of archaeological artifacts and the reconstruction of the brain surface for the simulation of the brain shift phenomenon...|$|E
40|$|The Marching Cubes and Marching Tetrahedra {{algorithms}} {{are widely}} used to generate iso-surfaces of a 3 D scalar fields. These methods are very popular for their good efficiency and because they produce triangular mesh that represents extracted <b>iso-surface.</b> This triangular mesh can be processed and rendered by standard graphics pipeline using hardware accelerators and OpenGL API. This approach enables to reach maximal speed of rendering. This paper describes <b>iso-surface</b> extraction and rendering modules and interaction between them under the Modular Visualization Environment (MVE) ...|$|E
40|$|We {{present a}} novel method to extract iso-surfaces from {{distance}} volumes. It generates high quality semi-regular multiresolution meshes of arbitrary topology. Our technique proceeds in two stages. First, a very coarse mesh with guaranteed topology is extracted. Subsequently an iterative multi-scale force-based solver refines the initial mesh into a semi-regular mesh with geometrically adaptive sampling rate and good aspect ratio triangles. The coarse mesh extraction {{is performed using}} a new approach we call surface wavefront propagation. A set of discrete iso-distance ribbons are rapidly built and connected while respecting the topology of the <b>iso-surface</b> implied by the data. Subsequent multi-scale refinement is driven by a simple force-based solver designed to combine good <b>iso-surface</b> fit and high quality sampling through reparameterization. In contrast to the Marching Cubes technique our output meshes adapt gracefully to the <b>iso-surface</b> geometry, have a natural multiresolution struct [...] ...|$|E
5000|$|Voxel based reconstruction: Voxels having same {{intensity}} {{values are}} used to form <b>iso-surfaces.</b> One popular algorithm is Marching Cubes. Some similar algorithms as Marching Tetrahedrons, Dividing Cubes [...] can be considered.|$|R
40|$|The authors {{present an}} {{algorithm}} for interactively extracting and rendering <b>iso-surfaces</b> of large volume datasets in a view-dependent optimal fashion. A recursive tetrahedral mesh subdivision scheme, based on longest edge bisection, {{is used to}} hierarchically decompose the data into a multi-resolution structure. This data structure allows fast extraction of arbitrary <b>iso-surfaces</b> to within user specified view-dependent error bounds. A compact encoding of the mesh subdivision optimizes memory usage and processor performance necessary for large datasets. A data layout scheme based on hierarchical space filling curves provides optimal access to the data in a cache coherent manner...|$|R
40|$|Figure 1 : Three {{images of}} the Lawrence-Livermore National Laboratory (LLNL) {{simulation}} of a Richtmyer-Meshkov instability (time step 270; iso-value 16) at different level-of-detail (LOD) levels. While data is loaded asynchronously in the background {{it is possible to}} fully interact with the scene. A kD-tree based LOD structure is used to bridge loading times while allowing interactive ray tracing of up to four frames per second on a custom PC. The visualization of <b>iso-surfaces</b> from gridded volume data is an important tool in many scientific applications. Today, it is possible to ray trace high-quality <b>iso-surfaces</b> at interactive frame rates even on commodity PCs. However, current algorithms fail if the data set exceeds a certain size either because they are not designed for out-of-core data sets or the loading times are too high because there is too much overhead involved in the out-of-core (OOC) techniques. We propose a kD-tree based OOC data structure that allows to ray trace <b>iso-surfaces</b> of large volumetric data sets of many giga bytes at interactive frame rates on a single PC. A LOD technique is used to bridge loading times of data that is fetched asynchronously in the background. Using this framework we are able to ray trace <b>iso-surfaces</b> between 2 and 4 fps on a single dual-core Opteron PC at 640 × 480 resolution and an in-core memory footprint that is {{only a fraction of the}} entire data size...|$|R
40|$|Abstract Despite the {{popularity}} of polygonization of implicit surfaces in graphics applications, an efficient solu-tion to both polygonize and optimize meshes from implicit surfaces on modern GPUs has not been developed to date. In this paper, we introduce a practical GPU-based approach to efficiently polygonize and optimize <b>iso-surface</b> meshes for implicit surfaces. Specifically, we design new schemes to maximally exploit the parallel features of the GPU hard-ware, by optimizing both the geometry (vertex position, ver-tex distribution, triangle shape, and triangle normal) and the topology (connectivity) aspects of a mesh. Our exper-imental results show that, besides significant improvement on the resultant mesh quality, our GPU-based approach is approximately {{an order of magnitude}} faster than its CPU counterpart and faster than or comparable to other GPU <b>iso-surface</b> extraction methods. Furthermore, the achieved speedup becomes even higher if the resolution of the <b>iso-surface</b> is increased...|$|E
40|$|This paper {{describes}} a generic algorithm for iso-line, iso-strip, <b>iso-surface,</b> and iso-volume visualization of unstructured 3 D meshes, such as finite element models. The {{four types of}} visualization are integrated in the same data representation. Consequently iso-volume contouring is trivially implemented as a combination of iso-strip and <b>iso-surface</b> patches of surfaces. The algorithm can handle cells of any shape, even those that result from sectioning off parts of the model with cutting planes. The contoured stress results of two finite element analysis are shown as examples. Keywords: Volume Visualization, <b>Iso-surface,</b> Iso-volume, Unstructured Mesh, Finite Element. 1 Introduction Scientific Visualization uses computer graphics techniques to help give scientists {{an understanding of the}} structure (or lack of structure) contained within their data. This is usually achieved by extracting scientifically meaningful information from numerical descriptions of complex phenomena thro [...] ...|$|E
40|$|This paper {{describes}} a generic algorithm for iso-line, iso-strip, <b>iso-surface,</b> and iso-volume visualization of unstructured 3 D meshes, such as finite element models. The {{four types of}} visualization are integrated in the same data representation. Consequently iso-volume contouring is trivially implemented as a combination of iso-strip and <b>iso-surface</b> patches of surfaces. The algorithm can handle cells of any shape, even those that result from sectioning off parts of the model with cutting planes. The contoured stress results of two finite element analysis are shown as examples...|$|E
50|$|A volume {{described}} as voxels can be visualized either by direct volume rendering {{or by the}} extraction of polygon <b>iso-surfaces</b> that follow the contours of given threshold values. The marching cubes algorithm is often used for isosurface extraction, however other methods exist as well.|$|R
30|$|As to volume datasets, volume {{rendering}} is {{a classic}} visualization technique. Both image-space and object-space volume rendering algorithms have been thoroughly studied {{in the past several}} decades. The typical image-space algorithm is ray casting, which was first proposed by Levoy [33]. Many improvements in ray casting have since been developed [34 – 37]. Splatting is the most common object-space approach. It directly projects voxels to the 2 D screen to create screen footprints which can be blended to form composite images [38 – 42]. Hybrid approaches such as shear-wrap algorithm [43] and GPU-based algorithms provide significant speedup for interactive applications [44, 45]. Although <b>iso-surfaces</b> are typically extracted from volume data as polygon meshes [46], ray casting methods can also be applied toward volumetric <b>iso-surfacing</b> [47, 48].|$|R
40|$|Short PapersInternational audienceWe propose here a {{sculpture}} metaphor for rapid shape prototyping. This metaphor makes the underlying surface description transparent for the user, enabling him to {{focus only on}} the shape being modeled. Our approach is based on implicit surfaces deﬁned as <b>iso-surfaces</b> over a discrete ﬁeld...|$|R
40|$|Figure 1 : Two images {{generated}} {{with our}} illustrative rendering algorithm. The {{shape of the}} front layer of the geometry is represented by black silhouettes and hatching. The second layer of the <b>iso-surface</b> is rendered as red silhouette lines. In Figure 1 (b), {{a portion of the}} volume containing very large voxel values is shown as blue “secondary ” geometry. The images were rendered in real-time. Indirect volume rendering is a widespread method for the display of volume datasets. It is based on the extraction of polygonal isosurfaces from volumetric data, which are then rendered using conventional rasterization methods. Whereas this rendering approach is fast and relatively easy to implement, it cannot easily provide an understandable display of structures occluded by the directly visible <b>iso-surface.</b> Simple approaches like alpha-blending for transparency when drawing the <b>iso-surface</b> often generate a visually complex output, which is difficult to interpret. Moreover, such methods can significantly increase the computational complexity of the rendering process. In this paper, we therefore propose a new approach for the illustrative indirect rendering of volume data in real-time. This algorithm emphasizes the silhouette of objects represented by the <b>iso-surface.</b> Additionally, shading intensities on objects are reproduced with a monochrome hatching technique. Using a specially designed two-pass rendering process, structures behind the front layer of the <b>iso-surface</b> are automatically extracted with a depth peeling method. The shapes of these hidden structures are also displayed as silhouette outlines. As an additional option, the geometry of explicitly specified inner objects can be displayed with constant translucency. Although these inner objects always remain visible, a specific shading and depth attenuation method is used to convey the depth relationships...|$|E
40|$|An {{algorithm}} is presented which generates a triangular mesh to approximate an <b>iso-surface.</b> It {{starts with a}} triangulation of a sphere and next applies a series of deformations to this triangulation to transform it into the required surface. These deformations leave the topology invariant, so the final <b>iso-surface</b> should be homeomorphic with a sphere. The {{algorithm is}} adaptive {{in the sense that}} the lengths of the sides of the triangles in the mesh vary with the local curvature of the underlying surface. A quantitative analysis of the accuracy of the algorithm is given along with an empirical comparison with earlier algorithms. keywords: iso-surfaces, implicit surfaces, polygonization 1 Introduction For a scalar function V defined on IR 3, an <b>iso-surface</b> 1 is the collection of points r where V (r) takes a given value, V (r) = V 0. Iso-surfaces play a significant role in computer visualisation. Various researchers have used skeletal iso-surfaces for modelling: ([Blinn 82], [Bloom [...] ...|$|E
40|$|The <b>iso-surface</b> model, {{in which}} a 3 D {{implicit}} object is created by computing the <b>iso-surface</b> of a potential field generated {{by a set of}} sources, is considered by several authors [4, 18] as a superset of the CSG model, because it allows the user to define soft blending operators in addition to the more usual boolean combinations. The <b>iso-surface</b> model preserves many advantages of the CSG model (storage compactness, inside/outside function, arbitrary topology) but unfortunately also its main drawback, that is the difficulty to generate an efficient and accurate tessellation of the surface, in order to use hardware rendering and texturing algorithms. This paper proposes a solution to achieve this goal for a specific (but very large) subset of iso-surfaces: implicit sweeps. The implicit sweep model that we presented in [8] provides high level primitives (i. e. generalized sweeps) {{that can be used to}} build free-form implicit objects. One interesting characteristic of implicit sweeps is that [...] ...|$|E
40|$|This chapter {{addresses}} {{mechanisms for}} analyzing and processing volumes {{in a way}} that deals specifically with <b>iso-surfaces.</b> The underlying philosophy is to use isosurfaces as a modeling technology that can serve as an alternative to parameterized models for a variety of important applications in visualization and computer graphics. This pape...|$|R
40|$|Our {{long term}} {{research}} {{goal is to}} develop a fully automated, image-based diagnostic system for early diagnosis of pulmonary nodules that may lead to lung cancer. This paper focuses on monitoring the development of lung nodules detected in successive chest low dose (LD) CT scans of a patient. We propose a new methodology for 3 D LDCT data registration which is non-rigid and involves two steps: (i) global alignment of one scan (target) to another scan (reference or prototype) using the learned prior appearance model followed by (ii) local alignment in order to correct for intricate deformations. After equalizing signals for two subsequent chest scans, visual appearance of these chest images is modeled with a Markov-Gibbs random field with pairwise interaction. We estimate the affine transformation that globally register the target to the prototype by gradient descent maximization of a special Gibbs energy function. To handle local deformations, we deform each voxel of the target over evolving closed equi-spaced surfaces (<b>iso-surfaces)</b> to closely match the prototype. The evolution of the <b>iso-surfaces</b> is guided by an exponential speed function in the directions that minimize distances between the corresponding voxel pairs on the <b>iso-surfaces</b> in both the data sets. Preliminary results on the 135 LDCT data sets from 27 patients show that our proper registration could lead to precise diagnosis and identification of the development of the detected pulmonary nodules. 1...|$|R
40|$|We {{present a}} method for extracting <b>iso-surfaces</b> and their intersections in 4 D. Our work is a {{significant}} extension of the 3 D Marching Lines algorithm with new orientation and implementation considerations. As a practical tool, it {{can be applied to}} track efficiently space curves, defined by differential invariants, across increasing scale...|$|R
40|$|An {{algorithm}} {{for very}} accurate visualization of an iso- surface in a 3 D medical dataset {{has been developed}} {{in the past few}} years. This technique is extended in this paper to several kinds of measurements in which exact geometric information of a selected <b>iso-surface</b> is used to derive volume, length, curvature, connectivity and similar geometric information from an object of interest. The actual measurement tool described in this paper is fully interactive. The highly accurate <b>iso-surface</b> volume- rendering algorithm is used to describe the actual measurement that should be performed. For instance, objects for which volumes should be calculated, or paths from which the length should be calculated can be selected at sub-voxel resolution. Ratios of these quantities can be used to automatically detect anomalies in the human body {{with a high degree of}} confidence. The actual measurement tool uses a polygon-based algorithm that can distinguish object connectivity at sub-voxel resolution, in exactly the same manner as the <b>iso-surface</b> algorithm. Segmentation based on iso-surfaces geometrical topology can be done at this point. The combination of the <b>iso-surface</b> volume-rendering algorithm and the polygon-based algorithm makes it possible to achieve both visual interaction with the dataset and highly accurate measurements. We believe that the proposed method contributes to the integration of visual and geometric information and is helpful in clinical diagnosis...|$|E
40|$|An {{algorithm}} is presented which generates a triangular mesh to approximate an <b>iso-surface.</b> It {{starts with a}} triangulation of a sphere and next applies a series of adjustments to this triangulation to transform it into the required surface. It {{is based on the}} shrinkwrap method ([Overveld 93]), but unlike the original shrinkwrap algorithm, it allows for arbitrary topological genus of the resulting <b>iso-surface.</b> As the original shrinkwrap algorithm, the new {{algorithm is}} adaptive {{in the sense that the}} lengths of the sides of the triangles in the mesh vary with the local curvature of the underlying surface...|$|E
40|$|<b>Iso-surface</b> {{construction}} and rendering on programmable graphics hardware {{has recently been}} shown for tetrahedral grids. In this paper, we present a novel edge-based approach that avoids redundant computations of edge–surface intersections. We show how to achieve a significant performance gain by considering intrinsic features of recent GPUs. The <b>iso-surface</b> extraction process is re-formulated {{in a way that}} reduces both numerical computations and memory access operations. A span-space data structure allows us to avoid the processing of elements not intersected by the selected surface. Finally, to allow for the rendering of transparent surfaces, a GPU sorting routine is integrate...|$|E
40|$|Interpolating {{discrete}} volume {{data into}} a continuous form adapts implicit surface techniques for rendering volumetric <b>iso-surfaces.</b> One such algorithm uses the Lipschitz condition {{to create an}} octree representation that accelerates volume rendering. Furthermore, only one preprocessing step is needed to create the Lipschitzoctree representation that accelerates rendering of isosurfaces for any threshold value...|$|R
40|$|This thesis {{deals with}} blobs {{modeling}} and visualizing (<b>iso-surfaces,</b> implicit-surfaces). It includes implementation of full-featured editor of these objects. It provides real-time operations over surfaces. The work also contains its motivation - where this modeling technique comes from, required equations and computations needed for surface rendering and algorithms used for blobs visualization...|$|R
40|$|Large-scale {{laboratory}} {{investigations of}} multiple [...] vortex wake systems provide time-resolved flow velocity fields normal to the wake axis. Large vortices shed off {{the wings and}} flaps are identified employing the Q criterion. Their cooperative mechanisms of generation and decay are evidenced experimentally from <b>iso-surfaces</b> of Q and of the axial vorticity ω x...|$|R
