988|483|Public
25|$|Use of the <b>data</b> <b>bus</b> is {{intricate}} and thus requires a complex DRAM controller circuit. This is because data {{written to the}} DRAM must be presented in the same cycle as the write command, but reads produce output 2 or 3 cycles after the read command. The DRAM controller must ensure that the <b>data</b> <b>bus</b> is never required for a read and a write at the same time.|$|E
25|$|Early ACARS {{systems were}} {{extended}} {{over the years}} to support aircraft with digital <b>data</b> <b>bus</b> interfaces, flight management systems, and printers.|$|E
25|$|The 68EC000 is a {{low-cost}} {{version of the}} 68000, designed for embedded controller applications. The 68EC000 can have either a 8-bit or 16-bit <b>data</b> <b>bus,</b> switchable at reset.|$|E
5000|$|Collection of {{measurements}} made {{by other}} units and subsystems via {{one or more}} <b>data</b> <b>busses,</b> such as MIL-STD-1553.|$|R
40|$|The power {{dissipation}} associated with driving <b>data</b> <b>busses</b> can be significant, especially considering the increasing component of inter-wire capacitance. Previous work on bus encoding {{has focused on}} minimizing transitions to reduced {{power dissipation}}. In this paper, it is shown that transition reduction {{is not necessarily the}} best approach for reducing power when the effects of inter-wire capacitance are considered. An electrical model for <b>data</b> <b>busses</b> designed with submicron technologies is presented along with a family of coding techniques that can reduce the average power consumption of the bus by 40 %. 2...|$|R
50|$|The common {{interface}} shares many {{features of the}} PC Card Standard (PCMCIA). By reducing the widths of the addressand <b>data</b> <b>busses</b> it has been possible to include a bi-directional parallel transport stream interface.|$|R
25|$|To support lower-cost {{systems and}} control {{applications}} with smaller memory sizes, Motorola introduced the 8-bit compatible MC68008, also in 1982. This was a 68000 with an 8-bit <b>data</b> <b>bus</b> {{and a smaller}} (20-bit) address bus. After 1982, Motorola devoted {{more attention to the}} 68020 and 88000 projects.|$|E
25|$|Motorola {{replaced}} the MC68008 with the MC68HC001 in 1990. This chip resembled the 68HC000 in most respects, but its <b>data</b> <b>bus</b> could operate in either 16-bit or 8-bit mode, {{depending on the}} value of an input pin at reset. Thus, like the 68008, it could be used in systems with cheaper 8-bit memories.|$|E
25|$|The {{drawback}} of {{the older}} fast column access method was that a new column address had to be sent for each additional dataword on the row. The address bus had to operate at the same frequency as the <b>data</b> <b>bus.</b> Prefetch architecture simplifies this process by allowing a single address request to result in multiple data words.|$|E
40|$|International Telemetering Conference Proceedings / October 29 -November 02, 1990 / Riviera Hotel and Convention Center, Las Vegas, NevadaA {{telemetry}} {{system which}} integrates MIL-STD- 1553 <b>bus</b> <b>data,</b> dual-simplex <b>bus</b> <b>data,</b> vehicle performance data, and environmental sensor data multiplexing involves many interfacing constraints. The engineering design considerations and hardware constraints required to implement this system {{are presented in}} this paper...|$|R
40|$|International Telemetering Conference Proceedings / October 30 -November 02, 1989 / Town & Country Hotel & Convention Center, San Diego, CaliforniaA Telemetry {{system which}} {{integrates}} 1553 <b>Bus</b> <b>data,</b> DualSimplex <b>bus</b> <b>data,</b> vehicle performance data, and environmental sensor data multiplexing encompasses many interfacing constraints. The Engineering design considerations and hardware constraints required to implement this system {{are presented in}} this paper...|$|R
50|$|The Commercial Standard Digital Bus is a {{two-wire}} asynchronous broadcast <b>data</b> transmission <b>bus.</b> <b>Data</b> {{is transmitted}} over an interconnecting cable by devices that comply with Electronic Industries Association (EIA) RS-422A.The physical layer is EIA-422.|$|R
25|$|The P24T Pentium OverDrive for 486 {{systems were}} {{released}} in 1995, which {{were based on}} 3.3V 0.6µm versions using a 63 or 83MHz clock. Since these used Socket 2/3, some modifications {{had to be made}} to compensate for the 32-bit <b>data</b> <b>bus</b> and slower on-board L2 cache of 486 motherboards. They were therefore equipped with a 32KB L1 cache (double that of pre-P55C Pentium CPUs).|$|E
25|$|Originally simply {{known as}} SDRAM, single data rate SDRAM can accept one command and {{transfer}} {{one word of}} data per clock cycle. Typical clock frequencies are 100 and 133MHz. Chips are made {{with a variety of}} <b>data</b> <b>bus</b> sizes (most commonly 4, 8 or 16 bits), but chips are generally assembled into 168-pin DIMMs that read or write 64 (non-ECC) or 72 (ECC) bits at a time.|$|E
25|$|In {{a simple}} analysis, the Cell {{processor}} can be split into four components: external {{input and output}} structures, the main processor called the Power Processing Element (PPE) (a two-way simultaneous multithreaded Power ISA v.2.03 compliant core), eight fully functional co-processors called the Synergistic Processing Elements, or SPEs, and a specialized high-bandwidth circular <b>data</b> <b>bus</b> connecting the PPE, input/output elements and the SPEs, called the Element Interconnect Bus or EIB.|$|E
5000|$|... (rail validators {{synchronize}} <b>data</b> immediately, <b>bus</b> validators have a 12- to 24-hour delay) ...|$|R
5000|$|The second {{rising edge}} of C puts the data word, from address A, on the <b>Data</b> Out <b>bus</b> ...|$|R
5000|$|Most of the I/O {{devices are}} {{connected}} to the local I/O bus, known as the [...] "Lbus", a 32-bit address and <b>data</b> multiplexed <b>bus.</b>|$|R
25|$|Although {{it had a}} 32-bit {{internal}} bus, the V60 {{had only}} a 16-bit external <b>data</b> <b>bus</b> and a 24-bit address bus. Its architecture was carried largely intact to the V70 (μPD70632) model, which had external 32-bit buses and was released in 1987. Launched in 1989, the V80 (μPD70832) {{was the culmination of}} the series having on-chip caches, a branch predictor, and less reliance on microcode for complex operations. The V60-V80 architecture did not enjoy much commercial success.|$|E
25|$|To {{increase}} memory capacity and bandwidth, chips are combined on a module. For instance, the 64-bit <b>data</b> <b>bus</b> for DIMM requires eight 8-bit chips, addressed in parallel. Multiple chips {{with the common}} address lines are called a memory rank. The term was introduced to avoid confusion with chip internal rows and banks. A memory module may bear more than one rank. The term sides would also be confusing because it incorrectly suggests the physical placement of chips on the module.|$|E
25|$|The first Pentium {{microprocessor}} {{was introduced}} by Intel on March 22, 1993. Dubbed P5, its microarchitecture was the fifth generation for Intel, and the first superscalar IA-32 microarchitecture. As a direct extension of the 80486 architecture, it included dual integer pipelines, a faster floating-point unit, wider <b>data</b> <b>bus,</b> separate code and data caches and features for further reduced address calculation latency. In 1996, the Pentium with MMX Technology (often simply referred to as Pentium MMX) was introduced with the same basic microarchitecture complemented with an MMX instruction set, larger caches, and some other enhancements.|$|E
5000|$|The {{systems of}} the 1970s and early 1980s used {{parallel}} or multiple conductor communications <b>data</b> <b>busses</b> to communication with Data Gathering Panels (DGPs) located throughout the building. The DGPs would communicate monitored conditions using multiplex techniques back to a central location and [...] "front end" [...] system through the parallel data trunk. In the same way commands to start and stop plant would be sent from the front end to the DGP {{and then to the}} machine. All decisions or [...] "intelligence" [...] was centrally located, and the DGPs simply relayed information.|$|R
40|$|Abstract-Reducing power {{consumption}} of computer systems has gained much research attention recently. In a typical system, the memory bus power constitute will over 50 % of all system power; and this power is required due to bus signal transitions (0 � 1 or 1 � 0). Reducing {{the number of}} memory bus transitions is hence {{an effective way to}} reduce system power. While many techniques deal with reducing bus power on instruction address bus, only a few have been proposed for <b>data</b> address <b>bus</b> power reduction. We present an encoding scheme to reduce <b>data</b> address <b>bus</b> {{power consumption}}. In this scheme, <b>data</b> address <b>bus</b> can be frozen for sequential addresses, or inverted as appropriate for other cases. Furthermore, data addresses are classified into read addresses and write addresses, and each address set is encoded independently. Simulation results show that the overall bus line switching reduction is 26 % of unencoded bus, or 14. 5 % of the previous T 0 _BI method [1]...|$|R
40|$|At Saab Aerospace in Linköping, {{components}} for measurement systems to the fighter aircraft JAS 39 Gripen are developed. In this activity you sometimes want {{to record the}} traffic transmitted on the <b>data</b> <b>busses</b> that connects different sys-tems. This traffic on the <b>data</b> <b>busses</b> is using the military standard MIL-STD- 1553. This project has aimed to create a system for recording and sending 1553 -data. The system is used on an ordinary personal computer, equipped with a recon- figurable I/O card that among others has a programmable logic circuit (FPGA). The recorded data are stored on a hard drive. The system has a graphical user interface, where the user can configure different methods of filtering the data, and other preferences. The completed system has currently the capacity to record one channel. This works excellent and the system basically meets all the requirements stated {{at the start of}} the project. By using this system instead of the commercial available systems on the market one will get a competitive alternative. If the system where to be developed further, with more channels, it would get even more price worth. Both in case of price per channel, but also in functionality. This is because it is possible to design exactly the functions the user demands. But the current version is already fully functional and competitive compared to commercial systems...|$|R
25|$|The Tornado's {{advanced}} avionics {{meant that}} it could be more effective than previous British interceptors, such as the Lightning. While older aircraft were reliant on a network of ground-based radar stations, the onboard Foxhunter radar was capable of performing much longer and wider scans of surrounding airspace; the Tornado could track and engage targets at far greater distances. The Tornado also had the ability to share its radar and targeting information with other aircraft via JTIDS Link 16 {{and was one of the}} first aircraft to have a digital <b>data</b> <b>bus,</b> used for the transmission of data between onboard computers.|$|E
25|$|However, {{the biggest}} {{stumbling}} block was thatdespite being a fully compliant MS-DOS systemit was not {{compatible with the}} IBM PC at the hardware level. This was a problem because MS-DOS was rarely used as {{anything more than a}} simple program loader; complex software (spreadsheets, Flight Simulator, etc.) could only obtain acceptable performance by direct manipulation of the hardware. Wang used a 16-bit <b>data</b> <b>bus</b> instead of the 8-bit <b>data</b> <b>bus</b> used by IBM, arguing that applications would run much faster since most operations required I/O (disk, screen, keyboard, printer). With this 16-bit design, Wang used peripheral hardware devices, such as the Wang PC display adapter, that were not compatible with their counterparts in the IBM PC line. This meant that the vast library of software available for the IBM PC could not be directly run on the Wang PC. Only those programs that were either written specifically for the Wang PC or ported from the IBM PC were available. A basic word processing package developed by Wang and Microsoft's Multiplan spreadsheet were the two commonly marketed software products. Lotus 1-2-3 and dBase II were also available. This dearth of application software led to the early demise of the original Wang PC, and it was replaced by an Intel 80286 based product that was fully plug compatible with the IBM PC. The unique system software was available at extra cost.|$|E
25|$|Because of {{the series}} {{connection}} and removal of wordline contacts, a large grid of NANDflash memory cells will occupy perhaps only 60% of the area of equivalent NOR cells (assuming the same CMOS process resolution, for example, 130nm, 90nm, or 65nm). NANDflash's designers realized that the area of a NAND chip, and thus the cost, could be further reduced by removing the external address and <b>data</b> <b>bus</b> circuitry. Instead, external devices could communicate with NANDflash via sequential-accessed command and data registers, which would internally retrieve and output the necessary data. This design choice made random-access of NANDflash memory impossible, but the goal of NANDflash was to replace mechanical hard disks, not to replace ROMs.|$|E
5000|$|The <b>data</b> {{transfer}} <b>bus</b> {{connecting the}} two Computers and the Processor {{to the core}} memory was multiplexed to maximize throughput; every 4-microsecond bus cycle was divided into eight 500-nanosecond time slots: ...|$|R
50|$|The {{external}} interface is the Runway bus, a 64-bit {{address and}} <b>data</b> multiplexed <b>bus.</b> The PA-8000 uses a 40-bit physical address, {{thus it is}} able to address 1 TB of physical memory.|$|R
40|$|High-speed <b>data</b> <b>busses</b> {{constructed}} from copper components are both difficult to model and important to accurately simulate. Using analytic signal theory and {{an extension of}} the skin effect for non-uniform conductivity, experimental data taken from IEEE 1394 - 1995 cables and connectors is used to predict the transfer function of a 4. 5 meter cable with two connectors. With these techniques any length of cable between two connectors can be simulated with high accuracy, including all the cable and connector losses and the infinitely summed standing waves that occur between the connectors. Comment: 13 pages, 20 figures, RevTeX...|$|R
25|$|Reading from NOR flash {{is similar}} to reading from random-access memory, {{provided}} the address and <b>data</b> <b>bus</b> are mapped correctly. Because of this, most microprocessors can use NORflash memory as execute in place (XIP) memory, meaning that programs stored in NORflash can be executed directly from the NORflash without needing to be copied into RAM first. NORflash may be programmed in a random-access manner similar to reading. Programming changes bits from a logical one to a zero. Bits that are already zero are left unchanged. Erasure must happen a block at a time, and resets all the bits in the erased block back to one. Typical block sizes are 64, 128, or 256KiB.|$|E
25|$|The 68000 {{grew out}} of the MACSS (Motorola Advanced Computer System on Silicon) project, begun in 1976 to develop an entirely new {{architecture}} without backward compatibility. It would be a higher-power sibling complementing the existing 8-bit 6800 line rather than a compatible successor. In the end, the 68000 did retain a bus protocol compatibility mode for existing 6800 peripheral devices, and a version with an 8-bit <b>data</b> <b>bus</b> was produced. However, the designers mainly focused on the future, or forward compatibility, which gave the 68000 design a head start against later 32-bit instruction set architectures. For instance, the CPU registers are 32bits wide, though few self-contained structures in the processor itself operate on 32bits at a time. The MACSS team drew heavily on the influence of minicomputer processor design, such as the PDP-11 and VAX systems, which were similarly microcode-based.|$|E
25|$|The ARM2 {{featured}} a 32-bit <b>data</b> <b>bus,</b> 26-bit address space and 2732-bit registers. Eightbits {{from the program}} counter register were available for other purposes; the top sixbits (available because of the 26-bit address space) served as status flags, and the bottom twobits (available because the program counter was always word-aligned) were used for setting modes. The address bus was extended to 32bits in the ARM6, but program code still had to lie within the first 64MB of memory in 26-bit compatibility mode, due to the reserved bits for the status flags. The ARM2 had a transistor count of just 30,000, compared to Motorola's six-year-older 68000 model with around 40,000. Much of this simplicity came {{from the lack of}} microcode (which represents about one-quarter to one-third of the 68000) and from (like most CPUs of the day) not including any cache. This simplicity enabled low power consumption, yet better performance than the Intel 80286. A successor, ARM3, was produced with a 4KB cache, which further improved performance.|$|E
40|$|In this paper, {{we present}} a {{comprehensive}} energy dissipation model for <b>data</b> <b>busses</b> assuming {{a complete set of}} distributed RLC parasitics. Inter-wire parasitic capacitance contributes to significant energy loss during transitions. In this paper, {{we present a}} coding strategy (termed Transition Pattern Coding) that modifies the transition profiles to reduce switching energy. Using TPC, certain types of transitions are favored relative to others. We show that in the presence of capacitive coupling between the wires, our approach significantly outperforms previous coding schemes. Using TPC, up to 50 % of energy saving is possible with sub-micron technologies...|$|R
50|$|The Onboard Data Interfaces and Networks (ODIN) is {{responsible}} for the Command and Data Handling (C&DH) system, the Portable Computer System (PCS) computers, the Caution & Warning (C&W) system, overall responsibility for commanding, and interfaces with International Partner avionics systems. The C&DH system consists of the Multiplexer/DeMultiplexers (MDMs) which are the ISS computers. Core software in each MDM (not User Application Software), the MIL-STD-1553 <b>data</b> <b>busses,</b> Automated Payload Switches (APSs), fiber optic network, Payload Ethernet Hub Gateway (PEHG), and the Ethernet network. This does not include the Ops LAN, Station Support Computers (SSC), or file server.|$|R
5000|$|Byte {{addressing}} {{means that}} the physical address passed on the Unibus is interpreted as the address of a byte-sized quantity of <b>data.</b> Because the <b>bus</b> actually contains a data path that is two bytes wide, address bit [...] is subject to special interpretation and <b>data</b> on the <b>bus</b> has to travel in the correct byte lanes.|$|R
