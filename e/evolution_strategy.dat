905|1412|Public
25|$|In {{evolutionary}} algorithms, λ {{indicates the}} number of offspring that would be generated from μ current population in each generation. The terms μ and λ are originated from <b>Evolution</b> <b>strategy</b> notation.|$|E
25|$|The {{covariance}} matrix defines a bijective transformation (encoding) for all solution vectors into a space, where the sampling takes place with identity {{covariance matrix}}. Because the update equations in the CMA-ES are invariant under linear coordinate system transformations, the CMA-ES can be re-written as an adaptive encoding procedure {{applied to a}} simple <b>evolution</b> <b>strategy</b> with identity covariance matrix.|$|E
2500|$|... μ, {{population}} size from which in each generation λ offspring will generate (the terms μ and λ originate from <b>evolution</b> <b>strategy</b> notation) ...|$|E
40|$|<b>Evolution</b> <b>strategies</b> are {{developed}} and implemented to optimization problems in Fluid Dynamics applications. We consider twoand multimembered <b>evolution</b> <b>strategies</b> {{as applied to}} fluid dynamic problems over a large range of scales, studied computationally (trailing wake aircraft vortices and micromixers) as well as experimentally (jet mixing control). The implementation of the algorithms in an experimental or computational environment is discussed. The results demonstrate that <b>evolution</b> <b>strategies</b> are effective optimization techniques for these complex fluid dynamic applications...|$|R
50|$|Natural <b>evolution</b> <b>strategies</b> (NES) are {{a family}} of {{numerical}} optimization algorithms for black-box problems. Similar in spirit to <b>evolution</b> <b>strategies,</b> they iteratively update the (continuous) parameters of a search distribution by following the natural gradient towards higher expected fitness.|$|R
40|$|<b>Evolution</b> <b>strategies</b> are {{successful}} global optimization methods. In many practical numerical problems constraints are not explicitly given. <b>Evolution</b> <b>strategies</b> have to incorporate techniques to optimize in restricted solution spaces. Famous constraint-handling techniques are penalty and multiobjective approaches. Past work {{has shown that}} in particular an ill-conditioned alignment between the coordinate system of Gaussian mutation and the constraint boundaries leads to premature convergence. Covariance matrix adaptation <b>evolution</b> <b>strategies</b> offer {{a solution to this}} alignment problem. Last, metamodeling of the constraint boundary leads to significant savings of constraint function calls and to a speedup by repairing infeasible solutions. This work gives a brief overview over constraint-handling methods for <b>evolution</b> <b>strategies</b> by demonstrating the approaches experimentally on two exemplary constrained problems...|$|R
2500|$|Hansen N, Müller SD, Koumoutsakos P (2003). Reducing {{the time}} {{complexity}} of the derandomized <b>evolution</b> <b>strategy</b> with covariance matrix adaptation (CMA-ES). [...] pp.nbsp&1–18.|$|E
2500|$|Hansen N, Kern S (2004). Evaluating the CMA <b>evolution</b> <b>strategy</b> on {{multimodal}} test functions. In Xin Yao et al., editors, Parallel Problem Solving from Nature - PPSN VIII, pp.nbsp&282–291, Springer.|$|E
2500|$|In an <b>evolution</b> <b>strategy,</b> new {{candidate}} {{solutions are}} sampled {{according to a}} multivariate normal distribution in the [...] Recombination amounts to selecting a new mean value for the distribution. Mutation amounts to adding a random vector, a perturbation with zero mean. Pairwise dependencies between the variables in the distribution are represented by a covariance matrix. The covariance matrix adaptation (CMA) is a method to update the covariance matrix of this distribution. This is particularly useful, if the function [...] is ill-conditioned.|$|E
40|$|<b>Evolution</b> <b>strategies</b> {{have more}} than 50 years of history {{in the field of}} {{evolutionary}} computation. Since the early 1990 s, many algorithmic variations of <b>evolution</b> <b>strategies</b> have been developed, characterized {{by the fact that they}} use the so-called derandomization concept for strategy parameter adaptation. Most importantly, the covariance matrix adaptation strategy (CMA-ES) and its successors are the key representatives of this group of contemporary <b>evolution</b> <b>strategies.</b> This book provides an overview of the key algorithm developments between 1990 and 2012, including brief descriptions of the...|$|R
5000|$|Evolutionary {{algorithms}} (e.g., {{genetic algorithms}} and <b>evolution</b> <b>strategies)</b> ...|$|R
40|$|An {{analysis}} of the dynamic behavior of <b>Evolution</b> <b>Strategies</b> applied to Traveling Salesman Problems is presented. For a special class of Traveling Salesman Problems a stochastic model of the optimization process is introduced. Based on this model different features determining the optimization process of <b>Evolution</b> <b>Strategies</b> are analysed...|$|R
2500|$|CMA-ES {{stands for}} Covariance Matrix Adaptation <b>Evolution</b> <b>Strategy.</b> Evolution {{strategies}} (ES) are stochastic, derivative-free methods for numerical optimization [...] of non-linear or non-convex continuous optimization problems. They {{belong to the}} class of evolutionary algorithms and evolutionary computation. [...] An evolutionary algorithm is broadly {{based on the principle}} of biological evolution, namely the repeated interplay of variation (via recombination and mutation) and selection: in each generation (iteration) new individuals (candidate solutions, denoted as [...] ) are generated by variation, usually in a stochastic way, of the current parental individuals. Then, some individuals are selected to become the parents in the next generation based on their fitness or objective function value [...] Like this, over the generation sequence, individuals with better and better -values are generated.|$|E
2500|$|With the Dover ruling {{describing}} [...] "teach the controversy" [...] as [...] "at best disingenuous, and {{at worst}} a canard", intelligent design proponents have moved to a fallback position, emphasizing contrived flaws in evolution and overemphasizing remaining questions in the theory {{what they call the}} Critical Analysis of Evolution. The Critical Analysis of <b>Evolution</b> <b>strategy</b> is viewed by Nick Matzke and other intelligent design critics as a means of teaching all the intelligent design arguments without using the intelligent design label. Critical Analysis of Evolution continues the themes of the teach the controversy strategy, emphasizing what they say are the [...] "criticisms" [...] of evolutionary theory and [...] "arguments against evolution," [...] which continues to be portrayed as [...] "a theory in crisis." [...] Early drafts of the critical analysis of evolution lesson plan referred to the lesson as the [...] "great evolution debate"; one of the early drafts of the lesson plan had one section titled [...] "Conducting the Macroevolution Debate". In a subsequent draft, it was changed to [...] "Conducting the Critical Analysis Activity". The wording for the two sections is nearly identical, with just [...] "debate" [...] changed to [...] "critical analysis activity" [...] wherever it appeared, in the manner of how intelligent design proponents simply replaced [...] "creation" [...] with [...] "intelligent design" [...] in Of Pandas and People to repackage a creation science textbook into an intelligent design textbook.|$|E
50|$|This {{algorithm}} {{corresponds to}} a (1+1) <b>evolution</b> <b>strategy</b> with constant step-size.|$|E
40|$|Abstract. Change {{operators}} are {{the building blocks}} of ontology evolution. Elementary, composite and complex change operators have been suggested. While lower-level change {{operators are}} useful in terms of finegranular representation of ontology changes, representing the intent of change requires higher-level change operators. Here, we focus on higherlevel composite change operators to perform an aggregated task. We introduce composite-level <b>evolution</b> <b>strategies.</b> The central role of the <b>evolution</b> <b>strategies</b> is to preserve the intent of the composite change with respect to the user’s requirements and to reduce the change operational cost. Composite-level <b>evolution</b> <b>strategies</b> assist in avoiding the illegal changes or presence of illegal axioms that may generate inconsistencies during application of a composite change. We discuss few composite changes along with the defined <b>evolution</b> <b>strategies</b> as an example that allow users to control and customize the ontology evolution process...|$|R
40|$|The vehicle routing {{problem with}} time windows (VRPTW) is an {{extension}} of the well-known {{vehicle routing problem}} with a central depot. The objective is to design an optimal set of routes that services all customers and satisfies the given constraints, especially the time window constraints. The objective function considered here combines the minimization of the number of vehicles (primary criterion) and the total travel distance minimization (secondary criterion). In this paper, two <b>evolution</b> <b>strategies</b> for solving the VRPTW are proposed. The <b>evolution</b> <b>strategies</b> were tested on 58 problems from the literature with sizes varying from 100 to 417 customers and 2 to 54 vehicles. The generated new best known solutions indicate that <b>evolution</b> <b>strategies</b> are effective in reducing both the number of vehicles and the total travel distance. Key words: <b>Evolution</b> <b>strategies,</b> metaheuristics, vehicle routing, time windows...|$|R
40|$|Abstract—This paper {{presents}} a method based on <b>evolution</b> <b>strategies</b> for designing large rural low-voltage (lv) distribution networks. Planning rural lv distribution networks involves radial configuration design, location of medium-voltage/low-voltage substations, and minimum cost. In this work, these goals are considered by {{taking into account}} different conductors, voltage drop and conductor capacity constraints, power losses in lines, and deterministic loads. The algorithms developed in this paper are based on <b>evolution</b> <b>strategies</b> (ES) and were implemented on large-scale rural lv distribution networks, but they {{could also be used}} in general network optimization. Index Terms—Evolutionary computation, <b>evolution</b> <b>strategies</b> (ES), low-voltage (lv) network planning, network design. I...|$|R
5000|$|IEC {{methods include}} {{interactive}} <b>evolution</b> <b>strategy,</b> interactive genetic algorithm, interactive genetic programming, and human-based genetic algorithm., ...|$|E
50|$|<b>Evolution</b> <b>strategy</b> - Works with vectors of real {{numbers as}} {{representations}} of solutions, and typically uses self-adaptive mutation rates.|$|E
50|$|<b>Evolution</b> <b>strategy</b> uses linear real-valued representations, e.g. {{an array}} of real values. It uses mostly {{gaussian}} mutation and blending/averaging crossover.|$|E
40|$|This study {{presents}} {{a solution to}} linear variation inequality by <b>evolution</b> <b>strategies</b> based on the question that iterative algorithm of traditional numerical computer can not satisfy parallel in solving variation inequality. The numerical solution that <b>evolution</b> <b>strategies</b> are used to solve linear variation inequality, which sufficiently exerted the advantage of <b>evolution</b> <b>strategies</b> such as group search and global convergence and it satisfies the question of parallel solute the linear variation inequality in engineering technique. The numerical computation {{results indicate that the}} algorithm offers an effective way to solve linear variation inequality, high convergence rate, high accuracy and robustness...|$|R
2500|$|Hansen N, Ostermeier A (2001). Completely derandomized self-adaptation in <b>evolution</b> <b>strategies.</b> [...] pp.nbsp&159–195.|$|R
5000|$|Examine <b>Evolution</b> <b>Strategies</b> - To {{explore and}} {{construct}} more <b>strategies</b> and <b>evolution</b> route ...|$|R
5000|$|... μ, {{population}} size from which in each generation λ offspring will generate (the terms μ and λ originate from <b>evolution</b> <b>strategy</b> notation) ...|$|E
50|$|In {{computer}} science, an <b>evolution</b> <b>strategy</b> (ES) is an {{optimization technique}} based on ideas of adaptation and evolution. It {{belongs to the}} general class of evolutionary computation or artificial evolution methodologies.|$|E
5000|$|In {{evolutionary}} algorithms, λ {{indicates the}} number of offspring that would be generated from μ current population in each generation. The terms μ and λ are originated from <b>Evolution</b> <b>strategy</b> notation.|$|E
40|$|International audienceEvolution {{strategies}} are evolutionary algorithms that {{date back to}} the 1960 s and that are most commonly applied to black-box optimization problems in continuous search spaces. Inspired by biological evolution, their original formulation is based on the application of mutation, recombination and selection in populations of candidate solutions. From the algorithmic viewpoint, <b>evolution</b> <b>strategies</b> are optimization methods that sample new candidate solutions stochastically, most commonly from a multivariate normal probability distribution. Their two most prominent design principles are unbiasedness and adaptive control of parameters of the sample distribution. In this overview the important concepts of success based step-size control, self-adaptation and derandomization are covered, as well as more recent developments like covariance matrix adaptation and natural <b>evolution</b> <b>strategies.</b> The latter give new insights into the fundamental mathematical rationale behind <b>evolution</b> <b>strategies.</b> A broad discussion of theoretical results includes progress rate results on various function classes and convergence proofs for <b>evolution</b> <b>strategies...</b>|$|R
40|$|Compact {{evolutionary}} algorithms {{have proven}} to be an efficient alternative for solving optimization problems in computing environments with low processing power. In this kind of solution, a probability distribution simulates the behavior of a population, thus looking for memory savings. Several compact algorithms have been proposed, including the compact genetic algorithm and compact differential evolution. This work aims to investigate the use of compact approaches in other important evolutionary algorithms: <b>evolution</b> <b>strategies.</b> This paper proposes two different approaches for compact versions of <b>evolution</b> <b>strategies.</b> Experiments were performed and the results analyzed. The results showed that, depending on the nature of problem, the use of the compact version of <b>Evolution</b> <b>Strategies</b> can be rewarding. </p...|$|R
40|$|After {{an outline}} {{of the history of}} {{evolutionary}} algorithms, a new (¯;;; ae) variant of the <b>evolution</b> <b>strategies</b> is introduced formally. Though not comprising all degrees of freedom, it is richer in the number of features than the meanwhile old (¯;) and (¯+) versions. Finally, all important theoretically proven facts about <b>evolution</b> <b>strategies</b> are briefly summarized and some of many open questions concerning evolutionary algorithms in general are pointed out...|$|R
50|$|Contemporary {{derivatives}} of <b>evolution</b> <b>strategy</b> {{often use}} {{a population of}} μ parents and also recombination as an additional operator, called (μ/ρ+, λ)-ES. This makes them less prone to get stuck in local optima.|$|E
5000|$|BBO {{has been}} hybridized {{with several other}} EAs, {{including}} particle swarm optimization, differential evolution, <b>evolution</b> <b>strategy,</b> opposition-based computing, case-based reasoning, artificial bee colony algorithm, bacterial foraging optimization, harmony search, and the simplex algorithm.|$|E
50|$|The SNAP-tag {{protein is}} an {{engineered}} {{version of the}} ubiquitous mammalian enzyme AGT, encoded in humans by the O-6-methylguanine-DNA methyltransferase (MGMT) gene. SNAP-tag was obtained using a directed <b>evolution</b> <b>strategy,</b> leading to a hAGT variant that accepts O6-benzylguanine derivatives instead of repairing alkylated guanine derivatives in damaged DNA.|$|E
40|$|Genetic Algorithms and <b>Evolution</b> <b>Strategies,</b> {{the main}} representatives {{of a class}} of {{algorithms}} based {{on the model of}} natural evolution, are discussed w. r. t. their basic working mechanisms, differences, and application possibilities. The mechanism of self-adaptation of <b>strategy</b> parameters within <b>Evolution</b> <b>Strategies</b> is emphasized and {{turns out to be the}} major difference to Genetic Algorithms, since it allows for an on-line adaptation of strategy parameters without exogenous control...|$|R
40|$|In this paper, <b>evolution</b> <b>strategies</b> {{are used}} to {{synthesise}} optimal control policies for manufacturing systems. The evolutionary procedure is illustrated by synthesising optimal control policies for a manufacturing system previously considered {{in the context of}} genetic synthesis. The performance of <b>evolution</b> <b>strategies</b> and that of genetic algorithms are compared in detail for this system, thus indicating that the evolutionary synthesis procedure is faster than the genetic synthesis procedure. published_or_final_versio...|$|R
40|$|Till now, only {{uncorrelated}} <b>evolution</b> <b>strategies</b> {{benefit from}} {{the strength of the}} directed mutation principle. It is thus a natural idea to enhance more powerful correlated <b>evolution</b> <b>strategies</b> with directed mutation, too. This work aims at porting this approach from the uncorrelated setting in classical <b>evolution</b> <b>strategies</b> to the correlated case as given in covariance matrix adaptation-evolution strategies. The main problem to be addressed here is the shape vector update. The shape vector controls the distribution’s skewness and can be updated intergenerationally as well as intragenerationally. Starting with an analogue to the intergenerational parameter update mechanics used in CMA-ES, we argue that an additional intragenerational update is of greater benefit. An appropriate heuristic will be presented and some experimental data of several test functions is provided...|$|R
