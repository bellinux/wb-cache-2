348|474|Public
25|$|Before {{the modern}} era, {{cryptography}} focused on message confidentiality (i.e., encryption)—conversion of messages from a comprehensible form into an incomprehensible one {{and back again}} at the other end, rendering it unreadable by interceptors or eavesdroppers without secret knowledge (namely the key needed for decryption of that message). Encryption attempted to ensure secrecy in communications, {{such as those of}} spies, military leaders, and diplomats. In recent decades, the field has expanded beyond confidentiality concerns to include techniques for message <b>integrity</b> <b>checking,</b> sender/receiver identity authentication, digital signatures, interactive proofs and secure computation, among others.|$|E
25|$|PGP {{supports}} {{message authentication}} and <b>integrity</b> <b>checking.</b> The latter {{is used to}} detect whether a message has been altered since it was completed (the message integrity property) and the former {{to determine whether it}} was actually sent by the person or entity claimed to be the sender (a digital signature). Because the content is encrypted, any changes in the message will result in failure of the decryption with the appropriate key. The sender uses PGP to create a digital signature for the message with either the RSA or DSA algorithms. To do so, PGP computes a hash (also called a message digest) from the plaintext and then creates the digital signature from that hash using the sender's private key.|$|E
2500|$|ZFS is a {{combined}} file system and logical volume manager designed by Sun Microsystems. The features of ZFS include protection [...] against data corruption, support for high storage capacities, efficient data compression, {{integration of the}} concepts of filesystem and volume management, snapshots and copy-on-write clones, continuous <b>integrity</b> <b>checking</b> and automatic repair, RAID-Z and native NFSv4 ACLs.|$|E
50|$|All {{candidates}} for the Executive Committee should not be delegates for their associations. All members must pass an <b>integrity</b> <b>check</b> {{before they can be}} elected. The <b>integrity</b> <b>checks</b> for the vice-presidents {{and other members of the}} Executive Committee are conducted by their own confederations. The President, the female member of the Executive Committee, all members of the judicial bodies as well as those of the FIFA Audit and Compliance Committee are checked by the investigatory chamber of the FIFA Ethics Committee. Before a member can be re-elected, another <b>integrity</b> <b>check</b> must be conducted.|$|R
5000|$|The {{solution}} {{must provide}} an integrated environment to perform data <b>integrity</b> <b>checks</b> ...|$|R
50|$|NO ACTION and RESTRICT {{are very}} much alike. The main {{difference}} between NO ACTION and RESTRICT is that with NO ACTION the referential <b>integrity</b> <b>check</b> is done after trying to alter the table. RESTRICT does the check before trying to execute the UPDATE or DELETE statement. Both referential actions act the same if the referential <b>integrity</b> <b>check</b> fails: the UPDATE or DELETE statement will result in an error.|$|R
2500|$|TFTP {{includes}} no login {{or access}} control mechanisms. [...] Care {{must be taken}} when using TFTP for file transfers where authentication, access control, confidentiality, or <b>integrity</b> <b>checking</b> are needed. [...] Note that those security services could be supplied above or below the layer at which TFTP runs. Care {{must also be taken}} in the rights granted to a TFTP server process so as not to violate the security of the server's file system. [...] TFTP is often installed with controls such that only files that have public read access are available via TFTP. Also listing, deleting, renaming, and writing files via TFTP are typically disallowed. TFTP file transfers are not recommended where the inherent protocol limitations could raise insurmountable liability concerns.|$|E
2500|$|The {{fundamental}} problem with rootkit detection {{is that if}} the operating system has been subverted, particularly by a kernel-level rootkit, it cannot be trusted to find unauthorized modifications to itself or its components. Actions such as requesting a list of running processes, or a list of files in a directory, cannot be trusted to behave as expected. In other words, rootkit detectors that work while running on infected systems are only effective against rootkits that have some defect in their camouflage, or that run with lower user-mode privileges than the detection software in the kernel. As with computer viruses, the detection and elimination of rootkits is an ongoing struggle between both sides of this conflict. Detection can take a number of different approaches, including looking for virus [...] "signatures" [...] (e.g. antivirus software), <b>integrity</b> <b>checking</b> (e.g. digital signatures), difference-based detection (comparison of expected vs. actual results), and behavioral detection (e.g. monitoring CPU usage or network traffic).|$|E
5000|$|ZFS — a {{file system}} which {{performs}} automatic file <b>integrity</b> <b>checking</b> using checksums ...|$|E
50|$|Conformity <b>checks</b> and <b>integrity</b> <b>checks</b> {{need not}} covered in all {{business}} needs, it’s strictly under the database architecture's discretion.|$|R
40|$|Abstract: Database {{watermarking}} {{has gained}} a keen interest of researchers since the coin was tossed by Agarwal. Since then many approaches have been adopted to protect the copyright of relational databases. The concept was proposed after getting inspiration from watermarking digital assets. Watermarking has been helpful in <b>integrity</b> <b>check</b> of relational databases as well and so far techniques have been proposed for <b>integrity</b> <b>check</b> and temper detection. In the paper, an algorithm is proposed called Self-Constructing Fragile Watermark (SCFW) for <b>integrity</b> <b>check</b> of relational databases. Proposed scheme consists of highly dependent watermark information. Any tempering or leakage is reflected over the watermark information. Experiments show that proposed technique is affective against temper detection. Even a little amount of tempering is reflected efficiently because of the self-replicating nature of proposed algorithm. Key words: Fragile Watermark Integrity Relational Databases copyright and ownershi...|$|R
3000|$|...]. If Fog nodes {{are capable}} of {{performing}} user authentication and message <b>integrity</b> <b>checks,</b> it will eliminate message suppression, fabrication, replay and alteration attacks [[...]...|$|R
5000|$|A microprogrammed 16-bit central {{processor}} with floating point hardware, error detection and system <b>integrity</b> <b>checking</b> features.|$|E
5000|$|Do all {{validation}} in the ETL layer {{before the}} load: disable <b>integrity</b> <b>checking</b> (disable constraint ...) {{in the target}} database tables during the load ...|$|E
5000|$|SCPS-FP—A set of {{extensions}} to FTP {{to make it}} more bit {{efficient and}} to add advanced features such as record update within a file and <b>integrity</b> <b>checking</b> on file transfers.|$|E
40|$|When clients store large {{files on}} a remote network of {{unreliable}} distributed servers, they want to verify that their files are properly stored in the servers without any modification. This {{can be achieved by}} the techniques of data integrity. In this paper, we consider how to implement data <b>integrity</b> <b>check</b> by a third party auditor (TPA) in a distributed storage network, with the help of BLS signature. We also consider how the distributed storage network restores data when some server fails or some server crushes down. We present a data <b>integrity</b> <b>check</b> and repair (DICR) scheme, which makes use of a random (n, k) linear code for data restoration and BLS signature to implement data <b>integrity</b> <b>check.</b> Our scheme is robust {{in the way that the}} storage network can reconstruct the data when a limited number of servers fail. In the mean time, public auditing on the storage network liberates clients from computational overhead. © (2012) Trans Tech Publications, Switzerland. International Association of Computer Science; and Information Technology(IACSIT); Sichuan Institute of ElectronicsWhen clients store large files {{on a remote}} network of unreliable distributed servers, they want to verify that their files are properly stored in the servers without any modification. This can be achieved by the techniques of data integrity. In this paper, we consider how to implement data <b>integrity</b> <b>check</b> by a third party auditor (TPA) in a distributed storage network, with the help of BLS signature. We also consider how the distributed storage network restores data when some server fails or some server crushes down. We present a data <b>integrity</b> <b>check</b> and repair (DICR) scheme, which makes use of a random (n, k) linear code for data restoration and BLS signature to implement data <b>integrity</b> <b>check.</b> Our scheme is robust in the way that the storage network can reconstruct the data when a limited number of servers fail. In the mean time, public auditing on the storage network liberates clients from computational overhead. © (2012) Trans Tech Publications, Switzerland...|$|R
5000|$|Oversight Systems' {{patent pending}} Collaborative Reasoning Engine (CORE) applies {{automated}} business <b>integrity</b> <b>checks</b> based on best practices that allow users {{to see the}} underlying transactional data.|$|R
40|$|Chaining Layered <b>Integrity</b> <b>Checks</b> William A. Arbaugh Jonathan M. Smith "Dovery, no Provery" "Trust, but Verify" In a system, the {{integrity}} of lower layers is typically treated as axiomatic by higher layers. Under the presumption that the hardware comprising the system (the lowest layer) is valid, {{the integrity}} of a layer can be guaranteed if and only if: (1) {{the integrity of}} the lower layers is checked, and (2) transitions to higher layers occur only after <b>integrity</b> <b>checks</b> on them are complete. The resulting integrity "chain" inductively guarantees system integrity...|$|R
50|$|Computation in ALP {{combines}} the backwards reasoning of normal logic programming (to reduce problems to sub-problems) {{with a kind}} of <b>integrity</b> <b>checking</b> to show that the abductive explanations satisfy the integrity constraints.|$|E
5000|$|... a {{software}} taggant may cover small critical {{areas of the}} program to minimize the cost of software <b>integrity</b> <b>checking</b> (Authenticode always covers nearly the entire file so the cost of checking linearly depends on the file size) ...|$|E
5000|$|FreeNAS {{supports}} the OpenZFS filesystem which provides data <b>integrity</b> <b>checking</b> to prevent data corruption, enable {{point in time}} snapshotting, replication and several levels of redundancy including striping, mirroring, striped mirrors (RAID 1+0), and three levels of [...] RaidZ.|$|E
25|$|The {{connection}} ensures integrity {{because each}} message transmitted includes a message <b>integrity</b> <b>check</b> using a {{message authentication code}} to prevent undetected loss or alteration of the data during transmission.|$|R
5000|$|Musa Bility, President of the Liberia Football Association; {{announced}} his bid on 26 October 2015; {{excluded from the}} presidential race on 12 November 2015 after failing an <b>integrity</b> <b>check.</b>|$|R
40|$|Abstract. In 2005, Ginger Myles and Hongxia Jin {{proposed}} a software watermarking {{scheme based on}} converting jump instructions or unconditional branch statements (UBSs) by calls to a fingerprint branch function (FBF) that computes the correct target address of the UBS {{as a function of}} the generated fingerprint and <b>integrity</b> <b>check.</b> If the program is tampered with, the fingerprint and <b>integrity</b> <b>checks</b> change and the target address will not be computed correctly. In this paper, we present an attack based on tracking stack pointer modifications to break the scheme and provide implementation details. The key element of the attack is to remove the fingerprint and <b>integrity</b> <b>check</b> generating code from the program after disassociating the target address from the fingerprint and integrity value. Using the debugging tools that give vast control to the attacker to track stack pointer operations, we perform both subtractive and watermark replacement attacks. The major steps in the attack are automated resulting in a fast and low-cost attack...|$|R
5000|$|PNG is {{designed}} to work well in online viewing applications like web browsers and can be fully streamed with a progressive display option. PNG is robust, providing both full file <b>integrity</b> <b>checking</b> and simple detection of common transmission errors.|$|E
50|$|HKDF is an HMAC based key {{derivation}} {{function that}} transforms any weak key material into cryptographically strong key material. It can be used, for example, to convert Diffie Hellman exchanged shared secrets into key material suitable for use in encryption, <b>integrity</b> <b>checking</b> or authentication.|$|E
5000|$|Secure Socket Tunneling Protocol (SSTP), {{introduced}} in Windows Vista Service Pack 1 {{is a form}} of VPN tunnel that provides a mechanism to transport PPP or L2TP traffic through an SSL 3.0 channel. SSL provides transport-level security with key-negotiation, encryption and traffic <b>integrity</b> <b>checking.</b>|$|E
30|$|Impersonation attack {{can be an}} {{identity}} spoofing, node cloning, reply or an unauthorized access. However, the attackers fail to pass the source and location authentication as well as <b>integrity</b> <b>check.</b>|$|R
5000|$|... Thursday (2012) - God's Work (2012) - <b>Integrity</b> <b>Check</b> (2012) - Identity (2012) - Underwater (2012) - Failure Drill (2011) - Sideways (2011) - The Winds (2011) - Discretion (2011) ...|$|R
50|$|The {{delay of}} a wire or gate may also {{depend on the}} {{behaviour}} of the nearby components. This {{is one of the}} main effects that is analyzed during signal <b>integrity</b> <b>checks.</b>|$|R
50|$|In Windows 8, the NFS client gained krb5p (Kerberos 5 {{with full}} data encryption) support. In Windows 7, Kerberos 5 was {{supported}} for authentication, but only packet <b>integrity</b> <b>checking</b> {{was available for}} data. The maximum block/buffer size was also increased from 32 KB to 1 MB in Windows 8.|$|E
50|$|Introduced in 2012, the ZX line of {{appliances}} {{provided a}} ZFS NAS interface to EtherDrive storage. The ZX-Series appliances provided Ethernet SAN performance together with advanced features supported by Oracle's file system, including high availability, deduplication, snapshots and copy-on-write clones, and continuous <b>integrity</b> <b>checking</b> with automatic repair and high scalability.|$|E
50|$|Higher-level {{software}} {{systems may}} {{be employed to}} mitigate the risk of such underlying failures by increasing redundancy and implementing <b>integrity</b> <b>checking</b> and self-repairing algorithms. The ZFS file system was designed to address many of these data corruption issues. The Btrfs file system also includes data protection and recovery mechanisms, and so does ReFS.|$|E
5000|$|<b>Integrity</b> <b>Check</b> Value (multiple of 32 bits) : Variable length check value. It {{may contain}} padding to align {{the field to}} an 8-octet {{boundary}} for IPv6, or a 4-octet boundary for IPv4.|$|R
50|$|Each {{user can}} create a job (that is, a string of TPT commands) {{that allows them to}} perform operations, such as {{heterogeneous}} data access, data <b>integrity</b> <b>checks,</b> data merging, and data loads in batch or interactive.|$|R
30|$|The {{prototype}} implementation {{is tested}} with different security algorithms for encryption and <b>integrity</b> <b>check</b> {{to measure the}} latency in handover due to DTLS signaling messages as well as MIH message transport delay due to security algorithm processing.|$|R
