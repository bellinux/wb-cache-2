0|183|Public
50|$|A swipe file is a {{collection}} of tested and proven advertising and sales letters. Keeping a swipe <b>file</b> (<b>templates)</b> is a common practice used by advertising copywriters and creative directors as a ready reference of ideas for projects.|$|R
50|$|Written {{entirely in}} the Java {{programming}} language, ExtenXLS creates new spreadsheet files from scratch {{as well as from}} existing spreadsheet <b>files</b> <b>templates.</b> ExtenXLS has the ability to utilize data from any source and output it in Excel-compatible XLS, XML, and HTML formats.|$|R
50|$|Multiple <b>template</b> <b>files</b> may {{be created}} and a {{specific}} one selected {{by pointing to}} it with the environment variable II_CKTMPL_FILE. The default <b>template</b> <b>file</b> is: II_SYSTEM/ingres/files/cktmpl.def.|$|R
30|$|In {{this study}} the paper-and-pencil {{version of the}} {{questionnaire}} was used. The questionnaires were collected from the schools and coded by an expert based on the Excel data <b>file</b> <b>template</b> created by the first author of this study. The data were then transferred to SPSS and analyzed by means of descriptive statistics, statistical comparisons, correlation analyses and multivariate analyses.|$|R
5000|$|... {{external}} <b>file</b> templates: <b>Template</b> content can {{be loaded}} from external files using compile time splice calls as $(expr).|$|R
50|$|It {{works by}} {{manipulating}} Registry and security settings. User-specific settings {{are stored in}} the HKEY_CURRENT_USER registry hive. Likewise, machine-specific settings are written under HKEY_LOCAL_MACHINE. ADM <b>files</b> are <b>template</b> <b>files</b> that are used by System Policy Editor to describe where registry-based policy settings are stored in the registry. They also describe the user interface presented to System Policy administrators.|$|R
5000|$|Report Engine: {{the report}} engine {{is based on}} relatorio that uses ODT <b>files</b> as <b>templates</b> and {{generate}} ODT or PDF reports.|$|R
5000|$|Template includes: you {{can include}} a <b>template</b> <b>file</b> from within another <b>template</b> <b>file</b> so, for example, {{you can have}} a site footer that you point to from each template, if you needed to change the footer, it can be done simply by editing 1 file.|$|R
40|$|Authors are {{encouraged}} to submit new papers to INFORMS journals {{by means of a}} style <b>file</b> <b>template,</b> which includes the journal title. However, use of a template does not certify that the paper has been accepted for publication in the named jour-nal. INFORMS journal templates are for the exclusive purpose of submitting to an INFORMS journal and should not be used to distribute the papers in print or online or to submit the papers to another publication. K-optimal design via semidefinite programming and entropy optimizatio...|$|R
25|$|Text Generation Framework: Visual Studio {{includes}} a full text generation framework called T4 which enables Visual Studio to generate text <b>files</b> from <b>templates</b> {{either in the}} IDE or via code.|$|R
50|$|The Template Toolkit (TT) is a {{template}} engine used primarily for building web sites, {{but is also}} suitable for creating any type of digital document, such as a PDF or LaTeX <b>file.</b> <b>Template</b> Toolkit {{is based on a}} mini-language and does not allow direct Perl in its templates by default, unlike some competing products (e.g. Mason). This forces developers to separate business logic into Perl libraries, leaving only presentation logic in their templates. It is written in Perl, with some popular accessories in C. It is released under a free software licence (Perl Artistic Licence or GPL).|$|R
5000|$|<b>Template</b> <b>files</b> are PHP-based, with no {{template}} engine used {{by default}} ...|$|R
5000|$|The default <b>template</b> <b>file</b> generates {{code that}} will only work {{properly}} with the Microsoft compiler. Although {{this is not an}} inherent limitation of the preprocessor, the fact that the <b>template</b> <b>file</b> (which controls what code is generated in the trace message header) uses an undocumented format means that in practice WPP will only work properly with the Microsoft compiler.|$|R
5000|$|A {{configuration}} {{is defined}} {{by a set of}} <b>files,</b> called <b>templates,</b> written in the pan language.These templates define simultaneously the configuration parameters, the configuration schema, andvalidation functions. Each template is named and is contained in a file having the same name.The syntax of a <b>template</b> <b>file</b> is simple:object | declaration | unique | structure [...] template template-name;statement … These files may contain comments that start with the hash sign ('#') and terminate with the next new lineor end of file.|$|R
5000|$|Presentation files {{used the}} {{filename}} extension [...] while [...] {{was used by}} <b>template</b> <b>files.</b>|$|R
3000|$|... result documents: {{which are}} {{generated}} after {{the processing of}} data and <b>template</b> <b>files,</b> so-called expanding, [...]...|$|R
5000|$|... /** A page class (automatically {{associated}} with the <b>template</b> <b>file</b> of the same name) */public class HelloWorld { ...|$|R
30|$|As {{stated in}} the {{introduction}} of this paper, the knowledge about software concern domain is spread in different studies, sometimes in a divergent way. Most of the existing AORE approaches represent the knowledge about software concerns in XML <b>files</b> (<b>templates),</b> developed by the authors of these approaches. These templates are usually presented without the meta-model that describes them and do not share the main concepts and relationships existing in the software concern domain. For instance, the template proposed by Moreira et al. [17] does not provide information about the source(s) from which a concern was described, such as a stakeholder, a business document, among others. However, this information {{can be found in}} templates of other AORE approaches [12, 16, 18].|$|R
5000|$|<b>Template</b> (<b>file</b> format) (similar fill-in-the {{blank and}} GUI {{configuration}} features, but for spreadsheets, image processing software and other desktop applications) ...|$|R
3000|$|... <b>template</b> <b>files</b> (also called templates): {{written in}} the {{language}} of the resulting documents together with special template language statements, and [...]...|$|R
40|$|Generates Knime {{workflow}} node skeleton repository {{with sample}} code. The node executes a Python script which {{is included in}} the skeleton. The script uses dictionary for dialog options and Pandas DataFrames as input and output. Changed Templatify KNIME test workflow Process Travis-CI config <b>file</b> by <b>template</b> engine Improved development instruction...|$|R
5000|$|Pressing the Green Button {{allows you}} to insert the smiley templates. To do that you should {{download}} and install the <b>templates</b> <b>file</b> (stICQ.tpl).|$|R
5000|$|Apart from {{allowing}} static {{content to}} be combined with Python code in a single <b>file,</b> the Topsite <b>Templating</b> System possesses other features, such as: ...|$|R
30|$|Furthermore, the {{connectors}} of {{the different}} components can vary between different Modelica libraries. Therefore, the connector names can be configured in a separate configuration file, called connectors.cfg, which {{is included in the}} directory of the belonging Modelica <b>template</b> <b>files.</b> Its settings are read by all Connection constructors, combined, and fed into the dictionary which is used for filling the connections subtemplate, included by the main <b>template</b> <b>file.</b> The final Modelica code generation will be exemplarily presented in the next section.|$|R
30|$|The “Contribution,” “Composition,” and “Dependency” {{concepts}} are quite divergently {{presented in the}} related works. The idea represented by the “Contribution” concept is reported in the approaches proposed by Moreira et al. [17] and Soeiro et al. [3]. However, in both approaches, the usage of this concept {{is limited to the}} project under analysis and there are no guidelines clearly indicated by the authors about how to reuse this knowledge in other projects. The approach proposed by Moreira et al. [17] also provides a XML <b>file</b> (<b>template)</b> responsible for specifying the relationships among different concerns; however, this template does not differentiate the types of possible relationships, such as dependency, composition, among others. The “Dependency” concept was found only in the approach proposed by Soeiro et al. [3] and the “Composition” concept was not found in the analyzed works.|$|R
40|$|Abstract – These {{instructions}} {{give you}} guidelines for preparing camera-ready short papers for the ÖGA 2006 conference proceedings. The short papers can be writ-ten in German or in English. The {{length of the}} short pa-per is maximally two pages. There will be no key words. Use this document as a template {{if you are using}} Mi-crosoft Word 6. 0 or later. Otherwise, use this document as an instruction set. Define all symbols used in the pa-should not exceed ca. 200 words, which corresponds to the double length of this example. The footnote symbol following this abstract should not be deleted. 1 INTRODUCTION TO USING THE TEMPLATE This document is a template for Microsoft Word versions 6. 0 or later. If you are reading a paper version of this document, please download the electronic <b>file,</b> <b>template.</b> doc, from the websit...|$|R
5000|$|... is run on {{the sources}} to produce a [...] (Portable Object <b>Template)</b> <b>file,</b> which {{contains}} {{a list of all}} the translatable strings extracted from the sources.|$|R
40|$|A {{valuable}} skillset {{for building}} industry professionals is proficiency in high-level, scripting languages that can automate and perform many common repetitive or technically intensive tasks. This application-focused paper emphasizes {{the use of}} the Python program-ming language in various workflows common to the building performance modeling and simulation pro-cess. Python is an open, powerful, and easy-to-learn scripting language with an emphasis on programmer productivity. While the highlighted applications them-selves are notably ordinary amongst building simu-lation practitioners, the novelty of this discussion is in the speed and usefulness of new Python libraries and data analysis techniques. Four short examples are illustrated: simulation input <b>file</b> <b>templating,</b> data exchange and interoperability, performance curve re-gression, and time-series output data postprocessing. An overview is presented of the growing current and planned Python libraries, extensions, and projects that are especially applicable and, in some cases, explicitly designed for the building industry...|$|R
40|$|Recent {{research}} has found that operators frequently misconfigure Internet services, causing various availability and performance problems. In this paper, we propose a software infrastructure that eliminates several types of misconfiguration by automating the generation of configuration files in Internet services, even as the services evolve. The infrastructure comprises a custom scripting language, configuration <b>file</b> <b>templates,</b> communicating runtime monitors, and heuristic algorithms to detect dependencies between configuration parameters and select ideal configurations. To demonstrate our infrastructure experimentally, we apply it to a realistic online auction service. Our results show that the infrastructure can simplify operation significantly while eliminating 58 % of the misconfigurations found in a previous study of the same service. Furthermore, our results show that the infrastructure can efficiently determine the configuration parameters that lead to high performance as the service evolves through a hardware upgrade and the scheduled maintenance of a few nodes...|$|R
50|$|Movable Type {{has several}} notable features, {{such as the}} ability to host {{multiple}} weblogs and standalone content pages, manage <b>files,</b> user roles, <b>templates,</b> tags, categories, and trackback links.|$|R
50|$|The {{right-hand}} pane, {{which usually}} just lists files and folders, {{can also be}} customized. For example, {{the contents of the}} system folders aren't displayed by default, instead showing in the right pane a warning to the user that modifying the contents of the system folders could harm their computer. It's possible to define additional Explorer panes by using DIV elements in folder <b>template</b> <b>files.</b> This feature was abused by computer viruses that employed malicious scripts, Java applets, or ActiveX controls in folder <b>template</b> <b>files</b> as their infection vector. Two such viruses are VBS/Roor-C and VBS.Redlof.a.|$|R
5000|$|Includes all the {{features}} of Player Pro, and adds {{the ability to create}} standard definition (up to 768 x 576) WMV <b>files</b> using preset <b>templates</b> and custom encoding profiles ...|$|R
40|$|In this paper, {{we present}} a general review {{of the status of}} {{numerical}} modelling applied to the design of high temperature superconductor (HTS) devices. The importance of this tool is emphasized {{at the beginning of the}} paper, followed by formal definitions of the notions of models, numerical methods and numerical models. The state-of-the-art models are listed, and the main limitations of existing numerical models are reported. Those limitations are shown to concern two aspects: one the one hand, the numerical performance (i. e. speed) of the methods themselves is not good enough yet; on the other hand, the availability of model <b>file</b> <b>templates,</b> material data and benchmark problems is clearly insufficient. Paths for improving those elements are provided in the paper. Besides the technical aspects of the research to be further pursued, for instance in adaptive numerical methods, most recommendations command for an increased collective effort for sharing files, data, codes and their documentation...|$|R
5000|$|Netmap - is a Netcad module for zoning and {{cadastral}} project preparation, including coordinate calculations. It has {{a standard}} structure {{thanks to the}} use of <b>template</b> <b>files</b> in project creation ...|$|R
50|$|FinalCode {{provides}} AES-256 encryption, granular permission sets, {{corporate and}} user policy <b>templates,</b> <b>file</b> lifecycle activity analytics, dynamic policy modification, {{and the ability}} to remotely delete files after they have been shared.|$|R
50|$|In the C++ {{programming}} language, {{is a part}} of the C++ Standard Library. It is a header <b>file</b> {{that provides}} <b>templates</b> and types that enable interoperation between stream buffers and string objects.|$|R
