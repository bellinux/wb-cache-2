33|80|Public
50|$|DART {{implements}} RPC {{over both}} the User Datagram Protocol (UDP) and the Transport Control Protocol (TCP). Each application {{has a single}} UDP stream and one TCP stream per connection, with the common <b>IP</b> <b>module</b> acting as a multiplexer.|$|E
50|$|Over the years, many {{extensions}} {{have been}} added to the VME interface, providing 'sideband' channels of communication in parallel to VME itself. Some examples are <b>IP</b> <b>Module,</b> RACEway Interlink, SCSA, Gigabit Ethernet on VME64x Backplanes, PCI Express, RapidIO, StarFabric and InfiniBand.|$|E
30|$|The {{hardware}} specifications {{are defined}} at the physical layer. Physical layer provides hardware entities {{to the network}} and processing layers. Sonar and timer give the input signals to the network layer, while camera gives input image frame to the image processing (<b>IP)</b> <b>module</b> that {{is the part of}} processing layer. The network layer that is above the physical layer implements timer and sonar modules. The network layer can also be executed by the <b>IP</b> <b>module</b> and routing decision module to send and receive the packetized messages. The processing layer is at the top level incorporating basic functionalities for detection-, recognition-, and perspective-based MO tracking. Database management module also resides at this layer.|$|E
40|$|The Control System for the Advanced Light Source (ALS) at Lawrence Berkeley National Lab (LBNL) uses {{in-house}} designed IndustryPack(registered trademark) (<b>IP)</b> <b>modules</b> {{contained in}} compact PCI (cPCI) crates with 16 -bit analog I/O to control instrumentation. To make the <b>IP</b> <b>modules</b> interchangeable, each module is calibrated for gain and offset compensation. We initially developed {{a method of}} verifying and calibrating the <b>IP</b> <b>modules</b> in a lab bench test environment using a PC with LabVIEW. The subsequent discovery that the ADCs have significant drift characteristics over periods of days of installed operation prompted development of an "in-situ" calibration process [...] {{one in which the}} <b>IP</b> <b>modules</b> can be calibrated without removing them from the cPCI crates in the storage ring. This paper discusses the original LabVIEW PC calibration and the migration to the proposed in-situ EPICS control system calibration...|$|R
50|$|<b>IP</b> <b>modules</b> {{can also}} be created that are system independent, and rely only on the porting {{platform}} modules. The result is that IP Pascal is very highly portable.|$|R
40|$|Abstract—As the {{complexity}} of designing system-on-chips increases, so does the need to abstract low-level design issues to improve designer productivity. The reuse of previously designed Intellectual Property (<b>IP)</b> <b>modules</b> is a common form of abstraction used to reduce design time. However, different applications typically {{use a variety of}} physical interfaces, communication protocols, and global system-level control for <b>IP</b> <b>modules,</b> which complicates design reuse. In this paper, we describe the SIMPPL system model and an abstraction for <b>IP</b> <b>modules,</b> called the computing element (CE), that facilitate the SoC design for both field-programmable gate array (FPGA) and application-specific integrated circuit (ASIC) platforms. The CE abstraction decouples the datapath and system-level communication from the application-specific control to promote design reuse by localizing control redesign of IP for new applications. The SIMPPL model facilitates multi-clock domain SoC designs and expedites system integration by defining the intermodule links and communication protocols. Index Terms—application-specific architectures, application-specific integrated circuits (ASICs), customizable controllers, design reuse, field-programmable gate arrays (FPGAs), Intellectual Property (IP) reuse, system integration, system-on-chip design...|$|R
40|$|This thesis {{presents}} a novel Dynamic Gesture Language Recognition (DGLR) system for human-robot and inter-robot communication. We developed and implemented an experimental setup {{consisting of a}} humanoid robot/android able to recognize and execute in real time all the arm gestures of the Dynamic Gesture Language (DGL) in similar way as humans do. Our DGLR system comprises two main subsystems: an image processing (<b>IP)</b> <b>module</b> and a linguistic recognition system (LRS) module. The <b>IP</b> <b>module</b> enables recognizing individual DGL gestures. In this module, we use the bag-of-features (BOFs) and a local part model approach for dynamic gesture recognition from images. Dynamic gesture classification is conducted using the BOFs and nonlinear support-vector-machine (SVM) methods. The multiscale local part model preserves the temporal context. The <b>IP</b> <b>module</b> was tested using two databases, one consisting of images of a human performing a series of dynamic arm gestures under different environmental conditions and a second database consisting of images of an android performing the same series of arm gestures. The linguistic recognition system (LRS) module uses a novel formal grammar approach to accept DGL-wise valid sequences of dynamic gestures and reject invalid ones. LRS consists of two subsystems: one using a Linear Formal Grammar (LFG) to derive the valid sequence of dynamic gestures and another using a Stochastic Linear Formal Grammar (SLFG) to occasionally recover gestures that were unrecognized by the <b>IP</b> <b>module.</b> Experimental results {{have shown that the}} DGLR system had a slightly better overall performance when recognizing gestures made by a human subject (98. 92 % recognition rate) than those made by the android (97. 42 % recognition rate) ...|$|E
40|$|This work {{presents}} a hardware intellectual property (<b>IP)</b> <b>module</b> that performs demodulation and decoding of the Digital Radio Mondiale (DRM) signal. The IP has completely {{been developed in}} SystemC, thus allowing seamless design, optimization and validation from floating-point system-level software to register transfer level hardware within the same environment...|$|E
30|$|In this section, three typical {{system-level}} implementations are discussed. They all {{follow the}} design philosophy of security-first architecture, and reflect different design considerations {{in terms of}} system overhead, complexity and performance. ASP can be implemented as an additional <b>IP</b> <b>module</b> on a chipset, an extra core on a processor chip, or a separate processor chip.|$|E
40|$|Effective {{integration}} of advanced Systems-on-Chip (SoC) requires extensive reuse of <b>IP</b> <b>modules</b> {{as well as}} automation of the IP integration process, including verification. Key enablers for this are standards to describe and package <b>IP</b> <b>modules.</b> We focus on the IP-XACT standards and demonstrate how these standards are deployed in three industrial IP integration flows. Further, we report on two future extensions to IP-XACT that are currently being explored in the SPRINT project, i. e. IP-XACT based verification software generation and IP-XACT based configuration of debug environments. We conclude that IP-XACT is enabling powerful IP integration methodologies and that future extensions can further increase the effectiveness of IP-XACT standards. 1...|$|R
50|$|Original IPsThe big advancements for IPs {{was when}} Motorola adopted the {{standard}} for their MVME162 processor line (see Motorola Single Board Computers) based on the Motorola 68040. In a short time, there were multiple IP manufacturers and over 100 different <b>IP</b> <b>modules</b> available.|$|R
30|$|As {{the main}} video {{encoding}} functions (such as ME, DCT/Q, IDCT/Q- 1, MC, Deblocking Filter, and CAVLC) {{can be accelerated}} by <b>IP</b> <b>modules,</b> the interconnection between those video processing accelerators has an important impact on the overall system performance. To make the IP accelerators execute main computational encoding routines in full parallel and pipelining mode, the IP integration architecture has to be optimized. A few of caches are inserted between the video IP accelerators to facilitate the encoding concurrent performance. The caches can be organized as parallel dual-port memory (BRAM) or pipelined memory (FIFO). The interconnection control of data streaming between <b>IP</b> <b>modules</b> will be defined using those caches targeting to eliminate the extra overhead of processing routines, for encoding functions can be operated in full parallel and pipelining stages.|$|R
40|$|This memo is {{intended}} to explore {{the issue of what}} a host could do with a source quench. The proposal is for each source host <b>IP</b> <b>module</b> to introduce some delay between datagrams sent to the same destination host. This is an "crazy idea paper " and discussion is essential. Distribution of this memo is unlimited...|$|E
40|$|In {{this paper}} a new digital {{dedicated}} hardware <b>IP</b> <b>module</b> for extracting singular points from fingerprints is presented (in particular convex cores). This module comprises four main blocks that implement an image directional extraction, a smoothing process, singular point detection and finally, a post processing {{to obtain the}} exact location of the singular point. A Verilog HDL description has been developed for this solution. The description has been synthesized and implemented in FPGAs from Xilinx...|$|E
40|$|In {{order to}} realize System on a Chip (SoC) designs {{and to meet}} Time to Market (TTM) window at the same time, the {{development}} of a qualification methodology is necessary because transfer of IP modules is crucial. Since design for reuse (IP) is one possibility, but requires a design to be compliant to certain guidelines. This enables a quick integration of an <b>IP</b> <b>module</b> into a system. Detailed guidelines exist which the designer must check manually. Therefore it is nearly impossible to ensure compliance to all guidelines. Thus it is necessary to automate the qualification of IP modules. In today's design flows several existing tools can be used manually to assure compliance to standards and thus high quality designs. This paper will show that the qualification of the design can be performed in a semi-automatic manner to meet TTM and to avoid resources being bound unnecessarily. The approach proposed also takes care of the packaging of a soft <b>IP</b> <b>module,</b> which typically consists of about one hundred files and some megabytes of data. Furthermore an IP certification phase will also be part of the IP qualification system...|$|E
40|$|Many Field-Programmable Gate Array (FPGA) based systems utilize {{third-party}} {{intellectual property}} (IP) in their development. When they are deployed in non-networked environments, the question raises how this IP can be protected against non-authorized use. We describe an offline authentication scheme for <b>IP</b> <b>modules.</b> The scheme implements mutual authentication of the <b>IP</b> <b>modules</b> and the hardware platform, and {{enables us to}} provide authentication and integrity assurances to both the system developer and IP provider. Compared to the Trusted Computing Platform’s approach to hardware, software authentication, our solution is more lightweight and tightly integrates with existing FPGA security features. We are able to demonstrate an implementation of the authentication scheme that requires a symmetric cipher and a Physically Unclonable Function (PUF). In addition to the low hardware requirements, our implementation does not require any on-chip, non-volatile storage. ...|$|R
40|$|As {{technology}} advances, design complexity {{is increasing}} and the circuit size is getting larger. To {{cope with the}} increasing design complexity, hierarchical design and <b>IP</b> <b>modules</b> are widely used. This trend makes module floorplanning/placement much more critical {{to the quality of}} a VLSI design than ever. A fundamental problem to floorplanning/placement lies in the representation of geometric relationship amon...|$|R
40|$|A General Purpose Fieldbus Controller (GPFC) is {{primarily}} {{designed as a}} compact and economical solution for introducing advanced programming and operating environment at the fieldbus level of accelerator control systems. Its scalable modular architecture enables a number of applications, ranging from a highly intelligent fieldbus node upto a powerful networked host driving several fiedlbuses. GPFC is implemented as a standalone IndustryPack R (IP) carrier, so that {{a wide range of}} commercially available plag-on <b>IP</b> <b>modules</b> (CAN, Profibus, Ethernet, digital and analog I/O, etc.) can be used to configure it to application needs. GPFC may have a single board configuration hosting 2 <b>IP</b> <b>modules,</b> or an extended (dual board) one, which hosts 4 IPs. GPFC is powered with the Motorola ColdFire TM CPU and runs V xWorks R, the real time operating system from Windriver Systems. GPFC, configured with low cost and highly reliable real-time CAN communications, seems to be an efficient solution fo [...] ...|$|R
40|$|This paper {{presents}} an Intellectual Property (<b>IP)</b> <b>module</b> that includes fully functional autonomous Automatic Test Equipment (ATE). The module analyses {{responses from the}} Device Under Test (DUT) after sending test vectors to the device. Communication with the DUT is maintained through a synchronous bidirectional serial channel. The module has been designed for a fail-safe level of security, which means any single fault producing an erroneous output is detected. Several IP-ATEs can be synthesized in a single hardware platform to operate independently or coordinately. Postprint (published version...|$|E
40|$|International audienceIn this paper, {{we present}} the {{installation}} of a hardware platform for video acquisition and restitution in real-time using a mixed software/hardware environment. The hardware platform {{is based on the}} Altera STRATIX development board. Besides, it is completed with a camera interface for acquisition and a VGA interface for restitution. The core of the system incorporates an <b>IP</b> <b>module</b> (intellectual property) of Altera Nios processor in the Quartus II development tool of Altera. During this study, we have used video sequences, which are acquired, processed and visualized while respecting temporal constraints...|$|E
40|$|Abstract. The {{design of}} digital-analog mixed SoC {{involves}} RF/analog and digital domains, {{how to effectively}} improve the design reliability and to reduce the development cycles has become a research hotspot. This paper establishes the appropriate behavioral models of RF / analog / digital IP modules, and carries out the behavioral simulation based on the built mixed-domain simulation platform and the behavioral libraries of RF/analog/digital <b>IP</b> <b>module,</b> which enhances the reliability and stability of mixed SoC design, and reduces the design cycle. Those explorations {{may be helpful to}} the designers of digital-analog mixed SoC...|$|E
30|$|There {{is also a}} {{non-linear}} technique with Self-Test Path (STP) or Circular STP (CSTP). Some {{modifications of}} these self-testing techniques are also known, e.g., Circular CSTP (C 2 STP) [4]. Contrary to linear technique, the Circuit Under Test (CUT) in non-linear technique is a feedback of STP or CSTP, thus posing a problem with parameter selection for these structures. These structures can be implemented in Field Programmable Gate Arrays (FPGA) [5], Application Specific Integrated Circuit (ASIC), System-on-Chip (SOC), which consist of many virtual Intellectual Property <b>modules</b> (<b>IP</b> Core). For SOC, the STP structures can also link <b>IP</b> <b>modules</b> [6].|$|R
40|$|Abstract: The use of {{standard}} languages like VHDL and C for {{the description of}} hardware and software IP has became a common practice. Despite this, these languages, specially the hardware description languages lack constructs that allow the IP designer to develop highly re-usable IP blocks. In this paper is described an abstract communication mechanism that uses extensions to the VHDL language, communication library for software and automatic interface generation for the easy integration of <b>IP</b> <b>modules.</b> 1...|$|R
40|$|Abstract. In {{the field}} of SoC hardware/software co-design, {{transaction}} level modeling is the bridge of SoC system level modeling and RTL level modeling. This paper considers a novel application specific template reuse approach for SoC transaction level modeling. Application specific architecture templates are built by integrating computation, communication and scheduling <b>IP</b> <b>modules.</b> These templates can support SoC modeling, mapping and simulation simultaneously. Experiments results from JPEG encoder applications in TL_Platform Creator show the approach can improve the quality and efficiency of SoC design greatly...|$|R
40|$|Comunicación presentada al "ICECS" celebrado en Marsella (Francia) del 7 al 10 de diciembre de 2014 In {{this paper}} a new digital {{dedicated}} hardware <b>IP</b> <b>module</b> for extracting singular points from fingerprints is presented (in particular convex cores). This module comprises four main blocks that implement an image directional extraction, a smoothing process, singular point detection and finally, a post processing {{to obtain the}} exact location of the singular point. A Verilog HDL description has been developed for this solution. The description has been synthesized and implemented in FPGAs from Xilinx. Peer reviewe...|$|E
40|$|In this paper, {{we present}} the {{installation}} of a hardware platform for video acquisition and restitution in real-time using a mixed software/hardware environment. The hardware platform {{is based on the}} Altera STRATIX development board. Besides, it is completed with a Camera interface for acquisition and a VGA interface for restitution. The core of the system incorporates an <b>IP</b> <b>module</b> (Intellectual Property) of Altera Nios processor in the Quartus II development tool of Altera. During this study, we have used video sequences, which are acquired, processed and visualized while respecting temporal constraints...|$|E
3000|$|..., and Motion Compensation (MC) for decoding. An IP memory {{interface}} {{is provided}} by the architecture to achieve the integration. All IP modules are connected to the IP memory interface, which provides accelerators a straight way to exchange data between the host and memory spaces. Interrupt signals can be generated by accelerators when demanded. Moreover, to control the concurrent performance of accelerators, an IP bus arbitrator is designed and integrated in the IP memory interface, for the interface controller to allocate appropriate memory operation time for each <b>IP</b> <b>module,</b> and avoid the memory access conflicts possibly caused by heterogeneous IP operations.|$|E
40|$|The recent {{progress}} in modern nano-electronic technology enabled implementation of very complex multiprocessor systems on single chips {{and created a}} big push towards development of various kinds of high-performance embedded systems, However, the opportunities created can be effectively exploited only through use of more adequate system architectures and more integrated system <b>IP</b> <b>modules,</b> supported by new effective and efficient design methods and electronic design automation tools. This paper focuses on mastering the automatic development of heterogeneous MPSoCs based on customizable ASIPs and {{is related to the}} European project ASAM (Automatic Architecture Synthesis and Application Mapping) ...|$|R
40|$|International audienceThe {{complexity}} of modern embedded systems requires {{the cooperation of}} several teams belonging to different cultures and using different languages {{as well as the}} reuse of software, hardware and communication <b>IP</b> <b>modules</b> at the early design steps. The key issue for the design of such systems is the overall system validation and the synthesis of the communication between the different subsystems. In this paper, we focus on the problem of multi-level communication synthesis and show the results of the application of this methodology on an example. Designers get feedback at all design steps via the cosimulation engine that permits fast evaluation...|$|R
40|$|The paper {{presents}} {{the design and}} implementation of a digital rule-relational fuzzy logic controller. Classical and decomposed logical structures of fuzzy systems are discussed. The second allows {{a decrease in the}} hardware cost of the fuzzy system and in the computing time of the final result (fuzzy or crisp), especially when referring to relational systems. The physical architecture consists of <b>IP</b> <b>modules</b> implemented in an FPGA structure. The modules can be inserted into or removed from the project to get a desirable fuzzy logic controller configuration. The fuzzy inference system implemented in FPGA can operate with a much higher performance than software implementations on standard microcontrollers...|$|R
40|$|This work {{presents}} {{the development of}} self-modifiable Intellectual Property (IP) modules for histogram calculation using the modelbased design technique provided by Xilinx System Generator. In this work, an analysis and a comparison among histogram calculation architectures are presented, selecting the best solution for the design flow used. Also, the paper emphasizes the use of generic architectures capable of been adjustable by a self configurable procedure to ensure a processing flow adequate to the application requirements. In addition, {{the implementation of a}} configurable <b>IP</b> <b>module</b> for histogram calculation using a model-based design flow is described and some implementation results are shown over a Xilinx FPGA Spartan- 6 LX 45...|$|E
40|$|Reuse of {{semiconductor}} IP modules {{is widely}} {{perceived as a}} means to overcome the design gap [1], enabling the development of complex systems-on-chip under narrow manpower and time-tomarket constraints. However, for the IP business to be a success, many requirements related to the portability, maintainability, and quality of an <b>IP</b> <b>module</b> must be met. This paper presents an automated flow that addresses these aspects, and thereby assures the qualification of technologyindependent soft IP for efficient reuse. The production use of this flow, developed in the MEDEA+ project ToolIP, in both the design and the delivery of IP, is helping sci-worx to better address its customers' needs and increase its own productivity at the same time...|$|E
40|$|With the {{increasing}} number of embedded computer systems being used in safety critical applications the testing and assessment of a system's fault tolerance properties become a crucial issue. Experimental fault injection {{plays an important role in}} the process of fault tolerance assessment. The restricted accessibility of nodes within a chip or system-on-a-chip, however, make such experiments extremely difficult. The idea we want to promote in this paper is to add a fault injector on to the silicon that can perform fault injection automatically on demand during several stages of design. In a first step we discuss the usefulness of such an infrastructure <b>IP</b> <b>module.</b> Then, starting from an FPGA-based fault-injection toolset that we have already developed, we investigate the feasibility of designing such a module under the given tight economic constraints...|$|E
40|$|Networks on chip (NoCs) are an {{essential}} component of systems on chip (SoCs) and much research is devoted to deadlock avoidance in NoCs. Prior work focuses on the router network while protocol interactions between NoC and intellectual property (<b>IP)</b> <b>modules</b> are not considered. These interactions introduce message dependencies that affect deadlock properties of the SoC as a whole. Even when NoC and IP dependency graphs are cycle-free in isolation, put together they may still create cycles. Traditionally, SoCs rely solely on request-response protocols. However, emerging SoCs adopt higher-level protocols for cache coherency, slave locking, and peer-to-peer streaming, thereby increasing the complexity in the interaction between the NoC and the IPs. In this paper, we analyze message-dependent deadlock, arising due to protocol interactions between the NoC and the <b>IP</b> <b>modules.</b> We compare the possible solutions and show that deadlock avoidance, in the presence of higher-level protocols, poses a serious challenge for many current NoC architectures. We evaluate the solutions qualitatively, and for a number of designs we quantify the area cost for the two most economical solutions, strict ordering and end-to-end flow control. We show that the latter, which avoids deadlock for all protocols, adds an area and power cost of 4 % and 6 %, respectively, of a typical Æthereal NoC instance. Copyright © 2007 Andreas Hansson et al. This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. 1...|$|R
40|$|A smart camera {{processor}} has to perform {{substantial amount of}} processing of data-intensive operations. Hence, {{it is vital to}} identify critical segments of the processing load by involving HW/SW codesign in smart camera system design. This paper presents a novel fully automatic hybrid framework that combines heuristic and knowledge-based approaches to partition, allocate and schedule <b>IP</b> <b>modules</b> efficiently. In this work, the concept of Bayesian Belief Network (BBN) is utilised and incorporated into the proposed framework. In the experiment section of this paper, we report a comparison of our proposed framework with three previously published work: A BBN based method proposed by a research group from the University of Arizona, the exhaustive algorithm and finally the with greedy algorithms...|$|R
40|$|Abstract. Electronic {{system design}} has been {{becoming}} more and more complex. It is very common to have dozens of <b>IP</b> <b>modules</b> in a single system. To quickly simulate the system is becoming a challenge. On the other hand, computing facilities, on which people run actual simulation, are {{becoming more and}} more powerful by having more powerful single processor and by building parallel machines. However, there is not too much attempts in exploring parallelism in electronic design automation community esp. for system level design. In this paper, I present a parallel simulator targeting Symmetric Multi-Processor (SMP) machines for Metropolis design environment. Since the careful implementation of parallelism, the portability and scalability are maximized. ...|$|R
