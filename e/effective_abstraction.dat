36|50|Public
5000|$|Provides {{a simple}} and <b>effective</b> <b>abstraction</b> layer on top of Lucene ...|$|E
5000|$|However, {{the test}} for {{practical}} relevance of PRAM (or RAM) algorithms depends on whether their cost model provides an <b>effective</b> <b>abstraction</b> of some computer; the structure of that computer can be quite different than the abstract model. The knowledge of the layers of software and hardware {{that need to be}} inserted {{is beyond the scope of}} this article. But, articles such as [...] demonstrate how a PRAM-like abstraction can be supported by the explicit multi-threading (XMT) paradigm and articles such as [...] demonstrate that a PRAM algorithm for the maximum flow problem can provide strong speedups relative to the fastest serial program for the same problem.|$|E
40|$|Abstract. Digital linear {{filters are}} used {{in a variety of}} {{applications}} (sound treatment, control/command, etc.), implemented in software, in hardware, or a combination thereof. For safety-critical applications, it is necessary to bound all variables and outputs of all filters. We give a compositional, <b>effective</b> <b>abstraction</b> for digital linear filters expressed as block diagrams, yielding sound, precise bounds for fixedpoint or floating-point implementations of the filters. ...|$|E
40|$|Whether {{explicit}} or implicit, {{sets are}} {{a critical part}} of many pieces of software. As a result, it is necessary to develop abstractions of sets for the purposes of abstract interpretation, model checking, and deductive verification. However, the construction of <b>effective</b> <b>abstractions</b> for sets is challenging because they are a higher-order construct. It is necessary to reason about contents of sets as well as relationships between sets. This paper presents a new abstraction for sets that is based on binary decision diagrams. It is optimized for precisely and efficiently representing relations between sets while still providing limited support for content reasoning...|$|R
40|$|In {{deterministic}} OSP, {{the objective}} is to achieve an as valu-able as possible subset of goals within a fixed allowance of the total action cost. Although numerous applications in var-ious fields share this objective, no substantial algorithmic ad-vances have been made beyond the very special settings of net-benefit optimization. Tracing the key sources of progress in classical planning, we identify a severe lack of domain-independent approximations for OSP, and start with inves-tigating the prospects of abstraction approximations for this problem. In particular, we define the notion of additive ab-stractions for OSP, study the complexity of deriving <b>effective</b> <b>abstractions</b> from a rich space of hypotheses, and reveal some substantial, empirically relevant islands of tractability...|$|R
40|$|Self-organization in multi agent systems {{requires}} {{two main}} building blocks: adaptive and uncoupled interaction mechanisms and context-awareness. Here we {{show how the}} middleware TOTA (Tuples On The Air) supports self-organization by providing <b>effective</b> <b>abstractions</b> for the above two building-blocks. TOTA relies on spatially distributed tuples for both supporting adaptive and uncoupled interactions between agents, and context-awareness. Agents can inject these tuples in the network, to make available some kind of contextual information and to interact with other agents. Tuples are propagated by the middleware, {{on the basis of}} application specific patterns, defining sorts of computational fields, and their intended shape is maintained despite network dynamics, such as topological reconfigurations. Agents can locally sense these fields and rely on them for both acquiring contextual information and carrying on distributed self-organizing coordination activities. Several application examples in different scenarios show the effectiveness of our approach...|$|R
40|$|Group {{communication}} {{has been}} proved as an <b>effective</b> <b>abstraction</b> for constructing reliable distributed applications [5]. Traditional group communication systems [4, 5, 6, 7, 8] are based on static processes. However, static processes {{are no longer the}} unique way of structuring distributed applications. Currently, some form of migrating process, i. e., a process that can change its location in the environment during its execution, is being frequently proposed as a basic component for designing distributed applications. Similarl...|$|E
40|$|This paper {{introduces}} a skeletal representation, called Point Cloud Graph, that generalizes {{the definition of}} the Reeb graph to arbitrary point clouds sampled from m-dimensional manifolds embedded in the d-dimensional space. The proposed algorithm is easy to implement and the graph representation yields to an <b>effective</b> <b>abstraction</b> of the data. Finally, we present experimental results on point-sampled surfaces and volumetric data that show the robustness of the Point Cloud Graph to non-uniform point distributions and its usefulness for shape comparison...|$|E
40|$|Abstract. Distributed {{applications}} {{are hard to}} understand, build, and evolve. The need for decoupling, flexibility, and heterogeneity in distributed collaboration tools present particular problems; for such applications, having the right abstractions and primitives for distributed communication becomes even more important. We present Distributed Knight, an extension to the Knight tool, for distributed, collaborative, and gesture-based object-oriented modelling. Distributed Knight was built using the type-based publish/subscribe paradigm. Based on this case, we argue that type-based publish/subscribe provides a natural and <b>effective</b> <b>abstraction</b> for developing distributed collaboration tools. ...|$|E
40|$|International {{audience}} In recent years, the {{verification of}} timed systems has been subject of strong development, {{both in terms}} of its theoretical foundation as its applications. Its purpose is to check the properties of validity and dependability in a formal and exhaustive way. In particular, model checking allows the verification of properties by browsing all possible states of the system model. However, this method has often combinatorial explosion problem, which can be even worse in the case of concurrent systems. In this paper, we presents some <b>effective</b> <b>abstractions,</b> used for modeling this kind of systems, implemented through a case study with the tool UPPAAL, in which we consider the so-called SOLUJET (System of solutions conditioning) platform from Ravoux automatism, a framework where time aspects are combined with concurrent programming. Our proposed models for SOLUJET are networks of timed automata, designed to specify the concurrency of tasks execution, for which we give a comparison, in terms of time execution and states space, between the proposed abstractions to model concurrency. </p...|$|R
40|$|Peak {{performance}} {{is hard to}} achieve on cache-coherent multi-core architectures and requires substantial programming and tuning efforts. Performance portability is even harder. Performance is (often) not about Flops, it is about data movement. Coarse Grain Concurrency is nearly exhausted. Programming systems should be designed to support fast data movement and enforce locality. They should be efficient at fine grain. Non-blocking algorithms coupled with concurrent data structures can be fast but are complex to be exploited. They can be hardly composed and should be abstracted out. High-level approaches {{should be used to}} provide <b>effective</b> <b>abstractions.</b> A computer language is not a computing model. A library is not a computing model. A litmus paper: system programmers use the techniques they advocate? THE APPROACH ⋄ Dijkstra’s structured programming approach (“go-to statement considered harmful”) ◦ Are send/receive, lock/unlock and CAS harmless than go-to? ⋄ Manage communications and synchronisations by way of high-level constructs ◦ Skeletons & Patterns [Col 89]. Exploited in several frameworks, inter alia: Intel TBB, Fastflow [ADKT 12], Google’s MapReduce. ◦ Patterns typically used to discipline true dependencies and process-to-CPUs mapping. ⋄ Message-passing/shared-memory is not a dichotomy. They can be coupled in a richer programming model, e. g. messages for synchronizations and shared-memory for data exchanges. FASTFLOW: THE BIG PICTURE...|$|R
40|$|While in {{classical}} planning {{the objective is}} to achieve one of the equally attractive goal states at as low total action cost as possible, the objective in deterministic oversubscription planning (OSP) is to achieve an as valuable as possible subset of goals within a fixed allowance of the total action cost. Although numerous applications in various fields share the latter objective, no substantial algorithmic advances have been made in deterministic OSP. Tracing the key sources of progress {{in classical}} planning, we identify a severe lack of effective domain-independent approximations for OSP. With our focus here on optimal planning, our goal is to bridge this gap. Two classes of approximation techniques have been found especially useful in the context of optimal classical planning: those based on state-space abstractions and those based on logical land-marks for goal reachability. The question we study here is whether some similar-in-spirit, yet possibly mathematically different, approximation techniques can be developed for OSP. In the context of abstractions, we define the notion of additive abstractions for OSP, study the complexity of deriving <b>effective</b> <b>abstractions</b> from a rich space of hypotheses, and reveal some substantial, empirically relevant islands of tractability. In the context of landmarks, we show how standard goal-reachability landmarks of certain classical planning tasks can be compiled into the OSP task of interest, resulting in an equivalent OSP task with a lower cost allowance, and thus with a smaller search space. Our empirical evaluation confirms the effectiveness of the proposed techniques, and opens a wide gate for further developments in oversubscription planning. 1...|$|R
40|$|We {{present an}} {{abstraction}} refinement algorithm for model checking of safety properties that relies exclusively on a SAT solver for checking the abstract model, testing abstract counterexamples {{on the concrete}} model, and refinement. Model checking of the abstractions is based on bounded model checking extended with checks {{for the existence of}} simple paths that help in deciding passing properties. All minimum-length spurious counterexamples are eliminated in one refinement step by a procedure that combines the analysis of the conflict dependency graph produced by the SAT solver while looking for concrete counterexamples with an <b>effective</b> <b>abstraction</b> minimization procedure. ...|$|E
40|$|In visual {{imaging and}} {{processing}} research area unstructured arbitrary natural scene observation and understanding is a problem. Environmental perception and object recognition {{is an important}} part of the image processing. Research approach in image processing needs to proper <b>effective</b> <b>abstraction</b> low level features, so that primitive layer integration with output of preprocess always a simultaneous phenomena for content based CBIR system. Texture, color, and shape always a considerable points for extract but need a proper algorithm and model as per image database complexity increase. Paper work approach based to proposed algorithmic model for efficient and effective retrieval...|$|E
40|$|The {{continued}} growth and widespread deployment of gigabit networks and high-speed network protocols will provide significant communications bandwidth between increasingly powerful computers, enabling systems containing billions {{of objects and}} millions of machines. Harnessing {{the power of this}} vast array of raw hardware requires well-organized complex software, highly scalable algorithms and services, and <b>effective</b> <b>abstraction</b> of complexity. Wide area distributed object computing systems, which model the system's components [...] applications, hardware, programs, users, etc. [...] as objects, are capable of meeting this challenge. This dissertation contributes to an important aspect of wide-area distributed object computing research; it provides a model and a mechanism for dynamic software evolution and re-use...|$|E
40|$|Hierarchical {{reinforcement}} learning facilitates faster learning by structuring the policy space, encouraging reuse of subtasks in different contexts, and enabling more <b>effective</b> state <b>abstraction.</b> In this paper, we explore {{another source of}} power of hierarchies, namely facilitating sharing of subtask value functions across multiple agents. We show that, when combined with suitable coordination information, this approach can significantly speed up learning {{and make it more}} scalable with the number of agents. We introduce the multi-agent shared hierarchy (MASH) framework, which generalizes the MAXQ framework and allows selectively sharing subtask value functions across agents. We develop a modelbased average-reward {{reinforcement learning}} algorithm for the MASH framework and show its effectiveness with empirical results in a multiagent taxi domain. 1...|$|R
40|$|The {{tutorial}} presents state-of-the-art visualization techniques {{inspired by}} traditional technical and medical illustrations. Such techniques exploit {{the perception of}} the human visual system and provide <b>effective</b> visual <b>abstractions</b> to make the visualization clearly understandable. Visual emphasis and abstraction has been used for expressive presentation from prehistoric paintings to nowadays scientific and medical illustrations. Many of the expressive techniques used in art are adopted in computer graphics, and are denoted as illustrative or non-photorealistic rendering. Different stroke techniques, or brush properties express a particular level of abstraction. Feature emphasis or feature suppression is achieved by combining different abstraction levels in illustrative rendering. Challenges in visualization research are very large data visualization as well as multi-dimensional data visualization. To effectivel...|$|R
40|$|Abstract—Agent-Oriented Programming (AOP) {{provides}} an <b>effective</b> level of <b>abstraction</b> for tackling the programming of mainstream software applications, in particular those that involve complexities related to concurrency, asynchronous events management and context-sensitive behaviour. In this paper we support this claim in practice by discussing {{the application of}} AOP technologies – Jason and CArtAgO in particular – {{for the development of}} smart nomadic applications based on the Google Android platform. I...|$|R
40|$|Abstract Detecting {{whether a}} finite {{execution}} trace (or a computation) of a distributed program satisfies a given predicate, calledpredicate detection, {{is a fundamental}} problem in distributed systems. It finds applications in many domains such as testing, debugging, and monitoring of distributed programs. However predicate detection suffers from the state explosion problem-the number of possible global states of the program increases exponentially {{with the number of}} processes. To solve this problem, we generalize an <b>effective</b> <b>abstraction</b> technique called computation slicing. We present polynomial-time algorithms to compute slices with respect to temporal logic predicates from a &quot;regular &quot; subset of CTL, that contains temporal operators EF, EG, and AG. Furthermore, we show that these slices contain precisely those global states of theoriginal computation that satisfy the predicate...|$|E
40|$|Abstract. Predicate {{detection}} is {{an important}} problem in distributed systems. Predicate detection suffers from state explosion since the number of possible global states is exponential {{in the number of}} processes. Computation slicing {{is an important}} abstraction technique used to solve the predicate detection problem. The key observation in this paper is that an equivalence relation on the global state lattices for the distributed program can be translated to a corresponding equivalence relation on the respective posets. Thus detecting a predicate on a smaller poset is enough {{to make sure that it}} is satisfied by a larger equivalent poset. This reduces the complexity of using the slicing based approach as the size of the poset is smaller. We show the use of stuttering bisimulation as an <b>effective</b> <b>abstraction</b> technique for reasoning about conjunctive predicates. ...|$|E
40|$|AbstractContext-aware {{computing}} {{refers to}} a paradigm in which applications sense aspects {{of the environment and}} use this information to adjust their behavior in response to changing circumstances. In this paper, we present a formal model and notation (Context UNITY) for expressing quintessential aspects of context-aware computations; existential quantification, for instance, proves to be highly effective in capturing the notion of discovery in open systems. Furthermore, Context UNITY treats context {{in a manner that is}} relative to the specific needs of an individual application and promotes an approach to context maintenance that is transparent to the application. In this paper, we construct the model from first principles, introduce its proof logic, and demonstrate how the model can be used as an <b>effective</b> <b>abstraction</b> tool for context-aware applications and middleware...|$|E
40|$|Abstract. The {{purpose of}} data {{visualization}} {{is to offer}} intuitive ways for information perception and manipulation, especially for non-expert users. The Web of Data has realized {{the availability of a}} huge amount of datasets. However, the volume and heterogeneity of available infor-mation make it difficult for humans to manually explore and analyse large datasets. In this paper, we present rdf:SynopsViz, a tool for hier-archical charting and visual exploration of Linked Open Data (LOD). Hierarchical LOD exploration is based on the creation of multiple levels of hierarchically related groups of resources based on the values of one or more properties. The adopted hierarchical model provides <b>effective</b> infor-mation <b>abstraction</b> and summarization. Also, it allows efficient-on the fly- statistic computations, using aggregations over the hierarchy levels...|$|R
40|$|Just like Remote Procedure Call (RPC) {{turned out}} to be a very <b>effective</b> OS <b>abstraction</b> in {{building}} client-server applications over LANs, Type-based Publish-Subscribe (TPS) can be viewed as a high-level candidate abstraction for building Peer-to-Peer (P 2 P) applications over WANs. This paper relates our preliminary, though positive, experience of implementing and using TPS over JXTA, which can be viewed as the P 2 P counterpart to sockets. We show that, at least for P 2 P applications with the Java type model, TPS provides a high-level programming support that ensures type safety and encapsulation, without hampering the decoupled nature of these applications. Furthermore, the loss of flexibility (inherent to the use of any high level abstraction) and the performance overhead, are negligible with respect to the simplicity gained by using TPS. 1...|$|R
40|$|Illustrative {{visualization}} is a {{term for}} visualization techniques inspired by traditional technical and medical illustration. These techniques are based on knowledge of the human perception and provide <b>effective</b> visual <b>abstraction</b> to make the visualizations more understandable. Within volume rendering these expressive visualizations can be achieved using non-photorealistic rendering that combines different levels of abstraction to convey the most important information to the viewer. In this thesis I will look at illustrative techniques and show how these {{can be used to}} visualize anatomical structures in a medical volume data. The result of the thesis is a prototype of an anatomy education application, that makes use of illustrative techniques to have a focus+context visualization with feature enhancement, tone shading and labels describing the anatomical structures. This results in an expressive visualization and interactive exploration of the human anatomy...|$|R
40|$|Context-aware {{computing}} {{refers to}} a paradigm in which applications sense aspects {{of the environment and}} use this information to adjust their behavior in response to changing circumstances. In this paper, we present a formal model and notation (Context UNITY) for expressing quintessential aspects of context-aware computations; existential quantification, for instance, proves to be highly effective in capturing the notion of discovery in open systems. Furthermore, Context UNITY treats context {{in a manner that is}} relative to the specific needs of an individual application and promotes an approach to context maintenance that is transparent to the application. In this paper, we construct the model from first principles, introduce its proof logic, and demonstrate how the model can be used as an <b>effective</b> <b>abstraction</b> tool for context-aware applications and middleware. Key words: context-aware computing, UNITY, adaptive systems, formal method...|$|E
40|$|This paper {{presents}} a concurrent FIFO queue. The queue {{is designed to}} support high, scalable performance through both partitioning its representation, {{and the removal of}} locks. A proof of the consistency properties of the queue operations is developed, based on the Linearizability consistency condition. Linearizability is of interest because of its compositional properties, providing a strong foundation for the construction of reliable concurrent systems. The FIFO queue is proven to be linearizable with high probability and is therefore termed ffl-linearizable. This suprising result demonstrates the importance of verification in the implementation of reliable abstractions. The scalable throughput performance of the queue is demonstrated through a simulation study. 1 Introduction Development in parallel and distributed computing has been hindered by the lack of an <b>effective</b> <b>abstraction</b> model, encapsulating communication and synchronisation. Recently, the problem of abstraction mechanis [...] ...|$|E
40|$|This paper {{explores the}} design space of simple legged robots capable of leaping {{culminating}} in new behaviors for the Penn Jerboa, an underactuated, dynamically dexterous robot. Using {{a combination of}} formal reasoning and physical intuition, we analyze and test successively more capable leaping behaviors through successively more complicated body mechanics. The final version of this machine studied here bounds up a ledge 1. 5 times its hip height and crosses a gap 2 times its body length, exceeding in this last regard the mark set by the far more mature RHex hexapod. Theoretical contributions include a non-existence proof of a useful class of leaps for a stripped-down initial version of the new machine, setting in motion the sequence of improvements leading to the final resulting performance. Conceptual contributions include a growing understanding of the Ground Reaction Complex as an <b>effective</b> <b>abstraction</b> for classifying and generating transitional contact behaviors in robotics...|$|E
40|$|As {{cooperative}} multiagent systems (MASs) {{increase in}} interconnectivity, complexity, size, and longevity, coordinating the agents' reasoning and behaviors becomes increasingly difficult. One approach {{to address these}} issues is to use insights from human organizations to design structures within which the agents can more efficiently reason and interact. Generally speaking, an organization influences each agent such that, by following its respective influences, an agent can make globally-useful local decisions without having to explicitly reason about the complete joint coordination problem. For example, an organizational influence might constrain and/or inform which actions an agent performs. If these influences are well-constructed to be cohesive and correlated across the agents, then each agent is influenced into reasoning about and performing only the actions that are appropriate for its (organizationally-designated) portion of the joint coordination problem. In this dissertation, I develop an agent-driven approach to organizations, wherein the foundation for representing and reasoning about an organization stems from the needs of the agents in the MAS. I create an organizational specification language to express the possible ways in which an organization could influence the agents' decision making processes, and leverage details from those decision processes to establish quantitative, principled metrics for organizational performance based on the expected impact that an organization will have on the agents' reasoning and behaviors. Building upon my agent-driven organizational representations, I identify a strategy for automating the organizational design process~(ODP), wherein my ODP computes a quantitative description of organizational patterns and then searches through those possible patterns to identify an (approximately) optimal set of organizational influences for the MAS. Evaluating my ODP reveals that it can create organizations that both influence the MAS into effective patterns of joint policies and also streamline the agents' decision making in a coordinate manner. Finally, I use my agent-driven approach to identify characteristics of <b>effective</b> <b>abstractions</b> over organizational influences and a heuristic strategy for converging on a good abstraction...|$|R
40|$|The {{need for}} {{trustworthy}} system operation has been acknowledged in many circles. However, establishing that {{a system is}} trustworthy is a significant challenge. While trusted computing proposes technical mechanisms towards this end, less attention is directed towards providing a basis for trusting such systems. Consequently, it is not clear: (i) how such mechanisms influence the overall trust in a system; (ii) the properties and assumptions upon which trust is based; and (iii) the evidence necessary to reason about these properties. This {{can be attributed to}} a number of factors including: (i) the complexity of modern systems; (ii) a lack of consensus on a definition of trust; and (iii) a lack of a systematic approach for identifying and using evidence to reason about trust-related properties. This dissertation presents research towards addressing these challenges. We argue that an architectural approach provides <b>effective</b> <b>abstractions</b> for making trust properties and assumptions explicit and reasoning about a system's ability to satisfy these properties. We propose a framework for identifying, categorising and mapping trust-properties to aspects of a system {{that could be used to}} reason about these properties. Guided by this framework, we propose and develop models for representing knowledge about a particular aspect and using it to reason about trust-properties. A semantic model, based on the semantics of Z, is developed to characterise building blocks of trustworthy systems and to demonstrate how the system's constituents determine its trustworthiness. An abstraction model based on formal verification is developed to reason about the impact of the system's construction and configuration on its trustworthiness. Finally, two complementary models for capturing the runtime aspects of the system are developed. A trace-based model enables analysis of runtime evidence in the form of event logs and a provenance-based model captures operations on the system as a provenance graph. The models are validated on a trusted grid architecture, a password manager and a trustworthy collaborative system. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Distributed {{collaboration}} {{is becoming increasingly}} important also in software development. Combined with an increasing interest in experimental and agile approaches to software development, this poses challenges to tool support for software development. Specifically, tool support is needed for flexible, distributed collaboration. We introduce the Distributed Knight tool that provides flexible and lightweight support for distributed collaboration in objectoriented modelling. The Distributed Knight implementation builds crucially on the type-based publish/subscribe distributed communication paradigm, which provides an <b>effective</b> and natural <b>abstraction</b> for developing distributed collaboration tools. KEY WORDS Tool support for object-oriented modelling, distributed collaboration, publish/subscribe...|$|R
40|$|This paper {{presents}} an internal information security services framework for vehicular environments. The framework {{consists of a}} logical toolbox — a set of logical modules that are installed {{in a variety of}} embodiments (e. g., controllers) and which provide security functionality that vehicular applications require. The framework also includes several enablers, which are higher-level security functions that are integrated into vehicular applications. These enablers use the aforementioned tools to provide for many typical use-cases, such as secure logging, secure code update, and secure feature activation. The purpose of the toolbox is to provide some of the common security functions at the highest <b>effective</b> <b>abstraction</b> level, and to implement these functions securely in well suited embodiments. This detachment of security functions from the applications that use them shall allow developers to develop secure applications without requiring extensive security know-how, as well as to reduce the attack surface of their applications...|$|E
40|$|This article {{addresses}} {{reinforcement learning}} problems based on factored Markov decision processes (MDPs) {{in which the}} agent must choose among a set of candidate abstractions, each build up from a different combination of state components. We present and evaluate a new approach that can perform <b>effective</b> <b>abstraction</b> selection that is more resource-efficient and/or more general than existing approaches. The core of the approach is to make selection of an abstraction part of the learning agent’s decision-making process by augmenting the agent’s action space with internal actions that select the abstraction it uses. We prove that under certain conditions this approach results in a derived MDP whose solution yields both the optimal abstraction for the original MDP and the optimal policy under that abstraction. We examine our approach in three domains of increasing complexity: contextual bandit problems, episodic MDPs, and general MDPs with context-specific structure...|$|E
40|$|Software {{architecture}} {{has been}} widely advocated as an <b>effective</b> <b>abstraction</b> for modeling, implementing, and evolving complex software systems {{such as those in}} distributed, decentralized, heterogeneous, mobile, and pervasive environments. Typically, however, architectural abstractions have not been supported directly at the level of system implementation. Instead, even developers with access to state-of-the-art middleware facilities have had to rely on constructs that are at least in part different from those used in the design of their systems. In this paper we argue {{that it is possible to}} provide native and flexible software architectural facilities in a middleware platform geared to pervasive environments. We refer to such a platform as "architectural middleware". In support of our argument, we outline the design, implementation, and our experience with a specific architectural middleware platform, which has been used in solving pervasive computing problems in the classroom as well as two industrial domains. We also demonstrate that middleware-level architectural support can be effective, efficient, scalable, and adaptable...|$|E
40|$|Providing {{bandwidth}} {{guarantees to}} specific applications is be-coming increasingly important as applications compete for shared cloud network resources. We present CloudMirror, {{a solution that}} provides bandwidth guarantees to cloud applications based on a new network abstraction and workload placement algorithm. An <b>effective</b> network <b>abstraction</b> would enable applications to easily and accurately specify their requirements, while simultaneously enabling the infrastructure to provision resources efficiently for deployed applications. Prior research has approached the bandwidth guarantee specification by using abstractions that resemble physical network topologies. We present a contrasting approach of deriving a network abstraction based on application communication structure, called Tenant Application Graph or TAG. CloudMirror also incorporates a new workload place-ment algorithm that efficiently meets bandwidth requirements specified by TAGs while factoring in high availability consider-ations. Extensive simulations using real application traces and datacenter topologies show that CloudMirror can handle 40 % more bandwidth demand than {{the state of the}} art (e. g., the Ok-topus system), while improving high availability from 20 % to 70 %...|$|R
40|$|As sensor {{networks}} become denser {{and more}} widely deployed, the potential develops for interconnecting these networks to combine datasets, share technological solutions, and to conduct cross-disciplinary research and monitoring operations {{that rely on}} several signal domains simultaneously. To that end, the Real-Time Observatories, Applications and Data Management Network (ROADNet) research project is connecting multiple sensor networks deployed by collaborating research projects into a single network {{in order to support}} a variety of research topics including coastal ocean observing, microclimatology and seismology. This paper gives a brief overview of the ROADNet project and discusses some of the implementation challenges we uncovered while building and maintaining the ROADNet system. We encountered challenges on several fronts including building <b>effective</b> programming <b>abstractions</b> for sensor networks, building tools for managing large-scale data in a scalable manner, and building ef�cient tools for deploying and managing hundreds of sensors. We discuss how these challenges were addressed and some of the lessons learned from collaborations with domain scientists using our network to conduct their research...|$|R
40|$|The {{development}} of multimedia applications is {{a branch of}} software {{development of}} increasing importance. Many advanced user interfaces integrate multimedia elements, and critical multimedia systems are emerging, e. g. in training and simulation areas. Multimedia user interfaces pose {{a number of new}} challenges to the software development process and technologies. Unfortunately, software engineering principles are mostly ignored in current practice of multimedia application development. This paper suggests a way of how the gap between multimedia applications and software engineering can be made smaller. A modeling language is presented which is based on UML 2. 0, but is tailored for <b>effective,</b> platform-independent <b>abstractions</b> from concrete multimedia technologies. Using such a modeling language, we show it is possible to apply the paradigm of Model-Driven Development to multimedia applications, leading to better structured and more maintainable applications, and a much higher degree of independence from multimedia platform technologies. The language is described using a medium-sized case study, and concepts for prototypical tools supporting model-driven development of multimedia applications are outlined...|$|R
