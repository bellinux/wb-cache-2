345|400|Public
2500|$|While {{operating}} within the <b>database</b> <b>environment,</b> XLeratorDB functions utilize the same naming conventions and input formats, {{and in most}} cases, return the same calculation results as Excel functions. XLeratorDB, coupled with SQL Server's native capabilities, compares to Excel's function sets as follows: ...|$|E
2500|$|Java 1.4 {{and higher}} support both 32-bit and 64-bit {{operation}} on z9. The System z9 also supports the zAAP processor, which allows {{most of the}} Java workload to be offloaded from the normal instruction processors. Java workloads executed by the zAAP processor do not count towards the IBM-rated capacity of the z9. [...] This reduces the z9's {{total cost of ownership}} compared with other IBM platforms, as otherwise IBM would raise a customer's (software) license fees after installing an additional (hardware) processor. [...] The zAAP also enables integration of new Java based Web applications with core z/OS backend <b>database</b> <b>environment</b> for high performance, reliability, availability, and security.|$|E
5000|$|Modernizing the {{connections}} into the FAME <b>database</b> <b>environment</b> for better integration with other software ...|$|E
40|$|In this paper, we {{introduce}} Quasi Serializability, a correctness {{criterion for}} concurrency control in hetero-geneous distributed <b>database</b> <b>environments.</b> A global history is quasi serializable {{if it is}} (conflict) equiva-lent to a quasi serial history in which global transac-tions are submitted serially. Quasi serializability the-ory {{is an extension of}} serializability. We study the relationships between serializability and quasi serializ-ability and the reasons quasi serializability {{can be used as a}} correctness criterion in heterogeneous distributed <b>database</b> <b>environments.</b> We also use quasi serializabil-ity theory to give a correctness proof for an altruistic locking algorithm...|$|R
5000|$|Vector data is more {{compatible}} with relational <b>database</b> <b>environments,</b> {{where they can}} be part of a relational table as a normal column and processed using a multitude of operators.|$|R
50|$|In many <b>database</b> <b>environments</b> {{the column}} names are {{controlled}} by an outside vendor, not the query developer. A natural join assumes stability and consistency in column names which can change during vendor mandated version upgrades.|$|R
5000|$|Physical Design is {{the phase}} where the {{database}} is designed. It involves the <b>database</b> <b>environment</b> {{as well as}} security.|$|E
50|$|ScaleBase is a {{database}} software company located in Newton, Massachusetts, {{that works with}} next-gen apps to scale out relational databases by virtualizing (auto-sharding) a distributed <b>database</b> <b>environment.</b>|$|E
50|$|MySIPSwitch has a user {{discussion}} forum allowing developers {{to improve it}} according to the feedback from users.The development language is C#, the <b>database</b> <b>environment</b> is PostgreSQL and the interface is a website.|$|E
50|$|Oracle Advanced Security, an extra-cost {{option for}} Oracle <b>{{database}}</b> <b>environments,</b> extends Oracle Net Services {{in the field}} of database computing to provide network security, enterprise-user security, public-key infrastructure securityand data encryption to users of Oracle databases.|$|R
5000|$|It {{includes}} artifacts {{produced during}} the test process required to plan, design, and execute tests, such as documentation, scripts, inputs, expected results, set-up and clear-up procedures, files, <b>databases,</b> <b>environment,</b> and any additional software or utilities used in testing.|$|R
40|$|Real-time {{database}} {{systems are}} designed to handle workloads where transactions have completion deadlines and {{the goal is to}} meet these deadlines. However, many real-time <b>database</b> <b>environments</b> are characterized by workloads that are a mix of real-time and standard (non-real-time) transactions. Unfortunately...|$|R
50|$|UddeIM is an {{open source}} PMS (Private Messaging System) {{component}} for the Mambo or Joomla! content management systems (CMS). UddeIM is written in PHP and requires the MySQL <b>database</b> <b>environment</b> for storage.|$|E
50|$|Oracle Multimedia (formerly Oracle interMedia from {{versions}} 8 to 10gR2) is {{a feature}} available for Oracle databases, which provides multimedia utilities in a <b>database</b> <b>environment,</b> generating {{as a result}} a multimedia database (MMDB).|$|E
50|$|Roockbuilder is an {{open source}} {{solution}} developed as a content construction kit(CCK) on Drag and drop platform for the Joomla! 2.5 - 3.x Content Management System (CMS). Roockbuilder is written in PHP, JavaScript and requires the MySQL <b>database</b> <b>environment</b> for storage.|$|E
40|$|ABSTRACT – We study schema {{integration}} {{problems for}} consolidating historical information from nested relational databases in heterogeneous <b>databases</b> <b>environment.</b> These nested relations are for supporting complex objects. In heterogeneous databases systems, probabilistic partial values {{have been used}} to resolve some schema integration problems. In this paper, we extend the concept of probabilistic partial values in database relations to the nested historical relations in heterogeneous <b>databases</b> <b>environment.</b> Our study combines the research in nested relational databases, temporal databases, and corporate data warehousing for database applications. We develop a full set of temporal relational operators over nested historical relational data model. Key words: Information integration, schema integration problems, nested relational databases, temporal databases I...|$|R
40|$|In mobile <b>database</b> <b>environments,</b> {{multiple}} users may access similar {{data items}} irrespective {{of their physical}} location leading to concurrent access anomalies. As disconnections and mobility are the common characteristics in mobile environment, performing concurrent access to a particular data item leads to inconsistency. Most of the approaches use locking mechanisms to achieve concurrency control. However this leads to increase in blocking and abort rate. In this paper an optimistic concurrency control strategy using on-demand multicasting is proposed for mobile <b>database</b> <b>environments</b> which guarantees consistency and introduces application-specific conflict detection and resolution strategies. The simulation results specify increase in system throughput by reducing the transaction abort rates {{as compared to the}} other optimistic strategies proposed in literature. Comment: 14 Pages, IJWM...|$|R
5000|$|Database tuning {{describes}} {{a group of}} activities used to optimize and homogenize {{the performance of a}} database. It usually overlaps with query tuning, but refers to design of the database files, selection of the database management system (DBMS) application, and configuration of the <b>database's</b> <b>environment</b> (operating system, CPU, etc.).|$|R
5000|$|While {{operating}} within the <b>database</b> <b>environment,</b> XLeratorDB functions utilize the same naming conventions and input formats, {{and in most}} cases, return the same calculation results as Excel functions. XLeratorDB, coupled with SQL Server's native capabilities, compares to Excel's function sets as follows: ...|$|E
5000|$|A {{transaction}} symbolizes {{a unit of}} {{work performed}} within a database management system (or similar system) against a database, and treated in a coherent and reliable way independent of other transactions. A transaction generally represents any change in a database. Transactions in a <b>database</b> <b>environment</b> have two main purposes: ...|$|E
50|$|VirtueMart (formerly {{known as}} mambo-phpShop) {{is an open}} source {{e-commerce}} solution designed {{as an extension of}} the Mambo or Joomla! content management systems (CMS). VirtueMart is written in PHP and requires the MySQL <b>database</b> <b>environment</b> for storage. It is best suited for low to medium level traffic web-sites.|$|E
5000|$|Baze is a <b>database</b> {{development}} <b>environment</b> {{similar to}} Access and Base.|$|R
50|$|In {{database}} computing, Oracle Real Application Clusters (RAC) — {{an option}} for the Oracle Database software produced by Oracle Corporation and introduced in 2001 with Oracle9i — provides software for clustering and high availability in Oracle <b>database</b> <b>environments.</b> Oracle Corporation includes RAC with the Standard Edition, provided the nodes are clustered using Oracle Clusterware.|$|R
40|$|What kind of {{metadata}} can be {{used for}} expressing the multiplicity of data models and the data transformation and integration processes in data warehousing environments? How can this metadata be further used for supporting other data warehouse activities? We examine how these questions are addressed by AutoMed, a system for expressing data transformation and integration processes in heterogeneous <b>database</b> <b>environments...</b>|$|R
50|$|Oracle Discoverer is a tool-set for ad hoc querying, reporting, data analysis, and Web-publishing for the Oracle <b>Database</b> <b>environment.</b> Oracle Corporation markets it as a {{business}} intelligence product. It was originally a stand-alone product, however {{it has become a}} component of the Oracle Fusion Middleware suite, and renamed Oracle Business Intelligence Discoverer.|$|E
50|$|In {{conjunction}} with a sound database security program, an appropriate disaster recovery program can ensure that service is not interrupted during a security incident, or any incident that results in an outage of the primary <b>database</b> <b>environment.</b> An example is that of replication for the primary databases to sites located in different geographical regions.|$|E
50|$|The company's TigerLogic Dashboard {{product is}} a {{development}} tool to produce graphical reports of real-time business intelligence via dashboard widgets. The TigerLogic Dashboard enables developers of the D3 multidimensional {{database management system}} to select and present critical business data, that's distributed throughout the <b>database</b> <b>environment,</b> to be presented in intuitive and Web-based graphical interfaces.|$|E
40|$|Partitioning by {{clustering}} of {{very large}} databases {{is a necessity}} to reduce the spaze/time complexity of retrieval operations. How-ever, the contemporary and modern retrieval environments demand dynamic maintenance of clusters. A new cluster mainte-nance strategy is proposed and its similarity/stability characteris-tics, cost analysis, and retrieval behavior in comparison with unclustered and completely reclustered <b>database</b> <b>environments</b> have been examined {{by means of a}} series of experiments. I...|$|R
40|$|Abstract. In the {{commonly}} adopted data models (as ins entity-relationship data model 111, for example) an attribute is a mapping between an en-tity set or a relationship set and a value set. The intension of a mapping property is given im-plicitly or explicitly {{in the data}} models, but the extension can be generally represented by the set I), as in the relational model. We propose an alternative data model for statisti cal databases, in which an attribute is represen-ted by its analytic properties (the distribution function {{of the values of}} the attribute). These analytic properties are described by a set of pa-rameters,which we call the canonica 2 coefficients of the attribute. The canonical coefficients can be used to solve the usual statistical queries with no access to the data. In particular, we pre sent: 1) the methods for computing and updating the canonical coefficients, 2) the use of the ca-nonical coefficients for solving the main statis-tical queries, also in distributed statistical <b>database</b> <b>environments.</b> Besides, an application of such parameters to the query decomposition in distributed <b>database</b> <b>environments</b> is discussed...|$|R
40|$|Abstract. With the {{development}} of computer’s hardware, main memory becomes bigger and bigger and can hold more data, so some operation before need disk I/O, now can be completed in main memory. In OLAP what-if or hypothetical analysis may need modify data or alter structure of cube, it should recalculate cube and is a long process. This paper presents how to do What-if analysis in main memory <b>database</b> <b>environments</b> and the experience shows that main memory OLAP is obvious superior to disk OLAP...|$|R
50|$|The Remote Diagnostic Agent or RDA {{can operate}} as a {{command-line}} diagnostic tool executing a script. The data captured {{provides an overview of}} the Oracle <b>Database</b> <b>environment</b> intended for diagnostic and trouble-shooting. Within RDA, the HCVE (Health Check Validation Engine) can verify and isolate host system environmental issues that may affect the performance of Oracle software.|$|E
50|$|Oracle Data Mining (ODM) is {{an option}} of Oracle Corporation's Relational Database Management System (RDBMS) Enterprise Edition (EE). It {{contains}} several data mining and data analysis algorithms for classification, prediction, regression, associations, feature selection, anomaly detection, feature extraction, and specialized analytics. It provides means for the creation, management and operational deployment of data mining models inside the <b>database</b> <b>environment.</b>|$|E
5000|$|The Oracle Database OLAP Option {{implements}} [...] On-line Analytical Processing (OLAP) {{within an}} Oracle <b>database</b> <b>environment.</b> Oracle Corporation markets the Oracle Database OLAP Option as an extra-cost option {{to supplement the}} [...] "Enterprise Edition" [...] of its database. (Oracle offers Essbase for customers without the Oracle Database or who require multiple data-sources to load their cubes.) ...|$|E
40|$|This unit is {{designed}} to provide you with the skills required to create, maintain and interrogate a relational database management system (RDBMS) using commercially available database software. The resultant skills will help prepare you to enter commercially operated <b>database</b> <b>environments</b> and to administer the system to the requirements of the industry. The unit is primarily aimed as an introduction to relational database management systems and will incorporate the skills to design a suitable structure to maintain and update real-world systems. ...|$|R
40|$|In this paper, we {{describe}} {{the implementation of a}} <b>database</b> design <b>environment</b> (Swift) that incorporates several novel features: Swift's data modelling approach is derived from viewpoint-oriented methods; Swift is implemented in Java, which allows us to easily construct a client/server based environment; the repository is implemented using PostgreSQL, which allows us to store the actual application code in the database; and the combination of Java and PostgreSQL reduces the impedance mismatch between the application and the repository. 1. Brief overview of viewpoints This paper discusses a <b>database</b> design <b>environment</b> called Swift, which is based on the concepts of perspectives, viewpoints, representations, techniques and schemes, as shown in Figure 1, and suggested by several authors [1 - 3]. Real-world phenomena Perspective expressed as a Viewpoint Rep'n <b>Database</b> design <b>environment</b> using multiple viewpoint representations Perspective Perspective Viewpoint Viewpoint Viewpoint [...] ...|$|R
40|$|On-line Analytical Processing (OLAP) {{has become}} one of the most {{powerful}} and prominent technologies for knowledge discovery in VLDB (Very Large <b>Database)</b> <b>environments.</b> Central to the OLAP paradigm is the data cube, a multi-dimensional hierarchy of aggregate values that provides a rich analytical model for decision support. Various sequential algorithms for the efficient generation of the data cube have appeared in the literature. However, given the size of contemporary data warehousing repositories, multi-processor solutions are crucial for the massive computational demands of current and future OLAP systems...|$|R
