7|10000|Public
50|$|To provide {{communications}} between the Emotion Engine and the Input Output Processor (IOP), the input output interface interfaces a 32-bit wide, 37.5 MHz input output bus {{with a maximum}} theoretical bandwidth of 150 MB/s to the internal data bus. The interface provides enough bandwidth for the PCMCIA extension connector which {{was used for the}} network adapter with built-in P-ATA interface for faster data access and online functionality. An advantage of the high bandwidth was that it could be easily used to introduce hardware extensions like the Network Adapter with built-in IDE HDD support or other extensions to extend functionality and product lifecycle which {{can be seen as a}} competitive advantage. In newer variants (like the slim edition), the interface would however offer vastly more bandwidth than what is required by the PlayStation's <b>input</b> <b>output</b> <b>devices</b> as the HDD support was removed and the PCMCIA connector design was abandoned in favor of a slimmer design.|$|E
50|$|In {{the field}} of Industrial Control Systems, the {{interfacing}} of various control components must provide means to coordinate the signals and commands sent between control modules. While tight coordination is desirable for discrete inputs and outputs, {{it is especially important}} in motion controls, where directing the movement of individual axis of motion must be precisely coordinated so that the motion of the entire system follows a desired path. Types of equipment requiring such coordination are, for example, metal cutting machine tools, metal forming equipment, assembly machinery, packaging machinery, robotics, printing machinery and material handling equipment. The Sercos (serial real-time communication system) interface is a globally standardized open digital interface for the communication between industrial controls, motion devices (drives) and <b>input</b> <b>output</b> <b>devices</b> (I/O). Sercos I and II are classified as standards IEC 61491 and EN 61491. Sercos III is specified in standards IEC 61800-7; IEC 61784-1, -2, -3 and IEC 61158. Sercos is designed to provide hard real-time, high performance communications between industrial motion controls and digital servo drives.|$|E
50|$|The LSI-1 was {{superseded}} by the LSI-2 which implemented the same architecture using standard TTL logic. The LSI-2 comprised a single full card with two piggyback half cards, on the lefthand side {{viewed from the}} back was the card containing the microcode in fuse link bipolar Proms, on the right the options card with the bootstrap Proms and serial interface for current loop teletype or RS. 232 device. There {{were a couple of}} speed options of processor available, the 2/10 with a 10 MHz clock and 2/20 with a 20 MHz clock. Another option was the 2/60 which used different microcode on the half card to support an enhanced instruction set used uniquely by Computer Automation’s SyFa (System For access) data processing systems. There were two types of console available, the operators console which merely had enough functionality to enable an operator to boot the system, and a programmer’s console which would enable data entry for bootstrap routines, etc. Memory options included magnetic core of between 4 and 16k and later semiconductor memory of up to 32k in a variety of formats, full card and half card. Memory banking where blocks of memory could be switched in or out to a degree bypassed the restrictions of a 16 bit address buss. The buss format for <b>input</b> <b>output</b> <b>devices</b> remained the same as Alpha 8 and Alpha 16 therefore many of the I/O devices for the earlier product could still be used. However the LSI 2 had a different dual card hard disk controller and a number of different options for half card floppy controllers. The chassis available was a five slot with internal PSU or nine slot with external PSU.|$|E
5000|$|... #Caption: The Model 33 ASR was {{ubiquitous}} as {{an inexpensive}} <b>input</b> <b>output</b> <b>device</b> in the minicomputer era.|$|R
5000|$|Wireless {{communication}} with PC <b>input</b> and <b>output</b> <b>devices,</b> {{the most common}} being the mouse, keyboard and printer.|$|R
5000|$|Visual, auditory, tactile {{and other}} sensorial <b>input</b> and <b>output</b> <b>devices</b> and methods in ICT environments (for {{devices such as}} keyboards, displays, mice, etc.) ...|$|R
40|$|AICI is VR/AR Library Toolkit for {{applications}} running in immersive environments. It provides basic functions {{to handle all}} kind of VR/AR relevant <b>input,</b> <b>output</b> <b>devices,</b> multimodal interfaces, 3 D user interface, operation handling and multi-threading. The goal of AICI is to let the developer concentrate on their application and let AICI handle the difficulties of VR. AICI focus on keeping flexibility and an architectural integration of all technologies specially required for the evaluation application in the industrial product development process. Here the architecture of AICI and its user interaction concept is presented...|$|E
40|$|The brain {{computer}} interaction {{could be}} the interface medium of the future, instead of using peripheral <b>input</b> <b>output</b> <b>devices.</b> So The brain computer interaction is a path way in which through digital EEG technique the brain signals of human subject have been recorded under different poses by using Digital Electroencephalograph (EEG) 2400 NP instrument. Under experimental setup The subjects have given different expressions corresponding brain signals that have been recorded through a popular technique Digital EEG. An attempt {{has been done to}} correlate these results to the facial action coding System (FACS) ...|$|E
40|$|Abstract- Mainframes, {{breathing}} {{new life}} into business, are just electronic brains foot holding abundant applications and <b>input</b> <b>output</b> <b>devices</b> to nurse jillions of end users {{at the very same}} instance. Being the chief & salient data warehouse, mainframes are allied and thereupon associated to the clients using terminals. Mainframes are used by the most affluent & prosperous companies in pursuance of anchoring their databases & information retrieval and undertakings & agreements that crave for more shield & authenticity. The dexterity of accumulating & stockpiling huge amounts of data as well as eminent processing speed & throughput serve as one of the blessings of mainframe servers. 85 % of all the mainframe catalogs and programs are written in COBOL. More than 70 % of the data wafting & gliding over the internet is banked and hoarded in mainframe only. 1 Security, scalability, reliability, availability and serviceability are some of the boons of mainframe thus making it valuable for organizations that require high availability and bulletproof disaster recovery. Despite of all these strengths, Mainframes being expensive pose the biggest challenge. Although it’s expensive, large corporate will not give up using their mainframes since the erstwhile & former asserted advantages are far more copious that its drawbacks could be overlooked...|$|E
50|$|Touchscreens are {{an example}} that {{combines}} different devices into a single hardware component {{that can be used}} both as an <b>input</b> and <b>output</b> <b>device.</b>|$|R
5000|$|... colord is {{a system}} daemon that {{makes it easy to}} manage, install and {{generate}} color profiles to accurately color manage <b>input</b> and <b>output</b> <b>devices.</b>|$|R
50|$|<b>Input</b> and <b>output</b> <b>devices</b> are {{typically}} housed externally {{to the main}} computer chassis. The following are either standard or very common to many computer systems.|$|R
40|$|Typical {{non-linear}} {{image processing}} applications include the correction of non-linear distortion introduced by components, communication channels and compensation for non-linearity in <b>input</b> <b>output</b> <b>devices.</b> Every digital signal or image processing operation {{can be viewed}} {{at its most basic}} level as the manipulation of a series of finite-length binary strings. Whether the operation is implemented on a processor through software or in dedicated hardware, the data and the algorithms are invariably mapped through electronic logic components, which are inherently binary in nature. In nonlinear image and signal processing, the design of operators is carried out by seeking the optimum mapping from one set of binary strings to another. This contrasts with the linear approach which formulates a solution by optimizing coefficients within a generalized multiply-accumulate context. Traditional adaptive filter works in a rectangular window whose size varies during filter operation depending on certain conditions. The optimal size of the window is crucial and influences the computation and memory requirements. However, this optimal size selection is highly application specific and its convergence from an initial value requires experimentation with various sizes of standard filters. Nonlinear image processing is presented in this paper as a generalization of the above operation by removing the linearity constraints. It seeks the optimum mapping implemented directly in logic. The linear solution should be viewed as a special case of the set of all logic based solutions rather than as an alternative. This generalization, the optimum nonlinear solution will be either better or equivalent to the linear solution, but it should not be worse. This inequality holds regardless of the problem or the criteria, provided that the training data is sufficient...|$|E
50|$|Early {{models of}} the PDP-11 had no {{dedicated}} bus for input/output, but only a system bus called the Unibus, as <b>input</b> and <b>output</b> <b>devices</b> were mapped to memory addresses.|$|R
5000|$|The MIX {{machine has}} 4000 words of storage (each with 5 bytes and a sign), {{addressed}} from 0 to 3999. A variety of <b>input</b> and <b>output</b> <b>devices</b> are also included: ...|$|R
50|$|<b>Input</b> and <b>Output</b> <b>device</b> {{addresses}} at {{machine level}} were two octal digits 0-7. At ARGUS level {{it was two}} letters A-G. The first digits identified the controller, the second digit identified the device number on that controller.|$|R
5000|$|Graphtec Corporation (...) , {{formerly}} Watanabe Instruments, is {{a company}} for computer <b>input</b> and <b>output</b> <b>devices</b> in Japan. It has subsidiaries in the USA, Europe and Australia. Graphtec was established in 1949; their first plotter was released in 1961.|$|R
5000|$|Touch user {{interface}} are graphical {{user interface}}s using a touchpad or touchscreen display as a combined <b>input</b> and <b>output</b> <b>device.</b> They supplement or replace other forms of output with haptic feedback methods. Used in computerized simulators etc.|$|R
50|$|Note {{that these}} {{quotation}} marks are unpaired (the same character {{is used as}} an opener and a closer), which is a hangover from the typewriter technology which was the precursor of the earliest computer <b>input</b> and <b>output</b> <b>devices.</b>|$|R
5000|$|Technology {{affordance}} in the e-Learning is {{a function}} of the capabilities of available computer I/O devices, having a tendency to evolve as new <b>input</b> and <b>output</b> <b>devices</b> become obtainable. [...] There are five levels of technology affordance interactivity: ...|$|R
50|$|Digital Equipment Corporation (DEC) further {{reduced cost}} for mass-produced minicomputers, and mapped {{peripherals}} into the memory bus, {{so that the}} <b>input</b> and <b>output</b> <b>devices</b> appeared to be memory locations. This was implemented in the Unibus of the PDP-11 around 1969.|$|R
50|$|The {{control unit}} (CU) is a {{component}} of a computer's central processing unit (CPU) that directs {{the operation of the}} processor. It tells the computer's memory, arithmetic/logic unit and <b>input</b> and <b>output</b> <b>devices</b> on how to respond to a program's instructions.|$|R
50|$|The {{acquisition}} director, which {{comprised the}} RADAP-C Computer together with associated <b>input</b> and <b>output</b> <b>devices,</b> {{served as an}} acquisition aid, as means for checkout and calibration of associated electronic equipment, and, in the TRANSIT mode, {{as an aid to}} the navigation of the DAMP ship.|$|R
50|$|The {{concept of}} RPG's program cycle fitted neatly with a {{cyclical}} machine that read cards, summarised their contents and prints a result, {{rather like a}} tabulating machine. The language was extended to handle other <b>input</b> and <b>output</b> <b>devices</b> and provides a fast and efficient method of programming.|$|R
40|$|In this paper, {{we examine}} the {{potential}} of the Virtual Reality Modeling Language (VRML) to support different methodologies used in Virtual Reality (VR), like head tracking or special VR <b>input</b> and <b>output</b> <b>devices.</b> A ralization concept is presented and its implementation in the VRML Browser CASUS Presenter is described...|$|R
40|$|The PHIGS (Programmer s {{hierarchical}} interactive graphics system) is an interantional ISO {{standard of}} functional interface between an application {{program and a}} configuration of graphical <b>input</b> and <b>output</b> <b>devices.</b> This interface contains basic functions for dynamic interactive 2 D and 3 D graphics on wide variety of graphics equipment...|$|R
50|$|The XFree86 server {{communicates}} {{with the}} host operating system's kernel to drive <b>input</b> and <b>output</b> <b>devices,</b> {{with the exception}} of graphics cards. These are generally managed directly by XFree86, so it includes its own drivers for all graphic cards a user might have. Some cards are supported by vendors themselves via binary-only drivers.|$|R
50|$|The {{edges of}} film stock are {{perforated}} {{to allow it}} to be moved precise distances at a time continuously. Similarly, punched cards for use in looms and later in computers <b>input</b> and <b>output</b> <b>devices</b> in some cases were perforated to ensure correct positioning of the card in the device, and to encode information.|$|R
40|$|International audienceThis paper {{introduces}} a new device model {{and a new}} interaction technique model to deal with plasticity issues for Virtual Reality (VR) and Augmented Reality (AR). We aim to provide developers with solutions to use and create interaction techniques that will fit to the needed tasks of a 3 D application and to the <b>input</b> and <b>output</b> <b>devices</b> available. The device model {{introduces a}} new description of <b>inputs</b> and <b>outputs</b> <b>devices</b> that includes capabilities, limitations and representations in the real world. We also propose {{a new way to}} develop interaction techniques with an approach based on PAC and ARCH models. These techniques are implemented independently of the concrete devices used thanks to the proposed device model. Moreover, our approach aims to facilitate the portability of interaction techniques over different target OS and 3 D framework...|$|R
40|$|Abstract. Some {{ubiquitous}} computing visions propose to embed {{an abundance of}} <b>input</b> and <b>output</b> <b>devices</b> in the environment. Depending on the context, the user can either interact with her limited personal <b>device,</b> or <b>input</b> and <b>output</b> <b>devices</b> from the surrounding infrastructure. But what about situations in which the user has need for the capabilities of both types of devices at the same time? A user might need to display something privately, while needing the screen real estate of a large wall mounted display. For such situations we propose using mobile devices together with those provided by the environment. We have developed a runtime environment that coordinates multiple devices to do just that. Currently we are exploring the usability {{of the use of}} multiple devices concurrently. We are also investigating the problems of authoring such interfaces. 1...|$|R
50|$|The H2,and the H4, {{can be used}} as {{an audio}} {{interface}} to a computer. When connected to a host computer via USB, the H2 can act as a microphone, audio input (with microphone or line <b>input)</b> and <b>output</b> <b>device</b> with stereo line output. It can also be used as a USB file storage device.|$|R
50|$|System {{profilers}} {{came into}} use after punch cards {{were no longer}} needed to run programs. Mainframe computers had evolved into have modular architectures {{at the same time}} punch cards were being abandoned as input devices. Punch card based mainframe computer systems typically had very rigidly fixed architectures with little variation in <b>input</b> or <b>output</b> <b>devices.</b>|$|R
5000|$|Examples of [...] "abstractions" [...] on a PC include video input, printers, audio <b>input</b> and <b>output,</b> block <b>devices</b> (e.g. {{hard disk}} drives or USB flash drive), etc.|$|R
40|$|Abstract: In {{this paper}} a concept is presented, that {{supports}} awareness and emotional communication between family members, distributed over multiple intelligent home environments. A technical communication infrastructure is presented, which allows connecting {{different types of}} <b>input</b> and <b>output</b> <b>devices.</b> This platform is extended by several examples of emotional user interfaces, which address the individual needs of different user groups...|$|R
40|$|The {{dissertation}} {{deals with}} the conception of a design method for modeling mobile interaction devices with special focus upon intelligent production environments. Main result of the thesis represents a method which identifies and describes the necessary model-based tasks for designing mobile interaction <b>devices</b> (mobile <b>input</b> <b>devices,</b> <b>output</b> <b>devices</b> and communication devices). The method consists of a context model-based modeling tool for configuring work situations in intelligent production environments. The modeling tool enables the generation of design recommendations for product developers in the early phases of product development for creating mobile interaction devices...|$|R
40|$|Provide {{practical}} {{introduction to}} the hardware required for Virtual Environment and 3 D interaction • Examine common and {{state of the art}} I/O devices • Advantages and disadvantages • Discuss how different I/O devices affect interface design In this lecture we will discuss the various <b>input</b> and <b>output</b> <b>devices</b> that are used in 3 D user interfaces and virtual environment applications...|$|R
