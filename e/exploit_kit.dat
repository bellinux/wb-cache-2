39|23|Public
500|$|In February 2013, a {{ransomware}} Trojan {{based on}} the Stamp.EK <b>exploit</b> <b>kit</b> surfaced; the malware was distributed via sites hosted on the project hosting services SourceForge and GitHub that claimed to offer [...] "fake nude pics" [...] of celebrities. In July 2013, an OS X-specific ransomware Trojan surfaced, which displays a web page that accuses the user of downloading pornography. Unlike its Windows-based counterparts, it does not block the entire computer, but simply exploits {{the behavior of the}} web browser itself to frustrate attempts to close the page through normal means.|$|E
5000|$|Redkit (2012) -- Trustwave SpiderLabs {{researchers}} {{discovered a}} new <b>exploit</b> <b>kit</b> they named RedKit. The <b>exploit</b> <b>kit</b> {{was one of the}} first to provide a constantly changing attack URL to make it difficult for organizations to block the <b>exploit</b> <b>kit.</b>|$|E
5000|$|Running a {{security}} utility {{with a good}} antivirus and good host-based intrusion prevention system (HIPS). Due to the polymorphic code used in generating variants of the Blackhole <b>exploit</b> <b>kit,</b> antivirus signatures will lag behind the automated generation of new variants of the Blackhole <b>exploit</b> <b>kit,</b> while changing the algorithm used to load malware onto victims' computers takes more effort from the developers of this <b>exploit</b> <b>kit.</b> A good HIPS will defend against new variants of the Blackhole <b>exploit</b> <b>kit</b> that use previously known algorithms.|$|E
50|$|<b>Exploit</b> <b>kits</b> {{that have}} been named include the MPack, Phoenix, Blackhole, Crimepack, RIG, Angler, Nuclear, Neutrino, and Magnitude <b>exploit</b> <b>kits.</b>|$|R
40|$|Cybercrime attack tools (i. e. <b>Exploit</b> <b>Kits)</b> are {{reportedly}} {{responsible for the}} majority of attacks affecting home users. <b>Exploit</b> <b>kits</b> are traded in the black markets at different prices and advertising different capabilities and functionalities. In this paper we present our experimental approach in testing 10 <b>exploit</b> <b>kits</b> leaked from the mar-kets that we deployed in an isolated environment, our MalwareLab. The purpose of this experiment is to test these tools in terms of resiliency against changing soft-ware configurations in time. We present our experiment design and implementation, discuss challenges, lesson learned and open problems, and present a preliminary analysis of the results. ...|$|R
50|$|<b>Exploit</b> <b>kits</b> {{are sold}} in {{cybercriminal}} circles, often with vulnerabilities already loaded onto them.|$|R
5000|$|Blackhole <b>exploit</b> <b>kit</b> was {{released}} on [...] "Malwox", an underground Russian hacking forum.|$|E
50|$|A Hacker may use an exploit {{framework}} such as sqlmap {{to search}} for SQL vulnerabilities in the database and insert an <b>Exploit</b> <b>kit</b> such as MPack in order to compromise legitimate users who visit the now compromised web server. One of the simplest forms of page hijacking involves altering a webpage to contain a malicious IFrame which can allow an <b>Exploit</b> <b>kit</b> to load.|$|E
5000|$|The {{customer}} licenses the Blackhole <b>exploit</b> <b>kit</b> {{from the}} authors and specifies various options to customize the kit.|$|E
40|$|Abstract. In {{this paper}} we report a {{preliminary}} {{analysis of the}} source code of over 30 different <b>exploit</b> <b>kits</b> which are the main tool behind drive-by-download attacks. The analysis shows that <b>exploit</b> <b>kits</b> make use of a very limited number of vulnerabilities and in a rather unsophisticated fashion. Their key strength is rather their ability to support “customers” in avoiding detection, monitoring traffic, and managing exploits...|$|R
5000|$|A {{study by}} Solutionary’s Security Engineering Research Team (SERT) found about 70% of <b>exploit</b> <b>kits</b> {{released}} in Q4 2012 come from Russia, followed by China and Brazil, with 20% not attributed. A typical, relatively unsophisticated kit may cost US$500 per month. Licenses for advanced kits {{have been reported}} to cost as much as $10,000 per month. <b>Exploit</b> <b>kits</b> are often encoded, instead of in plain PHP, to prevent unlicensed use and complicate anti-malware analysis.|$|R
50|$|<b>Exploit</b> <b>kits</b> {{tend to be}} {{deployed}} covertly on legitimate Web sites that have been hacked, unknown to the site operators and visitors.|$|R
50|$|The Blackhole <b>exploit</b> <b>kit</b> is as of 2012 {{the most}} {{prevalent}} web threat, where 29% of all web threats detected by Sophos and 91% by AVG are due to this <b>exploit</b> <b>kit.</b> Its purpose is to deliver a malicious payload to a victim's computer. According to Trend Micro the majority of infections due to this <b>exploit</b> <b>kit</b> were done {{in a series of}} high volume spam runs. The kit incorporates tracking mechanisms so that people maintaining the kit know considerable information about the victims arriving at the kit's landing page. The information tracked includes the victim's country, operating system, browser and which piece of software on the victim's computer was exploited. These details are shown in the kit's user interface.|$|E
5000|$|The {{compromised}} {{web page}} or malicious {{link in the}} spammed email sends the user to a Blackhole <b>exploit</b> <b>kit</b> server's landing page.|$|E
50|$|Page {{hijacking}} Involves compromising legitimate {{web pages}} {{in order to}} redirect users to a malicious web site or an <b>Exploit</b> <b>kit</b> via XSS.|$|E
25|$|Many {{different}} distribution {{methods for}} Locky {{have been used}} since the ransomware was released. These distribution methods include <b>exploit</b> <b>kits,</b> Word and Excel attachments with malicious macros, DOCM attachments, and zipped JS Attachments.|$|R
40|$|The Web {{has evolved}} {{from a handful of}} static web pages to billions of dynamic and {{interactive}} web pages. This evolution has positively transformed the paradigm of communication, trading, and collaboration for the benefit of humanity. However, these invaluable benefits of the Web are shadowed by cyber-criminals who use the Web as a medium to perform malicious activities motivated by illegitimate benefits. Cyber-criminals often lure victims to visit malicious web pages, exploit vulnerabilities on victims’ devices, and then launch attacks that could lead to: stealing invaluable credentials of victims, downloading and installation of malware on victims’ devices, or complete compromise of victims’ devices to mount future attacks. While the current state-of-the-art is to detect malicious web pages is promising, it is yet limited in addressing the following three problems. First, for the sake of focused detection of certain class of malicious web pages, existing techniques are limited to partial analysis and characterization of attack payloads. Secondly, attacker-motivated and benign evolution of web page artifacts have challenged the resilience of existing detection techniques. The third problem is the prevalence and evolution of <b>Exploit</b> <b>Kits</b> used in spreading web-borne malware. In this dissertation, we present the approaches and the tools we developed to address these problems. To the address partial analysis and characterization of attack payloads, we propose a holistic and lightweight approach that combines static analysis and minimalistic emulation to analyze and detect malicious web pages. This approach leverages features from URL structure, HTML content, JavaScript executed on the client, and reputation of URLs on social networking websites to train multiple models, which are then used in confidence-weighted majority vote classifier to detect unknown web pages. Evaluation of the approach on a large corpus of web pages shows that the approach not only is precise enough in detecting malicious web pages with very low false signals but also does detection with a minimal performance penalty. To address the evolution of web page artifacts, we propose an evolution-aware approach that tunes detection models inline with the evolution of web page artifacts. Our approach takes advantage of evolutionary searching and optimization using Genetic Algorithm to decide the best combination of features and learning algorithms, i. e., models, as a function of detection accuracy and false signals. Evaluation of our approach suggests that it reduces false negatives by about 10 % on a fairly large testing corpus of web pages. To tackle the prevalence of <b>Exploit</b> <b>Kits</b> on the Web, we first analyze source code and runtime behavior of several <b>Exploit</b> <b>Kits</b> in a contained setting. In addition, we analyze the behavior of live <b>Exploit</b> <b>Kits</b> on the Web in a contained environment. Combining the analysis results, we characterize <b>Exploit</b> <b>Kits</b> pertinent to their attack-centric and self-defense behaviors. Based on these behaviors, we draw distinguishing features to train classifiers used to detect URLs that are hosted by <b>Exploit</b> <b>Kits.</b> The evaluation of our classifiers on independent testing dataset shows that our approach is effective in precisely detecting malicious URLs linked with <b>Exploit</b> <b>Kits</b> with very low false positives...|$|R
40|$|NVD and Exploit-DB are the {{de facto}} {{standard}} databases used for research on vulnerabilities, and the CVSS score is the standard measure for risk. On open question is whether such databases and scores are actually representative of at- tacks found in the wild. To address this question we have constructed a database (EKITS) based on the vulnerabili- ties currently used in <b>exploit</b> <b>kits</b> from the black market and extracted another database of vulnerabilities from Symantec's Threat Database (SYM). Our nal conclusion is that the NVD and EDB databases are not a reliable source of in- formation for exploits in the wild, even after controlling for the CVSS and exploitability subscore. An high or medium CVSS score shows only a signi cant sensitivity (i. e. prediction of attacks in the wild) for vulnerabilities present in <b>exploit</b> <b>kits</b> (EKITS) in the black market. All datasets ex- hibit a low speci city...|$|R
5000|$|A hacker {{purchases}} or {{builds a}} Trojan and/or <b>exploit</b> <b>kit</b> and {{uses it to}} start infecting users' computers, whose payload is a malicious application—the bot.|$|E
5000|$|Magnitude (2014) -- Trustwave SpiderLabs {{researchers}} found {{an instance of}} the Magnitude <b>exploit</b> <b>kit</b> that shed light on how the exploit kit’s business model works and how exactly it infects its victims.|$|E
5000|$|If {{there is}} an exploit that is usable, the exploit loads and executes a payload on the victim's {{computer}} and informs the Blackhole <b>exploit</b> <b>kit</b> server which exploit was used to load the payload.|$|E
50|$|Further Research from Recorded Future's Threat Intelligence Team {{revealed}} that Adobe Flash Player provided {{six of the}} top 10 vulnerabilities used by <b>exploit</b> <b>kits</b> in 2016. Flash Player’s popularity with cyber criminals remains even after increased Adobe security issue mitigation efforts.Kits continue to include exploitation of vulnerabilities that were patched years back, as there {{continues to be a}} significant population of unpatched machines.|$|R
40|$|In {{this ongoing}} work we perform the first {{systematic}} investigation of cross-platform (X-platform) malware. As a first step, {{this paper presents}} an exploration into existing X-platform malware families and X-platform vulnerabilities used to distribute them. Our exploration shows that X-platform malware uses a wealth of methods to achieve portability. It also shows that exploits for X-platform vulnerabilities are X-platform indeed and readily available in commercial <b>exploit</b> <b>kits,</b> making them an inexpensive distribution vector for X-platform malware...|$|R
50|$|Kasidet POS Worm gets on {{a system}} {{along with the other}} malware or gets {{downloaded}} unknowingly when user visits malicious websites. This malware is different from other POS malware and it scrapes data with advanced features. First it scrapes the POS RAM and steals payment card details. Then the scraped information is sent to the cyber criminal with intercepted GET and POST requests from the browser. It’s very difficult to detect this bot by using security programs; sometimes it’s detectable in email spam campaigns and <b>exploit</b> <b>kits.</b> The scraping capability of Kasidet has now been enhanced by the cyber criminals and it now hides C&C server in the Namecoin DNS Service Dot-Bit.|$|R
50|$|April 7, 2016, Adobe {{released}} a Flash Player patch for a zero-day memory corruption vulnerability CVE-2016-1019 {{that could be}} used to deliver malware via the Magnitude <b>exploit</b> <b>kit.</b> The vulnerability could be exploited for remote code execution.|$|E
5000|$|Ensuring {{that the}} browser, browser's plugins, and {{operating}} system {{are up to}} date. The Blackhole <b>exploit</b> <b>kit</b> targets vulnerabilities in old versions of browsers such as Firefox, Google Chrome, Internet Explorer and Safari {{as well as many}} popular plugins such as Adobe Flash, Adobe Acrobat and Java.|$|E
50|$|In January 2014, {{malicious}} ads on the newspaper's website redirected {{visitors to}} an <b>exploit</b> <b>kit</b> landing page. In December 2014, The Moscow Times was forced offline {{for two days}} by a distributed denial of service (DDoS) attack. It was forced offline a second time in February 2015 for unknown reasons.|$|E
40|$|Malicious Java applets {{are widely}} used to deliver {{malicious}} software to remote systems. In this work, we present HoneyAgent which allows for the dynamic analysis of Java applets, bypassing common obfuscation techniques. This enables security researchers to quickly comprehend the functionality of an examined applet and to unveil malicious behavior. In order to trace {{the behavior of a}} sample as far as possible, HoneyAgent is further able to simulate various vulnerabilities allowing analysts for example to identify the malware that should finally be installed by the applet. In our evaluation, we show that HoneyAgent is able to reliably detect malicious applets used by common <b>exploit</b> <b>kits</b> with no false positives. By using a combination of heuristics as well as signatures applied to observed method invocations, HoneyAgent is further able to identify exploited common vulnerabilities and exposures in many cases...|$|R
2500|$|In 2011, Malwarebytes {{acquired}} HPhosts, {{a website}} blacklisting company, which tracks blacklisted websites and ad servers, a necessary development {{to protect against}} new internet protocol addresses and web servers which distribute malware, and advise internet service providers to shut down those with malicious activity. That year, the company had claimed to have removed over five billion pieces of Malware in three years. The following year, the company launched into the corporate market with an enterprise product aimed at desktop-based anti-malware detection and protection. In 2013, Malwarebytes acquired ZeroVulnerabilityLabs, Inc., a security research and development company founded by Pedro Bustamante, which protects software applications from [...] "known and zero-day exploits used by <b>exploit</b> <b>kits,</b> web-based vulnerability <b>exploits</b> and other corporate-targeted attacks". They expanded their malware removal and protection to the Android platform with the launch of Malwarebytes Anti-Malware Mobile, and launched a USB-based product called Malwarebytes Techbench aimed at helping technicians remove malware.|$|R
40|$|Abstract—Many organizations, from {{antivirus}} {{companies to}} motivated volunteers, maintain blacklists of URLs suspected of distributing malware {{in order to}} protect users. Detection rates can vary widely, but it is not known why. We posit that much variation can be explained by differences in the type of malware and differences in the blacklists themselves. To that end, we conducted an empirical analysis of 722 malware URLs submitted to the Malware Domain List (MDL) over 6 months in 2012 – 2013. We ran each URL through VirusTotal, a tool that allowed us to check each URL against 38 different malware URL blacklists, within an hour from when they were first blacklisted by the MDL. We followed up on each for two weeks following. We then ran logisitic regressions and Cox proportional hazard models to identify factors affecting blacklist accuracy and speed. We find that URLs belonging to known <b>exploit</b> <b>kits</b> such as Blackhole and Styx {{were more likely to be}} blacklisted and blacklisted quicker. We also found that blacklists that are used to actively block URLs are more effective than those that do not, and furthermore that paid services are more effective than free ones. I...|$|R
5000|$|... 2011: Spotify had a malvertising attack {{which used}} the Blackhole <b>exploit</b> <b>kit</b> - {{this was one}} of the first {{instances}} of a drive-by download, where a user doesn’t even have to click on an ad to become infected with malware. According to Bluecoat Security Systems Report 2011, saw an increase of 240% in malvertising based malicious sites.|$|E
50|$|The <b>exploit</b> <b>kit</b> gathers {{information}} on the victim machine, finds vulnerabilities and determines the appropriate exploit, and delivers the exploit, which typically silently drive-by downloads and executes malware. Kits are becoming ever more sophisticated. They tend to be neatly packaged, and do not require any understanding of exploits, and very little computer proficiency. Kits may have a Web interface showing active victims and statistics. They may have a support period and updates like commercial software.|$|E
5000|$|In March 2011, Spotify {{temporarily}} removed {{display advertising}} on its computer software, after reports from users {{on the free}} service tier that a malicious advertisement had infected their systems. Then-named security firm Websense stated that the attack used the Blackhole <b>exploit</b> <b>kit.</b> Spotify {{said in a statement}} that [...] "Users with anti-virus software will have been protected", and [...] "We sincerely apologise to any users affected. We'll continue working hard to ensure this does not happen again and that our users enjoy Spotify securely and in confidence".|$|E
40|$|In this work, {{we present}} two {{fundamental}} primitives for network security: network dialog minimization and network dialog diffing. Network dialog minimization (NDM) simplifies an original dialog {{with respect to}} a goal, so that the minimized dialog when replayed still achieves the goal, but requires minimal network communication, achieving significant time and bandwidth savings. We present network delta debugging, the first technique to solve NDM. Network dialog diffing compares two dialogs, aligns them, and identifies their common and different parts. We propose a novel dialog diffing technique that aligns two dialogs by finding a mapping that maximizes similarity. We have applied our techniques to 5 applications. We apply our dialog minimization approach for: building drive-by download milkers for 9 <b>exploit</b> <b>kits,</b> integrating them in a infrastructure that has collected over 14, 000 malware samples running from a single machine; efficiently measuring the percentage of popular sites that allow cookie replay, finding that 31 % do not destroy the server-side state when a user logs out and that 17 % provide cookies that live over a month; simplifying a cumbersome user interface, saving our institution 3 hours of time per year and employee; and finding a new vulnerability in a SIP server. We apply our dialog diffing approach for clustering benign (F-Measure = 100 %) and malicious (F-Measure = 87. 6 %) dialogs. status: publishe...|$|R
40|$|The {{prevalence}} of Search Engine Poisoning in trending topics and popular search terms {{on the web}} within search engines is investigated. Search Engine Poisoning is the act of manipulating search engines in order to display search results from websites infected with malware. Research done between February and August 2012, using both manual and automated techniques, shows us how easily the criminal element manages to insert malicious content into web pages related to popular search terms within search engines. In order to provide the reader with a clear overview {{and understanding of the}} motives and the methods of the operators of Search Engine Poisoning campaigns, an in-depth review of automated and semi-automated web <b>exploit</b> <b>kits</b> is done, as well as looking into the motives for running these campaigns. Three high profile case studies are examined, and the various Search Engine Poisoning campaigns associated with these case studies are discussed in detail to the reader. From February to August 2012, data was collected from the top trending topics on Google’s search engine along with the top listed sites related to these topics, and then passed through various automated tools to discover if these results have been infiltrated by the operators of Search Engine Poisoning campaings, and the results of these automated scans are then discussed in detail. During the research period, manual searching for Search Engine Poisoning campaigns was also done, using high profile news events and popular search terms. These results are analysed in detail to determine the methods of attack, the purpose of the attack and the parties behind i...|$|R
40|$|Over {{the last}} several years, we have {{developed}} an object-oriented, knowledge-based construction kit for human-computer communication (HCC) {{and a large number}} of associated tools and intelligent support systems needed to <b>exploit</b> this <b>kit</b> effectively. Answers to the "HCC design question " are given by providing appropriate building blocks which suggest the way HCC's should be built. The object-oriented system architecture is highly flexible and enhances the reusability of many building blocks. In designing new HCC capabilities the designer can use either existing objects or objects with minor modifications, and can thereby rely on standard and well-tested components. Our support tools analyze HCC systems, provide assistance and guidance in building them, and create informative graphical displays of their structure. They help the designer regain control over systems that have become too complex to master without support tools. Our research efforts have given us an understanding of how the concepts and abstractions of our HCC toolkit have evolved and of what it means today to design new systems that make use of various types of graphical representations, icons, windows, and menus. Acknowledgement...|$|R
