96|262|Public
5000|$|...DEVD: <b>Device</b> <b>description</b> (communications {{device for}} lines, workstations, {{printers}} tape drives, etc.) ...|$|E
50|$|The W3C MWI (Mobile Web Initiative) and the {{associated}} DDWG (<b>Device</b> <b>Description</b> Working Group), recognising the difficulty in collecting and keeping track of UAProfs and device handset information, and the practical shortcomings {{in the implementation of}} UAProf across the industry have outlined specifications for a <b>Device</b> <b>Description</b> Repository, in the expectation that an ecosystem of such Repositories will eventually eliminate the need for local device repositories in favour of a web service ecosystem.|$|E
50|$|<b>Device</b> <b>Description</b> Language (DDL) is {{the formal}} {{language}} describing {{the service and}} configuration of field devices for process and factory automation.|$|E
3000|$|Such {{automatic}} design approaches require electronic <b>device</b> <b>descriptions,</b> which {{satisfy the}} following requirements: [...]...|$|R
5000|$|A W3C WG Note {{describing}} the ecosystem surrounding creation, maintenance {{and use of}} <b>device</b> <b>descriptions.</b> The completed document was published on 31 October 2007.|$|R
5000|$|A W3C WG Note {{describing}} {{a set of}} requirements for a reference repository of <b>device</b> <b>descriptions.</b> The completed document was published on 17 December 2007.|$|R
5000|$|A W3C Recommendation {{defining}} a language-neutral programming interface to a <b>Device</b> <b>Description</b> Repository. The DDR Simple API was published on 5 December 2008.|$|E
5000|$|The {{architecture}} of the repository was not prescribed, but distributed solution are likely. In general, the desirable characteristics of a <b>Device</b> <b>Description</b> Repository are: ...|$|E
50|$|The <b>Device</b> <b>Description</b> Repository (DDR) is {{a concept}} {{proposed}} by the Mobile Web Initiative <b>Device</b> <b>Description</b> Working Group (DDWG) of the World Wide Web Consortium. The DDR {{is supported by a}} standard interface and an initial core vocabulary of device properties. Implementations of the proposed repository are expected to contain information about Web-enabled devices (particularly mobile devices). Authors of Web content {{will be able to make}} use of repositories to adapt their content to best suit the requesting device. This will facilitate the interaction and viewing of Web pages across devices with widely varying capabilities.|$|E
30|$|<b>Device</b> <b>descriptions</b> play an {{important}} role in the design and commissioning of modern building automation systems and help reducing the design time and costs. However, all established <b>device</b> <b>descriptions</b> are specialized for certain purposes and suffer from several weaknesses. This hinders a further design automation, which is strongly needed for the more and more complex building automation systems. To overcome these problems, this paper presents novel Ontology-based <b>Device</b> <b>Descriptions</b> (ODDs) along with a layered ontology architecture, a specific ontology view approach with virtual properties, a generic access interface, a triple store-based database backend, and a generic search mask GUI with underlying query generation algorithm. It enables a formal, unified, and extensible specification of building automation devices, ensures their comparability, and facilitates a computer-enabled retrieval, selection, and interoperability evaluation, which is essential for an automated design. The scalability of the approach to several ten thousand devices is demonstrated.|$|R
40|$|Attribution License, which permits {{unrestricted}} use, distribution, {{and reproduction}} in any medium, provided the original work is properly cited. <b>Device</b> <b>descriptions</b> {{play an important}} role in the design and commissioning of modern building automation systems and help reducing the design time and costs. However, all established <b>device</b> <b>descriptions</b> are specialized for certain purposes and suffer from several weaknesses. This hinders a further design automation, which is strongly needed for the more and more complex building automation systems. To overcome these problems, this paper presents novel Ontology-based <b>Device</b> <b>Descriptions</b> (ODDs) along with a layered ontology architecture, a specific ontology view approach with virtual properties, a generic access interface, a triple store-based database backend, and a generic search mask GUI with underlying query generation algorithm. It enables a formal, unified, and extensible specification of building automation devices, ensures their comparability, and facilitates a computerenabled retrieval, selection, and interoperability evaluation, which is essential for an automated design. The scalability of the approach to several ten thousand devices is demonstrated. 1...|$|R
30|$|The {{building}} automation domain also developed specific <b>device</b> <b>descriptions,</b> {{such as the}} ASCII file-based LonMark Device Interface (XIF) Files [6] or the binary EIB/KNX description files for the ETS engineering tool.|$|R
50|$|The HART Communication Foundation, PROFIBUS and Fieldbus Foundation have merged their {{individual}} dialects of the DDL. The result became the Electronic <b>Device</b> <b>Description</b> Language (EDDL), an IEC standard (IEC 61804).|$|E
5000|$|The W3C <b>Device</b> <b>Description</b> Working Group (DDWG), {{operating}} {{as part of}} the World Wide Web Consortium (W3C) Mobile Web Initiative (MWI), was chartered to [...] "foster the provision and access to device descriptions {{that can be used in}} support of Web-enabled applications that provide an appropriate user experience on mobile devices." [...] Mobile devices exhibit the greatest diversity of capabilities, and therefore present the greatest challenge to content adaptation technologies. The group published several documents, including a list of requirements for an interface to a <b>Device</b> <b>Description</b> Repository (DDR) and a standard interface meeting those requirements.|$|E
50|$|Universal Plug and Play (UPnP) is an IP-based {{protocol}} suite based on preliminary versions of Web Services protocols such as XML and Simple Object Access Protocol (SOAP). With UPnP, a device can dynamically join a network, obtain an IP address, convey its capability, and discover {{the presence and}} capabilities of other devices on the network. Information about the set of services that a particular device type can provide is captured in an XML <b>device</b> <b>description</b> document that the device hosts. The <b>device</b> <b>description</b> also lists properties such as device name and icons associated with the device. UPnP has been adopted widely for devices that interact in home network audio-video scenarios.|$|E
5000|$|The [...] "requirements for {{a single}} logical <b>device</b> <b>descriptions</b> repository" [...] were first {{published}} as a W3C Working Draft in April 2006, and completed as a [...] "Working Group Note" [...] in December 2007.|$|R
40|$|The paper {{describes}} the approach for modelling and using semantic <b>descriptions</b> of <b>devices</b> in the HYDRA project middleware (“HYDRA: Networked Embedded System Middleware for Heterogeneous Physical Devices in a Distributed Architecture”) funded within the FP 6 IST Programme). The concept of semantic device is introduced {{and the main}} use cases for semantic <b>device</b> <b>descriptions</b> are presented {{with a focus on}} the Model-Driven Architecture (MDA) approach in HYDRA. An overview of the ontologies representing the semantic <b>device</b> <b>descriptions</b> is presented. In the ambient world of the near future, interconnected intelligent devices will surround us, at home, work, or while travelling. These devices and their local networks will also be connected t...|$|R
5000|$|Assured availability. If Web servers rely on <b>device</b> <b>{{descriptions}}</b> {{to provide}} adapted content, then these descriptions must {{be available at}} all times. Multiple repository hosts and support for data caching {{are likely to be}} part of the repository architecture.|$|R
50|$|A <b>device</b> <b>{{description}}</b> (DD) can {{be created}} with a plain text editor. But like any other programing or description language, the authoring is error prone and as such special development tools may be used, to create valid and norm conforming EDDs.|$|E
5000|$|Retrieving and parsing UAProfs in {{real-time}} is {{slow and}} can add substantial overhead to any given web request: necessitating {{the creation of a}} <b>Device</b> <b>Description</b> Repository to cache the UAProfs in, and a workflow to refresh UAProfs to check for deprecation.|$|E
5000|$|A W3C WG Note {{defining}} useful grouping {{and structure}} patterns in device descriptions. The <b>Device</b> <b>Description</b> Structures document was published as a Working Draft on 5 December 2008. The intention {{is that this}} document will be future input to other W3C groups.|$|E
40|$|This paper {{describes}} the discovery and interaction of devices {{in a home}} network. It defines an innovative <b>Device</b> Discovery and <b>Description</b> Framework called 3 DF, that integrates existing networking and interoperability protocols. The 3 DF framework provides abstract <b>device</b> <b>descriptions</b> with multiple views, dynamic capability changes and driver support in an advanced way, taking into consideration aspects such as reusability, extendibility and ease of use. status: publishe...|$|R
40|$|This paper proposes an {{extension}} to Session Initiation Protocol (SIP) for contextualized service delivery in a service delivery platform (SDP) that enables device specific multimedia delivery. SIP separates between session establishment and description and is thus, amenable {{to be extended}} for advanced implementations which make it an ideal platform for service creation. Device specific multimedia delivery needs rich and flexible <b>device</b> <b>descriptions,</b> and our approach proposes advanced <b>device</b> <b>descriptions</b> through semantic technologies. The proposed SIP extensions have been implemented on a SIP Application Server which functions as SDP in IP Multimedia Subsystem (IMS). The validation of the proposed extensions is shown through an Android SIP client application {{that acts as a}} device browser and recommender for different multimedia services to users. An example device user agent (UA) application has also been implemented on a laptop. © 2012 IEEE...|$|R
5000|$|A {{computer}} program then program then [...] "explodes" [...] the device list, coordinates, and <b>device</b> <b>descriptions</b> into a complete pin {{list for the}} board by using templates {{for each type of}} device. A template is map of a device's pins. It can be encoded once, and then shared by all devices of that type.|$|R
50|$|Mobile Web {{interfaces}} {{designed with}} MyMobileWeb are defined once for {{all kind of}} devices. At runtime MyMobileWeb renders such interfaces {{in accordance with the}} characteristics and restrictions of the device and web browser used. Such characteristics are provided by a <b>Device</b> <b>Description</b> Repository such as WURFL or Device Atlas.|$|E
50|$|An XML-based {{device and}} profile {{description}} language is specified for I/O device configuration. SDDML (Sercos <b>Device</b> <b>Description</b> Markup Language) describes which profiles {{are supported by}} a certain device. SPDML (Sercos Profile Description Markup Language) is used to specify the different profiles {{on the basis of}} the Sercos parameter model. Existing standard parameters can be used and manufacturer-specific parameters can also be defined.|$|E
50|$|The size in bits, representation, read/write {{accessibility}} {{and function}} of each property in a DMP device is not determined by the protocol which only defines the mechanism to read and/or write the property value. Instead, that information must either be provided externally by a <b>device</b> <b>description</b> written in DDL or in limited cases may be pre-programmed by fore-knowledge of specific device types.|$|E
30|$|All <b>device</b> <b>descriptions</b> {{mentioned}} so far {{are primarily}} specializing in device commissioning, configuration, and testing. They are inadequate for a computer-enabled retrieval of suitable devices and mostly do not facilitate comparability or automated interoperability evaluations. Also, the semantics of the applications (their functionality) are not formally defined, which is needed for an automated device selection and composition.|$|R
50|$|An {{electronic}} datasheet specifies {{characteristics in}} a formal structure that allows the information to be processed by a machine. Such machine readable descriptions can facilitate information retrieval, display, design, testing, interfacing, verification, and system discovery. Examples include transducer electronic data sheets for describing sensor characteristics, and Electronic <b>device</b> <b>descriptions</b> in CANopen or descriptions in markup languages, such as SensorML.|$|R
40|$|Abstract—This paper proposes an {{extension}} to Session Initiation Protocol (SIP) for contextualized service delivery in a service delivery platform (SDP) that enables device specific multimedia delivery. SIP separates between session establishment and description and is thus, amenable {{to be extended}} for advanced implementations which make it an ideal platform for service creation. Device specific multimedia delivery needs rich and flexible <b>device</b> <b>descriptions,</b> and our approach proposes advanced <b>device</b> <b>descriptions</b> through semantic technologies. The proposed SIP extensions have been implemented on a SIP Application Server which functions as SDP in IP Multimedia Subsystem (IMS). The validation of the proposed extensions is shown through an Android SIP client application {{that acts as a}} device browser and recommender for different multimedia services to users. An example device user agent (UA) application has also been implemented on a laptop. Keywords-device description; Ericsson SDS; Google Android; IMS; ontology; SIP extensio...|$|R
50|$|The IODD (IO <b>Device</b> <b>Description)</b> {{describes}} {{sensors and}} actuator. It contains {{information about the}} device’s identity, parameters, process data, diagnosis data, communication properties and {{the design of the}} user interface of engineering tools. The IODD comprises different data files: the main file and several optional language files are in XML-format and optional graphical files are in PNG-format (portable network graphics).|$|E
50|$|ACN {{defines a}} common {{protocol}} architecture, two major network protocols (SDT, DMP), a <b>device</b> <b>description</b> language (DDL) {{and a number}} of ‘E1.17 Profiles for Interoperability’ (known as EPIs or interoperability profiles) which define how elements of the ACN architecture must be used in a particular context to achieve interoperability. For example, by providing specific values or ranges for timing parameters to be used in a particular network environment.|$|E
50|$|The textual {{data can}} be {{specified}} in multiple languages. In the actual <b>device</b> <b>description</b> only text identifiers are used. Separate text lists (for each supported language one is necessary) link the corresponding language-dependent text to the text identifier. Usually all of the text lists {{are included in the}} main file. For subsequent translation into other languages the text lists can be provided as separate files to leave the main file unchanged.|$|E
50|$|Addressing is {{also part}} of the {{application}} layer. A network node consists of an 802.15.4-conformant radio transceiver and one or more <b>device</b> <b>descriptions</b> (basically collections of attributes which can be polled or set, or which can be monitored through events). The transceiver is the base for addressing, and devices within a node are specified by an endpoint identifier in the range 1-240.|$|R
30|$|The {{presented}} approach finally overcomes {{the drawbacks}} of existing <b>device</b> <b>descriptions</b> by facilitating {{a wide range}} of essential automatic operations such as for device retrieval, operation mode selection, device parameterization, and automatic interoperability evaluation. This altogether enables an automated design of building automation systems, what can strongly reduce the design time, design costs, and finally the overall costs for building automation systems. Thereby, the amortization is achieved earlier, which should promote an increased number of installations in the future and contribute to further energy savings in buildings.|$|R
40|$|This work {{deals with}} the basic {{technologies}} and processes of manufacturing semiconductor devices on a silicon substrate. Deals with the processes from creating a layer of silicon dioxide by oxidation, {{through the creation of}} structures using photolithography, the doping of additives into defined areas of diffusion, up to creating contacts and conductive pathways by sputtering. It also {{deals with the}} technological production process for silicon <b>devices,</b> <b>description</b> of <b>devices</b> and measurement, calculation layers of silicon dioxide, calculated of diffusion and measured characteristics of components and their evaluation...|$|R
