4|10000|Public
40|$|An <b>image</b> <b>processing</b> <b>apparatus</b> (100) comprises: {{receiving}} {{means for}} receiving a video signal representing input images; a film-detector unit (108) for detecting whether the input images have been captured by a film camera or by a video camera; and a sharpness enhancement unit (106) for calculating sharpness enhanced images on {{basis of the}} input images. The sharpness enhancement unit (106) {{is controlled by the}} film-detector unit (108), whereby the sharpness enhancement is larger if the film-detector unit (108) has detected that the input images have been captured by the film camera than if the film-detector unit (108) has detected that the input images have been captured by the video camera...|$|E
40|$|Abstract—In making forecasting, {{there are}} many kinds of data. Stationary time series data are {{relatively}} easy to make forecasting but random data are very difficult in its execution for forecasting. Intermittent data are often seen in industries. But it is rather difficult to make forecasting in general. In recent years, the needs for intermittent demand forecasting are increasing because of the constraints of strict Supply Chain Management. How to improve the forecasting accuracy is an important issue. There are many researches made on this. But there are rooms for improvement. In this paper, a new method for cumulative forecasting method is proposed. The data is cumulated and to this cumulated time series, the following method is applied to improve the forecasting accuracy. Trend removing by the combination of linear and 2 nd order non-linear function and 3 rd order non-linear function is executed to the production data of X-ray image intensifier tube device and Diagnostic X-ray <b>image</b> <b>processing</b> <b>apparatus.</b> The forecasting result is {{compared with those of}} the non-cumulative forecasting method. The new method shows that it is useful for the forecasting of intermittent demand data. The effectiveness of this method should be examined in various cases. Keywords—intermittent demand forecasting; minimum variance; exponential smoothing method; trend I...|$|E
40|$|Deflection {{characteristics}} of crop (rice, wheat) stalks {{were examined in}} order to make clear the mechanical interaction between crops and combine harvester. At the beginning, flexural rigidity values (EI) of crop stalks were calculated from the results of de flection test using <b>image</b> <b>processing</b> <b>apparatus.</b> Further, deflection values and posture of crop stalks were predicted by analysis of Finite Element Method (FEM) using parameters of EI. Therefore, propriety of FEM analysis was examined through the comparison with measured values. Finally, in this study, the following results were obtained: 1) The deflection of crop stalks could be returned to initial condition in a moment against a light load. But, against a heavy load, it took a little time to return to initial condition. Namely, the crop stalks were indicated to have {{characteristics of}} viscous elasticity. 2) Deflection values and posture of crop stalks calculated by FEM analysis almost coincided with measured values. From this result, deflection characteristics of crop stalks will be examined theoretically by FEM analysis if EI are obtained accurately. 3) The EI of crop stalks both rice and wheat became larger gradually {{in the direction of the}} root according as cross section area of stalk became larger. 収穫作業時における作物稈に作用する機械的作用を究明するため,画像処理装置を用いて作物(稲･小麦) 稈の撓み計測,曲げ剛さ(EI) の計算並びに有限要素法による作物稈の撓み姿勢や撓み量の計算値を実測値と比較し,撓み特性について考察を行った. 得られた主な結果は次のとおりである. 1) 稲･小麦稈に軽い荷重をかけた場合は,初期状態にすぐに回復したが,荷重が大きくなるに従い回復するのに若干の時間を要する. つまり,稲･小麦稈は粘弾性,応力緩和の特性があることを示した. 2) 有限要素法による作物稈の撓み姿勢や撓み量の計算値を実測値と比較した結果,両者ともほぼ一致する傾向が認められた. このことから,曲げ剛さ(EI) の計算精度が非常に高ければ,稲･小麦稈の撓み特性は理論的に考察できることが示唆された. 3) 稲･小麦稈両者ともに根元に行くに従って,稈の断面形状は少しずつ大きくなり,曲げ剛さ(EI) もわずかなばらつきはあるものの大きくなる傾向が見られた...|$|E
40|$|Spatial {{inhomogeneity}} of {{the phase}} retardation in the birefringent plates of LiNbO 3 crystals are measured. The studies are {{performed with the}} imaging polarimeter which utilizes the computer registration and <b>image</b> <b>processing.</b> The <b>apparatus</b> {{have been used for}} the measurements of spatial distribution of the optical anisotropy parameters characterizing several single crystals...|$|R
40|$|Abstract—The {{available}} literatures on <b>image</b> <b>processing</b> {{in agriculture}} application under high performance computing (HPC) are limited and sometimes are not discussed in details. This paper reviewed {{the steps of}} image analysis done in some <b>image</b> <b>processing</b> focusing on agriculture application and also the details analysis of parallel and distributed <b>image</b> <b>processing.</b> The memory architecture in parallel and distributed <b>image</b> <b>processing</b> and some suitable application programming interface (API) in parallel and distributed <b>image</b> <b>processing</b> are examined. In general, this study provides basic understanding of parallel and distributed <b>image</b> <b>processing</b> for agriculture application...|$|R
40|$|This paper {{describes}} the Multimission VICAR (Video Image Communication and Retrieval) Planner (MVP) (Chien 1994) system, which uses artificial intelligence planning techniques (Iwasaki & Friedland, 1985, Pemberthy & Weld, 1992, Stefik, 1981) to automatically construct executable complex <b>image</b> <b>processing</b> procedures (using {{models of the}} smaller constituent <b>image</b> <b>processing</b> subprograms) in response to <b>image</b> <b>processing</b> requests made to the JPL Multimission <b>Image</b> <b>Processing</b> Laboratory (MIPL). The MVP system allows the user to specify the <b>image</b> <b>processing</b> requirements {{in terms of the}} various types of correction required. Given this information, MVP derives unspecified required processing steps and determines appropriate <b>image</b> <b>processing</b> programs and parameters to achieve the specified <b>image</b> <b>processing</b> goals. This information is output as an executable <b>image</b> <b>processing</b> program which can then be executed to fill the processing request...|$|R
40|$|Recently, the {{technique}} of image processing {{has been used for}} inspection of industrial products, remote sensing, chracter recognition, and as a visual sensor for robots, etc [...] This report is concerned with level control of hopper by using an <b>image</b> <b>processing</b> <b>apparatus.</b> The experimental system consists mainly of the following elements : a) The controlled object is an asymmetrical hopper with a rectangular cross section. b) The detecting element is an ordinary video camera. c) The actuating element is a slide valve which is made in our laboratory. d) The controller is a PC- 9801 personal computer. e) SYSTEM 9512 is used as the <b>image</b> <b>processing</b> <b>apparatus.</b> f) For the test material, sand is used (mean diameter 355 μm). The flow pattern of granules inside the hopper changes at the transitional bed height (H_). H_ is the bed height at which flow pattern of granules changes from mass flow to core flow or vice versa. The flow pattirn of granuies is uniform in the upper part of H_. In this sense, it is easy to control the level of the hopper, because the surface of granules in the hopper is kept constant (features of mass flow). We measured H_ by video camera and the data of H_ is treated by the image processing unit (SYSTEM 9512). In this case, it is desired that the level control of granules is performed at the upper part of H_. The time to transmit the image data to PC- 9801,and which is necessary for the image processing, was reduced to maintain good response wave shapes. In order to do so, the area used for data processing of the flow pattern is decreased, and the method of extracting the useful information from the image data is discussed. The following results were obtained through this experiment. 1) By using the level control system with an image processing unit as a detecting element, the control of level becomes easier. 2) There is a problem of relative position between video camera and hopper, so, to get good responses, we treated the problem of relative position by dividing the hopper into three visual areas. 3) It is observed that when inflow rate of granules and width of the hopper are kept constant, H_ is almost constant. This means that the flow pattern is a mass flow state. Thus, H_ becomes the index of control. 4) When inflow rate is constant and width of the hopper becomes wider. H_ becomes greater and the area of uniform flow becomes narrower. Then controlling the level of the hopper is rather difficult in this case. 5) When Q_ =Q_, H_ becomes lower than in the case of Q_ = 0,and the region of uniform flow becomes wider. Controlling the level is rather easy in this case...|$|E
30|$|<b>Image</b> <b>processing</b> module[*]IP module is at {{the heart}} of VISTA {{architecture}} and plays role in <b>image</b> capturing and <b>processing.</b> <b>Image</b> <b>processing</b> module captures the MO image first and then different <b>image</b> <b>processing</b> algorithms are applied on this captured image to convert it from an image to MO silhouette. <b>Image</b> <b>processing</b> module matches this extracted MO silhouette to the stored silhouettes at SN. <b>Image</b> <b>processing</b> module then recognizes the MO at SN and gives result in terms of surety. <b>Image</b> <b>processing</b> module is initialized by receiving MOD message at SNs or it can be directly initialized by sonar interruption at ENs.|$|R
5000|$|Mipmap, Pyramid (<b>image</b> <b>processing)</b> - similar {{techniques}} in <b>image</b> <b>processing</b> ...|$|R
40|$|The {{techniques}} of digital <b>image</b> <b>processing</b> {{have found a}} myriad of applications in diverse fields of scientific, commercial, and technical endeavor. <b>Image</b> <b>processing</b> education therefore needs to cater to {{a wide spectrum of}} people coming from different educational backgrounds. In this paper, we describe tools and techniques that facilitate a gentle introduction to <b>image</b> <b>processing.</b> We present novel LabVIEW-based <b>image</b> <b>processing</b> demonstrations that, when supplemented with Web-based class lectures, illustrate the power and beauty of <b>image</b> <b>processing</b> algorithms. ...|$|R
40|$|Modern image {{collections}} {{cannot be}} processed efficiently on one computer due to large collection sizes and high computational costs of modern <b>image</b> <b>processing</b> algorithms. Hence, <b>image</b> <b>processing</b> often requires distributed computing. However, distributed computing {{is a complicated}} subject that demands deep technical knowledge and often cannot be used by researches who develop <b>image</b> <b>processing</b> algorithms. The framework is needed that allows the researches to concentrate on <b>image</b> <b>processing</b> tasks and hides from them the complicated details of distributed computing. In addition, the framework should provide the researches with the familiar <b>image</b> <b>processing</b> tools. The paper describes the extension to the MapReduce <b>Image</b> <b>Processing</b> (MIPr) framework that provides {{the ability to use}} OpenCV in Hadoop cluster for distributed <b>image</b> <b>processing.</b> The modified MIPr framework allows the development of <b>image</b> <b>processing</b> programs in Java using the OpenCV Java binding. The performance testing of created system on the cloud cluster demonstrated near-linear scalability...|$|R
40|$|Abstract. The {{resource}} limitation of mobile commerce systems cause {{the problem that}} the existing <b>image</b> <b>processing</b> software based on the centralized computing mode had difficulty in running in mobile commerce systems. This paper gives a solution for the problem by adopting web service-based <b>image</b> <b>processing</b> approach. The solution reduces the resource consumption of mobile commerce systems by distributing <b>image</b> <b>processing</b> tasks to service providers, service registry centers and service requesters. Furthermore, a web service discovery algorithm called WBSD is presented. Service providers adopt the WBSD to provide efficient services and increase <b>image</b> <b>processing</b> speed. Compared with traditional methods of <b>image</b> <b>processing,</b> Web service-based <b>image</b> <b>processing</b> method has the advantages of loose coupling and component oriented and can {{take full advantage of}} the computing resources in heterogeneous network. Thus web service-based <b>image</b> <b>processing</b> approach can effectively solve the resource bottle-neck that traditional <b>image</b> <b>processing</b> software had...|$|R
30|$|Although {{the above}} <b>image</b> <b>processing</b> {{algorithms}} in various modern product designs have obtained good image restoration quality, {{the time required}} for <b>image</b> <b>processing</b> is still too long, which is still not suitable for real-time applications. The fundamental reason for the slow <b>image</b> <b>processing</b> is that these algorithms are use nonlinear optimization design, the process contains {{a large number of}} iterations, and too many iterations affect the <b>image</b> <b>processing</b> time. For this problem, this paper reports on application of the embedded block optimization hierarchical tree algorithm to the <b>image</b> <b>processing</b> of modern product design. This can greatly shorten the <b>image</b> <b>processing</b> time, while still retaining the high quality of non-photorealistic art.|$|R
5000|$|Engineering Plaque: Digital Vision for DVNR <b>Image</b> <b>Processing</b> Hardware and DVO <b>Image</b> <b>Processing</b> Software ...|$|R
5000|$|Tools for 2D and 3D <b>image</b> <b>processing</b> and {{morphological}} <b>image</b> <b>processing</b> including <b>image</b> recognition ...|$|R
40|$|Presents an {{approach}} to the decomposition of tasks of computer <b>image</b> <b>processing</b> based {{on the use of}} intermediate semantic model, developed object-oriented language describing the process of <b>image</b> <b>processing</b> and is implemented as software tools for "fast" development of computer <b>image</b> <b>processing</b> in this case. The system used for the experimental study of the feasibility of using specialized methods for <b>image</b> <b>processing</b> text...|$|R
30|$|It is {{precisely}} because of the importance of <b>image</b> <b>processing</b> technology that many researchers have begun research on <b>image</b> <b>processing</b> technology and achieved fruitful results. However, with the deepening of <b>image</b> <b>processing</b> technology research, today’s research has a tendency to develop in depth, and this depth is an in-depth aspect of <b>image</b> <b>processing</b> technology. However, the application of <b>image</b> <b>processing</b> technology is a system engineering. In addition to the deep requirements, there are also systematic requirements. Therefore, if the unified model research on multiple aspects of image application will undoubtedly promote the application of <b>image</b> <b>processing</b> technology. Wavelet transform has been successfully applied in many fields of <b>image</b> <b>processing</b> technology. Therefore, this paper uses wavelet transform as a method to establish a unified model based on wavelet transform. Simulation research is carried out by filtering, watermark hiding, encryption and decryption, and image compression of <b>image</b> <b>processing</b> technology. The results show that the model has achieved good results.|$|R
40|$|<b>Image</b> <b>processing</b> is {{any form}} of {{information}} processing when both the input and output are images. The process does not {{reduce the amount of}} data present but rearranges it. Therefore, the development of <b>image</b> <b>processing</b> software is to enable <b>image</b> <b>processing</b> functions to be applied to input images to acquire an output images that has been processed using this software. The development of this software was done using Visual Basic 6. 0 and includes basic <b>image</b> <b>processing</b> functions such as blurring and sharpening, edge detection and colour balancing. This software was designed to be user-friendly with a simple interface, yet able to perform basic <b>image</b> <b>processing</b> functions effectively. The input images also can be imported from attached webcam. Overall, this development of <b>image</b> <b>processing</b> software is to ensure <b>image</b> <b>processing</b> to be done using less memory space approximately 380 KB compared to existing <b>image</b> <b>processing</b> software which may reach up to 1 GB...|$|R
50|$|Digital <b>image</b> <b>processing</b> {{is the use}} of {{computer}} algorithms to perform <b>image</b> <b>processing</b> on digital <b>images.</b> As a subcategory or field of digital signal <b>processing,</b> digital <b>image</b> <b>processing</b> has many advantages over analog <b>image</b> <b>processing.</b> It allows a much wider range of algorithms to be applied to the input data and can avoid problems such as the build-up of noise and signal distortion during <b>processing.</b> Since <b>images</b> are defined over two dimensions (perhaps more) digital <b>image</b> <b>processing</b> may be modeled in the form of multidimensional systems.|$|R
50|$|CVIPtools (Computer Vision and <b>Image</b> <b>Processing</b> Tools) is an Open Source <b>image</b> <b>processing</b> software. It is {{free for}} use with Windows, and {{previous}} versions are available for UNIX. It is an interactive program for <b>image</b> <b>processing</b> and computer vision.|$|R
2500|$|Digital <b>image</b> <b>processing</b> [...] {{the use of}} {{computer}} algorithms to perform <b>image</b> <b>processing</b> on digital <b>images.</b>|$|R
40|$|Real time <b>image</b> <b>processing</b> {{applications}} {{require a}} huge amount of processing power, computing ability and large resources to perform the <b>image</b> <b>processing</b> applications. The nature of <b>processing</b> in typical <b>image</b> <b>processing</b> algorithms ranges from large arithmetic operations to fewer one. This paper presents an implementation of <b>image</b> <b>processing</b> operations using simultaneous multithreading, the performance of multithreading is analyzed and discussed, for the varying number of images...|$|R
40|$|Bachelor’s thesis {{deals with}} the {{microscope}} image analysis and microscope <b>image</b> <b>processing</b> in LabVIEW. The thesis describes the theory of image analysis and <b>image</b> <b>processing,</b> {{the implementation of the}} measuring devices and the image acquisition using a camera. In an environment LabVIEW program was created image analysis software. The software is divided into <b>image</b> preprocessing, <b>image</b> <b>processing,</b> <b>image</b> analysis and color <b>image</b> <b>processing.</b> The software allows changing the parameters in used functions...|$|R
40|$|AbstractMFC has a {{large number}} of digital image processing-related API functions, {{object-oriented}} and class mechanisms which provides <b>image</b> <b>processing</b> technology strong support in Windows. But in embedded systems, <b>image</b> <b>processing</b> technology dues to the restrictions of hardware and software do not have the environment of MFC in Windows. Therefore, this paper draws on the experience of <b>image</b> <b>processing</b> technology of Windows and transplants it into MiniGUI embedded systems. The results show that MiniGUI/Embedded graphical user interface applications about <b>image</b> <b>processing</b> which used in embedded <b>image</b> <b>processing</b> system can be good results...|$|R
40|$|Abstract—Field {{programmable}} gate arrays (FPGAs) can accelerate <b>image</b> <b>processing</b> {{by exploiting}} fine-grained parallelism opportunities in image operations. FPGA language designs are often subsets or extensions of existing languages, though these typically lack suit-able hardware computation models so compiling them to FPGAs leads to inefficient designs. Moreover, these languages lack <b>image</b> <b>processing</b> domain specificity. Our solution is RIPL 1, an <b>image</b> <b>processing</b> domain specific language (DSL) for FPGAs. It has algorithmic skeletons to express <b>image</b> <b>processing,</b> {{and these are}} exploited to generate deep pipelines of highly concurrent and memory-efficient <b>image</b> <b>processing</b> components. I...|$|R
40|$|Abstract: Aiming at the correctness, {{quality and}} {{efficiency}} of remotely sensed <b>image</b> <b>processing</b> service composition for geospatial applications, a remotely sensed <b>image</b> <b>processing</b> service composition approach is proposed. It includes three main algorithm: (1) remotely sensed <b>image</b> <b>processing</b> service chaining based on heuristic search to composite services into a meaningful order; (2) knowledge navigated remotely sensed <b>image</b> <b>processing</b> service classification and selection, which using data mining to select an appropriate service for specific user requirement; (3) remotely sensed <b>image</b> <b>processing</b> service selection with response time to meet the response time requirement from user. ...|$|R
40|$|The Multimission VICAR Planner (MVP) {{system is}} an AI {{planning}} system which constructs executable <b>image</b> <b>processing</b> programs to support Operational Science Analysis (OSA) requests {{made to the}} Jet Propulsion Laboratory (JPL) Multimission <b>Image</b> <b>Processing</b> Subsystem (MIPS). MVP accepts as in-put: image files and a high-level specification of de-sired corrections, enhancements, output properties (such as for mosaics). MVP then derives: unspec-ified but required <b>processing</b> steps, relevant <b>image</b> <b>processing</b> library programs, and appropriate pa-rameter settings for such programs- constructing an executable <b>image</b> <b>processing</b> program to fill the <b>image</b> <b>processing</b> request. MVP is currently avail...|$|R
40|$|An {{information}} <b>processing</b> <b>apparatus</b> {{includes a}} processor that {{is capable of}} switching a performance level to one of a plurality of performance levels with different power consumption, and a storage unit that stores a program for controlling the performance level of the processor. The processor executing the program detects the periodicity of load variation of the information <b>processing</b> <b>apparatus,</b> and changes, according to the periodicity of the load variation, a determination interval for determining whether to switch the performance level of the processor. Fujitsu LimitedThe Georgia Tech Research Corporatio...|$|R
40|$|Abstract—In {{the process}} of real time <b>image</b> <b>processing,</b> the amount of <b>image</b> <b>processing</b> {{computing}} and data is very large, the use of single core or a single DSP can not {{meet the needs of}} real-time <b>image</b> <b>processing.</b> This paper designs the new generation multi-core DSP real-time <b>image</b> <b>processing</b> system, the system is a multi-core high performance DSP as the core circuit, and also uses FPGA counterweight device, high-speed data interface and high-speed external memory, to improve the data cache speed and data bandwidth, and the system satisfies the design of low loss and high computational performance. In order to verify the validity and reliability of the system, this paper uses the Hyper Lynx software to carry on the simulation test for the system, and sets the IP and sub net mask of <b>image</b> real time <b>processing</b> to obtain the eye and timing diagram of real-time <b>image</b> <b>processing.</b> Finally, the system <b>image</b> <b>processing</b> performance results can be obtained by the joint debugging, the simulation test results can be seen that the speed of real-time <b>image</b> <b>processing</b> is quick, and the rate of correct recognition is high, which can satisfy the need of real-time <b>image</b> <b>processing,</b> to provide the technical reference for the design of real time <b>image</b> <b>processing</b> system...|$|R
50|$|Quantum-assisted digital <b>image</b> <b>processing</b> (QDIP): These {{applications}} aim {{at improving}} digital or classical <b>image</b> <b>processing</b> tasks and applications.|$|R
40|$|This paper {{deals with}} the {{implementation}} of algorithms in the specific domain of <b>image</b> <b>processing.</b> Although many <b>image</b> <b>processing</b> libraries are available, they generally lack gener-icity and flexibility. Many <b>image</b> <b>processing</b> algorithms can be expressed as compositions of elementary algorithmic operations referred to as blocks. Implementing these compositions is achieved using generic programming. Our solution is compared to previous ones and we demonstrate it on a class <b>image</b> <b>processing</b> algorithms...|$|R
40|$|Many <b>image</b> <b>processing</b> tasks {{exhibit a}} high degree of data {{locality}} and parallelism and map quite readily to specialized massively parallel computing hardware. However, as distributed memory machines are becoming a viable and economical parallel computing resource, {{it is important to understand}} how to use these environments for parallel <b>image</b> <b>processing</b> as well. In this paper we discuss our implementation of a parallel <b>image</b> <b>processing</b> software library (the Parallel <b>Image</b> <b>Processing</b> Toolkit). The library is easily extensible and hides the parallelism from the user. Inside the Toolkit, a message-passing model of parallelism is designed around the Message Passing Interface (MPI) standard. Experimental results are presented to demonstrate the parallel speedup obtained with the Parallel <b>Image</b> <b>Processing</b> Toolkit in a typical workstation cluster over a wide variety of <b>image</b> <b>processing</b> tasks. We also discuss load balancing and the potential for parallelizing portions of <b>image</b> <b>processing</b> tasks [...] ...|$|R
40|$|This paper {{describes}} {{several issues}} of parallelizing an <b>image</b> <b>processing</b> application. The parallelization is performed both automatically and user controlled at the application code level. The sequential <b>image</b> <b>processing</b> library is not modi ed. A solution for parallelizing an <b>image</b> <b>processing</b> library is also proposed...|$|R
30|$|Yao run, female, an {{undergraduate}} majoring {{in computer science}} and technology at Beijing normal university, has studied graphics, digital <b>image</b> <b>processing,</b> and computer vision and has {{a strong interest in}} <b>image</b> <b>processing.</b> She have a national patent and have published papers in the field of <b>image</b> <b>processing.</b>|$|R
50|$|<b>Image</b> <b>processing</b> usually {{refers to}} digital <b>image</b> <b>processing,</b> but optical and analog <b>image</b> <b>processing</b> also are possible. This article is about general {{techniques}} {{that apply to}} all of them. The acquisition of images (producing the input image in the first place) {{is referred to as}} imaging.|$|R
5000|$|<b>Image</b> <b>processing</b> {{with the}} MeVis <b>Image</b> <b>Processing</b> Library (ML): The ML is a request-driven, page-based, modular, {{expandable}} C++ <b>image</b> <b>processing</b> library supporting {{up to six}} image dimensions (x, y, z, color, time, user dimensions). It offers a priority-controlled page cache and high performance for large data sets.|$|R
