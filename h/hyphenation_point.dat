4|8|Public
5000|$|In Taiwan, the <b>hyphenation</b> <b>point</b> (...) (U+2027 [...] ) is {{used instead}} for the same purpose.|$|E
5000|$|Various {{dictionaries}} use the interpunct (in this context, {{sometimes called}} <b>hyphenation</b> <b>point)</b> to indicate syllabification within {{a word with}} multiple syllables. There is also a separate Unicode character, [...]|$|E
5000|$|The \hyphenation command {{declares}} allowed hyphenation points, where {{words is}} a list of words, separated by spaces, in which each <b>hyphenation</b> <b>point</b> is indicated by a - character. For example ...|$|E
5000|$|It then compares {{each word}} with a known list of {{correctly}} spelled words (i.e. a dictionary). This might contain just {{a list of}} words, or it might also contain additional information, such as <b>hyphenation</b> <b>points</b> or lexical and grammatical attributes.|$|R
40|$|The {{problems}} of automatic compound word and discretionary hyphenation in TEX are discussed. At present, such <b>hyphenation</b> <b>points</b> {{have to be}} marked manually in the TEX source file. Several methods for tackling with these problems are presented. The results obtained from experiments with a German word-list are discussed...|$|R
40|$|The {{problems}} of the automatic compound word and discretionary hyphenation in TEX are discussed. These <b>hyphenation</b> <b>points</b> have to be marked manually in the TEX source file so far. Several methods how to tackle with these problems are observed. The results obtained from experiments with German word-list are discussed...|$|R
5000|$|The {{partition}} sign (Unicode code point U+2027, <b>Hyphenation</b> <b>Point)</b> {{is used in}} Chinese (which generally lacks spacing between characters) to mark {{divisions in}} transliterated foreign words, particularly names. This is properly (and on Taiwan formally) a full-width punctuation mark, although sometimes narrower forms are substituted for aesthetic reasons. In particular, the regular interpunct is more commonly used as a computer input, although Chinese-language fonts typically render this as full width. When the Chinese text is romanized, the partition sign is simply replaced by a standard space or other appropriate punctuation. Thus, William Shakespeare is signified as [...] or [...] (p Wēilián Shāshìbǐyà), George W. Bush as [...] or [...] (p Qiáozhì W. Bùshí), and the full name of the prophet Muhammad as [...] (p Ābù Kǎxīmù Mùhǎnmòdé Běn Ābùdùlā Běn Ābùdùlè-Mùtǎlìbǔ Běn Hāxīmǔ). Titles and other translated words are not similarly marked: Genghis Khan and Elizabeth II are simply [...] and [...] or [...] without a partition sign.|$|E
40|$|We are {{discussing}} our experiments we made when learning {{feedforward neural network}} to find possible <b>hyphenation</b> <b>points</b> in all words of given language. Neural networks show {{to be a good}} device for solving this difficult problem. The structure of the multilayer neural network used is given, together with a discussion about training sets, influence of input coding and results of experiments done for the Czech language. We end up with pros and cons of our approach tested [...] -hybrid architecture suitable for a multilingual system. Keywords: neural networks, hyphenation, back propagation 1 Introduction "The invention of the alphabet {{was one of the greatest}} advances in the history of civilization. However, the ancient Phoenicians probably did not anticipate the fact that, centuries later, the problem of word hyphenation would become a major headache for computer typesetters all over the world. " (Liang, 1983) (Liang 1983, page 39) The problem of finding all permissible <b>hyphenation</b> <b>points</b> in a [...] ...|$|R
40|$|We are {{discussing}} our experiments we made to learn {{feed-forward neural network}} for task of finding valid <b>hyphenation</b> <b>points</b> in all words of given language. Multilayer neural networks were succesfully used for solving of this difficult problem. The structure of the network used is given, together with a discussion about training sets, influence of input coding and results of experiments done for the Czech language. We end up with {{pros and cons of}} tested approach—hybrid architecture suitable for a multilingual system...|$|R
40|$|The {{problems}} of the automatic compound word and discretionary hyphenation in TEX are discussed. These <b>hyphenation</b> <b>points</b> have to be marked manually in the TEX source file so far. Several methods how to tackle with these problems are observed. The results obtained from experiments with German word-list are discussed [...] problems [with hyphenation] have more or less disappeared, and I’ve learnt that this is only because, nowadays, every hyphenation in the newspaper is manually checked by human proof-readers. (Jarnefors, 1995...|$|R
40|$|We are {{discussing}} our experiments we made to learn {{feed-forward neural network}} for task of finding valid <b>hyphenation</b> <b>points</b> in all words of given language. Multilayer neural networks were succesfully used for solving of this difficult problem. The structure of the network used is given, together with a discussion about training sets, influence of input coding and results of experiments done for the Czech language. We end up with {{pros and cons of}} tested approach [...] -hybrid architecture suitable for a multilingual system. Keywords: neural networks, hyphenation, back propagation, generalisation, typesetting 1 Introduction "The invention of the alphabet {{was one of the greatest}} advances in the history of civilisation. However, the ancient Phoenicians probably did not anticipate the fact that, centuries later, the problem of word hyphenation would become a major headache for computer typesetters all over the world. " (Liang, 1983) (Liang 1983, page 39) The problem of finding all va [...] ...|$|R
40|$|The line {{breaking}} problem is as follows: given some text and a page to print to, {{where are the}} best places to start new lines within the paragraphs for the most visually appealing layout? The most well-known and used optimising typesetting software is TEX, which solves the {{line breaking}} problem according to an internal function of a paragraph’s “badness. ” We propose an alternative formulation of the problem in which the quality of a candidate paragraph is measured along several objective functions which are easily defined by real-world solution-space metrics. Rather than presenting a single solution to the user, our algorithm finds the Pareto-optimal set of paragraphs given a set of objective functions. To support our algorithm, we devise a new method for determining feasible <b>hyphenation</b> <b>points</b> within a paragraph in a single pass, which is general enough to apply to and improve the original TEX algorithm. Our results show that global multiple objective paragraph optimisation gives solutions con-sistently better than TEX along our real-world metrics, and that a range of solutions are returned representing a genuine trade-off in typographic quality...|$|R

