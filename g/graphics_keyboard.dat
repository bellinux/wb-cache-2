3|33|Public
2500|$|The {{built-in}} operating system, Acorn MOS, {{provided an}} extensive API {{to interface with}} all standard peripherals, ROM-based software and the screen. Features private to some versions of BASIC, like vector <b>graphics,</b> <b>keyboard</b> macros, cursor-based editing, sound queues and envelopes, {{were placed in the}} MOS ROM and made available to any application. [...] BBC BASIC itself, being in a separate ROM, could be replaced with any equivalent language.|$|E
50|$|ThinLinc uses SSH for {{transport}} encryption and authentication, and VNC for <b>graphics,</b> <b>keyboard</b> and mouse. Access to client devices is provided through different open protocols such as PulseAudio for sound (playback and recording), NFS for file system access (using a user space NFS server), and Telnet/RFC2217 for serial port access. Access to a client-side Smart Cards is provided via the PC/SC interface using a proprietary protocol.|$|E
5000|$|... #Subtitle level 3: The {{harmonized}} 48 <b>graphic</b> key <b>keyboard</b> arrangement ...|$|R
5000|$|User interfaces: Four octave <b>keyboard,</b> <b>graphics</b> display with {{lightpen}} ...|$|R
50|$|Matrix Pattern Sequencer - This is {{an analog}} style {{sequencer}} {{with a maximum}} of 32 steps per pattern and {{is the part of}} Reason to use for ReBirth style sequences. The Matrix has 32 patterns and each can be freely sized regardless of what time signature has been chosen in the sequencer. The Resolution selector allows playback of the pattern in a range between 1/2 notes to 1/128th notes. The playback resolution is independent of the sequencer, and the display shows the 32 steps and a little <b>graphic</b> <b>keyboard</b> on the left hand side will tell what notes are being played. A switch left of the graphical keyboard gives access to 5 octaves within the programming interface. Moving the mouse over {{the lower part of the}} display will allow change of velocity levels.|$|R
40|$|The human-machine {{interface}} (HMI) is {{the collection of}} screens, <b>graphic</b> displays, <b>keyboards,</b> switches, and other technologies used by the operator to monitor and interact with the control system (typically DCS or SCADA.) The design of the HMI plays {{a critical role in}} determining the operator’s ability to effectively manage the operation, particularly in respons...|$|R
50|$|The game {{is written}} mostly in {{compiled}} BASIC v1.0, {{with a few}} assembly modules linked in for <b>graphics,</b> sound, and <b>keyboard</b> support. This can be confirmed {{by looking at the}} executable.|$|R
50|$|For {{cases where}} no {{national}} keyboard layout is available, {{or to be}} used as an additional group on layouts designed for other scripts than Latin, the standard specifies a “Complementary Latin group layout”. It is based on the “harmonized 48 <b>graphic</b> key <b>keyboard</b> arrangement” as defined in ISO/IEC 9995-2 (see description above). The assignment shown with red background shall occur once at one of the indicated positions.|$|R
50|$|Each PLOrk “instrument” {{consists}} of a laptop, a multi-channel hemispherical speaker, {{and a variety of}} “control” devices (<b>keyboards,</b> <b>graphics</b> tablets, sensors). The members of this ensemble act as performers, researchers, composers, and software developers.|$|R
50|$|The {{meaning of}} the key's {{abbreviation}} is not explicitly given in many IBM PC compatible technical reference manuals. However, IBM states that AltGr is an abbreviation for alternate <b>graphic,</b> and Sun <b>keyboards</b> label the key as Alt Graph.|$|R
40|$|Computerized {{facilities}} automation {{and energy}} management {{systems can be}} used to maintain high levels of facilities operations efficiencies. The monitoring capabilities provides the current equipment and process status, and the analysis capabilities can help pinpoint the equipment performance level and variations. The arithmetic and logic capabilities {{can be used to}} generate sophisticated and interactive control strategies. The communications capabilities provide management information through use of terminals, displays, printed reports and <b>graphics.</b> The <b>keyboard</b> function allows a wide range of operator inquiries and commands...|$|R
50|$|To {{select the}} Level 3 (if this is present on a layout), {{at least one}} Level 3 select key (frequently marked AltGr) shall be present. On {{keyboards}} compliant to the “harmonized 48 <b>graphic</b> key <b>keyboard</b> arrangement” (see above), such keys shall be placed in row A or row B. It is to be noted that, like for the shift keys, the exact function of these keys (commonly pressing them together with the affected character input key) is not specified in the standard.|$|R
50|$|Tandy shipped PC's {{with their}} own {{customized}} version of MS-DOS, which are compatible with tandy <b>graphics</b> and <b>keyboard.</b> The most current version of MS-DOS for Tandy 1000 is DOS 3.22.There may be compatibility issues with later versions of DOS such as DOS 5 and DOS 6.Tandy 1000 is limited to 640k main memory, and non-Tandy versions of DOS often reduce the memory available for applications and games. Tandy 1000 could work with Windows 1.0, 2.0 and 3.0 but not 3.1.|$|R
50|$|Although the TS2068's main {{improvements}} {{over the}} original Spectrum were {{in areas that}} had come in for widespread criticism (<b>graphics,</b> sound, <b>keyboard</b> and—to a lesser extent—the lack of joystick ports and cartridge support), it was not {{used as the basis}} for the Spectrum's successors. The ZX Spectrum+ (1984) changed the keyboard only, and even the ZX Spectrum+ 128K (announced in May 1985, but not released in the UK until February 1986) retained the original machine's graphical capabilities. However, unlike the UK models, the TS2068 was not burdened by the requirement of compatibility with previous models.|$|R
5000|$|Aregon International rewrote the Cyclops content {{authoring}} system as the Excom 100 Studio and created and produced the Excom 100 terminal, a commercial {{version of the}} Cyclops terminal incorporating lightpen, <b>graphics</b> tablet, and <b>keyboard</b> as input devices. Excom 100 was awarded the BCS IT award in the [...] "Application" [...] category for 1983. http://www.bcs.org/server.php?show=conWebDoc.1926 03:20, 13 November 2010 (UTC) ...|$|R
5000|$|The Mazovia {{encoding}} {{was designed}} in 1984 by Jan Klimowicz of [...] It {{was designed as}} part of a project to develop and produce a Polish IBM PC clone codenamed [...] "". The code page was therefore optimized for that computer's typical peripheral devices, a graphics card with dual switchable <b>graphics,</b> a <b>keyboard</b> using US English and Russian layouts and printers with Polish fonts. In 1986, the Polish National Bank (NBP) adopted the Mazovia encoding as a standard, thereby causing its widespread acceptance and distribution in Poland. They also were instrumental in Ipaco producing compatible computers with Taiwanese components under the direction of [...] and Krzysztof Sochacki.|$|R
50|$|The HP 200LX Palmtop PC (F1060A, F1061A, F1216A), {{also known}} as project Felix, is a {{personal}} digital assistant introduced by Hewlett-Packard in August 1994. It was often called a Palmtop PC, and it was notable that it was, with some minor exceptions, a MS-DOS-compatible computer in a palmtop format, complete with a monochrome <b>graphic</b> display, QWERTY <b>keyboard,</b> serial port, and PCMCIA expansion slot.|$|R
50|$|These are logical {{entities}} that handles the {{input and output}} of different hardware devices (microphone, <b>graphic</b> tablet, <b>keyboard)</b> and software services (motion detection, biometric changes) associated with the multimodal system. For example, (see figure below), a modality component A can be charged {{at the same time}} of the speech recognition and the audio input management. Another modality component B can manage the complementary command inputs on two different devices: a graphics tablet and a microphone. Two modality components C, can manage separately two complementary inputs given by a single device: a camcorder. And finally, a modality component D, can use an external recognition web service and only be responsible for the control of communication exchanges needed for the recognition task.|$|R
50|$|Genius is {{computer}} peripherals brand {{established by}} KYE Systems Corp. in 1985. Genius offers full range solution for PC products, mobile phone and Tablet PC, including mice, <b>keyboards,</b> <b>graphics</b> tablets, touch pen, power banks, webcams, speakers, headphones, microphones, sleeves, backpacks, and professional gaming gear under the GX Gaming Series. For six consecutive years, beginning in 2005, Genius {{was recognized as}} one of Taiwan’s Top 20 Global Brands, and has won multiple national awards from IF, Red Dot, CES, CeBIT and others.|$|R
50|$|It used a 2 MHz Zilog Z80A microprocessor, with 16Kb {{of random}} access memory and 16Kb of {{read-only}} memory. The video output was through a PAL-M television with 16×32/64 within text mode and 48×128 points within the <b>graphic</b> mode. The <b>keyboard</b> contained 51 keys and was stored in the same case as the cassette recorder and the processor unit. The BASIC used was Level II, {{which was in the}} 16Kb of the ROM. Nowadays it is very rare even in Brazilian vintage computer market.|$|R
50|$|To {{differentiate}} from general keyboard input, most keyboard shortcuts require {{the user to}} press and hold several keys simultaneously or a sequence of keys one after the other. Unmodified key presses are sometimes accepted when the keyboard is not used for general input - such as with graphics packages e.g. Adobe Photoshop or IBM Lotus Freelance <b>Graphics.</b> Other <b>keyboard</b> shortcuts use function keys that are dedicated for use in shortcuts and may only require a single keypress. For simultaneous keyboard shortcuts, one usually first holds down the modifier key(s), then quickly presses and releases the regular (non-modifier) key, and finally releases the modifier key(s). This distinction is important, as trying to press all the keys simultaneously will frequently either miss some of the modifier keys, or cause unwanted auto-repeat. Sequential shortcuts usually involve pressing and releasing a dedicated prefix key, such as the Esc key, followed {{by one or more}} keystrokes.|$|R
50|$|The xx60 series {{featured}} second-generation Intel Core i series processors, {{a choice}} of Sandy Bridge integrated or AMD Radeon HD 6470M discrete <b>graphics</b> and chiclet-style <b>keyboards.</b> All models except the 2760p used 16:9 displays. Mobile workstation models featured Nvidia Quadro or AMD FirePro graphics. The notebooks were also completely redesigned, with a more boxy shape and less plastic used on the surfaces, {{as well as a}} larger glass touchpad. The multiple access panels {{on the bottom of the}} notebooks were replaced with a single panel enabling access to all of the internal components.|$|R
40|$|In this paper, a {{new voice}} source model for {{real-time}} gesture–controlled voice synthesis is described. The synthesizer {{is based on a}} causal-anticausal model of the voice source, a new approach giving accurate control of voice source dimensions like tenseness and effort. Aperiodic components are also considered, resulting in an elaborate model suitable not only for lyrical singing but also for various musical styles playing with voice qualities. The model is also tested using different gestural control interfaces: data glove, <b>keyboard,</b> <b>graphic</b> tablet, pedal board. Depending on parameter-to-interface mappings, several instruments with different musical abilities are designed, taking advantage of the highly expressive possibilities of the synthesis model...|$|R
25|$|The early {{versions}} of Windows are {{often thought of}} as graphical shells, mostly because they ran on top of MS-DOS and use it for file system services. However, even the earliest Windows versions already assumed many typical operating system functions; notably, having their own executable file format and providing their own device drivers (timer, <b>graphics,</b> printer, mouse, <b>keyboard</b> and sound). Unlike MS-DOS, Windows allowed users to execute multiple graphical applications at the same time, through cooperative multitasking. Windows implemented an elaborate, segment-based, software virtual memory scheme, which allows it to run applications larger than available memory: code segments and resources are swapped in and thrown away when memory became scarce; data segments moved in memory when a given application had relinquished processor control.|$|R
50|$|Migrating from Windows 9x to XP can be {{an issue}} for users {{dependent}} upon MS-DOS. Although XP comes {{with the ability to}} run DOS programs in a virtual DOS machine, it still has trouble running many old DOS programs. This is largely because it is a Windows NT system and does not use DOS as a base OS, and because the Windows NT architecture is different from Windows 9x. Some DOS programs that cannot run natively on XP, notably programs that rely on direct access to hardware, can be run in emulators, such as DOSBox or virtual machines, like VMware, Virtual PC, or VirtualBox. This also applies to programs that only require direct access to certain common emulated hardware components, like memory, <b>keyboard,</b> <b>graphics</b> cards, and serial ports.|$|R
40|$|This work {{is about}} design, implementation, menu and {{communication}} with superior system for gamaspectrometer. The {{first part of}} the document describes basic principles of measuring of gamma spectra and their processing. The second part describes in basics software core of the spectrometer, handling of the <b>keyboard,</b> <b>graphic</b> and text output. Used algorithms are described, and their implementation. The third part contains analysis of requirements on menu, basic concepts of menu control. Next, it is described how to handle inputs from user, like numbers, date and time, and also how to solve the menu for display of values and for input of values. The forth part describes requirements for communication with superior system (PC), analyses how to do deal with this and reasons for this solution. The conclusion brings all concepts used in the previous chapters and reached goals...|$|R
40|$|Augmented Reality (AR) is a {{variation}} of virtual reality. It allows the user to see computer generated virtual objects superimposed upon the real world {{through the use of}} some kind of see-through headmounted display. Human users of such system can interact with the virtual world and have additional information, such as character description of physical objects and instruction for performing physical tasks in form of annotation, speech instruction, image, and 3 D model. This paper describes our work of building a wireless augmented reality prototype, which supports video-based 3 D <b>graphics</b> and a <b>keyboard</b> interface over wearable computers to interact with virtual objects. A new technique for identifying real world objects and estimating their coordinate systems is introduced. The method utilizes a Binary Square Marker, which can identify a great number of real world objects with markers tagged on them by using computer vision techniques...|$|R
40|$|This paper {{discusses}} {{several ways}} in which the use of a Tablet PC by a professor can enhance instruction and productivity. A Tablet PC allows the user to enter information as they would with pen and paper, making it more intuitive than trying to express ideas involving text and <b>graphics</b> using a <b>keyboard</b> and mouse. Judicious use of the Tablet PC can enhance interaction and student engagement during class sessions, and allow professors to provide richer content to students on course web sites. The Tablet PC allows for the electronic storage of documents that include ink annotation, reducing the need for hard copies of many documents, including graded student assignments. The need to assess to what extent the use of Tablet PCs actually improves student interaction, engagement and achievement will be addressed as the University of Detroit Mercy embarks on a compulsory Tablet PC program for incoming students in September 2007. ...|$|R
40|$|The Canadian Geospatial Standards in Action is an {{initiative}} that impels {{the progression of}} geographic information technology by showcasing Canadian standards-based products {{as part of an}} integrated geospatial architecture. This initiative reflects the strategy taken by both the International Organization for Standardization, Technical Committee 211 on Geographic Information and Geomatics (ISO/TC 211), and by Open GIS Consortium (OGC). ISO/TC 211 provides a suite of abstract standards specifications that defines framework, geospatial data models, data administration, and services, while OGC delivers spatial interface specifications that are openly available for global use and that can be implemented in products. Geospatial Standards provide connectivity amongst the user interfaces, data servers and storage warehouses in the three-tiered geospatial architecture by defining a minimum set of practices, protocols, and specifications. This allows for increased and timely access to a vast quantity of geospatial data in a usable format. The Canadian Geospatial Standards Architecture as defined in this paper is broken into three component tiers that provide maximum portability across computer operating systems. The client tier displays information and processes <b>graphics,</b> communication, <b>keyboard</b> input, and local applications. The applications service tier encompasses a set of shareable, multi-tasking components that interact with clients, peer services, and the other data source tiers. The data source tier has the data and metadata configurations and environments. Canadian industry is building standards-based products and system components in support of the Canadian national requirement...|$|R
2500|$|The {{idea for}} SAGE {{grew out of}} Project Whirlwind, a World War II {{computer}} development effort, when the War Department realized that the Whirlwind computer might anchor a continent-wide advance warning system. Developed during the 1950s by Massachusetts Institute of Technology (MIT) Lincoln Laboratories engineers and scientists for the U.S. Air Force, SAGE monitored North American skies for possible attack by manned aircraft and missiles for twenty-five years. Aside from its strategic importance, SAGE set the foundation for mass data-processing systems and foreshadowed many computer developments of the 1960s. The heart of the system, the IBM AN/FSQ-7 computer, was the first computer to have an internal memory composed of [...] "magnetic cores," [...] thousands of tiny ferrite rings that served as reversible electromagnets. SAGE also introduced computer-driven <b>graphic</b> displays, online <b>keyboard</b> terminals, time-sharing, high-availability computation with a redundant AN/FSQ-7 to fail over if the primary system went down, digital signal processing, digital transmission over leased telephone lines, digital track-while-scan, digital simulation, computer networking, and duplex computing.|$|R
40|$|The Masked Priming Toolbox is an {{open-source}} {{collection of}} MATLAB functions that utilizes the free third-party PsychToolbox- 3 (PTB 3 : Brainard, Spatial Vision, 10, 433 - 436, 1997; Kleiner, Brainard & Pelli, Perception, 36, 2007; Pelli, Spatial Vision, 10, 437 - 442, 1997). It {{is designed to}} allow a researcher to run masked (and unmasked) priming experiments {{using a variety of}} response devices (including <b>keyboards,</b> <b>graphics</b> tablets and force transducers). Very little knowledge of MATLAB is required; experiments are generated by creating a text file with the required parameters, and raw and analyzed data are output to Excel (as well as MATLAB) files for further analysis. The toolbox implements a variety of stimuli for use as primes and targets, as well as a variety of masks. Timing, size, location, and orientation of stimuli are all parameterizable. The code is open-source and made available on the Web under a Creative Commons License...|$|R
5000|$|The {{idea for}} SAGE {{grew out of}} Project Whirlwind, a World War II {{computer}} development effort, when the War Department realized that the Whirlwind computer might anchor a continent-wide advance warning system. Developed during the 1950s by Massachusetts Institute of Technology (MIT) Lincoln Laboratories engineers and scientists for the U.S. Air Force, SAGE monitored North American skies for possible attack by manned aircraft and missiles for twenty-five years. Aside from its strategic importance, SAGE set the foundation for mass data-processing systems and foreshadowed many computer developments of the 1960s. The heart of the system, the IBM AN/FSQ-7 computer, was the first computer to have an internal memory composed of [...] "magnetic cores," [...] thousands of tiny ferrite rings that served as reversible electromagnets. SAGE also introduced computer-driven <b>graphic</b> displays, online <b>keyboard</b> terminals, time-sharing, high-availability computation with a redundant AN/FSQ-7 to fail over if the primary system went down, digital signal processing, digital transmission over leased telephone lines, digital track-while-scan, digital simulation, computer networking, and duplex computing.|$|R
40|$|I Two University OIE Michigan {{engineers}} were videotaped and timed as they co 1 labor;zted i n set t ing up an NCR PC- 8, a personal computer, {{based on the}} Intel 80286 processor, Their dialog, a resul t of the subjects-in-tandem method u!;ed here, identified weaknesses in the current setup procedure. In the f i r s t of two sessions, participants unpacked the system unit, then unpacked and installed t h e <b>keyboard,</b> <b>graphics</b> card, RAM expansion, co-processo~:, and display. After {{an hour and a}} half, they gave up when they were unable t o i n s t a l l the 360 K floppy drive. 1 After NCR f i e l d engineers spent {{a day and a half}} completing ins ta l la t ion of the floppy, running the diagnostics, and running the fdisk program, the participants returned. Participants spent another hour and a half unpacking the til,t and swivel mechanism, instal l ing t h e fee t, checking the key lock, running the demonstration program, duplicating a DOS disk, set t ing up the hard disk, and copying f i l e s t o it...|$|R
40|$|Augmented Reality (AR) is a {{variation}} of Virtual Reality (VR). It allows the user to see computer generated virtual objects aligned with or superimposed upon objects {{in the real world}} through the use of some kind of see-through head-mounted display. Human users of such system can interact with the virtual world and perceive information, such as character descriptions of physical objects and instructions for performing physical tasks, in form of annotations, speech instructions, images and 3 D models, from input devices such as screens, microphones, or haptic devices. This thesis describes our work of building a wireless collaborative augmented reality system, which supports vision-based tracking, video-based 3 D <b>graphics,</b> and a <b>keyboard</b> interface over wearable computers to interact with virtual objects. Our goal is to have all the mobile users who work in the same real world space share the predefined virtual space and interact with the virtual world in real time. Multi-player Games in AR domain and Collaborative Conferences are two typical applications. One of the most critical requirements for augmented reality applications is to recognize and locate real world objects with respect to the person's head position and orientation. In this thesis, we propose a new technique for identifying real world objects. The method utilizes a Binary Square Marker, which can identify a great number of real world objects with markers tagged on them by using computer vision techniques. The marker is a link between the real world and the virtual world. It can be detected by a CCD camera attached to a mobile device. The marker works to determine the 3 D position and orientation of the object with the marker tagged on it, as well as its unique ID number. Our technique is based on the observation that given four vertices of a square marker region, the coordinates of the projection of every point on the marker can be computed as a linear combination of the coordinates of the projections of four vertices under the assumption of affine transformation...|$|R

