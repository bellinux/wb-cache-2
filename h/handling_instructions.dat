43|106|Public
5|$|In {{response}} to the incident, the United States Department of Defense (DoD) and USAF conducted an investigation, the results of which were released on 19 October 2007. The investigation concluded that nuclear weapons handling standards and procedures had not been followed by numerous USAF personnel involved in the incident. As a result, four USAF commanders were relieved of their commands, numerous other USAF personnel were disciplined or decertified to perform certain types of sensitive duties, and further cruise missile transport missions from—and nuclear weapons operations at—Minot Air Force Base were suspended. In addition, the USAF issued new nuclear weapons <b>handling</b> <b>instructions</b> and procedures.|$|E
25|$|Detonators {{are also}} {{detailed}} with physical descriptions, <b>handling</b> <b>instructions,</b> and burning rates. Detonators covered include: Cordtex and FID.|$|E
25|$|As the {{aircraft}} approached Kaimana, the Captain gave several {{instructions to the}} First Officer related to the direction, speed, altitude and power setting of {{the aircraft}}. This type of interaction between the Captain and the First Officer suggested a steep trans-cockpit authority gradient in which the First Officer may not challenge the decisions and actions of the Captain. The Captain may have lack of trust to the First Officer, as indicated by giving the First Officer <b>handling</b> <b>instructions</b> and took over the control during {{the final phase of}} the approach. The action of the Captain may have created additional workload to the Captain and reduced his situational awareness.|$|E
40|$|Stainless steel {{pressure}} cooker with two small black bakelite <b>handles.</b> <b>Instructions</b> engraved into lid which has black bakelite screw {{top and a}} pressure release. has three small baskets inside to separate food. Maker: Prestige. Date: 1950 - 1959 - from the The Betty Smithers Design Collection at Staffordshire University. ...|$|R
50|$|Current designs {{work best}} when the {{computer}} is running only one program. However, nearly all modern operating systems allow running multiple programs together. For the CPU to change over and do work on another program needs costly context switching. In contrast, multi-threaded CPUs can <b>handle</b> <b>instructions</b> from multiple programs at once.|$|R
25|$|Greenwald, I.D., <b>Handling</b> Macro <b>Instructions.</b> CACM 2, No. 11 (1959), 21-22.|$|R
25|$|Special <b>handling</b> <b>instructions</b> for {{breakage}} are {{not printed}} on the packaging of household CFL bulbs in many countries. The amount of mercury released by one bulb can temporarily exceed U.S. federal guidelines for chronic exposure. Chronic, however, implies exposure for a significant time, and it remains unclear what the health risks are from short-term exposure to low levels of elemental mercury. Despite following EPA best-practice clean-up guidelines on broken CFLs, researchers were unable to remove mercury from carpet, and agitation of the carpet— such as by young children playing— created localized concentrations as high as 0.025mg/m3 in air close to the carpet, even weeks after the initial breakage.|$|E
25|$|MIPS I has {{instructions}} for signed and unsigned integer multiplication and division. These instructions source their operands from two GPRs and write their results {{to a pair}} of 32-bit registers called HI and LO, since they may execute separately from (and concurrently with) the other CPU instructions. For multiplication, the high- and low-order halves of the 64-bit product is written to HI and LO (respectively). For division, the quotient is written to LO and the remainder to HI. To access the results, a pair of instructions (Move from HI and Move from LO) is provided to copy the contents of HI or LO to a GPR. These instructions are interlocked: reads of HI and LO do not proceed past an unfinished arithmetic instruction that will write to HI and LO. Another pair of instructions (Move to HI or Move to LO) copies the contents of a GPR to HI and LO. These instructions are used to restore HI and LO to their original state after exception <b>handling.</b> <b>Instructions</b> that read HI or LO must be separated by two instructions that do not write to HI or LO.|$|E
2500|$|Special <b>handling</b> <b>instructions</b> are {{additional}} markings which {{used in conjunction}} with a classification marking to indicate the nature or source of its content, limit access to designated groups, and / or to signify the need for enhanced handling measures. [...] In addition to a paragraph near the start of the document special <b>handling</b> <b>instructions</b> include Descriptors, Codewords, Prefixes and national caveats.|$|E
5000|$|Relocation to Sauwald, <b>instruction</b> in <b>handling</b> explosives, <b>instruction</b> in ambushing, map reading ...|$|R
50|$|Among U.S. {{government}} information, FOUO {{is primarily}} {{used by the}} U.S. Department of Defense as a <b>handling</b> <b>instruction</b> for Controlled Unclassified Information (CUI) which may be exempt from release under exemptions two through nine of the Freedom of Information Act (FOIA). It {{is one of the}} various sub-categorizations for strictly unclassified information which, on 24 February 2012, was officially consolidated as CUI.|$|R
50|$|The KSR-1 {{processor}} {{was implemented}} as a four-chip set in 1.2 micrometer complementary metal-oxide-semiconductor (CMOS). These chips were: the cell execution unit, the floating point unit, the arithmetic logic unit, and the external I/O unit (XIO). The CEU <b>handled</b> <b>instruction</b> fetch (two per clock), and all operations involving memory, such as loads and stores. 40-bit addresses were used, going to full 64-bit addresses later. The integer unit had 32, 64-bit-wide registers. The floating point unit is discussed below. The XIO {{had the capacity}} of 30 MB/s throughput to I/O devices. It included 64 control and data registers.|$|R
2500|$|The {{back of the}} {{cartridge}} bears a label with <b>handling</b> <b>instructions.</b> Production and software revision codes were imprinted as stamps on the back label to correspond with the software version and producer. All licensed NTSC and PAL cartridges are a standard shade of gray plastic, {{with the exception of}} The Legend of Zelda and , which were manufactured in gold-plastic carts. Unlicensed carts were produced in black, robin egg blue, and gold, and are all slightly different shapes than standard NES cartridges. Nintendo also produced yellow-plastic carts for internal use at Nintendo Service Centers, although these [...] "test carts" [...] were never made available for purchase. All licensed US cartridges were made by Nintendo, Konami and Acclaim. For promotion of , Capcom sent 150 limited-edition gold NES cartridges with the original game, featuring the Remastered art as the sticker, to different gaming news agencies. The instruction label on the back included the opening lyric from the show's theme song, [...] "Life is like a hurricane".|$|E
50|$|OPTIONAL. Do not use <b>handling</b> <b>instructions</b> {{unless a}} {{particular}} need is present. <b>Handling</b> <b>instructions</b> {{are used to}} instruct the relaying and/or delivering operator to handle the message according to the following codes (Refer to ARRL CD 218, pink card.). If used, <b>handling</b> <b>instructions</b> must stay with {{the message to the}} point of delivery.|$|E
50|$|For <b>handling</b> <b>instructions</b> see {{the section}} on Safety below.|$|E
50|$|The early GMCH (82810) chips (A2 stepping; You {{will find}} S-spec {{numbers on the}} fourth line chipset : SL35K, SL35X, SL3KK, SL3KL, Q790, Q789) could only support Celeron as unable to <b>handle</b> SSE <b>instructions</b> correctly.|$|R
5000|$|Though it does <b>handle</b> {{processing}} <b>instructions,</b> {{it has no}} {{facilities for}} handling XSLT stylesheet declarations. That is, it does not apply an XSLT declared in a stylesheet processing instruction to the XML file when parsing it.|$|R
50|$|EForward is {{designed}} specifically to transport documents between companies, particularly when {{the loss of a}} document cannot be allowed. Currently it is primarily used by the shipping/transport industry to <b>handle</b> shipping <b>instructions</b> and messages between shipping companies, ports, manufacturers and resalers.|$|R
5000|$|<b>Handling</b> <b>instructions</b> and Loading Remarks (like [...] "away from boiler", [...] "on-deck-only"), ...|$|E
5000|$|Check {{expiration}} {{dates and}} follow the safe <b>handling</b> <b>instructions</b> printed on every package ...|$|E
50|$|Special <b>handling</b> <b>instructions</b> are {{additional}} markings which {{used in conjunction}} with a classification marking to indicate the nature or source of its content, limit access to designated groups, and / or to signify the need for enhanced handling measures. In addition to a paragraph near the start of the document special <b>handling</b> <b>instructions</b> include Descriptors, Codewords, Prefixes and national caveats.|$|E
5000|$|The [...] "Peripheral Processor" [...] was a {{separate}} system dedicated entirely to quickly running {{the operating system}} and programs running within it, as well as feeding data to the CPU. The PP was built out of eight [...] "virtual processors" [...] (VPs), which were designed to <b>handle</b> <b>instructions</b> and basic integer arithmetic only. Each VP had its own program counter and registers, and the system could thus run eight programs at the same time, limited only by memory accesses. Keeping eight programs running allowed the system to shuffle execution of programs on the CPU depending on what data was available on the memory bus at that time, minimizing [...] "dead time" [...] where the CPU {{had to wait for}} data from the memory.|$|R
5000|$|The organization's [...] "Positive Approach Canine Education" [...] (PACE) program {{provides}} certificates in canine behaviour, <b>handling</b> and <b>instruction</b> for potential dog trainers or other workers in dog-related fields. Dog training and behaviour consultations {{are available to}} help strengthen the bond between a dog and the dog's family.|$|R
40|$|This paper {{addresses}} instruction-level parallelism in code generation for DSPs. In {{presence of}} potential parallelism, {{the task of}} code generation includes code compaction, which parallelizes primitive processor operations under given dependency and resource constraints. Furthermore, DSP algorithms in most cases are required to guarantee real-time response. Since the exact execution speed of a DSP program is only known after compaction, real-time constraints {{should be taken into}} account during the compaction phase. While previous DSP code generators rely on rigid heuristics for compaction, we propose a novel approach to exact local code compaction based on an Integer Programming model, which handles time constraints. Due to a general problem formulation, the IP model also captures encoding restrictions and <b>handles</b> <b>instructions</b> having alternative encodings and side effects, and therefore applies to a large class of instruction formats. Capabilities and limitations of our approach are dis [...] ...|$|R
50|$|Detonators {{are also}} {{detailed}} with physical descriptions, <b>handling</b> <b>instructions,</b> and burning rates. Detonators covered include: Cordtex and FID.|$|E
5000|$|The {{provision}} of <b>handling</b> <b>instructions,</b> condition checklist and display recommendations such as restrictions on traditional sprinkling {{of water to}} minimize the problems.|$|E
50|$|As traffic trickles {{back down}} through the area, region, section, and local nets, {{messages}} are typically delivered via a local telephone call, depending on <b>handling</b> <b>instructions.</b> Messages can also be delivered by hand or via message carrier, including the postal service, however Part 97 dictates that ham radio operators cannot receive financial restitution for their service. If a message is undeliverable, <b>handling</b> <b>instructions</b> may dictate that a service message be originated back to the sending station.|$|E
40|$|Situated, {{interactive}} tutorial instructions give {{flexibility in}} teaching tasks, by allowing communication {{of a variety}} of types of knowledge in a variety of situations. To exploit this flexibility, however, an instructable agent must be able to learn different types of knowledge from different instructional interactions. This paper presents an approach to learning from flexible tutorial instruction, called situated explanation, that takes advantage of constraints in different instructional contexts to guide the learning process. This makes it applicable {{to a wide range of}} instructional interactions. The theory is implemented in an agent called Instructo-Soar, that learns new tasks and other domain knowledge from natural language instructions. Instructo-Soar meets three key requirements of flexible instructability: it can (A) take any command at each <b>instruction</b> point, (B) <b>handle</b> <b>instructions</b> that apply to either the current situation or a hypothetical one (e. g., conditionals), and (C) [...] ...|$|R
50|$|Similar {{to native}} Nios II instructions, {{user-defined}} instructions accept values from {{up to two}} 32-bit source registers and optionally write back a result to a 32-bit destination register. By using custom instructions, the system designers can fine-tune the system hardware to meet performance goals and also the designer can easily <b>handle</b> the <b>instruction</b> as a macro in C.|$|R
5000|$|In the DLX {{design a}} more modern {{approach}} to <b>handling</b> long <b>instructions</b> was used: data-forwarding and instruction reordering. In this case the longer instructions are [...] "stalled" [...] in their functional units, and then re-inserted into the instruction stream when they can complete. Externally this design behaviour makes it appear as if execution had occurred linearly.|$|R
5000|$|Location {{specification}} of Disaster Kits within the museum. A chart detailing the location, what materials are located there, {{and if there}} are any <b>handling</b> <b>instructions</b> or additions needed to perform a task.|$|E
5000|$|Unprocessed meat (retail cut) {{products}} {{found at}} farmers' markets may include a government inspection legend plus a [...] "distributed by/packed for/prepared for" [...] label. Other {{information on the}} label will include weight, price, and safe <b>handling</b> <b>instructions.</b>|$|E
50|$|The new KYC rule {{expressly}} directs that {{firms and}} brokers should use reasonable diligence to know those facts required to (i) effectively service their customers’ accounts, (ii) act {{in accordance with}} any special <b>handling</b> <b>instructions</b> for their customers’ accounts, (iii) understand the authority of each person {{acting on behalf of}} their customers, and (iv) comply with applicable laws, regulations, and rules.|$|E
40|$|Using a two {{dimensional}} lattice model we investigate the crack growth {{under the influence}} of remote tensile forces as well as due to an internally applied pressure (hydraulic fracturing). For homogeneous elastic properties we present numerical finite-size scalings for the breaking stresses and pressures in terms of crack lengths and lattice sizes. Continuum theory predicts for the tensile and for the pressure problem identical scaling functions. Our findings for the tensile problem are in very good agreement with continuum results. However, for the hydraulic fracture problem we observe a different finite-size scaling. We explicitly demonstrate that the modified scaling is a consequence of the discrete structure of the lattice (micro structure). Comment: 6 pages RevTeX, 3 postscript figures, tarred, gzipped, uuencoded using `uufiles', short <b>handling</b> <b>instruction</b> at the beginning of the. tex file. CHANGES TO PREVIOUS VERSION: previous version was truncated on some mailers. Problem fixe...|$|R
40|$|The {{purpose of}} this thesis is to {{construct}} a"Program Address Generator"(PAG) to a 24 -bit Harvard type, RISC DSP processor using the VHDL language. The PAG {{is a part of}} the program control unit, and should consist of the following units: A system stack for storing jump and loop information. A program counter, a status register, a stack pointer, an operating mode register and two registers called loop address and loop counter register, to support hardware loops. The PAG handles the fetch stage of the processor pipeline, and should <b>handle</b> <b>instructions</b> such as the jump, subroutine jump, return from subroutine/interrupt and loop instructions, among others. The PAG was successfully designed, and its function verified through extensive tests, where common combinations of ASM instructions were tested. Files for automated testing was created, to support easy testing if only small changes are applied to the PAG...|$|R
50|$|Note {{that any}} GPU capable of <b>handling</b> Core Image <b>instructions</b> is also Quartz Extreme capable. The {{requirements}} for Core Image {{are greater than}} those of Quartz Extreme.|$|R
