0|999|Public
50|$|Since Windows Vista, Windows {{does not}} support <b>incoming</b> <b>connections</b> over serial, {{parallel}} or IrDA port, but the operating system does support <b>incoming</b> <b>connections</b> over Ethernet, wireless LAN, and HPNA.|$|R
5000|$|Monitor {{applications}} that are listening for <b>incoming</b> <b>connections</b> ...|$|R
5000|$|Accepting <b>incoming</b> <b>connections,</b> via {{a call to}} [...] This blocks {{until an}} <b>incoming</b> <b>connection</b> is received, and then returns a socket {{descriptor}} for the accepted connection. The initial descriptor remains a listening descriptor, and [...] can be called again at any time with this socket, until it is closed.|$|R
50|$|Varnish {{is heavily}} threaded, with each client {{connection}} being handled by a separate worker thread. When the configured {{limit on the}} number of active worker threads is reached, <b>incoming</b> <b>connections</b> are placed in an overflow queue; when this queue reaches its configured limit <b>incoming</b> <b>connections</b> will be rejected.|$|R
5000|$|Attempts {{to hijack}} common Trojan horses that accept <b>incoming</b> <b>connections</b> via an open port.|$|R
5000|$|... enable ECN when {{requested}} by <b>incoming</b> <b>connections,</b> and also request ECN on outgoing connection attempts ...|$|R
5000|$|... (default) enable ECN when {{requested}} by <b>incoming</b> <b>connections,</b> {{but do not}} request ECN on outgoing connections ...|$|R
50|$|To connect {{from behind}} a firewall, one party must have the proper port {{forwarded}} to their computer; as WASTE networks do not depend on a central server {{there is no way}} around this. However, as long as one node accepts <b>incoming</b> <b>connections</b> it can act as a server, connecting nodes that cannot themselves accept <b>incoming</b> <b>connections.</b> Indeed, the long-term stability of a WASTE network depends on these hubs.|$|R
50|$|By default, WASTE {{listens to}} <b>incoming</b> <b>connections</b> on port 1337. This was {{probably}} chosen because of 1337's leet connotations.|$|R
30|$|We use NiRTT to {{represent}} the number of RTTs for the <b>incoming</b> <b>connection</b> of host hi, NoRTT the number of RTTs for the <b>incoming</b> <b>connection</b> of host hi, and ΔioRTT {{the difference between these}} numbers. The value of this difference can be used to determine the probability that the two connections are relayed. The larger ΔioRTT, the lower the probability that the two connections are relayed, and the lower the probability that the host hi is used as a stepping-stone.|$|R
50|$|Cluster virtual IP address:NSC {{provided}} a single IP address {{for access to}} the cluster from other systems. <b>Incoming</b> <b>connections</b> were load-balanced between the available cluster nodes.|$|R
5000|$|Magma server [...] manages {{intercommunication}} between DHT {{nodes and}} magma clients. Flare system provides a network event loop that accept <b>incoming</b> <b>connections.</b> Three kind of connection are accepted.|$|R
5000|$|The command field may be 0x01 for [...] "connect" [...] or 0x02 for [...] "bind"; the [...] "bind" [...] command allows <b>incoming</b> <b>connections</b> for {{protocols}} such {{as active}} FTP.|$|R
3000|$|... as {{outgoing}} and <b>incoming</b> <b>connections.</b> Failure {{in meeting}} the constraints results in the service graph not being implementable. In such a case, the execution cost will be set to infinity.|$|R
50|$|A {{vibrating}} alert is {{a feature}} of communications devices to notify the user of an <b>incoming</b> <b>connection.</b> It is particularly common on mobile phones and pagers and usually supplements the ring tone.|$|R
5000|$|After {{a socket}} has been {{associated}} with an address, [...] prepares it for <b>incoming</b> <b>connections.</b> However, this is only necessary for the stream-oriented (connection-oriented) data modes, i.e., for socket types ( [...] , [...] ). listen (...) requires two arguments: ...|$|R
5000|$|... ::/128 — The address {{with all}} zero bits {{is called the}} {{unspecified}} address (corresponding to 0.0.0.0/32 in IPv4).This address must never be assigned to an interface and {{is to be used}} only in software before the application has learned its host's source address appropriate for a pending connection. Routers must not forward packets with the unspecified address.Applications may be listening on one or more specific interfaces for <b>incoming</b> <b>connections,</b> which are shown in listings of active internet connections by a specific IP address (and a port number, separated by a colon). When the unspecified address is shown it means that an application is listening for <b>incoming</b> <b>connections</b> on all available interfaces.|$|R
5000|$|Post-Setup Security Updates: A default {{mode that}} {{is turned on}} when a Service Pack 1 server is first booted up after installation. It configures the {{firewall}} to block all <b>incoming</b> <b>connections,</b> and directs the user to install updates.|$|R
5000|$|... blued is the Bluetooth daemon in macOS (previously Mac OS X). It {{is started}} by the system and is not interacted with {{directly}} by the user. The daemon handles service discovery, link key management and <b>incoming</b> <b>connection</b> acceptance.|$|R
50|$|QEMU {{integrates}} several {{services to}} allow the host and guest systems to communicate; for example, an integrated SMB server and network-port redirection (to allow <b>incoming</b> <b>connections</b> to the virtual machine). It can also boot Linux kernels without a bootloader.|$|R
3000|$|... [fifo]true. Here, i is {{a nominal}} {{referring}} the node i in {{the patterns of}} Fig. 1. Indeed the formula says that if the node identified by i is an input port (i.e., it has no <b>incoming</b> <b>connections,</b> formally @ [...]...|$|R
50|$|Simple {{firewalls}} {{that are}} configured to allow all outgoing connections but to restrict which ports an <b>incoming</b> <b>connection</b> can reach (for example, allow <b>incoming</b> <b>connections</b> to a Web server on port 80 but restrict all other ports), work by blocking only incoming SYN requests to unwanted ports. If SYN cookies are in operation, {{care should be}} taken to ensure an attacker is not able to bypass such a firewall by forging ACKs instead, trying random sequence numbers until one is accepted. SYN cookies should be switched on and off on a per-port basis, so that SYN cookies being enabled on a public port does not cause them to be recognised on a non-public port.|$|R
3000|$|... and {{continue}} operating normally. A broadcast message {{would be sent}} to the mobile devices to alert them of this change. <b>Incoming</b> <b>connections,</b> either via handovers from other cells or new devices being turned on, would just receive the updated broadcast messages [i|enc [...]...|$|R
50|$|Many FTP servers for POSIX systems use the chroot {{mechanism}} to sandbox untrusted FTP clients. This may {{be done by}} forking a process to handle an <b>incoming</b> <b>connection,</b> then chrooting the child (to avoid having to populate the chroot with libraries required for program startup).|$|R
30|$|Parameter w_nmda {{describes}} the connection {{strength of the}} dIN→dIN coupling. For simplicity, we consider the dynamics of a slow NMDA synapse only, but adjust the connection strength to reflect the fast AMPA component as well. To calculate the physiological range of this parameter variation, we use experimental findings similar to the consideration above. The average number of <b>incoming</b> <b>connections</b> to dINs from dINs is in the range (13 – 21) [36], and the maximal unitary strengths of the AMPA and NMDA synapses are 0.6 nS and 0.15 nS, respectively [39]. To {{take into account the}} AMPA influence, we adjust the strength by summing these values and multiply by the range of <b>incoming</b> <b>connections</b> to get the physiological range of parameter w_nmda: (10 nS, 15.8 nS).|$|R
3000|$|... is {{positive}} are the nodes {{which are more}} able to draw the centre of mass of the network towards themselves, and therefore have a greater influence over the network as a whole than the other nodes. These nodes are those with more outgoing <b>connections</b> than <b>incoming</b> <b>connections.</b>|$|R
50|$|A server {{listening}} for <b>incoming</b> <b>connections</b> declares a port file (a {{file with the}} KIND attribute equal to PORT). Each connection that is made from a client creates a subfile with an index, so each port file represents multiple connections to different clients around the network.|$|R
5000|$|The {{following}} program starts an [...] "echo server" [...] on port 12345.#lang racket(define listener (tcp-listen 12345))(let echo-server (...) ; {{create a}} TCP server (define-values (in out) (tcp-accept listener)); handle an <b>incoming</b> <b>connection</b> in a (green) thread (thread (λ (...) (copy-port in out) (close-output-port out))); and immediately {{loop back to}} accept additional clients (echo-server)) ...|$|R
50|$|The Linux kernel {{can now be}} patched {{to allow}} tarpitting of <b>incoming</b> <b>connections</b> instead of the more usual {{dropping}} of packets. This is implemented in iptables {{by the addition of}} a TARPIT target. The same packet inspection and matching features can be applied to tarpit targets as are applied to other targets.|$|R
40|$|Abstract — Network-overlay {{construction}} today assumes twoway communication capability—each host can initiate outgoing connections {{as well as}} accepting <b>incoming</b> <b>connections.</b> This {{is often}} not true on the current Internet due to several reasons, for example, the use of Network Address Translation (NAT) and firewalls. Our experiments with eDonkey and Gnutella filesharing systems reveal {{that as many as}} 36 % of the hosts may be guarded—not accepting <b>incoming</b> <b>connections.</b> This presents a challenge to overlay construction because not all hosts are capable of receiving and forwarding requests. We propose an overlay optimization called e * to help existing overlay protocols overcome the reachability problem. Furthermore, e * builds very efficient overlay networks in terms of latency. Under realistic scenarios involving guarded hosts, e * can reduce the average overlay latency by 28 - 61 % compared with existing protocols. I...|$|R
50|$|The {{reason behind}} naming the nodes are {{the fact that}} Connect-Connect node initiates two {{connections}} one to the Listen-Listen node and one to the actual server. The Listen-Listen node, however, passively Listens on two TCP/IP ports, one to receive a connection from CC {{and the other one}} for an <b>incoming</b> <b>connection</b> from the client.|$|R
5000|$|PORT - Port {{where the}} server is {{listening}} for <b>incoming</b> eD2k <b>connections</b> ...|$|R
30|$|The {{determination}} of admission criteria for incoming connections: When a connection arrives {{and requests for}} an admission, it will inform the BS of its specific QoS requirements, e.g., maximum and minimum data rates. Based on the estimated system capacity and network loads and QoS parameters, the BS will compute the admission criteria for the <b>incoming</b> <b>connection</b> with its specific QoS parameters.|$|R
50|$|The Major BBS allowed <b>incoming</b> <b>connections</b> via modems on {{telephone}} lines, IPX networks, and X.25 packet-switched networks. In the mid-1990s, the offering {{expanded to include}} TCP/IP by the ISV Vircom, a Canadian company that has since become well known for its anti-spam/anti-virus software, shortly followed by Galacticomm's own TCP/IP add-on, the Internet Connection Option (ICO), which was derived from another ISV's offering.|$|R
5000|$|Coyote listens for <b>incoming</b> <b>connections</b> to {{the server}} on a {{specific}} TCP port and forwards the request to the Tomcat Engine to process the request and send back {{a response to the}} requesting client. Another Coyote Connector, Coyote JK, listens similarly but instead forwards its requests to another web server, such as Apache, using the JK protocol. This usually offers better performance.|$|R
5000|$|Mac OS X 10.5 and 10.6 {{implements}} ECN {{support for}} TCP. It is controlled using the boolean sysctl variables [...] and [...] [...] The first variable enables ECN on <b>incoming</b> <b>connections</b> that already have ECN flags set; {{the second one}} tries to initiate outgoing connections with ECN enabled. Both variables default to , but can be set to [...] to enable the respective behavior.|$|R
