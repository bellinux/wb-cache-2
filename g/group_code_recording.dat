1|2164|Public
5000|$|In {{computer}} science, group coded recording or <b>group</b> <b>code</b> <b>recording</b> (GCR) {{refers to}} several distinct but related encoding methods for magnetic media. The first, used in [...] bpi magnetic tape since 1973, is an error-correcting code {{combined with a}} run length limited (RLL) encoding scheme, belonging into the group of modulation codes. The others are different mainframe hard disk as well as floppy disk encoding methods used in some microcomputers until the late 1980s. GCR is a modified form of a NRZI code, but necessarily with a higher transition density.|$|E
5000|$|ANSI INCITS 54-1986 (R2002) Recorded Magnetic Tape for Information Interchange (6250 CPI, <b>Group</b> <b>Coded</b> <b>Recording)</b> ...|$|R
50|$|By {{extending}} the maximum run length to 2 adjacent 0 bits, the data rate {{can be improved}} to 4/5. This is the original IBM <b>group</b> <b>coded</b> <b>recording</b> variant.|$|R
50|$|The name 4B5B is {{generally}} taken {{to mean the}} FDDI version. Other 4-to-5-bit codes {{have been used for}} magnetic recording and are known as <b>group</b> <b>coded</b> <b>recording</b> (GCR).|$|R
50|$|Double density (DD or 2D) doubles {{capacity}} over SD {{by replacing}} FM encoding with an improved line code, such as modified frequency modulation (MFM), modified modified frequency modulation (M²FM), FM/MFM or <b>group</b> <b>coded</b> <b>recording</b> (GCR).|$|R
50|$|Offering GCR-compatible {{diskette}} {{drives and}} floppy disk controllers (like the 100163-51-8 and 100163-52-6), Micropolis endorsed data encoding with <b>group</b> <b>coded</b> <b>recording</b> on 5¼-inch 100 tpi 77-track diskette drives to store twelve 512-byte sectors per track since 1977 or 1978.|$|R
50|$|The {{disk drive}} uses <b>group</b> <b>coded</b> <b>recording</b> (GCR) and {{contains}} a MOS Technology 6502 microprocessor, doubling as a disk controller and on-board {{disk operating system}} processor. The number of sectors per track varies from 17 to 21 (an early implementation of zone bit recording). The drive's built-in disk operating system is CBM DOS 2.6.|$|R
50|$|All {{three models}} utilize 5¼-inch double density floppy disks with a track spacing of 100 tracks-per-inch, {{for a total}} of 77 logical tracks per side. Data is encoded using Commodore's {{proprietary}} <b>group</b> <b>coded</b> <b>recording</b> scheme. Soft sectoring is used for track alignment. Like most other Commodore disk drives, these drives utilize zone bit recording to maintain an average bit density across the entire disk. Formatted capacity is approximately 0.5 megabyte per side, or 1 megabyte (1,066,496 bytes) in 4166 blocks total.|$|R
50|$|This {{drive was}} also capable {{of reading and}} writing MS-DOS {{formatted}} disks and FAT12 file formats, using PC Exchange or other software, unlike the 400 KB and 800 KB drives. This was made possible as the SuperDrive now utilitized the same MFM (Modified Frequency Modulation) encoding scheme used by the IBM PC, yet still retained backward compatibility with Apple's variable-speed zoned CAV scheme and <b>Group</b> <b>Coded</b> <b>Recording</b> encoding format, so it could continue to read Macintosh MFS, HFS and Apple II ProDOS formats on 400/800 KB disks.|$|R
5000|$|<b>Group</b> <b>coded</b> <b>recording</b> {{was first}} used for {{magnetic}} tape data storage on 9-track reel-to-reel tape. The term was coined during {{the development of the}} IBM 3420 Model 4/6/8 Magnetic Tape Unit and the corresponding 3803 Model 2 Tape Control Unit, both introduced in 1973. IBM referred to the error correcting code itself as [...] "group coded recording". However, GCR has come to refer to the recording format of [...] bpi (250 bits/mm) tape as a whole, and later to formats which use similar RLL codes without the error correction code.|$|R
5000|$|The <b>Group</b> <b>Coded</b> <b>Recording</b> (GCR) {{scheme of}} binary {{encoding}} {{is used to}} store data on the magnetic disk medium. The drive also uses variable bit-clock to enable increased data density on a standard single-density floppy disk. It {{is a form of}} constant bit-density recording done by gradually increasing the clock rate (zone constant angular velocity, ZCAV) and storing more physical sectors on the outer tracks than on the inner ones (zone bit recording, ZBR). Starting with the Commodore 2040 drive, this enabled Commodore to fit 170 kB on a standard single-sided single-density 5.25" [...] floppy.|$|R
50|$|The {{disk drive}} uses <b>group</b> <b>coded</b> <b>recording</b> and {{contains}} an MOS Technology 6510T processor as a disk controller. The 6510T is a specialized {{version of the}} 6510 processor used in the C64, {{and it is only}} used in the 1551. The DOS limits the number of files per disk to 144 regardless of the number of free blocks on the disk because the directory is of a fixed size, and the file system does not allow for subdirectories. Its DOS is compatible with the 1541, so disks written by one drive can be utilized in the other.|$|R
5000|$|Error {{detection}} and correction codes {{are often used}} to improve the reliability of data storage media. A [...] "parity track" [...] was present on the first magnetic tape data storage in 1951. The [...] "Optimal Rectangular Code" [...] used in <b>group</b> <b>coded</b> <b>recording</b> tapes not only detects but also corrects single-bit errors. Some file formats, particularly archive formats, include a checksum (most often CRC32) to detect corruption and truncation and can employ redundancy and/or parity files to recover portions of corrupted data. Reed Solomon codes are used in compact discs to correct errors caused by scratches.|$|R
5000|$|The IBM System/360, {{released}} in 1964, introduced {{what is now}} generally known as 9 track tape. The ½ inch (12.7 mm) wide magnetic tape media and reels are {{the same size as}} the earlier IBM 7 track format it replaced, but the new format has eight data tracks and one parity track for a total of nine parallel tracks. Data is stored as 8-bit characters, spanning the full width of the tape (including the parity bit). Various recording methods were employed during its lifetime as tape speed and data density increased, including PE (phase encoding), GCR (<b>group</b> <b>coded</b> <b>recording)</b> and NRZI (non-return-to-zero, inverted, sometimes pronounced [...] "nur-zee"). Tapes came in various sizes up to 3600 ft in length.|$|R
50|$|A bit nibbler, or nibbler, is a {{computer}} software program designed to copy data from a floppy disk one bit at a time. It functions at a very low level directly interacting with the disk drive hardware to override a copy protection scheme that the floppy disk's data may be stored in. In most cases the nibbler software still analyses the data on a byte level, only looking to the bit level when dealing with synchronization marks (syncs), zero-gaps and other sector & track headers. When possible, nibblers will work with the low-level data encoding format used by the disk system, being <b>Group</b> <b>Coded</b> <b>Recording</b> (GCR - Apple, Commodore), Frequency Modulation (FM - Atari), or Modified Frequency Modulation (MFM - Amiga, Atari, IBM PC).|$|R
40|$|This Standard ECMA- 62 {{specifies}} {{the physical}} and magnetic char-acteristics of 12, 7 mm, 9 -track magnetic tape with reel, to enable interchangeability of such tapes. It also provides a format and three recording methods, thus allowing together with Standard ECMA- 13 for Magnetic Tape Labelling full data interchange by means of such magnetic tapes. The three me-thods defined in this Standard are:- NRZ 1 at the physical recording density of 32 ftpmm, yield-ing a data density of 32 cpmm,- Phase Encoding at the physical recording density of 126 ftpmm, yielding a data density of 63 cpmm,- NRZ 1 at the physical recording density of 356 ftpmm, yield-ing a data density of 246 cpmm when <b>Group</b> <b>Coded</b> <b>Recording</b> is used. 1. 2 Conformance 1...|$|R
5000|$|... 3.5" [...] {{single-sided}} floppies {{had been}} used on several microcomputers and synthesizers in the early 1980s, including the Hewlett Packard 150 and various MSX computers. The standard {{on all of these}} was MFM with 80 tracks and 9 sectors per track, giving 360k per disk. However, Apple's custom interface used GCR (<b>Group</b> <b>Coded</b> <b>Recording)</b> and a unique format which put fewer sectors on the smaller inner tracks and more sectors on the wider outer tracks of the disk. The disk would speed up when accessing the inner tracks and slow down when accessing the outer ones. This allowed more space per disk (400k) and also improved reliability by reducing the number of sectors on the inner tracks which had less physical media to allocate to each sector.|$|R
50|$|All of {{the models}} in the 8060 series use Commodore <b>group</b> <b>coded</b> <b>recording</b> (GCR) for disk reading and writing; the later 8061 and 8062 models can also read and write IBM 3740 format disks. Each drive in the series {{contains}} two MOS 6502 microprocessors for operating the disk controllers and executing the built-in disk operating system. The built-in operating system is CBM DOS 2.7. The ROM on the 8061 and 8062 does not contain support for formatting disks; instead a provided utility disk had the formatter program, which allows the user to select between native 806x and IBM 3740 formats. The utility disk also contained a program for doing whole disk copies of IBM disks {{as well as the}} VALIDATE command, which is included in the ROM of all other Commodore drives.|$|R
50|$|Commodore {{started its}} {{tradition}} of special disk formats with the 5¼-inch disk drives accompanying its PET/CBM, VIC-20 and Commodore 64 home computers, {{the same as}} the 1540 and 1541 drives used with the later two machines. The standard Commodore <b>Group</b> <b>Coded</b> <b>Recording</b> (GCR) scheme used in 1541 and compatibles employed four different data rates depending upon track position (see zone bit recording). Tracks 1 to 17 had 21 sectors, 18 to 24 had 19, 25 to 30 had 18, and 31 to 35 had 17, for a disk capacity of 170.75 KB (175 decimal kB). Unique among personal computer architectures, the operating system on the computer itself is unaware of the details of the disk and filesystem; disk operations are handled by Commodore DOS instead, which was implemented with an extra MOS-6502 processor on the disk drive. Many programs such as GEOS bypass Commodore's DOS completely, and replace it with fast-loading (for the time) programs in the 1541 drive.|$|R
5000|$|Independently, Commodore Business Machines (CBM) {{created a}} <b>group</b> <b>coded</b> <b>recording</b> scheme for their Commodore 2040 {{floppy disk drive}} (launched {{in the spring of}} 1979). The {{relevant}} constraints on the 2040 drive were that no more than two zero bits could occur in a row, and no more than eight one bits in a row; the drive imposed no special constraint on the first bit in a byte. This allowed the use of a scheme similar to that used in [...] bpi tape drives. Every four bits of data are translated into five bits on disk, according to the following table:Inhere, no code starts with two zero bits, nor ends with two zero bits. This ensures that regardless of the input data, the encoded data will never contain more than two zero bits in a row. With this encoding not more than eight one bits in a row are possible. Therefore, Commodore used sequences of ten or more one bits in a row as synchronization mark.|$|R
50|$|Like the 5¼-inch, the 3½-inch disk {{underwent}} {{an evolution}} of its own. When Apple introduced the Macintosh in 1984, it used single-sided 3½-inch disk drives with an advertised capacity of 400 kB. The encoding technique used by these drives {{was known as}} GCR, or <b>Group</b> <b>Coded</b> <b>Recording</b> (similar recording methods were used by Commodore on its 5¼-inch drives and Sirius Systems Technology in its Victor 9000 non-PC-compatible MS-DOS machine). Somewhat later, PC-compatible machines began using single-sided 3½-inch disks with an advertised capacity of 360 kB (the same as a double-sided 5¼-inch disk), and a different, incompatible recording format called MFM (Modified Frequency Modulation). GCR and MFM drives (and their formatted disks) were incompatible, although the physical disks were the same. In 1986, Apple introduced double-sided, 800 kB disks, still using GCR, and soon after, IBM began using 720 kB double-sided double-density MFM disks in PCs like the IBM PC Convertible. IBM PC compatibles adopted it too, whilst the Amiga used MFM encoding on the same disks to give a capacity of 1 MB (880 KB available once formatted).|$|R
5000|$|Apple did not {{originally}} offer a {{disk drive}} for the Apple II, which used data cassette storage like other microcomputers of the time. Apple executive Mike Markkula asked cofounder Steve Wozniak {{to design a}} drive system for the computer after finding that a checkbook-balancing program Markkula had written took too long to load from tape. Wozniak knew nothing about disk controllers, but while at Hewlett-Packard had designed a simple, five-chip circuit to operate a Shugart Associates drive. Wozniak began studying existing floppy controllers, including North Star and IBM models. Standard floppy controller boards were large devices that used dozens of TTL chips. In addition to being expensive, they were also much too big {{to fit into the}} Apple II's small case. Initially, Wozniak attempted to develop an FM-type controller with a smaller chip count and by making improvements to the FM encoding scheme, he was able to squeeze out 10 sector per track storage. However, he soon decided he could do even better and switched to another, completely different [...] "5 and 3 encoding" [...] method known as [...] "GCR" [...] (<b>Group</b> <b>Coded</b> <b>Recording)</b> which was a modified version of recording schemes used on tape storage. This allowed still more storage, up to 13 sectors per track. Wozniak called the resultant Disk II system [...] "my most incredible experience at Apple and the finest job I did", and credited it and VisiCalc with the Apple II's success.|$|R
5000|$|An {{external}} 5¼-inch {{floppy disk}} drive, the Disk II, attached via a controller card that plugged {{into one of}} the computer's expansion slots (usually slot 6), was used for data storage and retrieval to replace cassettes. The Disk II interface, created by Steve Wozniak, was regarded as an engineering masterpiece for its economy of electronic components. While other controllers had dozens of chips for synchronizing data I/O with disk rotation, seeking the head to the appropriate track, and encoding the data into magnetic pulses, Wozniak's controller card had few chips; instead, the Apple DOS used software to perform these functions. The <b>Group</b> <b>Coded</b> <b>Recording</b> used by the controller was simpler and easier to implement in software than the more common MFM. In the end, the low chip count of the controller helped make Apple's Disk II the first affordable floppy drive for personal computers. As a side effect, Wozniak's scheme made it easy for proprietary software developers to copy-protect the media on which their software shipped by changing the low-level sector format or stepping the drive's head between the tracks; inevitably, other companies eventually sold software to foil this protection. Another Wozniak optimization allowed him to omit Shugart's Track-0 sensor. When the Operating System wants to go to track 0, the controller simply moves 40 times toward the next-lower-numbered track, relying on the mechanical stop to prevent it going any further down than track 0. This process, called [...] "recalibration", made a loud buzzing (rapid mechanical chattering) sound that often frightened Apple novices.|$|R
50|$|The {{differencing}} calculator with recording (German:Differenzen Rechengereat, English:Differencing Calculating Apparatus) was {{a machine}} designed to compute a flag of difference {{for a set}} of enciphered <b>code</b> <b>groups</b> and <b>record</b> it. it consisted of two teleprinter tapes with photoelectric reading heads, a set of calculating relays and an recording electric teleprinter. The read heads operated at 7 characters a second, bounded by the speed of the teleprinter where time was lost by the carriage return and line feed. It cost ℛℳ920 Reichsmarks, $800.00 at 1945 conversion rates.|$|R
40|$|For the {{category}} of <b>group</b> <b>codes,</b> that generalizes {{the category}} of linear codes over a finite field, and with the generalized notions of direct sums and ndecomposable <b>group</b> <b>codes,</b> we prove that every MDS non trivial code, every perfect non trivial code, and every constant weight nondegenerate <b>group</b> <b>code</b> are indecomposable. We prove that every <b>group</b> <b>code</b> is a direct sum of indecomposable <b>group</b> <b>codes,</b> and using this result we obtain the automorphism groups of any <b>group</b> <b>code</b> {{in terms of its}} decomposition in indecomposable components. We conclude with the determination of the structure of decomposable cyclic <b>group</b> <b>codes...</b>|$|R
40|$|AbstractThe {{relations}} between a <b>group</b> <b>code</b> C and the syntactic monoid syn(C∗) {{of the star}} closure C∗ of C are given. We outline certain results previously obtained on <b>group</b> <b>codes</b> and give several new properties of <b>group</b> <b>codes.</b> In particular, by a strong code and the diamond property, two necessary and sufficient conditions for a code to be a <b>group</b> <b>code</b> are given...|$|R
40|$|Error-correcting {{encoding}} is {{a mathematical}} {{manipulation of the}} information against transmission errors over noisy communications channels. One class of error-correcting codes is the so-called <b>group</b> <b>codes.</b> Presently, there are many good binary <b>group</b> <b>codes</b> which are abelian. A <b>group</b> <b>code</b> is a family of bi-infinite sequences produced by a finite state machine (FSM) homomorphic encoder defined on the extension of two finite groups. As a set of sequences, a <b>group</b> <b>code</b> is a dynamical system and {{it is known that}} well-behaved dynamical systems must be necessarily controllable. Thus, a good <b>group</b> <b>code</b> must be controllable. In this paper, we work with <b>group</b> <b>codes</b> defined over nonabelian groups. This necessity on the encoder is because {{it has been shown that}} the capacity of an additive white Gaussian noise (AWGN) channel using abelian <b>group</b> <b>codes</b> is upper bounded by the capacity of the same channel using phase shift keying (PSK) modulation eventually with different energies per symbol. We will show that when the trellis section group is nonabelian and the input group of the encoder is a cyclic group with, elements, prime, then the <b>group</b> <b>code</b> produced by the encoder is noncontrollable...|$|R
40|$|Abstract — A {{definition}} of atomic codeword for a <b>group</b> <b>code</b> is presented. Some properties of atomic codewords of <b>group</b> <b>codes</b> are investigated. Using these properties, it is shown that every minimal tail-biting trellis for a <b>group</b> <b>code</b> over a finite abelian group {{can be constructed}} from its characteristic generators, which extends the work of Koetter and Vardy who treated {{the case of a}} linear code over a field. We also present an efficient algorithm for constructing the minimal tail-biting trellis of a <b>group</b> <b>code</b> over a finite abelian group, given a generator matrix. Index Terms — atomic codewords, biproper p-bases, characteristic generators, <b>group</b> <b>codes,</b> tail-biting trellises. I...|$|R
40|$|The branch {{group of}} a {{strongly}} controllable <b>group</b> <b>code</b> is a shift group. We {{show that a}} shift group can be characterized in a very simple way. In addition it is shown that if a strongly controllable <b>group</b> <b>code</b> is labeled with Latin squares, a strongly controllable Latin <b>group</b> <b>code,</b> then the shift group is solvable. Moreover the mathematical structure of a Latin square (as a translation net) and the shift group of a strongly controllable Latin <b>group</b> <b>code</b> are closely related. Thus a strongly controllable Latin <b>group</b> <b>code</b> {{can be viewed as}} a natural extension of a Latin square to a sequence space. Lastly we construct shift groups. We show that it is sufficient to construct a simpler group, the state group of a shift group. We give an algorithm to find the state group, and from this it is easy to construct a strongly controllable Latin <b>group</b> <b>code.</b> ...|$|R
5000|$|In {{computer}} science, <b>group</b> <b>codes</b> are {{a type of}} <b>code.</b> <b>Group</b> <b>codes</b> {{consist of}} linear block codes which are subgroups of , where [...] is a finite Abelian group.|$|R
40|$|A {{definition}} of atomic codeword for a <b>group</b> <b>code</b> is presented. Some properties of atomic codewords of <b>group</b> <b>codes</b> are investigated. Using these properties, it is shown that every minimal tail-biting trellis for a <b>group</b> <b>code</b> over a finite abelian group {{can be constructed}} from its characteristic generators, which extends the work of Koetter and Vardy who treated {{the case of a}} linear code over a field. We also present an efficient algorithm for constructing the minimal tail-biting trellis of a <b>group</b> <b>code</b> over a finite abelian group, given a generator matrix. Comment: 11 pages, submitted to IEEE Transactions on Information Theor...|$|R
40|$|Abstract. A (left) <b>group</b> <b>code</b> {{of length}} n is a linear code {{which is the}} image of a (left) ideal of a group algebra via an {{isomorphism}} FG → Fn which maps G to the standard basis of Fn. Many classical linear codes {{have been shown to be}} <b>group</b> <b>codes.</b> In this paper we obtain a criterion to decide when a linear <b>code</b> is a <b>group</b> <b>code</b> in terms of its intrinsical properties in the ambient space Fn, which does not assume an “a priori ” group algebra structure on Fn. As an application we provide a family of groups (including metacyclic groups) for which every two-sided <b>group</b> <b>code</b> is an abelian <b>group</b> <b>code.</b> It is well known that Reed-Solomon codes are cyclic and its parity check extensions are elementary abelian <b>group</b> <b>codes.</b> These two classes of codes are included in the class of Cauchy codes. Using our criterion we classify the Cauchy codes of some lengths which are left <b>group</b> <b>codes</b> and the possible <b>group</b> <b>code</b> structures on these codes. In this paper F = Fq denotes the field with q elements where q is a power of a prime p. We consider F as the alphabet of linear codes of length n and so the ambient space is Fn, the n-dimensional vector space. The standard basis of Fn is denoted by E = {e 1, [...] ., en}. For any group G, we denote by FG the group algebra over G with coefficients in F...|$|R
40|$|Let C be an {{additive}} {{subgroup of}} _ 2 k^n for any k≥ 1. We define a Gray map Φ:_ 2 k^n ⟶_ 2 ^kn such that Φ() is a binary propelinear code and, hence, a Hamming-compatible <b>group</b> <b>code.</b> Moreover, Φ is the unique Gray map such that Φ(C) is Hamming-compatible <b>group</b> <b>code.</b> Using this Gray map we discuss about the nonexistence of 1 -perfect binary mixed <b>group</b> <b>code...</b>|$|R
40|$|A {{method for}} finding an optimum $n$-dimensional {{commutative}} <b>group</b> <b>code</b> {{of a given}} order $M$ is presented. The approach explores the structure of lattices related to these codes and provides {{a significant reduction in}} the number of non-isometric cases to be analyzed. The classical factorization of matrices into Hermite and Smith normal forms and also basis reduction of lattices are used to characterize isometric commutative <b>group</b> <b>codes.</b> Several examples of optimum commutative <b>group</b> <b>codes</b> are also presented...|$|R
40|$|AbstractIn this paper, {{we study}} {{a class of}} codes, the {{so-called}} coset <b>group</b> <b>codes,</b> and prove several interesting properties about coset <b>group</b> <b>codes.</b> The indecomposable cyclic codes of length pm over the alphabet GF(pn) {{can be viewed as}} coset <b>group</b> <b>codes.</b> From this characterization we firstly obtain the weight distribution of all indecomposable GF(2 n) C 2 m-codes, and secondly the weight distribution of the radical powers of GF(2 n) G if G contains a normal cyclic 2 -Sylow subgroup...|$|R
40|$|AbstractIn this paper, some {{relations}} between the decompositions of <b>codes</b> and the <b>groups</b> of <b>codes</b> are investigated. We first show {{the existence of an}} indecomposable, recognizable, and maximal code X such that the group G(X) is imprimitive, which implies that the answer to a problem put forward by Berstel, Perrin, and Reutenauer in their book “Codes and Automata” is negative. Then, we discuss a special kind of code, that is, rectangular <b>group</b> <b>codes,</b> and show that a completely simple code is a rectangular <b>group</b> <b>code</b> if and only if it can be decomposed as a composition of a complete and synchronized <b>code</b> and a <b>group</b> <b>code...</b>|$|R
