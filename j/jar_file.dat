131|80|Public
25|$|JWt is {{distributed}} as a <b>jar</b> <b>file.</b> A JWt application {{is a war}} file that is deployed in a standards-compliant servlet container.|$|E
25|$|After the {{inevitable}} cooling of marketing hype, object libraries {{continue to be}} used in both object-oriented programming and distributed information systems. Class libraries are the rough OOP equivalent of older types of code libraries. They contain classes, which describe characteristics and define actions (methods) that involve objects. Class libraries are used to create , or objects with their characteristics set to specific values. In some OOP languages, like Java, the distinction is clear, with the classes often contained in library files (like Java's <b>JAR</b> <b>file</b> format) and the instantiated objects residing only in memory (although potentially able to be made persistent in separate files). In others, like Smalltalk, the class libraries are merely the starting point for a system image that includes the entire state of the environment, classes and all instantiated objects.|$|E
50|$|A <b>JAR</b> <b>file</b> allows Java runtimes to {{efficiently}} deploy {{an entire}} application, including its classes and their associated resources, {{in a single}} request. <b>JAR</b> <b>file</b> elements may be compressed, shortening download times.|$|E
5000|$|<b>JAR</b> <b>files</b> {{are created}} with the jar {{command-line}} utility. The command ...|$|R
5000|$|Additional <b>JAR</b> <b>files</b> {{containing}} dependent {{classes or}} other components {{required by the}} application; ...|$|R
50|$|ELKI uses {{a service}} loader {{architecture}} to allow publishing extensions as separate <b>jar</b> <b>files.</b>|$|R
5000|$|A <b>JAR</b> <b>file</b> {{may contain}} a {{manifest}} file, that {{is located at}} [...] The entries in the manifest file describe {{how to use the}} <b>JAR</b> <b>file.</b> For instance, a Classpath entry can be used to specify other JAR files to load with the JAR.|$|E
50|$|Optionally, {{a package}} within a <b>JAR</b> <b>file</b> can be sealed, {{which means that}} all classes defined in that package are {{archived}} in the same <b>JAR</b> <b>file.</b> A package might be sealed to ensure version consistency among the classes in the software or as a security measure.|$|E
5000|$|... {{compresses}} all [...]class files {{into the}} <b>JAR</b> <b>file</b> myPackage.jar. The 'c' option on the command line tells the jar command to [...] "create new archive." [...] The ' f ' option tells it {{to create a}} file. The file's name comes next before {{the contents of the}} <b>JAR</b> <b>file.</b>|$|E
50|$|The {{content of}} <b>JAR</b> <b>files</b> may be {{obfuscated}} to make reverse engineering more difficult.|$|R
5000|$|A {{tool that}} {{translates}} Java bytecode (<b>JAR</b> <b>files)</b> to [...]NET IL (DLLs or EXE files).|$|R
5000|$|<b>JAR</b> <b>files</b> created {{only for}} the purpose of {{archiving}} do not use the [...] file.|$|R
5000|$|...<b>JAR</b> (<b>file</b> format), Java {{installation}} files for mobile devices.|$|E
50|$|At {{the file}} system level a Magnolia module is a JAR, a Java file format used to package Java class files and {{resources}} (images, CSS, JavaScript) into one file. Deploying a Magnolia module involves copying the <b>JAR</b> <b>file</b> into the Java application server and restarting the Magnolia instance. Magnolia CMS recognizes the <b>JAR</b> <b>file</b> during the startup process and installs the module.|$|E
5000|$|Support for selfcontained {{components}} {{that can be}} included by dropping a <b>jar</b> <b>file</b> into WEB-INF/lib.|$|E
50|$|Any <b>JAR</b> <b>files</b> {{placed in}} the /WEB-INF/lib {{directory}} will also {{be placed on the}} ClassLoader's classpath.|$|R
5000|$|The current version {{ships with}} four <b>JAR</b> <b>files,</b> and shell scripts to launch four JMF-based applications: ...|$|R
5000|$|SAR (service archive) {{is similar}} to EAR. It {{provides}} a service.xml <b>file</b> and accompanying <b>JAR</b> <b>files.</b>|$|R
5000|$|Update a {{specified}} <b>jar</b> <b>file</b> by comparing all files' MD5 checksums, {{this is done}} in several steps described below.|$|E
50|$|Umple is {{available}} as a <b>Jar</b> <b>file</b> {{so it can be}} run from the command line, and as an Eclipse plugin.|$|E
50|$|Since the SWT {{implementation}} {{is different}} for each platform, a platform-specific SWT library (<b>JAR</b> <b>file)</b> must be distributed with each application.|$|E
5000|$|Most uses of <b>JAR</b> <b>files</b> {{go beyond}} simple {{archiving}} and compression and require special {{information in the}} manifest file.|$|R
5000|$|JAR hell: Overutilization of {{multiple}} <b>JAR</b> <b>files,</b> usually causing versioning and location problems because of {{misunderstanding of the}} Java class loading model ...|$|R
50|$|OSP Curricular Development: A set of programs, packages, and worksheets for the {{teaching}} of advanced physics topics. Many instructors do not teach (or do research in) computational physics. For these instructors they have made the various physical models available in an easily accessible, modifiable, and distributable form for teaching of physics. For convenience, OSP programs are almost always packaged in Java archive (<b>jar)</b> <b>files.</b> These <b>jar</b> <b>files</b> contain compiled code and resources such curricular materials, images, and data files.|$|R
5000|$|The JUpdater instance's updateJar {{method is}} called {{with the name}} of the <b>jar</b> <b>file</b> to update and the {{relevant}} program name.|$|E
50|$|JWt is {{distributed}} as a <b>jar</b> <b>file.</b> A JWt application {{is a war}} file that is deployed in a standards-compliant servlet container.|$|E
50|$|The {{content of}} the {{manifest}} file in a <b>JAR</b> <b>file</b> created with version 1.0 of the Java Development Kit is the following.|$|E
5000|$|... it is {{possible}} to open war and <b>jar</b> <b>files</b> to extract e add/replace file; <b>files</b> war and <b>jar</b> are still valid after that ...|$|R
5000|$|<b>JAR</b> <b>files</b> are archive {{files that}} include a Java-specific {{manifest}} file. They are built on the ZIP format and typically have a [...] file extension.|$|R
50|$|Modules {{are a new}} way of {{grouping}} {{code and}} data. Contrary to <b>Jar</b> <b>files,</b> modules explicitly declare which modules they depend on, and what packages they export.|$|R
5000|$|The {{contents}} of a <b>JAR</b> <b>file</b> may be extracted using any standard decompression software, or the [...] command line utility: [...] "".|$|E
5000|$|In C#, an {{assembly}} {{is the smallest}} deployment unit used, and is a component in [...]NET. In Java, it is a <b>JAR</b> <b>file.</b>|$|E
5000|$|... jar [...] - [...] the archiver, which {{packages}} related class libraries into {{a single}} <b>JAR</b> <b>file.</b> This tool also helps manage JAR files.|$|E
5000|$|JSmooth is a {{tool for}} {{wrapping}} Java <b>JAR</b> <b>files</b> into Windows Portable Executable EXE files. It allows specifying various details on how the program should be invoked, such as: ...|$|R
40|$|Abstract â€” In cloud to {{maintain}} data in secured manner using java archive <b>files</b> (<b>JAR)</b> for data storage. Whenever user accesses the data no other {{will get the}} transactions those are occurring on <b>JAR</b> <b>files.</b> For <b>JAR</b> <b>files</b> providing security through manifest files for accessing permissions. Along with this to provide more security applying Advanced Encryption Standard for log record which contain events those are performed by the user. These log files {{plays a key role}} in any organization privacy, so need to get service from trusted third party cloud service provider. For data access control using authentication and efficient accountability in cloud storage one have to use Cloud Information Accountability framework. It provides distributed accountability for data sharing among users of cloud...|$|R
40|$|A Java {{application}} is built {{of a large}} number of Java class files, which are collected and compressed in Java archive (<b>jar)</b> <b>files.</b> But the <b>jar</b> <b>files</b> typically shrink original class files by only fifty percent. Various projects have pursued ever smaller class files and they achieved very impressive results, but these results come at the cost of complicated and slow transformations. The class archive (car) format is an alternative for groups of class files. Car files are between one third and two thirds of the size of the corresponding <b>jar</b> <b>files</b> and between one seventh and one half of the size of the original class files. Although there are more compact archive formats, the car tools themselves are smaller and take far less time than the alternatives. This article also introduces a method to compare wire formats. The method does not only consider the size of the archive but also the bandwidth and the decompression speed. This method demonstrates that car is a better archive format in many situations...|$|R
