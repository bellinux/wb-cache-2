28|333|Public
25|$|In HTML {{character}} <b>entity</b> <b>reference,</b> {{the codes}} for Ñ and ñ are &Ntilde; and &ntilde; or &#209; and &#241;.|$|E
25|$|XML (and hence XHTML) defines an &apos; {{character}} <b>entity</b> <b>reference</b> for the ASCII typewriter apostrophe. No equivalent entity {{is defined}} in the HTML 4 standard, despite all the other predefined character entities from XML being defined in HTML. If it cannot be entered literally in HTML, a numeric character reference could be used instead, such as &#x27; or &#39;. &apos; is officially supported in HTML since HTML 5.|$|E
5000|$|... "¡" [...] and [...] "¿" [...] {{are both}} {{located within the}} Unicode Common block, and are both {{inherited}} from ISO-8859-1. [...] "¡" [...] has Unicode codepoint U+00A1 (decimal <b>entity</b> <b>reference</b> [...] ) and HTML named <b>entity</b> <b>reference</b> [...] [...] "¿" [...] has Unicode codepoint U+00BF (decimal <b>entity</b> <b>reference</b> [...] ) and has HTML named <b>entity</b> <b>reference</b> [...] In both cases, the [...] "i" [...] in the named <b>entity</b> <b>reference</b> is an initialism for [...] "inverted".|$|E
5000|$|Unlike {{traditional}} HTML {{with its}} large range of character <b>entity</b> <b>references,</b> in XML {{there are only}} five predefined character <b>entity</b> <b>references.</b> These are used to escape characters that are markup sensitive in certain contexts: ...|$|R
5000|$|... <b>entity</b> <b>references</b> and non-special {{character}} {{references are}} expanded ...|$|R
5000|$|This is {{possible}} because the replacement text {{specified in the}} internal entity definitions permits a distinction between parameter <b>entity</b> <b>references</b> (that are introduced by the [...] "%" [...] character and whose replacement applies to the parsed DTD contents) and general <b>entity</b> <b>references</b> (that are introduced by the [...] "&" [...] character and whose replacement is delayed until they are effectively parsed and validated). The [...] "%" [...] character for introducing parameter <b>entity</b> <b>references</b> in the DTD loses its special role outside the DTD {{and it becomes a}} literal character.|$|R
5000|$|In HTML, the {{horizontal}} ellipsis character may {{be represented by}} the <b>entity</b> <b>reference</b> [...] (since HTML 4.0), and the vertical ellipsis character by the <b>entity</b> <b>reference</b> [...] (since HTML 5.0). Alternatively, in HTML, XML, and SGML, a numeric character reference such as [...] or [...] can be used.|$|E
50|$|In HTML, a {{semicolon}} is used {{to terminate}} a character <b>entity</b> <b>reference,</b> either named or numeric.|$|E
5000|$|In HTML {{character}} <b>entity</b> <b>reference,</b> {{the codes}} for Ñ and ñ are [...] and [...] or [...] and [...]|$|E
50|$|In {{addition}} to native character encodings, characters {{can also be}} encoded as character references, which can be numeric character references (decimal or hexadecimal) or character <b>entity</b> <b>references.</b> Character <b>entity</b> <b>references</b> are also {{sometimes referred to as}} named entities, or HTML entities for HTML. HTML's usage of character references derives from SGML.|$|R
50|$|For {{the full}} list, see: List of XML and HTML {{character}} <b>entity</b> <b>references.</b>|$|R
5000|$|The HTML {{character}} <b>entity</b> <b>references</b> are [...] and [...] {{for lower}} and upper case, respectively.|$|R
5000|$|MICAR200 automates the {{multiple}} cause coding rules and assigns International Statistical Classification of Diseases and Related Health Problems (ICD) codes to each numeric <b>entity</b> <b>reference</b> number.|$|E
50|$|One {{drawback}} {{of escape}} sequences, when used by people, {{is the need}} to memorize the codes that represent individual characters (see also: character <b>entity</b> <b>reference,</b> numeric character reference).|$|E
5000|$|SuperMICAR automates the MICAR {{data entry}} process. This program is {{designed}} as an enhancement of the earlier PC-MICAR Data Entry program. Super-MICAR is designed to automatically encode cause-of-death data into numeric <b>entity</b> <b>reference</b> numbers.|$|E
25|$|In HTML/XHTML, the upper- and lower-case phi {{character}} <b>entity</b> <b>references</b> are &Phi; (Φ) and &phi; (φ), respectively.|$|R
2500|$|The HTML 4 {{character}} <b>entity</b> <b>references</b> for the Greek {{capital and}} small letter lambda are [...] "&#923;" [...] and [...] "&#955;", respectively.|$|R
5000|$|Parameter <b>entities</b> are <b>referenced</b> {{by placing}} the entity name between [...] "" [...] and [...] "". Parsed general <b>entities</b> are <b>referenced</b> {{by placing the}} entity name between [...] "" [...] and [...] "". Unparsed <b>entities</b> are <b>referenced</b> by placing the entity name {{in the value of}} an {{attribute}} declared as type ENTITY.|$|R
50|$|In Document Type Definition (DTD) {{files for}} SGML and XML, an {{attribute}} value may be designated as being of type CDATA: arbitrary character data. Within a CDATA-type attribute, character and <b>entity</b> <b>reference</b> markup is allowed {{and will be}} processed when the document is read.|$|E
50|$|There {{is another}} kind of {{character}} reference called a character <b>entity</b> <b>reference,</b> which allows a character {{to be referred to}} by a name instead of a number. (Naming a character creates a character entity.) HTML defines some character entities, but not many; all other characters can only be included by direct encoding or using NCRs.|$|E
5000|$|In contrast, a {{character}} <b>entity</b> <b>reference</b> refers to {{a character}} {{by the name of}} an entity which has the desired character as its replacement text. The entity must either be predefined (built into the markup language) or explicitly declared in a Document Type Definition (DTD). The format is the same as for any entity reference: ...|$|E
40|$|Wikipedia pagelinks, i. e. {{links between}} Wikipages, carry an {{intended}} semantics: they indicate {{the existence of}} a factual relation between the DBpedia <b>entity</b> <b>referenced</b> by the sourceWikipage, and the DBpedia <b>entity</b> <b>referenced</b> by the target Wikipage of the link. These relations are represented in DBpedia as occurrences of the generic ”wikiPageWikilink” property. We designed and implemented a novel method to uncover the intended semantics of pagelinks, and to represent them as semantic relations. In this paper,we test ourmethod on a subset of Wikipedia, showing its potential impact for DBpedia enrichment...|$|R
50|$|Transclusion can be {{accomplished}} on the server side, as through Server Side Includes and markup <b>entity</b> <b>references</b> resolved by the server software. It is a feature of substitution templates.|$|R
5000|$|The HTML 4 {{character}} <b>entity</b> <b>references</b> for the Greek {{capital and}} small letter lambda are [...] "&#923;" [...] and [...] "&#955;", respectively.The Unicode code points for lambda are U+039B and U+03BB.|$|R
50|$|An SGML or XML DTD {{may also}} include entity {{declarations}} {{in which the}} token CDATA is used to indicate that entity consists of character data. The character data may appear within the declaration itself or may be available externally, referenced by a URI. In either case, character reference and parameter <b>entity</b> <b>reference</b> markup is allowed in the entity, and will be processed as such when it is read.|$|E
5000|$|Note that {{reference}} to the [...] "author" [...] internal entity is not substituted in the replacement text of the [...] "signature" [...] internal entity. Instead, it is replaced only when the [...] "signature" [...] <b>entity</b> <b>reference</b> is parsed within {{the content of the}} [...] "sgml" [...] element, but only by validating parsers (non-validating parsers do not substitute entity references occurring within contents of element or within attribute values, {{in the body of the}} document.|$|E
50|$|Standard entity {{sets for}} SGML {{and some of}} its {{derivatives}} have been developed as mnemonic devices, to ease document authoring when {{there is a need to}} use characters that are not easily typed or that are not widely supported by legacy character encodings. Each such entity consists of just one character from the Universal Character Set. Although any character can be referenced using a numeric character reference, a character <b>entity</b> <b>reference</b> allows characters to be referenced by name instead of code point.|$|E
50|$|In {{addition}} to its suite of syntax usage, Textile automatically inserts character <b>entity</b> <b>references</b> for apostrophes, opening and closing single and double quotation marks, ellipses and em dashes, to name a few.|$|R
5000|$|All {{characters}} enclosed {{between these}} two sequences are interpreted as characters, not markup or <b>entity</b> <b>references.</b> Every character is taken literally, the only exception being the [...] sequence of characters. In:John Smith ...|$|R
40|$|Abstract. Wikipedia pagelinks, i. e. {{links between}} Wikipages, carry an {{intended}} semantics: they indicate {{the existence of}} a factual relation be-tween the DBpedia <b>entity</b> <b>referenced</b> to by the source Wikipage, and the DBpedia <b>entity</b> <b>referenced</b> to by the target Wikipage of the link. These relations are represented in DBpedia as triple occurrences of a generic ”wikiPageWikilinks ” property. We designed and implemented a novel method for uncovering the intended semantics of pagelinks, and represent them as semantic relations. In this paper, we experiment our method on a subset of Wikipedia showing its potential impact on DB-pedia enrichment. ...|$|R
5000|$|In HTML, vowels {{with double}} dots can be entered with an <b>entity</b> <b>reference</b> {{of the form}} , where [...] can be any of , , , , , [...] or their {{majuscule}} counterparts. With {{the exception of the}} uppercase Ÿ, these characters are also available in all of the ISO 8859 character sets and thus have the same codepoints in ISO-8859-1 (-2, -3, -4, -9, -10, -13, -14, -15, -16) and Unicode. The uppercase Ÿ is available in ISO 8859-15 and Unicode, and Unicode provides a number of other letters with double dots as well.|$|E
5000|$|Internal (parsed) {{entities}} are associating a {{name with}} any arbitrary textual content defined in their declaration (which {{may be in}} the internal subset or in the external subset of the DTD declared in the document). When a named <b>entity</b> <b>reference</b> is then encountered {{in the rest of the}} document (including in the rest of the DTD), and if this entity name has effectively been defined as a parsed entity, the reference itself is replaced immediately by the textual content defined in the parsed entity, and the parsing continues within this replacement text.|$|E
5000|$|Note that {{internal}} entities may {{be defined}} in any order, {{as long as they}} are not referenced and parsed in the DTD or in the body of the document, in their order of parsing: it is valid to include a reference to a still undefined entity within the content of a parsed entity, but it is invalid to include anywhere else any named <b>entity</b> <b>reference</b> before this entity has been fully defined, including all other internal entities referenced in its defined content (this also prevents circular or recursive definitions of internal entities). This document is parsed as if it was: ...|$|E
50|$|CDS confirmations also {{specify the}} credit events {{that will give}} rise to payment {{obligations}} by the protection seller and delivery obligations by the protection buyer. Typical credit events include bankruptcy {{with respect to the}} <b>reference</b> <b>entity</b> and failure to pay with respect to its direct or guaranteed bond or loan debt. CDS written on North American investment grade corporate <b>reference</b> <b>entities,</b> European corporate <b>reference</b> <b>entities</b> and sovereigns generally also include restructuring as a credit event, whereas trades referencing North American high-yield corporate <b>reference</b> <b>entities</b> typically do not.|$|R
40|$|Many entity {{extraction}} techniques leverage large <b>reference</b> <b>entity</b> {{tables to}} identify entities in documents. Often, an <b>entity</b> is <b>referenced</b> in document collections differently {{from that in}} the <b>reference</b> <b>entity</b> tables. Therefore, we study the problem of determining {{whether or not a}} substring “approximately” matches with a <b>reference</b> <b>entity.</b> Similarity measures which exploit the correlation between candidate substrings and <b>reference</b> <b>entities</b> across a large number of documents are known to be more robust than traditional stand alone string-based similarity functions. However, such an approach has significant efficiency challenges. In this paper, we adopt a new architecture and propose new techniques to address these efficiency challenges. We mine document collections and expand a given <b>reference</b> <b>entity</b> table with variations of each of its entities. Thus, the problem of approximately matching an input string against <b>reference</b> <b>entities</b> reduces to that of exact match against the expanded reference table, which can be implemented efficiently. In an extensive experimental evaluation, we demonstrate the accuracy and scalability of our techniques. 1...|$|R
50|$|A {{conforming}} SGML document must {{be either}} a type-valid SGML document, a tag-valid SGML document, or both. Note: A user may wish to enforce additional constraints on a document, such as whether a document instance is integrally-stored or free of <b>entity</b> <b>references.</b>|$|R
