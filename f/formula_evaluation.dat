46|405|Public
50|$|Buss proved in 1983 that Boolean <b>Formula</b> <b>Evaluation</b> {{problem is}} in ALogTime, a major result in {{complexity}} theory.|$|E
5000|$|... {{leading to}} an example of {{exponential}} quantum speedupand algorithms for spatial search, <b>formula</b> <b>evaluation,</b> and universal computationHe also developed quantum algorithms for algebraic problems and for simulating quantum systems.|$|E
50|$|The {{problem is}} {{complete}} for P under uniform AC reductions. The Boolean Formula Value Problem (or Boolean <b>Formula</b> <b>Evaluation</b> Problem) is the special {{case of the}} problem when the circuit is a tree. The Boolean Formula Value Problem is complete for NC.|$|E
5000|$|... #Subtitle level 3: Truth-value assignments, <b>formula</b> <b>evaluations</b> ...|$|R
40|$|Two <b>evaluation</b> <b>formulas</b> {{are derived}} for the Jack superpolynomials. The <b>evaluation</b> <b>formulas</b> are {{expressed}} in terms of products of fillings of skew diagrams. One of these formulas is nothing but the <b>evaluation</b> <b>formula</b> of the Jack polynomials with prescribed symmetry, which thereby receives here a remarkably simple formulation. Among the auxiliary results required to establish the <b>evaluation</b> <b>formulas,</b> the determination of the conditions ensuring the non-vanishing coefficients in a Pieri-type rule for Jack superpolynomials is worth pointing out. An important application of the <b>evaluation</b> <b>formulas</b> is a new derivation of the combinatorial norm of the Jack superpolynomials. We finally mention that the introduction of a simpler version of the dominance ordering on superpartitions is fundamental to establish our results. Comment: 42 pages, 10 figures. v 2 : minor corrections in Eqs (16) and (17...|$|R
40|$|Admission {{control is}} a {{procedure}} to guarantee a given level of Quality of Service (QoS) by accepting or rejecting arrival connection requests. There are many studies on backlog or loss rate <b>evaluation</b> <b>formulas</b> for admission control at a single node. However, there are few studies on end-to-end <b>evaluation</b> <b>formulas</b> suitable for admission control. In a previous paper, the authors proposed a new stochastic network calculus for many flows using an approach taken from large deviations techniques and obtained asymptotic end-to-end <b>evaluation</b> <b>formulas</b> for output burstiness and backlog. In this paper, we apply this stochastic network calculus to a heterogeneous tandem network with many forwarding flows and cross traffic flows constrained by leaky buckets, and obtain a simple <b>evaluation</b> <b>formula</b> for the end-to-end backlog. In this formula, the end-to-end backlog can be evaluated by the traffic load at the bottle neck node. This result leads us to {{a natural extension of}} the <b>evaluation</b> <b>formula</b> for a single node...|$|R
40|$|We {{present a}} time-efficient and query-optimal quantum {{algorithm}} for evaluating adversary-boundbalanced formulas on an extended gate set. The allowed gates include arbitrary two- and three-bit gates, {{as well as}} bounded fan-in AND, OR, PARITY and EQUAL gates. The technique behind the <b>formula</b> <b>evaluation</b> algorithm is a new framework for quantum algorithms based on span programs. For example, the classical complexity of evaluating the balanced ternary majority formula is unknown, and the natural generalization of the standard balanced AND-OR <b>formula</b> <b>evaluation</b> algorithm {{is known to be}} suboptimal. In contrast, a generalization of the optimal quantum {AND, OR, NOT} <b>formula</b> <b>evaluation</b> algorithm is optimal for evaluating the balanced ternary majority formula. ...|$|E
40|$|We give a new {{upper bound}} on the quantum query {{complexity}} of deciding st-connectivity on certain classes of planar graphs, and show the bound is sometimes exponentially better than previous results. We then show Boolean <b>formula</b> <b>evaluation</b> reduces to deciding connectivity on just such a class of graphs. Applying the algorithm for st-connectivity to Boolean <b>formula</b> <b>evaluation</b> problems, we match the O(√(N)) bound on the quantum query complexity of evaluating formulas on N variables, give a quadratic speed-up over the classical query complexity of a certain class of promise Boolean formulas, and show this approach can yield superpolynomial quantum/classical separations. These results indicate that this st-connectivity-based approach may be the "right" {{way of looking at}} quantum algorithms for <b>formula</b> <b>evaluation.</b> Comment: Quantum version. (Typos fixed, sections clarified, template updated.) This article supersedes arXiv: 1511. 0223...|$|E
40|$|A one-parameter {{generalisation}} R_λ(X;b) of the symmetric Macdonald polynomials and interpolations Macdonald polynomials is studied {{from the}} point of view of branching rules. We establish a Pieri <b>formula,</b> <b>evaluation</b> symmetry, principal specialisation formula and q-difference equation for R_λ(X;b). We also prove a new multiple q-Gauss summation formula and several further results for sl_n basic hypergeometric series based on R_λ(X;b). Comment: 28 page...|$|E
40|$|We {{study the}} {{generalization}} of shifted Jack polynomials to arbitrary multiplicity free spaces. In a previous paper (math. RT/ 0006004) {{we showed that}} these polynomials are eigenfunctions for commuting difference operators. Our central result now is the "transposition formula", a generalization of Okounkov's binomial theorem (q-alg/ 9608021) for shifted Jack polynomials. From this formula, we derive an interpolation <b>formula,</b> an <b>evaluation</b> <b>formula,</b> a scalar product, a binomial theorem, and properties of the algebra generated by the multiplication and difference operators. Comment: 36 pages, some typos correcte...|$|R
40|$|The formula-{{evaluation}} {{problem is}} defined recursively. A <b>formula’s</b> <b>evaluation</b> is {{the evaluation of}} a gate, the inputs of which are themselves independent formulas. Despite this pure recursive structure, the problem is combinatorially difficult for classical computers. A quantum algorithm is given to evaluate formulas over any finite boolean gate set. Provided that {{the complexities of the}} input subformulas to any gate differ by at most a constant factor, the algorithm has optimal query complexity. After efficient preprocessing, it is nearly time optimal. The algorithm is derived using the span program framework. It corresponds to the composition of the individual span programs for each gate in the formula. Thus the algorithm’s structure reflects the formula’s recursive structure. ...|$|R
40|$|Spectra-Based Fault Localisation (SBFL) aims {{to assist}} de- bugging by {{applying}} risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements {{according to the}} predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> using 92 faults from four Unix utilities produces promising results 1 Spectra-Based Fault Localisation (SBFL) aims to assist debugging by applying risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements according to the predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> using 92 faults from four Unix utilities produces promising results. GP-evolved equations can consistently outperform many of the human-designed formulæ, such as Tarantula, Ochiai, Jaccard, Ample, and Wong 1 / 2, up to 5. 9 times. More importantly, they can perform equally as well as Op 2, which was recently proved to be optimal against If-Then-Else- 2 (ITE 2) structure, or even outperform it against other program structures. 1. GP-evolved equations can consistently outperform many of the human-designed formulæ, such as Tarantula, Ochiai, Jaccard, Ample, and Wong 1 / 2, up to 5. 9 times. More importantly, they can perform equally as well as Op 2, which was recently proved to be optimal against If-Then-Else- 2 (ITE 2) structure, or even outperform it against other program structures. 1 The program spectra data used in the paper, {{as well as the}} complete empirical results, are available from...|$|R
40|$|We treat spherically {{symmetric}} {{black holes}} in Gauss-Bonnet gravity by imposing boundary conditions on fluctuating metric on the horizon. Obtained effective two-dimensional theory admits Virasoro algebra near the horizon. This enables, {{with the help}} of Cardy <b>formula,</b> <b>evaluation</b> of the number of states. Obtained results coincide with the known macroscopic expression for the entropy of black holes in Gauss-Bonnet gravity. ...|$|E
40|$|Abstract. A one-parameter {{generalisation}} Rλ(X; b) of the symmetric Macdonald polynomials and interpolations Macdonald polynomials is studied {{from the}} point of view of branching rules. We establish a Pieri <b>formula,</b> <b>evaluation</b> symmetry, principal specialisation formula and q-difference equation for Rλ(X; b). We also prove a new multiple q-Gauss summation formula and several further results for sln basic hypergeometric series based on Rλ(X; b). 1...|$|E
40|$|Abstract. We give a #NC 1 {{upper bound}} for the problem of {{counting}} accepting paths in any fixed visibly pushdown automaton. Our algorithm involves a non-trivial adaptation of the arithmetic <b>formula</b> <b>evaluation</b> algorithm of Buss, Cook, Gupta, Ramachandran ([9]). We also show {{that the problem is}} #NC 1 hard. Our results show that the difference between #BWBP and #NC 1 is captured exactly by the addition of a visible stack to a nondeterministic finite-state automaton. ...|$|E
40|$|Spectra-Based Fault Localisation (SBFL) aims {{to assist}} de- bugging by {{applying}} risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements {{according to the}} predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> There has been much recent interest in genetic improvement of programs. However, genetic improvement has yet to scale beyond toy laboratory programs. We seek to overcome this scalability barrier. We evolved a widely-used and highly complex 50 000 line GP-evolved system, seeking equations can consistently improved versions outperform that are many faster of than the the human-designed original, yet at least formulæ, as good semantically. such as Tarantula...|$|R
40|$|Spectra-Based Fault Localisation (SBFL) aims {{to assist}} de- bugging by {{applying}} risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements {{according to the}} predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> We study a generic program to investigate the scope for automatically customising it for a vital current task, which was not considered {{when it was first}} written. In detail, we show genetic programming (GP) can evolve models of aspects of BLAST’s output when it is used to map Solexa Next-Gen DNA sequences to the human genome [...] GP-evolved equations can consistently Keywords: outperform 1000 genomes man...|$|R
40|$|Given the {{coordinates}} of four terminals in the Euclidean plane we present explicit formulas for Steiner point coordinates for Steiner minimal tree problem. We utilize the obtained <b>formulas</b> for <b>evaluation</b> {{of the influence}} of terminal coordinates on the loci of Steiner points. Comment: 19 pages, 7 figure...|$|R
40|$|This paper {{introduces}} {{and documents}} DEMO, a Dynamic Epistemic Modelling tool. DEMO allows modelling epistemic updates, graphical display of update results, graphical display of action models, <b>formula</b> <b>evaluation</b> in epistemic models, translation of dynamic epistemic formulas to PDL formulas. Also, DEMO implements {{the reduction of}} dynamic epistemic logic to PDL. The paper is an exemplar of tool building for epistemic update logic. It contains the essential code of an implementation of DEMO in Haskell, in Knuth’s ‘literate programming’ style...|$|E
40|$|Levesque’s proper {{knowledge}} bases (proper KBs) {{correspond to}} infinite sets of ground {{positive and negative}} facts, with the notable property that for FOL formulas in a certain normal form, which includes conjunctive queries and positive queries possibly extended with a controlled form of negation, entailment reduces to <b>formula</b> <b>evaluation.</b> However proper KBs represent extensional knowledge only. In description logic terms, they correspond to ABoxes. In this paper, we augment them with DL-Lite TBoxes, expressing intensional knowledge (i. e., the ontology of the domain). DL-Lite has the notable property that conjunctive query answering over TBoxes and standard description logic ABoxes is re- ducible to <b>formula</b> <b>evaluation</b> over the ABox only. Here, we investigate whether such a property extends to ABoxes consisting of proper KBs. Specifically, we consider two DL-Lite variants: DL-Literdfs, roughly corresponding to RDFS, and DL-Lite_core, roughly corresponding to OWL 2 QL. We show that when a DL- Lite_rdfs TBox is coupled with a proper KB, the TBox can be compiled away, reducing query answering to evaluation on the proper KB alone. But this reduction {{is no longer possible}} when we associate proper KBs with DL-Lite_core TBoxes. Indeed, we show that in the latter case, query answering even for conjunctive queries becomes coNP-hard in data complexity...|$|E
40|$|Weanalyze the {{semantics}} of ATL ∗ {{and related}} logics for strategic abilities. Our {{focus is on}} how these logics treat agents ’ commitments to strategies {{in the process of}} <b>formula</b> <b>evaluation.</b> We point out some questionable effects in that respect in the standard semantics, and discuss some al-ternatives leading to amendments of that semantics. We also propose and discuss various syntactic and semantics mechanisms for handling commitments to strategies and release from such commitments in the semantics of ATL∗, leading to more expressive and semantically refined versions of that logic. ...|$|E
40|$|In {{the paper}} the regular {{skeleton}} of graph is defined and the generalized <b>formula</b> for <b>evaluation</b> of network determinants is presented. This reqiure explicit {{listing of the}} all regular multiskeletons of connected multigraph. The computer programs NTW 001 and NTWTOOBV based on this methods will be presented...|$|R
40|$|Abstract. Based on the Japan recommendations, {{the formula}} of yield {{strength}} for RCFT (reinforced concrete filled steel tube) columns was proposed, {{the effect of}} experimental coefficient such as concrete strength, diameter-thickness ratio of steel tube, number of steel bars on yield strength of RCFT was analyzed, and strength <b>evaluation</b> <b>formula</b> for RCFT column is tested by experimental results. As a result, the proposed <b>evaluation</b> <b>formula</b> can evaluate yield strength of RCFT column properly...|$|R
40|$|Abstract. Spectra-Based Fault Localisation (SBFL) aims {{to assist}} {{debugging}} by applying risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements {{according to the}} predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming (GP) approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> using 92 faults from four Unix utilities produces promising results 1. Equations evolved by Genetic Programming can consistently outperform many of the human-designed formulæ, such as Tarantula, Ochiai, Jaccard, Ample, and Wong 1 / 2, up to 6 times. More importantly, they can perform equally as well as Op 2, which was recently proved to be optimal against If-Then-Else- 2 (ITE 2) structure, or even outperform it against other program structures. ...|$|R
40|$|We {{describe}} {{a method to}} upper bound the quantum query complexity of Boolean <b>formula</b> <b>evaluation</b> problems, using fundamental theorems about the general adversary bound. This nonconstructive method can give an upper bound on query complexity without producing an algorithm. For example, we {{describe a}}n oracle problem which we prove (non-constructively) can be solved in $O(1) $ queries, where the previous best quantum algorithm uses a polylogarithmic number of queries. We then give an explicit $O(1) $-query algorithm for this problem based on span programs. Comment: Journal version. Edited for clarity and conciseness. Haar transform algorithm remove...|$|E
40|$|A one-parameter {{rational}} function generalisation (X;b) of the symmetric Macdonald polynomial and interpolation Macdonald polynomial is studied {{from the point}} of view of branching rules. We establish a Pieri <b>formula,</b> <b>evaluation</b> symmetry, principal specialisation formula and q-difference equation for (X;b). Our main motivation for studying (X;b) is that it leads to a new class of basic hypergeometric series, generalising the well-known basic hypergeometric series with Macdonald polynomial argument. For these new series we prove analogues of the q-Gauss and q-Kummer-Thomae-Whipple formulas. In a special limit, one of our results implies an elegant binomial formula for Jack polynomials, different to that of Kaneko, Lassalle, Okounkov and Olshanski...|$|E
40|$|We {{describe}} {{a method for}} upper bounding the quantum query complexity of certain boolean <b>formula</b> <b>evaluation</b> problems, using fundamental theorems about the general adversary bound. This nonconstruc-tive method gives an upper bound on query complexity without producing an algorithm. For example, we {{describe a}}n oracle problem which we prove (non-constructively) can be solved in O(1) queries, where the previous best quantum algorithm uses a polynomial number of queries. We then give an explicit O(1) query algorithm based on span programs, and show that for a special case of this problem, there exists a O(1) query algorithm that uses the quantum Haar transform. This special case is a potentially interesting problem in its own right, which we call the Haar Problem. ...|$|E
30|$|On {{the other}} hand, the SVM cannot use the above optimal design methods {{because we have}} no <b>evaluation</b> <b>formula</b> for the variances of {{parameter}} estimators in the SVM setting. Actually as seen from (3), the numbers of parameters and samples are the same, {{and so we have}} no <b>evaluation</b> <b>formula</b> even in an asymptotical form. Under this situation, Tong & Koller [12] propose a new criterion for sampling based on the version space for the SVM.|$|R
40|$|Institute for Radioprotection and Nuclear Safety (IRSN) and the OECD Nuclear Energy Agency (NEA) jointly {{organized}} SILENE Accident Dosimetry Intercomparison Exercise to intercompare {{the dose}} measurement systems of participating countries. Each participating country carried out dose measurements {{in the same}} irradiation field, and the measurement results were mutually compared. The participated in the exercise to measure the doses of gamma rays and neutron from SILENE by using thermoluminescence dosimeters (TLD's) and an alanine dosimeter. In this examination, the derived <b>evaluation</b> <b>formulae</b> for obtaining a tissue-absorbed dose from measured value (ambient dose equivalent) of TLD for neutron. We reported the tissue-absorbed dose computed using this <b>evaluation</b> <b>formula</b> to OECD/NEA. TLD's for neutron were irradiated in the TRACY facility to verify the <b>evaluation</b> <b>formulae.</b> The results of TLD's were compared with the calculations of MCNP and measurements with alanine dose meter. We found that {{the ratio of the}} dose by the <b>evaluation</b> <b>formula</b> to the measured value by the alanine dosimeter was 0. 94 and the formula agreed within 6 %. From examination of this TRACY, we can conclude that the value reported to OECD/NEA has equivalent accuracy...|$|R
50|$|In {{computer}} science, {{applications of}} this type arise in instruction scheduling, ordering of <b>formula</b> cell <b>evaluation</b> when recomputing <b>formula</b> values in spreadsheets, logic synthesis, determining the order of compilation tasks to perform in makefiles, data serialization, and resolving symbol dependencies in linkers. It {{is also used to}} decide in which order to load tables with foreign keys in databases.|$|R
40|$|Abstract. Dynamic epistemic {{logic is}} {{the logic of}} the effects of epistemic actions like making public announcements, passing private messages, {{revealing}} secrets, telling lies. This paper takes its starting point from the version of dynamic epistemic logic of [2], and demonstrates a tool {{that can be used for}} showing what goes on during a series of epistemic updates: the dynamic epistemic modelling tool DEMO [7, 9]. DEMO allows modelling epistemic updates, graphical display of update results, graphical display of action models, <b>formula</b> <b>evaluation</b> in epistemic models, and translation of dynamic epistemic formulas to PDL [22] formulas. DEMO is written in Haskell. This paper intends to demonstrate its usefulness for visualizing the model transformations that take place during epistemic updating. Project paper, on the application of functional programming in a new area. ...|$|E
40|$|Biophysics is {{the area}} of research, devoted to the studies of {{physical}} problems related to living systems. Animal cell is the smallest unit of an organism and mainly contains water solutions of structurally inhomogeneous polymers of biological origin: polypeptides (proteins) and polynucleotides (DNA, RNA). Statistical physics of macromolecules allows to describe the conformations of both synthetic and bio-polymers and constitutes the basis of Biophysics. During the talk I will report on the biophysical problems I have solved with numerical simulations (Langevin-based Molecular Dynamics of Go-like protein folding model and Monte Carlo with Wang-Landau sampling) and analytical studies of spin models (<b>formula</b> <b>evaluation</b> by hand, enforced with computer algebra systems). The direct connections with the theory of phase transitions, algebra of non-commutative operators and decorated spin models will be elucidated...|$|E
40|$|Dynamic epistemic {{logic is}} {{the logic of}} the effects of epistemic actions like making public announcements, passing private messages, {{revealing}} secrets, telling lies. This paper takes its starting point from the version of dynamic epistemic logic of [4], and demonstrates a tool {{that can be used for}} showing what goes on during a series of epistemic updates: the dynamic epistemic modeling tool DEMO [10]. DEMO allows modeling epistemic updates, graphical display of update results, graphical display of action models, <b>formula</b> <b>evaluation</b> in epistemic models, and translation of dynamic epistemic formulas to PDL [22] formulas. DEMO is written in Haskell. This paper intends to demonstrate its usefulness for visualizing the model transformations that take place during epistemic updating. Project paper, on the application of functional programming in a new area. ...|$|E
40|$|Spectra-Based Fault Localisation (SBFL) aims {{to assist}} de- bugging by {{applying}} risk <b>evaluation</b> <b>formulæ</b> (sometimes called suspiciousness metrics) to program spectra and ranking statements {{according to the}} predicted risk. Designing a risk <b>evaluation</b> <b>formula</b> is often an intuitive process done by human software engineer. This paper presents a Genetic Programming approach for evolving risk assessment <b>formulæ.</b> The empirical <b>evaluation</b> using 92 faults from four Unix utilities produces promising results 1. GP-evolved equations can consistently outperform many of the human-designed formulæ, such as Tarantula, Ochiai, Jaccard, Ample, and Wong 1 / 2, up to 5. 9 times. More importantly, they can perform equally as well as Op 2, which was recently proved to be optimal against If-Then-Else- 2 (ITE 2) structure, or even outperform it against other program structures. 1 The program spectra data used in the paper, {{as well as the}} complete empirical results, are available from...|$|R
40|$|As a {{promising}} automatic fault localization technique, Spectrum-Based Fault Localization (SBFL) {{has been proposed}} and widely studied for years, in which the effectiveness of risk <b>evaluation</b> <b>formula</b> {{is one of the}} most popular research topics. We have developed a framework to support the theoretical analysis of risk <b>evaluation</b> <b>formulas,</b> via subset relations. In this paper, we would like to further justify the assumptions used in our framework, which are not only to make the theoretical analysis be feasible, but they are actually required either explicitly or implicitly by SBFL...|$|R
40|$|This paper, {{considers}} various Graph Theory {{terms and}} definitions. The Chromatic Join of two partitions P and Q of Sn and the matrix M (n) {{associated with such}} a Chromatic Joins. The order of auxiliary matrix A (n, P) and also recursion formula for det{A(n, P) }. Further it discussed the <b>formula</b> for <b>evaluation</b> of the determinants of det{A(n, P) }...|$|R
