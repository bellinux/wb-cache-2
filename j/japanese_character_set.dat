5|5641|Public
50|$|EUC-JP is a variable-width {{encoding}} used {{to represent}} the elements of three <b>Japanese</b> <b>character</b> <b>set</b> standards, namely JIS X 0208, JIS X 0212, and JIS X 0201. 0.3% of all web pages use EUC-JP in January 2016.|$|E
5000|$|The {{included}} [...] "F-BASIC" [...] is {{an enhanced}} version of Microsoft's Color BASIC. F-BASIC's {{additions to the}} standard Microsoft CoCo BASIC include the <b>Japanese</b> <b>character</b> <b>set</b> (katakana, and a few kanji), block graphics, three-voice music, the ability to have graphics appear on the default text screen, and some neat commands such as {{being able to take}} any string and print it out in various sizes (from tiny to huge) and directions (forward, backward, up, down, etc.).|$|E
50|$|About 30% of {{simplified}} Chinese characters match simplified kanji (see shinjitai). This {{makes it}} easier for people who know simplified characters {{to be able to read}} and understand Japanese kanji. For example, the character 国 (country) is written the same way in Japanese (国) although in traditional Chinese it is 國. However, those who understand traditional Chinese will understand a much greater proportion of Japanese Kanji, as the current standard <b>Japanese</b> <b>character</b> <b>set</b> is much more similar to traditional Chinese.|$|E
50|$|The CJK <b>character</b> <b>sets</b> take up {{the bulk}} of the {{assigned}} Unicode code space. There is much controversy among Japanese experts of Chinese characters about the desirability and technical merit of the Han unification process used to map multiple Chinese and <b>Japanese</b> <b>character</b> <b>sets</b> into a single <b>set</b> of unified <b>characters.</b>|$|R
5000|$|JIS X 0212:1990 - Supplementary <b>Japanese</b> graphic <b>character</b> <b>set</b> for {{information}} interchange ...|$|R
5000|$|JIS X 0212 “Code of the {{supplementary}} <b>Japanese</b> graphic <b>character</b> <b>set</b> {{for information}} interchange” ...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (1997). All Rights Reserved. This memo defines an encoding scheme for the Japanese Characters, describes "ISO- 2022 -JP- 1 ", which is used in electronic mail [RFC- 822], and network news [RFC 1036]. Also this memo provides a listing of the <b>Japanese</b> <b>Character</b> <b>Set</b> {{that can be used}} in this encoding scheme. 2. Requirements Notation This document uses terms that appear in capital letters to indicate particular requirements of this specification. Those terms are "MUST", "SHOULD", "MUST NOT", "SHOULD NOT", and "MAY". The meaning o...|$|E
40|$|The {{proposal}} {{is to add}} the character � NEGATIVE CIRCLED DIGIT ZERO, to complete the series U+ 2776 � – U+ 277 F �, U+ 24 EB � – U+ 24 F 4 �, and make it similar to the series U+ 24 EA �, U+ 2460 � – U+ 2473 �. This character is found in fonts that include circled digits and numbers, such as the font European Pi 1 sold by Adobe Systems Inc. It {{is also found in}} two Japanese vendors character sets: Biblos Gaiji character set (at F 2 94) and Fontworks <b>Japanese</b> <b>character</b> <b>set</b> (at F 2 4 E); those sets are described in Ken Lunde’s book “CJKV Information Processing”, pages 570 and 575 respectively. The proposed code point is U+ 24 FF, the last unassigned code point in the Enclosed Alphanumerics block (in Unicode 3. 2). The properties are modeled on those of similar characters...|$|E
5000|$|G-mode Co., Ltd (Kabushikigaisha Jī MōdoInstalling <b>Japanese</b> <b>character</b> <b>sets)</b> is a <b>Japanese</b> {{company that}} {{provides}} mobile network game contents {{that specialize in}} Java game software in Japan. It develops and distributes games for Java-compatible mobile phones. [...] The company also licenses contents for mobile telecommunications operators, as well as involves in the original equipment manufacturing of mobile phone games.|$|R
2500|$|ISO/IEC 2022 (based on {{sequence}} {{codes to}} switch between Chinese, <b>Japanese,</b> Korean <b>character</b> <b>sets</b> – hence without unification) ...|$|R
5000|$|In addition, {{people taking}} Japanese {{citizenship}} {{must take a}} name using the <b>Japanese</b> <b>character</b> <b>sets</b> hiragana, katakana, and/or kanji. Names using Western alphabet, Korean characters, Arabic characters, etc. are not acceptable as legal names. Chinese characters are usually legally acceptable as nearly all Chinese characters are recognized as valid by the Japanese government. Transliterations of non-Japanese names using katakana (e.g. 　"" [...] for [...] "Smith") are also legally acceptable.|$|R
5000|$|To {{indicate}} a postal code, the mark is written first, and the postal code is written after. For example, {{one area of}} Meguro, Tokyo, would have [...] written on any mail, in order to direct mail to that location. This usage {{has resulted in the}} inclusion of the mark into the <b>Japanese</b> <b>character</b> <b>sets</b> for computers, and thus eventually their inclusion into Unicode, where it can also be found on the Japanese Post Office emoji. In most keyboard-based Japanese input systems, it can be created by typing [...] "yuubin" [...] and then doing a kanji conversion.|$|R
50|$|In 1990 the Japanese Standards Association (JSA) {{released}} a supplementary <b>character</b> <b>set</b> standard: JIS X 0212-1990 Code of the Supplementary <b>Japanese</b> Graphic <b>Character</b> <b>Set</b> for Information Interchange (Jōhō Kōkan'yō Kanji Fugō - Hojo Kanji). This standard {{was intended to}} supplement and extend the range of characters available in the main JIS X 0208 <b>character</b> <b>set,</b> and to address shortcomings in the coverage of that set.|$|R
50|$|The second {{standard}} JIS C 6226-1983 “Code of <b>Japanese</b> Graphic <b>Character</b> <b>Set</b> for Information Interchange” (Jōhō Kōkan'yō Kanji Fugōkei) {{revised the}} first standard on 1 September 1983. It is also called 83JIS. Entrusted by the AIST, a JIPDEC kanji code-related JIS committee produced the draft. The committee chairman was Motooka Tōru.|$|R
50|$|It {{was also}} {{believed}} {{that many of the}} expressions of <b>Japanese</b> <b>characters</b> in movies <b>set</b> in the Second Sino-Japanese War (e.g. 悄悄地进村，打枪的不要) are derived from Chinese-based Xieheyu. Hence, it is typical of <b>Japanese</b> <b>characters</b> in movies shows to speak in that manner.|$|R
5000|$|JIS X 0201, a Japanese Industrial Standard {{developed}} in 1969 (then called JIS C 6220 until the JIS category reform), {{was the first}} <b>Japanese</b> electronic <b>character</b> <b>set</b> to become widely used. It is either 7-bit encoding or 8-bit encoding, although 8-bit encoding is dominant for modern use. The full name of this standard is 7-bit and 8-bit coded <b>character</b> <b>sets</b> for information interchange (...) [...]|$|R
50|$|The third {{standard}} JIS X 0208-1990 “Code of <b>Japanese</b> Graphic <b>Character</b> <b>Set</b> for Information Interchange” (Jōhō Kōkan'yō Kanji Fugō) {{revised the}} second standard on 1 September 1990. It is also called 90JIS for short. Entrusted by the AIST, a committee at the Japanese Standards Association for the revision of JIS X 0208 created the draft. The committee chairman was Tajima Kazuo.|$|R
40|$|Key term {{extraction}} is {{very useful}} for information retrieval. Most term extraction methods {{use one of}} two approaches, namely lexical and grammatical. We argue that due to the differences in linguistic and <b>character</b> <b>set</b> characteristics of Chinese and Japanese, a lexical approach is more suitable for Chinese whereas a grammatical approach is more suitable for Japanese. In this paper, we present two simple yet powerful systems for Chinese and Japanese key term extraction [...] -CXtract and JBrat. CXtract uses predominantly statistical lexical information to find term boundaries in large text. JBrat is based on morphosyntactic information of the <b>Japanese</b> <b>character</b> <b>sets</b> for terms. Evaluation results show that CXtract has a 80. 24 % average precision in term extraction, and JBrat has a 88. 07 % average precision. 1 Introduction Linguists {{have argued that the}} smallest semantic unit is often not a single word, as defined by a string of letters delimited by spaces, but a phrase (or a term) (Pinchuck 19 [...] ...|$|R
50|$|The first {{standard}} is JIS C 6226-1978 “Code of <b>Japanese</b> Graphic <b>Character</b> <b>Set</b> for Information Interchange” (Jōhō Kōkan'yō Kanji Fugōkei), {{established by the}} Japanese Minister of International Trade and Industry on 1 January 1978. It is also called 78JIS for short. Entrusted by the Agency of Industrial Science and Technology, a JIPDEC kanji code standardization research and study committee produced the draft. The committee chairman was Moriguchi Shigeichi.|$|R
5000|$|Captain {{differed}} from comparable European videotex systems {{by not being}} based on the transmission of alphanumeric <b>characters.</b> The <b>Japanese</b> kanji <b>character</b> <b>set</b> has over 3,500 characters, and in the late 1970s to try to include a character generator in the user's terminal that could retain and then generate so many characters on demand was seen as prohibitive. Instead pages were therefore substantially sent to the end user as pre-rendered images, using coding strategies similar to facsimile machines.|$|R
40|$|The nearest {{neighbor}} (NN) {{approach is a}} powerful nonparametric technique for pattern classification tasks. Although the brute-force NN algorithm is simple and has high accuracy, its computation cost is usually very expensive, especially for applications such as <b>Japanese</b> <b>character</b> recognition in which the number of categories is large. Many methods have been proposed to improve the efficiency of NN classifiers by {{reducing the number of}} prototypes and speeding up NN search. In this paper, algorithms for prototype reduction, hierarchical prototype organization and fast NN search are described. To remove redundant category prototypes and to avoid redundant comparisons, the algorithms exploit geometrical information of a given prototype set which is represented approximately by computing k-nearest/farthest neighbors of each prototype. The performance of a NN classifier using those algorithms for <b>Japanese</b> <b>character</b> recognition is reported. Given a large <b>Japanese</b> <b>character</b> training <b>set,</b> only [...] ...|$|R
40|$|Since the {{standardization}} of Emoticons (so-called Emoji) and Variation Selectors for their visual shapes, some typographic requirements {{to control the}} visual shapes are being introduced to the plain text encoding by using VS technology. The GETA MARK (“〓 ” U+ 3013) could be considered {{as one of the}} characters which have so many visual shapes to be distinguished. In this document, the merits to standardize Geta VS (GVS) are discussed. 1. Background of Separately Coded GETA MARK The geta mark was originally coded by <b>Japanese</b> coded <b>character</b> <b>set</b> JIS C 6226 - 1978, and Chinese standard GB 2312 - 1980 included it too (Figure 1). The origin of geta is recognized as the upside-down metal sort while the typesetters could not find the appropriate glyph from their collection. If the upside-down metal sort is included, the inked image by 2 feet and 1 groove (see Figure 2) is printed...|$|R
25|$|Communication {{software}} {{allowing the}} use of Shift JIS encoded <b>Japanese</b> <b>characters</b> rather than just ASCII allowed {{for the development of}} new kaomoji using the extended <b>character</b> <b>set,</b> such as (^ム^) or (益).|$|R
5000|$|Half-width kana and 2/3-width kana {{were used}} from pre-{{computer}} era. In the early computer era, ASCII {{is defined as}} a 7-bit <b>character</b> <b>set</b> and has room for 128 characters. However, since this standard was designed for the United States, it does not contain characters and symbols, such as the [...] yen (¥) symbol needed to represent Japanese currency, nor did it include space for characters from other alphabets, such as kana or kanji - thus <b>Japanese</b> <b>characters</b> could not be encoded. Further, <b>Japanese</b> <b>characters,</b> both kana and kanji, are drawn on a square grid, while Latin characters are generally written more narrowly - thus <b>Japanese</b> <b>characters</b> could not be displayed either.|$|R
50|$|The Hitachi HD44780 LCD {{controller}} is {{an alphanumeric}} dot matrix {{liquid crystal display}} (LCD) controller developed by Hitachi that was commonly used during the MCS-51 era. It was made commercially available around year 1987. The <b>character</b> <b>set</b> of the controller includes ASCII <b>characters,</b> <b>Japanese</b> Kana <b>characters,</b> and some symbols in two 28 character lines. Using an extension driver, the device can display up to 80 characters.|$|R
5000|$|Encoding. Useful {{for writing}} other {{alphabet}} characters in ASCII. With Latin <b>characters,</b> this is <b>set</b> to zero. With <b>Japanese</b> <b>characters,</b> {{it can be}} set to 128 (ex: [...] displays Sora kanji). With Hebrew characters, it can be set to 177.|$|R
2500|$|In {{the late}} 1970s, two-byte <b>character</b> <b>sets</b> such as JIS X 0208 were {{introduced}} to support {{the full range of}} <b>Japanese</b> <b>characters,</b> including katakana, hiragana and kanji. Their display forms were designed to fit into an approximately square array of pixels, hence the name [...] "full-width". For backwards compatibility, separate support for half-width katakana has continued to be available in modern multi-byte encoding schemes such as Unicode, by having two separate blocks of characters – one displayed as usual (full-width) katakana, the other displayed as half-width katakana.|$|R
30|$|A {{database}} of online <b>Japanese</b> <b>character</b> patterns [31, 171] was compiled to support research in <b>Japanese</b> <b>character</b> recognition systems. These characters were extracted from unconstrained textual phrases provided by 80 writers. The text was collected from Japanese newspapers and produced 1227 frequently occurring <b>Japanese</b> <b>character</b> categories. The patterns were manually inspected and corrected to remove errors and wrongly written characters. The database {{has been used}} in a number of online character recognition systems [172 – 175].|$|R
50|$|An early version offer {{support for}} <b>Japanese</b> <b>characters.</b>|$|R
5000|$|Ikuko Itoh, <b>Japanese</b> <b>character</b> {{designer}} and animation director ...|$|R
2500|$|Multiple <b>Japanese</b> <b>characters</b> {{have the}} same pronunciations, so several Japanese names have {{multiple}} meanings. A particular kanji itself can have multiple meanings and pronunciations. In some names, <b>Japanese</b> <b>characters</b> phonetically [...] "spell" [...] a name and have no intended meaning behind them. Many Japanese personal names use puns.|$|R
5000|$|Rin Shin (りんしん), <b>Japanese</b> <b>character</b> designer, {{animator}} and illustrator ...|$|R
2500|$|Iroha, a {{particular}} poem using <b>Japanese</b> <b>characters</b> uniquely and sequentially ...|$|R
5000|$|... 【意馬心猿】 (uncontrollable) passions (<b>Japanese</b> <b>Character</b> Dictionary, Spahn and Hadamitzky 1989) ...|$|R
5000|$|... #Caption: Fairing decal of the <b>Japanese</b> <b>character</b> 隼, {{peregrine}} falcon.|$|R
5000|$|Hirokazu Hisayuki, <b>Japanese</b> <b>character</b> {{designer}} and animation director for Sunrise ...|$|R
