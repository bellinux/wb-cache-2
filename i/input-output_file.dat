2|3|Public
40|$|Abstract. The {{study of}} human {{interactions}} and the modeling of social structures often require large-scale computational experiments involving complex models and substantial computational resources. The formulation of such models and computations can be taxing for researchers. We introduce the Swift parallel programming system and the SwiftScript scripting language, which together enable the rapid specification and execution of such experiments. The researcher specifies computation in SwiftScript, via a set of procedures with <b>input-output</b> (<b>file)</b> dependencies; the Swift system can then execute various sub-computations on parallel and/or distributed computing systems, ensuring reliable execution and respecting data dependencies. We present Swift features by describing their use in a computational economics application, a moral hazard problem. The benefits obtained suggest that Swift may also have utility in other social sciences...|$|E
40|$|The {{study of}} human {{interactions}} and the modeling of social structures often needs large scale experiments that involve complex models and large computational resources. These are are very taxing requirements placed on the researchers, and often limit {{the scale of the}} investigation quite significantly. We introduce the Swift virtual application infrastructure and the SwiftScript workflow lan-guage as the means to enable the researchers to set up and manage large experiments that need to execute on distributed resources, such as, for instance, academic Grids. We propose a computation model where various components of the experiment are distributed across com-putational resources, and the researcher expresses in SwiftScript the experiment logic through <b>input-output</b> (<b>file)</b> dependencies. We present the features of the Swift infrastructure by describing them in relation with a successful ongoing project that is being conducted by researchers from the Economics Depart-ment at the University of Chicago. The obvious benefits (such as significant speedup and reduced experiment management tasks) in a “(computationally) heavyweight ” social science such as Economics suggest the fitness of SwiftScript for all the other research domains in social sciences. ...|$|E
5000|$|... many <b>input-output</b> {{chemical}} <b>file</b> formats, including simplified molecular-input line-entry system (SMILES), Chemical Markup Language (CML), {{and chemical}} table file (MDL) ...|$|R
40|$|Operating Systems {{deals with}} the {{fundamental}} concepts and principles that govern the behavior of operating systems. Many issues regarding the structure of operating systems, including the problems of managing processes, processors, and memory, are examined. Various aspects of operating systems are also discussed, from <b>input-output</b> and <b>files</b> to security, protection, reliability, design methods, performance evaluation, and implementation methods. Comprised of 10 chapters, this volume begins with an overview of what constitutes an operating system, followed by a discussion on the definition and p...|$|R
50|$|Canvas is {{available}} in a standard and extended version. The once-optional Scientific Imaging module is now integrated into Canvas and provides enhanced <b>input-output</b> filters for <b>file</b> formats commonly used {{in science and engineering}} visualization. The geographic information system (GIS) module provides tools for use in mapping and GIS-based data analysis.|$|R

