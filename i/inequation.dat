79|209|Public
2500|$|By {{reversing}} the <b>inequation,</b> [...] and [...] can be swapped, for example: ...|$|E
2500|$|The symbol used {{to denote}} <b>inequation</b> (when items are not equal) is a slashed equals sign [...] "≠" [...] (U+2260; 2260,Alt+X in Microsoft Windows). In LaTeX, {{this is done}} with the [...] "\neq" [...] command.|$|E
2500|$|Each {{side of the}} {{equation}} corresponds {{to one side of the}} balance. Different quantities can be placed on each side: if the weights on the two sides are equal, the scale balances, and in analogy the equality that represents the balance is also balanced ( [...] if not, then the lack of balance corresponds to an inequality represented by an <b>inequation).</b>|$|E
40|$|Linear {{arithmetic}} extended {{with free}} predicate symbols is undecidable, in general. We {{show that the}} restriction of linear arithmetic <b>inequations</b> to simple bounds extended with the Bernays-Schönfinkel-Ramsey free first-order fragment is decidable and NEXPTIME-complete. The result is almost tight because the Bernays-Schönfinkel-Ramsey fragment is undecidable in combination with linear difference <b>inequations,</b> simple additive <b>inequations,</b> quotient <b>inequations</b> and multiplicative <b>inequations.</b> Comment: 25 page...|$|R
40|$|In some {{temporal}} reasoning systems, <b>inequations</b> can {{give rise to}} disjunctions of <b>inequations</b> when variable elimination is performed. Motivated by this observation, we extend previous research on temporal constraints by considering disjunctions of <b>inequations</b> (under the assumption that time is dense.) We present results on consistency checking, canonical forms and variable elimination for this new class of temporal constraints...|$|R
5000|$|This formalizes {{the notion}} of a set of {{equations}} and <b>inequations</b> consisting of variables [...] and elements [...] of [...] The set [...] represents equations like: The set [...] represents <b>inequations</b> like ...|$|R
2500|$|If one {{interprets the}} axioms of the intuitionistic propositional logic as {{terms of a}} Heyting algebra, then they will {{evaluate}} to the largest element, 1, in any Heyting algebra under any assignment of values to the formula's variables. For instance, (P∧Q)→P is, by definition of the pseudo-complement, the largest element x such that [...] This <b>inequation</b> is satisfied for any x, so the largest such x is 1.|$|E
2500|$|Any {{physically}} meaningful equation (and likewise any {{inequality and}} <b>inequation)</b> {{will have the}} same dimensions on its left and right sides, a property known as dimensional homogeneity. Checking for dimensional homogeneity is a common application of dimensional analysis, serving as a plausibility check on derived equations and computations. [...] It also serves as a guide and constraint in deriving equations that may describe a physical system {{in the absence of a}} more rigorous derivation.|$|E
5000|$|In {{mathematics}} and theoretical computer science, a set constraint is an equation or an <b>inequation</b> between sets of terms.Similar to systems of (in)equations between numbers, methods are studied for solving systems of set constraints. Different approaches admit different operators (like [...] "∪", [...] "∩", [...] "\", and function application) on sets and different (<b>in)equation</b> relations (like [...] "=", [...] "⊆", and [...] "⊈") between set expressions.|$|E
50|$|Anti-unification {{should not}} be {{confused}} with dis-unification. The latter means the process of solving systems of <b>inequations,</b> that is of finding values for the variables such that all given <b>inequations</b> are satisfied. This task is quite different from finding generalizations.|$|R
5000|$|Dis-unification: solving <b>inequations</b> between {{symbolic}} expression ...|$|R
50|$|Computer {{support in}} solving <b>inequations</b> is {{described}} in constraint programming;in particular, the simplex algorithm finds optimal solutions of linear <b>inequations.</b> The programming language Prolog III supports solving algorithms for particular classes of inequalities (and other relations) as a basic language feature, see constraint logic programming.|$|R
50|$|Similar to {{equation}} solving, <b>inequation</b> solving means finding what values (numbers, functions, sets, etc.) {{fulfill a}} condition {{stated in the}} form of an <b>inequation</b> or a conjunction of several inequations.These expressions contain one or more unknowns, which are free variables for which values are sought that cause the condition to be fulfilled. To be precise, what is sought are often not necessarily actual values, but, more in general, mathematical expressions. A solution of the <b>inequation</b> is an assignment of expressions to the unknowns that satisfies the inequation(s); in other words, expressions such that, when they are substituted for the unknowns, the inequations become true propositions.Often, an additional objective expression is given that is to be minimized by an optimal solution.|$|E
50|$|In 2013, {{a faulty}} {{problem has been}} given for the first time, an <b>inequation</b> to be proven was wrong.|$|E
50|$|More generally, {{these terms}} may apply to an <b>inequation</b> or inequality; the {{right-hand}} side is everything {{on the right side}} of a test operator in an expression, with LHS defined similarly.|$|E
5000|$|The {{equations}} and <b>inequations</b> {{are consistent}} with [...] {{if there is a}} group and an embedding [...] such that the finite set of equations and <b>inequations</b> [...] and [...] has a solution in , where [...] is the unique homomorphism [...] that equals [...] on [...] and is the identity on [...]|$|R
40|$|We give an {{algorithm}} {{for solving}} equations and <b>inequations</b> with rational constraints in virtually free groups. Our algorithm {{is based on}} Rips classification of measured band complexes. Using canonical representatives, we deduce an algorithm for solving equations and <b>inequations</b> in hyperbolic groups (maybe with torsion). Additionnally, {{we can deal with}} quasi-isometrically embeddable rational constraints. ...|$|R
5000|$|Inequation: {{kinds of}} <b>inequations</b> in {{mathematics}} in general, including a brief section on solving ...|$|R
5000|$|The symbol used {{to denote}} <b>inequation</b> (when items are not equal) is a slashed equals sign [...] "≠" [...] (U+2260; 2260,Alt+X in Microsoft Windows). In LaTeX, {{this is done}} with the [...] "\neq" [...] command.|$|E
50|$|In mathematics, an <b>inequation</b> is a {{statement}} that an inequality holds between two values. It is usually written {{in the form of}} a pair of expressions denoting the values in question, with a relational sign between them indicating the specific inequality relation. Some examples of inequations are:Some authors apply the term only to inequations in which the inequality relation is, specifically, not-equal-to (≠).|$|E
5000|$|Each {{side of the}} {{equation}} corresponds {{to one side of the}} balance. Different quantities can be placed on each side: if the weights on the two sides are equal, the scale balances, and in analogy the equality that represents the balance is also balanced ( [...] if not, then the lack of balance corresponds to an inequality represented by an <b>inequation).</b>|$|E
50|$|Dis-unification, in {{computer}} science and logic, is an algorithmic process of solving <b>inequations</b> between symbolic expressions.|$|R
40|$|AbstractWe {{study the}} problem of global {{consistency}} for several classes of quantitative temporal constraints which include inequalities, <b>inequations</b> and disjunctions of <b>inequations.</b> In all cases that we consider we identify the level of local consistency that is necessary and sufficient for achieving global consistency and present an algorithm which achieves this level. As a byproduct of our analysis, we also develop an interesting minimal network algorithm...|$|R
40|$|We {{show that}} the {{question}} whether a term is typable is decidable for type systems combining inclusion polymorphism with parametric polymorphism provided the type constructors are at most unary. To prove this result we first reduce the typability problem {{to the problem of}} solving a system of type <b>inequations.</b> The result is then obtained by showing that the solvability of the resulting system of type <b>inequations</b> is decidable. 1...|$|R
5000|$|If one {{interprets the}} axioms of the intuitionistic propositional logic as {{terms of a}} Heyting algebra, then they will {{evaluate}} to the largest element, 1, in any Heyting algebra under any assignment of values to the formula's variables. For instance, (P∧Q)→P is, by definition of the pseudo-complement, the largest element x such that [...] This <b>inequation</b> is satisfied for any x, so the largest such x is 1.|$|E
50|$|Any {{physically}} meaningful equation (and likewise any {{inequality and}} <b>inequation)</b> {{will have the}} same dimensions on its left and right sides, a property known as dimensional homogeneity. Checking for dimensional homogeneity is a common application of dimensional analysis, serving as a plausibility check on derived equations and computations. It also serves as a guide and constraint in deriving equations that may describe a physical system {{in the absence of a}} more rigorous derivation.|$|E
40|$|AbstractIn this paper, we {{investigate}} the growth relationship of algebroidal function and its coefficients, and then obtain a basic <b>inequation</b> between the maximum modulus function and Nevanlinna characteristic function. Finally, {{by using the}} <b>inequation,</b> we testify the order of entire algebroidal function is {{equal to that of}} its derived function...|$|E
40|$|This thesis evaluates Czech and English {{web sites}} focused on {{equations}} and <b>inequations</b> on high school, specially {{the way of}} didactics attitude and breadth of content and interactive elements there. On the basic of this comparison author made own web site focused on teaching high school equations and <b>inequations,</b> which is included in this thesis too. It's expected, it will be served as additional material for Czech students...|$|R
40|$|AbstractWe {{study the}} {{existence}} and computation of extremal solutions {{of a system of}} <b>inequations</b> defined over lattices. Using the Knaster-Tarski fixed point theorem, we obtain sufficient conditions for the existence of supremal as well as infimal solution of a given system of <b>inequations.</b> Iterative techniques are presented for the computation of the extremal solutions whenever they exist, and conditions under which the termination occurs in a single iteration are provided. These results are then applied for obtaining extremal solutions of various <b>inequations</b> that arise in computation of maximally permissive supervisors in control of logical discrete event systems (DESs) first studied by Ramadge and Wonham. Thus our work presents a unifying approach for computation of supervisors in a variety of situations...|$|R
3000|$|When {{determining}} the minimum {{of the objective}} function (10), the following limitations {{in the form of}} <b>inequations</b> should be implemented: [...]...|$|R
40|$|AbstractIn {{this paper}} we {{consider}} Boolean inequations i. e. the inequations {{of the form}} f(X) ≠ 0, where f is a Boolean function. The basic idea in this paper is: the <b>inequation</b> f(X) ≠ 0 means that there exists p such that f(X) =p and p≠ 0. We give the formula which determines all the solutions of Boolean <b>inequation...</b>|$|E
40|$|AbstractAn {{identification}} problem {{associated to}} an elliptic variational <b>inequation</b> {{subject to a}} bilateral restriction is considered. The whole of the parameters involved in the <b>inequation</b> {{as well as the}} parameters defining the restriction are to be identified. The continuous dependence of the direct problem solution on these parameters is proved. As a consequence the well-posedness of the identification problem follows...|$|E
30|$|Clearly, {{the value}} of β_i, (i = 1,..., 7) is positive, and thus <b>inequation</b> (7) is satisfied.|$|E
5000|$|A {{shorthand}} notation is {{used for}} the conjunction of several <b>inequations</b> involving common expressions, by chaining them together. For example, the chainis shorthand for ...|$|R
2500|$|... : A {{web page}} for {{producing}} and downloading pdf or postscript plots {{of the solution}} sets to equations and <b>inequations</b> in two variables (x and y).|$|R
5000|$|There {{are only}} countably many finite sets of {{equations}} and <b>inequations</b> with coefficients in [...] Fix an enumeration [...] of them. Define groups [...] inductively by: ...|$|R
