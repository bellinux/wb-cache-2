33|119|Public
50|$|Magnum offers hardware, software, {{reference}} platforms, {{and engineering}} support for digital video recording, playback {{and management of}} audio/video content. The Magnum platforms also enable sharing entertainment via optical disc, <b>flash</b> <b>disk</b> and home networking.|$|E
50|$|The Sun Fire X4540 {{supports}} two quad- or six-core AMD K10 (Barcelona) {{processors and}} up to 128 GB RAM. The new model also uses PCI Express IO technology, and added a compact <b>flash</b> <b>disk</b> slot for booting the operating system.|$|E
50|$|The HP Palmtop FX is {{a variant}} of the HP 100LX with up to 2 MB flashable memory in 1993. FAT <b>flash</b> <b>disk</b> images could be created and written to drive F: by a special FLASHDSK.EXE utility. According to one source, it was {{developed}} for a Korean insurance company.|$|E
40|$|Abstract. With <b>flash</b> <b>disks</b> {{being an}} {{important}} alternative to conventional magnetic disks, various design aspects of DBMSs, whose I/O behavior is performance-critical, and especially their I/O architecture should be reconsidered. Taking the distinguished characteristics of <b>flash</b> <b>disks</b> into account, several flash-aware buffer algorithms {{have been proposed}} with focus on flash-specific performance optimizations. We introduce several basic principles of flash-aware buffer management and evaluate performance and energy consumption of related algorithms in a DBMS environment using both <b>flash</b> <b>disks</b> and magnetic disks. Our experiments reveal the importance of those principles and the potential of <b>flash</b> <b>disks</b> both in performance improvement and in energy saving. ...|$|R
40|$|International Telemetering Conference Proceedings / October 20 - 23, 2003 / Riviera Hotel and Convention Center, Las Vegas, NevadaDue to the {{rotating}} mechanism in mechanical disks, they cannot provide the top-level reliability required for operation in harsh military environments. This paper describes three COTS alternatives to mechanical disks: ruggedized mechanical <b>disks,</b> solid-state <b>flash</b> <b>disks</b> and stacked PC Cards. It discusses their cost-effectiveness and aspects such as environmental specifications, endurance and data reliability. It highlights several methods used by <b>flash</b> <b>disks</b> to enhance endurance and reliability, {{as well as}} flash pricing and density trends. It presents data security requirements in actual emergency situations, and how <b>flash</b> <b>disks</b> can meet these requirements. It concludes with a feature-by-feature comparison of ruggedized <b>disks,</b> <b>flash</b> <b>disks</b> and stacked PC Cards...|$|R
40|$|Abstract. With the {{development}} of <b>flash</b> technologies, <b>flash</b> <b>disks</b> have become an alternative to hard disk as external storage media. Because of the unique characteristics of <b>flash</b> <b>disks</b> such as fast random read ac-cess and out-place update, shadow paging technology can be adopted to support transaction recovery in flash-based DBMS. Inspired by shadow paging and logging, we propose a new transaction commit model named MixSL {{which can be used}} in databases built on MLC <b>flash</b> <b>disks.</b> Based on MixSL, we detail normal processing, garbage collection and recov-ery. For improving system performance and raising the utilization ratio of <b>flash</b> <b>disks,</b> we extend MixSL to support group commit. Our perfor-mance evaluation based on the TPC-C benchmark shows that MixSL outperforms the state-of-the-art recovery protocols...|$|R
50|$|IBM Spectrum Storage {{portfolio}} can centrally manage {{more than}} 300 different storage devices and yottabytes of data. This device interoperability is the broadest {{in the industry}} - incorporating both IBM and non-IBM hardware and tape systems. IBM Spectrum Storage can help reduce storage costs up to 90 percent in certain environments by automatically moving data onto the most economical storage device - either from IBM or non-IBM <b>flash,</b> <b>disk</b> and tape systems.|$|E
50|$|In May and June 2011 {{another round}} of interrogations {{followed}} resulting in the arrest of 15 members of the Turkish Armed Forces. The arrests are based on documents reportedly seized in February from a house that belonged to Col. Hakan Büyük’s son. The new evidence consists of written documents, video files and digital material on a <b>flash</b> <b>disk,</b> and includes plans {{to be put into}} action if the coup attempt were to fail.|$|E
50|$|On 12 May 2005 Singapore saw for {{the first}} time, a case {{involving}} exercise rights of discretion in the amendment of patent specifications for commercial products in the Trek Technology (Singapore) Pte Ltd v. FE Global Electronics PTE Ltd and others, and other suits 2005 (SGHC 90) Justice Lai ruled on all counts, in favour of Trek 2000 International that their USB portable mass storage device patent to be valid, enforceable and infringed by Israels M-Systems <b>Flash</b> <b>Disk</b> Pioneers Ltd, and Hong Kongs Ritronics Components.|$|E
40|$|<b>Flash</b> <b>disks</b> are {{becoming}} an important alternative to con-ventional magnetic disks. Although accessed {{through the same}} interface by applications, <b>flash</b> <b>disks</b> have some dis-tinguished characteristics that make it necessary to recon-sider {{the design of the}} software to leverage their performance potential. This paper addresses this problem at the buffer management layer of database systems and proposes a flash-aware replacement policy that significantly improves and outperforms one of the previous proposals in this area. 1...|$|R
40|$|Abstract—This paper {{considers}} {{the problem of}} efficiently managing storage space in a hybrid storage system employing <b>flash</b> and <b>disk</b> drives. The <b>flash</b> and <b>disk</b> drives exhibit different performance characteristics of read and write behavior. We propose a technique for balancing the workload properties across <b>flash</b> and <b>disk</b> drives in such a hybrid storage system. The presented approach automatically and transparently manages migration of data blocks among <b>flash</b> and <b>disk</b> drives based on their access patterns. This paper presents the design and {{an evaluation of the}} proposed approach on a Linux testbed through realistic experiments. I...|$|R
40|$|Abstract: Different from {{existing}} flash-aware buffer replacement policies {{that focus on}} the asymmetry of read and write operations, this paper addresses the “discrepancy ” of the asymmetry for different <b>flash</b> <b>disks</b> which has existed for a long time. The study proposes an adaptive replacement policy (CBLRU), which assigns to each page a weighted value that combines the IO cost and the influence of pages staying in the buffer. When selecting a victim page, the one with the minimum weighted value will be selected as the victim page, thus, one can avoid the problem of occupying the valid buffer space by dirty pages that are not used for a long time. Moreover, as the cost of read and write operations will be adjusted according to different <b>flash</b> <b>disks,</b> CBLRU can wisely tune itself and adapt to different kinds of <b>flash</b> <b>disks.</b> Finally, a theorem is proposed addressing the stability of the relationship between pages, based on which CBLRU organizes all data pages into two LRU lists: one for clean pages and the other for dirty pages, and then the CPU complexity is reduced form O(klogk) to O(1). The experimental results show that compared with existing buffer-aware replacement algorithms, CBLRU is very efficient when being used for different kinds of <b>flash</b> <b>disks.</b> Key words: flash; flash database; buffer management algorithm; cos...|$|R
50|$|Some {{time after}} SanDisk {{acquired}} M-Systems, they announced the end-of-life for the DiskOnChip 2000 product line in early 2007, suggesting customers {{migrate to the}} uDOC (uDiskOnChip Embedded USB <b>Flash</b> <b>Disk)</b> product, CompactFlash, or SecureDigital cards, {{all of which are}} not directly compatible, requiring interface redesign. The subsidiary of M-Systems called EUROM was established to design, build and sell the DOC to the U.S. and Asian embedded computer distributors. The first customer for the DOC was Amrpo. David Feldman, President of Ampro and Rick Iorillo, President of EUROM U.S. completed the first deal with IBM to supply 2MB embedded flash drives for recording transportation data on public buses in South America.|$|E
5000|$|The DVD {{edition of}} Knoppix {{can also be}} loaded onto a USB flash drive, with flash-knoppix under the Knoppix system, such that [...] "the KNOPPIX Live System starts and runs about factor 5 faster from USB <b>flash</b> <b>disk</b> than from CD or DVD!". Besides that, the {{experimental}} UEFI support is provided for USB flash drive rather than DVD media. 32-bit UEFI firmware can only boot up the 32-bit kernel, while 64-bit UEFI firmware can only boot up the 64-bit kernel. The text interface for UEFI is similar with it for BIOS, one can also press key F2 and F3 to access information on boot options.|$|E
40|$|The <b>Flash</b> <b>Disk</b> worms, {{spreading}} via both Web-based scanning and removable devices between multiple subnets, {{have become}} {{a serious threat to}} the Internet, especially those physically isolated subnets. We present a model which incorporates specific features of these worms in this paper. Then, we analyze the dynamic behaviors of the model when one subnet is considered. Analytical result shows that the <b>Flash</b> <b>Disk</b> worm can self-perpetuate when Ri 0 > 1 and will die out otherwise. When multiple subnets are considered, we get that once a computer is infected by the <b>Flash</b> <b>Disk</b> worms, other computers in that subnet will be infected in a short time. Thus, for any subnet, to contain the <b>Flash</b> <b>Disk</b> worms, the most effective way is to prevent the first infected individual by improving the users’ security awareness of using removed devices. Our results are illustrated by numerical simulation...|$|E
40|$|Abstract—Flash disks {{are being}} widely {{used as an}} {{important}} alternative to conventional magnetic disks, although accessed through the same interface by applications, their distinguished feature, i. e., different read and write cost in the aspects of time, makes it necessary to reconsider the design of existing replacement algorithms to leverage their performance potential. Different from existing flash-aware buffer replacement policies {{that focus on the}} asymmetry of read and write operations, we address the “discrepancy ” of the asymmetry for different <b>flash</b> <b>disks,</b> which is the fact that exists for a long time, while has drawn little attention by researchers since most existing flash-aware buffer replacement polices are somewhat {{based on the assumption that}} the cost of read operation is neglectable compared with that of write operation. In fact, this is not true for current <b>flash</b> <b>disks</b> on the market. We propose an adaptive cost-aware replacement policy (ACR) that uses three cost-based heuristics to select the victim page, thus can fairly make trade off between clean pages (their content remain unchanged) and dirty pages (their content is modified), and hence, can work well for different type of <b>flash</b> <b>disks</b> of large discrepancy. Further, in ACR, buffer pages are divided into clean list and dirty list, the newly entered pages will not be inserted at the MRU position of either list, but at some position in the middle, thus the once-requested pages can be flushed out from the buffer quickly and the frequently-requested pages can stay in buffer for a longer time. Such mechanism makes ACR adaptive to workloads of different access patterns. The experimental results on different traces and <b>flash</b> <b>disks</b> show that ACR not only adaptively tunes itself to workloads of different access patterns, but also works well for different kind of <b>flash</b> <b>disks</b> compared with existing methods. I...|$|R
40|$|Flash {{solid state}} drives (SSDs), or <b>flash</b> <b>disks,</b> are {{a type of}} {{persistent}} storage deviceswith the potential to replace magnetic disks. They outperform magnetic disks on access speed, bandwidth, shock resistance, and power efficiency. As their capacity increases and prices decrease, <b>flash</b> <b>disks</b> are considered for the storage of database systems. Due to the differences in flash SSDs and magnetic disks, traditional data management techniques designed for magnetic disks need to be re-examined for <b>flash</b> <b>disks.</b> In particular, the flash memory used in <b>flash</b> <b>disks</b> has an asymmetry between read and write speeds, where reads, no matter random or sequential, are much faster than writes. This thesis studies the performance of transactional workloads on <b>flash</b> <b>disks</b> and designs efficient storage schemes for them. Specifically, {{we begin with the}} performance study of the TPC-C workload on flash SSDs. Overall, the flash SSDs outperform the magnetic disk by up to an order of magnitude. Moreover, the I/O performance of the SSDs is dominated by random writes, whereas that of the magnetic disk by random reads. Additionally, both minimising logging and adopting MVCC (Multi-Version Concurrency Control) than 2 PL (Two-Phase Locking) helps improve the performance on flash SSDs. Observing the dominance of random writes in flash SSDs under TPC-C workloads, we propose a new database storage layout, called Partitioned Logging (PTL). In PTL, we replace data writes with logging to eliminate random page writes, and put data and logs into separate blocks. Moreover, we group data blocks into partitions so that updates on each partition are appended as log entries to one log block. This way, we can tune the partition size to balance the read and write performance based on the hardware and workload characteristics. The results show a considerable improvement over both the traditional storage and a leading flash-based database storage scheme. Finally, to solve the redundant I/O problem and eliminate merge operations that are essential in all the other log-structured approaches, we propose FlashTKV, which adopts a purely sequential storage format where all the data and transactional information are log records. Furthermore, we support MVCC on this sequential storage efficiently. Our results show that FlashTKV improves the transaction throughput by 70 % over two well-known KV-stores under TPC-C workloads on flash SSDs...|$|R
40|$|This paper {{considers}} {{the problem of}} efficiently managing storage space in a hybrid storage system employing <b>flash</b> and <b>disk</b> drives. The <b>flash</b> and <b>disk</b> drives exhibit different performance characteristics of read and write behavior. We propose a technique for balancing the workload properties across <b>flash</b> and <b>disk</b> drives in such a hybrid storage system. We consider various alternatives for managing the storage space in such a hybrid system and show that the proposed technique improves performance in diverse scenarios. The presented approach automatically and transparently manages migration of data blocks among <b>flash</b> and <b>disk</b> drives based on their access patterns. We implemented a prototype storage system employing our ideas. This paper presents the design and {{an evaluation of the}} proposed approach through realistic experiments. I...|$|R
40|$|This paper {{presents}} a novel prefetching technique to reduce application launch time for mobile devices. The proposed method traces disk access accurately during an application launch and prefetches them in efficient way at its subsequent launches. The key {{idea is to}} parallelize the use of processor and <b>flash</b> <b>disk</b> while exploiting multi-core and internal parallelism on <b>flash</b> <b>disk.</b> The proposed prefetcher implemented on a mobile Meego platform has achieved a 28. 1 % reduction of application launch time with 6 popular applications. 1...|$|E
40|$|Nowadays {{the use of}} <b>flash</b> <b>disk</b> as {{storage device}} is increased, but {{in the other side}} many of it's user didn't realize the fact that it can be used as {{operating}} system boot media. More from that, commonly used operating system and office application were proprietary one thus make the price is higher that make it difficult to make business from it. From that problem, a free and portable operating system is needed. In this research the operating system that used is Linux, and will be injected to an USB <b>Flash</b> <b>disk.</b> According to the experiment, Linux Ubuntu injected to an USB <b>Flash</b> <b>disk</b> satisfy the need of free and portable operating system. Furthermore, the office application supplied within Ubuntu had been proven enough to handle office needs and had file format compatibility with the Microsoft Office which is known as proprietary one...|$|E
40|$|Title {{from first}} page of PDF file (viewed September 10, 2010) Includes bibliographical {{references}} (p. 41 - 43) With recent technological advances and continuously decreasing cost per GB, flash memory based solid state disk (hereafter, <b>flash</b> <b>disk)</b> has already been {{considered to be the}} future replacement of rotating-based hard disk. Unlike hard disk drives, flash disks are less prone to mechanical wear and tear, have no seek or rotational delays, and consume much less power. However, flash memory has limited write endurance as a block becomes unreliable after a finite number of erasure/write cycles. This characteristic hinders flash disks from being readily used for server domain. Consequently, wear-leveling techniques are employed to distribute block erasures and re-writes evenly across the medium. Existing wear-leveling techniques are essentially intra-disk data arrangement and distribution schemes, which organize data within one <b>flash</b> <b>disk.</b> Nevertheless, an inter-disk wear-leveling technique, which can ensure uniform wear-out of blocks across multiple flash disks, is much needed for enterprise-class storage systems where flash disks are organized in a disk array. In this study, we propose an inter-disk wear-leveling strategy called iWell (inter-disk wear leveling) that dynamically and evenly distributes writes across a <b>flash</b> <b>disk</b> array. The proposed iWell technique compliments existing intra-disk wear-leveling techniques to further improve flash disk's reliability while achieving a better performance in most scenarios. Results from a comprehensive simulation study based on both real-world traces and synthetic benchmarks demonstrate that iWell significantly improves the reliability and lifespan of a <b>flash</b> <b>disk</b> array by largely reducing the variance in terms of writes and merge operations among disks...|$|E
40|$|We {{design and}} {{implement}} FD-Buffer, a buffer manager for database systems running on flash-based disks. Unlike magnetic <b>disks,</b> <b>flash</b> media has an inherent read-write asymmetry: writes involve expen-sive erase operations {{and as a}} result are usually much slower than reads. Therefore, we address this asymmetry in FD-Buffer. Specifically, we use the average I/O cost per page access as op-posed to the traditional miss rate as the performance metric for a buffer. We develop a new replacement policy in which we sepa-rate clean and dirty pages into two pools. The size ratio of the two pools is automatically adapted according to the read-write asymme-try and the runtime workload. We evaluate FD-Buffer with trace-driven simulations as well as experiments on real <b>flash</b> <b>disks.</b> Our evaluation results show that our algorithm achieves up to 40 % less I/O cost in simulation and up to 33 % improvement on the over-all performance on commodity <b>flash</b> <b>disks,</b> in comparison with the state-of-the-art flash-aware replacement policy. 1...|$|R
40|$|Most {{commodity}} <b>flash</b> <b>disks</b> exhibit {{very poor}} performance {{when presented with}} writes that are not sequentially ordered. We argue that performance can be significantly improved through the addition of sufficient RAM to hold data structures describing a finegrain mapping between disk logical blocks and physical flash addresses. We present a design that accomplishes this. 1...|$|R
40|$|Classical buffer {{replacement}} policies, e. g., LRU, are suboptimal for database systems having <b>flash</b> <b>disks</b> for persistence, {{because they}} are not aware of the distinguished characteristics of flash-based storage devices. We introduce the basic principles of buffer management for such devices and present two efficient buffer algorithms that apply these principles. These algorithms significantly improve the performance of flash-based databases, as confirmed by our trace-driven performance study...|$|R
40|$|Abstract—SSDs (Solid State Drives, or flash disks) {{have been}} {{considered}} as ideal storage for various data-intensive workloads, because of the low random access latency and the intra-disk multi-chip parallelism. However, due to inherent nature of flash memories, update-intensive workloads cause the <b>flash</b> <b>disk</b> fragmented, and trigger costly internal activities such as cleaning and wear leveling. We use database transaction processing as a motivating update-intensive workload. Our studies based on a <b>flash</b> <b>disk</b> simulator as well as flash disks show that, these activities result in significant overhead to the I/O response time and system throughput. To resolve the impact of internal activities, we propose dynamic page replications to exploit the multi-chip parallelism on the <b>flash</b> <b>disk.</b> Specifically, we replicate the frequently blocked data pages to improve the data availability even when internal activities block the request. To reduce the overhead of replications, we {{take advantage of the}} idle periods in the flash chips for the I/O operations by writes to replicas or reads from replicas, and further develop a prediction model for the decisions on those I/O operations to minimize the interference to normal I/O operations. We evaluate our techniques with three public transaction benchmarks in the simulator {{as well as on the}} real flash disks. Our results demonstrate the effectiveness of our replication management on improving I/O response time and system throughput...|$|E
30|$|A LOGIQ Book XP {{ultrasound}} unit (General Electric Co., Schenectady, NY, USA), {{in combination with}} a broadband (3 to 5  MHz) curvilinear array transducer, was used to conduct blubber imaging and measurements. All images were stored in a <b>flash</b> <b>disk.</b> Acoustic gel was not required {{as there is no}} air layer {{on the surface of the}} skin (Brook 2001).|$|E
40|$|U盘、移动硬盘、手机、数码相机、摄像机、ipod、MP 3 /MP 4 、PDA、各种CF/MD/SD/FlashDisd等移动存储设备（统一简称为U盘）由于使用灵活、携带方便，迅速得到普及；而且其储存容量也越来越大，体积越来越小，形态越来越隐蔽，难于识别和管理。这些移动存储介质在单位，企业重要部门的频繁使用，也给该单位的信息安全带来巨大的隐患，如何有效监控这些移动存储介质的使用，是该论文主要研究的目的。 本论文设计了一套采用C/S结构，基于[URL] disk, mobile hard drives, mobile phones, digital cameras, camcorders, iPod, MP 3 /MP 4, PDA, {{all kinds}} of CF / MD / SD / <b>Flash</b> <b>Disk</b> and other {{removable}} storage device (referred to as USB disk) spread quickly because they are flexible and portable; and the storage capacity is also growing, smaller and subtler, difficult to identify and manage. The removable storage devices are frequently use in the [...] . 学位：工程硕士院系专业：信息科学与技术学院自动化系_控制工程学号：X 200522305...|$|E
40|$|AbstractParallel disk {{systems are}} capable of {{fulfilling}} rapidly increasing demands on both large storage capacity and high I/O performance. However, {{it is challenging to}} significantly increase disk I/O bandwidth for data-intensive workloads due to (1) reliability and instant processing of data requests under dynamic workload conditions, and (2) the optimum tradeoff between system scalability and data reliability in data-intensive systems. To increase computing performance and reduce power consumption, Graphics Processing Units (GPUs) will be used. As the architectures and data processing algorithms for GPU-based parallel disk systems are still in their infancy, this research will develop novel hardware and software architectures that include parallel GPU, <b>flash</b> <b>disks,</b> and disk arrays for data-intensive applications...|$|R
50|$|A disk editor is a {{computer}} program that allows its user to read, edit, and write raw data (at character or hexadecimal, byte-levels) on disk drives (e.g., hard <b>disks,</b> USB <b>flash</b> <b>disks</b> or removable media such as a floppy disks); as such, they are sometimes called sector editors, since the read/write routines built into the electronics of most disk drives require to read/write data in chunks of sectors (usually 512 bytes). Many disk editors {{can also be used}} to edit the contents of a running computer's memory or a disk image.|$|R
40|$|Abstract. Classical buffer {{replacement}} policies, e. g., LRU, are subop-timal for database systems having <b>flash</b> <b>disks</b> for persistence, {{because they}} are not aware of the distinguished characteristics of those storage devices. We present CFDC (Clean-First Dirty-Clustered), a flash-aware buffer management algorithm, which emphasizes that clean buffer pages are first considered for replacement and that modified buffer pages are clustered for better spatial locality of page flushes. Our algorithm is complementary to and can be integrated with conventional replacement policies. Our DBMS-based performance studies using both synthetic and real-life OLTP traces reveal that CFDC significantly outperforms previ-ous proposals with a performance gain up to 53 %. ...|$|R
40|$|Very high human’s {{mobility}} required {{data storage}} that {{able to support}} their mobility. Something simple, small, compact, and easy {{to be carried out}} wherever they go become precondition which they needed as a data storage. Then, finally come, a technology which is currently getting even more develop from capacity point of view. One of this is UFD <b>Flash</b> <b>disk.</b> UFD <b>Flash</b> <b>disk</b> have different capacities. UFD which already marketed now have storage capacity from 128 MB, 512 MB to 64 GB. In this paper, we try to compare two different UFD brands which have similar capacity with using Flash Memory Toolkit software. This software is able to measure UFD’s reading and write speed. Method that we use is comparing with doing some trials. With this trial we try to count its average and will get the average score. At the final result of every parameter, its weight will be counted as a compartment result, then that result been analyzed to figure out which the better UFD’s performance result based on its brand. We hope this paper could help users to decide which UFD are appropriate with their needs with doing performance analysis of UFD’s data transfer...|$|E
40|$|Vital Mind (VM) {{intends to}} design a new {{platform}} for running interactive cognitive applications to improve the life quality of older citizens. The Vital Mind project will develop two main innovations: {{the use of interactive}} digital television (iDTV) for enabling older people to train on cognitive exercises, and new methods of user interaction via voice and physical gesture. The VM system also involves the inclusion of a USB <b>Flash</b> <b>Disk</b> (UFD) to store and personalize applications running on a common set-top box (STB) ...|$|E
40|$|Abstract — Large flash disks {{have become}} an {{attractive}} alternative to magnetic hard disks, due to their high random read performance, low energy consumption and other features. However, writes, especially random writes, on the <b>flash</b> <b>disk</b> are inherently much slower than reads because of the erase-beforewrite mechanism. To address this asymmetry of read-write speeds in indexing on the <b>flash</b> <b>disk,</b> we propose the FD-tree, a tree index designed with the logarithmic method and fractional cascading techniques. With the logarithmic method, an FD-tree consists of the head tree – a small B+-tree on the top, and a few levels of sorted runs of increasing sizes at the bottom. This design is write-optimized for the flash disk; in particular, an index search will potentially go through more levels or visit more nodes, but random writes are limited to the head tree and are subsequently transformed into sequential ones through merging into the lower runs. With the fractional cascading technique, we store pointers, called fences, in lower level runs {{to speed up the}} search. We evaluate the FD-tree in comparison with representative B+-tree variants under a variety of workloads. Our results show that the FD-tree has a similar search performance to the standard B+tree, and a similar update performance to the write-optimized B+-tree variant. As a result, FD-tree outperforms all these B+-tree index variants on both update- and search-intensive workloads. I...|$|E
40|$|Mobile {{computing}} environments {{have changed}} in recent years with {{the increasing use of}} different types of portable devices, ranging from mobile phones to laptops, and from MP 3 players to portable storage devices (e. g. <b>flash</b> <b>disks).</b> Many of these devices have large amounts of storage, allowing users to transport most of their data with them. In this paper we briefly present the FEW file management system, a system that aims to ease file management in this new mobile environment. In particular, we detail the automatic reconciliation approach used in this system based on operational transformation. We motivate our work with a study of conflicts in data managed by version control systems...|$|R
40|$|The growing {{performance}} gap between CPUs and sustainable disk I/O {{is a major}} hurdle in supporting modern applications. As the CPUs become faster, this gap is projected to worsen, thus making it a critical problem that should be addressed with high priority. Although efficient algorithms have alleviated this problem, the mechanical nature of the disk places physical limits on the achievable speedup. On the other hand, newer technologies such as flash memory promise significant improvements in access time, power consumption, and storage density. However, the mature disk technology offers the most favorable cost per bit ratio. Since replacing standard hard <b>disks</b> with <b>flash</b> <b>disks</b> is prohibitively expensive, hybrid hard disks augment the standard hard disk {{with a small amount}} of flash memory. By exploiting the beneficial aspects of both technologies they aim to provide breakthrough increase in performance. Nevertheless, hybrid hard disks pose several significant design challenges. Effective and efficient algorithms to manage the <b>flash,</b> the <b>disk,</b> and interaction between them are required. To facilitate rapid and easy exploration of the design space for hybrid hard disk algorithms we present the design and implementation of a flexible and extensible simulator that model...|$|R
40|$|Abstract: When {{spatially}} separated objects {{appear and}} disappear in a synchronous manner, they perceptually group {{into a single}} global object that itself appears and disappears. We employed {{functional magnetic resonance imaging}} (fMRI) to identify brain regions involved in this type of perceptual grouping. Subjects viewed four chromatically-defined disks (one per visual quadrant) that flashed on and off. We contrasted %BOLD signal changes between blocks of synchronously <b>flashing</b> <b>disks</b> (Grouping) with blocks of asynchronously <b>flashing</b> <b>disks</b> (no-Grouping). Results: A region of interest analysis revealed %BOLD signal change in the Grouping condition was significantly greater than in the no-Grouping condition within retinotopic areas V 2, V 3, and V 4 v. Within a single quadrant of the visual field, the spatio-temporal information present in the image was identical across the two stimulus conditions. As such, the two conditions could not be distinguished from each other {{on the basis of the}} rate or pattern of flashing within a single visual quadrant. The observed results must therefore arise through nonlocal interactions between or within these retinotopic areas, or arise from outside these retinotopic areas. Furthermore, when V 2 and V 3 were split into ventral and dorsal sub-ROIs, ventral retinotopic areas V 2 v and V 3 v preferentially differentiated between the two conditions whereas the corresponding dorsal areas V 2 d and V 3 d did not. In contrast, within hMT+, %BOLD signal was significantly greater in the no-Grouping condition. Conclusion: Nonlocal processing within, between, or to ventral retinotopic cortex at least as early as V 2 v, and including V 3 v, and V 4 v, underlies perceptual groupin...|$|R
