13|155|Public
25|$|Outlook Mobile is a {{personal}} information manager. Formerly called Acompli, it was released in April 2014. In December 2014, it was acquired by Microsoft and renamed Outlook Mobile. It runs on Android, iOS, Windows 10 Mobile and Windows 10. Outlook Mobile serves an email client, calendaring app, address book and file sharing app. It supports Gmail, Outlook.com, Yahoo! Mail and Exchange Server mail services, as well as OneDrive, iCloud, Dropbox and Google <b>Drive</b> <b>file</b> hosting services.|$|E
2500|$|In March 2017, Google {{introduced}} <b>Drive</b> <b>File</b> Stream, {{making it}} possible for G Suite customers on Windows and macOS computers to search their Drive folders and download specific files on-demand rather than downloading all files during installation, potentially preventing large amounts of data from [...] "gobbling up your hard drive". Additionally, the feature will guess what files users need in the future and download those files as well.|$|E
5000|$|Access module {{processor}} (AMP) - {{the unit}} of parallelism: includes microprocessor, disk <b>drive,</b> <b>file</b> system, and database software ...|$|E
50|$|File {{management}} - Discovering <b>drives,</b> <b>files</b> and folders on the PC, {{creating and}} deleting files, renaming, copying and moving files.|$|R
2500|$|... \\.: Same as [...] "Computer" [...] except loads {{the drives}} in {{low-level}} NTFS access. This results in critical <b>drive</b> <b>files</b> and deleted files still existing {{on the drive}} to appear. (NOTE: Access to the active partition in low-level mode is not allowed for currently unknown reasons.) ...|$|R
50|$|Files can be moved, renamed and copied {{without losing}} {{connection}} to their revision histories. Depending on user preferences, files can be monitored on local, removable and network <b>drives.</b> <b>File</b> revision histories {{are stored in}} a central database. Thus, for example, a user may insert a USB drive into his computer and edit a file on the USB <b>drive.</b> The edited <b>file</b> remains on the USB drive but {{a copy of the}} original unedited version is copied to the archive.|$|R
50|$|Xbox hard <b>drive</b> <b>file</b> system (FATX) {{has many}} limitations, {{among them a}} maximum file name length of 42 characters.|$|E
5000|$|In March 2017, Google {{introduced}} <b>Drive</b> <b>File</b> Stream, {{making it}} possible for G Suite customers on Windows and macOS computers to search their Drive folders and download specific files on-demand rather than downloading all files during installation, potentially preventing large amounts of data from [...] "gobbling up your hard drive". Additionally, the feature will guess what files users need in the future and download those files as well.|$|E
50|$|Outlook Mobile is a {{personal}} information manager. Formerly called Acompli, it was released in April 2014. In December 2014, it was acquired by Microsoft and renamed Outlook Mobile. It runs on Android, iOS, Windows 10 Mobile and Windows 10. Outlook Mobile serves an email client, calendaring app, address book and file sharing app. It supports Gmail, Outlook.com, Yahoo! Mail and Exchange Server mail services, as well as OneDrive, iCloud, Dropbox and Google <b>Drive</b> <b>file</b> hosting services.|$|E
50|$|Petya is {{a family}} of {{encrypting}} ransomware that was first discovered in 2016. The malware targets Microsoft Windows-based systems, infecting the master boot record to execute a payload that encrypts a hard <b>drive's</b> <b>file</b> system table and prevents Windows from booting. It subsequently demands that the user make a payment in Bitcoin in order to regain access to the system.|$|R
5000|$|.....all data {{in storage}} but {{excludes}} any data that frequently traverses the network or that which resides in temporary memory. Data at rest includes {{but is not}} limited to archived data, data which is not accessed or changed frequently, files stored on hard drives, USB thumb <b>drives,</b> <b>files</b> stored on backup tape and disks, and also files stored off-site or on a storage area network (SAN)." ...|$|R
5000|$|... Rotor {{with two}} joints in <b>drive</b> shaft (<b>filed</b> on Jan. 30, 1961, granted on Apr. 30, 1963) ...|$|R
50|$|A struct in the C {{programming}} language (and many derivatives) {{is a composite}} data type declaration that defines a physically grouped list of variables to be placed under one name in a block of memory, allowing the different variables to be accessed via a single pointer, or the struct declared name which returns the same address. The struct can contain many other complex and simple data types in an association, so is a natural organizing type for records like the mixed data types in lists of directory entries reading a hard <b>drive</b> (<b>file</b> length, name, extension, physical (cylinder, disk, head indexes) address, etc.), or other mixed record type (patient names, address, telephone... insurance codes, balance, etc.).|$|E
40|$|In {{recent years}} {{so-called}} 'virtual test rigs' {{have become more}} and more important in the development process of cars and trucks. Originally, the idea was to substitute expensive durability tests with computer simulation. Meanwhile, the focus has changed towards a more cooperative usage of numerical and laboratory rig simulation. For many safety critical issues laboratory tests remain indispensable. In early development stages, when no physical prototypes are available yet, numerical simulation is used to analyse and optimise the design. In this paper, we show how to build numerical simulation models of complex servo-hydraulic test systems and their test specimen using multi-body simulation for the mechanics in combination with simulation models for the hydraulics and controls. We illustrate this at two industrial application examples: a spindle-coupled passenger car suspension rig and a tyre-coupled full vehicle rig. We show how the simulation models are used to design and optimise better test rigs and to support the test rig operation by preparing the physical tests with new specimen, i. e. by performing numerical simulations including numerical <b>drive</b> <b>file</b> iteration before the physical tests start...|$|E
40|$|Vehicle {{durability}} {{assessment in}} {{the automotive industry}} requires a good knowledge of the road load input the vehicle will experience while in service. This research explores the approach of artificial intelligence for predicting the road load input for road load simulation in the CAE environment prior {{to the development of}} a vehicle prototype. The multi-body dynamics (MBD) simulation of a quarter vehicle test rig, built with the specification of a commercial SUV, and the full vehicle of the same SUV were modelled and validated in SIMPACK using a simple tyre model developed using the tri-axial tyre test rig at the University of Birmingham. The models were used to carry out a road load data characterisation based on the variation in vehicle parameters. An artificial road input tool (ARIT) based on an optimised NARX artificial neural network architecture was developed to predict the road input for variants of vehicle for a particular vehicle behaviour over a road event. The results of the ARIT were used to run MBD simulations and compared with those from <b>drive</b> <b>file</b> iteration. The results of this research show a successful method of artificial intelligence for the generation of road load data from CAE simulations...|$|E
50|$|Commodore 64 based {{software}} for <b>drive</b> management, <b>file</b> transfers & repair diagnosis {{is available from}} the SPACE_TAXI website.|$|R
5000|$|One {{study done}} in 2016 had {{researchers}} drop 297 USB drives around {{the campus of}} the University of Illinois. The <b>drives</b> contained <b>files</b> on them that linked to webpages owned by the researchers. The researchers were able to see how many of the <b>drives</b> had <b>files</b> on them opened, but not how many were inserted into a computer without having a file opened. Of the 297 drives that were dropped, 290 (98%) of them were picked up and 135 (45%) of them [...] "called home".|$|R
40|$|This poster {{describes}} {{the feasibility of}} integrating an existing database <b>driven</b> teaching <b>file</b> with the Radiological Society of North America’s (RSNA) Medical Imaging Resource Center (MIRC). MIRC {{is the product of}} an RSNA sponsored initiative to enable medical institutions to share their electronic medical content (images, text, and multimedia) by creating a distributed repository accessible from the Internet. A description of MIRC’s query/storage service architecture is provided along with an overview of the author’s experience with implementing a storage service front end for an existing, database <b>driven</b> teaching <b>file</b> system...|$|R
40|$|Effective Road Profile (ERP) Control is a {{relatively}} new simulator control strategy which shows a great deal of promise in reducing automotive suspension and structural testing times, thus shortening the product development cycle. The key to ERP is a linearly approximated tire model consisting of a characteristic stiffness of the spring elements within the model (K), characteristic damping coefficient of damper elements within the model, (C), and the tire modal mass (MMTM). The tire parameters can be purchased as a data set from MTS Systems Corporation for approximately 6000 US per tire. This thesis offers an alternate method of obtaining the tire characteristics. A rigid two-part frame was installed within the pit of a four-post road test simulator. This frame was assembled around one hydraulic actuator with the test tire secured above the actuator pan. The hydraulic actuator was then used to input a <b>drive</b> <b>file</b> into the tire to produce a tire response file. From that tire response file, radial displacement and radial force are required for tire characterization. The Tire Characterization tool within RPCRTM Pro was used to calculate K, C, and MMTM as defined above. (Abstract shortened by UMI.) Dept. of Mechanical, Automotive, and Materials Engineering. Paper copy at Leddy Library: Theses 2 ̆ 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 2002. M 67. Source: Masters Abstracts International, Volume: 44 - 01, page: 0427. Thesis (M. A. Sc.) [...] University of Windsor (Canada), 2003...|$|E
40|$|In the {{automotive}} industry, multi-axis shaker tables {{are often used}} to study {{the damage caused by}} motion-induced inertia loads to components such as engine mounts or fuel tank strips. To assess the component durability characteristics using this approach, prototype parts must be built and a test rig must be installed. This process is both time and budget consuming, so there is an incentive {{to reduce the number of}} physical shaking tests. To that end, this thesis introduces a set of software tools that are capable of conducting virtual shaking simulations with quality output results, i. e., a virtual multi-axial shaker table (VMAST). By refining and reproducing vehicle body acceleration signals collected from the proving grounds, the VMAST is able to replay the body motion of a vehicle. The reproduced motion (<b>drive</b> <b>file)</b> can then be used to drive the virtual dynamic shaking. With the additional consideration of vehicle body local flexibility, the flexible motion can be added to the rigid body motion to improve the simulation accuracy. The dynamic shaking simulation can be done natively in MATLAB, or the drive files derived from MATLAB can be used by other commercial software, such as Altair MotionView. The virtual load data acquisition of the engine bushing mount is implemented during the simulation to predict the fatigue index, which can be referenced in the design procedure. This VMAST provides {{the automotive}} engineer with a cost effective tool for analysis, and optimizes the testing process, allowing rapid design iteration...|$|E
40|$|Testing a new {{suspension}} {{based on}} real load data is performed on elaborate multi channel test rigs. Usually wheel forces and moments measured during driving maneuvers are reproduced on the rig. Because of the complicated interaction between rig and suspension each new rig configuration {{has to prove}} its efficiency {{with respect to the}} requirements and the configuration might be subject to optimization. This paper deals with modeling a new rig concept based on two hexapods. The real physical rig has been designed and meanwhile built by MOOG-FCS for VOLKSWAGEN. The aim of the simulation project reported here was twofold: First the simulation of the rig together with real VOLKSWAGEN suspension models at a time where the design was not yet finalized was used to verify and optimize the desired properties of the rig. Second the simulation environment was set up {{in a way that it}} can be used to prepare real tests on the rig. The model contains the geometric configuration as well as the hydraulics and the controller. It is implemented as an ADAMS/Car template and can be combined with different suspension models to get a complete assembly representing the entire test rig. Using this model, all steps required for a real test run such as controller adaptation, <b>drive</b> <b>file</b> iteration and simulation can be performed. Geometric or hydraulic parameters can be modified easily to improve the setup and adapt the system to the suspension and the load data...|$|E
40|$|Laboratory {{simulation}} {{testing has}} {{for many years}} {{contributed significantly to the}} durability and quality of motor vehicles. Most sophisticated test rigs use an iterative algorithm that generates the input <b>drive</b> <b>files</b> that reproduce service environments under laboratory conditions. Essentially the algorithm solves a non-linear, multi-ple channel dynamic system. In this paper, the non-linear problem is recast as a system of algebraic equations. This mathematical framework allows the application of alternative but well understood solution techniques. Using mathematical simula-tions, conclusions are drawn concerning the choice of iteration gain in the current algorithm and the better performance of alternative numerical solution procedures...|$|R
50|$|Among BBS {{software}} {{available in}} its day, Blue Board was notable {{in that it}} made creative use of the computer's limited RAM space, including the shadow RAM behind its ROMs, to store frequently-referenced data such as usernames, passwords, and message headers. This allowed the BBS to bypass the C-64's notoriously slow floppy disk system for many functions. The text of the message bases was kept on floppy disk in random access mode, bypassing the performance limitations of the 1541 floppy disk <b>drive's</b> <b>file</b> system. In addition, the entire BBS program was written in 6510 assembly code, further improving both speed and memory efficiency.|$|R
50|$|Virus: The Game is a strategy/action {{video game}} by Sir-Tech. The game levels {{take place in}} the user's hard <b>drive,</b> with <b>files</b> and {{directories}} being represented by 3D rooms through which the player navigates.|$|R
40|$|Up to now, we {{have been}} {{attempting}} the construntion of the inboard network that uses the telephone line and inboard power supply (100 V). However, since {{we need to have}} lines always available for emergency calls and ordinary business calls, we must avoid marking the inboard telephone lines busy. Moreover, if we are using our inboard 100 V line for the telecommunication line, we might have some problems such as decrease in data transmission speed, or, in the extreme case, serious problems like communications failure, etc. in case of the occurrence of electric noise on the line. Another problem of the above both systems is that we could not let more than two personal computers access to each other at the same time. In order to solve those problems, we have had experiments on the inboard data transmission that uses Wireless Adapter. The inboard network that combines the modems and the radio lines cannot achieve good compatibilty between a modem and Wireless Adapter, causing poor communications efficiency. Accordingly, when we assume the limited use inboard communications only, we consider it best to install Wireless Adapter directly to RS- 232 C like System 2. And if the file are compressed before data transmission, data transmission efficiency improves 70 - 130 %. In this case, we’ve confirmed that we’ve been able to support transmission of still images even at this speed. Therefore, we conclude that it would be the best policy to compress network <b>drive</b> <b>file</b> and data before transmission...|$|E
5000|$|Email export, iCloud <b>Drive,</b> AudioCopy, iTunes <b>file</b> {{sharing and}} an {{integrated}} WiFi server ...|$|R
5000|$|Parametric: {{feature is}} {{configurable}} via table <b>driven,</b> or properties <b>files</b> with limited parametric values ...|$|R
50|$|Bonnie++ {{is a free}} {{file system}} {{benchmarking}} tool for Unix-like operating systems, developed by Russell Coker. Bonnie++ is a benchmark suite that is aimed at performing a number of simple tests of hard <b>drive</b> and <b>file</b> system performance.|$|R
40|$|Introduction The {{cleaning}} {{mechanisms and}} characteristics of passive ultrasonic irrigation (PUI) are not yet completely understood. The {{aim of this study}} was to investigate whether the oscillatory direction of the ultrasonically <b>driven</b> <b>file</b> had an influence on dentin debris removal from artificially made grooves in standardized root canals. Methods Each of 20 ex vivo root canal models with a standard groove in the apical portion of one canal wall filled with dentin debris received PUI repeatedly, either with file oscillation toward the groove or with file oscillation perpendicular to the groove. After each irrigation procedure, the amount of dentin debris in the groove was evaluated by photographs of the groove and by scoring. The oscillations of the ultrasonic file were also visualized in vitro by using high-speed imaging at a time scale relevant to the cleaning process, order 10 microseconds. Results A nonparametric analysis showed significantly more dentin debris reduction when the file oscillated toward the groove (P =. 002). High-speed imaging showed that the oscillation of the file is in a single plane, resulting in high-velocity jets emanating from the file tip in the direction of the oscillations. Conclusions Oscillation of the ultrasonically <b>driven</b> <b>file</b> toward the groove is more effective in removing dentin debris from the groove than oscillation perpendicular to the groove, which can be related to the fact that there is a high-velocity jet from the file tip in a single direction following the file oscillation and a relatively slow inflow in the perpendicular direction. ...|$|R
40|$|Introduction: The {{cleaning}} {{mechanisms and}} characteristics of passive ultrasonic irrigation (PUI) are not yet completely understood. The {{aim of this study}} was to investigate whether the oscillatory direction of the ultrasonically <b>driven</b> <b>file</b> had an influence on dentin debris removal from artificially made grooves in standardized root canals. Methods: Each of 20 ex vivo root canal models with a standard groove in the apical portion of one canal wall filled with dentin debris received PUI repeatedly, either with file oscillation toward the groove or with file oscillation perpendicular to the groove. After each irrigation procedure, the amount of dentin debris in the groove was evaluated by photographs of the groove and by scoring. The oscillations of the ultrasonic file were also visualized in vitro by using high-speed imaging at a time scale relevant to the cleaning process, order 10 microseconds. Results: A nonparametric analysis showed significantly more dentin debris reduction when the file oscillated toward the groove (P =. 002). High-speed imaging showed that the oscillation of the file is in a single plane, resulting in high-velocity jets emanating from the file tip in the direction of the oscillations. Conclusions: Oscillation of the ultrasonically <b>driven</b> <b>file</b> toward the groove is more effective in removing dentin debris from the groove than oscillation perpendicular to the groove, which can be related to the fact that there is a high-velocity jet from the file tip in a single direction following the file oscillation and a relatively slow inflow in the perpendicular direction. (I Endod 2010; 36 : 1372 - 1376...|$|R
5000|$|Fix the bug of {{transferring}} Google documents between Google <b>Drives</b> to keep <b>file</b> types consistent.|$|R
5000|$|Other {{operating}} {{systems can be}} loaded via pre-downloaded ISO image or floppy/hard <b>drive</b> disk image <b>files.</b>|$|R
50|$|Announcements can {{be posted}} by {{teachers}} {{to the class}} stream which can be commented on by students allowing for two-way communication between the teacher and students. Students can also post to the class stream but won't be as high of a priority as an announcement by a teacher and can be moderated. Multiple types of media from Google products such as YouTube videos and Google <b>Drive</b> <b>files</b> can be attached to announcements and posts to share content. Gmail also provides email options for teachers to send emails {{to one or more}} students in the Google Classroom interface. Classroom can be accessed on the web or via the Android and iOS Classroom mobile apps.|$|R
40|$|Abstract. Real-time log {{analysis}} on large scale data {{is important for}} applications. Specifically, real-time refers to UI latency within 100 ms. Therefore, techniques which efficiently support real-time analysis over large log data sets are desired. MongoDB provides well query performance, aggregation frameworks, and distributed architecture which is suitable for real-time data query and massive log analysis. In this paper, a novel implementation approach for an event <b>driven</b> <b>file</b> log analyzer is presented, and performance comparison of query, scan and aggregation operations over MongoDB, HBase and MySQL is analyzed. Our experimental results show that HBase performs best balanced in all operations, while MongoDB provides less than 10 ms query speed in some operations which is most suitable for real-time applications...|$|R
5000|$|ST BOOK: a later {{portable}} ST, more portable {{than the}} STacy, but sacrificing several features {{in order to}} achieve this notably the backlight, and internal floppy disk <b>drive.</b> <b>Files</b> were meant to be stored on a small amount (one megabyte) of internal flash memory 'on the road' and transferred using serial or parallel links, memory flashcards or external (and externally powered) floppy disk to a desktop ST once back indoors. The screen is highly reflective for the time, but still hard to use indoors or in low light, it is fixed to the 640 × 400 1-bit mono mode, and no external video port was provided. Despite its limitations, it gained some popularity, particularly amongst musicians.|$|R
50|$|It had a Z80 {{compatible}} microprocessor, and ran {{a customized}} version of the CP/M-80 operating system as well as various applications {{from a pair of}} ROM cartridge slots which were treated as <b>drives.</b> For <b>file</b> storage it had a built-in microcassette drive.|$|R
