1|3|Public
40|$|Both {{judicial}} practice and specialized texts have {{brought up the}} problem of what the punishment for breaking the legal provisions in the activity of evidence administration is, if {{a matter of fact}} had been presented by means that are not legally specified or if a piece of evidence was administered by means that are legally specified, but with the violation of legal provisions. Romania has adhered to the most important international juridical instruments adopted in the sphere of human rights by the adoption, modification or completion of internal legislation. As such, {{for the first time in}} Romanian criminal procedural legislation, a sanction for the exclusion of evidence has been introduced, as a corollary for the principle of legality and of loyalty in administering evidence. The New Criminal Procedure Code provides the sanction of exclusion as well, but this time the legislator didn’t resume his or herself to a mere conceptual regulation of the sanction, providing both a specific <b>invalidation</b> <b>procedure</b> as well as procedural solutions. In the New Criminal Procedure Code it is shown that in the sphere of evidence-showing a set of rules has been introduced that establishes the principle of loyalty in the obtainment of evidence. These rules, that provide the sanction of excluding evidence obtained through illegal or unloyal means, will determined the growth of professionalism in the ranks of the judiciary bodies on the subject of obtaining evidence and, on the other hand, will guarantee the firm upholding of the parties rights to a fair trial. “Truth, like all other good things, may be loved unwisely – may be pursued too keenly – may cost too much…” Lord Justice Sir James Lewis Knight-Bruce ”It is a deeply ingrained value in our democratic system that the ends do not justify the means. In particular, evidence or convictions may, at times, be obtained at too high a price”. – Antonio Lamer Former Chief Justice of the Supreme Court of Canada...|$|E
40|$|In this paper, {{we provide}} {{the means for}} further {{extending}} the use of probabilistic algorithms for the case of dynamic causal uncertain parameters. More precisely, we exploit both time and frequency domain characterizations to develop e#cient algorithms for generation of random samples of causal, linear time-invariant uncertain transfer functions. The usefulness of these tools will be illustrated by developing algorithms that {{address the problem of}} risk-adjusted model <b>invalidation.</b> Furthermore, <b>procedures</b> are also provided for solving some multi-disk problems arising in the context of synthesizing robust controllers for systems subject to structured dynamic uncertainty...|$|R
40|$|In this paper, {{we present}} {{compiler}} algorithms for detecting references to stale data in sharedmemory multiprocessors. The algorithm {{consists of two}} key analysis techniques, stale reference detection and locality preserving analysis. While the stale reference detection finds the memory reference patterns that may violate cache coherence, the locality preserving analysis minimizes {{the number of such}} stale references by analyzing both temporal and spatial reuses. By computing the regions referenced by arrays inside loops, we extend the previous scalar algorithms [8] for more precise analysis. We develop a full interprocedural array data-flow algorithm, which performs both bottom-up side-effect analysis and top-down context analysis on the procedure call graph to further exploit locality across procedure boundaries. The interprocedural algorithm eliminates cache <b>invalidations</b> at <b>procedure</b> boundaries, which were assumed in the previous compiler algorithms [9]. We have fully implemented the [...] ...|$|R
40|$|AbstractÐIn this paper, {{we present}} {{compiler}} algorithms for detecting references to stale data in shared-memory multiprocessors. The algorithm {{consists of two}} key analysis techniques, stale reference detection and locality preserving analysis. While the stale reference detection finds the memory reference patterns that may violate cache coherence, the locality preserving analysis minimizes {{the number of such}} stale references by analyzing both temporal and spatial reuses. By computing the regions referenced by arrays inside loops, we extend the previous scalar algorithms [9] for more precise analysis. We develop a full interprocedural array data-flow algorithm, which performs both bottom-up side-effect analysis and top-down context analysis on the procedure call graph to further exploit locality across procedure boundaries. The interprocedural algorithm eliminates cache <b>invalidations</b> at <b>procedure</b> boundaries, which were assumed in the previous compiler algorithms [9]. We have fully implemented the algorithm in the Polaris parallelizing compiler [28]. Using execution-driven simulations on Perfect Club benchmarks, we demonstrate how unnecessary cache misses can be eliminated by the automatic stale reference detection. The algorithm can be used to implement cache coherence in the sharedmemory multiprocessors that do not have hardware directories, such as Cray T 3 D [21]. Index TermsÐCompiler, interprocedural analysis, data-flow analysis, cache coherence, shared-memory multiprocessors. ...|$|R

