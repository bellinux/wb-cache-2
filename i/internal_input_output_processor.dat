0|10000|Public
50|$|To provide {{communications}} between the Emotion Engine and the <b>Input</b> <b>Output</b> <b>Processor</b> (IOP), the <b>input</b> <b>output</b> interface interfaces a 32-bit wide, 37.5 MHz <b>input</b> <b>output</b> bus {{with a maximum}} theoretical bandwidth of 150 MB/s to the internal data bus. The interface provides enough bandwidth for the PCMCIA extension connector which {{was used for the}} network adapter with built-in P-ATA interface for faster data access and online functionality. An advantage of the high bandwidth was that it could be easily used to introduce hardware extensions like the Network Adapter with built-in IDE HDD support or other extensions to extend functionality and product lifecycle which {{can be seen as a}} competitive advantage. In newer variants (like the slim edition), the interface would however offer vastly more bandwidth than what is required by the PlayStation's <b>input</b> <b>output</b> devices as the HDD support was removed and the PCMCIA connector design was abandoned in favor of a slimmer design.|$|R
40|$|Abstract: Flying Test Bed (FTB) {{program is}} to {{establish}} the in-house capability of digital flight control computer (DFLCC) development which will be installed on the existing Korean Supersonic Aircraft (KSA). A hardware manufacturing technology of DFLCC mainly lies in constitution and layout of central processing unit (CPU), and <b>input</b> <b>output</b> <b>processor</b> (IOP) board which includes core processor, {{with those of other}} boards. The FTB DFLCC has triplex digital redundancy architecture. We use to DFLCC rapid prototyping (RP) to help the participants perform design review and function analysis easily. In this paper, we present the establishment and implementation of FTB DFLCC hardware using the SMJ 320 C 6701 processor and RP. Also, channel valid logic and cross channel data link (CCDL) are described for redundancy management...|$|R
30|$|To specify state {{properties}} for system components in TTL, ontologies are used which are specified {{by a number}} of sorts, sorted constants, variables, functions and predicates. State properties are specified based on such ontology using a standard multi-sorted first-order predicate language. For every agent a number of ontologies can be distinguished used to specify state properties of different types. That is, the ontologies IntOnt(A), InOnt(A), OutOnt(A), and ExtOnt(A) are used to express respectively <b>internal,</b> <b>input,</b> <b>output,</b> and external state properties of agent A. Input ontologies contain elements for describing perceptions of an agent from the external world (e.g., observed(a) means that a component has an observation of state property a), whereas output ontologies describe actions and communications of agents (e.g., act(b) represents action b performed by an agent in its environment).|$|R
40|$|The Automatic En Route Air Traffic Control (AERA) and the Advanced Automated System (AAS) of the NAS plan, {{call for}} {{utilization}} of data links for {{such items as}} computer generated flight clearances, enroute minimum safe altitude warnings, sector probes, out of conformance check, automated flight services, and flow management of advisories. A major technical challenge remaining is the integration, flight testing, and validation of data link equipment and procedures in the aircraft cockpit. The flight test organizational chart, was designed to have the airplane side of data link experiments implemented in the NASA Langley Research Center (LaRC) experimental Boeing 737 airplane. This design would enable investigations into implementation of data link equipment and pilot interface, operations, and procedures. The illustrated ground system consists of a work station with links to a national weather database and a data link transceiver system. The data link transceiver system could be a Mode-S transponder, ACARS, AVSAT, or another type of radio system such as the military type HF data link. The airborne system was designed so that a data link transceiver, workstation, and touch panel could be interfaced with an <b>input</b> <b>output</b> <b>processor</b> to the aircraft system bus and thus have communications access to other digital airplane systems...|$|R
40|$|Urbanization {{presents}} both {{opportunities and}} challenges for farmers and farm-supporting sectors on the urban fringe. This paper examines the effects of urbanization on the viability of <b>input</b> suppliers and <b>output</b> <b>processors</b> and on the cost and profitability of farming. An analytical model is developed to provide insights into such effects. This model motivates a multiple-equation empirical model that we estimate using county-level panel data for California, Idaho, Oregon, and Washington. Results provide evidence that urbanization has {{a significant impact on}} agricultural infrastructure, farm production costs, and net farm income and suggest that agriculture-related opportunities of urbanization outweigh the challenges...|$|R
40|$|In this thesis, an {{impedance}} matching network synthesis technique for designing an active frequency doubler is proposed. A single-ended MESFET frequency doubler circuit is first constructed {{to determine a}} set of ideal terminating impedances for the maximum conversion gain with minimum unwanted-output harmonics. The complex conjugation of those ideal impedances {{is equivalent to the}} <b>internal</b> <b>input</b> and <b>output</b> impedances of the FET at different harmonics. As a result, the microstrip matching networks can be easily designed to match with the <b>input</b> and <b>output</b> impedances of the nonlinear device by conventional network synthesis. To validate this design technique, a single-ended FET 1. 2 / 2. 4 GHz frequency doubler for ISM band is demonstrated. The measured performances of fabricated circuit conform to the simulated results and exhibit 7. 8 dB conversion gain and 75 MHz operating bandwidth as well as unwanted-output harmonics suppression better than 20 dB...|$|R
40|$|Error {{analysis}} of a resistive sensor-to-microcontroller interface based on pulse-width modulation and time–ratio measurement shows that <b>internal</b> <b>input</b> and <b>output</b> resistances in microcontroller digital ports produce zero, gain and nonlinearity errors. The time–ratio measurement technique cancels these errors when the sensor resistance equals the reference resistor and reduces errors around that point. We propose two simple methods of reducing those errors for sensors with a wide dynamic range. Both methods use time–ratio measurements. The first method uses several reference resistors covering the sensor resistance range; the second method uses two-point calibration. The second method is more efficient and yields errors that can be smaller than 0. 5 Ω for a sensor resistance from about 600 Ω to 3550 Ω. Peer Reviewe...|$|R
40|$|A compact <b>input</b> <b>output</b> (I/O) {{numerical}} <b>processor</b> {{capable of}} performing floating-point, multiple precision and other arithmetic functions at execution times which {{are at least}} 100 times faster than comparable software emulation is described. The I/O device is a microcomputer system containing a 16 bit microprocessor, a numerical coprocessor with eight 80 bit registers running at a 5 MHz clock rate, 18 K random access memory (RAM) and 16 K electrically programmable read only memory (EPROM). The processor acts as an intelligent slave to the host computer and can be programmed in high order languages such as FORTRAN and PL/M- 86...|$|R
40|$|Introduction To help users {{find their}} way in a virtual theatre we {{developed}} a navigation agent. In natural language dialogue the agent assists users looking for the location of an object or room, and it shows routes between locations. The speech-based dialogue system allows users to ask questions such as "Where is the coffee bar?" and "How do I get to the great hall?" The agent has a map and can mark locations and routes; users can click on locations and ask questions about them. In an earlier version (Luin et al., 2001) no underlying dialogue model was used. Now we have a generic architecture and dialogue model allowing multimodal interactions, including reference modelling and backward/ forward looking tags to determine and model dialogue structure. The architecture of the system can be conceived as a box containing a dialogue manager (DM) and world knowledge, to be connected with <b>input</b> and <b>output</b> <b>processors.</b> The processors can be plugged into different dialogue systems. E. g., ou...|$|R
40|$|The {{question}} of forming aim-oriented description {{of an object}} domain of decision support process is outlined. Two main problems of an estimation and evaluation of data and knowledge uncertainty in decision support systems – straight and reverse, are formulated. Three conditions being the formalized criteria of aimoriented constructing of <b>input,</b> <b>internal</b> and <b>output</b> spaces of some decision support system are proposed. Definitions of appeared and hidden data uncertainties on some measuring scale are given...|$|R
40|$|Many key {{building}} design policies are made using sophisti-cated computer simulations such as EnergyPlus (E+), the DOE flagship whole-building energy simulation engine. E+ and other sophisticated computer simulations have several major problems. The two main issues are 1) {{gaps between the}} simulation model and the actual structure, and 2) lim-itations of the modeling engine’s capabilities. Currently, these problems are addressed by having an engineer man-ually calibrate simulation parameters to real world data or using algorithmic optimization methods to adjust the build-ing parameters. However, some simulations engines, like E+, are computationally expensive, which makes repeatedly evaluating the simulation engine costly. This work explores addressing this issue by automatically discovering the sim-ulation’s <b>internal</b> <b>input</b> and <b>output</b> dependencies from ∼ 20 Gigabytes of E+ simulation data, future extensions will use ∼ 200 Terabytes of E+ simulation data. The model is val-idated by inferring building parameters for E+ simulations with ground truth building parameters. Our results indi-cate that the model accurately represents parameter means with some deviation from the means, but does not support inferring parameter values that exist on the distribution’s tail...|$|R
40|$|The Asian {{language}} {{versions of}} the OpenVMS operating system allow Asian-speaking users {{to interact with the}} OpenVMS system in their native languages and provide a platform for developing Asian applications. Since the OpenVMS variants must be able to handle multibyte character sets, the requirements for the <b>internal</b> representation, <b>input,</b> and <b>output</b> differ considerably from those for the standard English version. A review of the Japanese, Chinese, and Korean writing systems and character set standards provides the context {{for a discussion of the}} features of the Asian OpenVMS variants. The localization approach adopted in developing these Asian variants was shaped by business and engineering constraints; issues related to this approach are presented...|$|R
40|$|This thesis {{proposes a}} safety {{instrument}} system {{which is based}} on D-S evidence theory, including sensor, logic voting system and execution unit. While the logic voting system concludes the <b>input</b> circuit, <b>processor,</b> <b>output</b> circuit and the diagnosis module based on D-S evidence theory. According to the diagnosis module in multi-channel logic voting system and calculation based on D-S evidence theory, the interconnected feedback information can improve the reliability of the diagnosis. Therefore, the safety instrument system elaborated in this thesis can achieve system’s self-diagnosis function under the premise of using less hardware equipment and at the mean time acquiring advantages of low cost, reliability and high security.   </p...|$|R
40|$|Until recently, information-flow {{analysis}} {{has been used}} primarily to verify that information trans-mission between program variables cannot violate security requirements. Here, the notion of infor-mation flow is explored {{as an aid to}} program development and validation. Information-flow relations are presented for while-programs, which identify those program statements whose execution may cause information to be transmitted from or to particular <b>input,</b> <b>internal,</b> or <b>output</b> values. It is shown with examples how these flow relations can be helpful in writing, testing, and updating programs; they also usefully extend the class of errors which can be detected automatically in the “static analysis ” of a program...|$|R
40|$|This paper {{presents}} two {{standards for}} communicating mathematical objects between computer programs, for representing these objects on multimedia {{such as the}} web, and our experimentation with those standards to develop <b>input</b> and <b>output</b> compliant <b>processors</b> {{which can be used}} as basic components to build an effective World Wide Web computational server. 1 Introduction Recent trends in mathematical software include rapid development in computer algebra packages, numerical algorithm libraries and visualization packages. This proliferation has created a need for standard tools that allow the packages to communicate with each other. Since each package has its own strengths and weaknesses, it is desirable {{to be able to use}} a particular package for the specific tasks it is good at, and to switch between different packages when necessary. Moreover, the ability to share data between packages allows modular problem solving, where sub-tasks are delegated to specific packages. This eliminates the [...] ...|$|R
40|$|One is the {{pipelining}} method, and {{the other}} is the block partitioning. Several papers have discussed the pipelining method [1][6]. Each processor calculates an entire block for I/W iterations and passes extrinsic information (Le) to the next processor, where I is the iteration number, and W is the number of processors. Though the decoding delay is reduced to O(N/W) from O(N), the register space for a received data and that for Le is increased to O(NW). Here N is block size. This is too much overhead since the increased register space occupies a large portion within the entire decoder. A parallel decoding method using block partitioning was suggested in [7]. Each information block is divided into partially overlapped W SISO (Soft <b>Input</b> Soft <b>Output)</b> <b>processors,</b> and these processors decode in parallel as illustrated in Fig. 1. This scheme can reduce the decoding delay down to O(N/W), not requiring additional register space for the received data and that for Le. However, memory bandwidth for Le, which should be handled at the same time, is increased by W, {{and it needs to be}} interleaved at the same time. Consequently, there can be a data conflict at the read/write operation between the W processors and Le memory. Note, however, that this problem was not seriously addressed at the early paper [7][8], and narrow down to the block-type interleaver at the first paper considering this problem [9]. Rec-eive...|$|R
40|$|In this paper, we {{describe}} technology and experience with an experimental personal information manager, which {{interacts with the}} user primarily but not exclusively through speech recognition and synthesis. This device, which controls a client PDA, {{is known as the}} Personal Speech Assistant (PSA). The PSA contains complete speech recognition, speech synthesis and dialog management systems. Packaged in a hand-sized enclosure, of size and physical design to mate with the popular Palm III personal digital assistant, the PSA includes its own battery, microphone, speaker, audio <b>input</b> and <b>output</b> amplifiers, <b>processor</b> and memory. The PSA supports speaker-independent English speech recognition using a 500 -word vocabulary, and English speech synthesis on an arbitrary vocabulary. We survey the technical issues we encountered in building the hardware and software for this device, and the solutions we implemented, including audio system design, power and space budget, speech recognition in adverse acoustic environments with constrained processing resources, dialog management, appealing applications, and overall system architecture. 1...|$|R
40|$|Software {{plays an}} {{increasingly}} important role in modern safety-critical systems. Reliable software becomes desirable for all stakeholders. Typical software related failures include software <b>internal</b> failures, <b>input</b> failures, <b>output</b> failures, support failures and multiple interaction failures. This dissertation provides a methodology to study the impact of hardware support failures on software reliability. The hardware failures we are focusing on {{in this study are}} semiconductor device intrinsic failures that are directly related to software execution during device operation. The software execution on hardware devices, in essence, is a series of 0 and 1 signal alternations for the inputs of hardware components. Such signal alternations lead to voltage changes and current flows in the microelectronic hardware device, which serve as electrical stresses on the device and may lead to physical failures. The failure mechanisms include Hot Carrier Injection (HCI) ...|$|R
40|$|Due to the {{character}} of the original source materials and the nature of batch digitization, quality control issues may be present in this document. Please report any quality issues you encounter to digital@library. tamu. edu, referencing the URI of the item. Includes bibliographical references. We provide a facility to experiment with graph algorithms. The facility is implemented as a client to XAGE, a software environment developed under the direction of Dr. James Abello. XAGE allows a user to visually animate algorithmic actions with the capability of recording a session to be replayed later. Diverse graph representations and generation methods are offered. Several mechanisms allow a user to set up drivers to control <b>input,</b> <b>output</b> and execution of a set of external algorithms. This is achieved by using control files. External algorithms can be incorporated into the facility by a simple process of linking and registration. These algorithms now become <b>internal</b> algorithms. <b>Input,</b> <b>output</b> and execution of internal algorithms are controlled by scrolling menus. A user can execute in both a supervised and non-supervised fashion. In the nonsupervised mode a sequence of algorithms can be executed on a set of graphs and the results and the graphs are recorded (optionally) into a file. A special log file is provided to make annotations about interesting algorithmic events. This functionality is achieved by generating unique graph identifiers. To test the usefulness of our facility we have experimented with several graph algorithms. These include minimum vertex cover and maximum clique size heuristics and some visibility and circle graph related methods. As a by-product of our implementation we obtained several results about the structure of maximum independent sets for several classes of graphs. Some conjectures and open problems are proposed for further investigation...|$|R
40|$|The model {{parameters}} of narrow gap pulse welding {{can be divided}} into <b>input,</b> <b>internal</b> and <b>output</b> ones. The breadth of gap, that is, clearance breadth between upright edges is one of key parameters securing high quality of a weld joint. The paper presents theoretical outcomes for the model of layered weld formation under narrow gap pulse welding. Based on these studies is developed model of processes, which occur in the weld pool under pulse grove welding. It comprises the scheme of liquid metal motion in the weld pool, scheme of fusion with the side edge and in the bottom part, and the scheme of welding current impulse effect on the structure of a weld joint...|$|R
50|$|Make {{a list of}} all of the {{existing}} connections that pass through A or B. Include the new connection, although it is initially broken. The algorithm proper only cares about the <b>internal</b> connections from <b>input</b> to <b>output</b> switch, although a practical implementation also has {{to keep track of the}} correct <b>input</b> and <b>output</b> switch connections.|$|R
40|$|Fuzzy Logic {{implementation}} {{is becoming}} increasingly important, and finding applications in diverse areas of current interest, such as control, pattern recognition, robotics, and other decision making applications. Fuzzy decision process offer a significant advantage over crisp decision process which {{is the ability to}} process different levels of truth instead of only 1 or 0 levels. Fuzzy Logic does not require precise inputs, it is inherently robust, and can process any reasonable number of inputs but system complexity increases rapidly with more <b>inputs</b> and <b>outputs.</b> Distributed <b>processors</b> would probably be easier to implement. Simple, plain-language IF X AND Y THEN Z rules are used to describe the desired system response in terms of linguistic variables rather than mathematical formulas. The number of these is dependent on the number of <b>inputs,</b> <b>outputs,</b> and the designer 2 ̆ 7 s control response goals. The new Motorola 68 HC 12 MCU has an embedded fuzzy logic instruction set. Using this instruction set, we can implement complex fuzzy logic systems using only a few hundred bytes of ROM that cycle compute in less than a millisecond. Considering the fact that the fuzzy logic instruction set of the 68 HC 12, enables the use of fuzzy logic in mass-market high-speed applications, such as car engine control, anti-skid brakes, traction control, inter-vehicle dynamics control, hard disk drive control, servo motor control, and cellular phones. This thesis deals with the design of Automotive Airbag Control System a using Fuzzy Logic based decision structure and implementation using the 68 HC 12 microcontroller. Dept. of Electrical and Computer Engineering. Paper copy at Leddy Library: Theses 2 ̆ 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 1999. M 52. Source: Masters Abstracts International, Volume: 39 - 02, page: 0566. Adviser: J. J. Soltis. Thesis (M. A. Sc.) [...] University of Windsor (Canada), 2000...|$|R
5000|$|... "Applications of <b>Input</b> <b>Output</b> Analysis for Less Developed Countries", in Sohn, I. (ed.), Readings in <b>Input</b> <b>Output</b> Analysis, Oxford University Press, 1986 ...|$|R
50|$|For <b>input</b> or <b>output,</b> each {{peripheral}} <b>processor</b> accesses {{a peripheral}} device over a communication link called a data channel. One peripheral device can {{be connected to}} each data channel; however, a channel can be modified with hardware to service more than one device.|$|R
2500|$|A {{parallel}} feedback connection at the <b>input</b> (<b>output)</b> {{decreases the}} <b>input</b> (<b>output)</b> resistance {{by a factor}} ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
40|$|The {{concept of}} scalar {{measures}} {{of the degree of}} <b>internal</b> connectedness in <b>input</b> - <b>output</b> models is considered. These measures are believed to be important structural indicators, helpful in model estimation. They allow for a summary description and comparative analysis of various linear flow systems. Several measures drawn from the economic and ecological <b>input</b> - <b>output</b> literatures are examined. It is shown that none of the measures represent connectedness adequately. ...|$|R
30|$|Our {{primary source}} of data is the <b>Input</b> <b>Output</b> Transaction Table of 2007 – 08 {{published}} by Central Statistical Organization (CSO 2012), Government of India. This is a 130 X 130 commodity matrix used for <b>Input</b> <b>Output</b> Analysis.|$|R
40|$|Abstract. We {{develop a}} unified {{functional}} formalism for modelling complex systems, {{that is to}} say systems that are composed of a number of heterogeneous components, including typically software and physical devices. Our approach relies on non-standard analysis that allows us to model continuous time in a discrete way. Systems are defined as generalized Turing machines with temporized <b>input,</b> <b>internal</b> and <b>output</b> mechanisms. Behaviors of systems are represented by transfer functions. A transfer function is said to be implementable if it is associated with a system. This notion leads us to define a new class-which is natural in our framework- of computable functions on (usual) real numbers. We show that our definitions are robust: on one hand, the class of implementable transfer functions is closed under composition; on the other hand, the class of computable functions in our meaning includes analytical functions whose coefficients are computable in the usual way, and is closed under addition, multiplication, differentiation and integration. Our class of computable functions also includes solutions of dynamical and Hamiltonian systems defined by computable functions. Hence...|$|R
40|$|The use of {{measures}} originally suggested by Bennet, Bowley, and Hicks {{in the context}} of cost of living, welfare, and consumer surplus measurement to measure <b>inputs,</b> <b>outputs,</b> and productivity is examined. Suitably normalized versions of the Bennet-Bowley measures are shown to be exact and superlative measures of <b>input,</b> <b>output,</b> and productivity indicators. <b>Input</b> and <b>output</b> measurement, Productivity measurement, Directional distance functions. ...|$|R
5000|$|The general {{conclusion}} from this example {{and a similar}} example for the output resistance case is:A parallel feedback connection at the <b>input</b> (<b>output)</b> decreases the <b>input</b> (<b>output)</b> resistance by a factor ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
40|$|A network {{management}} system has SNMP agents distributed at {{one or more}} sites, an <b>input</b> <b>output</b> module at each site, and a server module located at a selected site for communicating with <b>input</b> <b>output</b> modules, {{each of which is}} configured for both SNMP and HNMP communications. The server module is configured exclusively for HNMP communications, and it communicates with each <b>input</b> <b>output</b> module according to the HNMP. Non-iconified, informationally complete views are provided of network elements to aid in {{network management}}...|$|R
40|$|Games for system {{analysis}} • Verification: check if a given system is correct → reduces to graph searching System <b>input</b> <b>output</b> Spec: φ(input,output) Environment Games for {{system analysis}} <b>input</b> <b>output</b> Spec: φ(input,output) Environment • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy Games for system analysis Spec: φ(input,output) • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy This talk: environment is abstracted as a stochastic process <b>input</b> <b>output</b> Environment <b>input</b> <b>output</b> = Markov decision process (MDP) ? Markov decision proces...|$|R
40|$|Acquaye, Alston and Pardey {{report and}} discuss {{agricultural}} <b>input</b> and <b>output</b> price and quantity estimates for various spatial aggregates within the United States {{and a range}} of multi-factor productivity measures for the period 1949 - 1991. Laspeyres, Paasche, Fisher Ideal, and Törnqvist-Theil index number procedures (base year 1949 = 100) were used to develop their estimates, the formulas for which are presented below and elaborated further in Alston, Norton, and Pardey (1995). An Excel spreadsheet file named accompanies these notes. It contains the price and quantity <b>input</b> and <b>output</b> aggregates for each of the 48 contiguous states, 11 USDA production regions (with the Northeast region split into two sub-regions), and a 48 -state (national) total for the period 1949 - 91. The data file also includes various <b>input</b> and <b>output</b> subaggregates (see table 1 from Acquaye, Alston, and Pardey, appended below, for details) and the value shares using prices from the current and past period that are required to reconstruct all these indexes for all the spatial units reported in the paper. Documentation of the primary data files constructed by Craig, Pardey, and Acquaye is also available in the file named Index Number Construction The Laspeyres and Paasche indexes are not chain-linked indexes—they use base-period and current prices and quantities, respectively in the calculation. The Laspeyres <b>input</b> (<b>output)</b> quantity index uses base period <b>input</b> (<b>output)</b> prices to weight both current and base-period <b>input</b> (<b>output)</b> quantities, and was calculated as where Pi 0 is the price of <b>input</b> (<b>output)</b> i in the base-period, and Qi 0 is the quantity of <b>input</b> (<b>output)</b> i in the base-period. N is the number of individual observations of <b>input</b> (<b>output)</b> ...|$|R
5000|$|... #Article: Hybrid <b>input</b> <b>output</b> (HIO) {{algorithm}} for phase retrieval ...|$|R
5000|$|Imported {{function}} {{can have}} <b>input,</b> <b>output,</b> and inout arguments.|$|R
50|$|<b>Input,</b> <b>Output,</b> and I/O {{fields are}} similar to text boxes.|$|R
