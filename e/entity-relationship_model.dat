230|192|Public
5000|$|... #Subtitle level 3: Higher Order Extended <b>Entity-relationship</b> <b>model</b> ...|$|E
50|$|Metadata {{repositories}} can {{be designed}} as either an <b>Entity-relationship</b> <b>model,</b> or an Object-oriented design.|$|E
50|$|Value range {{structure}} diagrams (also {{known as}} FMC Entity Relationship Diagrams) {{can be compared}} with the <b>Entity-relationship</b> <b>model.</b>|$|E
40|$|ERMIA (<b>Entity-Relationship</b> <b>Modelling</b> of Information Artefacts) {{provides}} an extension to <b>entity-relationship</b> <b>modelling</b> techniques {{to provide a}} structural representation {{of the interaction between}} people and "information artefacts". Such a representation may then be used to compare contrasting interface designs or identify potential usability problems in an existing system. In this paper we present an application of ERMIA analysis to a version of the XBarnacle semi-automated theorem proving system that features interactive proof critics. 1. Introduction Benyon and Green have introduced a method for understanding and describing Human-Computer Interaction known as ERMIA (<b>Entity-Relationship</b> <b>Modelling</b> of Information Artefacts (Benyon and Green, 1995; Green and Benyon, 1996; Benyon, Green and Bental, in press). ERMIA uses an extended <b>entity-relationship</b> <b>modelling</b> technique to provide a structural representation of the interaction between people and computer systems or other information art [...] ...|$|R
5000|$|Peter Chen, {{known for}} the {{development}} of <b>entity-relationship</b> <b>modeling.</b>|$|R
5000|$|... #Subtitle level 3: <b>Entity-relationship</b> <b>modeling</b> and {{conceptual}} data modeling ...|$|R
50|$|Database designs {{also include}} ER (<b>entity-relationship</b> <b>model)</b> diagrams. An ER diagram is a diagram {{that helps to}} design {{databases}} in an efficient way.|$|E
5000|$|The {{enhanced}} <b>entity-relationship</b> <b>model</b> (EER modeling) introduces several concepts not in ER modeling, but {{are closely}} related to object-oriented design, like is-a relationships.|$|E
50|$|The {{knowledge}} model {{found in}} a semantic wiki is typically available in a formal language, so that machines can process it into an <b>entity-relationship</b> <b>model</b> or relational database.|$|E
5000|$|... 2000. <b>Entity-Relationship</b> <b>Modeling</b> Foundations of Database Technology. Springer, Berlin 2000, [...]|$|R
50|$|A similar {{technique}} used for database design is <b>Entity-Relationship</b> <b>Modeling</b> (ER Modeling).|$|R
40|$|<b>Entity-Relationship</b> <b>modeling</b> is {{a popular}} {{technique}} for data modeling. Despite its popularity and wide spread use, it lacks a firm semantic foundation. We propose a translation of an ER-model into mapalgebra, suggesting that mapalgebra does provide suitable mechanisms for establishing a formal semantics of <b>entity-relationship</b> <b>modeling.</b> This report deals with the techniques necessary for the translation and provides a static view of an ER-model in its mapalgebraic disguise...|$|R
50|$|As {{part of its}} {{internal}} IT infrastructure, BNR also created an email system called COCOS (COrporate COmmunication System), and a powerful relational database system called GERM (General <b>Entity-Relationship</b> <b>Model).</b>|$|E
5000|$|... "The <b>entity-relationship</b> <b>model</b> adopts {{the more}} natural {{view that the}} real world {{consists}} of entities and relationships. It incorporates some of the important semantic information about the real world." ...|$|E
5000|$|It is {{documented}} and diagrammed as an <b>entity-relationship</b> <b>model</b> and in Unified Modeling Language (UML), accompanied by {{detailed descriptions of}} the concepts, elements and attributes needed to represent transport information.|$|E
50|$|Like <b>entity-relationship</b> <b>models,</b> domain {{models can}} be used to model {{concepts}} or to model real world objects and events.|$|R
5000|$|Outline Business Area Analysis: For each {{development}} project, business analysts {{define the}} business processes and data potentially {{required in the}} new system. These are modelled using process decomposition diagrams, process dependency diagrams and <b>entity-relationship</b> <b>models.</b>|$|R
40|$|<b>Entity-Relationship</b> <b>modelling</b> is {{a popular}} {{technique}} for data modelling. Despite its popularity and wide spread use, it lacks a firm semantic foundation. We propose a translation of an ER-model into relation algebra, suggesting {{that this kind of}} algebra does provide suitable mechanisms for establishing a formal semantics of <b>Entity-Relationship</b> <b>modelling.</b> The work reported on here deals first with the techniques necessary for the translation, thus constructing a static view of an ER-model in an abstract setting {{of what might be called}} logic without variables. We then undertake a detailed analysis of the insertion and deletion operations for an ER-model represented in terms of the relation calculus...|$|R
50|$|In summary, it is {{possible}} to innovate on the different supra-entities and supra-relationships that constitute the Business <b>Entity-Relationship</b> <b>Model,</b> achieving different types of innovations and increasing the innovation capacity of the business.|$|E
50|$|The {{enhanced}} entity-relationship (EER) model (or extended <b>entity-relationship</b> <b>model)</b> {{in computer}} science is a high-level or conceptual data model incorporating extensions to the original entity-relationship (ER) model, used {{in the design of}} databases.|$|E
50|$|The <b>entity-relationship</b> <b>model</b> {{serves as}} the {{foundation}} of many systems analysis and design methodologies, computer-aided software engineering (CASE) tools, and repository systems. The ER model is the basis for IBM's Repository Manager/MVS and DEC's CDD/Plus.|$|E
5000|$|Entities may be {{characterized}} {{not only by}} relationships, but also by additional properties (attributes), which include identifiers called [...] "primary keys". Diagrams created to represent attributes as well as entities and relationships may be called entity-attribute-relationship diagrams, rather than <b>entity-relationship</b> <b>models.</b>|$|R
5000|$|Wirfs-Brock first {{coined the}} [...] "-driven" [...] meme in an OOPSLA 1989 paper she co-authored with Brian Wilkerson. Before that time, the most {{prevalent}} way of structuring objects was based on <b>entity-relationship</b> <b>modeling</b> ideas (popularized by James Rumbaugh, Steve Mellor and Sally Shlaer).|$|R
50|$|The {{representation}} on {{the multiple}} structures of parts, groups, groups of parts {{or parts of}} entity groups that form the supra-entity is done through strips connecting the different elements, {{instead of the usual}} line symbol used for a single structure in the <b>entity-relationship</b> <b>models.</b>|$|R
50|$|Peter Pin-Shan Chen (Chinese: 陳品山) is a Taiwanese American {{computer}} scientist. He is a Distinguished Career Scientist {{and faculty}} member at Carnegie Mellon University, {{who is known for}} the development of the <b>entity-relationship</b> <b>model</b> in 1976.|$|E
50|$|IFC defines an EXPRESS based <b>entity-relationship</b> <b>model</b> {{consisting}} {{of several hundred}} entities organized into an object-based inheritance hierarchy. Examples of entities include building elements such as IfcWall, geometry such as IfcExtrudedAreaSolid, and basic constructs such as IfcCartesianPoint.|$|E
50|$|An <b>entity-relationship</b> <b>model</b> (ERM), {{sometimes}} referred to as an entity-relationship diagram (ERD), is an abstract conceptual data model (or semantic data model) used in software engineering to represent structured data. There are several notations used for ERMs.|$|E
5000|$|Chen's {{notation}} for <b>entity-relationship</b> <b>modeling</b> uses rectangles {{to represent}} entity sets, and diamonds to represent relationships appropriate for first-class objects: {{they can have}} attributes and relationships of their own. If an entity set participates in a relationship set, they are connected with a line.|$|R
40|$|Application {{and system}} {{modeling}} {{have become an}} important part of many software development projects. The Unified Modeling Language (UML) has been accepted as the general object-oriented modeling language for software systems. In relational database development <b>entity-relationship</b> <b>models</b> have traditionally been used for modeling such systems. It has been acknowledged that relational database management systems need a better representation of the real world than that obtained with the current tabular representation that are derived from the <b>entity-relationship</b> <b>models.</b> Object-oriented modeling is an effective mechanism for representing real world structures. There are many techniques for transforming UML models into object-oriented relational database systems. In this work we will compare, and evaluate methodologies for transforming UML class diagram (CD) models into object-oriented relational databases. This work will focus on the transformations of CDs into a set of statements in SQL: 1999. This work will seek to identify the commonality and variability in the methodologies and advantages of the approaches...|$|R
50|$|<b>Entity-relationship</b> <b>modeling</b> was {{developed}} for database design by Peter Chen and published in a 1976 paper. However, variants of the idea existed previously. Some ER modelers show super and subtype entities connected by generalization-specialization relationships, and an ER model can be used also in the specification of domain-specific ontologies.|$|R
5000|$|In {{databases}} has-a {{relationships are}} usually represented in an <b>Entity-relationship</b> <b>model.</b> As {{you can see}} by the diagram on the right an account can have multiple characters. This shows that account has a [...] "has-a" [...] relationship with character.|$|E
50|$|The <b>entity-relationship</b> <b>model</b> {{proposes a}} {{technique}} that produces entity-relationship diagrams (ERDs), which can be employed to capture information about data model entity types, relationships and cardinality. A Crow's foot shows a one-to-many relationship. Alternatively a single line represents a one-to-one relationship.|$|E
5000|$|The {{first draft}} of FRBRoo was {{completed}} in 2006. [...] The model expresses the attributes and relationships in the <b>entity-relationship</b> <b>model</b> of FRBR, formulated as an extensions of the CIDOC-CRM. Version 2.4 of the FRBRoo model was released in November 2015.|$|E
5000|$|In a survey, Brodie and Liu {{could not}} find a single {{instance}} of <b>entity-relationship</b> <b>modeling</b> inside a sample of ten Fortune 100 companies. Badia and Lemire blame this lack of use on the lack of guidance but also on the lack of benefits, such as lack of support for data integration.|$|R
40|$|Data {{modelling}} {{reveals the}} internal structure of an information system, abstracting away from {{details of the}} physical representation. We show that <b>entity-relationship</b> <b>modelling,</b> a well-tried example of a data-modelling technique, {{can be applied to}} both interactive and non-interactive information artefacts in the domain of HCI. By extending the conventional ER notation slightly (to give ERMIA, <b>Entity-Relationship</b> <b>Modelling</b> for Information Artefacts) {{it can be used to}} describe differences between different representations of the same information, differences between user's conceptual models of the same device, and the structure and update requirements of distributed information in a worksystem. It also yields symbolic-level estimates of Card et al. 's (1994) index of `cost-of-knowledge' in an informa- tion structure, plus a novel index, the `cost-of-update'; these symbolic estimates offer a useful complement to the highly detailed analyses of time costs obtainable from GOMS-like [...] ...|$|R
50|$|An example model {{showing the}} {{different}} graphical symbols {{for all the}} concepts can be seen below. The symbols resemble those used in <b>entity-relationship</b> <b>modeling,</b> {{with a couple of}} extensions. A double outline on an attribute or tie indicates that a history of changes is kept and the knot symbol (an outlined square with rounded edges) is also available.|$|R
