0|10000|Public
40|$|A new hand- or finger-mounted <b>data</b> <b>input</b> {{device is}} pre-sented, using {{traditional}} touch-typing skills as method of (al-phabetic) character input thus providing an ultra-portable solution for “quiet ” <b>data</b> <b>input</b> into portable computer sys-tems. The presented keyboard independent touch-typing de-vice (KITTY) offers high <b>data</b> <b>input</b> rates and a virtually zero learning curve for new users. ...|$|R
40|$|FLEXSTAB, {{an array}} of {{computer}} programs developed on CDC equipment, has been converted to operate on the IBM 360 computation system. Instructions for installing, validating, and operating FLEXSTAB on the IBM 360 are included. Hardware requirements are itemized and supplemental materials describe JCL sequences, the CDC to IBM conversion, the <b>input</b> output <b>subprograms,</b> and the interprogram data flow...|$|R
5000|$|A {{write to}} this {{register}} will reset bits 5 through 7 of SKSTAT which are latches to 1. The latches flag keyboard overrun, Serial <b>data</b> <b>input</b> overrun, and Serial <b>data</b> <b>input</b> frame error.|$|R
50|$|<b>Input</b> <b>data</b> is {{classified}} into two categories: relative <b>input</b> <b>data</b> and absolute <b>input</b> <b>data.</b>|$|R
5000|$|Data: widgets for <b>data</b> <b>input,</b> <b>data</b> filtering, sampling, imputation, feature {{manipulation}} and feature selection ...|$|R
50|$|Serial port <b>data</b> <b>input</b> byte.|$|R
5000|$|WebAGRIS is a {{multilingual}} Web-based {{system for}} distributed <b>data</b> <b>input,</b> processing and dissemination (through the Internet or on CD-Rom), of agricultural bibliographic information. It {{is based on}} common standards of <b>data</b> <b>input</b> and dissemination formats (XML, HTML, ISO2709), as well as subject categorization schema and AGROVOC.|$|R
50|$|Check for {{transcription}} {{errors in}} <b>data</b> <b>input</b> and reference.|$|R
30|$|<b>Data</b> <b>input</b> {{preparation}} in SimStadt {{is reduced to}} preparing the CityGML file with information regarding building age and building usage; in case of TRNSYS, all <b>data</b> <b>inputs</b> must be put manually in detail which is time consuming. In an application over several buildings or whole districts, SimStadt performs much faster.|$|R
30|$|<b>Input</b> <b>data</b> {{requirements}} {{for each of}} the various mortality forecasting methods were assessed by compiling a table of both national-level and regional-level <b>data</b> <b>inputs.</b> At the regional scale the number of <b>input</b> <b>data</b> cells per subnational region was noted.|$|R
5000|$|... #Caption: <b>Data</b> <b>input</b> form, {{showing the}} general {{structure}} of ZOG syntax ...|$|R
5000|$|In NetWeaver Developer, data links {{prompt the}} user for <b>data</b> <b>input.</b>|$|R
5000|$|... {{an input}} module to handle <b>data</b> <b>input</b> (from probes or packet sniffer) ...|$|R
40|$|The EP 16 VC is a {{differential}} receiver/driver. The {{device is}} functionally {{equivalent to the}} EP 16 and LVEP 16 devices but with high gain and enable output. The EP 16 VC provides an EN input which is synchronized with the <b>data</b> <b>input</b> (D) signal {{in a way that}} provides glitchless gating of the QHG and QHG outputs. When the EN signal is LOW, the input is passed to the outputs and the data output equals the <b>data</b> <b>input.</b> When the <b>data</b> <b>input</b> is HIGH and EN goes HIGH, it will force the QHG LOW and the QHG HIGH on the next negative transition of the <b>data</b> <b>input.</b> If the <b>data</b> <b>input</b> is LOW when the EN goes HIGH, the next data transition to a HIGH is ignored and QHG remains LOW and QHG remains HIGH. The next positive transition of the <b>data</b> <b>input</b> is not passed on to the data outputs under these conditions. The QHG and QHG outputs remain in their disabled state as long as the EN input is held HIGH. The EN input has no influence on the Q output and the <b>data</b> <b>input</b> is passed on (inverted) to this output whether EN is HIGH or LOW. This configuration is ideal for crystal oscillator applications where the oscillator can be free running and gated on and off synchronously without adding extra counts to the output. The VBB/D pin is internally dedicated and available for differential interconnect. VBB/D may rebias AC coupled inputs. When used, decouple VBB/D and VCC via a 0. 01 �F capacitor and limit current sourcing or sinking to 1. 5 mA. When not used, VBB/D should be left open. The 100 Series contains temperature compensation...|$|R
50|$|The <b>data</b> <b>input</b> form invites every {{contributor}} of new articles to list sources.|$|R
50|$|The <b>data</b> <b>input</b> to any {{of those}} hash {{algorithms}} is described somewhere around https://github.com/ipfs/go-ipfs/tree/master/merkledag.|$|R
5000|$|Data object model, {{database}} generation through object-relational mapping, {{suite of}} customizable <b>data</b> <b>input</b> controls.|$|R
50|$|PFA {{document}} is designed covering all the functionality {{required by the}} business {{and how it is}} addressed in the application.It covers all the <b>data</b> <b>inputs,</b> <b>data</b> processing and data outputs.|$|R
3000|$|... {{insertion}} of collected <b>data</b> (<b>input</b> parameters) in the model, thus obtaining the simulated consumption; [...]...|$|R
5000|$|It is an {{optional}} bit-flipper (the deciding input chooses whether to invert the <b>data</b> <b>input).</b>|$|R
5000|$|Network {{communications}} - {{the managing}} of <b>data</b> <b>inputs</b> and outputs for local and internet gameplay.|$|R
5000|$|Potential {{hydrological}} <b>data</b> <b>input</b> for assimilation {{into local}} distributed runoff models, regional flood plain studies/planning ...|$|R
5000|$|In {{addition}} to the mandatory simulation inputs listed above, there are several additional optional <b>data</b> <b>inputs.</b>|$|R
50|$|Both <b>data</b> <b>input</b> {{and control}} input is active. The output value will be 1 and current will {{flow through the}} element. In this case, the <b>input</b> <b>data</b> {{is sent to the}} output.|$|R
40|$|<b>Input</b> <b>Data</b> Management (IDM) {{is a time}} {{consuming}} and costly process for Discrete Event Simulation (DES) projects. <b>Input</b> <b>Data</b> Management is considered {{as the basis of}} real-time process simulation (Bergmann, Stelzer and Strassburger, 2011). According to Bengtsson et al. (2009), <b>data</b> <b>input</b> phase constitutes on the average about 31...|$|R
5000|$|Random {{sequence}} of <b>data</b> <b>inputs</b> (sometimes called stochastic testing) - f.ex. a random {{sequence of}} method calls ...|$|R
5000|$|... rECOrd Online <b>Data</b> <b>Input</b> System (RODIS) is a {{facility}} for entering wildlife sighting information via the rECOrd website.|$|R
40|$|November 1986. ""Turner-Fairbank Highway Research Center. ""A Traffic Engineer's Guide. "Prepared by K. G. Courage, C. E. Wallace, D. P. Reaves (Transportation Research Center, University of Florida). Cover title. Includes bibliographical references. User's manual [...] <b>Data</b> <b>input</b> {{processors}} (AAP forms) [...] <b>Data</b> <b>input</b> processor (AAP DIM) [...] Microcomputer version (PC-AAP). User's manual. Sponsored by U. S. Federal Highway Administration, Office of Research and Development. Mode of access: Internet...|$|R
40|$|Deliverable 1. 2 of the WP-E Project ‘Passenger-Oriented Enhanced Metrics’ (POEM), is the {{passenger}} and traffic <b>data</b> <b>input</b> to model. This Deliverable details the results, to date, {{of an investigation}} of available data for the Project using data samples, and presents the specification of <b>data</b> <b>inputs</b> to the model. It also introduces different approaches to resolve the challenge to impute missing passenger data and distribute summarised passengers to individual flights...|$|R
5000|$|Like IEC 61131-3 {{function}} blocks, IEC 61499 {{function block}} types specify both an interface and an implementation. In contrast to IEC 61131-3, an IEC 61499 interface contains event {{inputs and outputs}} in addition to <b>data</b> <b>inputs</b> and outputs. Events {{can be associated with}} <b>data</b> <b>inputs</b> and outputs by WITH constraints. IEC 61499 defines several function block types, all of which can contain a behavior description in terms of service sequences: ...|$|R
40|$|Abstract. Graphical User Interfaces (GUIs) are {{composed}} of virtual objects, widgets, which respond to events triggered by user actions. Therefore, test inputs for GUIs are event sequences that mimic user interaction. The nature of these sequences and the values for certain widgets, such as textboxes, causes a two-dimensional combinatorial explosion. In this paper we present Barad, a GUI testing framework that uniformly addresses event-flow and data-flow in GUI applications generating tests {{in the form of}} event sequences and <b>data</b> <b>inputs.</b> Barad tackles the two-dimensional combinatorial explosion by pruning regions of the event and <b>data</b> <b>input</b> space. For event sequence generation we consider only events with registered event listeners, thus pruning regions of the event input space. We introduce symbolic widgets which allow us to obtain an executable symbolic version of the GUI. By symbolically executing the chain of listeners registered for the events in a generated event sequence we obtain <b>data</b> <b>inputs,</b> thus pruning regions in the <b>data</b> <b>input</b> space. Barad generates fewer tests and improves branch and statement coverage compared to traditional GUI testing techniques...|$|R
40|$|Improving cache {{performance}} requires understanding cache behavior. However, measuring cache {{performance for}} one or two <b>data</b> <b>input</b> sets provides little insight into how cache behavior varies across all <b>data</b> <b>input</b> sets and all cache configurations. This paper uses locality analysis to generate a parameterized model of program cache behavior. Given a cache size and associativity, this model predicts the miss rate for arbitrary <b>data</b> <b>input</b> set sizes. This model also identifies critical <b>data</b> <b>input</b> sizes where cache behavior exhibits marked changes. Experiments show this technique is within 2 percent of the hit rate for set associative caches on a set of floating-point and integer programs using array and pointer-based data structures. Building on the new model, this paper presents an interactive visualization tool that uses a three-dimensional plot to show miss rate changes across program data sizes and cache sizes and its use in evaluating compiler transformations. Other uses of this visualization tool include assisting machine and benchmark-set design. The tool can be accessed on the Web a...|$|R
40|$|Sensor network {{research}} {{is still in}} its infancy. Few real systems are deployed and little experimental data from sensor networks is available to test proposed protocol designs. Due to lack of experimental data and sophisticated models derived from such data, most data processing algorithms from the sensor network literature are evaluated with data generated from simple parametric models. We identify a few widely-studied classes of problems that are potentially sensitive to data input: Statistics estimation of the field data; Data compression; and Field estimation. We use them as examples to investigate the dependency of algorithm performance on data. For each class of problem, given the selected problem and algorithm instance, we systematically study how the algorithm performance varies across a range of <b>data</b> <b>input.</b> We also demonstrate how different <b>data</b> <b>input</b> can change the algorithm performance dramatically, the performance comparison between two algorithms may even change depending on the different <b>data</b> <b>inputs.</b> In the end, we propose our synthetic data generation framework and recommend evaluating algorithms across a wide range of <b>data</b> <b>input...</b>|$|R
50|$|Micromarketing or hyper-segmentation {{rely on the}} {{extensive}} information technology, big databases, computerized and flexible manufacturing systems, and integrated distribution systems. Data is captured from electronic communications devices, mapped and logged with a management information system. This enables the integration of observed behaviour (domains accessed) with motives (content involvement), geographics (IP addresses), demographics (self-reported registration details) and brand preferences (site-loyalty, site stickiness). Additional <b>data</b> <b>inputs</b> might include behavioural variables such as frequency (site visits), diversity including visitation across different landscapes and fluidity spanning multiple time periods. Programmed business intelligence software analyses this data and in the process, may also source <b>data</b> <b>inputs</b> from other internal information networks. Given this reliance on digital <b>data</b> <b>inputs,</b> some theorists have also used the term, cyber-segmentation to describe micromarketing.|$|R
5000|$|On {{receipt of}} data, data links {{evaluate}} their state, given the <b>data</b> <b>input</b> (simple <b>data</b> links), or pass the data value {{to a special}} data link that performs some transformation of <b>input</b> <b>data</b> (calculated data link).|$|R
40|$|From data perspective, GIS can be {{regarded}} as having four subsystems namely <b>data</b> <b>input,</b> <b>data</b> storage and management, data manipulation and analysis and data output. Focusing on <b>data</b> <b>input,</b> manual digitizing has become the commonest practice but there is no standard way of quantitatively estimating the consumed time. This paper reports the results of an experiment to relate digitizing time to the total polygon perimeter contained in a map. A linear model was proposed and a linear regression technique was applied to test the model and to investigate the extent of its validity...|$|R
