292|1653|Public
5|$|An {{embedded}} microprocessor {{governs the}} overall {{operation of the}} VFD controller. Basic programming of the microprocessor is provided as user-inaccessible firmware. User programming of display, variable, and <b>function</b> <b>block</b> parameters is provided to control, protect, and monitor the VFD, motor, and driven equipment.|$|E
25|$|Specific <b>function</b> <b>block</b> diagram are {{the classic}} Functional Flow Block Diagram, and the <b>Function</b> <b>Block</b> Diagram (FBD) {{used in the}} design of {{programmable}} logic controllers.|$|E
5000|$|Composite <b>function</b> <b>block</b> - CFB: Its {{functionality}} {{is defined}} by a <b>function</b> <b>block</b> network.|$|E
5000|$|... #Caption: GCN {{includes}} {{special purpose}} <b>function</b> <b>blocks</b> {{to be used}} by HSA. Support for these <b>function</b> <b>blocks</b> is available through [...] since Linux kernel 3.19.|$|R
5000|$|Central to the DCS {{model was}} the {{inclusion}} of control <b>function</b> <b>blocks.</b> <b>Function</b> <b>blocks</b> evolved from early, more primitive DDC concepts of [...] "Table Driven" [...] software. One of the first embodiments of object-oriented software, <b>function</b> <b>blocks</b> were self-contained [...] "blocks" [...] of code that emulated analog hardware control components and performed tasks that were essential to process control, such as execution of PID algorithms. <b>Function</b> <b>blocks</b> continue to endure as the predominant method of control for DCS suppliers, and are supported by key technologies such as Foundation Fieldbus today.|$|R
40|$|The {{objective}} of this Bachelor's thesis {{was to make a}} series of <b>function</b> <b>blocks</b> and <b>functions</b> which would establish a communication between the programmable logic controller (PLC) Siemens S 7 - 300 and the drive system Siemens Sinamics S 120 through Profinet or Profibus and datagrams. The <b>function</b> <b>blocks</b> adjust the datagram parameters through which we can control motors connected to a drive system. The functions were made for easy and fast control of the basic motor operations (startup, shutdown, etc.). The thesis includes a definition of a used software, hardware and the algorithms of the <b>function</b> <b>blocks</b> and <b>functions...</b>|$|R
50|$|Specific <b>function</b> <b>block</b> diagram are {{the classic}} Functional Flow Block Diagram, and the <b>Function</b> <b>Block</b> Diagram (FBD) {{used in the}} design of {{programmable}} logic controllers.|$|E
50|$|In the C {{programming}} language, {{an external}} variable is a variable defined outside any <b>function</b> <b>block.</b> On the other hand, a local (automatic) variable is a variable defined inside a <b>function</b> <b>block.</b>|$|E
5000|$|<b>Function</b> <b>block</b> diagrams, used in {{programmable}} logic controllers ...|$|E
5000|$|<b>Function</b> <b>blocks</b> (FB) - contain {{frequently}} occurring {{and particularly}} complex program parts ...|$|R
40|$|International audienceAfter having sketched the {{different}} techniques enabling to check properties of Discrete Event Systems control software, we present {{in this article}} a formal method for IEC 61499 <b>function</b> <b>blocks</b> diagrams verification. This method {{is based on a}} formal representation of the behaviour of <b>function</b> <b>blocks</b> diagrams and takes benefit of verification tools developed from the SIGNAL synchronous language...|$|R
5000|$|Demonstration of HSE and Flexible <b>Function</b> <b>Blocks</b> (FFBs) at ISP Lima, May 2005 ...|$|R
5000|$|FBD - <b>Function</b> <b>Block</b> Diagrams (a {{programming}} {{language in the}} IEC 61131 standard) ...|$|E
5000|$|FBD (<b>function</b> <b>block</b> diagram) {{enables the}} user to rapidly program both Boolean and {{analogue}} expressions ...|$|E
5000|$|<b>Function</b> <b>Block</b> Diagram (FBD) - Graphical {{representation}} of the automation task with symbols to DIN 40700/ DIN 40719.|$|E
40|$|Abstract [...] After having sketched the {{different}} techniques enabling to check properties of Discrete Event Systems control software, we present {{in this article}} a formal method for IEC 61499 <b>function</b> <b>blocks</b> diagrams verification. This method {{is based on a}} formal representation of the behaviour of <b>function</b> <b>blocks</b> diagrams and takes benefit of verification tools developed from the SIGNAL synchronous language...|$|R
40|$|Distributed {{measurement}} and control systems have begun to be accepted in manufacturing automation systems. Software modules called <b>function</b> <b>blocks</b> are applied to lessen the complexity and high engineering cost of a distributed system. The IEC 61499 is a new international standard introduced {{for the application of}} <b>function</b> <b>blocks</b> in distributed control environment. It aims to standardize the design and application of IE...|$|R
40|$|Colloque sans acte à {{diffusion}} restreinte. nationale. National audienceFor {{developing an}} efficient and dependable control system, {{it is necessary}} to construct a model, which can fully describe its control structure, function and behaviour. To ensure interoperability between components, <b>function</b> <b>blocks</b> should be used. Nevertheless, the behaviour is not enough precise for validating temporal interoperability. We propose to add to <b>function</b> <b>blocks</b> a behaviour model. It provides a runtime machine allowing simulation...|$|R
5000|$|Like IEC 61131-3 {{function}} blocks, IEC 61499 <b>function</b> <b>block</b> types specify both an interface and an implementation. In {{contrast to}} IEC 61131-3, an IEC 61499 interface contains event {{inputs and outputs}} in addition to data inputs and outputs. Events {{can be associated with}} data inputs and outputs by WITH constraints. IEC 61499 defines several <b>function</b> <b>block</b> types, all of which can contain a behavior description in terms of service sequences: ...|$|E
5000|$|Subapplication: Its {{functionality}} is also {{defined as}} a <b>function</b> <b>block</b> network. In contrast to CFBs, subapplications can be distributed.|$|E
5000|$|Service {{interface}} <b>function</b> <b>block</b> - SIFB: The {{source code}} is hidden and its functionality is only described by service sequences.|$|E
40|$|Abstract- In {{this paper}} {{we present a}} static {{performance}} estimation technique of on-chip bus architectures. The proposed technique requires the static scheduling of <b>function</b> <b>blocks</b> of a task to analyze bus conflicts caused by simultaneous accesses from processing elements to which the <b>function</b> <b>blocks</b> are mapped. To apply it to multi-task applications, the concurrent execution of <b>function</b> <b>blocks</b> of different tasks also should be considered. Since tasks are scheduled independently, considering all cases of concurrency in each processing element is impractical. Therefore we make an average estimate {{on the effect of}} other tasks with respect to a bus request rate and bus access time. The proposed technique was incorporated with our exploration framework for onchip bus architectures. Its viability and efficiency are validated by a real-life example...|$|R
40|$|The Foundation Fieldbus {{specification}} is {{a technology}} that allows to construct control strategies in terms of blocks diagrams, distributed among the field devices on the network. First, the control engineer defines the control strategy to be used and then it is done the allocation (in the different field devices on the network) of the <b>function</b> <b>blocks</b> used in the defined strategy. After these allocation {{it is necessary to}} do the scheduling of the <b>function</b> <b>blocks</b> to guarantee a correct order of execution and communication. This paper aims at evaluating the application of three metaheuristic methods for the resolution of the allocation and scheduling of <b>function</b> <b>blocks</b> problem in fieldbuses that follow the Foundation Fieldbus specification. The used methods are the Multi-Start, the Simulated Annealing and the Tabu Search. 1...|$|R
40|$|Abstract—In {{this paper}} {{we present a}} static {{performance}} estimation technique of on-chip bus architectures. The proposed technique requires the static scheduling of <b>function</b> <b>blocks</b> of a task to analyze bus conflicts caused by simultaneous accesses from processing elements to which <b>function</b> <b>blocks</b> are mapped. To apply it to multitask applications, the concurrent execution of the <b>function</b> <b>blocks</b> of different tasks also should be considered. Since tasks are scheduled independently, considering all cases of concurrency in each processing element is impractical. Therefore we make an average estimate {{on the effects of}} other tasks with respect to bus request rate and bus access time. The proposed technique was incorporated with our exploration framework for on-chip bus architectures. Its viability and efficiency are validated by a preliminary example. Index Terms—Performance estimation, multitask application, on-chip bus, design space exploration, queuing theory I...|$|R
5000|$|Trinity Integrated Systems Ltd of Sale, Cheshire 100% {{migration}} of legacy safety PLC ladder logic to industry standard IEC-61131 <b>function</b> <b>block</b> code ...|$|E
50|$|In LAD and FBD complex {{functions}} and <b>function</b> <b>block</b> calls can be entered via function keys. They are {{displayed on the}} screen as graphical symbols.|$|E
50|$|Among other examples, IEC 61499-3 {{described}} {{the use of}} SIFBs as communication function blocks for remote access to real-time data and parameters of function blocks; the use of adapter interfaces to implement object oriented concepts; initialization algorithms in <b>function</b> <b>block</b> networks; and the implementation of ECCs for a simplified motor control of hypothetical VCRs.Additionally the impacts of the mapping concerning the communication function blocks was explained, {{as well as the}} device management by management applications and its function blocks, and the principle of the device manager <b>function</b> <b>block</b> (DEV_MGR).|$|E
50|$|A flicker meter is {{composed}} of several <b>function</b> <b>blocks</b> which simulate a 230 V/60 W incandescent lamp (reference lamp) and the human perception system (eye-brain model).|$|R
40|$|Standards are, nowadays, {{a useful}} and {{sometimes}} essential tool, {{in the world}} of automated industry. Since the development of the standard IEC 61131 - 3, automation has made progresses in a consistent manner. This allows an engineer to develop control programs for any type of systems using the language set in the standard. However, this standard was not enough because it did not cover the control over distributed systems. Therefore, it was necessary to establish rules in this field. In order to fill this gap, the new standard IEC 61499 was developed. Its main objective is to describe how to develop, design and implement distributed control systems, using the new concept of <b>function</b> <b>blocks.</b> By the use of the new <b>function</b> <b>blocks,</b> it is possible to control distributed systems in a quick and easy way, adding some advantages such as reusability, portability, and much enhanced maintenance. This project involves the preparation of a manufacturing cell composed of a gantry robot interacting with a CNC machine. The project is developed in two sections; one is focused on the computer programming with <b>function</b> <b>blocks</b> for the gantry robot and HMI, and the other is prepared for the programming of <b>function</b> <b>blocks</b> for the CNC machine and HMI. The communications between PLC, PC, gantry robot and CNC machine are developed using the standard IEC 61499. This document covers the survey and research made for the first section of the project. The new standard IEC 61499 provides the methodologies and the appropriated tools to achieve a good control in distributed systems. The basic tools offered by this standard are the new <b>function</b> <b>blocks</b> which will be the main tool used in this project. Equally important, it is necessary {{to take into account the}} different assembly features and the machining features in order to design better <b>function</b> <b>blocks</b> to control the system. An HMI has to be developed in order to obtain a good interface for a worker of this cell. The aim of this project is to investigate how the new standard IEC 61499 works in a real manufacturing cell and how the new <b>function</b> <b>blocks</b> interact in a real distributed system. Moreover, it is important to see how the event flow works, controlling all the sequences required in the manufacturing cell...|$|R
40|$|A {{new concept}} for {{distributed}} control systems based on the new IEC 61499 standard is tested in this work in cooperation with LAE Engineering GmbH, a medium-sized company. Based on a catalogue of requirements, a customer-related testbed is developed. In the following this testbed {{is used as a}} reference to realise an IEC 61499 compliant-distributed control system based on PC technics. By doing this, rules are defined to convert user-owned IEC 61131 <b>function</b> <b>blocks</b> to IEC 61499 compliant <b>function</b> <b>blocks.</b> Concluding, some trends for IEC 61499 -based {{distributed control systems}} will be summarised...|$|R
5000|$|Adapter {{interface}}s: An {{adapter interface}} {{is not a}} real <b>function</b> <b>block.</b> It combines several events and data connections within one connection and provides an interface concept to separate specification and implementation.|$|E
50|$|Chivilikhin D., Shalyto A., Patil S., Vyatkin V. Reconstruction of <b>Function</b> <b>Block</b> Logic using Metaheuristic Algorithm: Initial Explorations / Proceedings of the 13th IEEE International Conference on Industrial Informatics (INDIN'15). 2015, pp. 1239-1242.|$|E
50|$|Chivilikhin D., Ivanov I., Shalyto A., Vyatkin V. Reconstruction of <b>Function</b> <b>Block</b> Controllers Based on Test Scenarios and Verification / Proceedings of the 14th IEEE International Conference on Industrial Informatics (INDIN'16). 2016, pp. 646-651.|$|E
40|$|Dynamic {{models for}} the various {{functional}} elements of the 70 m antenna axis servos are described. The model representing the digital position controller, the linear and nonlinear properties of the physical hardware, and {{the dynamics of the}} flexible antenna structure are encoded in six major <b>function</b> <b>blocks.</b> The general modular structure of the <b>function</b> <b>blocks</b> facilitates their adaptation to a variety of dynamic simulation studies. Model parameter values were calculated from component specifications and design data. A simulation using the models to predict limit cycle behavior produced results in excellent agreement with field test data from the DSS 14 70 -m antenna...|$|R
40|$|This article {{presents}} a verification {{based on a}} specific Boolean algebra, called, and symbolic reasoning on equations defined in this algebra. The formal definition of this algebra enables to model binary signals that include variables states, events, {{as well as physical}} delays between events. The behavior of the generic <b>function</b> <b>blocks</b> of the IEC 61131 standard as well as of PLC programs using these <b>function</b> <b>blocks</b> can be described in this algebra. Properties proof on PLC programs is performed by demonstrating, from the program, the formulas that express in the algebra the properties to be proved. 1...|$|R
40|$|With the {{changing}} and increasingly more demanding global markets, also Computer Aided Process Planning (CAPP) gets challenged. Industry is expecting more adaptive, dynamic, intelligent CAPP systems {{to deal with}} the uncertainty and the increasing complexity of machining processes. Generally, high intelligence and automation are the tendency of industry. Conventional CAPP systems as well as off-line optimisation have been very well investigated over many years. However, well-optimised solutions developed for static environments still often need manual manipulation when dealing with uncertainty and dynamics. As one of the emerging software technologies, <b>Function</b> <b>Blocks</b> have been introduced to deal with uncertainty in CAPP and manufacturing. The underlying hypothesis of this research is that <b>Function</b> <b>Blocks</b> delivered through the Cloud and deployed into a milling machine controller can provide real-time monitoring, optimisation and control. In this study, a real-time <b>Function</b> <b>Blocks</b> based tool path optimisation for face milling system is proposed. The system can optimise feed rate and cutting speed to create stable cutting conditions in real-time based on measured dynamically fluctuating cutting forces...|$|R
