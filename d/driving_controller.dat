15|50|Public
5000|$|Expansion Module #2 is a <b>driving</b> <b>controller</b> (steering wheel / gas pedal) {{that came}} {{packaged}} with a port of the arcade game Turbo. The gas pedal {{is merely a}} simple on/off switch, so many gamers used the second ColecoVision controller as a gear shift for more precise speed control. Although Coleco called the <b>driving</b> <b>controller</b> an expansion module, it actually plugs into the controller port, not the Expansion Module Interface. The <b>driving</b> <b>controller</b> is also compatible with the games Destructor, Bump 'n' Jump, Pitstop, and The Dukes of Hazzard.|$|E
5000|$|... #Caption: A <b>driving</b> <b>controller</b> for the Atari 2600, {{similar in}} {{appearance}} to the Atari 2600 paddles.|$|E
5000|$|The Atari CX20-01 [...] "driving controller" [...] appears {{similar in}} design to the paddle, {{but there is}} only one per DE-9 port rather than two paddles per port. The key {{difference}} in function between the paddle and <b>driving</b> <b>controller</b> is that the paddle's wheel had a finite amount it would turn before hitting a stop, while the driving controller's wheel could rotate continuously. This is essential for overhead-view driving games, for which the player would turn the wheel a total of 360 degrees in one direction on every lap. The <b>driving</b> <b>controller</b> is used for games such as Indy 500.|$|E
50|$|On the Atari 2600, {{the paddle}} {{controllers}} look {{very similar to}} the <b>driving</b> <b>controllers.</b> The <b>driving</b> <b>controllers</b> emulated the steering wheel controls found in contemporary games, where one spun the wheel to cause the car to turn one direction or the other, and stopped the spinning to drive straight. The <b>driving</b> <b>controllers</b> for Atari consoles operated in the same way, although they did not have a wheel, the controller was reduced to a single large knob identical to the one on the paddles.|$|R
5000|$|In {{comparison}} to the <b>driving</b> <b>controllers,</b> paddle controllers rotate just under one full rotation before hitting a hard stop. They also come in pairs that plug into a single port, whereas the <b>driving</b> <b>controllers</b> were one to a port. Finally, they {{have a picture of}} a tennis racquet and the word [...] "paddle" [...] on it, as opposed to a racing car and the word [...] "driving". Because two controllers connect to each port and the 2600 has two controller ports, four players simultaneously can play in games that support it. The Atari paddles are also compatible with the Atari 800 home computer, with its four-game controller ports. This would allow eight paddles in simultaneous play. Super Breakout is one example that supported up to 8 players.|$|R
50|$|Indy 500 {{was one of}} {{the nine}} launch titles offered when the Atari 2600 went on sale in September 1977. Sears Tele-Games later re-released it as Race; no changes were made to the gameplay. Included with each game was a set of two <b>driving</b> <b>controllers,</b> which were {{identical}} in appearance to the 2600 paddle controller but could rotate indefinitely in either direction, among other differences.|$|R
5000|$|Atari {{also offered}} driving {{controllers}} {{for use with}} games like Indy 500, which requires wheels that can spin around continuously in one direction. Driving controllers {{have a picture of}} a car and the word [...] "driving" [...] on it and a single controller attaches to each controller port. The <b>driving</b> <b>controller</b> is not compatible with paddle games. Like a mechanical computer mouse, the <b>driving</b> <b>controller</b> is a quadrature encoder-based device and thus only sensed relative position, not absolute position. This controller is functionally identical to the spin-dial controller used in Atari's Tempest arcade game. Since only one controller attaches to each port, only two people can play driving games simultaneously.|$|E
50|$|The {{most common}} {{criticism}} with the Jaguar version of Tempest 2000 {{was the lack}} of a rotary controller similar to the controller on the Tempest arcade machine. In fact, the game was programmed with an option to use just such a controller, despite the fact that Atari never released one. Such a controller was planned for development and release by Atari, but no prototypes exist. However, several homebrew options exist by using parts from a Jaguar controller and either an Atari 2600 <b>Driving</b> <b>Controller</b> or new, higher-precision rotary encoders. The one used by Jeff Minter during testing was made from a hacked-up 2600 <b>driving</b> <b>controller.</b>|$|E
50|$|The console {{features}} two standard Atari 9-pin controller posts on {{its right}} side, allowing {{for use of}} other 2600 compatible controllers such as Atari-made and third-party joysticks, as well as Atari's own <b>Driving</b> <b>Controller,</b> Paddles, Kid's Controller, Keypad Controller, and Trak-Ball. The top surface features a 2600 style cartridge slot and touch-sensitive buttons with associated red LEDs, including buttons for functions {{directly related to the}} wireless controllers, such as selecting between the wireless controllers and any plugged in, and for switching the function of the wireless controllers between joystick and paddle mode.|$|E
3000|$|Models of driver {{actions on}} vehicle {{controlling}} devices (brake and throttle pedals, steering wheel) for authentic simulation of vehicle maneuvers on <b>driving</b> simulators; <b>controllers</b> of pedal and steering wheel robots [19 – 22], [...]...|$|R
5000|$|The main brain <b>driving</b> this <b>controller</b> is the AMD 'AM2910' (a {{high-performance}} 8-bit slice microprogram sequencer)The SASI interface {{was invented}} by Shugart that became SEAGATE. SASI eventually became standardized and is known today as SCSI.|$|R
50|$|Stella emulates most Atari 2600 {{peripheral}} devices, including standard joysticks, paddle controllers, the Atari Video Touch Pad, the Atari Keyboard Controller, Atari Indy 500 Driving Controllers, the CBS Booster-Grip controller, the CX-22/CX-80/AmigaMouse trackball controllers, the Sega Genesis controller, and the AtariVox and SaveKey controllers. Stelladaptor and 2600-daptor support allows real joysticks, paddles, and <b>driving</b> <b>controllers</b> to be used, {{and support}} is also included to access a real AtariVox device plugged into a serial port (and actually generate {{sound from the}} AtariVox device). Stella does not yet support the cassette-based titles designed {{to work with the}} Coleco KidVid cassette player but does have support for titles designed to work with the Starpath Supercharger and Spectravideo Compumate.|$|R
5000|$|It {{was then}} ported to Nintendo 64 and {{released}} as Densha de Go! 64 in Japan in 1999. Densha de Go! 64 requires its uniquely bundled train <b>driving</b> <b>controller</b> for Nintendo 64, which simulates actual train controls. It {{is one of}} two games that utilize Nintendo 64's [...] "Voice Recognition Unit" [...] or [...] "VRS" [...] as it is known in Japan. Like Hey You, Pikachu!, it is packaged with or without a microphone (called the Engineer's Pak), which is used to announce train stations to passengers. It is part of the Taito Densha de Go! series.|$|E
5000|$|A paddle is a {{controller}} {{that features}} a round wheel and one or more fire buttons. The wheel is typically used to control movement of the player or of an object along one axis of the video screen. Paddle controllers were the first analog controllers and they lost popularity when [...] "paddle and ball" [...] type games fell out of favor. A variation, the Atari <b>driving</b> <b>controller,</b> appeared on the Atari 2600. Designed specifically for the game Indy 500, it functioned almost identically in operation and design to the regular paddle controller. The exceptions were that its wheel can be continuously rotated in either direction, and it was missing the extra paddle included on the previous model. Unlike a spinner, friction prevented the wheel from gaining momentum.|$|E
5000|$|The Atari {{originally}} shipped {{with two}} types of controllers, a joystick {{as well as a}} pair of paddle controllers. Later, new controllers were added to the game system including a <b>driving</b> <b>controller,</b> a trak-ball controller, and finally keypad controllers. Additionally, the 2600 supports several types of input devices as well as third-party peripherals. Because the Atari joystick port and CX40 joystick became industry standards, many peripherals are interchangeable with the MSX and other Japanese systems, the Commodore 64, Commodore 128, Amiga, Sega Master System, and Mega Drive/Genesis, though functionality may be somewhat limited. Also, although Master System and Mega Drive/Genesis controllers work on the Atari 2600, only the [...] "B" [...] button can be used in most games. Another adapter is the Starpath Supercharger, an add-on created by Starpath to expand the game capabilities of the Atari 2600. The Supercharger's interface adds an extra 6 kB to the Atari 2600's 128 bytes of RAM, allowing for larger games with higher-resolution graphics. A cord coming {{out of the side of}} the cartridge plugs into the earphone jack of any standard cassette player. Games for the Supercharger are stored on standard audio cassettes.|$|E
50|$|The {{initial release}} {{did not include}} force-feedback support, which is {{considered}} by many to be an important feature for simulation racing games used with <b>driving</b> wheel <b>controllers.</b> A subsequent update in early 2008 added force feedback. The game also lacks support for 1080i or 1080p output resolutions. Per the calendar, the Belgian Grand Prix is not included.|$|R
40|$|An evolved {{neural network}} {{controller}} {{is presented to}} solve the optimal control problem for energy optimal <b>driving.</b> A <b>controller</b> is produced which computes equivalent control commands to traditional graph searching approaches, while able to adapt to varied constraints and conditions. Furthermore, after training, trivial amounts of computation time and memory are required, making the approach applicable for embedded systems and path planning applications...|$|R
50|$|Like other {{embedded}} IP cores for 3D rendering acceleration, the Mali GPU {{does not}} include display <b>controllers</b> <b>driving</b> monitors (such as the combination often found in common video cards). Instead the Mali ARM core is a pure 3D engine that renders graphics into memory and hands the rendered image over to another core that handles the display.|$|R
40|$|The {{trajectory}} {{control of}} autonomous vehicles {{is an area}} which has attracted much research recently because it can prevent accidents caused by driver errors and significantly improve road capacity. Overtaking {{is one of the}} most complex and challenging manoeuvres for road vehicles and the autonomous control of the vehicle during this manoeuvre can greatly improve vehicle safety. As the innovative four-wheel independent steering (4 WIS) and four-wheel independent driving (4 WID) electric vehicle can provide redundant control actuators, this study focuses on utilising 4 WIS- 4 WID techniques and vehicle dynamics control to achieve better control of autonomous vehicles. This study first introduces the traditional two-wheel proportional integral derivative (PID) steering control and two-wheel sliding mode controller (SMC) driving control for autonomous vehicle control. Then based on these, the four-wheel PID steering controller and four-wheel SMC steering controller are proposed. A four-wheel SMC <b>driving</b> <b>controller</b> and a four-wheel combined yaw rate and longitudinal velocity SMC <b>driving</b> <b>controller</b> are also proposed. Simulation results prove that the best control performance can be achieved when the four-wheel SMC steering controller and four-wheel combined yaw rate and longitudinal velocity SMC <b>driving</b> <b>controller</b> are used together...|$|E
40|$|Purpose: The present paper {{focuses on}} the review of concepts, {{theories}} and empirical underpinnings of human factor in Air traffic control through literature studies primarily {{in the light of}} mental work load. This paper reviews what is currently known about workload, particularly from the field of ATC. One of the few areas of almost universal agreement in the literature on ATC complexity is that complexity {{plays a major role in}} <b>driving</b> <b>controller</b> workload. Design/methodology/approach: Workload in ATC is generally mental, as opposed to physical, in nature. The paper will therefore briefly review what is known about mental workload. Findings: The findings of the paper implicitly point out that workload factor include mental work load, ATC Task Load Factors and ATC Operator Factors. Workload in ATC is generally mental, as opposed to physical, in nature. Task load i. e., the demand imposed by the ATC task itself is generally distinguished from workload i. e., the controller’s subjective experience of that demand The link between ATC task load and workload is a causative (albeit indirect) one, that is influenced by a number of internal factors. Originality/value: Based on literature review of 25 empirical articles, the paper makes Managerial implications that the workload factor include mental work load, ATC Task Load Factors and ATC Operator Factors. All researchers are sanguine that the relationship between task load and perceived workload can ever be adequately expressed...|$|E
40|$|The {{purpose of}} this study was to {{determine}} the effect of different vehicle controllers on driver performance in a simulated tank driving task. Eight male civilian volunteers with normal visual acuity drove a simulated tank on a digitized road terrain. The subject monitored his speed by means of a speedometer shown on the monitor. Independent variables were <b>driving</b> <b>controller</b> (joystick, or steering wheel with attached brake and accelerator pedal), and assigned driving speed of 15 or 45 mph (the maximum speed at which the subject was permitted to travel). Dependent variables were mean driving speed (the average speed at which the subject actually drove), and the proportion of time the center of the vehicle remained on the road during travel. Results indicated that subjects using the steering wheel obtained a significantly greater mean driving speed than those using the joystick only when they were permitted to drive a maximum speed of 45 mph. This difference may have little practical significance because the mean driving speed for the two controllers differed by less than 5 mph. There was no significant difference between controllers for the proportion of time the driver was able to keep the center of the vehicle on the road. Results implied that joystick controls have potential as an alternative control technology, and that the ergonomic placement of the joystick could be an important factor in enhancing driver performance...|$|E
40|$|Copyright © 2007 SAE International This paper {{presents}} the experimental verification {{of a new}} type of fuel-air ratio controller for spark ignition (SI) engines. The controller does not require any initial calibration before its first use on a new engine beyond some very general information which is used to generate an initial fuel map. The controller then continually updates this nonlinear fuel map in response to changes in the engine or fuel while <b>driving.</b> The <b>controller</b> was implemented on a 2003 Vortec 6 L V 8 engine in a General Motors 2500 HD truck with an OEM (original equipment manufacturer) natural gas conversion. Preliminary results indicate the controller behaves in a manner comparable to OEM controllers in terms of drivability and exhaust emissions, at potentially a much lower development cost...|$|R
40|$|This paper {{presents}} a new method {{to design a}} restricted structure <b>controller</b> <b>driving</b> a multivariable plant using subspace identification methods. The algorithm employs data collected from closed-loop operation to identify an open-loop model of the plant using subspace identification. The method also requires knowledge of the first N impulse responses from the controller. The multivariable controller parameters are calculated by minimising a finite horizon LQG criterion subject to nonlinear constraints. Three simulation case studies are presented...|$|R
40|$|This paper {{presents}} {{the frequency and}} driving voltage control based on PID controller for wireless power transmission system to restrain the influence of external disturbance {{and the movement of}} receiver coil. The phase difference of the voltage and current of the resonant tank is used by the frequency controller to control the frequency of DDS signal source to match the resonant frequency. The received voltage is detected wirelessly by the <b>driving</b> voltage <b>controller</b> to control the output voltage of switching power source to match the power need of the receiver. The experiment platform was built to verify the performance of the controllers. The results show that both controllers could operate normally to improve the stability and safety of the WPT system. International Informatization and Engineering Associations; Aljabal Algharby University; Azad University of Quchan; National Institute of Technology Rourkela; University Polytechnic of Buchares...|$|R
40|$|There {{are several}} {{benefits}} for bringing automated vehicles to the road: Possible reduction of traffic accidents, improvement of work life balance and social inclusion of aged or disabled persons, {{to name just}} a few. A significant challenge is the validation and verification of automated driving. Classical offline verification approaches require enumeration and discretization of all relevant state variables in all possible driving situations, which results in a state space explosion. A promising approach is the use of online verification techniques pursued in UnCoVerCPS. The methods developed in UnCoVerCPS are generally applicable to many safety critical, cyber physical systems. As a specific use case, we investigate a system which facilitates safe interactions of automated vehicles, leveraging a formal proof on a validated model. By exchanging and negotiating verified maneuver plans, the freedom of collisions and safe operation in general can be guaranteed for the situation at hand. 	 The system design is tailored to make the complete system amenable to verification. An overview is given in fig. 1 : The system is decomposed into three layers (green boxes), where each is fulfilling a contract, which guarantees correct operation under specific types of uncertainties. The combination of the three layers enables safe operation under disturbances, input- and parameter uncertainties, non-determinisms of the communication channel as well as nondeterminism of the decisions of cooperation partners. 	 On the lowest layer is the physical vehicle, modeled as a set of nonlinear differential equations with bounded uncertain parameters and disturbances. The second layer is realized by a classical discrete time trajectory tracking controller “TTC”, which stabilizes the vehicle around a given set trajectory, while operating on noisy measurement data. Vehicle model and trajectory tracking controller are considered as a closed loop system by an offline analysis shown at the bottom of fig. 1 (steps 1. Modeling – 6. Verification), which computes bounds on state evolution of the physical system (rather than the model), for a finite set of atomic actions (maneuver database – “MDB”). During online execution, several maneuver planners “MP” assemble the guarantees of the pre-verified atomic actions and use conservative bounds on the environment perception to generate provably safe maneuvers. A timed-automaton (cooperative <b>driving</b> <b>controller</b> – “CDC”) controls negotiation of safe, cooperative maneuvers with other vehicles. It guarantees safe operation even under the assumption of message loss and delays, as well as non-deterministic planning times. This is achieved by prudent switching between cooperative, individual and failsafe maneuvers. 	 In this paper we give an overview of the offline design process, which, besides classical development steps, involves (fig. 1, step 4.) sampling possible vehicle actions, (5.) generating a reliable model by testing conformance between the actual physical system and a model with bounded uncertainties and (6.) verifying time in-variant constraints and admissible execution orders of the vehicle actions. Furthermore we focus on the online execution, where maneuver planners and the cooperative <b>driving</b> <b>controller</b> guarantee compliance to time varying constraints. Where “monolithic” verification schemes are hampered by the curse of dimensionality, our modular and layered approach of verifying lower-level, closed-loop subsystems offline and higher-level decision modules online provides formal safety guarantees for the overall system in a feasible manner...|$|E
40|$|In {{near future}} Autonomous driving will affect {{every aspect of}} {{transportation}} and offer a significant boost in mobility for everyone. Autonomous driving techniques and modules must be chosen according to the task the platform is developed for. Slow speed driving on campus or highway driving in poor weather conditions, may require different sets of sensors, vehicle models {{and as a result}} different software architecture. Some of the main modules that an autonomous driving system needs are the vehicle state estimator and vehicle controller. The development of these two modules relies heavily on the robustness of the vehicle model chosen and the task at hand. University of Waterloo decided to join the Autonomous Driving research by partici- pating in the project, which required development and implementation of the autonomous driving demo sequence for Consumer Electronics Show in 2017. Since the demo sequence was to be performed at slow speeds and, because certain vehicle parameters were not available at the time, a kinematic vehicle model was used in implementation of the core autonomous driving modules: state estimation and control. These modules are imple- mented on a full scale autonomous driving platform and were designed based on the needs and requirements of the demo sequence. The implementation results show that the cho- sen vehicle model enables the state estimator to fuse incoming sensor data and allows the controller to track the desired path and velocity profile. For further deployment of the autonomous driving platform for research in urban and highway driving an aggressive driving framework was proposed that is based on dynamic vehicle model and incorporates the tire forces in the generation of the speed profile and keeps the vehicle at the limits of adhesion. The aggressive <b>driving</b> <b>controller</b> can be utilized for emergency evasive maneuvers at low road friction conditions. The controller was tested on a high fidelity simulation software for a double lane change emergency maneuver. The results showed that the aggressive driving framework proposed can be successfully incor- porated into the autonomous driving architecture and can perform position and velocity tracking at maximum possible speed...|$|E
40|$|In recent years, {{extensive}} {{research has been}} carried out on autonomous vehicle system. A completely autonomous vehicle is one in which a computer performs all the tasks that the human driver normally would. However, this study only focuses on driving control system that based on vision sensor. Therefore, this study presents a simulation system with Graphical User Interface (GUI) to simulate and analyse the driving control for autonomous vehicle that based on video taken from the vehicle during driving on highway, by using MATLAB programming. The GUI gives easy access to analyse video, image and vehicle dynamics. Once the GUI application for simulation is launched, user can enter input parameters value (number of frames, canny edge detection value, vehicle speed, and braking time) in text control to simulate and analyse video images and vehicle driving control. In this study, there are four subsystems in the system development process. The first subsystem is sensor. This study was used a single GrandVision Mini Digital Video as sensor. This video camera provides the information of Selangor's highway environment by recording highway scene in front of the vehicle during driving. Then, the recorded video is process in second subsystem or named as imageprocessing subsystem. In this subsystem, image-capturing techniques capture the video images frame by frame. After that, lane detection process extracts the information about vehicle position with respect to the highway lane. The results are angle between the road tangent and orientation of the vehicle at some look-ahead distance. <b>Driving</b> <b>controller</b> in the controller subsystem that is the third subsystem used the resulted angle from lane detection process along with vehicle dynamics parameters to determine the vehicle-driving angle and vehicle dynamics performance. In this study, designing a vehicle controller requires a model of vehicle's behaviour whether dynamics or kinematics. Therefore, in vehicle subsystem that is the fourth subsystem, this study used vehicle's dynamics behaviour as the vehicle model. The model has six degrees of freedom (DOF) and several factors such as the vehicle weight, centre of gravity, and cornering stiffness were taken into account of dynamics modelling. The important contribution of this study is the development of vehicle lane detection and tracking algorithm based on colour cue segmentation, Canny edge detection and Hough transform. The algorithm gave good result in detecting straight and smooth curvature lane on highway even when the lane was affected by shadow. In this study, all the methods have been tested on video data and the experimental results have demonstrated a fast and robust system...|$|E
40|$|This paper {{describes}} the implementation and the validation of a digital <b>controller</b> <b>driving</b> a fourbar mechanism with high alternate motion masses. The control uses a mixed explorative and predictive technique based on off-line model of weight, inertia and friction. Particular care {{has been devoted}} to adjust an hybrid (analogdigital) system for the feedback signal acquiring. The control proved to satisfactorly be used to obtain electrical cams up to 250 rpm average speed with sharp acceleration diagrams. The responsiveness of the control permitted to appreciate advantages of motion law harmonic content reduction...|$|R
40|$|The article {{presents}} a single degree-of-freedom (DOF) Stephenson III mechanical {{reproduction of the}} shape and movement of the human leg. Type and motion synthesis of the mechanism are achieved through qualitative and interactive design heuristics. Qualitative considerations include the slim straight shape of the human leg to help keeping the center of mass of the body far from ground. Moreover, the <b>driving</b> force and <b>controllers</b> of the walking apparatus are located within {{the upper part of}} the leg. We utilize Working Model software package to test and tune the segments of the mechanism to arrive at the desired walking gait. The resulting mechanism is a reproduction of the human walking apparatus with minimum control...|$|R
40|$|QPA-CLIPS is an {{extension}} of CLIPS oriented towards process control applications. Its constructs define a dependency network of process actions driven by sensor information. The language consists of three basic constructs: TASK, SENSOR, and FILTER. TASK's define the dependency network describing alternative state transitions for a process. SENSOR's and FILTER's define sensor information sources used to activate state transitions within the network. Deftemplate's define these constructs and their run-time environment is an interpreter knowledge base, performing pattern matching on sensor information and so activating TASK's in the dependency network. The pattern matching technique is based on the repeatable occurrence of a sensor data pattern. QPA-CIPS has been successfully tested on a SPARCStation providing supervisory control to an Allen-Bradley PLC 5 <b>controller</b> <b>driving</b> molding equipment...|$|R
40|$|A {{methodology}} for modifying VHDL descriptions {{is the core}} of this paper Modifications are performed on general RTL descriptions composed of a mix of control and computation, that is, the typical type of description used for designing at the RT level. Such VHDL descriptions are automatically partitioned into a reference model composed of a <b>controller</b> <b>driving</b> a data-path. We call this transformation "VHDL restructuring". A set of restructuring steps is presented aiming at partitioning any VHDL description while guaranteeing the semantic equivalence of the restructured description with the original one. The,nain,motivation to restructuring is the identification and separation of the two parts (FSM+data-path) which can thus be analyzed by using "adhoc" synthesis, testability and design for testability algorithms. Promising results show that restructuring can sensibly impact on synthesis and testability...|$|R
50|$|In 1981 Tyco Toys {{began selling}} HO scale, or 1/87 scale slot trucks. Similar to HO Scale racing sets, it had two lane track with various lengths and shapes available, and, unlike its racing counterparts, the {{vehicles}} traveled {{in the normal}} fashion employed on American roads. As to suit the <b>driving</b> style, the <b>controllers</b> were not hand-held, but were intended to resemble the dashboard of a truck, with a steering wheel (to control the speed) and a shifter mounted to the side (to control the direction). Some trucks pulled trailers, some (like the dump truck) did not. The line was unique because {{of the ability to}} pick up and deliver the loads, doing so with help from various accessories including a pipe loader, and a gravel loader, all without intervention from the operator.|$|R
40|$|In this work, I {{consider}} {{the development of}} a driver model to better understand human drivers? various behaviors in the upcoming mixed situation of human drivers and autonomous vehicles. For this, my current effort focuses on modeling the driver?s decisions and corresponding driving behaviors. First, I study an individual driver?s reasoning process through game theoretic investigation. The driver decision model is modeled as the Stackelberg game, which is based on the backward information propagation. In the driver decision model, I focus on the drivers? insensible desires and corresponding unwanted traffic situations. With the comparison of the model and the field data, it is shown that the model reproduces the relationship between the driver?s inattentiveness and collisions in the real world. Next, the driving behavior control is presented. I propose a human-like predictive perception model of potential collision with an adjacent vehicle. The model is based on hybrid systematic approach. In turn, with the predictive perceptions, a <b>driving</b> safety <b>controller</b> is designed based on model predictive control. The model shows adequate predictive responses against the other vehicles with respect to the driver?s rationality. In sum, I present a driver model that corresponds to and predicts traffic situations according to a human driver?s irrationality factor. This model shows a meaningful similarity to the real-world crashes and predictive behaviors according to the driver?s irrationality...|$|R
40|$|A plug-in hybrid {{electric}} vehicle(PHEV) is {{a promising}} way of achieving {{the benefits of}} the electric vehicle without being limited by the electric range. This paper develops an adaptive control strategy based on a map-based ECMS approach. The control is developed andimplemented in a simulator provided by IFP Energies nouvelles for the PHEV benchmark. The implemented control strives to be as blended as possible, whilst still ensuring that all electric energy is used in the <b>driving</b> mission. The <b>controller</b> is adaptive to reduce the importance ofcorrect initial values but since the initial values aect the consumption a method is developed to estimate the optimal initial value for the <b>controller</b> based on <b>driving</b> cycle information. This is seen to work well for most driving cycles with promising consumption results. The controller also fulfills all requirements set by the PHEV Benchmark...|$|R
40|$|Abstract: In this paper, {{the impact}} of supply voltage {{harmonics}} on the third harmonic current-based condition assessment of varistor is experimentally verified. Therefore, time-domain current and voltage waveforms, measured from ten identical varistor samples, are decomposed in frequency-domain. The flattop window of the FFT technique is {{used to determine the}} rms values and subsequently the third harmonic amplitude of the varistor current, before and after injection of harmonics. The harmonic-generating load consists of a triac-based ac voltage <b>controller</b> <b>driving</b> a resistive load unit at fixed firing angle of 10 degrees. All varistor devices used in this work were subjected to rated ac operating voltage. However, the results obtained indicated that the operation of a harmonic source connected across the varistor arrestor has the effect of increasing the magnitude of the third harmonic component of the varistor current...|$|R
40|$|Abstract: A plug-in hybrid {{electric}} vehicle(PHEV) is {{a promising}} way of achieving {{the benefits of}} the electric vehicle without being limited by the electric range. This paper develops an adaptive control strategy based on a map-based ECMS approach. The control is developed and implemented in a simulator provided by IFP Energies nouvelles for the PHEV benchmark. The implemented control strives to be as blended as possible, whilst still ensuring that all electric energy is used in the <b>driving</b> mission. The <b>controller</b> is adaptive to reduce the importance of correct initial values but since the initial values affect the consumption a method is developed to estimate the optimal initial value for the <b>controller</b> based on <b>driving</b> cycle information. This is seen to work well for most driving cycles with promising consumption results. The controller also fulfills all requirements set by the PHEV Benchmark...|$|R
