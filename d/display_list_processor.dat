1|676|Public
40|$|This paper {{responds}} to the 1977 Core Graphics System of SIGGRAPH's Graphics Standards Planning Committee (GSPC). The authors are interested in low-level device-independent graphics for applications doing data representation and annotation. The level structure and bias in the core system toward <b>display</b> <b>list</b> <b>processor</b> graphics are criticized. Specific issues discussed include display contexts, attributes, current position, 3 -dimensional graphics, area filling, and graphics input...|$|E
5000|$|Edit Decision <b>List</b> <b>Processor</b> (film/video production) (1989) Amiga ...|$|R
5000|$|A {{reasonable}} {{sequence of}} events to install a <b>Display</b> <b>List</b> using <b>Display</b> <b>List</b> Interrupts: ...|$|R
50|$|An {{extension}} of CORC, the Cornell <b>List</b> <b>Processor</b> (CLP), was a list processing language used for simulation.|$|R
5000|$|Set the <b>Display</b> <b>List</b> pointer Shadow address DLISTL/DLISTH to the {{starting}} address of the new <b>Display</b> <b>List.</b>|$|R
50|$|The JVB's {{argument}} usually {{points to}} the beginning of the same <b>Display</b> <b>List,</b> but it can also point to another <b>Display</b> <b>List,</b> so that a chain of <b>Display</b> <b>Lists</b> is executed after consecutive vertical blanks. Of course, to give ANTIC control over the start of the next <b>Display</b> <b>List</b> the OS Vertical Blank interrupt must be disabled to prevent it overwriting ANTIC hardware registers with the shadow register values.|$|R
5000|$|A <b>Display</b> <b>List</b> with a Mode {{instruction}} {{that includes the}} <b>Display</b> <b>List</b> Interrupt (DLI) modifier bit set. (Bit 7 - $80hex/128dec) ...|$|R
5000|$|The <b>Display</b> <b>List</b> is {{the list}} of instructions, or the program, {{directing}} ANTIC how to generate the display. The data processed by this <b>Display</b> <b>List</b> [...] "program" [...] is the screen memory. The output is the graphics display. The kinds of graphics in the output (text vs addressable pixels) {{is determined by the}} instructions in the <b>Display</b> <b>List.</b>|$|R
50|$|Although ANTIC's <b>Display</b> <b>List</b> {{program counter}} is 16-bit, only the lower 10 bits change during normal (i.e. sequential) {{execution}} of the <b>Display</b> <b>List.</b> This means the <b>Display</b> <b>List</b> requires a JMP (Jump) instruction to cross a 1K boundary. This is not a serious limitation, because {{the size of a}} single <b>Display</b> <b>List</b> usually varies from 32 to 202 bytes, and virtually never exceeds 720 bytes. Since it can be located anywhere in the memory, there is little difficulty finding a sufficiently sized place in memory that does not cross a 1K boundary.|$|R
50|$|A <b>display</b> <b>list</b> can {{represent}} both two- and three-dimensional scenes. Systems that {{make use of}} a <b>display</b> <b>list</b> to store the scene are called retained mode systems as opposed to immediate mode systems.|$|R
5000|$|... $01hex/1dec JMP - Jump to address. This {{is used to}} load a new {{execution}} {{address in}} the middle of <b>Display</b> <b>List</b> execution, typically when the <b>Display</b> <b>List</b> must cross over a 1K boundary.|$|R
50|$|If NMIEN's DLI bit is set when ANTIC {{encounters}} a <b>Display</b> <b>List</b> instruction with the DLI modifier bit set, then ANTIC triggers the DLI {{on the last}} scan line of that <b>Display</b> <b>List</b> instruction mode line.|$|R
5000|$|... $41hex/65dec JVB - Jump {{to address}} {{and wait for}} Vertical Blank. (JMP + LMS bit set) This is used to end the <b>Display</b> <b>List.</b> The address used should be the {{starting}} address of the <b>Display</b> <b>List.</b>|$|R
50|$|The ANTIC chip uses a <b>Display</b> <b>List</b> {{and other}} {{settings}} to create these modes. Any graphics mode in the default CTIA/GTIA color interpretation can be freely mixed without CPU intervention by changing instructions in the <b>Display</b> <b>List.</b>|$|R
50|$|When Mode {{value is}} 1 ANTIC executes a Jump in its program (the <b>Display</b> <b>List).</b> The next two bytes in the <b>Display</b> <b>List</b> are loaded into ANTIC {{registers}} DLISTL/DLISTH ($D402-$D403hex/54274-54275dec) changing the execution {{point of the}} next instruction.|$|R
50|$|The {{registers}} {{are also}} updated during <b>Display</b> <b>List</b> execution by ANTIC's JMP (Jump) and JVB (Jump {{and wait for}} Vertical Blank). These instructions load the full 16-bits of address, so {{can be used to}} circumvent the 1K <b>Display</b> <b>List</b> limitation.|$|R
50|$|Note {{that the}} DLI {{modifier}} bit {{is available for}} blank line instructions. When the DLI bit is enabled a <b>Display</b> <b>List</b> Interrupt will be triggered during the last scan line of the blank line(s) instruction. Since playfield DMA does not occur during blank lines (only <b>Display</b> <b>list</b> DMA and Player/Missile DMA (if enabled) occurs) the blank lines can be used where Playfield graphics will not be needed giving more time for <b>Display</b> <b>List</b> Interrupt routines changing color registers or Player/Missile positions.|$|R
50|$|The table below <b>lists</b> <b>processor</b> {{models and}} model series {{implementing}} {{variations of the}} x86 instruction set, in chronological order. Each line item is characterized by significantly improved or commercially successful processor microarchitecture designs.|$|R
50|$|Note {{that when}} {{updating}} display control values {{care must be}} taken to ensure ANTIC is not currently using them. If ANTIC is processing the <b>Display</b> <b>List</b> containing an Instruction with the DLI modifier, then an interrupt could be dispatched while changing the VDSLST address, potentially crashing the system. If a <b>Display</b> <b>List</b> uses multiple interrupts, and interrupts are enabled in NMIEN after ANTIC has already passed Mode Instructions with DLI modifiers, then the <b>Display</b> <b>List</b> Interrupts will be started out of order, causing unexpected results.|$|R
50|$|A <b>display</b> <b>list</b> of line {{segments}} (vectors) on a 1024 by 1024 grid was stored in computer's memory or an optional buffer on the 2250 and repainted on the 2250's CRT up to 40 times per second. The computer altered the display {{by changing the}} <b>display</b> <b>list.</b>|$|R
50|$|If {{multiple}} DLIs {{are used}} the first interrupt updates VDSLST {{to point to}} the address of the next interrupt, and so on for subsequent interrupts. The last <b>Display</b> <b>List</b> Interrupt routine on the screen points VDSLST back to the address of the first <b>Display</b> <b>List</b> Interrupt.|$|R
50|$|The {{software}} {{allows the}} user to <b>display</b> <b>lists</b> of Chinese characters ordered by pinyin, stroke count, frequency, components, or Unicode. It also <b>displays</b> <b>lists</b> of words by pinyin, frequency, and serial number. English words can be displayed alphabetically, {{as well as the}} 214 radicals of the Chinese language.|$|R
50|$|One of the {{earliest}} popular systems with true <b>display</b> <b>list</b> was the Atari 8-bit family. The <b>display</b> <b>list</b> (actually called so in Atari terminology) {{is a series of}} instructions for ANTIC, the video co-processor used in these machines. This program, stored in the computer's memory and executed by ANTIC in real time, can specify blank lines, any of six text modes and eight graphics modes, which sections of the screen can be horizontally or vertically fine scrolled, and trigger <b>Display</b> <b>List</b> Interrupts (called Raster interrupts or HBI on other systems).|$|R
50|$|Also see <b>Display</b> <b>List</b> DMA bit {{regarding}} Playfield display.|$|R
5000|$|The {{presence}} of the Horizontal Fine Scroll <b>Display</b> <b>List</b> Instruction Modifier.|$|R
5000|$|Starling: GPU-accelerated 2D {{graphics}} that {{mimics the}} Flash <b>display</b> <b>list</b> API ...|$|R
5000|$|PCI bus {{mastering}} for <b>display</b> <b>list</b> {{processing and}} video capture support ...|$|R
50|$|ANTIC begins {{executing}} the <b>Display</b> <b>List</b> pointed {{to by the}} 16-bit address in registers DLISTL/DLISTH ($D402-$D403hex/54274-54275dec). The address registers are incremented by ANTIC automatically as each instruction is executed. ANTIC can only update the lowest 10 bits of the address during the automatic increment limiting the <b>display</b> <b>list</b> to begin and end within a 1K address range.|$|R
50|$|ANTIC begins {{executing}} the <b>Display</b> <b>List</b> pointed {{to by the}} 16-bit address in registers DLISTL/DLISTH ($D402-$D403hex/54274-54275dec). The address registers are updated during <b>Display</b> <b>List</b> execution by ANTIC's JMP (Jump) and JVB (Jump and wait for Vertical Blank). The address is also updated by the Operating System's Vertical Blank Interrupt (VBI) routine using the values in shadow registers SDLSTL/SDLSTH ($0230-$0231hex/560-561dec).|$|R
50|$|Super CIN: A {{modification}} of CIN 12/13, {{but with a}} <b>display</b> <b>list</b> shift (as in the DIN mode) between ANTIC 2 and ANTIC 4 added. The GTIA flag shifts between normal mode and GRAPHICS 11, with the <b>display</b> <b>list</b> shift increasing the color resolution to 80 colors (16 hue by 5 monochromme) at 4x8 character resolution.|$|R
5000|$|A trivial {{example of}} a <b>Display</b> <b>List</b> Interrupt that changes the {{background}} color: ...|$|R
5000|$|... #Caption: A vessel's text-only AIS <b>display,</b> <b>listing</b> nearby vessels' range, bearings, {{and names}} ...|$|R
50|$|SLIP {{is a list}} {{processing}} computer programming language, invented by Joseph Weizenbaum in the 1960s. The name SLIP stands for Symmetric <b>LIst</b> <b>Processor.</b> It was first implemented as an extension to the Fortran programming language, and later embedded into MAD and ALGOL.|$|R
5000|$|Control the display-oriented Vertical Blank and <b>Display</b> <b>List</b> interrupts, and the Reset key interrupt.|$|R
5000|$|Parallel: {{results of}} VU0/FPU sent as another <b>display</b> <b>list</b> via MFIFO (E.G. complex characters/vehicles/etc.) ...|$|R
5000|$|... <b>display</b> <b>lists</b> and {{feedback}} are removed, as are push and pop operations for state attributes, ...|$|R
