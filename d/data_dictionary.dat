577|463|Public
25|$|The names {{can refer}} to objects at varying levels of detail: thus DOI names can {{identify}} a journal, an individual issue of a journal, an individual article in the journal, or a single table in that article. The choice of level of detail is left to the assigner, but in the DOI system it must be declared {{as part of the}} metadata that is associated with a DOI name, using a <b>data</b> <b>dictionary</b> based on the indecs Content Model.|$|E
2500|$|Although Btrieve {{was fairly}} popular, {{it was an}} API {{database}} engine. The killer-app database manager on the PC, dBase II and its successors, were database management systems (DBMS) {{which could be used}} either as a free-standing, general-purpose application, or a database programming language. Btrieve was also more expensive than dBase, although run-time licensing was free of charge. Btrieve grew to a developer base of over 5,000 users and was widely used in the financial area. The company took some time to create a user-interface for the product, however in 1984 they released Xtrieve, a menu-driven program that used a new [...]DDF <b>data</b> <b>dictionary</b> to enforce relational database rules.|$|E
2500|$|In November 1990, Wang {{announced}} their first personal computers running Unix. Previously, Wang's {{presence in the}} UNIX and open systems markets had been modest. In 1987, Wang developed a new typesetting system in conjunction with Arlington MA-based Texet Corp. The system used Xerox printers and UNIX workstations from Sun, but the product vanished before coming to market, partially because few Wang employees could use or support UNIX. UNIX ran on the VSInteractive Systems first ported IN/ix (their IBM360 version of SYS5 UNIX) to run in a VSOS Virtual machine circa 1985, and then Wang engineers completed the port so that it ran [...] "native" [...] on the VS hardware soon thereafterbut performance was always sub-par as UNIX was never {{a good fit for}} the inherently batch-mode nature of the VS hardware, and the line-at-a-time processing approach taken by the VS workstations; indeed, the workstation code had to be largely rewritten to bundle up each keystroke into a frame to be sent back to the host when running UNIX so that [...] "tty" [...] style processing could be implemented. PACE, which offered its <b>data</b> <b>dictionary,</b> excellent referential integrity, and speedy application development, {{was in the process of}} being ported to UNIX under the name OPEN Pace. A client server RDBMS model, built on the original product's ideology, OPEN Pace was demonstrated at the North American PACE User Group Conferences in both Boston and Chicago. OPEN Pace, along with a new Windows-based word processor called UpWord (which was at the time considered a strong contender to retake Wang's original market leadership from Microsoft), were touted as their new direction. However, after a marketing study suggested that it would require large capital investments in order to be viable competitors against Microsoft, both products were simply abandoned.|$|E
50|$|Because the GJXDD {{defines a}} massive number of data components, smaller <b>data</b> <b>dictionaries</b> must be created for {{individual}} IEPs. These <b>data</b> <b>dictionaries</b> only contain the concepts and definitions {{relevant to their}} corresponding data transfers.|$|R
40|$|This {{guide to}} using the {{database}} assumes a basic knowledge of computer database management software. Skills needed to navigate the database include the ability to browse database tables, to link multiple tables in a database query, and to apply simple logic in a database query for extracting the appropriate information. The database {{was developed in the}} PC-based ParadoxJ 4. 0 database management system but may be used in other relational database management packages provided they are compatible with the electronic file formats. Database files are provided on CD-ROM in two formats, the original ParadoxJ 4. 0 format and a FoxProJ/DBase IIIJ format. Comprehensive documentation of electronic files is provided in this chapter, including field definitions for database tables and diagrams of database linkages. Practical examples for common queries and applications of the database are provided in this chapter. 3. 2 <b>Data</b> <b>Dictionaries</b> and Glossaries <b>Data</b> <b>dictionaries</b> for all database tables are provided in this report. The <b>data</b> <b>dictionaries</b> are grouped by directory and subdirectory. Each set of directory and/or subdirectory <b>data</b> <b>dictionaries</b> is preceded by a table listing <b>data</b> <b>dictionaries</b> contained within. The database contains more than 100 tables; refer to the list of tables given in the table of contents. As this chapter touches on each of the database components, the reader will be referred to the relevant <b>data</b> <b>dictionaries.</b> The glossaries which define the terms of the database are contained in the database itself. (See Figure 2 - 2 for files coded with an asterisk) ...|$|R
50|$|Match {{reports are}} useful if <b>data</b> <b>dictionaries</b> use a {{metadata}} tagging system {{such as the}} UDEF.|$|R
50|$|If a <b>data</b> <b>dictionary</b> {{system is}} used {{only by the}} designers, users, and administrators and not by the DBMS Software, it is called a passive <b>data</b> <b>dictionary.</b> Otherwise, it is called an active <b>data</b> <b>dictionary</b> or <b>data</b> <b>dictionary.</b> When a passive <b>data</b> <b>dictionary</b> is updated, it is done so {{manually}} and independently from any changes to a DBMS (database) structure. With an active <b>data</b> <b>dictionary,</b> the dictionary is updated first and changes occur in the DBMS automatically as a result.|$|E
5000|$|IDD : (Integrated <b>Data</b> <b>Dictionary)</b> A renowned {{integrated}} <b>data</b> <b>dictionary.</b>|$|E
5000|$|In the {{construction}} of database applications, it can be useful to introduce an additional layer of <b>data</b> <b>dictionary</b> software, i.e. middleware, which communicates with the underlying DBMS <b>data</b> <b>dictionary.</b> Such a [...] "high-level" [...] <b>data</b> <b>dictionary</b> may offer additional features and a degree of flexibility {{that goes beyond the}} limitations of the native [...] "low-level" [...] <b>data</b> <b>dictionary,</b> whose primary purpose is to support the basic functions of the DBMS, not the requirements of a typical application. For example, a high-level <b>data</b> <b>dictionary</b> can provide alternative entity-relationship models tailored to suit different applications that share a common database. Extensions to the <b>data</b> <b>dictionary</b> also can assist in query optimization against distributed databases. [...] Additionally, DBA functions are often automated using restructuring tools that are tightly coupled to an active <b>data</b> <b>dictionary.</b>|$|E
30|$|Variable {{markers of}} the form {{VAR}} which are {{replaced}} by text from <b>data</b> <b>dictionaries</b> as described later.|$|R
3000|$|A, the keyword {{dictionary}} module: used {{to construct}} <b>data</b> <b>dictionaries</b> and send requests to the API according to {{the words in the}} dictionary [...]...|$|R
50|$|Database caching can {{substantially}} {{improve the}} throughput of database applications, {{for example in}} the processing of indexes, <b>data</b> <b>dictionaries,</b> and frequently used subsets of data.|$|R
5000|$|IDDM (Integrated <b>Data</b> <b>Dictionary)</b> - This is a {{menu driven}} utility which {{facilitates}} adding, modifying and querying {{objects in the}} Integrated <b>Data</b> <b>Dictionary.</b>|$|E
50|$|The Oracle {{instance}} frequently accesses the <b>data</b> <b>dictionary</b> {{to parse}} SQL statements. Oracle operation depends on {{ready access to}} the data dictionaryâ€”performance bottlenecks in the <b>data</b> <b>dictionary</b> affect all Oracle users. Because of this, database administrators must {{make sure that the}} <b>data</b> <b>dictionary</b> cache has sufficient capacity to cache this data. Without enough memory for the data-dictionary cache, users see a severe performance degradation. Allocating sufficient memory to the shared pool where the <b>data</b> <b>dictionary</b> cache resides precludes this particular performance problem.|$|E
50|$|In a {{database}} driven <b>data</b> <b>dictionary,</b> the fully qualified data element name {{may become the}} primary key, or an alternate key, of a Data Elements table of the <b>data</b> <b>dictionary.</b>|$|E
5000|$|... govdex {{provides}} {{a mechanism for}} the definition, and on-going development of the meta-data, common <b>data</b> <b>dictionaries,</b> and taxonomies that {{form the basis of}} a semantic framework.|$|R
50|$|In metadata, a match {{report is}} a report that compares two {{distinct}} <b>data</b> <b>dictionaries</b> and creates {{a list of the}} data elements that have been identified as semantically equivalent.|$|R
30|$|The data {{index is}} used to locate {{position}} of key-value pair in <b>data</b> file. <b>Dictionary</b> <b>data</b> structure [29] such as tree, hash table {{can be used for}} storing index. But for auto-incremental integer keys, <b>dictionary</b> <b>data</b> structure is not optimal in memory consumption and performance.|$|R
50|$|Data Structure Diagram is {{a diagram}} type {{that is used}} to depict the {{structure}} of data elements in the <b>data</b> <b>dictionary.</b> The data structure diagram is a graphical alternative to the composition specifications within such <b>data</b> <b>dictionary</b> entries.|$|E
50|$|In May 2005, PREMIS {{released}} <b>Data</b> <b>Dictionary</b> for Preservation Metadata: Final Report of the PREMIS Working Group. This 237-page report includes: PREMIS <b>Data</b> <b>Dictionary</b> 1.0: a comprehensive, practical {{resource for}} implementing preservation metadata in digital archiving systems; accompanying report (providing context, data model, assumptions); special topics, glossary, usage examples; set of XML schema which {{was developed to}} support use of the <b>Data</b> <b>Dictionary.</b> Version 2.0 of PREMIS was released in March 2008. Version 3.0 of PREMIS was released in June 2015.|$|E
5000|$|Evolve SBR - Australian Government Standard Business Reporting <b>Data</b> <b>Dictionary</b> ...|$|E
40|$|in {{structural}} biology, are critically reviewed at in-person {{and virtual}} meetings regularly and frequently. Comprehensive {{documentation of the}} procedures, formats, and related <b>data</b> <b>dictionaries</b> used in <b>data</b> annotation {{are available at the}} wwPDB website(www. wwpdb. org). |$|R
50|$|With the {{transition}} of needs for the metadata usage for business intelligence has increased so is {{the scope of the}} metadata repository increased. Earlier <b>data</b> <b>dictionaries</b> are the closest place to interact technology with business. <b>Data</b> <b>dictionaries</b> are the universe of metadata repository in the initial stages but as the scope increased Business glossary and their tags to variety of status flags emerged in the business side while consumption of the technology metadata, their lineage and linkages made the repository, the source for valuable reports to bring business and technology together and helped data management decisions easier as well as assess the cost of the changes.|$|R
50|$|One of {{the first}} known {{classification}} schemes applied to data semantics is from William Kent {{more than two decades}} ago. Kent's approach dealt more with structural mapping issues than differences in meaning, which he pointed to <b>data</b> <b>dictionaries</b> as potentially solving.|$|R
5000|$|A <b>data</b> <b>dictionary</b> or {{database}} dictionary is a {{file that}} defines the basic organization of a database. [...] A database dictionary contains {{a list of all}} files in the database, the number of records in each file, and the names and types of each data field. Most database management systems keep the <b>data</b> <b>dictionary</b> hidden from users to prevent them from accidentally destroying its contents. Data dictionaries do not contain any actual data from the database, only bookkeeping information for managing it. Without a <b>data</b> <b>dictionary,</b> however, a database management system cannot access data from the database.|$|E
50|$|Series 80 Data Control System (1980), an {{interactive}} online <b>data</b> <b>dictionary.</b>|$|E
5000|$|DDEX (Digital Data Exchange) Music {{industry}} messaging and <b>data</b> <b>dictionary</b> applications ...|$|E
5000|$|... data dictionary: Terms, definitions, naming {{conventions}} {{and one or}} more representations of the data elements in a computer system. <b>Data</b> <b>dictionaries</b> often define <b>data</b> types, validation checks such as enumerated values and the formal definitions {{of each of the}} enumerated values.|$|R
50|$|Essentially the {{problems}} arising in semantic mapping {{are the same}} as in data mapping for data integration purposes, with the difference that here the semantic relationships are made explicit through the use of semantic nets or ontologies which play the role of <b>data</b> <b>dictionaries</b> in <b>data</b> mapping.|$|R
40|$|This chapter {{discusses}} {{aspects of}} DBMS implementation. Section 1 describes an efficient algorithm {{for the implementation}} of semantic databases. Section 2 addresses questions of transaction handling, including the enforcement of integrity constraints, backup and recovery, and concurrency control. Section 3 addresses issues of data definition languages and <b>data</b> <b>dictionaries...</b>|$|R
5000|$|... tag terms can be {{aligned with}} {{corporate}} taxonomies or <b>data</b> <b>dictionary</b> ...|$|E
50|$|PLIB and IEC 61360 Component <b>Data</b> <b>Dictionary</b> {{are using}} the same datamodel.|$|E
5000|$|DDL locks (or <b>data</b> <b>dictionary</b> locks) {{protect the}} {{structure}} of schema objects ...|$|E
5000|$|Data value {{standards}} {{provide the}} preferred terms and vocabulary {{to be used}} in the fields, often in the form of authority lists, lexicons, <b>data</b> <b>dictionaries,</b> and thesauri. Examples include the Gettyâ€™s Art and Architecture Thesaurus (AAT) and Thesaurus of Geographic Names (TGN), Nomenclature 4.0 for Museum Cataloguing, and Iconclass.|$|R
40|$|Up Front Papers On Coding and Classification in Social Welfare Towards an {{integrated}} system of minimal welfare <b>data</b> collection <b>Data</b> <b>dictionaries</b> in the Netherlands The Language of the Personal Social Services PIE (Person-In-Environment) - {{a system for}} describing and classifying the common problems of the clients of social workers Review...|$|R
50|$|NIEM {{is based}} on several {{concepts}} from the International Organisation for Standardisation (ISO) 11179, which provides guidelines for the naming and definition of data elements, {{as well as information}} about the metadata captured about data elements. Part 5 of the ISO 11179 standard establishes a methodology for naming items in <b>data</b> <b>dictionaries.</b>|$|R
