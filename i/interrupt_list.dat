4|33|Public
5000|$|Ralf Brown's <b>Interrupt</b> <b>List</b> (RBIL) interrupts, calls, interfaces, data structures, {{memory and}} port addresses, and {{processor}} opcodes for the x86 architecture ...|$|E
5000|$|The x86 CPUs contain undocumented {{instructions}} {{which are}} implemented on the chips but not listed in some official documents. They {{can be found}} in various sources across the Internet, such as Ralf Brown's <b>Interrupt</b> <b>List</b> and at sandpile.org ...|$|E
50|$|Ralf Brown's <b>Interrupt</b> <b>List</b> (RBIL) is a {{comprehensive}} list of interrupts, calls, hooks, interfaces, data structures, memory and port addresses, and processor opcodes for x86 machines {{from the very start}} of the PC era in 1981 up into the year 2000, most of it still applying to PCs.|$|E
50|$|If {{multiple}} DLIs {{are used}} the first interrupt updates VDSLST {{to point to}} the address of the next interrupt, and so on for subsequent interrupts. The last Display <b>List</b> <b>Interrupt</b> routine on the screen points VDSLST back to the address of the first Display <b>List</b> <b>Interrupt.</b>|$|R
5000|$|A trivial {{example of}} a Display <b>List</b> <b>Interrupt</b> that changes the {{background}} color: ...|$|R
5000|$|Control the display-oriented Vertical Blank and Display <b>List</b> <b>interrupts,</b> and the Reset key interrupt.|$|R
50|$|CHS {{addressing}} with 28 bits (EIDE and ATA-2) permits eight bits for sectors still {{starting at}} 1, i.e., sectors 1…255, four bits for heads 0…15, and sixteen bits for cylinders 0…65535. This {{results in a}} roughly 128 GiB limit; actually 65536&times;16&times;255=267386880 sectors corresponding to 130560 MiB for a sector size of 512 bytes. The 28=16+4+8 bits in the ATA-2 specification are also covered by Ralf Brown's <b>Interrupt</b> <b>List,</b> and an old working draft of this now expired standard was published.|$|E
5000|$|Set the Display <b>List</b> <b>Interrupt</b> address VDSLST ($0200hex/512dec) to the {{starting}} address of the interrupt routine.|$|R
50|$|If {{multiple}} DLIs {{are used}} the first interrupt updates VDSLST {{to point to}} the address of the next interrupt, and so on for subsequent interrupts. The last Display <b>List</b> <b>Interrupt</b> routine on the screen points VDSLST back to the address of the first Display <b>List</b> <b>Interrupt.</b> Alternatively, a Vertical Blank Interrupt routine can be used to reset the VDSLST address to guarantee the DLIs remain in sync with the screen.|$|R
5000|$|DLI - Display <b>List</b> <b>Interrupt</b> (called [...] "raster interrupt" [...] or [...] "Horizontal Blank Interrupt" [...] {{on other}} systems) ...|$|R
5000|$|The Operating System vector for the Display <b>List</b> <b>Interrupt</b> (VDSLST, $0200hex/512dec) {{points to}} the {{starting}} address of the interrupt routine.|$|R
5000|$|A Display List with a Mode {{instruction}} {{that includes the}} Display <b>List</b> <b>Interrupt</b> (DLI) modifier bit set. (Bit 7 - $80hex/128dec) ...|$|R
5000|$|The {{following}} is a summary of hardware/feature limitations some {{of which can be}} circumvented by software (display <b>list</b> <b>interrupts</b> or display kernels.): ...|$|R
50|$|Note {{that the}} DLI {{modifier}} bit {{is available for}} blank line instructions. When the DLI bit is enabled a Display <b>List</b> <b>Interrupt</b> will be triggered during the last scan line of the blank line(s) instruction. Since playfield DMA does not occur during blank lines (only Display list DMA and Player/Missile DMA (if enabled) occurs) the blank lines can be used where Playfield graphics will not be needed giving more time for Display <b>List</b> <b>Interrupt</b> routines changing color registers or Player/Missile positions.|$|R
5000|$|Turn on ANTIC Display <b>List</b> <b>Interrupts</b> {{by setting}} bit 7 ($80) of NMIEN. The usual value for NMIEN is $C0 which enables DLI and VBI.|$|R
50|$|A null byte {{embedded}} in a file name will <b>interrupt</b> the <b>listing</b> after loading by BASIC. If there are three null bytes, {{that makes it difficult}} to list through BASIC. Many machine language programmers would experiment with null bytes in an attempt to make it harder for BASIC programmers to access their code and tamper with it.|$|R
5000|$|Turn off ANTIC Display <b>List</b> <b>Interrupts</b> by {{clearing}} bit 7 ($80) of NMIEN {{by setting}} the register to value $40 {{which allows the}} Vertical Blank Interrupt to continue running.|$|R
50|$|Since HITCLR and {{collision}} detection is real-time, Display <b>List</b> <b>Interrupts</b> can divide the display into sections with HITCLR {{used at the}} beginning of each section and separate collision evaluation at the end of each section.|$|R
5000|$|Each January {{issue of}} the {{magazine}} is thinner than the rest, and each December the list of articles for all 12 rooms of this year (in the December issue of 2010 this tradition was <b>interrupted,</b> and a <b>list</b> of articles was posted on the official website) ...|$|R
50|$|This {{register}} allows {{programs to}} synchronize to the display. A write to this register halts the 6502 program {{through the end}} of the current scanline. This behavior is commonly used during Display <b>List</b> <b>Interrupts</b> to produce clean transitions/changes from one scanline to the next. The value written is unimportant.|$|R
5000|$|In {{the south}} is the William Pitt Byrne Memorial Fountain, erected in 1862, a Grade II (initial category) listed {{monument}} under the statutory protection scheme, as is an ornamental water pump at the opposite end. [...] Two other buildings form {{the bulk of the}} equally <b>interrupted</b> southern façade, <b>listed,</b> 63 and 68 George Street.|$|R
50|$|Colors on screen: 2 (320 pixels per line) to 16 (80 pixels per line). up to 23 colors per {{line with}} player/missile and playfield {{priority}} control mixing. Register values {{can be changed}} at every scanline using ANTIC display <b>list</b> <b>interrupts,</b> allowing up to 256 (16 hues, 16 luma) to be displayed at once, with up to 16 per scanline.|$|R
50|$|The color {{interpretation}} {{control is}} a global function of GTIA affecting the entire screen. GTIA is not inherently capable of mixing on one display the various GTIA color interpretation modes and the default CTIA mode needed for most ANTIC Playfields. Mixing color interpretation modes requires software writing to the PRIOR register as the display is generated (usually, by a Display <b>List</b> <b>Interrupt).</b>|$|R
50|$|This {{register}} {{tracks the}} scan line currently being generated. The value returned {{is the actual}} scan line divided by 2. Blank lines generated {{at the start of}} the display are included. The value for NTSC will range from 0 to 130 for NTSC, and 0 to 155 for PAL. This value is useful during Display <b>List</b> <b>Interrupts</b> to identify the vertical screen position.|$|R
5000|$|Due to the ANTIC/GTIA's flexibility, it is {{possible}} with clever programming to create a number of software-driven [...] "pseudo-modes" [...] beyond those directly supported in hardware. These modes use combinations of mixed display lists, scrolling, page flipping, and Display <b>List</b> <b>Interrupts</b> to achieve displays with alternate resolution and increased color that are not possible using the hardware alone. Some possibilities include pseudo-256-color displays, 80 character wide displays, and vertical interlace.|$|R
50|$|APAC used a Display <b>List</b> <b>Interrupt,</b> or DLI, {{after each}} {{line of the}} screen was drawn to {{alternate}} between GTIA Graphics Mode 11 (15 hues) and 9 (15 shades of grey) of the GTIA chip. The hues and luminances would blend together on the screen (usually a television) to create {{the effect of a}} palette of 256 visible colors, with the artifact of a thinner, horizontal blank line in between each visible line.|$|R
50|$|Note {{that when}} {{updating}} display control values {{care must be}} taken to ensure ANTIC is not currently using them. If ANTIC is processing the Display List containing an Instruction with the DLI modifier, then an interrupt could be dispatched while changing the VDSLST address, potentially crashing the system. If a Display <b>List</b> uses multiple <b>interrupts,</b> and interrupts are enabled in NMIEN after ANTIC has already passed Mode Instructions with DLI modifiers, then the Display <b>List</b> <b>Interrupts</b> will be started out of order, causing unexpected results.|$|R
50|$|The ANTIC chip {{used by the}} Atari 8-bit family {{includes}} display <b>list</b> <b>interrupts</b> (DLIs), {{which are}} triggered as the display is being drawn. The ANTIC chip itself is considerably powerful and inherently capable of many features which other systems require raster interrupts to duplicate. ANTIC can mix multiple graphics modes on the screen, display horizontal and vertical overscan graphics, and fine scroll selected horizontal regions. DLIs on the Atari are typically used to add additional color to the display and reuse Player/Missile graphics elements.|$|R
50|$|If a value {{changed by}} a DLI has an Operating System Shadow {{register}} and the Vertical Blank Interrupts are enabled, then {{the value in}} effect before (above) the screen position of the Display <b>List</b> <b>Interrupt</b> {{is the value of}} the Shadow, and the value after (below) the screen position is the value from the DLI (and any other DLI that later changes it.) If the value does not have an Operating System Shadow then there should be an initial DLI (or VBI) routine which sets a starting value.|$|R
50|$|One of the {{earliest}} popular systems with true display list was the Atari 8-bit family. The display list (actually called so in Atari terminology) {{is a series of}} instructions for ANTIC, the video co-processor used in these machines. This program, stored in the computer's memory and executed by ANTIC in real time, can specify blank lines, any of six text modes and eight graphics modes, which sections of the screen can be horizontally or vertically fine scrolled, and trigger Display <b>List</b> <b>Interrupts</b> (called Raster interrupts or HBI on other systems).|$|R
50|$|The Display <b>List</b> <b>Interrupt</b> {{facility}} {{can be used}} {{to display}} far more than the usual number of Player/Missile objects (aka sprites) on the screen, with more colours shown on screen than the available color registers in the ANTIC/GTIA. This is done by writing machine language routines to change the values of hardware registers at different vertical positions on the screen. The machine language routines modifying hardware registers allow the programmer to move the sprites around and change their colours 'on the fly'. The same technique can be employed to display far more colours than seemingly allowed in any particular graphics mode, which can be mixed and altered at will.|$|R
50|$|One other {{limit to}} be aware of is that the two byte LMS {{modifier}} address must not be updated when ANTIC is processing the LMS. If ANTIC reads the LMS address while it is partially updated ANTIC will display the incorrect section of memory for that Mode line. When the scrolling region of a display requires multiple LMS address updates the possibility of a partial update increases, and the possibility of having two subsequent lines display the same data also increases. Programs solve this in a number of ways—performing updates during the Vertical blank, monitoring the VCOUNT before updates, or doing the updates in Display <b>List</b> <b>Interrupts</b> executed during sections of the display away from the scrolling region.|$|R
50|$|Software-driven {{graphics}} modes comprise {{tricks and}} programming techniques for the Atari 8-bit family {{that give the}} impression of more colors on the screen than the hardware supports. Most bitmap modes provide 2 or 4 colors, and the GTIA modes provide 16 with limitations. The hardware (via display <b>list</b> <b>interrupts)</b> allows colors to be remapped for each horizontal row of pixels, but that doesn't change the number of colors per row. Software-driven modes use some combination of rapidly alternating colors or graphics modes to give an illusion of more colors to the viewer, though the hardware restrictions are not being bypassed. Most of these methods have some level of visible flicker or shimmer.|$|R
5000|$|The {{magazine}} {{series and}} De Re Atari {{were the first}} public, official publication of Atari 8-bit technical information. The series was based on Atari's confidential, 8-bit development documentation written in 1979-1980 for third-party developers under non-disclosure agreements. Individual chapters are devoted to making use {{of the features of}} the platform, which included ANTIC and the display list, [...] "graphics indirection" [...] in the form of color support in the GTIA and customized character sets, player/missile graphics, using the VBI and display <b>list</b> <b>interrupts</b> (aka HBI/Raster interrupt), smooth scrolling and sound, including a discussion of [...] "volume only sound" [...] which offered higher-resolution volume control for digitized sample playback. Additional chapters covered utilities in the operating system, Atari DOS and Atari BASIC, and design of intuitive human interfaces.|$|R
5000|$|ANTIC {{includes}} a feature {{to trigger a}} CPU-serviced interrupt at specific vertical positions on the screen. This {{is built into the}} ANTIC Display List which directs ANTIC to launch the interrupt during the last scan line of the current Mode instruction, and so is called [...] "Display List Interrupt". Other platforms call this activity, [...] "Raster interrupts", or [...] "Horizontal blank interrupts". The usual purpose is to change display-related values at a known location so transitions are visually precise or occur where they will not conflict with display activity. Possibilities include, {{but are not limited to}} changing color register values, Player/Missile horizontal positions, and fine scrolling values. Since the DLI is 6502 machine code executed by the CPU, any kind of processing work is possible provided it is short enough to not conflict with other activity and does not overrun a subsequent Display <b>List</b> <b>Interrupt.</b> A good example is mouse controller polling which must be done more frequently than 1/60th of a second.|$|R
5|$|The Mourning Parents, {{one male}} and one female figure, are {{reclining}} {{on either side}} of the western steps on the reverse side of the monument. They represent the mourning mothers and fathers of the nation and are likely patterned on the four statues by Michelangelo on the Medici Tomb in Florence. Inscribed on the outside wall of the monument are the names of the 11,285 Canadians killed in France whose final resting place is unknown. Most Commonwealth War Graves Commission memorials present names in a descending list format in a manner that permits the modification of panels as remains are found and identified. Allward instead sought to present the names as a seamless list and decided to do so by inscribing the names in continuous bands, across both vertical and horizontal seams, around the base of the monument. As a consequence, as remains were discovered it was not possible to remove commemorated names without <b>interrupting</b> the seamless <b>list,</b> and as a consequence there are individuals who have a known grave but are commemorated on the memorial. The memorial contains the names of four posthumous Victoria Cross recipients; Robert Grierson Combe, Frederick Hobson, William Johnstone Milne, and Robert Spall.|$|R
