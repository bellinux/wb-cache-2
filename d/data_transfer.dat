8591|8147|Public
5|$|An {{endpoint}} of a pipe is addressable with a tuple (device_address, endpoint_number) as {{specified in}} a TOKEN packet that the host sends when {{it wants to}} start a <b>data</b> <b>transfer</b> session. If {{the direction of the}} <b>data</b> <b>transfer</b> is from the host to the endpoint, an OUT packet (a specialization of a TOKEN packet) having the desired device address and endpoint number is sent by the host. If the direction of the <b>data</b> <b>transfer</b> is from the device to the host, the host sends an IN packet instead. If the destination endpoint is a uni-directional endpoint whose manufacturer's designated direction does not match the TOKEN packet (e.g. the manufacturer's designated direction is IN while the TOKEN packet is an OUT packet), the TOKEN packet is ignored. Otherwise, it is accepted and the data transaction can start. A bi-directional endpoint, on the other hand, accepts both IN and OUT packets.|$|E
5|$|Manufacturers of {{personal}} electronic devices might {{not include a}} USB standard connector on their product for technical or marketing reasons. Some manufacturers provide proprietary cables that permit their devices to physically connect to a USB standard port. Full functionality of proprietary ports and cables with USB standard ports is not assured; for example, some devices only use the USB connection for battery charging and do not implement any <b>data</b> <b>transfer</b> functions.|$|E
5|$|SPLIT is used {{to perform}} split transactions. Rather than tie up the {{high-bandwidth}} USB bus sending data to a slower USB device, the nearest high-bandwidth capable hub receives a SPLIT token followed by one or two USB packets at high-bandwidth, performs the <b>data</b> <b>transfer</b> at full- or low-bandwidth, and provides the response at high-bandwidth when prompted by a second SPLIT token. It contains a seven-bit hub number, 12bits of control flags, and a five-bit CRC.|$|E
40|$|We {{introduce}} {{another view}} of group {{theory in the}} field of interconnection networks. With this approach it is possible to specify application specific network topologies for permutation <b>data</b> <b>transfers.</b> Routing of <b>data</b> <b>transfers</b> is generated and all possible permutation <b>data</b> <b>transfers</b> are guaranteed. We present the approach by means of a kind of SIMD DSP...|$|R
3000|$|... for allocating {{memory and}} setting up FFT plans on GPU, th → dfor <b>data</b> <b>transfers</b> from CPU to GPU (host to device), tconv for the {{convolution}} itself, td→hfor <b>data</b> <b>transfers</b> from GPU to CPU (device to host) and finally t [...]...|$|R
40|$|Bounds on {{the minimum}} number of <b>data</b> <b>transfers</b> (i. e., loads and stores) {{required}} by WFTA (Winograd Fourier Transform Algorithm) and FFT programs are presented. The analysis is applicable to those general-purpose computers with {{a small number of}} general processor registers (e. g., the IBM 370, PDP- 11, etc.). It is shown that the 1008 -point WFTA requires about 21 % more <b>data</b> <b>transfers</b> than the 1024 -point radix- 4 FFT; on the other hand, the 120 -point WFTA has about 22 % fewer <b>data</b> <b>transfers</b> than the 128 -point radix- 2 FFT. Finally, comparisons of the 'total' program execution times (multiplications, additions, and <b>data</b> <b>transfers,</b> but not indexing or permutations) are presented...|$|R
5|$|The F-22 has {{integrated}} radio functionality, {{the signal}} processing systems are virtualized {{rather than as}} a separate hardware module. There have been several reports on the F-22's inability to communicate with other aircraft, and funding cuts have affected the integration of the Multifunction Advanced Data Link (MADL). Voice communication is possible, but not <b>data</b> <b>transfer.</b>|$|E
5|$|The USB 3.0 {{specification}} {{was published}} on 12 November 2008. Its main goals were {{to increase the}} <b>data</b> <b>transfer</b> rate (up to 5Gbit/s), decrease power consumption, increase power output, and be backward compatible with USB 2.0. USB 3.0 includes a new, higher speed bus called SuperSpeed in parallel with the USB 2.0 bus. For this reason, the new version is also called SuperSpeed. The first USB 3.0 equipped devices were presented in January 2010.|$|E
5|$|The USB2.0 {{specification}} {{was released}} in April 2000 and was ratified by the USB Implementers Forum (USB-IF) {{at the end of}} 2001. Hewlett-Packard, Intel, Lucent Technologies (now Nokia), NEC, and Philips jointly led the initiative to develop a higher <b>data</b> <b>transfer</b> rate, with the resulting specification achieving 480Mbit/s, 40 times as fast as the original USB 1.1 specification.|$|E
40|$|The {{introduction}} of software defined networking (SDN) {{has created an}} opportunity for file access services to get {{a view of the}} underlying network and to further optimize large <b>data</b> <b>transfers.</b> This opportunity is still unexplored while the amount of data that needs to be <b>transferred</b> is growing. <b>Data</b> <b>transfers</b> are also becoming more frequent as a result of interdisciplinary collaborations and the nature of research infrastructures. To address the needs for larger and more frequent <b>data</b> <b>transfers,</b> we propose an approach which enables file access services to use SDN. We extend the file access services developed in our earlier work by including network resources in the provisioning for large <b>data</b> <b>transfers.</b> A novel SDN-aware file transfer mechanism is prototyped for improving the performance and reliability of large <b>data</b> <b>transfers</b> on research infrastructure equipped with programmable network switches. Our results show that I/O and data-intensive scientific workflows benefit from SDN-aware file access services...|$|R
40|$|Redundant <b>data</b> <b>transfers</b> {{over the}} Web, can mainly be {{attributed}} to repeated <b>transfers</b> of unchanged <b>data.</b> Web caches and Web proxies {{are some of the}} solutions that have been proposed, {{to deal with the issue}} of redundant <b>data</b> <b>transfers.</b> In this paper we focus on the efficient estimation and reduction of redundant <b>data</b> <b>transfers</b> over the Web. We first prove that a vast amount of redundant <b>data</b> is <b>transferred</b> in Web pages that are considered to carry fresh data. We show this by following an approach based on Web page fragmentation and manipulation. Web pages are broken-down into fragments, based on specific criteria. We then deal with these fragments as independent constructors of the Web page and study their change patterns independently and in the context of the whole Web page. After the fragmentation process we propose solutions for dealing with redundant <b>data</b> <b>transfers...</b>|$|R
40|$|We {{present a}} network-aware HEFT. The {{original}} HEFT {{does not take}} care of parallel network flows while designing its schedule for a computational environment where computing nodes are physically at distant locations. In the proposed mechanism, such <b>data</b> <b>transfers</b> are stretched to their realistic completion time. A HEFT schedule with stretched <b>data</b> <b>transfers</b> exhibits the realistic makespan of the schedule. It is shown how misleading a schedule can be if the impact of parallel <b>data</b> <b>transfers</b> that share a bottleneck is ignored. A network-aware HEFT {{can be used to}} yield a benefit for Grid applications...|$|R
5|$|In general, {{there are}} three basic formats of USB connectors: the default or {{standard}} format intended for desktop or portable equipment (for example, on USB flash drives), the mini intended for mobile equipment (now deprecated except the Mini-B, which is used on many cameras), and the thinner micro size, for low-profile mobile equipment (most modern mobile phones). Also, there are 5 modes of USB <b>data</b> <b>transfer,</b> in order of increasing bandwidth: Low Speed (from 1.0), Full Speed (from 1.0), High Speed (from 2.0), SuperSpeed (from 3.0), and SuperSpeed+ (from 3.1); modes have differing hardware and cabling requirements. USB devices have some choice of implemented modes, and USB version is not a reliable statement of implemented modes. Modes are identified by their names and icons, and the specifications suggests that plugs and receptacles be colour-coded (SuperSpeed is identified by blue).|$|E
5|$|Of the 20 bits {{allocated}} for each program instruction, 10 {{were used to}} hold the instruction code, which allowed for 1,024 (210) different instructions. The machine had 26 initially, increasing to 30 when the function codes to programmatically control the <b>data</b> <b>transfer</b> between the magnetic drum and the cathode ray tube (CRT) main store were added. On the Intermediary Version programs were input by key switches, and the output was displayed {{as a series of}} dots and dashes on a cathode ray tube known as the output device, just as on the SSEM from which the Mark 1 had been developed. However, the Final Specification machine, completed in October 1949, benefitted from the addition of a teleprinter with a 5-hole paper-tape reader and punch.|$|E
5|$|Some USB devices {{require more}} power than is {{permitted}} by the specifications for a single port. This is common for external hard and optical disc drives, and generally for devices with motors or lamps. Such devices can use an external power supply, which is allowed by the standard, or use a dual-input USB cable, one input of which is used for power and <b>data</b> <b>transfer,</b> the other solely for power, which makes the device a non-standard USB device. Some USB ports and external hubs can, in practice, supply more power to USB devices than required by the specification but a standard-compliant device may not depend on this.|$|E
5000|$|IBM 1401, which {{controlled}} <b>data</b> <b>transfers</b> from unit-record equipment: ...|$|R
25|$|LEDs – {{indicate}} <b>data</b> <b>transfers</b> or <b>data</b> reads and writes.|$|R
5000|$|... #Subtitle level 3: <b>Data</b> <b>transfers</b> {{directives}} {{to optimize}} communication overhead ...|$|R
5|$|The {{original}} USB1.0 specification, {{which was}} introduced in January 1996, defined <b>data</b> <b>transfer</b> rates of 1.5Mbit/s Low Speed and 12Mbit/s Full Speed. Microsoft Windows 95, OSR 2.1 provided OEM support for the devices. The first widely used version of USB was 1.1, which was released in September 1998. The 12Mbit/s data rate was intended for higher-speed devices such as disk drives, and the lower 1.5Mbit/s rate for low data rate devices such as joysticks. Apple Inc.'s iMac was the first mainstream product with USB and the iMac's success popularized USB itself. Following Apple's design decision to remove all legacy ports from the iMac, many PC manufacturers began building legacy-free PCs, {{which led to the}} broader PC market using USB as a standard.|$|E
5|$|Once {{the filming}} was completed, more than 20 two-hour Beta SP video tapes of footage {{had to be}} edited down to fit {{the actions of the}} game. The {{programming}} included editing the original video footage, and mixing the rendered images of doors, drawers, chairs and other objects into the footage frame-by-frame, which was necessary for more than 100 scenes. The game required more polishing and fine-tuning than most games of its time due to the many video components, and the programmers had to determine the desired frame rate, <b>data</b> <b>transfer</b> rate and desired resolution of the video elements. Another challenge for the game was CD resource management. Since many of the scenes in the game could be repeated in multiple chapters, some pieces of the code were written onto several different CDs {{to reduce the number of}} times the player had to swap discs in the middle of a chapter, an unusual practice for computer games at the time. The final game was on seven discs, a large number for a computer game, and more than the four or five discs originally expected.|$|E
25|$|The similar father's name of Marshal Rodion Malinovsky and Zhukovsky {{family in}} Odessa {{could be an}} example of <b>data</b> <b>transfer</b> during the Intelligence activity. The similar <b>data</b> <b>transfer</b> via the crew members was used on the ship Metallurg Anosov.|$|E
50|$|Built-in 10/100 base-T Ethernet {{port for}} <b>data</b> <b>transfers</b> and {{tethered}} shooting.|$|R
5000|$|All <b>data</b> <b>transferred</b> by {{debugger}} can be optionally protected with SSL ...|$|R
5000|$|Eliminate {{register}} writes {{and minimize}} register reads for normal <b>data</b> <b>transfers</b> ...|$|R
25|$|HDD <b>data</b> <b>transfer</b> rate {{depends upon}} the {{rotational}} speed of the platters and the data recording density. Because heat and vibration limit rotational speed, advancing density becomes the main method to improve sequential transfer rates. Higher speeds require a more powerful spindle motor, which creates more heat. While areal density advances by increasing both the number of tracks across the disk {{and the number of}} sectors per track, only the latter increases the <b>data</b> <b>transfer</b> rate for a given rpm. Since <b>data</b> <b>transfer</b> rate performance tracks only one of the two components of areal density, its performance improves at a lower rate.|$|E
25|$|Z-Wave – Communication {{protocol}} providing short-range, low-latency <b>data</b> <b>transfer</b> {{at rates}} and power consumption lower than Wi-Fi. Used primarily for home automation.|$|E
25|$|A {{new world}} record has been {{achieved}} in wireless <b>data</b> <b>transfer,</b> with 40 Gbit/s transferred at 240GHz over a distance of one kilometer.|$|E
50|$|PCH (Paging Channel) - The lowest data {{connectivity}} state. Devices {{are typically}} switched to this state when no <b>data</b> <b>transfers</b> are in progress. It keeps the data connection active between the device and the carrier network {{and allows for}} <b>data</b> <b>transfers</b> to quickly begin without requiring the device to execute the typical connection procedures and re-connect to the network.|$|R
5000|$|The action round {{progression}} follows {{an audio}} track, {{included in the}} game components, that narrates the different events in each phase. These events include enemy activity, incoming <b>data,</b> <b>data</b> <b>transfers,</b> {{and the end of}} each phase. Incoming data allows players to draw cards. <b>Data</b> <b>transfers</b> allow players to exchange cards. [...] Enemy activity details the external and internal threats.|$|R
5000|$|... {{a single}} {{exchange}} file format, true technical and structured envelope allowing <b>data</b> <b>transfers.</b>|$|R
25|$|FTP Publishing Service: Lets Web content creators publish content {{securely}} to IIS 7 Web servers with SSL-based authentication and <b>data</b> <b>transfer.</b>|$|E
25|$|As the Internet is a {{heterogeneous}} network, the physical characteristics, including {{for example the}} <b>data</b> <b>transfer</b> rates of connections, vary widely. It exhibits emergent phenomena that depend on its large-scale organization.|$|E
25|$|The <b>data</b> <b>transfer</b> protocol, RTP, {{facilitates}} {{the transfer of}} real-time data. Information provided by this protocol include timestamps (for synchronization), sequence numbers (for packet loss and reordering detection) and the payload format which indicates the encoded format of the data.|$|E
50|$|Functionality is {{included}} {{to measure and}} {{keep track of the}} amount of <b>data</b> <b>transferred.</b>|$|R
5000|$|A bus trace {{provides}} detailed visibility on the <b>data</b> <b>transfers</b> on {{a specific}} bus.|$|R
5000|$|No Blitter, but {{supports}} {{very fast}} <b>data</b> <b>transfers</b> via [...] "VGA latch" [...] registers ...|$|R
