234|266|Public
25|$|Cross-site {{scripting}} attacks use <b>known</b> <b>vulnerabilities</b> in web-based applications, their servers, or the plug-in {{systems on}} which they rely. Exploiting one of these, attackers fold malicious content into the content being delivered from the compromised site. When the resulting combined content arrives at the client-side web browser, it has all been delivered from the trusted source, and thus operates under the permissions granted to that system. By finding ways of injecting malicious scripts into web pages, an attacker can gain elevated access-privileges to sensitive page content, to session cookies, and {{to a variety of}} other information maintained by the browser on behalf of the user. Cross-site scripting attacks are a case of code injection.|$|E
2500|$|Package {{management}} {{systems such as}} NPM and Bower are popular with JavaScript developers. Such systems allow a developer to easily manage their program's dependencies upon other developer's program libraries. Developers trust that the maintainers of the libraries will keep it secure and up to date, {{but that is not}} always the case. A vulnerability has emerged because of this blind trust. Relied upon libraries can release an update that causes bugs or vulnerabilities to appear in all programs that rely upon the library. Inversely, a library can go unpatched with <b>known</b> <b>vulnerabilities</b> out in the wild. In a study done looking over a sample of 133k websites, researchers found 37% of the websites included a library with at-least one known vulnerability. [...] "The median lag between the oldest library version used on each website and the newest available version of that library is 1,177 days in ALEXA, and development of some libraries still in active use ceased years ago." [...] Another possibility is that the maintainer of a library may remove the library entirely. This occurred in March 2016 when Azer Ko√ßulu removed his repository from NPM. This caused all tens of thousands of programs and websites depending upon his libraries to break.|$|E
50|$|Note {{that there}} are <b>known</b> <b>vulnerabilities</b> in SSL 2.0 and SSL 3.0. With the {{exception}} of the predictable IVs (for which an easy workaround exists) all currently <b>known</b> <b>vulnerabilities</b> affect all version of TLS 1.0/1.1/1.2 alike.|$|E
50|$|Nessus is {{probably}} the best <b>known</b> <b>vulnerability</b> scanner. It is free and has versions for Windows, OS X, Linux, and FreeBSD. Nessus uses plug-ins to find vulnerabilities by sort. Updated plug-ins are regularly released.|$|R
50|$|BadTrans is a {{malicious}} Microsoft Windows computer worm {{distributed by}} e-mail. Because of a <b>known</b> <b>vulnerability</b> in older versions of Internet Explorer, some e-mail programs, such as Microsoft's Outlook Express and Microsoft Outlook programs, may install and execute the worm {{as soon as}} the e-mail message is viewed.|$|R
50|$|This variant is most {{commonly}} encountered in explanations {{of why the}} number of <b>known</b> <b>vulnerability</b> exploits for products with the largest market share tends {{to be higher than}} a linear relationship to market share would suggest, but is also a factor in product choice for some large organizations.|$|R
5000|$|... #Subtitle level 2: <b>Known</b> <b>vulnerabilities,</b> limitations, and {{weaknesses}} ...|$|E
50|$|Vulnerability {{scanning}} is {{determining whether}} <b>known</b> <b>vulnerabilities</b> are present on a target.|$|E
50|$|The project uses normal computers, {{without any}} <b>known</b> <b>vulnerabilities,</b> and {{monitors}} the network for attacks.|$|E
40|$|CONCLUSION: Incidence of MI during {{vacation}} {{is highest}} {{during the first}} 2 days of vacation. Vacation activities such as adverse driving conditions and less luxurious accommodations may increase risk for MI. Individuals with <b>known</b> <b>vulnerability</b> for MI may therefore benefit from minimizing physical and emotional challenges specifically related to vacation travel. ...|$|R
5000|$|The {{security}} of the MD5 has been severely compromised, with its weaknesses having been exploited in the field, most infamously by the Flame malware in 2012. The CMU Software Engineering Institute considers MD5 essentially [...] "cryptographically broken and unsuitable for further use". Despite this <b>known</b> <b>vulnerability,</b> MD5 remains in use.|$|R
5000|$|There {{are three}} new {{scenarios}} which BROP [...] can be relevant for. They are:i.) In case of closed binary services, to discover vulnerabilities where techniques like fuzz and penetration testing {{need to be}} used.ii.) A <b>known</b> <b>vulnerability</b> in an open-source library can be leveraged to carry an exploit, even though the proprietary binary which uses it is a closed source.iii.) It {{can also be used}} to hack an open-source server for which the binary is unknown.The attack assumes that there is a service on the server which has a <b>known</b> stack <b>vulnerability</b> and also that the service should restart on crash.|$|R
5000|$|Automation {{with other}} tools to define network role based on other {{information}} such as <b>known</b> <b>vulnerabilities,</b> jailbreak status etc.|$|E
50|$|Understanding {{the supply}} chain of {{software}}, obtaining a software BOM, and using it to analyze <b>known</b> <b>vulnerabilities</b> are crucial in managing risk.|$|E
5000|$|Exclusion {{of higher}} layer network {{services}} from the TSF, {{so that the}} TSF is not susceptible to the publicly <b>known</b> <b>vulnerabilities</b> in those services.|$|E
50|$|Hackers placed Download.ject on {{financial}} and corporate websites running IIS 5.0 on Windows 2000, breaking in using a <b>known</b> <b>vulnerability.</b> (A patch existed for the vulnerability, but many administrators had not applied it.) The attack was first noticed June 23, although some researchers {{think it may}} have been in place as early as June 20.|$|R
25|$|Because Firefox {{generally}} has fewer publicly <b>known</b> security <b>vulnerabilities</b> than Internet Explorer (see Comparison of web browsers), improved security {{is often cited}} {{as a reason to}} switch from Internet Explorer to Firefox. The Washington Post reported that exploit code for <b>known</b> critical security <b>vulnerabilities</b> in Internet Explorer was available for 284 days in 2006. In comparison, exploit code for <b>known,</b> critical security <b>vulnerabilities</b> in Firefox was available for nine days before Mozilla issued a patch to remedy the problem.|$|R
5000|$|In an {{independent}} proactive security challenge test [...] performed by matousec.com, Online Armor Premium received {{a score of}} 99%, surpassing more well-known firewalls, such as ZoneAlarm and Kaspersky Internet Security. A well <b>known</b> <b>vulnerability</b> profiling site and company, Secunia, had not found any vulnerabilities as of March, 2008 in the software, though Matousec reported a weakness 25 March 2008 that has been repaired in the latest version.|$|R
5000|$|Vulnerabilities can be {{discovered}} with a vulnerability scanner, which analyzes {{a computer system}} in search of <b>known</b> <b>vulnerabilities,</b> such as open ports, insecure software configuration, and susceptibility to malware ...|$|E
50|$|This {{comparison}} of unpatched publicly <b>known</b> <b>vulnerabilities</b> in latest stable version browsers {{is based on}} vulnerabilities reports by Secunia. See browser security for more details {{about the importance of}} unpatched known flaws.|$|E
5000|$|Timely SW updates: Since {{almost all}} SW sources {{regularly}} publish updates to their SW, {{what should we}} do to minimize the periods where we are using a version that is not the latest; i.e. potentially containing <b>known</b> <b>vulnerabilities.</b>|$|E
50|$|The {{executable}} will scan for vulnerable {{hosts and}} use the compiled program to exploit a <b>known</b> OpenSSL <b>vulnerability.</b>|$|R
5000|$|If {{customers}} do not <b>know</b> about <b>vulnerabilities,</b> they cannot request patches, and vendors experience no economic incentive to correct vulnerabilities.|$|R
30|$|The {{presence}} of a hypervisor has {{no impact on the}} vulnerabilities associated with the operating system. As a result, any exploit that leverages a <b>known</b> <b>vulnerability</b> will still operate successfully [9]. Although, a remote exploit gives the adversary control of a single virtual machine, by using the exploit in a virus the entire cloud could be compromised. It is this vulnerability amplification that poses the most significant threat to the future of cloud computing.|$|R
50|$|Vulnerability {{assessment}} {{is a process}} of defining, identifying and classifying the security holes in information technology systems. An attacker can exploit a vulnerability to violate the security of a system. Some <b>known</b> <b>vulnerabilities</b> are Authentication Vulnerability, Authorization Vulnerability and Input Validation Vulnerability.|$|E
50|$|On August 13, 2015, another Stagefright {{vulnerability}} CVE-2015-3864 {{was published}} by Exodus Intelligence. This vulnerability was not mitigated by existing fixes of already <b>known</b> <b>vulnerabilities.</b> CyanogenMod team published a notice that patches for CVE-2015-3864 have been incorporated in CyanogenMod 12.1 source on August 13, 2015.|$|E
50|$|Issues in Ethereum smart {{contracts}} in particular include ambiguities and easy-but-insecure constructs in its contract language Solidity, compiler bugs, Ethereum Virtual Machine bugs, {{attacks on the}} blockchain network, the immutability of bugs {{and that there is}} no central source documenting <b>known</b> <b>vulnerabilities,</b> attacks and problematic constructs.|$|E
50|$|Versions before 3.0 have a <b>known</b> {{security}} <b>vulnerability</b> {{that allows}} an attacker {{with access to}} the web interface to read any file on the file system.|$|R
5000|$|In May 2013, Adobe {{identified}} {{another critical}} vulnerability, reportedly already being exploited in the wild, which targets all recent versions of ColdFusion on any servers where the web-based administrator and API {{have not been}} locked down. The vulnerability allows unauthorized users to upload malicious scripts and potentially gain full control over the server. A security bulletin and hotfix for this was issued by Adobe 6 days later. [...] This is currently the only <b>known</b> <b>vulnerability</b> for ColdFusion 9 and ColdFusion 10 (currently supported versions).|$|R
25|$|According to an October 2010 {{report in}} The Register, {{researcher}} Chris Evans had detected a <b>known</b> security <b>vulnerability</b> which, then {{dating back to}} 2008, had not been fixed for at least 600 days. Microsoft says that it had <b>known</b> about this <b>vulnerability</b> but it was of very low severity as the victim web site must be configured in a special way for this attack to be feasible at all.|$|R
50|$|PPTP {{has been}} the subject of many {{security}} analyses and serious security vulnerabilities have been found in the protocol. The <b>known</b> <b>vulnerabilities</b> relate to the underlying PPP authentication protocols used, the design of the MPPE protocol as well as the integration between MPPE and PPP authentication for session key establishment.|$|E
5000|$|Assume that code {{constructs}} {{that appear}} to be problem prone (similar to <b>known</b> <b>vulnerabilities,</b> etc.) are bugs and potential security flaws. The basic rule of thumb is: [...] "I'm not aware of all types of security exploits. I must protect against those I do know of and then I must be proactive!".|$|E
50|$|Such methods {{identify}} and exploit <b>known</b> <b>vulnerabilities,</b> {{and attempt to}} evade security to gain entry into secured areas. They {{are able to do}} this by hiding software and system 'back-doors' that {{could be used as a}} link to the information or access the non-ethical hacker, also known as 'black-hat' or 'grey-hat', may want to reach.|$|E
5000|$|Gumblar.X infections {{were widely}} seen on systems running older Windows {{operating}} systems. [...] Visitors to an infected site will be redirected to an alternative site containing further malware. Initially, this alternative site was gumblar.cn, {{but it has}} since switched {{to a variety of}} domains. The site sends the visitor an infected PDF that is opened by the visitor's browser or Acrobat Reader. The PDF will then exploit a <b>known</b> <b>vulnerability</b> in Acrobat {{to gain access to the}} user's computer. Newer variations of Gumblar redirect users to sites running fake anti-virus software.|$|R
2500|$|Rootkit {{installation}} can be automated, or an attacker can {{install it}} once they've obtained root or Administrator access. Obtaining this access {{is a result}} of direct attack on a system, i.e. exploiting a <b>known</b> <b>vulnerability</b> (such as privilege escalation) or a password (obtained by cracking or social engineering tactics like [...] "phishing"). Once installed, it becomes possible to hide the intrusion as well as to maintain privileged access. The key is the root or administrator access. Full control over a system means that existing software can be modified, including software that might otherwise be used to detect or circumvent it.|$|R
30|$|The aim of {{this study}} is to further develop {{existing}} approaches, yielding a new methodology for GIS-based tsunami risk analysis, and thereby (i) to use high resolution (1 ¬†m) GIS-based data in tsunami numerical modeling and inundation analysis (hazard assessment), (ii) propose a new human vulnerability assessment method by further improving <b>known</b> <b>vulnerability</b> assessment aspects (locational vulnerability) and introducing new resilience assessment features (evacuation resilience), and (iii) propose a further developed tsunami risk evaluation equation by integrating the result of meter-size gridded high-resolution tsunami numerical models of different scenarios in the Yenikapƒ± region in Istanbul, in order to obtain human vulnerability assessments.|$|R
