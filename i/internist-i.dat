9|0|Public
50|$|In {{the first}} version of <b>INTERNIST-I</b> (completed in 1974) the {{computer}} program “treated the physician as unable to solve a diagnostic problem,” or as a “passive observer” who merely performed data entry. Miller and his collaborators came to see this function as a liability in the 1980s, referring to <b>INTERNIST-I</b> derisively {{as an example of the}} outmoded “Greek Oracle” model for medical expert systems. In the mid-1980s <b>INTERNIST-I</b> was succeeded by a powerful microcomputer-based consultant developed at the University of Pittsburgh called Quick Medical Reference (QMR). QMR, meant to rectify the technical and philosophical deficiencies of <b>INTERNIST-I,</b> still remained dependent on many of the same algorithms developed for <b>INTERNIST-I,</b> and the systems are often referred to together as INTERNIST-I/QMR. The main competitors to <b>INTERNIST-I</b> included CASNET, MYCIN, and PIP.|$|E
50|$|<b>INTERNIST-I</b> is the {{successor}} of the DIALOG system. For ten years, <b>INTERNIST-I</b> was {{the centerpiece of}} a Pittsburgh course entitled “The Logic of Problem-Solving in Clinical Diagnosis.” In consultation with faculty experts, much responsibility for data entry and updating of the system fell to the fourth-year medical students enrolled in the course. These students encoded the findings of standard clinicopathological reports. By 1982, the <b>INTERNIST-I</b> project represented fifteen person-years of work, and by some reports covered 70-80% of all the possible diagnoses in internal medicine.|$|E
50|$|Data {{input into}} the system by {{operators}} included signs and symptoms, laboratory results, and other items of patient history. The principal investigators on <b>INTERNIST-I</b> did not follow other medical expert systems designers in adopting Bayesian statistical models or pattern recognition. This was because, as Myers explained, “The method used by physicians to arrive at diagnoses requires complex information processing which bears {{little resemblance to the}} statistical manipulations of most computer-based systems.” <b>INTERNIST-I</b> instead used a powerful ranking algorithm to reach diagnoses in the domain of internal medicine. The heuristic rules that drove <b>INTERNIST-I</b> relied on a partitioning algorithm to create problems areas, and exclusion functions to eliminate diagnostic possibilities.|$|E
50|$|By {{the late}} 1970s, <b>INTERNIST-I</b> was in {{experimental}} {{use as a}} consultant program and educational “quizmaster” at Presbyterian-University Hospital in Pittsburgh. INTERNIST-I’s designers hoped that the system could one day become useful in remote environments—rural areas, outer space, and foreign military bases, for instance—where experts were in short supply or unavailable. Still, physicians and paramedics wanting to use <b>INTERNIST-I</b> found the training period lengthy and the interface unwieldy. An average consultation with <b>INTERNIST-I</b> required about thirty to ninety minutes, too long for most clinics. To meet this challenge, researchers at nearby Carnegie Mellon University wrote a program called ZOG that allowed those unfamiliar with the system to master it more rapidly. <b>INTERNIST-I</b> never moved beyond its original status as a research tool. In one instance, for example, a failed attempt to extract “synthetic” case studies of “artificial patients” from the system’s knowledge base in the mid-1970s overtly demonstrated its “shallowness” in practice.|$|E
50|$|<b>INTERNIST-I</b> was {{a broad-based}} {{computer-assisted}} diagnostic tool {{developed in the}} early 1970s at the University of Pittsburgh as an educational experiment. The system was designed to capture the expertise of just one man, Jack D. Myers, MD, chairman of internal medicine in the University of Pittsburgh School of Medicine. The Division of Research Resources and the National Library of Medicine funded <b>INTERNIST-I.</b> Other major collaborators on the project included Randolph A. Miller and Harry E. Pople.|$|E
50|$|These rules, in turn, {{produce a}} list of ranked diagnoses based on disease {{profiles}} existing in the system’s memory. When the system was unable to make a determination of diagnosis it asked questions or offered recommendations for further tests or observations to clear up the mystery. <b>INTERNIST-I</b> worked best when only a single disease was expressed in the patient, but handled complex cases poorly, where more than one disease was present. This was because the system exclusively relied on hierarchical or taxonomic decision-tree logic, which linked each disease profile to only one “parent” disease class.|$|E
50|$|The next steps, in the mid-1960s, {{were the}} {{development}} (sponsored {{largely by the}} NIH) of expert systems such as MYCIN and <b>Internist-I.</b> In 1965, the National Library of Medicine started to use MEDLINE and MEDLARS. Around this time, Neil Pappalardo, Curtis Marble, and Robert Greenes developed MUMPS (Massachusetts General Hospital Utility Multi-Programming System) in Octo Barnett's Laboratory of Computer Science at Massachusetts General Hospital in Boston, another center of biomedical computing that received significant support from the NIH. In the 1970s and 1980s {{it was the most}} commonly used programming language for clinical applications. The MUMPS operating system was used to support MUMPS language specifications. , a descendent of this system is being used in the United States Veterans Affairs hospital system. The VA has the largest enterprise-wide health information system that includes an electronic medical record, known as the Veterans Health Information Systems and Technology Architecture (VistA). A graphical user interface known as the Computerized Patient Record System (CPRS) allows health care providers to review and update a patient's electronic medical record at any of the VA's over 1,000 health care facilities.|$|E
40|$|PROTEGE-II is a {{methodology}} and {{a suite of}} tools that allow developers to build and maintain knowledge-based systems in a principled manner. We used PROTEGE-II to reconstruct the well-known <b>INTERNIST-I</b> system, demonstrating {{the role of a}} domain ontology (a framework for specification of a model of an application area), a reusable problem-solving method, and declarative mapping relations in creating a new, working program. PROTEGE-II generates automatically a domain-specific knowledge-acquisition tool, which, {{in the case of the}} <b>INTERNIST-I</b> reconstruction, has much of the functionality of the QMR-KAT knowledge-acquisition tool. This study provides a means to understand better both the PROTEGE-II methodology and the models that underlie <b>INTERNIST-I...</b>|$|E
40|$|The {{past decade}} has seen the {{emergence}} of programs that make use of large knowledge bases to assist physicians in diagnosis within the general field of internal medicine. One such program, <b>Internist-I,</b> contains knowledge about over 600 diseases, covering {{a significant proportion of}} internal medicine. This paper describes the process of converting a subset of this knowledge base [...] in the area of cardiovascular diseases [...] into a probabilistic format, and the use of this resulting knowledge base to teach medical diagnostic knowledge. The system (called KBSimulator [...] for Knowledge-Based patient Simulator) generates simulated patient cases and uses these cases as a focal point from which to teach medical knowledge. It interacts with the student in a mixed-initiative fashion, presenting patients for the student to diagnose, and allowing the student to obtain further information on his/her own initiative in the context of that patient case. The system scores the student, and uses these scores to form a rudimentary model of the student. This resulting model of the student is then used to direct the generation of subsequent patient cases. This project demonstrates the feasibility of building an intelligent, flexible instructional system that uses a knowledge base constructed primarily for medical diagnosis...|$|E

