146|346|Public
25|$|In 2009, {{a simple}} {{electronic}} circuit consisting of an LC network and a memristor {{was used to}} model experiments on adaptive behavior of unicellular organisms. It was shown that subjected to a train of periodic pulses, the circuit learns and anticipates the next pulse similar to the behavior of slime molds Physarum polycephalum where the viscosity of channels in the cytoplasm responds to periodic environment changes. Applications of such circuits may include, e.g., pattern recognition. The DARPA SyNAPSE project funded HP Labs, {{in collaboration with the}} Boston University Neuromorphics Lab, has been developing neuromorphic architectures which may be based on memristive systems. In 2010, Versace and Chandler described the MoNETA (Modular Neural Exploring Traveling Agent) model. MoNETA is the first large-scale neural network model to implement whole-brain circuits to power a virtual and robotic agent using memristive hardware. Application of the memristor crossbar structure in the construction of an analog soft computing system was demonstrated by Merrikh-Bayat and Shouraki. In 2011 they showed how memristor crossbars can be combined with fuzzy logic to create an analog memristive neuro-fuzzy computing system with <b>fuzzy</b> <b>input</b> and output terminals. Learning is based on the creation of fuzzy relations inspired from Hebbian learning rule.|$|E
2500|$|Pinyin {{was created}} {{based on the}} {{pronunciation}} of Standard Chinese, a variety of Mandarin Chinese. Regional accents are prevalent in Mandarin among both native and nonnative speakers. This means {{that a significant number}} of Mandarin speakers would have trouble distinguishing a number of similar-sounding syllables of pinyin, such as c and ch, s and sh, z and zh, n and ng, [...] h or hu and f, or n and l. Fuzzy pinyin or <b>fuzzy</b> <b>input</b> (模糊音) is a feature that allows a user to input those similar-sounding vowels or consonants {{as if they were the}} same thing. It also has disadvantages as the user must choose the correct characters or words from a longer list of [...] "homophones".|$|E
5000|$|In Fig. 3, after {{measurements}} are fuzzified, the resulting input fuzzy sets are mapped into fuzzy output sets by the Inference block. This {{is accomplished by}} first quantifying each rule using fuzzy set theory, and by then using the mathematics of fuzzy sets to establish the output of each rule, {{with the help of}} an inference mechanism. If there are M rules then the <b>fuzzy</b> <b>input</b> sets to the Inference block will activate only a subset of those rules, where the subset contains at least one rule and usually way fewer than M rules. Inference is done one rule at a time. So, at the output of the Inference block, there will be one or more fired-rule fuzzy output sets.|$|E
40|$|International audienceThis {{paper is}} {{concerned}} with the use of <b>fuzzy</b> <b>inputs</b> in <b>fuzzy</b> logic controllers. A precise representation of fuzzy logic controllers by means of mappings is used to introduce different ways for dealing with <b>fuzzy</b> <b>inputs.</b> Two types of <b>fuzzy</b> <b>inputs</b> are presented and their potential use in fuzzy control is discussed. The proposed concepts are applied to control a first order process with a PI controller. This simple process is chosen to clearly illlustrate the behaviour of the closed-loop system using <b>fuzzy</b> <b>inputs</b> for <b>fuzzy</b> reference and fuzzy measurement. Finally, a nonlinear process is used to illustrate the effects of <b>fuzzy</b> <b>inputs</b> on a more complex system. Although it is sometimes speculated that <b>fuzzy</b> <b>inputs</b> may improve the behaviour of fuzzy controllers, experiments developed in this paper show this point is not straightforward and that the relevance of <b>fuzzy</b> <b>inputs</b> should be questionned in closed loop fuzzy control...|$|R
30|$|Evaluate {{the fuzzy}} {{inference}} system (FIS): Using Matlab fuzzy toolbox, all the <b>fuzzy</b> <b>inputs</b> are {{passed into the}} Mamdani type FIS as shown in Figure  5.|$|R
40|$|Abstract- Multi-attribute {{analysis}} {{is a useful}} tool in many economical, managerial, constructional, etc., problems. There is usually some uncertainty involved in all multi-attribute model inputs. The objective of this work is to demonstrate how simulation {{can be used to}} reflect <b>fuzzy</b> <b>inputs,</b> which allows more complete interpretation of model results. A case study is used to demonstrate the concept of general contractor choice of on the basis of multiple attributes of efficiency with <b>fuzzy</b> <b>inputs</b> applying COPRAS method. The work has concluded that the COPRAS method is appropriate to use. Index Terms- multi-attribute, decision – making model...|$|R
50|$|In 2009, {{a simple}} {{electronic}} circuit consisting of an LC network and a memristor {{was used to}} model experiments on adaptive behavior of unicellular organisms. It was shown that subjected to a train of periodic pulses, the circuit learns and anticipates the next pulse similar to the behavior of slime molds Physarum polycephalum where the viscosity of channels in the cytoplasm responds to periodic environment changes. Applications of such circuits may include, e.g., pattern recognition. The DARPA SyNAPSE project funded HP Labs, {{in collaboration with the}} Boston University Neuromorphics Lab, has been developing neuromorphic architectures which may be based on memristive systems. In 2010, Versace and Chandler described the MoNETA (Modular Neural Exploring Traveling Agent) model. MoNETA is the first large-scale neural network model to implement whole-brain circuits to power a virtual and robotic agent using memristive hardware. Application of the memristor crossbar structure in the construction of an analog soft computing system was demonstrated by Merrikh-Bayat and Shouraki. In 2011 they showed how memristor crossbars can be combined with fuzzy logic to create an analog memristive neuro-fuzzy computing system with <b>fuzzy</b> <b>input</b> and output terminals. Learning is based on the creation of fuzzy relations inspired from Hebbian learning rule.|$|E
30|$|It is {{proposed}} to employ two <b>fuzzy</b> <b>input</b> variables for each metric of interest. One of the <b>fuzzy</b> <b>input</b> variables {{will be the}} feature’s membership in feature subsets producing high quality results and the other <b>fuzzy</b> <b>input</b> variables will be the feature’s membership in feature subsets producing low quality results. Crisp inputs for the FIS are the numerical values obtained by Eq. (2) for each feature’s membership in the high-quality group and the low-quality group.|$|E
40|$|Abstract: The {{usefulness}} of <b>fuzzy</b> <b>input</b> fuzzy output functions and their interpolation/approximation by different operators in fuzzy control motivate their deeper theoretical study. We obtain some properties of fuzzy B-spline series such as variation and uncertainty diminishing property. We also propose spline approximation of <b>fuzzy</b> <b>input</b> fuzzy output functions...|$|E
40|$|We {{present and}} analyze {{inference}} method called Perception-based Logical Deduction (PbLD) {{aimed at the}} treatment of fuzzy IF-THEN rules as linguis-tically expressed genuine logical implications. Be-sides the original PbLD, we propose a new balanc-ing variant of PbLD, introduce both variants with <b>fuzzy</b> <b>inputs</b> and study them {{from the point of}} view of the interpolativity property...|$|R
40|$|Beginning with {{triangular}} <b>fuzzy</b> <b>inputs</b> representing <b>fuzzy</b> ratio judgments, we {{experiment with}} two procedures to obtain fuzzy relative priorities in the Analytic Hierarchy Process. We extend the simple geometric mean and simple normalized column sum methods with fuzzy arithmetic. When the pairwise comparisons are fully consistent the methods produce identical results, but they diverge {{in the presence}} of inconsistencies...|$|R
40|$|In {{memory of}} the late Professor Ernest Czogała Some generalizations {{of the concept of}} ordered fuzzy numbers (OFN) are defined to handle <b>fuzzy</b> <b>inputs</b> in a {{quantitative}} way, exactly as real numbers are handled. Additional two structures, an algebraic one and a normed (topological) one, are introduced to allow for counting with a more general type of membership relations...|$|R
3000|$|In Table  3, μ_A([...] x [...]) {{refers to}} the degree of {{membership}} of <b>fuzzy</b> <b>input</b> variable A given a crisp input x.|$|E
30|$|Fuzzification process: The {{fuzzification}} {{process is}} the first step. This process converts crisp inputs into <b>fuzzy</b> <b>input</b> datasets based on the membership functions. These functions quantify the degree of membership of a crisp input x into a fuzzy dataset. For example, at the left bottom of Figure  2, the Loaddiff crisp input value (x[*]=[*]− 0.45) could be labeled as ‘Very Negative’ (0.75) and ‘Negative’ (0.25). These <b>fuzzy</b> <b>input</b> datasets are forwarded to the next step, the inference engine.|$|E
30|$|A second {{possible}} explanation is that a 2 -level <b>fuzzy</b> <b>input</b> variable is not sufficiently descriptive to give adequate treatment to one or more rules. For example, Rule 2 attempts to capture the situation by which a feature shows strong presence in high quality solutions and a not-weak presence in low quality solutions. However, with only two labels for the <b>fuzzy</b> <b>input</b> variables, a not-weak presence in low quality solutions is not distinguishable from a strong presence in low quality solutions.|$|E
40|$|Abstract. Multi-attribute {{analysis}} {{is a useful}} tool in many economical, managerial, constructional, etc. problems. The accuracy of performance measures in COPRAS (The multi-attribute COmplex PRoportional ASsessment of alternatives) method is usually assumed to be accurate. This method assumes direct and proportional dependence of the weight and utility degree of investigated ver-sions on a system of attributes adequately describing the alternatives and on values and weights of the attributes. However, there is usually some uncertainty involved in all multi-attribute model inputs. The objective {{of this research is}} to demonstrate how simulation can be used to reflect <b>fuzzy</b> <b>inputs,</b> which allows more complete interpretation of model results. A case study is used to demon-strate the concept of general contractor choice of on the basis of multiple attributes of efficiency with <b>fuzzy</b> <b>inputs</b> applying COPRAS-G method. The research has concluded that the COPRAS-G method is appropriate to use...|$|R
40|$|This paper {{presents}} a novel fuzzy deterministic noncontroller type (FDNCT) system and an FDNCT inference algorithm (FIA). The FDNCT uses <b>fuzzy</b> <b>inputs</b> and produces a deterministic non-fuzzy output. The FDNCT {{is an extension}} and alternative for the existing fuzzy singleton inference algorithm. The research described in this paper applies FDNCT to build an architecture for an intelligent system to detect and to eliminate potential fires in the engine and battery compartments of a hybrid electric vehicle. The <b>fuzzy</b> <b>inputs</b> consist of sensor data from the engine and battery compartments, namely, temperature, moisture, and voltage and current of the battery. The system synthesizes the data and detects potential fires, takes actions for eliminating the hazard, and notifies the passengers about the potential fire using an audible alarm. This paper also presents the computer simulation results of the comparison between the FIA and singleton inference algorithms for detecting potential fires and determining the actions for eliminating them...|$|R
40|$|Fuzzy logic Systems (FLSs) are {{credited}} with providing very good performances which {{are able to}} handle the uncertainty and imprecision present in real-world environments and applications. Using type- 2 FLSs can enable handling higher levels of uncertainty when compared to type- 1 FLSs. The majority of the type- 2 FLSs employ singleton type- 2 FLSs which handle the encountered <b>input</b> uncertainty through <b>fuzzy</b> sets representing the linguistic labels in the antecedent fuzzy sets. However, singleton type- 2 FLSs assume that the input signal is perfect and thus there is no provision for handling the uncertainties in the incoming input signals. Hence, there have been some efforts to investigate non-singleton type- 2 FLS. However, the papers that employed non-singleton type- 2 FLSs assumed that the <b>fuzzy</b> <b>inputs</b> are having a predefined shape (mostly Gaussian) which might not model the encountered uncertainty properly. In our previous works, we presented adaptive type- 2 input based non-singleton type- 2 FLS which employs dynamic inputs which are not assuming any specific shape. We have shown how the adaptive type- 2 input based non-singleton type- 2 FLS outperforms singleton (type- 1 and type- 2) FLSs. In this paper, we will compare the adaptive type- 2 input based non-singleton type- 2 FLS with other non-singleton (type- 1 and type- 2) FLSs which employ Gaussian <b>fuzzy</b> <b>inputs.</b> We will present real-world robot experiments showing how the adaptive type- 2 input based non-singleton type- 2 FLS outperforms the non-singleton FLSs which employ Gaussian <b>fuzzy</b> <b>inputs</b> when large amounts of uncertainty are encountered. © 2012 IEEE...|$|R
30|$|The {{inference}} procedure process <b>fuzzy</b> <b>input</b> {{data and}} rules to infer fuzzy control actions employing fuzzy implication {{and the rules}} of inference in fuzzy logic.|$|E
30|$|To {{the best}} {{knowledge}} of the authors, there is no study on FRBF Network dealing with fuzzy regression with <b>fuzzy</b> <b>input</b> and fuzzy output. Therefore, we propose FRBF Network with <b>fuzzy</b> <b>input,</b> fuzzy output and also fuzzy weights, {{as an alternative to}} the existing FR methods in the literature. To show its appropriateness and effectiveness, our proposed method is applied to the three numerical examples and its performance is compared with existing FR methods. The results indicate that our proposed method is an effective method to estimate the output under fuzzy environment.|$|E
40|$|An {{inference}} {{network is}} proposed {{as a tool}} for bidirectional approximate reasoning. The inference network can be designed directly from the given fuzzy data (knowledge). If a <b>fuzzy</b> <b>input</b> is given for the inference network, then the network renders a reasonable fuzzy output after performing approximate reasoning based on an equality measure. Conversely, due to the bidirectional structure, the network can yield its corresponding reasonable <b>fuzzy</b> <b>input</b> for a given fuzzy output. This property makes it possible to perform forward and backward reasoning in the knowledge base systemclose 91...|$|E
40|$|In this paper, the {{stability}} study of fuzzy control systems is presented. The approach developed {{is based on}} the convergence of regular vector norms, where the comparison, the overvaluing principle and the Borne and Gentina criterion are used. The controller is of type PI-fuzzy with different partition of the two <b>fuzzy</b> <b>inputs.</b> The system to be controlled is a nonlinear system and the application example is of second order...|$|R
30|$|The {{other models}} used here {{primarily}} suffer from discontinuity {{by considering the}} maximum or minimum values in inference and defuzzification steps. The other reason for their counterintuitive behavior is the inconsistency in defining the rules, which could be justifiable in the SDI development context. Nevertheless, this problem may be addressed by using more linguistic characteristics for the <b>fuzzy</b> <b>inputs</b> and output, e.g., very low, low, medium, high and very high desire to participate in SDI development.|$|R
40|$|In {{order to}} {{estimate}} fuzzy regression models, possibilistic and least-squares procedures can be considered. By {{taking into account}} a least-squares approach, regression models with crisp or <b>fuzzy</b> <b>inputs</b> and crisp or fuzzy output are suggested. In particular, for these fuzzy regression models, unconstrained and constrained (with inequality restrictions) least-squares estimation procedures are developed. Furthermore, for the various models presented, explanatory examples are shown and some concluding remarks are also included. (C) 2002 Elsevier Science B. V. All rights reserved...|$|R
3000|$|Fuzzification. This is {{the process}} of {{converting}} <b>fuzzy</b> <b>input</b> values into a degree of membership for each linguistic term. Each linguistic term, high, medium, and low, characterizes a membership function. For instance, the proactive controller inputs, [...]...|$|E
3000|$|In this section, {{we propose}} a FRBF Network {{approach}} for FR model with <b>fuzzy</b> <b>input</b> and fuzzy output which are symmetric or nonsymmetric TFNs. Our proposed FRBF Network includes <b>fuzzy</b> <b>input</b> (X_p [...]), fuzzy output (Y_p [...]), fuzzy weights between input and hidden unit (W_ij [...]) and also fuzzy weights between hidden and output unit (V_j [...]). In this approach, the weights W_ij and normalization factor σ _j^ 2 [...] {{are determined by}} unsupervised learning. W_ij s are initialized by modified FCM algorithm given in Sect.  3.2 and V_j [...] s are randomly selected as TFNs. Then, W_ij, V_j [...] and σ _j^ 2 [...] s are updated by BackPropagation (BP) algorithm which is supervised learning.|$|E
40|$|An {{adaptive}} sliding mode controller {{based on}} <b>fuzzy</b> <b>input</b> design is presented, {{in order to}} reduce the roll motion of surface vessel fin stabilizers with shock and vibration of waves. The nonlinearities and uncertainties of the system including feedback errors and disturbance induced by waves are analyzed. And the lift-feedback system is proposed, which improves the shortage of conventional fin angle-feedback. Then the fuzzy input-based adaptive sliding mode control is designed for the system. In the controller design, the Lyapunov function is adopted to guarantee the system stability. Finally, experimental results demonstrate the superior performance of the controller designed using <b>fuzzy</b> <b>input,</b> when compared to the PID controller used in practical engineering...|$|E
40|$|AbstractWe derive {{a general}} {{learning}} algorithm for training a fuzzified feedforward neural networks that has <b>fuzzy</b> <b>inputs,</b> <b>fuzzy</b> targets, and fuzzy conncetion weights. The derived algorithm is {{applicable to the}} learning of fuzzy connection weights with various shapes such as triangular and trapezoid. First we briefly describe how a feedforward neural network can be fuzzified. Inputs, targets, and connection weights in the fiuzzified neural network can be fuzzy numbers. Next we define a cost function that measures the differences between a fuzzy target vector and an actual fuzzy output vector. Then we derive a learning algorithm from the cost function for adjusting fuzzy connection weights. Finally we show some results of computer simulations...|$|R
30|$|In a stock-flow model, each {{variable}} should be modeled {{so that it}} can be included in the simulation model. Hence, the simplest model is always used to capture the characteristics of variables perceived by experts (Mutingi and Mbohwa 2012). Fuzzy logic provides better <b>fuzzy</b> <b>inputs</b> and decision rules to better reflect human judgment in the system dynamics models. This has motivated researchers in the field of system thinking to apply the concept of fuzzy system dynamics in their simulation models.|$|R
30|$|The Mamdani {{engine type}} merges {{together}} fuzzy rules into a mapping from fuzzy sets to fuzzy output sets and then apply defuzzification to the output fuzzy set to obtain crisp outputs, while the Takagi-Sugeno directly relates <b>fuzzy</b> <b>inputs</b> and crisp outputs using singleton spikes output membership function. The defuzzification step {{is the final}} stage of the fuzzy inference process which is accomplished by the defuzzifier by converting the output fuzzy set into a crisp number using different methods such as: centroid of area, bisector of area, mean of maxima, or maximum criteria.|$|R
40|$|Abstract- This paper {{presents}} a parallel adaptive networks controller which is implemented by our <b>Fuzzy</b> <b>Input</b> Adaptive Network (FIAN). The FIAN {{is easy to}} be set initial parameters and structure by the human sense. All FIAN parameters can be adjusted by gradient descent based on Lypunov stability synthesis during the operation of networks. The gradient adaptive is applied via linear plant parameters approximation at the chain rule of gradient search. The performance of FIAN as controller can be shown by its application which is the controllers for nonlinear plants. Due to our experiments “water bath temperature control system ” and “single inverse pendulum” are selected to test the system performance. Index Terms [...] - Adaptive network control, neuro-fuzzy control, <b>fuzzy</b> <b>input</b> adaptive network, intelligent control. I...|$|E
30|$|To {{assure that}} the {{behavior}} of the fuzzy models was consistent in any combination of <b>fuzzy</b> <b>input</b> values, the second test, the multivariate sensitivity analysis, was individually applied to the fuzzy structure for the COA-Average–Average model {{because it was the only}} fuzzy model that passed the behavior-reproduction test.|$|E
40|$|Abstract—The {{present study}} {{considers}} a fuzzy color {{system in which}} three membership functions are constructed on the RGB color triangle. This system can process a <b>fuzzy</b> <b>input</b> (as the membership values of subjects) to an RGB system and output {{the center of gravity}} of three weights associated with respective grades. Three membership functions are applied to the RGB color triangle relationship. By treating three membership functions of redness, greenness, and blueness on the RGB color triangle, an average color value can be easily obtained as the center of gravity of the fuzzy output. The differences between <b>fuzzy</b> <b>input</b> and inference output are described, and the relationship between the centers of gravity of fuzzy inputs and inference outputs for fuzzy inputs are shown in the present paper. A technique for obtaining expressions of the RG...|$|E
40|$|Abstract—This paper {{presents}} a reconfigurable state transition architecture for the Hybrid Fuzzy-Boolean Finite State Machine (HFB FSM). The architecture is created using parameterized components to add versatility {{with respect to}} the number of <b>fuzzy</b> <b>inputs</b> and the number of states. This is a very attractive property to implement virtual fuzzy automata for supervisory controllers of complex systems where relevant state clusters vary a great degree. The reconfigurable architecture allows the supervisory controller to reset the fuzzy automaton in order to model a particular state cluster, as needed. The design was done using VHDL. I...|$|R
40|$|This paper {{contains}} some theoretical results on fuzzy-relation equations and applications to analysis of fuzzy systems {{as well as}} identification and control problems. If Ai, 1 ⩽ i ⩽ k, are <b>fuzzy</b> <b>inputs,</b> B is a fuzzy output, and R is a fuzzy relation describing the system, the above problems are illustrated {{by means of a}} max-min multidimensional equation of type. Furthermore, we investigate some properties of fuzzy systems described by fuzzy-relation equations, focusing our attention on energy and entropy measures of fuzziness of solutions of the class of equations under discussion...|$|R
30|$|Number of <b>fuzzy</b> sets per <b>input</b> {{and output}} variables: 7.|$|R
