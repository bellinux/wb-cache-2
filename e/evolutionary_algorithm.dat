6027|6947|Public
25|$|Non-linear {{combination}} of the output bits {{of two or more}} LFSRs (see also: shrinking generator); or using <b>Evolutionary</b> <b>algorithm</b> to introduce non-linearity.|$|E
25|$|Estimation of Distribution Algorithm (EDA) is an <b>Evolutionary</b> <b>Algorithm</b> that {{substitutes}} traditional reproduction operators by model-guided operators. Such {{models are}} {{learned from the}} population by employing machine learning techniques and represented as Probabilistic Graphical Models, from which new solutions can be sampled or generated from guided-crossover.|$|E
2500|$|In {{artificial}} intelligence, {{genetic programming}} (GP) {{is a technique}} whereby computer programs are encoded {{as a set of}} genes that are then modified (evolved) using an <b>evolutionary</b> <b>algorithm</b> (often a genetic algorithm, [...] "GA") â€“ it is an application of (for example) genetic algorithms where the space of solutions consists of computer programs. The results are computer programs able to perform well in a predefined task. The methods used to encode a computer program in an artificial chromosome and to evaluate its fitness with respect to the predefined task are central in the GP technique and still the subject of active research.|$|E
40|$|This paper {{shows how}} <b>evolutionary</b> <b>algorithms</b> can be {{described}} in a concise, yet comprehensive and accurate way. A classification scheme is introduced and presented in a tabular form called TEA (Table of <b>Evolutionary</b> <b>Algorithms).</b> It distinguishes between different classes of <b>evolutionary</b> <b>algorithms</b> (e. g., genetic algorithms, ant systems) by enumerating the fundamental ingredients of each of these algorithms. At the end, possible uses of the TEA are illustrated on classical <b>evolutionary</b> <b>algorithms.</b> Key Words: <b>evolutionary</b> <b>algorithms,</b> genetic algorithms, taxonom...|$|R
40|$|Parallel <b>evolutionary</b> <b>algorithms</b> {{are often}} used to {{alleviate}} the large computational demands of standard <b>evolutionary</b> <b>algorithms.</b> Unfortunately, implementations of parallel <b>evolutionary</b> <b>algorithms</b> can be complicated and often require specific hardware and software settings. This frequently results in very problem-specific parallel <b>evolutionary</b> <b>algorithms</b> with little scope for reuse. This paper investigates the JavaSpaces technology to help to overcome these problems...|$|R
40|$|Many {{variants}} of <b>evolutionary</b> <b>algorithms</b> {{have been designed}} and applied. The experimental knowledge is immense. The rigorous analysis of <b>evolutionary</b> <b>algorithms</b> is difficult, but such a theory can help to understand, design, and teach <b>evolutionary</b> <b>algorithms.</b> In this survey, first the history of attempts to analyse <b>evolutionary</b> <b>algorithms</b> is described and then new methods for continuous as well as discrete search spaces are presented and discussed...|$|R
2500|$|CMA-ES {{stands for}} Covariance Matrix Adaptation Evolution Strategy. Evolution {{strategies}} (ES) are stochastic, derivative-free methods for numerical optimization [...] of non-linear or non-convex continuous optimization problems. They {{belong to the}} class of evolutionary algorithms and evolutionary computation. [...] An <b>evolutionary</b> <b>algorithm</b> is broadly {{based on the principle}} of biological evolution, namely the repeated interplay of variation (via recombination and mutation) and selection: in each generation (iteration) new individuals (candidate solutions, denoted as [...] ) are generated by variation, usually in a stochastic way, of the current parental individuals. Then, some individuals are selected to become the parents in the next generation based on their fitness or objective function value [...] Like this, over the generation sequence, individuals with better and better -values are generated.|$|E
2500|$|Evolutionary {{algorithms}} {{are popular}} approaches to generating Pareto optimal solutions to a multi-objective optimization problem. Currently, most evolutionary multi-objective optimization (EMO) algorithms apply Pareto-based ranking schemes. Evolutionary algorithms {{such as the}} Non-dominated Sorting Genetic Algorithm-II (NSGA-II) [...] and Strength Pareto <b>Evolutionary</b> <b>Algorithm</b> 2 (SPEA-2) have become standard approaches, although some schemes based on particle swarm optimization and simulated annealing are significant. The main advantage of evolutionary algorithms, when applied to solve multi-objective optimization problems, {{is the fact that}} they typically generate sets of solutions, allowing computation of an approximation of the entire Pareto front. The main disadvantage of evolutionary algorithms is their lower speed and the Pareto optimality of the solutions cannot be guaranteed. It is only known that none of the generated solutions dominates the others.|$|E
50|$|In {{its most}} {{fundamental}} form an <b>evolutionary</b> <b>algorithm</b> manipulates {{a population of}} individuals where each individual describes how to construct a candidate circuit. Each circuit is assigned a fitness, which indicates how well a candidate circuit satisfies the design specification. The <b>evolutionary</b> <b>algorithm</b> uses stochastic operators to evolve new circuit configurations from existing ones. Done properly, over time the <b>evolutionary</b> <b>algorithm</b> will evolve a circuit configuration that exhibits desirable behavior.|$|E
40|$|This paper {{introduces}} drift {{analysis and}} its applications in estimating average computation time of <b>evolutionary</b> <b>algorithms.</b> Firstly, drift conditions for estimating {{upper and lower}} bounds of the mean first hitting times of <b>evolutionary</b> <b>algorithms</b> are presented. Then drift analysis is applied to two specific <b>evolutionary</b> <b>algorithms</b> and problems. Finally, a general classification of easy and hard problems for <b>evolutionary</b> <b>algorithms</b> is given based on the analysis...|$|R
40|$|The Concern of {{the present}} study is {{summarizing}} knowledges in the theory of mapping candidate solutions, analysis and application of <b>evolutionary</b> <b>algorithms.</b> The study provides summary of the <b>evolutionary</b> <b>algorithms,</b> classification and application. The target of the study is links gained knowledge from sectionS of; <b>evolutionary</b> <b>algorithms,</b> mapping candidate solutions and creations of a system that will demonstrate and influence mapping the efficiency of the <b>evolutionary</b> <b>algorithms</b> succesfully...|$|R
40|$|We {{hypothesize that}} <b>evolutionary</b> <b>algorithms</b> can {{effectively}} schedule coordinated fleets of Earth observing satellites. The constraints {{are complex and}} the bottlenecks are not well understood, a condition where <b>evolutionary</b> <b>algorithms</b> are often effective. This is, in part, because <b>evolutionary</b> <b>algorithms</b> require only that one can represent solutions, modify solutions, and evaluate solution fitness...|$|R
50|$|A {{cellular}} <b>evolutionary</b> <b>algorithm</b> (cEA) {{is a kind}} of <b>evolutionary</b> <b>algorithm</b> (EA) {{in which}} individuals cannot mate arbitrarily, but every one interacts with its closer neighbors on which a basic EA is applied (selection, variation, replacement).|$|E
50|$|<b>Evolutionary</b> <b>algorithm</b> {{based on}} NIST Statistical Test Suite.|$|E
5000|$|XtalOpt - {{open source}} code {{implementing}} an <b>evolutionary</b> <b>algorithm.</b>|$|E
40|$|He, J., Yu, X. (2001). Conditions for the {{convergence}} of <b>evolutionary</b> <b>algorithms.</b> Journal of Systems Architecture, 47 (7), 601 - 612. This paper presents a theoretical analysis of {{the convergence}} conditions for <b>evolutionary</b> <b>algorithms.</b> The necessary and sufficient conditions, necessary conditions, and sufficient conditions for {{the convergence of}} <b>evolutionary</b> <b>algorithms</b> to the global optima are derived, which describe their limiting behaviors. Their relationships are explored. Upper and lower bounds of the convergence rates of the <b>evolutionary</b> <b>algorithms</b> are given. Peer reviewe...|$|R
50|$|In a {{more diverse}} context, memetic {{algorithms}} are now used under various names including Hybrid <b>Evolutionary</b> <b>Algorithms,</b> Baldwinian <b>Evolutionary</b> <b>Algorithms,</b> Lamarckian <b>Evolutionary</b> <b>Algorithms,</b> Cultural Algorithms, or Genetic Local Search. In the context of complex optimization, many different instantiations of memetic algorithms have been reported across {{a wide range of}} application domains, in general, converging to high-quality solutions more efficiently than their conventional evolutionary counterparts.|$|R
40|$|Abstract- In practice, <b>evolutionary</b> <b>algorithms</b> {{are often}} used to find good {{feasible}} solutions to complex optimisation problems in a reasonable running time, rather than the optimal solutions. In theory, an important question we should answer is that: how good approximation solutions can <b>evolutionary</b> <b>algorithms</b> produce in a polynomial time? This paper makes an initial discussion on this question and connects <b>evolutionary</b> <b>algorithms</b> with approximation algorithms together. It is shown that <b>evolutionary</b> <b>algorithms</b> can't find a good approximation solution to two families of hard problems...|$|R
5000|$|<b>Evolutionary</b> <b>Algorithm</b> for Generation of Entertaining Shinro Logic Puzzles by David Oranchak ...|$|E
5000|$|Evolutionary {{cybernetics}} - {{study of}} the evolution of informational systems (See also evolutionary programming, <b>evolutionary</b> <b>algorithm)</b> ...|$|E
50|$|Tow {{sees the}} {{scientific}} method {{in terms of an}} <b>evolutionary</b> <b>algorithm</b> applied to science and technology.|$|E
40|$|Abstract. In {{this paper}} we present an {{analysis}} of the similarities between distributed <b>evolutionary</b> <b>algorithms</b> and membrane systems. The correspondences between evolutionary operators and evolution rules and between communication topologies and policies in distributed <b>evolutionary</b> <b>algorithms</b> and membrane structures and communication rules in membrane systems are identified. As a result of this analysis we propose new strategies of applying the operators in <b>evolutionary</b> <b>algorithms</b> and new variants of distributed <b>evolutionary</b> <b>algorithms.</b> The behavior of these variants is numerically tested for some continuous optimization problems. ...|$|R
40|$|This article {{introduces}} <b>evolutionary</b> <b>algorithms</b> {{and their}} utilization in mechanicalengineering. First {{part of this}} work describes <b>evolutionary</b> <b>algorithms</b> and their characteristics. Themain body of <b>evolutionary</b> <b>algorithms,</b> the selection methods for parents and the types ofreproduction are explained in the next part of this article. Termination conditions are also discussed. Finally, the application of <b>evolutionary</b> <b>algorithms</b> to a problem in mechanical engineering isdescribed. Thereby, the material parameters for a Bodner-Partom model describing viscoelastoplasticmaterial behavior are determined by fitting data from experiments on Aluminum testsamples under tension load...|$|R
40|$|This paper {{presents}} a theoretical {{analysis of the}} convergence conditions for <b>evolutionary</b> <b>algorithms.</b> The necessary and sufficient conditions, necessary conditions, and sufficient conditions for the convergence of <b>evolutionary</b> <b>algorithms</b> to the global optima are derived, which describe their limiting behaviors. Their relationships are explored. Upper and lower bounds of the convergence rates of the <b>evolutionary</b> <b>algorithms</b> are given. I...|$|R
50|$|MCACEA (Multiple Coordinated Agents Coevolution <b>Evolutionary</b> <b>Algorithm)</b> is {{a general}} {{framework}} that uses a single <b>evolutionary</b> <b>algorithm</b> (EA) per agent sharing their optimal solutions to coordinate the evolutions of the EAs populations using cooperation objectives. This framework {{can be used to}} optimize some characteristics of multiple cooperating agents in mathematical optimization problems. More specifically, due to its nature in which both individual and cooperation objectives are optimize, MCACEA is used in multi-objective optimization problems.|$|E
5000|$|Non-linear {{combination}} of the output bits {{of two or more}} LFSRs (see also: shrinking generator); or using <b>Evolutionary</b> <b>algorithm</b> to introduce non-linearity.|$|E
5000|$|... (2009) The island {{model for}} {{parallel}} computations is made available and extended to non <b>evolutionary</b> <b>algorithm</b> {{in the open}} source software suite PaGMO.|$|E
40|$|Several <b>evolutionary</b> <b>algorithms</b> {{have been}} {{proposed}} for the satisfiability problem. We review the solution representations suggested in literature and choose the most promising one â€“ the bit string representation â€“ for further evaluation. An empirical comparison on commonly used benchmarks is presented for the most successful <b>evolutionary</b> <b>algorithms</b> and for WSAT, a prominent local search algorithm for the satisfiability problem. The key features of successful <b>evolutionary</b> <b>algorithms</b> are identified, thereby providing useful methodological guidelines for designing new heuristics. Our results indicate that <b>evolutionary</b> <b>algorithms</b> are competitive to WSAT...|$|R
40|$|Abstract. The <b>evolutionary</b> <b>algorithms</b> can be {{considered}} as a powerful and interesting technique for solving large kinds of control problems. However, the great disadvantage of the <b>evolutionary</b> <b>algorithms</b> is the great computational cost. So, the objective of this work is the parallel processing of <b>evolutionary</b> <b>algorithms</b> on a general-purpose architecture (cluster of workstations), programmed with a simple and very well-know technique such as message passing. ...|$|R
40|$|The task of {{this thesis}} {{was focused on}} {{comparison}} selected <b>evolutionary</b> <b>algorithms</b> for their success and computing needs. The paper discussed the basic principles and concepts of <b>evolutionary</b> <b>algorithms</b> used for optimization problems. Author programmed selected <b>evolutionary</b> <b>algorithms</b> and subsequently tasted on various test functions with exactly the given input conditions. Finally the algorithms were compared and evaluated the results obtained for different settings...|$|R
50|$|They {{reduce the}} amount of errors by trying to find the best route and weight through the neural network which is an <b>evolutionary</b> <b>algorithm.</b>|$|E
5000|$|Clustering {{may be used}} to {{identify}} different niches within the population of an <b>evolutionary</b> <b>algorithm</b> so that reproductive opportunity can be distributed more evenly amongst the evolving species or subspecies.|$|E
50|$|Evolutionary {{programming}} {{is one of}} the four major <b>evolutionary</b> <b>algorithm</b> paradigms. It is similar to genetic programming, but the structure of the program to be optimized is fixed, while its numerical parameters are allowed to evolve.|$|E
40|$|A {{new model}} for {{evolving}} <b>Evolutionary</b> <b>Algorithms</b> (EAs) is proposed in this paper. The model {{is based on}} the Multi Expression Programming (MEP) technique. Each MEP chromosome encodes an evolutionary pattern which is repeatedly used for generating the individuals of a new generation. The evolved pattern is embedded into a standard evolutionary scheme which is used for solving a particular problem. Several <b>evolutionary</b> <b>algorithms</b> for function optimization are evolved by using the considered model. The evolved <b>evolutionary</b> <b>algorithms</b> are compared with a human-designed Genetic Algorithm. Numerical experiments show that the evolved <b>evolutionary</b> <b>algorithms</b> can compete with standard approaches for several well-known benchmarking problems...|$|R
50|$|EDAs {{belong to}} the class of <b>evolutionary</b> <b>algorithms.</b> The main {{difference}} between EDAs and most conventional <b>evolutionary</b> <b>algorithms</b> is that <b>evolutionary</b> <b>algorithms</b> generate new candidate solutions using an implicit distribution defined {{by one or more}} variation operators, whereas EDAs use an explicit probability distribution encoded by a Bayesian network, a multivariate normal distribution, or another model class. Similarly as other <b>evolutionary</b> <b>algorithms,</b> EDAs can be used to solve optimization problems defined over a number of representations from vectors to LISP style S expressions, and the quality of candidate solutions is often evaluated using one or more objective functions.|$|R
40|$|Many {{experiments}} ave {{shown that}} <b>evolutionary</b> <b>algorithms</b> are useful randomized search heuristics for optimization problems. In {{order to learn}} more about the reasons for their efficiency and in order to obtain proven results on <b>evolutionary</b> <b>algorithms</b> it is necessary to develop a theory of <b>evolutionary</b> <b>algorithms.</b> Such a theory is still in its infancy. A major part of a theory is the analysis of different variants of <b>evolutionary</b> <b>algorithms</b> on selected functions. Several results of this kind have been obtained during the last years. Here important analytical tools are presented, discussed, and applied to well-chosen example functions...|$|R
