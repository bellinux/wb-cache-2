3|2051|Public
40|$|This paper {{describes}} {{the framework of}} the proposed intelligent structural design system, ISTRUDS, currently under development, and an implemented example, IPDOJS, intended for the preliminary design of fixed-steel offshore jacket structures. The framework comprises of a knowledge-based system development tool, a conventional structural analysis and design package, and an interfacing automatic data generator cum <b>interactive</b> <b>graphic</b> <b>editor.</b> Function of the latter is essentially to couple the first two tools into an integrated system so that the expertise knowledge in the implemented expert system can be used to guide the numerical procedures embedded in the analysis and design package. An <b>interactive</b> <b>graphic</b> <b>editor</b> has also been provided to facilitate visual modification of the pre- and postprocessed structural model. The objective of the example is to illustrate an approach to the development of an intelligent structural design system for the design of offshore and/or onshore structures. link_to_subscribed_fulltex...|$|E
40|$|THIS PAPER DESCRIBES THE INTERACTIVE, MENU-DRIVEN PROGRAM REVIEW WHICH RUNS ON A SMALL COMPUTER VISION SYSTEM BASED ON AN IBM-PC/AT IT WAS CONCEIVED FOR REVIEWING VIDEO RECORDINGS AND SURVEYING CAMERA SIGNALS TO DETECT SCENE CHANGES IN THE REAL-TIME SEQUENCE OF NATURAL VIDEO IMAGES. THE PROGRAM CONTAINS AN <b>INTERACTIVE</b> <b>GRAPHIC</b> <b>EDITOR</b> FOR THE CREATION OR MODIFICATION OF POLYLINES AND A MODULE FOR THE EVALUATION OF THE POLYLINE CORRELATION TECHNIQUE ON VARIOUS SCENE CHANGES IN DIFFERENT TYPES OF IMAGES. NA-NOT AVAILABL...|$|E
40|$|Goal of {{this thesis}} was {{development}} of <b>interactive</b> <b>graphic</b> <b>editor</b> for graphic representation, examinationh and annotating of records of electrohysterogram (electromyogram of uterus). We developed a {{graphic user interface}} LANNOT, which displays signals of records, allows manual and semi-automatic setting, deleting and examining of annotations, full editing of accompanied clinical information, generation of scripts and generation of new procedures. The types of the annotations should regard true contractions, other electrical activities of uterus, baby movements, and noise of signals. The interface was developed using Netbeans IDE tool to develop interactive graphic user interfaces. The developed editor is based on object-action paradigm. During designing of the editor, we followed Nielsen's principles of interface design and commonly accepted guidelines of user interface design, while the most important usability dimension was efficiency. The developed editor will be used by expert obstetricians during their clinical praxis. It will {{also be used for}} annotating of international, freely available, reference TPEHG DB (Term Pre-term ElectroHysteroGram DataBase) database. The annotations set by expert obstetricians regarding contractions of uterus and other electrical activities of uterus, will allow different kinds of automatic analysis of records and evaluation of their performance...|$|E
40|$|International audienceThis paper {{describes}} an <b>interactive</b> <b>graphics</b> <b>editor</b> for designing illustrations to be inserted in documents (diagrams, flow-charts, functional schemas, [...] .). The main {{feature of this}} editor is the possibility to establish relationships between graphics objects at creation time. Those relationships are retained for further use in editing operations. The editor has been implemented on a PERQ machine running the Perq Operating System...|$|R
40|$|This {{documentation}} contains detailed specication of the Picture Interchange Coding (PIC) le format. PIC is a exible format {{suitable for}} the encoding of graphical and related data. The PIC data format has been designed for and is {{used in conjunction with}} EDEN-based <b>interactive</b> <b>graphics</b> <b>editors.</b> The functional specication is closely related to that of CGM, CGI and PHIGS. The document presents an overview of the basic concepts of EDEN and PIC, the functiona...|$|R
40|$|SPACS is an <b>interactive</b> <b>graphics</b> <b>editor</b> for {{use with}} a stylus/tablet input device in {{conjunction}} with a graphics display terminal. SPACS is well suited for making tables, flow charts, logic diagrams, and other similar schematic diagrams. The user may ultimately obtain a hard copy of her work via the Xerox Graphic Processor (XGP). SPACS is composed of a large PDP- 11 program, where the picture processing is performed, and a SAIL program on the PDP- 10, which acts as an I/O link for saving and retrieving files. In addition there is another SAIL program for creating image files for the XG...|$|R
40|$|Traditionally, {{people have}} created computer-generated images by writing {{programs}} in {{a programming language}} that supports <b>graphics.</b> More recently, <b>interactive</b> <b>graphics</b> <b>editors</b> have become commonplace. <b>Graphics</b> <b>editors</b> are easy to use but lack many of the capabilities found in graphics programming languages. This deficiency is intrinsic to graphics editors; {{it is not a}} result ofneglect or incompetence by the implementer. Tweedle is a <b>graphics</b> <b>editor</b> that attempts to bridge this gap by using a program as its internal representation for a picture. During an editing session the user can modify either the picture itself or the program representation; the editor modifies the other to keep the two consistent. The language used by the editor contains features that allow the editor to incrementally execute parts ofa program in response to a change so that the picture can be regenerated without completely reexecuting the program. The use of a procedural representation allows the user to create pictures with structure, repetition, recursion, and calculated point values. It further allows him to define parts of a drawing as variants of other parts; these variants can differ from their original objects in quite arbitrary ways but still respond to changes made to the original. The language supports linking different part...|$|R
40|$|Effective {{graphics}} {{are essential}} to modern statistical analysis. SAS 9. 1 introduced an experimental extension to the Output Delivery System (ODS), which is used by over two dozen SAS/STAT and SAS/ETS procedures to create statistical graphics as automatically as they create tables. This extension, referred to as ODS Statistical Graphics (or ODS Graphics for short), requires minimal additional syntax, and it provides displays commonly needed for data analysis and statistical modeling, including scatter plots, histograms, and box-and-whisker plots. General ODS features, such as styles and destination statements, apply equally to tables and graphs. With the production release of ODS Graphics in SAS 9. 2, many more statistical procedures have been modified to use this new functionality; see Appendix A for a list. For example, PROC LOGISTIC produces effects plots, and PROC RSREG produces contour and ridge plots. New SAS/GRAPH procedures, as well as existing SAS/QC procedures, also take advantage of ODS Graphics functionality. SAS 9. 2 introduces an <b>interactive</b> <b>graphics</b> <b>editor,</b> with which you can make immediate, data-specific changes to your graphs, such as customizing titles and annotating points. SAS 9. 2 also adds ODS styles that are designed specifically for statistical work. In addition to describing this new work, this paper presents the basics of creating, modifying, and managing graphics. Note: At {{the time of this}} writing, some of the features described in this paper were being completed. When SAS 9. 2 is released, an updated version of this paper will be provided in the Papers section a...|$|R
40|$|The primary {{scheduling}} tool in {{use during}} the Spacelab Life Science (SLS- 1) planning phase was the operations research (OR) based, tabular form Experiment Scheduling System (ESS) developed by NASA Marshall. PLAN-IT is an artificial intelligence based <b>interactive</b> <b>graphic</b> timeline <b>editor</b> for ESS developed by JPL. The PLAN-IT software was enhanced {{for use in the}} scheduling of Spacelab experiments to support the SLS missions. The enhanced software SLS-PLAN-IT System was used to support the real-time reactive scheduling task during the SLS- 1 mission. SLS-PLAN-IT is a frame-based blackboard scheduling shell which, from scheduling input, creates resource-requiring event duration objects and resource-usage duration objects. The blackboard structure is {{to keep track of the}} effects of event duration objects on the resource usage objects. Various scheduling heuristics are coded in procedural form and can be invoked any time at the user's request. The system architecture is described along with what has been learned with the SLS-PLAN-IT project...|$|R
5000|$|... 3,936,712 <b>Interactive</b> <b>graphic</b> system (with others) (<b>interactive</b> <b>graphics)</b> ...|$|R
5000|$|Graphics suite (raster <b>graphics</b> <b>editor,</b> vector <b>graphics</b> <b>editor,</b> image viewer) ...|$|R
50|$|VRR (a Vector-based <b>gRaphic</b> <b>editoR)</b> is a {{free and}} open source vector <b>graphics</b> <b>editor</b> {{application}} designed especially for creating illustrations of mathematical articles.|$|R
40|$|Circuit {{design and}} mask {{development}} sequence are improved by using {{general purpose computer}} with <b>interactive</b> <b>graphics</b> capability establishing efficient two way communications link between design engineer and system. <b>Interactive</b> <b>graphics</b> capability places design engineer in direct control of circuit development...|$|R
40|$|Abstract <b>Interactive</b> <b>graphics</b> {{provide a}} very {{important}} tool that facilitates the process of exploratory data and model analysis which is a crucial step in real-world applied statistics. Only a very limited set of software exists that provides truly <b>interactive</b> <b>graphics</b> for data analysis, partially {{because it is not}} easy to implement. Very often specialized software is created to offer graphics for a particular problem, but many fundamental plots are omitted since it is not considered new research. In this paper we discuss a general framework that allows to create <b>interactive</b> <b>graphics</b> software on a sound foundation that offers consistent user interface, fast prototyping of new plots and extensibility to support interactive models. In addition, we also discuss one implementation of the general framework: iPlots eXtreme- next-generation <b>interactive</b> <b>graphics</b> for analysis of large data in R. It provides most fundamental plot types and allows new interactive plots to be created. The implementation raises <b>interactive</b> <b>graphics</b> performance to an entirely new level. We will discuss briefly several methods that allowed us to achieve this goal and illustrate the use of advanced programmability features in conjunction with R. Keywords <b>interactive</b> <b>graphics</b> · software · data analysis...|$|R
40|$|Approved {{for public}} release; {{distribution}} in unlimited. RADIK is an <b>interactive</b> <b>graphics</b> and text editing system {{designed for use}} with an ADAGE AGT/ 10 graphics computer, either in a stand-alone mode, or in conjunction with an XDS 9300 computer. The thesis presents an overview of desirable attributes and capabilities of an <b>interactive</b> <b>graphics</b> display system. A description is given of the graphics display system presently in use at the Naval Postgraduate School Computer Laboratory, along with its apparent deficiencies. Objectives for an improved <b>graphics</b> and text <b>editor</b> are presented, in addition to results achieved and problems encountered while designing RADIK. A brief summary of results and applications is presented and implementation of RADIK is proposed. Assembly language computer programs developed during the work are appended for reference. [URL] United States Nav...|$|R
40|$|The paper {{explores the}} {{feasibility}} of using <b>interactive</b> <b>graphic</b> based solution procedures in location problems with discrete choices. It compares solutions generated through <b>interactive</b> <b>graphics</b> with those generated through optimization for a problem context where service centres had to be located in rural India. The comparison demonstrates {{the feasibility of}} generating near optimal solutions for problems with a certain dimensionality. Broad features of the graphic software are described. The paper also highlights other advantages and limitations of the <b>interactive</b> <b>graphic</b> procedure. ...|$|R
50|$|Unlike modern <b>graphics</b> <b>editors,</b> such as Adobe Photoshop, most Amiga <b>graphics</b> <b>editors</b> {{were heavily}} {{oriented}} towards the bitmapped and bitplaned display modes {{of the native}} Amiga chipset, and in Deluxe Paint this was most prominent.|$|R
5000|$|D3.js: <b>Interactive</b> <b>graphic</b> Javascript library (from Zenoss Core 5).|$|R
50|$|Photon Paint is a Hold-And-Modify (HAM) based bitmap <b>graphics</b> <b>editor</b> for the Commodore Amiga, first {{released}} in 1987. Photon Paint {{was the first}} bitmap <b>graphics</b> <b>editor</b> to incorporate 3D solid modeling and texture mapping {{as an integral part}} of the program.|$|R
40|$|The {{desire to}} create unique things and give free rain to one's {{imagination}} {{served as a}} powerful impetus {{to the development of}} digital art and design software. The commoner was the use of computers the wider variety of professional software was developed. Nowadays the creators and computer designers are receiving more and more new and advanced programs that allow their ideas becoming virtual reality. This research paper looks at the history of the development of <b>graphic</b> <b>editors</b> from the simplest to the most modern and advanced. This brief survey includes the history of different <b>graphic</b> <b>editors</b> creation, their features and abilities. This paper highlights the two basic branches of <b>graphic</b> <b>editors</b> these that are in free use and commercial <b>graphic</b> <b>editors</b> design software. The researcher selected the most powerful and influential <b>graphic</b> <b>editors</b> design software brands like Paint. NET and GIMP among free software and commercial Adobe Photoshop. This paper also dwells upon the way digital art transferred from the exclusively professional business into the hobby for ordinary users. This research paper bears implications for those who are interested in features and potentiality of most popular <b>graphic</b> <b>editors</b> design software...|$|R
40|$|This thesis {{addresses}} {{the implementation of}} gedit, a constraint-based <b>graphics</b> <b>editor</b> for exploring constraint techniques in a graphics system and extending a database system with graphics processing facility. As a graphic operation of the relational database system relix, gedit provides an <b>interactive</b> <b>graphics</b> edit window for the relix user to draw and save graphics as a database relation. A constraint technique is used in gedit {{as a means for}} making precise graphics and constructing new graphics by applying constraints to existing graphics. The abstract graphics description is represented as five kinds of primitive drawings: point, circle, polyline, polygon, and text. A constraint is visualized on the screen as an icon which shows the relationship among the graphics objects constrained. A set of basic commands for graphics and constraints are presented. A constraint satisfaction mechanism for building up simultaneous equations for constraints and solving the system of equations to get the expected result is also provided. The design and implementation of gedit are given in object-oriented programming style...|$|R
50|$|Comparison {{with other}} <b>graphics</b> <b>editors.</b>|$|R
5000|$|... "Sunken Cathedral", <b>interactive</b> <b>graphic</b> album on iPad (The GRALBUM Collective) ...|$|R
40|$|The {{characteristics}} of an <b>interactive</b> <b>graphics</b> systems {{to facilitate the}} finite element method of structural analysis are described. The finite element model analysis consists of three phases: (1) preprocessing (model generation), (2) problem solution, and (3) postprocessing (interpretation of results). The advantages of <b>interactive</b> <b>graphics</b> to finite element structural analysis are defined...|$|R
50|$|Also {{on staff}} are the Photography <b>Editor,</b> Production Manager, <b>Graphics</b> <b>Editor,</b> Copy Editor, Web Editor, and Delivery Coordinator.|$|R
50|$|Wonderbrush is a bitmap <b>graphics</b> <b>editor.</b>|$|R
5000|$|WSJ - Social Security Policy Options <b>Interactive</b> <b>Graphic</b> - June 2011 ...|$|R
5000|$|The Wall Street Journal {{director}} of <b>interactive</b> <b>graphics</b> Stuart A. Thompson ...|$|R
5000|$|... an <b>interactive</b> <b>graphic</b> {{system that}} {{supports}} animations and transparent areas in 3D ...|$|R
50|$|There is no hard, fast rule {{regarding}} the programs {{to be included}} in a graphics application suite, but most will include at least a bitmap <b>graphics</b> <b>editor</b> and a vector <b>graphics</b> <b>editor.</b> In addition to these, the suite may contain VRML editors, animation editors, and morphing tools.|$|R
5000|$|... #Caption: [...] Shire Hall and Agincourt Square {{depicted}} in The <b>Interactives</b> <b>graphic</b> novel ...|$|R
5000|$|... an <b>interactive</b> <b>graphic</b> album for iPad {{with the}} GRALBUM Collective in Brooklyn NY ...|$|R
5000|$|Graphics: mtPaint (raster <b>graphics</b> <b>editor),</b> xzgv (image viewer) ...|$|R
30|$|Our {{approach}} {{based on}} annotations generates specifications of <b>graphic</b> <b>editors</b> that have architectural views that show a decomposed application {{from a high}} level to a low level, according to the comprehension necessities based in software metrics. This allows developers to obtain <b>graphic</b> <b>editors</b> in less time, regardless of technology.|$|R
5000|$|... 1986 [...] "Real time" [...] <b>interactive</b> <b>graphics</b> {{offered as}} an option for the SeriesTenB ...|$|R
5000|$|... #Subtitle level 4: Container formats of raster <b>graphics</b> <b>editors</b> ...|$|R
