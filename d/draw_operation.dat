6|310|Public
25|$|Originally, {{data was}} simply passed one-way from a central {{processing}} unit (CPU) to a graphics processing unit (GPU), then to a display device. However, as time progressed, it became valuable for GPUs to store at first simple, then complex structures of data to be passed back to the CPU that analyzed an image, or a set of scientific-data represented as a 2D or 3D format that a video card can understand. Because the GPU has access to every <b>draw</b> <b>operation,</b> it can analyze data in these forms quickly, whereas a CPU must poll every pixel or data element much more slowly, as the speed of access between a CPU and its larger pool of random-access memory (or in an even worse case, a hard drive) is slower than GPUs and video cards, which typically contain smaller amounts of more expensive memory that is much faster to access. Transferring {{the portion of the}} data set to be actively analyzed to that GPU memory in the form of textures or other easily readable GPU forms results in speed increase. The distinguishing feature of a GPGPU design is the ability to transfer information bidirectionally back from the GPU to the CPU; generally the data throughput in both directions is ideally high, resulting in a multiplier effect on the speed of a specific high-use algorithm. GPGPU pipelines may improve efficiency on especially large data sets and/or data containing 2D or 3D imagery. It is used in complex graphics pipelines as well as scientific computing; more so in fields with large data sets like genome mapping, or where two- or three-dimensional analysis is useful especially at present biomolecule analysis, protein study, and other complex organic chemistry. Such pipelines can also vastly improve efficiency in image processing and computer vision, among other fields; as well as parallel processing generally. Some very heavily optimized pipelines have yielded speed increases of several hundred times the original CPU-based pipeline on one high-use task.|$|E
50|$|A <b>draw</b> <b>operation</b> can {{therefore}} be described as creating a new, stroked object and then filling that object.|$|E
50|$|When video {{mirroring}} is active, {{each time}} the system draws to the primary video device at a location inside the mirrored area, {{a copy of the}} <b>draw</b> <b>operation</b> is executed on the mirrored video device in real-time.|$|E
5000|$|For best {{dimensional}} control (when component requirements are exacting), a secondary <b>drawing</b> <b>operation</b> is added after the extrusion of most metals. Although such an operation is entirely feasible, it does entail additional tooling, handling, and cost. Therefore, the designer should specify liberal enough tolerances, if possible, so that secondary <b>drawing</b> <b>operations</b> are not required.|$|R
50|$|These {{objects are}} a {{necessary}} part of every Java 2D <b>drawing</b> <b>operation.</b>|$|R
5000|$|This type {{of steel}} is {{suitable}} for <b>drawing</b> <b>operation</b> (except severe <b>drawing).</b>|$|R
50|$|In {{addition}} to the fill operation, Java 2D provides a <b>draw</b> <b>operation.</b> While fill draws {{the interior of a}} shape, draw draws its outline. The outline {{can be as simple as}} a thin line, or as complicated as a dashed line with each dash having rounded edges.|$|E
50|$|Originally, {{data was}} simply passed one-way from a central {{processing}} unit (CPU) to a graphics processing unit (GPU), then to a display device. However, as time progressed, it became valuable for GPUs to store at first simple, then complex structures of data to be passed back to the CPU that analyzed an image, or a set of scientific-data represented as a 2D or 3D format that a video card can understand. Because the GPU has access to every <b>draw</b> <b>operation,</b> it can analyze data in these forms quickly, whereas a CPU must poll every pixel or data element much more slowly, as the speed of access between a CPU and its larger pool of random-access memory (or in an even worse case, a hard drive) is slower than GPUs and video cards, which typically contain smaller amounts of more expensive memory that is much faster to access. Transferring {{the portion of the}} data set to be actively analyzed to that GPU memory in the form of textures or other easily readable GPU forms results in speed increase. The distinguishing feature of a GPGPU design is the ability to transfer information bidirectionally back from the GPU to the CPU; generally the data throughput in both directions is ideally high, resulting in a multiplier effect on the speed of a specific high-use algorithm. GPGPU pipelines may improve efficiency on especially large data sets and/or data containing 2D or 3D imagery. It is used in complex graphics pipelines as well as scientific computing; more so in fields with large data sets like genome mapping, or where two- or three-dimensional analysis is useful especially at present biomolecule analysis, protein study, and other complex organic chemistry. Such pipelines can also vastly improve efficiency in image processing and computer vision, among other fields; as well as parallel processing generally. Some very heavily optimized pipelines have yielded speed increases of several hundred times the original CPU-based pipeline on one high-use task.|$|E
40|$|Sheet {{metal forming}} is {{simulated}} by finite element methods using a stress resultant constitutive {{law in this}} paper. A Lagrangian description of axisymmetric and plane-strain shell deformation is first reviewed. Then a stress resultant constitutive law in rate form is presented, where the effect of thickness reduction due to large plastic deformation is considered. A finite element formulation in terms of stress resultants and their work-conjugate generalized strain rates is derived based on the virtual work principle. A hemispherical punch stretching operation and a plane-strain <b>draw</b> <b>operation</b> are simulated by a finite element program based on the finite element formulation. The results of these finite element simulations are in good-agreement with those using the through-the-thickness integration method. The results of the hemispherical punch stretching simulation suggest that the coupling term of moments and membrane forces of the modified Ilyushin yield function should be eliminated to avoid numerical instability under stretching-dominated conditions for this rate-independent plasticity formulation. Further, {{the results suggest that}} the hardening rule in a power-law form based on the small-strain approach must be modified to take account for finite deformation effects of combined stretching and bending. Under the plane-strain <b>draw</b> <b>operation,</b> the sheet experiences a large amount of bending before the final stretching. The simulation based on the stress resultant constitutive law can produce this essential aspect of deformation pattern as that of the through-the-thickness integration method, whereas a simulation based on a membrane theory cannot. In conclusion, the results of these simulations indicate that a finite element program based on the stress resultant constitutive law can simulate sheet-forming processes with much shorter computational time than that based on the through-the-thickness integration method...|$|E
50|$|Drawing: The <b>drawing</b> <b>{{operation}}</b> is {{very similar}} to the forming operation except that the <b>drawing</b> <b>operation</b> undergoes severe plastic deformation and the material of the part extends around the sides. A metal cup with a detailed feature at the bottom {{is an example of the}} difference between formed and drawn. The bottom of the cup was formed while the sides were drawn.|$|R
40|$|The project {{looks for}} a {{solution}} to optimalization of rotational deep drawn part with flange production. It deals with sewerage drain, which is produced by conventional tool to two deep <b>drawing</b> <b>operations.</b> The used material is austenitic Cr-Ni stainless steel 1. 4301. Suitability of this material for deep <b>drawing</b> <b>operations</b> was considered {{by means of the}} tensile test and the Erichsen test. On the bases of these results, serializability of production and theoretic relationships for determination of number of deep <b>drawing</b> <b>operations,</b> it was decided upon one operation serial production, by conventional tool without attenuation thickness of sheet. Production will take place on hydraulic press Dieffenbacher PO 250 with magnetic tool fastening. The deep drawing tool was designed and constructed. For series of 2 000 units per year the rate of return was calculated after 4, 7 years, while using the punch from the current second deep <b>drawing</b> <b>operation</b> it was calculated after 3, 4 years...|$|R
50|$|A mirror {{driver is}} a display driver for a virtual device that mirrors the <b>drawing</b> <b>operations</b> {{of one or}} more {{additional}} physical display devices.|$|R
50|$|However, {{performing}} {{this entire}} sequence of steps for each <b>drawing</b> <b>operation</b> {{would be very}} inefficient. Java 2D therefore optimizes common <b>drawing</b> <b>operations</b> so {{that many of these}} steps can be skipped. If the paint is a simple solid color, for instance, {{there is no need to}} actually command it to generate a list of colors to be painted. Likewise, if the default fully opaque composite is in use, actually asking it to perform the compositing operation is unnecessary and would waste effort.|$|R
50|$|The {{earliest}} railways in Scotland were waggonways, {{intended for}} horse <b>drawn</b> <b>operation,</b> {{in most cases}} from a colliery or other mineral source, to a waterway for onward transport.|$|R
50|$|A {{shape in}} Java 2D is a {{boundary}} which defines an inside and an outside. Pixels inside the shape {{are affected by}} the <b>drawing</b> <b>operation,</b> those outside are not.|$|R
5000|$|Vector <b>drawing</b> <b>operations</b> {{could be}} done with either {{absolute}} (pixel-based) or fixed relative coordinates. The latter allowed window contents to scaled when a window was resized without recalculation of coordinates.|$|R
40|$|International audienceThis paper {{proposes a}} model which predicts the {{feasibility}} of deep <b>drawing</b> <b>operations</b> of thin plates for various directions of solicitation. The first part consists of a theoretical presentation and a comparison of experimental results. The influence of anisotropic parameters and their implications for the surface stress criteria are then analysed. It is possible to predict the optimal direction of solicitation (in direct or broken path) to increase the strains during deep <b>drawing</b> <b>operations</b> by using this approach. Finally, we propose a modification of the model to improve understanding {{of the influence of}} rate strain on forming limit stress and strain diagrams...|$|R
5000|$|A {{software}} implementation of double buffering has all <b>drawing</b> <b>operations</b> store their results in some region of system RAM; any such region {{is often called}} a [...] "back buffer". When all <b>drawing</b> <b>operations</b> are considered complete, the whole region (or only the changed portion) is copied into the video RAM (the [...] "front buffer"); this copying is usually synchronized with the monitor's raster beam {{in order to avoid}} tearing. Double buffering necessarily requires more memory and CPU time than single buffering because of the system memory allocated for the back buffer, the time for the copy operation, and the time waiting for synchronization.|$|R
50|$|The {{first route}} from Adelaide to Port Adelaide was only 6 miles long, quite {{straight}} and flat and suitable for horse <b>drawn</b> <b>operation.</b> The initial line {{was to be}} single track, with frequent crossing loops.|$|R
40|$|International audienceEffects of {{multiple}} <b>drawing</b> <b>operations</b> on As 38 Se 62 and Ge 10 As 22 Se 68 chalcogenide microstructured optical fibers (MOF) are investigated. Fabrication of small-core single-mode chalcogenide MOF's with 3 rings of holes necessitates a two-step <b>drawing</b> <b>operation</b> which may conduct to additional optical losses, {{as compared to}} single-step processes. Thus, glasses with high stability against crystallization are required. With this respect, Ge 10 As 22 Se 68 single-mode microstructured optical were obtained with optical losses equal to 1 dB/m at 1. 55 µm and lower than 1 dB/m at 3. 0 µm. Core diameter is as small as 4 - 6 µm...|$|R
50|$|In computing, Java 2D is an API {{for drawing}} {{two-dimensional}} graphics using the Java programming language. Every Java 2D <b>drawing</b> <b>operation</b> can ultimately {{be treated as}} filling a shape using a paint and compositing the result onto the screen.|$|R
50|$|During any <b>drawing</b> <b>operation,</b> {{there is}} a source (the pixels being {{produced}} by the paint) and a destination (the pixels already onscreen). Normally, the source pixels simply overwrite the destination pixels, but the composite allows this behavior to be changed.|$|R
40|$|This thesis paper {{presents}} {{a study on}} the relationship between burr and cutting clearance of commonly used sheet metal in automotive industry in Malaysia in relation to piercing and blanking processes. It reviews the result between mechanical and hydraulic presses and between SPCC (Cold rolled material) and SPHC (Hot rolled material) which are commonly used in automotive industry. The chosen of these two materials are because of its high usage in automotive industries in Malaysia. SPCC is most popular because of its attractive surface finished. It is suitable for bending and simple <b>drawing</b> <b>operations.</b> For SPHC, suitable mainly for flat sheets or simple bending <b>operations</b> and simple <b>drawing</b> <b>operations</b> are also possible...|$|R
50|$|In {{the area}} of 2D {{computer}} graphics known as vector graphics, the (approximate) computation of parallel curves is involved {{in one of the}} fundamental <b>drawing</b> <b>operations,</b> called stroking, which is typically applied to polylines or polybeziers (themselves called paths) in that field.|$|R
5000|$|When GRAPHIC {{targets are}} attached, a REDRAW option can be {{specified}} which buffers the results of <b>drawing</b> <b>operations</b> until they are specifically requested. Using this technique reduces flicker {{in a similar way}} to the technique of drawing on memory DCs [...] when using the GDI API.|$|R
50|$|Many of the {{functions}} in USER32.DLL call upon GDI functions exported by GDI32.DLL to do the actual rendering of the various elements of the user interface.Some types of programs will also call GDI functions directly to perform lower-level <b>drawing</b> <b>operations</b> within a window previously created via USER32 functions.|$|R
50|$|Using PB GRAPHIC statements, a GRAPHIC (WINDOW, BITMAP or control) {{is first}} {{selected}} as the current GRAPHIC target, then operations are done on it without requiring it to be identified again. Contrast this with the GDI API approach, where the Device Context handle is required for every <b>drawing</b> <b>operation.</b>|$|R
40|$|Abstract. A novel hydro-mechanical {{deep drawing}} for {{magnesium}} alloy sheets at gradient temperature is proposed and studied. The novel process {{is on the}} basis of the study in sheet metal forming, the properties of magnesium alloy and the forming characteristics of workpiece in deep drawing. It indicates that the deep <b>drawing</b> <b>operation</b> of magnesium alloy sheet should be done in warm condition due to the poor plasticity of magnesium alloy. In addition, the reasonable temperature gradient of the workpiece is necessary in light on the principle of deep drawing. The essence why the limited drawing ratio can be improved with the new process is demonstrated. The reasonable temperature gradient can be obtained by the fluid pressure control during deep <b>drawing</b> <b>operation.</b> Thus the feasibility of the new technology is verified...|$|R
40|$|Acrylic enamel spray {{containing}} metallic copper pigment lubricates {{refractory metal}} tubing during cold <b>drawing</b> <b>operations</b> {{so that the}} tubing surface remains free from scratches and nicks and does not seize in the die. Zirconium alloys, zirconium, tantalum alloys, niobium alloys, vanandium alloys and titanium alloys have been drawn using this lubricant...|$|R
50|$|With the {{drafting}} machine one can perform {{a series of}} <b>drawing</b> <b>operations</b> that otherwise could only be achieved with a much more complex use of the classic ruler square and protractor, as, for example, drawing parallel lines, orthogonal lines, inclined lines according to a preset angle, measurement of angles, etc.|$|R
5000|$|Tailor Heat Treated Blanks are sheets that exhibit locally {{different}} material properties. A local {{heat treatment}} {{is used to}} change the properties of aluminium alloys, for example, that show precipitation hardening. With this technology, the material properties can be optimised for subsequent deep <b>drawing</b> <b>operations</b> or for the final industrial application.|$|R
40|$|Previous {{conceptual}} structure editors have focussed {{on providing}} specialised drawing tools. Although the <b>drawing</b> <b>operations</b> in these tools produce the appropriate notation, {{they can not}} directly support the language of conceptual structures. Authors are required to consider both the logistics of creating neat drawings, {{as well as their}} meaning. Logicians investigating new proof techniques are hampered when experimenting with operations on a representation that must be explicitly drawn. Researchers in various domains who want to produce customised interfaces with varying operational vocabularies are burdened by the task of coercing a drawing metaphor to include operational aspects. This work presents an approach to the conceptual structure editor that supports the underlying language directly. All <b>drawing</b> <b>operations</b> are direct implementations of theoretical operations. Direct manipulation of graphs through the interface conform to theory entailment. The architecture supports direct mani [...] ...|$|R
40|$|AbstractThe {{power train}} {{of a modern}} servo-screw press with low {{rotational}} moment of inertia provides higher dynamics and {{a new kind of}} flexibility in forming and stamping processes compared to conventional servo presses. In this paper a new technology for deep drawing on servo-screw presses called cushion-ram pulsation is described. It uses superimposed low-frequency vibrations between 10 Hz and 50 Hz at the cushion and the press ram. For deep <b>drawing</b> <b>operations,</b> the high tensile stresses in the frame of cylindrical cup usually lead to a reduction of material thickness. Thus, and {{due to the lack of}} work hardening, fractures frequently occur in the punch radius. The process developed here shifts critical loads to higher drawing ratios by decoupling the <b>drawing</b> <b>operation</b> and the prevention of wrinkles. A high frequency of the cushion-ram pulsation is necessary to allow high productivity. Technological results will be increasingly determined by the machine...|$|R
25|$|Annealing: This is {{a thermal}} {{treatment}} generally used {{to soften the}} material being drawn, to modify the microstructure, the mechanical properties and the machining characteristics of the steel and/or to remove internal stresses in the product. Depending on the desired characteristics of the finished product, annealing may be used before, during (between passes) or after the cold <b>drawing</b> <b>operation,</b> depending on material requirements.|$|R
30|$|The {{difference}} in RTT among <b>drawing</b> <b>operations</b> is particularly noticeable in Wi-Fi (Fig.  4). When the hand {{does not move}} (Hold), there is a 90 % probability that the RTT is shorter than 20 ms. However, when the hand moves (Wave and Spiral), the RTT often exceeds 150 ms. Thus, {{it can be said}} that with Wi-Fi, hand movements influence communication greatly.|$|R
50|$|Annealing: This is {{a thermal}} {{treatment}} generally used {{to soften the}} material being drawn, to modify the microstructure, the mechanical properties and the machining characteristics of the steel and/or to remove internal stresses in the product. Depending on the desired characteristics of the finished product, annealing may be used before, during (between passes) or after the cold <b>drawing</b> <b>operation,</b> depending on material requirements.|$|R
