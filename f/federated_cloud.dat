169|99|Public
5000|$|Computational {{resources}} can be <b>federated</b> (<b>cloud,</b> clusters, virtualized infrastructures, desktop machines) {{into a single}} virtual infrastructure. It provides auto-scaling and ease resource management strategies.|$|E
50|$|In mid-2011 the NIST Cloud Computing Reference Architecture was {{published}} fully describing hybrid clouds, cloud brokers, and so on. In late 2011 NIST published {{a whole set}} of Cloud Computing Technology Roadmaps including referencing the IEEE P2302 approach {{as an example of a}} future national/global <b>federated</b> <b>cloud</b> architecture.|$|E
5000|$|The Open Data Center Alliance is an {{independent}} organization created in Oct. 2010 {{with the assistance of}} Intel to coordinate the development of standards for cloud computing. Approximately 100 companies, which account for more than $50bn of IT spending, have joined the Alliance, including BMW, Royal Dutch Shell and Marriott Hotels. [...] "The Alliance's Cloud 2015 vision is aimed at creating a <b>federated</b> <b>cloud</b> where common standards will be laid down for those in the hardware and software arena." ...|$|E
30|$|Studies {{show that}} {{deploying}} <b>cloud</b> applications on <b>federated</b> <b>clouds</b> [18], can bring several benefits including cost effectiveness, scalability, fault tolerance, and reliability [26 – 28]. We therefore perform an initial {{search for the}} most similar service for the entire application from the available services of all providers, given {{that there is no}} customer preference for specific providers. Although <b>federated</b> <b>clouds</b> may decrease the total price of the deployment entities, applications with multiple deployment entities may suffer from performance degradation and price increases due to communication and data transfer costs between entities deployed on different cloud providers. Inter-cloud communication and interoperability issues remain challenging for cloud providers, which makes deployment over <b>federated</b> <b>clouds</b> a less desirable option in most cases [27]. There are also other challenges related to <b>federated</b> <b>clouds</b> like security, management and monitoring [26, 28]. However, <b>federated</b> <b>clouds</b> could be a much cheaper option for applications that do not require a high amount of communications between their different deployment entities.|$|R
30|$|Given the {{difficulties}} with <b>federated</b> <b>clouds,</b> while <b>federated</b> <b>clouds</b> solutions are considered, we currently favor {{a list of}} services on the same provider for performance purposes. Comparing the total price, the average similarity and {{performance of the services}} for the whole application, we can rank potential providers and recommend the best match.|$|R
30|$|The conceptional and {{technical}} development of fundamental system components for the setup of user-controlled <b>federated</b> <b>clouds.</b>|$|R
40|$|<b>Federated</b> <b>cloud</b> systems {{increase}} {{the reliability and}} {{reduce the cost of}} computational support to an organization. However, the resulting combination of secure private clouds and less secure public clouds impacts on the overall security of the system as applications need to be located within di�erent clouds. In this paper, the entities of a <b>federated</b> <b>cloud</b> system as well as the clouds are assigned security levels of a given security lattice. Then a dynamic ow sensitive security model for a <b>federated</b> <b>cloud</b> system is introduced within which the Bell-LaPadula rules and cloud security rule can be captured. The rest of the paper demonstrates how Petri nets and the associated veri�cation techniques could be used to analyze the security of information ow in <b>federated</b> <b>cloud</b> systems...|$|E
30|$|R 3 - Abstract {{complexity}} of self-adaptiveness. <b>Federated</b> <b>cloud</b> storage setups are typically heterogeneous and dynamic and the supported features are often incompatible. This diversity and dynamicity hinders the proper {{exploitation of the}} full potential of a <b>federated</b> <b>cloud</b> storage paradigm as it increases the {{complexity of}} the administration of applications. For example, providing the self-adaptiveness support (R 2) on top of a <b>federated</b> <b>cloud</b> storage setup introduces another level of complexity in the application code. This involves writing reconfiguration logic on top of the <b>federated</b> <b>cloud</b> storage setup (e.g., to support advanced storage tactics such as auto scaling, temporary spillover, data migration, etc) in the application code. This complexity must be abstracted and concealed from the application developers to the operators and thus enabling them to employ different advanced storage tactics without invasively extending application code.|$|E
40|$|Abstract—Federation {{offers an}} {{affordable}} opportunity for small and medium cloud providers to become as competitive {{as the biggest}} counterparts. However, {{in order to establish}} a <b>federated</b> <b>cloud</b> ecosystem, it is needed to rely on an efficient security infrastructure enabling authentication among clouds. Assuming a scalable <b>federated</b> <b>cloud</b> environment, the management of security can become very hard due to the number of authentications and trusted relationships that have to be established. Nowadays, the latest trend in authentication is the Identity Provider/Service Provider model. This paper aims to investigate a distributed IdP/SP infrastructure based on the concept of delegated authentications, evaluating its possible utilization in a <b>federated</b> <b>cloud</b> scenario...|$|E
30|$|As seen in [1 – 19] most of {{the works}} in clouds concern the study of fixed system models or architecture. There is no {{possibility}} to the <b>federated</b> <b>clouds</b> to acquire new providers with challenged price. In addition, services offered are fixed from the start and the <b>federated</b> <b>clouds</b> cannot provide {{a new kind of}} services while the open clouds federation is more faithful to business reality.|$|R
40|$|Abstract—Cloud {{infrastructures}} provide compelling {{features for}} scientific and engineering applications. <b>Federated</b> <b>clouds</b> additionally promise improved scalability via {{access to a}} larger pool of resources and improved service availability through geographically distributed redundant servers. Effective use of <b>federated</b> <b>clouds</b> requires the creation of portable appliances and consistent appliance management techniques. The StratusLab Marketplace, a platform-agnostic appliance registry, facilitates appliance management in a federated environment. This paper describes the Marketplace design goals, implementation, and security concerns. It also covers the planned improvements based on our experience of running this service in production {{for more than two}} years. I...|$|R
40|$|The {{rapidly growing}} demand for cloud {{services}} in the current business practice has favored {{the success of the}} hybrid clouds and the advent of cloud federation. The available literature of this topic has focused on middleware abstraction to interoperate heterogeneous cloud platforms and orchestrate different management and business models. However, cloud federation implies serious security and privacy issues with respect to data sovereignty when data is outsourced across different judicial and legal systems. This column describes a solution that applies encryption to protect data sovereignty in <b>federated</b> <b>clouds</b> rather than restricting the elasticity and migration of data across <b>federated</b> <b>clouds...</b>|$|R
40|$|Cloud {{computing}} {{changed the}} way of computing as utility services offered through public network. Selecting multiple providers for various computational requirements improves performance and minimizes cost of cloud services than choosing a single cloud provider. <b>Federated</b> <b>cloud</b> improves scalability, cost minimization, performance maximization, collaboration with other providers, multi-site deployment for fault tolerance and recovery, reliability and less energy consumption. Both providers and consumers could benefit from <b>federated</b> <b>cloud</b> where providers serve the consumers by satisfying Service Level Agreement, minimizing overall management and infrastructure cost; consumers get best services with less deployment cost and high availability. Efficient provisioning of resources to consumers in <b>federated</b> <b>cloud</b> is a challenging task. In this paper, the benefits of utilizing services from <b>federated</b> <b>cloud,</b> architecture with various coupling levels, different optimized resource provisioning methods and challenges associated with it are discussed and a comparative study is carried out over these aspects. Comment: 2013 International Conference on Computing, Cybernetics and Intelligent Information Systems (CCIIS),VIT UNIVERSITY, VELLORE, Tamilnadu, Indi...|$|E
30|$|However, <b>federated</b> <b>cloud</b> storage setups {{are prone}} to {{run-time}} dynamicity: many dynamic properties impact the way such a setup is governed and evolved over time, e.g., storage providers enter or leave the market; QoS metrics and SLA guarantees may change over time; etc. In general, existing <b>federated</b> <b>cloud</b> systems are oblivious to dynamic properties of the underlying operational environment, resulting in both sub-optimal data management decisions and costly SLA violations. Additionally, due to the sheer complexity of cloud-based applications coupled with the heterogeneous and volatile nature of <b>federated</b> <b>cloud</b> setups, the complexity of building, maintaining, and expending such applications increases dramatically and therefore managing them manually is no longer simply an option.|$|E
30|$|In practice, <b>federated</b> <b>cloud</b> storage setups {{are subject}} to dynamicity, e.g., {{relevant}} dynamic properties are performance characteristics (i.e., latency and throughput), evolving price conditions, new providers arrival, cloud provider availability (i.e., uptime), etc. Despite this run-time dynamicity, data management decisions across a <b>federated</b> <b>cloud</b> storage setup are commonly based on the static properties of the operational environment (e.g., cloud storage system X always provides significantly better overall performance than the cloud storage system Y). However, solely relying on static properties leads to sub-optimal data management decisions in highly dynamic environments and may eventually results in costly SLA violations. Additionally, as applications increasingly rely on <b>federated</b> <b>cloud</b> storage setups to offer more advanced features, the complexity of managing such applications and their development life cycle also grows in parallel. In essence, managing and engineering such complex software applications requires careful planning, continuous monitoring, optimized configurations, and various other run-time operations. Due to the sheer complexity of such cloud-based applications coupled with the heterogeneous and volatile nature of <b>federated</b> <b>cloud</b> setups, managing and maintaining such complex applications manually is no longer simply an option.|$|E
40|$|Abstract. There {{is growing}} {{interest}} in large-scale resource sharing with emerging architectures such as cloud computing, where globally distributed and commoditized resources can be shared and traded. <b>Federated</b> <b>clouds,</b> a topic of recent interest, aims to integrate different types of cloud resources from different providers, to increase scalability and reliability. In <b>federated</b> <b>clouds,</b> users are rational and maximize their own interest when consuming and contributing shared resources, while globally distributed resource supply and demand changes as users join and leave the cloud dynamically over time. In this paper, we propose a dynamic pricing scheme for multiple types of shared resources in <b>federated</b> <b>clouds</b> and evaluate its performance. Fixed pricing, currently used by cloud providers, {{does not reflect the}} dynamic resource price due to the changes in supply and demand. Using simulations, we compare the economic and computational efficiencies of our proposed dynamic pricing scheme with fixed pricing. We show that the user utility is increased, while the percentage of successful buyer requests and the percentage of allocated seller resources is higher with dynamic pricing. ...|$|R
30|$|Looking in {{the future}} to {{implement}} the whole system with the negotiation protocol communication to get empirical results and demonstrate AMACE effectiveness in addition to trying to provide new features in open <b>federated</b> <b>clouds</b> accomplishment.|$|R
30|$|It is {{noticed in}} the {{flexible}} system model (Fig.  1) interactions among BA organization members (inter organization communications). The request’s migration mechanism and BA organization interactions features used together in AMACE permit to implement open <b>federated</b> <b>clouds.</b>|$|R
40|$|With cloud {{computing}}, the long-envisioned {{dream of}} computing as utility is achieved. Many {{of the current}} standalone cloud providers offer resources and services using pay-per-use fixed pricing. Spot pricing, recently introduced in Amazon EC 2, is more efficient by setting the resource price dynamically, based on demand. However, this pricing scheme, similar to the uniform price auction, is truthful only when supply can be adjusted, such as {{the case of a}} standalone cloud provider. In a <b>federated</b> <b>cloud,</b> where resources from multiple cloud providers are integrated to increase elasticity and reliability, rational users can have a greater impact. In this paper, we evaluate the impact of rationality in a <b>federated</b> <b>cloud,</b> by comparing the consumer welfare achieved by spot pricing, currently used in Amazon EC 2, and a strategy-proof pricing scheme. We consider different EC 2 regions as providers in a <b>federated</b> <b>cloud,</b> and use traces of spot prices to determine the consumer requests and the user welfare. Our results show that spot pricing is not suitable in a <b>federated</b> <b>cloud,</b> where rational users can increase their welfare by being untruthful. 1...|$|E
40|$|The EGI <b>Federated</b> <b>Cloud</b> is a standards-based, {{open cloud}} {{system as well}} as its {{enabling}} technologies that federates institutional clouds to offer a scalable computing platform for data and/or compute driven applications and services. The EGI <b>Federated</b> <b>Cloud</b> is based on open standards and open source Cloud Management Frameworks and offers to its users IaaS, PaaS and SaaS capabilities and interfaces tuned towards the needs of users in research and education. The federation enables scientific data, workloads, simulations and services to span across multiple administrative locations, allowing researchers and educators to access and exploit the distributed resources as an integrated system. The EGI <b>Federated</b> <b>Cloud</b> collaboration established a user support model and a training infrastructure to raise visibility of this service within European scientific communities with the overarching goal to increase adoption and, ultimately increase the usage of e-infrastructures {{for the benefit of the}} whole European Research Area. The paper describes this scalable user support and training infrastructure models. The training infrastructure is built on top of the production sites to reduce costs and increase its sustainability. Appropriate design solutions were implemented to reduce the security risks due to the cohabitation of production and training resources on the same sites. The EGI <b>Federated</b> <b>Cloud</b> educational program foresees different kind of training events from basic tutorials to spread the knowledge of this new infrastructure to events devoted to specific scientific disciplines teaching how to use tools already integrated in the infrastructure with the assistance of experts identified in the EGI community. The main success metric of this educational program is the number of researchers willing to try the <b>Federated</b> <b>Cloud,</b> which are steered into the EGI world by the EGI <b>Federated</b> <b>Cloud</b> Support Team through a formal process that brings them from the initial tests to fully exploit the production resources. © 2015 IEEE...|$|E
30|$|To {{address the}} {{above-mentioned}} concerns, we propose a policy-based and autonomic middleware called SCOPE, which provides self-adaptiveness for data management in federated clouds. As such, SCOPE integrates three key desired features: (i) it continuously monitors the <b>federated</b> <b>cloud</b> setup and then collects, stores, and aggregates the monitored metrics (such as write latency, read latency, uptime, free memory, etc); (ii) it selects (based on the assembled metrics) {{the most suitable}} and appropriate cloud storage provider for data management decisions {{in order to meet}} the promised SLAs, and finally (iii) it autonomously reconfigures (based on the simple, reusable, and extensible configuration policies) the <b>federated</b> <b>cloud</b> storage setup (by identifying performance degradation) and therefore it is no longer required that an operator has to manually monitor and reconfigure the <b>federated</b> <b>cloud</b> storage setup.|$|E
40|$|Cloud {{computing}} {{has emerged}} as popular paradigm that enables the establishment of large scale, flexible computing infrastructures that can offer significant cost savings for both businesses and consumers by allowing compute resources to be scaled dynamically to deal with current or anticipated usage [1]. This concept has been further strengthened {{with the emergence of}} <b>federated</b> computing <b>Clouds</b> that allow users to scale applications across multiple domains to meet Quality of Service targets [2]. However, the challenge of building dependable and robust Clouds remains a critical research problem that has not yet been clearly understood [3], and yet is vital for establishing user confidence in Clouds. This is particularly true when considering Byzantine faults that are arbitrary in nature. This paper analyses the application of Byzantine fault-tolerance to <b>federated</b> <b>Clouds</b> in detail, and presents experimentation performed to analyse the effectiveness of Byzantine fault-tolerance in <b>federated</b> <b>Clouds.</b> We have developed a Cloud framework called FT-FC that allows us to very quickly create diversity-based Byzantine fault-tolerant systems and apply them to <b>federated</b> <b>Clouds,</b> and have produced initial results to demonstrate the feasibility and potential of this approach. We have furthermore identified a number of research problems and challenges {{that need to be addressed}} in order to progress this area further. Our current experimental results, although very initial, are highly encouraging figures, and demonstrate the effectiveness of the FT-FC framework...|$|R
40|$|Enterprises are {{migrating}} towards {{cloud computing}} {{for their ability}} to provide agility, robustness and feasibility in operations. To increase the reliability and availability of services, clouds have grown into <b>federated</b> <b>clouds</b> i. e., union of clouds. There are still major issues in <b>federated</b> <b>clouds,</b> which when solved could lead to increased satisfaction to both service providers and clients alike. One such issue is to select the optimal foreign cloud amongst the federation, which provides services according to the client requirements. In this paper, we propose a model to select the optimal cloud service provider based on the capability and performance of the available clouds in the federation. We use two matrix models to obtain the capability and performance parametric values. They are matched with the client requirements and the optimal foreign cloud service provider is selected. Keyword...|$|R
30|$|Konig et al., 2012 [7] {{is similar}} to other p 2 p {{monitoring}} systems in terms of topology but introduces a powerful query language for obtaining monitoring data {{as opposed to a}} conventional, simple REST API. Additionally the data layer component abstracts over numerous data sources, including other monitoring systems making this work a notable tool for building <b>federated</b> <b>clouds</b> and other architectures which encapsulate existing systems.|$|R
30|$|The {{prototype}} {{itself is}} also implemented in Java and {{operates as a}} service on Tomcat 86 with an exposed configuration dashboard for SaaS providers and their tenants. After the service starts up, it first reads the <b>federated</b> <b>cloud</b> persistence configuration file and the reconfiguration policy file. The <b>federated</b> <b>cloud</b> persistence configuration file includes the configuration details (such ip addresses, port, keyspace, credentials, etc) of the back-end storage systems used in the <b>federated</b> <b>cloud</b> setup. Similarly, the reconfiguration policy file contains a number of rules to determine when to perform a reconfiguration action (e.g., scale up or scale down). After setting these files, the monitoring and the reconfiguration services (i.e., the Monitoring component and the Adaptation Controller component) of the prototype start up and run continuously run in the background.|$|E
40|$|Abstract Cyber {{threats against}} clouds have evolved rapidly. Traditional {{reactive}} cyber defense technologies are not effective {{and sufficient to}} protect federated clouds. This chapter introduces the novel <b>federated</b> <b>cloud</b> security architecture that includes proactive cloud defense technologies for secure and agile cloud development. The federated security architecture consists {{of a set of}} seamlessly integrated systematic security mechanisms at the application layer, the network layer and the system layer in <b>federated</b> <b>cloud</b> computing environments. Features of the architecture include: (1) it is centered on proactive cyber defense; (2) it facilitates to detect early warning cyber attacks against at one layer and deploy early warning signs of attacks to other layers for countermeasures; (3) it uses command and control (C 2) to coordinate both in-cloud and cross-cloud defense activities via <b>federated</b> <b>cloud</b> security centers. ...|$|E
30|$|Massonett et al. {{discuss in}} [13] {{the problem for}} IT {{security}} audits if <b>federated</b> <b>cloud</b> infrastructures are spanned across different countries. They introduce an existing <b>federated</b> <b>Cloud</b> monitoring infrastructure to monitor in which country data is actually saved without compromising Cloud isolation. In the presented approach collaboration is required between the cloud infrastructure provider and the user of the cloud, the service provider. The proposed architecture is validated by an e-Government case study with legal data location constraints.|$|E
30|$|A {{decentralized}} probabilistic {{algorithm is}} also described in [106], {{which focuses on}} <b>federated</b> <b>clouds.</b> The proposed solution has the aim {{to take advantage of}} a Cloud federation to avoid the dependence on a single provider, while still minimizing the amount of used resources to maintain a good QoS level for customers. The solution provides an effective decentralized algorithm for deploying massively scalable services and it is suitable for all the situations in which a centralized solution is not feasible.|$|R
30|$|The dynamicity {{feature of}} the {{considered}} open <b>federated</b> <b>clouds</b> environment calls for adaptation strategies to allow for flexibility in our system. AMACE supports a flexible model, considering entrance of new cloud providers to the market, offering new services and departure of other cloud providers. The presented flexible model integrates interactions between BA’s organization. BA interactions permit migration requests among BA neighbors to delegate unsatisfied costumer requests. The implementation of the proposed flexible model is made possible by hybridization of two approaches.|$|R
40|$|Cloud Computing offers {{simple and}} cost {{effective}} outsourcing in dynamic service environments, {{and allows the}} construction of service-based applications using virtualization. By aggregating the capabilities of various IaaS <b>cloud</b> providers, <b>federated</b> <b>clouds</b> can be built. Managing such a distributed, heterogeneous environment requires sophisticated interoperation of adaptive coordinating components. In this paper we introduce an integrated federated management and monitoring approach that enables autonomous service provisioning in fed- erated clouds. In this architecture, cloud brokers manage the number {{and the location of}} the utilized virtual machines for the received service requests. In order to provide seamless service executions, a state of the art monitoring solution is proposed that supports cloud selection performed by the management layer of the architecture. Our solution is able to cope with highly dynamic service executions by <b>federating</b> heterogeneous <b>cloud</b> infrastructures in a transparent and autonomous manner...|$|R
40|$|Deployment of {{applications}} and scientific workflows that require resources from multiple distributed platforms are fuelling the federation of autonomous clouds to create cyber infrastructure environments. As {{the scope of}} <b>federated</b> <b>cloud</b> computing enlarges to ubiquitous and pervasive computing, {{there will be a}} need to assess and maintain the trustworthiness of the cloud computing entities. In this paper, we present a fully distributed framework that enable interested parties determine the trustworthiness of <b>federated</b> <b>cloud</b> computing entities. <br /...|$|E
30|$|Another {{important}} consideration is the frequency at which different dynamic properties of a <b>federated</b> <b>cloud</b> storage setup (e.g., performance, availability, cost, etc) should be monitored. This {{is a step}} forward because dynamic properties in a <b>federated</b> <b>cloud</b> storage setup evolve at different frequency. For example, performance in cloud storage providers changes more frequently than for example, the cost (i.e., pricing schemes). Therefore, a fine-grained approach is required in the SCOPE middleware where each dynamic property can be configured independently {{so that it can}} be monitored at different frequency.|$|E
40|$|Cloud {{federation}} {{can allow}} individual Cloud providers working collaboratively to offer best-effort services to service customers. However, the current <b>federated</b> <b>Cloud</b> computing model {{is not appropriate}} for computationally intensive Real-time Online Interactive Applications (ROIA). This paper discusses how we propose and develop a business-oriented <b>federated</b> <b>Cloud</b> computing model where multiple independent infrastructure providers can cooperate seamlessly to provide scalable IT infrastructure and QoS-assured hosting services for ROIA. The distinct features of this proposed Cloud federation model is its business layer that can provide an enhanced security features and can trigger the on-demand resource provisioning across multiple infrastructure providers, hence helping to maximize the customer satisfaction, business benefits and resources usage...|$|E
30|$|Overall, {{the hope}} is that the {{approach}} described in this paper can move the process of partitioning workflows over <b>federated</b> <b>clouds</b> from one in which a human administrator makes an informed but ad-hoc choice, to one in which a tool, such as the one built to implement this method, can determine the valid options based on a rigorous underlying set of rules, and then suggest which is the best, based on a cost model. The approach therefore has the advantage that it can reduce both security violations and execution costs.|$|R
30|$|Agostinho et al. [124] optimizes the {{allocation}} and scheduling of VMs in <b>federated</b> <b>clouds</b> using a genetic algorithm. The solution is composed by two parts: First, servers selection in a data-center is performed {{by using a}} search based bio-inspired technique; then, data centers are selected within the cloud federation by using a shortest path algorithm, according to the available bandwidth of links connecting the domains. The aim of the paper is to exploit resources in domains with low allocation costs and, at the same time, achieve better network performance among cloud nodes.|$|R
40|$|Abstract—Cloud {{providers}} need {{to manage}} and control their assets identifying, retrieving, and exchanging data about their virtual resources in different operating contexts. These tasks are not trivial at all and this leads cloud providers to design proprietary solutions {{for the management of}} their virtual resources and services. In this paper, considering IaaS clouds, we discuss an approach based on XDI for the representation of data associated to Virtual Machines (VMs). More specifically, we focus on a scenario including <b>federated</b> <b>clouds</b> renting VMs to other ones, where an exchange of related data is required...|$|R
