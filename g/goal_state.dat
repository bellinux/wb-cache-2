522|5680|Public
2500|$|The time {{complexity}} is polynomial {{when the}} search space is a tree, {{there is a}} single <b>goal</b> <b>state,</b> and the heuristic function h meets the following condition: ...|$|E
2500|$|The time {{complexity}} of A* {{depends on the}} heuristic. In the worst case of an unbounded search space, the number of nodes expanded is exponential in {{the depth of the}} solution (the shortest path) : , where [...] is the branching factor (the average number of successors per state). This assumes that a <b>goal</b> <b>state</b> exists at all, and is reachable from the start state; if it is not, and the state space is infinite, the algorithm will not terminate.|$|E
50|$|The primary {{objective}} of this software is to keep Resources on the z/OS system in a desired (or <b>goal)</b> <b>state</b> of Available or Unavailable. Each resource can be individually controlled via commands to set the <b>goal</b> <b>state</b> by means of Requests (or Votes). This <b>goal</b> <b>state</b> is stored, so should a resource fail or the system be shut down, it can be brought back to its previous Desired state quickly and easily. A Resource is any Application or System Resource which can be monitored and controlled.|$|E
30|$|The first <b>goal</b> <b>states</b> {{that there}} is a canned drink,x,that should be {{initially}} in the fridge and at the final stage, should be in an object, y, that is of type ‘Cabinet’. This y should be closed at the final stage, and, like wise for the fridge. The second <b>goal</b> <b>states</b> {{that there is}} a canned drink, z, which should be in the fridge at final stage. The third <b>goal</b> <b>states</b> that an object x which is of type ‘Window’ and located in the Wet Kitchen should be opened. This goal is the smoke triggered goal.|$|R
40|$|This paper {{outlines}} {{a method}} for planning motions {{in the presence of}} uncertainty. Tasks are modeled as geometrical goals in configuration space. The planning process consists of determining regions from which particular motions are guar-anteed to reach a desired goal successfully. An algorithm is presented for backprojecting from desired <b>goal</b> <b>states.</b> The backprojection regions are computed by erecting constraints that geometrically capture the uncertainty in motion. The relationship of backprojections to goal recognizability is discussed within the formal framework of preimages. This relationship suggests a partitioning of desired <b>goal</b> <b>states</b> into recognizable <b>goal</b> <b>states.</b> Backprojections are actually per-formed from this partitioning. 1...|$|R
5000|$|Some of the <b>goals</b> <b>stated</b> by Q-REC and EuroREC webpage [...] includes: ...|$|R
5000|$|An {{admissible}} heuristic is used {{to estimate}} the cost of reaching the <b>goal</b> <b>state</b> in an informed search algorithm. In order for a heuristicto be admissible to the search problem, the estimated cost must always be lower {{than or equal to}} the actual cost of reaching the <b>goal</b> <b>state.</b> The search algorithm uses the admissible heuristic to find an estimated optimal path to the <b>goal</b> <b>state</b> from the current node. For example, in A* search the evaluation function (where [...] is the current node) is: ...|$|E
5000|$|... : the <b>goal</b> <b>state</b> (sometimes , {{not to be}} {{confused}} with the function) ...|$|E
5000|$|Output: <b>Goal</b> <b>state.</b> The parent links {{trace the}} {{shortest}} path back to ...|$|E
40|$|This {{study is}} part of {{research}} that is investigating the notion that human performance in dynamic and intentional decision making environments, such as ambulance dispatch management, can be improved if information is portrayed {{in a manner that}} supports the decision strategies invoked to achieve the <b>goal</b> <b>states</b> of the process being controlled. Hence, in designing interfaces to support real-time dispatch management decisions, it is suggested that it would be necessary to first discover the <b>goal</b> <b>states</b> and the decision strategies invoked during the process, and then portray the required information in a manner that supports such a user group's decision making goals and strategies. The {{purpose of this paper is}} to report on the experiences gleaned from the use of a cognitive task analysis technique called Critical Decision Method as an elicitation technique for determining information portrayal requirements. This paper firstly describes how the technique was used in a study to identify the <b>goal</b> <b>states</b> and decision strategies invoked during the dispatch of ambulances at the Sydney Ambulance Co-ordination Centre. The paper then describes how the interview data was analysed within and between cases in order to reveal the <b>goal</b> <b>states</b> of the ambulance dispatchers. A brief description of the resulting <b>goal</b> <b>states</b> follows, although a more detailed description of the <b>goals</b> <b>states</b> and their resulting display concepts has been reported elsewhere (Wong et al., 1996 b). Finally, the paper concludes with a set of observations and lessons learnt from the use of the Critical Decision Method for developing display design concepts in dynamic intentional environments...|$|R
5000|$|The {{specification}} of the <b>goal</b> <b>states</b> - situations which the planner {{is trying to}} reach; ...|$|R
2500|$|To date, {{the water}} quality <b>goals</b> <b>stated</b> by Congress in the 1972 act have not been {{achieved}} by American society: ...|$|R
50|$|The MEA {{technique}} {{is a strategy}} to control search in problem-solving. Given a current state and a <b>goal</b> <b>state,</b> an action is chosen which will reduce {{the difference between the}} two. The action is performed on the current state to produce a new state, and the process is recursively applied to this new state and the <b>goal</b> <b>state.</b>|$|E
5000|$|... a boolean {{function}} which tells us whether a given {{state is a}} <b>goal</b> <b>state</b> ...|$|E
50|$|In the {{analysis}} of algorithms, the input to breadth-first search {{is assumed to be}} a finite graph, represented explicitly as an adjacency list or similar representation. However, in the application of graph traversal methods in artificial intelligence the input may be an implicit representation of an infinite graph. In this context, a search method is described as being complete if it is guaranteed to find a <b>goal</b> <b>state</b> if one exists. Breadth-first search is complete, but depth-first search is not. When applied to infinite graphs represented implicitly, breadth-first search will eventually find the <b>goal</b> <b>state,</b> but depth-first search may get lost in parts of the graph that have no <b>goal</b> <b>state</b> and never return.|$|E
5000|$|Under this {{framework}} for inclusion up until 2020 the EU has established the following <b>goals</b> <b>stated</b> in their 2012 communication ...|$|R
5000|$|To date, {{the water}} quality <b>goals</b> <b>stated</b> by Congress in the 1972 act have not been {{achieved}} by American society: ...|$|R
5000|$|... 123 {{games and}} 6 <b>goals</b> in <b>state</b> league214 games and 7 <b>goals</b> in <b>state</b> league33 games in 2010 Campeonato do Nordeste.|$|R
5000|$|Is the {{objective}} {{of a plan to}} reach a designated <b>goal</b> <b>state,</b> or to maximize a reward function? ...|$|E
50|$|State space search often {{differs from}} {{traditional}} computer science search methods {{because the state}} space is implicit: the typical state space graph is much too large to generate and store in memory. Instead, nodes are generated as they are explored, and typically discarded thereafter. A solution to a combinatorial search instance may consist of the <b>goal</b> <b>state</b> itself, or of a path from some initial state to the <b>goal</b> <b>state.</b>|$|E
5000|$|In [...] {{the authors}} used the planner IPP to {{demonstrate}} this technique. The system's UI is first analyzed {{to determine the}} possible operations. These become the operators used in the planning problem. Next an initial system state is determined, and a <b>goal</b> <b>state</b> is specified that the tester feels would allow exercising of the system. The planning system determines a path from the initial state to the <b>goal</b> <b>state,</b> which becomes the test plan.|$|E
5000|$|The Akademi {{was built}} {{with the purpose}} of {{promoting}} the growth of Konkani. Some of the major <b>goals</b> <b>stated</b> on its website are: ...|$|R
40|$|Theory and {{research}} on self-regulation {{emphasizes the importance of}} goals for guiding humanbehavior. Critical phenomena within the self-regulation literature are discrepancies between actualstates and <b>goal</b> <b>states.</b> When such discrepancies are detected, they capture attention and effort ismobilized to move actual <b>states</b> closer to <b>goal</b> <b>states</b> (or in some cases align the latter with theformer). While discrepancy feedback, or the distance between actual and <b>goal</b> <b>states,</b> is important,so too is velocity feedback, or the rate at which actual–goal discrepancies are decreasing. Unfortunately,research has mostly ignored the role played by velocity in the self-regulation process. Toredress this limitation, we review the concept of velocity, the empirical studies that have examinedthis concept, and how velocity is commonly measured. We then discuss the role of velocity as itpertains to three self-regulatory functions at work: achieving performance goals, satisfying belongingneeds, and satisfying esteem needs...|$|R
2500|$|The {{document}} {{sets forth}} the short-term and long-term goals with milestones for the intelligent design movement, with its governing <b>goals</b> <b>stated</b> {{in the opening}} paragraph: ...|$|R
50|$|Crucial to the {{understanding}} of knowledge level modeling are Allen Newell's notions of the knowledge level, operators, and an agent's <b>goal</b> <b>state.</b>|$|E
50|$|An agent's <b>goal</b> <b>state</b> is {{the status}} reached after the {{appropriate}} operators have been applied to transition from a previous, non-goal state.|$|E
50|$|A {{plan for}} such a {{planning}} instance is a sequence of operators that can be executed from the initial state and {{that leads to a}} <b>goal</b> <b>state.</b>|$|E
50|$|Train: Youth for Western Civilization {{will host}} conferences, {{training}} workshops, and education in political technology to make members {{more effective in}} executing the <b>goals</b> <b>stated</b> above.|$|R
50|$|The <b>goal</b> <b>stated</b> is {{to enable}} the server vendor {{ecosystem}} {{to build their own}} customized server, networking and storage hardware for future data centers and cloud computing.|$|R
40|$|In {{this paper}} we present an {{approach}} to planning with prioritized <b>goal</b> <b>states.</b> To describe the preference ordering on <b>goal</b> <b>states,</b> we make use of ranked knowledge bases which induce a partial preference ordering on plans. We show how an optimal plan can be computed by assigning an integer value to each state in an appropriate manner. We also show how plan optimality can be tested in a similar fashion. Our implementation is based on Metric-FF, {{one of the fastest}} existing planning systems. A first empirical evaluation shows very promising results...|$|R
5000|$|The time {{complexity}} is polynomial {{when the}} search space is a tree, {{there is a}} single <b>goal</b> <b>state,</b> and the heuristic function h meets the following condition: ...|$|E
5000|$|... is the {{specification}} {{of the goal}} state; this is given as a pair , which specify which conditions are true and false, respectively, {{in order for a}} state to be considered a <b>goal</b> <b>state.</b>|$|E
5000|$|Graphplan is an {{algorithm}} for automated planning {{developed by}} Avrim Blum and Merrick Furst in 1995. Graphplan takes as input a planning problem expressed in STRIPS and produces, {{if one is}} possible, a sequence of operations for reaching a <b>goal</b> <b>state.</b>|$|E
5000|$|Proximal closure {{posits that}} as the {{distance}} between a <b>goal</b> end <b>state</b> and an individual's current state decreases, the [...] "attractive motive force" [...] to reach the <b>goal</b> end <b>state</b> increases. [...] The goal becomes more desirable and its completion more feasible. Additionally, as the proximal distance to the <b>goal</b> end <b>state</b> nears, the motivational force to complete the goal and objectives associated with it also increases.|$|R
40|$|This {{prospective}} {{study examined the}} relation between 308 adolescents' images of typical drinkers and nondrinkers and their subsequent alcohol consumption. The results indicate that both images are associated with changes in consumption between ages 16 and 18 but that they operate in different ways. Contrary to previous assumptions, drinker images do not represent <b>goal</b> <b>states</b> for adolescents {{in that they are}} more negative than their self-images and nondrinker images and are not correlated with their ideal selves. In contrast, nondrinker images do appear to represent <b>goal</b> <b>states</b> for adolescents who abstain from drinking. Implications for intervention are discussed...|$|R
40|$|Some {{views of}} design are the act as puzzle making, problem solving, evolutionary, and decision-making. All these focus on form {{generation}} as constructive, therefore characterizing design as a path-planning problem through {{a space of}} possibilities. Design problems consist sets of information divided into initial, intermediate, and <b>goal</b> <b>states.</b> Design in its simplest state consist {{of a set of}} operators, sequences (or paths) between initial and <b>goals</b> <b>states.</b> In this paper, I present design algorithms for Le Corbusier because of his distinct compositional techniques particularly for his “White Villasi in which some elements have been identified to recursively occur...|$|R
