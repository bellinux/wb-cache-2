6|25|Public
25|$|SeaMonkey Mail is a {{traditional}} e-mail client that includes support for multiple accounts, junk mail detection, message filters, <b>HTML</b> <b>message</b> support, and address books, among other features. It shares code with Mozilla Thunderbird; both Thunderbird and SeaMonkey are built from Mozilla's comm-central source tree.|$|E
5000|$|... #Subtitle level 3: <b>HTML</b> <b>message</b> pattern/Browser-side {{templating}} ...|$|E
5000|$|Mail notification: Enables {{the server}} to send emails to {{multiple}} addresses. It handles plain text and <b>html</b> <b>message</b> content format. It also can enclose multiple files.|$|E
5000|$|Microsoft Outlook Express, {{which uses}} Trident to render <b>HTML</b> <b>Messages</b> ...|$|R
5000|$|In <b>HTML</b> <b>messages,</b> [...] or [...] {{elements}} may be nested {{to achieve}} the same effect.|$|R
5000|$|Microsoft Outlook {{which uses}} Trident to render <b>HTML</b> <b>Messages</b> (prior to Outlook 2007) and the [...] "Outlook Today" [...] screen ...|$|R
50|$|Some email {{marketing}} tools include tracking as a feature. Such email tracking {{is usually}} accomplished using standard web tracking devices known as cookies and web beacons. When an email message is sent, {{if it is}} a graphical <b>HTML</b> <b>message</b> (not a plain text message) the email marketing system may embed a tiny, invisible tracking image (a single-pixel gif, sometimes called a web beacon) within the content of the message. When the recipient opens the message, the tracking image is referenced. When they click a link or open an attachment, another tracking code is activated. In each case a separate tracking event is recorded by the system. These response events accumulate over time in a database, enabled the email marketing software to report metrics such as open-rate and click-through rates. Email marketing users can view reports on both aggregate response statistics and individual response over time.|$|E
40|$|Abstract: A secret {{communication}} method via {{web pages}} by embedding special space codes in HTML text to encode message bits in triplets is proposed. The codes, replacing the ASCII space code 20, appear as white spaces as well, creating a steganographic effect. Such codes are found by a systematic investigation {{of all the}} coding systems applicable in the <b>HTML.</b> <b>Message</b> hiding and recovery processes are also proposed. The character string of each message, before being embedded, is randomized with a secret key to enhance the security against illegal intercept and extraction. The embedded message is non-destructible unless the web page server is intruded. Experimental results show the feasibility of the proposed method...|$|E
40|$|Abstract: A broad {{variety of}} data is {{available}} in distinct heterogeneous sources, stored under different formats: database formats (in relational and object-oriented models), document formats (SGML/XML), browser formats (<b>HTML),</b> <b>message</b> formats, etc. The integration of such data is increasingly important for modern information systems applications such as data warehousing, data mining, and web applications. This is realized by providing a uniform view of data sources (called mediation schema or global schema) and defining a set of queries (called mediation queries or mediation mappings) which define objects of the mediation schema. One of the important problems that merit consideration {{is the impact of}} schema evolution on mediation queries. Mappings left inconsistent by a schema change have to be detected and updated. In particular, one source may be removed from the system because it provides always obsolete information or because it is unavailable. In this case it is necessary to update the inconsistent mappings. In this paper, we study the removal of a source from an integration system and show how to correctly update the mappings between the mediation schema and the distributed sources after this change, {{in the context of the}} global-as-view approach (each relation of the global schema is expressed as a view on the data source) ...|$|E
50|$|Most email spam is sent in HTML {{for these}} reasons, so spam filters {{sometimes}} give higher spam scores to <b>HTML</b> <b>messages.</b>|$|R
5000|$|Quoted line markers {{are most}} {{commonly}} used in plain-text <b>messages.</b> In <b>HTML</b> <b>messages,</b> other devices {{may be used to}} indicate quoted text, such as HTML indentation elements like [...] or [...]|$|R
50|$|Outlook 2007 was {{the first}} Outlook to switch from Internet Explorer {{rendering}} engine to Microsoft Word 2007's. This means HTML and CSS items not handled by Word are no longer supported. On the other hand, <b>HTML</b> <b>messages</b> composed in Word look as they appeared to the author. This affects publishing newsletters and reports, because they frequently use intricate HTML and CSS to form their layout. For example, forms {{can no longer be}} embedded in email.|$|R
5000|$|Becky! {{provides}} full <b>HTML</b> <b>messaging</b> {{support for}} reading, composing, forwarding and redirecting messages, but defaults to plain text for composition. HTML mode can be selected via the editor on a message-by-message basis or templates {{can be defined}} for default or occasional use. This feature of templates can be customized at the account level, by folder, or for a specific topic. However, setting HTML as a default for composing messages is not an option.|$|R
5000|$|NOTIS full X.400 e-mail system, {{including}} a X.500 based directory service (implemented using SIBAS) and TCP/IP based SMTP mail. This provided <b>HTML</b> formatted <b>messages</b> in from 1985.|$|R
50|$|RTF messages: Embedded <b>HTML</b> in RTF <b>messages</b> now renders {{more closely}} to the {{original}} file.|$|R
5000|$|Note {{that the}} {{composition}} of <b>HTML</b> email <b>messages</b> (as users of more WYSIWYG editors may be used to) is not included by default; the lack of this [...] "ability" [...] is counted as a feature by Gnus' traditional user base.|$|R
50|$|Most modern graphic email clients {{allow the}} use of either plain text or <b>HTML</b> for the <b>message</b> body {{at the option of}} the user. <b>HTML</b> email <b>messages</b> often include an {{automatically}} generated plain text copy as well, for compatibility reasons. Advantages of HTML include the ability to include in-line links and images, set apart previous messages in block quotes, wrap naturally on any display, use emphasis such as underlines and italics, and change font styles. Disadvantages include the increased size of the email, privacy concerns about web bugs, abuse of HTML email as a vector for phishing attacks and the spread of malicious software.|$|R
5000|$|MHTML, {{short for}} MIME HTML, is a web page archive format used to combine {{in a single}} {{document}} the HTML code and its companion resources that are otherwise represented by external links (such as images, Flash animations, Java applets, and audio files). The content of an MHTML file is encoded {{as if it were}} an <b>HTML</b> e-mail <b>message,</b> using the MIME type [...]|$|R
2500|$|The {{persistent}} (or stored) XSS vulnerability is a {{more devastating}} variant of a cross-site scripting flaw: it occurs when the data provided by the attacker is saved by the server, and then permanently displayed on [...] "normal" [...] pages returned to other users {{in the course of}} regular browsing, without proper HTML escaping. A classic example of this is with online message boards where users are allowed to post <b>HTML</b> formatted <b>messages</b> for other users to read.|$|R
50|$|Within the Outlook e-mail client, TNEF {{encoding}} {{cannot be}} explicitly enabled or disabled (except via a registry setting). Selecting RTF as the format for sending an e-mail implicitly enables TNEF encoding, {{using it in}} preference to the more common and widely compatible MIME standard. When sending plain text or <b>HTML</b> format <b>messages,</b> some versions of Outlook (apparently including Outlook 2000) prefer MIME, but may still use TNEF under some circumstances (for example, if an Outlook feature requires it).|$|R
5000|$|The {{persistent}} (or stored) XSS vulnerability is a {{more devastating}} variant of a cross-site scripting flaw: it occurs when the data provided by the attacker is saved by the server, and then permanently displayed on [...] "normal" [...] pages returned to other users {{in the course of}} regular browsing, without proper HTML escaping. A classic example of this is with online message boards where users are allowed to post <b>HTML</b> formatted <b>messages</b> for other users to read.|$|R
5000|$|One major {{shortcoming}} of Entourage was its {{inability to}} handle complex <b>HTML.</b> While <b>messages</b> could be received and viewed correctly, {{they could not be}} forwarded without all formatting being stripped out. As an example, an airline confirmation received from, say, Imaginary Airlines, could not be forwarded without all of the pictorial information being reduced to links, rendering the e-mail unreadable. A workaround for this was to choose [...] "Forward as attachment" [...] which forwarded the message as a message/rfc822 file, and preserved complex HTML formatting.|$|R
50|$|Version 0.4 of Miranda IM was {{released}} on April 7, 2005. This was the first version to have Yahoo! protocol bundled with the official release. Other major changes included the removal of contact list and database module from the core into plugins. As a result, there were 4 variations of contact list modules: the original clist_classic, multi-window contact list clist_mw, modern contact list clist_modern, and nicer contact list with extensive UI customization clist_nicer. Other popular plugins released within this period included tabbed message window (tabsrmm and scriver), <b>HTML</b> based <b>message</b> log support IE view, scripting plugin mbot, and the meta contact plugin.|$|R
5000|$|The {{technical}} specification for Gopher, RFC 1436, defines 14 item types. A one-character code indicates {{what kind of}} content the client should expect. Item type [...] is an error code for exception handling. Gopher client authors improvized item types [...] (<b>HTML),</b> [...] (informational <b>message),</b> and [...] (sound file) {{after the publication of}} RFC 1436.|$|R
40|$|Abstract [...] The {{internet}} {{has evolved into}} a critical delivery pipeline for institutions to interact with Customers, partners and employees. Peoples use web sites to send and receive Information via Hypertext Markup Language (<b>HTML)</b> <b>messages</b> to web applications reside on web servers. Generally this information, expected as legitimate messages, can be used illegitimately by the unauthorized persons to compromise security vulnerabilities. Web application vulnerabilities provide the potential for an unauthorized party to gain access to critical and sensitive information, use resources inappropriately, interrupt web based business transactions or commit fraud. The cause for all inconvenience and fraud in web, improper input handling {{is one of the most}} common weaknesses identified across applications today. Poorly handled input is a leading cause behind critical vulnerabilities that exist in systems and applications. Generally, the term input handling is used to describe functions like validation, sanitization, filtering, encoding and/or decoding of input data. Applications receive input from various sources including human users, software agents, and network/peripheral devices etc. all input data should be considered as untrusted and potentially malicious. Applications which process untrusted input may become vulnerable to attacks such as Buffer Overflows, SQL Injection, XSS attacks, OS Commanding, Denial of Service and many more. Among all, SQLIA and XSS are most common and serious threats to web applications. This paper describes all aspects of SQL injection attacks and defenses. Keywords [...] input validation, SQLIA, XSS attacks, web applications, SQL injection Defense, untrusted data I...|$|R
50|$|Most {{graphical}} email clients {{allow the}} use of a subset of HTML (often ill-defined) to provide formatting and semantic markup not available with plain text. This may include typographic information like coloured headings, emphasized and quoted text, inline images and diagrams. Many such clients include both a GUI editor for composing <b>HTML</b> e-mail <b>messages</b> and a rendering engine for displaying them. Use of HTML in e-mail is criticized by some because of compatibility issues, because it can help disguise phishing attacks, because of accessibility issues for blind or visually impaired people, because it can confuse spam filters and because the message size is larger than plain text.|$|R
50|$|Deploying a STAP {{application}} {{is similar to}} deploying a web application, where STAP takes place of HTML as the language for UI description.Much like HTML, STAP is a means for serializing task interface display and interactions.Unlike <b>HTML</b> documents, STAP <b>messages</b> are incremental updates to the display.Whereas HTML is focused on hypertext look and feel, STAP is focused on function, structure, and affordances of task display.|$|R
40|$|Personal Internetworked Notary and Guardian (PING) is a {{framework}} for integration of disparate medical records. PING captures, stores and manipulates data using XML and related technologies. XML Schema plays {{a central role in}} implementing data models to suit the unique needs of PING as a longitudinal record. Clinical Document Data Model exemplifies our representation of a generic document. With XSLT, we transform data into <b>HTML,</b> HL 7 <b>messages,</b> or different XML structures. XML, XML Schema and XSLT combine to allow high portability and accessibility of PING documents...|$|R
5000|$|<b>HTML</b> e-mail <b>messages</b> {{can easily}} {{implement}} {{a form of}} [...] "phoning home". Images and other files required by the e-mail body may generate extra requests to a remote web server {{before they can be}} viewed. The IP address of the user's own computer is sent to the web server (an unavoidable process if a reply is required), and further details embedded in request URLs can further identify the user by e-mail address, marketing campaign etc. Such extra page resources have been referred to as [...] "web bugs" [...] and they {{can also be used to}} track off-line viewing and other uses of ordinary web pages. So as to prevent the activation of these requests, many e-mail clients do not load images or other web resources when HTML e-mails are first viewed, giving users the option to load the images only if the e-mail is from a trusted source.|$|R
50|$|Text-based mail readers (such as Pine or Mutt) and {{graphical}} email {{clients with}} purely text-based HTML capabilities (such as Mulberry) do not interpret HTML or display images, so their users {{are not subject}} to tracking by email web beacons. Plain-text email messages cannot contain web beacons because their contents are interpreted as display characters instead of embedded HTML code, so opening messages does not initiate communication. Some email clients offer the option to disable all <b>HTML</b> in every <b>message</b> (thus rendering all messages as plain text), which prevents any web beacons from loading.|$|R
40|$|This paper {{proposes a}} method of {{extending}} HTML 5 (hypertext markup language, version 5) microdata syntax (Talbot 2013) for increasing knowledge representation and threat discoverability within data and messages transacted among security software systems. Efficient information discovery, sharing and collaboration among security and infrastructure protection systems are keys to maintaining secure critical infrastructure. Text (Boone & Hart 2011). Standard markup language syntax allows the web browser to render the information in reports about potential threats in a manner suitable manner for human readers. Often left implied or completely missing are the rich context around the message itself and the potential linkages to other important known facts or other relevant <b>messages.</b> <b>HTML</b> 5 microdata {{may be used to}} provide semantic enrichment that machines can be programmed to understand and intelligently search for. With an appropriate implementation of this standard, critical infrastructure protection programs can see greater efficiency in information sharing and collaboration, leading to more secure and resilient systems. The proposed additions outlined in this paper are being prepared for submission {{to be included in the}} schema. org vocabulary. A call for stakeholders in critical national infrastructure protection to review this proposal and support its development is given. Presidential Policy Directive 21 (PPD- 21) was published in February of 2013 (White House 2013). This policy directive seeks to advance “a national unity effort to strengthen and maintain secure, functioning, and resilient critical infrastructure”. This directive provides guidance to a very broad group of stakeholders spanning government and private organizations at federal, state and local levels. The directive clarifies the federal government’s role in securing critical infrastructure while recognizing the complexities arising from largely private ownership and operation. PPD- 21 outlines three strategic imperatives. The first imperative is a clarifying function. In order to advance a national unity of effort to strengthen critical infrastructure security and resilience a requirement to clarify functional relationships is established. The next tw...|$|R

