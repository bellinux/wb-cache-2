2200|3403|Public
25|$|An {{industrial}} {{air conditioner}} designed by Mitsubishi uses 25 heating rules and 25 cooling rules. A temperature sensor provides input, with control outputs fed to an inverter, a compressor valve, and a fan motor. Compared {{to the previous}} design, the <b>fuzzy</b> <b>controller</b> heats and cools five times faster, reduces power consumption by 24%, increases temperature stability {{by a factor of}} two, and uses fewer sensors.|$|E
2500|$|As {{a general}} example, {{consider}} {{the design of}} a <b>fuzzy</b> <b>controller</b> for a steam turbine. The block diagram of this control system appears as follows: ...|$|E
2500|$|In 1995 Maytag {{introduced}} an [...] "intelligent" [...] dishwasher {{based on a}} <b>fuzzy</b> <b>controller</b> and a [...] "one-stop sensing module" [...] that combines a thermistor, for temperature measurement; a conductivity sensor, to measure detergent level from the ions present in the wash; a turbidity sensor that measures scattered and transmitted light to measure the soiling of the wash; and a magnetostrictive sensor to read spin rate. The system determines the optimum wash cycle for any load to obtain the best results with {{the least amount of}} energy, detergent, and water. It even adjusts for dried-on foods by tracking the last time the door was opened, and estimates the number of dishes by the number of times the door was opened.|$|E
40|$|In this paper, {{we first}} {{distinguish}} {{two types of}} <b>fuzzy</b> <b>controllers,</b> Mamdani <b>fuzzy</b> <b>controllers</b> and <b>fuzzy</b> logical <b>controllers.</b> Mamdani <b>fuzzy</b> <b>controllers</b> {{are based on the}} idea of interpolation while <b>fuzzy</b> logical <b>controllers</b> are based on fuzzy logic in its narrow sense, i. e., fuzzy propositional logic. The two types of <b>fuzzy</b> <b>controllers</b> treat IF-THEN rules differently. In Mamdani <b>fuzzy</b> <b>controllers,</b> rules are treated disjunctively. In <b>fuzzy</b> logic <b>controllers,</b> rules are treated conjunctively. Finally, we provide a unified proof of the property of universal approximation for both types of <b>fuzzy</b> <b>controllers...</b>|$|R
40|$|In this paper, a {{connection}} between <b>fuzzy</b> <b>controllers</b> and variable structures controllers is developed. With this connection, a proof of their stability is presented. Further, methods to simplify <b>fuzzy</b> <b>controllers</b> as well as apply them to situations where <b>fuzzy</b> <b>controllers</b> previously failed are developed. I...|$|R
40|$|This paper {{analyses}} {{the internal}} operation of <b>fuzzy</b> logic <b>controllers</b> as referenced {{to the human}} cognitive tasks of control and decision making. Two goals are targeted. The first goal focuses on the cognitive interpretation of the mechanisms employed in the current design of <b>fuzzy</b> logic <b>controllers.</b> This analysis helps to create a ground to explore the potential of enhancing the functional intelligence of <b>fuzzy</b> <b>controllers.</b> The second goal is to outline the features of {{a new class of}} <b>fuzzy</b> <b>controllers,</b> the Clearness Transformation <b>Fuzzy</b> Logic <b>Controller</b> (CT-FLC), whereby some new concepts are advanced to qualify <b>fuzzy</b> <b>controllers</b> as 'cognitive devices' rather than 'expert system devices'. The operation of the CT-FLC, as a <b>fuzzy</b> pattern processing <b>controller,</b> is explored, simulated, and evaluated...|$|R
5000|$|... eXtensible Stylesheet Language Transformations (XSLT) {{in order}} to convert a <b>fuzzy</b> <b>controller</b> {{description}} into a specific programming language.|$|E
5000|$|Usually {{the rule}} base {{consists}} of several IF-THEN rules, linking input(s) and output(s).A simple rule of a <b>fuzzy</b> <b>controller</b> could be: ...|$|E
5000|$|As {{a general}} example, {{consider}} {{the design of}} a <b>fuzzy</b> <b>controller</b> for a steam turbine. The block diagram of this control system appears as follows: ...|$|E
40|$|This paper {{presents}} {{the comparison of}} tracking control performance of <b>fuzzy</b> PI <b>Controller</b> with <b>fuzzy</b> PID and conventional PID <b>controllers.</b> <b>Fuzzy</b> PI <b>controller</b> and <b>Fuzzy</b> PID <b>controller</b> composes of Mamdani type <b>fuzzy</b> <b>controllers</b> and parameters are adjusted to meet the desired control system performances both in transient state and steady state. Computer simulations are done for controlling the time delay, Nonlinear, and Linear systems by using fuzzy PI, fuzzy PID and the conventional PID controller are shown in this paper. The effectiveness of <b>fuzzy</b> <b>controllers</b> over the conventional controller are shown by choosing Gaussian, triangular, pi input fuzzy sets...|$|R
40|$|This paper {{reveals the}} {{conventional}} {{structure of a}} class of Takagi-Sugeno <b>fuzzy</b> PI <b>controllers.</b> This conventional representation provides an insight and understanding on how such <b>fuzzy</b> <b>controllers</b> work and alternatively it provides a mean {{for the implementation of}} <b>fuzzy</b> <b>controllers</b> by classical control modules. For the process field engineer, the conventional representation might be of great importance for tuning and maintenance purpose of this class of <b>fuzzy</b> PI <b>controllers.</b> SCOPUS: cp. pinfo:eu-repo/semantics/publishe...|$|R
40|$|This paper {{presents}} {{the similarity of}} a class of adaptive <b>fuzzy</b> <b>controllers</b> and a time dependent single rule controller of Takagi-Sugeno (TS) model. The class of adaptive <b>fuzzy</b> <b>controllers</b> is one of iterative multilayer structure of single input <b>fuzzy</b> <b>controllers</b> (SIFC). On the other hand, in a time dependent single rule controller of TS model, only one rule can be fired at a time. The result model is employed to simulate a control system of three-tank system...|$|R
5000|$|FML allows fuzzy {{systems to}} be coded through a {{collection}} of correlated semantic tags capable of modeling the different components of a classical <b>fuzzy</b> <b>controller</b> such as knowledge base, rule base, fuzzy variables and fuzzy rules. Therefore, the FML tags used to build a <b>fuzzy</b> <b>controller</b> represent the set of lexemes used to create fuzzy expressions. In order to design a well-formed XML-based language, an FML context-free grammar is defined {{by means of a}} XML schema which defines name, type and attributes characterized each XML element. However, since an FML program represents only a static view of a fuzzy logic controller, the so-called eXtensible Stylesheet Language Translator (XSLT) is provided to change this static view to a computable version. Indeed, XSLTs modules are able to convert the FML-based <b>fuzzy</b> <b>controller</b> in a general purpose computer language using an XSL file containing the translation description. At this level, the control is executable for the hardware. In short, FML is essentially composed by three layers: ...|$|E
50|$|Since an FML program realizes only {{a static}} {{view of a}} fuzzy system, the {{so-called}} eXtensible Stylesheet Language Translator (XSLT) is provided to change this static view to a computable version. In particular, the XSLT technology is used convert a <b>fuzzy</b> <b>controller</b> description into a general-purpose computer language to be computed on several hardware platforms. Currently, a XSLT converting FML program in runnable Java code has been implemented. In this way, thanks to the transparency capabilities provided by Java virtual machines, {{it is possible to}} obtain a <b>fuzzy</b> <b>controller</b> modeled in high level way by means of FML and runnable on a plethora of hardware architectures through Java technologies. However, XSLT can be also used for converting FML programs in legacy languages related to a particular hardware or in other general purpose languages.|$|E
50|$|An {{industrial}} {{air conditioner}} designed by Mitsubishi uses 25 heating rules and 25 cooling rules. A temperature sensor provides input, with control outputs fed to an inverter, a compressor valve, and a fan motor. Compared {{to the previous}} design, the <b>fuzzy</b> <b>controller</b> heats and cools five times faster, reduces power consumption by 24%, increases temperature stability {{by a factor of}} two, and uses fewer sensors.|$|E
40|$|Information Sciences 151 (2003) 245 – 262 www. elsevier. com/locate/ins In {{the first}} part of this paper, we {{investigate}} explicit structure of the typical Takagi– Sugeno (TS) fuzzy PI and PD controllers. By typical, we mean the use of at least three trapezoidal or triangular input fuzzy sets for each input variable, fuzzy rules with linear consequent, Zadeh fuzzy logic AND operator and the centroid defuzzifier. This configuration covers many TS <b>fuzzy</b> <b>controllers</b> in the literature. We mathematically prove these <b>fuzzy</b> <b>controllers</b> to be nonlinear PI (or PD) controllers with proportional-gain and integral-gain (or derivative-gain) changing with output of the controlled system. We reveal these <b>fuzzy</b> <b>controllers</b> to be inherently nonlinear gain scheduling PI (or PD) controllers with different variable gains in different regions of input space. The gains constantly change even in the same region, and switch continuously and smoothly between adjacent regions. The explicit structural expressions of the <b>fuzzy</b> <b>controllers</b> are derived and their characteristics, including the bounds and geometrical shape of the gain variation, are studied. In the second part of the paper, we apply the Small Gain Theorem to the derived structures of the <b>fuzzy</b> <b>controllers</b> and establish a sufficient global BIBO stability criterion for nonlinear systems controlled by the <b>fuzzy</b> <b>controllers.</b> Local stability is also examined...|$|R
40|$|It {{has been}} proven that <b>fuzzy</b> <b>controllers</b> are capable of {{controlling}} non-linear systems where it is cumbersome to develop conventional controllers based on mathematical modeling. This chapter describes designing <b>fuzzy</b> <b>controllers</b> for an AC motor run mechanism. It also compares performance of two controllers designed based on Mamdan...|$|R
40|$|In this paper, a <b>fuzzy</b> <b>controllers</b> type Takagi_Sugeno is {{optimized}} by {{method of}} Particle Swarm Optimization (PSO). This algorithm automatically adjust the membership function of <b>fuzzy</b> <b>controllers</b> {{to control a}} trajectory of nonholonomic mobile robot that involves path trajectory using two optimized <b>fuzzy</b> <b>controllers</b> one for speed control {{and the other for}} azimuth control. The mobile robot is modelled in Simulink and PSO algorithm is implemented using MATLAB. Simulation results show good performance for the proposed control scheme. The results will compared with PSO-PID controllers that control the same model of mobile robot...|$|R
50|$|The first fuzzy {{electronic}} circuit {{was built by}} Takeshi Yamakawa et al. in 1980 using discrete bipolar transistors. The first industrial fuzzy application was in a cement kiln in Denmark in 1982. The first VLSI fuzzy electronics was by Masaki Togai and Hiroyuki Watanabe in 1984. In 1987, Yamakawa built the first analog <b>fuzzy</b> <b>controller.</b> The first digital fuzzy processors came in 1988 by Togai (Russo, pp. 2-6).|$|E
50|$|The FML tags used {{to build}} a <b>fuzzy</b> <b>controller</b> {{represent}} the set of lexemes used to create fuzzy expressions. However, in order to realize a well-formed XML-based language, an FML context-free grammar is necessary and described in the following. The FML context-free grammar is modeled by XML file {{in the form of}} a XML Schema Document (XSD) which expresses the set of rules to which a document must conform in order to be considered a valid FML document. Based on the previous definition, a portion of the FML XSD regarding the knowledge base definition is given below.|$|E
5000|$|In 1995 Maytag {{introduced}} an [...] "intelligent" [...] dishwasher {{based on a}} <b>fuzzy</b> <b>controller</b> and a [...] "one-stop sensing module" [...] that combines a thermistor, for temperature measurement; a conductivity sensor, to measure detergent level from the ions present in the wash; a turbidity sensor that measures scattered and transmitted light to measure the soiling of the wash; and a magnetostrictive sensor to read spin rate. The system determines the optimum wash cycle for any load to obtain the best results with {{the least amount of}} energy, detergent, and water. It even adjusts for dried-on foods by tracking the last time the door was opened, and estimates the number of dishes by the number of times the door was opened.|$|E
40|$|AbstractSeveral {{interesting}} analytic and geometric {{properties of}} the <b>fuzzy</b> <b>controllers</b> are discussed. From these discussions, some kind of measure of nonlinearity of the <b>fuzzy</b> <b>controllers</b> is proposed. A detailed study of the geometric structures of the fuzzy control functions is also carried out {{and the result is}} compared with that of linear control...|$|R
40|$|This paper {{addresses}} {{three main}} issues, which are somewhat interrelated. The first issue {{deals with the}} classification or types of <b>fuzzy</b> <b>controllers.</b> Careful examination of the <b>fuzzy</b> <b>controllers</b> designed by various engineers reveals distinctive classes of <b>fuzzy</b> <b>controllers.</b> Classification {{is believed to be}} helpful from different perspectives. The second issue deals with the design according to specifications, experiments related to the tuning of <b>fuzzy</b> <b>controllers,</b> according to the specification, will be discussed. General design procedure, hopefully, can be outlined in order to ease the burden of a design engineer. The third issue deals with the simplicity and limitation of the rule-based IF-THEN logical statements. The methodology of fuzzy-constraint network is proposed here {{as an alternative to the}} design practice at present. It is our belief that predicate calculus and the first order logic possess much more expressive power...|$|R
40|$|Abstract—Brushless DC motors (BLDCM) {{are widely}} used for many {{industrial}} applications because of their high efficiency, high torque and low volume. This paper proposed an improved Adaptive <b>Fuzzy</b> PID <b>controller</b> to control speed of BLDCM. This paper {{provides an overview of}} performance conventional PID <b>controller,</b> <b>Fuzzy</b> PID <b>controller</b> and Adaptive <b>Fuzzy</b> PID <b>controller.</b> It is difficult to tune the parameters and get satisfied control characteristics by using normal conventional PID controller. As the Adaptive Fuzzy has the ability to satisfied control characteristics and it is easy for computing. The experimental results verify that a Adaptive <b>Fuzzy</b> PID <b>controller</b> has better control performance than the both <b>Fuzzy</b> PID <b>controller</b> and conventional PID controller. The modeling, control and simulation of the BLDC motor have been done using the software package MATLAB/SIMULINK. Index Terms — Brushless DC (BLDC) motors, proportional integral derivative (PID) <b>controller,</b> <b>Fuzzy</b> PID <b>controller,</b> Adaptive <b>Fuzzy</b> PID <b>controller.</b> I...|$|R
5000|$|FML was {{designed}} and developed by Giovanni Acampora during his Ph.D. course in Computer Science, at University of Salerno, Italy, in 2004. The original idea inspired Giovanni Acampora to create FML was the necessity of creating a cooperative fuzzy-based framework aimed at automatically controlling a living environment characterized by a plethora of heterogeneous devices whose interactions were devoted to maximize the human comfort under energy saving constraints. This framework represented {{one of the first}} concrete examples of Ambient Intelligence. Beyond this pioneering application, the major advantage of using XML to describe a fuzzy system is hardware/software interoperability. Indeed, all that is needed to read an FML file is the appropriate schema for that file, and an FML parser. This markup approach makes it much easier to exchange fuzzy systems between software: for example, a machine learning application could extract fuzzy rules which could then be read directly into a fuzzy inference engine or uploaded into a <b>fuzzy</b> <b>controller.</b> Also, with technologies like XSLT, it is possible to compile the FML into the programming language of your choice, ready for embedding into whatever application you please. As stated by Mike Watts on his popular Computational Intelligence blog:"Although Acampora's motivation for developing FML seems to be to develop embedded fuzzy controllers for ambient intelligence applications, FML could be a real boon for developers of fuzzy rule extraction algorithms: from my own experience during my PhD, I know that having to design a file format and implement the appropriate parsers for rule extraction and fuzzy inference engines can be a real pain, taking as much time as implementing the rule extraction algorithm itself. I would much rather have used something like FML for my work." ...|$|E
40|$|This paper {{presents}} {{the design and}} implementation of an adaptive fuzzy logic controller for the speed control of brushless dc motors. The proposed system uses an adaptation of {{the slope of the}} membership functions of the variables used in the conventional <b>fuzzy</b> <b>controller</b> based on the magnitude of the error. A simulation analysis of the <b>fuzzy</b> <b>controller</b> and the adaptive <b>fuzzy</b> <b>controller</b> are done and their performances are compared. Simulation results of both fuzzy and adaptive fuzzy controllers are presented. The adaptive <b>fuzzy</b> <b>controller</b> is better than the <b>fuzzy</b> <b>controller</b> based on the performance parameters considered. An experimental implementation of the designed adaptive <b>fuzzy</b> <b>controller</b> on an embedded microcontroller is also presented...|$|E
40|$|This paper {{presents}} the <b>fuzzy</b> <b>controller</b> for alarm at air flow systems of generators. Using the <b>fuzzy</b> <b>controller</b> for alarm {{than when the}} air flow isn’t in prescribed values will be avoiding the stator insulation destruction. The <b>fuzzy</b> <b>controller</b> was elaborated in MATLAB and operation was simulated in SIMULINK...|$|E
40|$|This paper proposes inverse fuzzy-model-based {{feed-forward}} <b>fuzzy</b> <b>controllers</b> {{to compensate}} non-linear terms {{that affect the}} system dynamics. The gradient-descent algorithm can be used on-line to form adaptive <b>fuzzy</b> <b>controllers.</b> This ability allows these controllers {{to be used in}} applications were the knowledge to control the process does not exist or the process is subject to changes in its dynamic characteristics. To demonstrate the feasibility of the method one simulation example is presented. The proposed adaptive <b>fuzzy</b> <b>controllers</b> are applied to the adaptive control of a non-linear plant and are shown to be capable of providing good overall system performance. ...|$|R
40|$|<b>Fuzzy</b> <b>controllers</b> are {{designed}} for flexible AC transmission systems (FACTS) in interconnected power systems. Two typical FACTS devices, a static synchronous compensator (STATCOM) and a unified power flow controller (UPFC), are used as examples to show that FACTS devices with well-designed <b>fuzzy</b> <b>controllers</b> can significantly improve the dynamic behavior of interconnected power systems. published_or_final_versio...|$|R
40|$|In {{this paper}} we extend the {{classical}} Lyapunov synthesis method {{to the design}} of <b>fuzzy</b> <b>controllers.</b> Assuming minimal knowledge about the plant to be controlled, the proposed method enables us to analytically derive the fuzzy rules that constitute the rule base of the controller. We demonstrate the approach by designing Mamdani-type and Takagi-Sugeno-Kang-type <b>fuzzy</b> <b>controllers</b> for two well-known plants...|$|R
40|$|Abstract. We have {{designed}} <b>Fuzzy</b> <b>controller</b> {{to the hot}} rolling h-beam’s water supply system based on Fuzzy toolbox of Matlab software, we also analyzed the limitations of conventional <b>Fuzzy</b> <b>controller,</b> and puts forward the corresponding improvement measures, which is adding integral functions in <b>Fuzzy</b> <b>controller</b> to eliminate static errors existing at traditional <b>Fuzzy</b> <b>controller.</b> We also adopted Smith predictor to estimate lag phase effects for stability of the system. Simulation results showed that, the controller encompasses rapid responsiveness, excellent stability and strong robustness...|$|E
40|$|Abstract:- This paper {{presents}} the simulation of a Hybrid <b>Fuzzy</b> <b>Controller</b> suitable for industrial applications. The developed Hybrid <b>Fuzzy</b> <b>Controller</b> {{consists of a}} weighted combination of the Direct <b>Fuzzy</b> <b>Controller</b> and Indirect <b>Fuzzy</b> <b>Controller</b> and a gradually activated supervisory controller. The unique feature of the Hybrid <b>Fuzzy</b> <b>Controller</b> is that no mathematical models of the plant are required and the proposed controller is able to adaptively estimate the bound functions on-line, which are required for {{the determination of the}} supervisory controller. The supervisor controller in the sense that all signals are bounded guarantees global stability of the closed-loop system. The approach of rapid prototyping is employed to implement the Hybrid <b>Fuzzy</b> <b>Controller</b> so as to control a Selectively Compliance Assembly Robot Arm. Simulink, an interactive graphical software for simulating dynamic systems, is used to model, simulate and analyse the dynamic system...|$|E
40|$|Abstract. <b>Fuzzy</b> <b>{{controller}}</b> {{is one of}} the succeed controller used in {{the process}} control in case of model uncertainties. But it my be difficult to <b>fuzzy</b> <b>controller</b> to articulate the accumulated knowledge to encompass all circumstance. Hence, it is essential to provide a tuning capability. There are many parameters in <b>fuzzy</b> <b>controller</b> can be adapted, scale factor tuning of normalized <b>fuzzy</b> <b>controller</b> {{is one of the}} adaptation parameter. Two adaptation methods are implemented in this work on an experimental thermal process, which simulate heating process in liquefied petroleum gases (LPG) recovery process in one of petrochemical industries: Gradient decent (GD) adaptation method; supervisory <b>fuzzy</b> <b>controller.</b> A comparison between the two methods is discussed...|$|E
40|$|Abstract In this paper, {{the crack}} {{diagnosis}} using intelligent techniques (using membership functions in different <b>fuzzy</b> <b>controllers)</b> {{have been developed}} for inverse investigation of the vibration parameters (like modal frequencies and mode shapes) and crack parameters (like crack location, crack depth and crack inclination) of an inclined edge crack cantilever beam. The vibration parameters are calculated from finite element (using ANSYS) and experimental analysis which are used as inputs to the different <b>fuzzy</b> <b>controllers.</b> The different <b>fuzzy</b> <b>controllers</b> are designed by taking several types of membership functions to calculate the crack parameters. The calculated first three modal frequencies and mode shapes are used to generate the number of fuzzy rules with three output crack parameters. Finally, the proposed intelligent techniques are validated by comparing the results obtained from both FEA and experimental analysis. All the results are obtained from <b>fuzzy</b> <b>controllers</b> are in good agreement with experimental results...|$|R
40|$|Many <b>fuzzy</b> PID <b>controllers</b> {{have been}} {{developed}} and applied {{over a period of}} 20 years, yet this technique is often regarded with some skepticism by researchers and engineers in the West. Numerous studies have been performed, comparing traditional (linear) and <b>fuzzy</b> PID <b>controllers</b> and these have indicated that the <b>fuzzy</b> <b>controllers</b> may perform better and may be more robust. This paper will explain what advantages nonlinear <b>fuzzy</b> PID <b>controllers</b> have over their linear counterparts and show several simulations which illustrate this behaviour. In particular, the underlying properties of the <b>fuzzy</b> PID <b>controllers</b> will be described and some design and analysis methods will be outlined...|$|R
40|$|Abstract: The paper {{presents}} {{structures and}} a systematical development method for two {{degree of freedom}} <b>fuzzy</b> <b>controllers</b> with non-homogenous dynamics {{with respect to the}} two input channels. The proposed controller structures are meant for a low order plant, which is specific to the field of electrical drives. The design relations result because <b>fuzzy</b> <b>controllers</b> can be, in some certain conditions, well approximated by linear controllers and many development methods are applicable for this situation. The analysis points out that the proposed two degree of freedom <b>fuzzy</b> <b>controllers</b> can ensure better control system performance with respect to the reference input in comparison with other structures containing conventional controllers...|$|R
