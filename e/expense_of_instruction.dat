0|10000|Public
5000|$|If we {{designate}} one {{register to}} be the [...] "accumulator" [...] (see below) and place strong restrictions on the various instructions allowed then we can greatly reduce the plethora of direct and indirect operations. However, one must {{be sure that the}} resulting reduced instruction-set is sufficient, and we must be aware that the reduction will come at the <b>expense</b> <b>of</b> more <b>instructions</b> per [...] "significant" [...] operation.|$|R
40|$|ABSTRACT: If an item is {{accessed}} frequently enough, {{it should}} be main memory resident. For current technology, "frequently enough " means about every five minutes. Along a similar vein, one can frequently trade memory space for cpu trme. For example, bits can be packed in a byte at the <b>expense</b> <b>of</b> extra <b>instructions</b> to extract the bits. It makes economic sense to spend ten bytes of main memory to save one lnstructlon per second. These results depend on current price ratios of processors, memory and disc accesses These ratios are changing an...|$|R
40|$|EDUCATIONAL TAX CREDIT. INITIATIVE STATUTE. Grants {{state income}} tax credit for {{specified}} educational <b>expenses</b> including costs <b>of</b> <b>instruction,</b> textbooks or transportation on behalf of students attending grades kindergarten through twelve in public and most private schools in California. Provides tax credit for contributions to qualifying schools on students 2 ̆ 7 behalf. Tax credit varies depending upon whether payment is for expenses or contributions, or on behalf of dependents or non-dependents. Maximum credit for payment <b>of</b> <b>expenses</b> on behalf <b>of</b> each dependent is 100 in 1988, increasing 200 each year until equals 25...|$|R
40|$|Three {{types of}} extra {{stimulation}} in reading are discussed: extra teacher {{time devoted to}} teaching reading. extra student time devoted to practice in reading. and extra motivation and reinforcement leading to greater amounts of student reading outside the school. Problems are created (1) when teaching time spent on reading is increased {{in the proportion of}} time devoted to any one student's reading or (2) when student time devoted to independent reading in the classroom is increased at the <b>expense</b> <b>of</b> teacher <b>instruction</b> in reading. The most promising alternative noted is that of increasing student time spent in reading outside of school. One of the best procedures for accomplishing this, the stud_y concludes. is contingency management in which outside reading is heavily reinforced. References are included. (RD 11. S. DEPARTMENT OF HEALTH...|$|R
40|$|Few people hail teachers' unions {{as leaders}} of {{education}} reform. Teachers' unions are routinely characterized {{as part of}} the problem, protecting the interests of members at the <b>expense</b> <b>of</b> quality <b>instruction</b> and exercising unchecked political power. School districts fare little better in the public eye; they are often perceived as large, ineffective bureaucracies which perpetuate under-performance among low-income and minority students. Furthermore, community involvement in public education reform, though a widespread phenomenon, is largely unrecognized in the national policy debate about the future of schools. Given this, {{it is difficult to imagine}} three less likely partners in education reform than a local teachers' union (labor), district leaders (management), and local organizations and foundations (community). Yet the work of some education and community leaders has shown that collaboration between labor, management, and community has the potential to build capacity and improve student learning...|$|R
40|$|Statically-scheduled {{architectures}} such as {{very long}} instruction word (VLIW) architectures use very wide instruction words {{in conjunction with}} high bandwidth to the instruction cache to achieve multiple instruction issue. The encoding used for the instructions can {{have an effect on}} the requirements placed on the instruction fetch and instruction cache hardware. One type of encoding is a compressed encoding, named so because it does not explicitly store NOPs within the wide instruction word. A compressed encoding enables high memory utilization but at the <b>expense</b> <b>of</b> variable-sized <b>instructions</b> and the complexities associated with fetching variable-sized instructions. This paper examines instruction fetch and instruction cache mechanisms for VLIW architectures that use compressed encodings. Relevant issues are investigated using the TINKER experimental testbed. A taxonomy for instruction caches for VLIW architectures that use a compressed encoding is introduced. Four cache orga [...] ...|$|R
40|$|The recent {{development}} of multimedia applications made them {{one of the}} most popular and most demanding types of workloads. To meet the new requirements and to map all new multimedia functionality onto systems with restricted resources a dramatical need of visual data compression standards arose. This paper discusses the performance requirements of the MPEG standards and outlines some approaches to meet these requirements. The focus is on the first representative of the latest generation visual data compression standards - MPEG- 4. Its computational requirements and new architectural demands are analyzed. An innovative reconfigurable µ-architectural approach is presented as a new concept for a flexible and cost-effective implementation of multimedia processors. At the <b>expense</b> <b>of</b> three new <b>instructions,</b> the proposed mechanisms allow <b>instructions,</b> entire pieces <b>of</b> code, or their combination to execute in a reconfigurable manner...|$|R
40|$|We {{present a}} path profile guided partial dead code {{elimination}} algorithm that uses predication to enable sinking {{for the removal}} of deadness along frequently executed paths at the <b>expense</b> <b>of</b> adding additional <b>instructions</b> along infrequently executed paths. Our approach to optimization is particularly suitable for VLIW architectures since it directs the efforts of the optimizer towards aggressively enabling generation of fast schedules along frequently executed paths by reducing their critical path lengths. The paper presents a cost-benefit data flow analysis that uses path profiling information to determine the profitability of using predication enabled sinking. The cost of predication enabled sinking of a statement past a merge point is determined by identifying paths along which an additional statement is introduced. The benefit of predication enabled sinking is determined by identifying paths along which additional dead code elimination is achieved due to predication. The results [...] ...|$|R
40|$|In this paper, we {{introduce}} the MOLEN &rho;&mu;-coded processor which comprises hardwired and microcoded reconfigurable units. At the <b>expense</b> <b>of</b> three new <b>instructions,</b> the proposed mechanisms allow <b>instructions,</b> entire pieces <b>of</b> code, or their combination to execute in a reconfigurable manner. The reconfiguration of the hardware and the execution on the reconfigured hardware are performed by &rho;-microcode (an {{extension of the}} classical microcode to allow reconfiguration capabilities). We include fixed and pageable microcode hardware features to extend the flexibility and improve the performance. The scheme allows partial reconfiguration and includes caching mechanisms for non-frequently used reconfiguration and execution microcode. Using simulations, we establish the performance potential of the proposed processor assuming the JPEG and MPEG- 2 benchmarks, the ALTERA APEX 20 K boards for the implementation, and a hardwired superscalar processor. After implementation, cycle time estimations and normalization, our simulations indicate that the execution cycles of the superscalar machine can be reduced by 30 % for the JPEG benchmark and by 32 % for the MPEG- 2 benchmark using the proposed processor organization...|$|R
5000|$|The {{state is}} to be {{responsible}} for a fundamental reconstruction of our whole national education program, to enable every capable and industrious German to obtain higher education and subsequently introduction into leading positions. The plans <b>of</b> <b>instruction</b> <b>of</b> all educational institutions are to conform with the experiences of practical life. The comprehension of the concept of the State must be striven for by the school Staatsbürgerkunde as early as the beginning of understanding. We demand the education at the <b>expense</b> <b>of</b> the State of outstanding intellectually gifted children of poor parents without consideration of position or profession.|$|R
40|$|Compressed Instruction Set {{architecture}} {{refers to}} support for coexistence <b>of</b> <b>instructions</b> <b>of</b> different <b>instruction</b> widths. By re-encoding {{the most frequently}} used instructions in lesser number of widths code density can be increased at the <b>expense</b> <b>of</b> some extra work in the decode cycle. In this project we have provided support for Compressed Instruction Set in an existing re-targetable compiler-simulator framework, EXPRESSION. We tested the generic implementation on the motorola PowerPC architecture. We decided upon a Compressed Instruction Set for the same, and executed our compiler optimization to estimate the improvements in code size and impact on performance. We found encouraging improvements of upto 20 % in the code size for not a setback i...|$|R
40|$|By {{a decree}} dated 23 July 1890, the Minister <b>of</b> public <b>instruction</b> {{entrusted}} Dutreuil de Rhins [...] . with a scientific mission to Upper Asia, the <b>expenses</b> <b>of</b> which {{were to be}} borne {{in part by the}} Ministry and in part by the Academy of inscriptions and letters. ""A partial reprint of a work entitled 'A scientific mission to upper Asia' (Paris, Leroux, 3 vols. 4 to. and an atlas fol.) which I published in l 897 -l 898 {{under the auspices of the}} Ministry <b>of</b> public <b>instruction.</b> " [...] Pref. Mode of access: Internet...|$|R
40|$|Many {{embedded}} systems {{are subject to}} temporal constraints that require advance guarantees on meeting deadlines. Such systems rely on static analysis to safely bound worst-case execution (WCET) bounds of tasks. Designers of these systems are forced to avoid state-of-the-art processors due to their inherent architectural complexity that results in non-determinism. Such micro-processors are typically tuned to reduce average-case execution times — at the <b>expense</b> <b>of</b> predictability. Dynamic <b>instruction</b> scheduling techniques, such as out-of-order (OOO) execution, are examples of features that reduce average time but are statically unpredictable at large. This work addresses this problem by providing analysis techniques for characterizing the worst-case behavior of real-time systems on modern processor architectures. We propose minor enhancements to processor architectures that, coupled with static analysis techniques, support the derivation of safe WCET bounds. We also introduce novel pipeline analysis techniques for accurately capturing the worst-case behavior of real-time tasks, i. e., methods to capture (“snapshot”) pipeline state and to subsequently perform a “merge ” of previously captured snapshots. We prove that our pipeline analysis correctly preserves worst-case timing behavior on OOO processor pipelines. We further specifically show that anomalous pipeline effects, effectively dilating timing, are preserved by our method. To {{the best of our}} knowledge, this method of pipeline analysis and interactions between hardware/software for obtaining WCET bounds on OOO processors is the first of its kind. 1...|$|R
40|$|Abstract{We {{address the}} problem <b>of</b> <b>instruction</b> {{selection}} in code generation for embedded digital signal processors. Recent work has shown that this task can be efciently solved bytree covering with dynamic programming, even {{in combination with the}} task of register allocation. However, performing instruction selection by tree covering only does not exploit available instructionlevel parallelism, for instance in form <b>of</b> multiplyaccumulate <b>instructions</b> or parallel data moves. In this paper we investigate how such complex instructions may a ect detection of optimal tree covers, and we present a two-phase scheme for instruction selection which exploits available instruction-level parallelism. At the <b>expense</b> <b>of</b> higher compilation time, this technique may signi cantly increase the code quality compared toprevious work, which is demonstrated for a widespread DSP. 1...|$|R
40|$|Law Department of the University of Notre Dame The Grounds The University Building The Rules of Discipline Law Department Qualifications for Admission The Course of Study First Year Second Year Third Year Postgraduate Year Monthly Theses Methods <b>of</b> <b>Instruction</b> The Moot-Court The Law Library Books for Recitation and Class Work Tuition, Board, Lodging, and <b>Expenses</b> Names <b>of</b> Students Catalogue of Students Publication...|$|R
40|$|A disproportionately {{large number}} of New Zealand {{students}} fail to learn to read. Results of recent international studies demonstrate that the gap between New Zealand’s highest- and lowest-achieving readers is wider than most other top-performing countries. Despite research showing the crucial role <b>of</b> explicit phonological-based <b>instruction</b> for children at risk of reading failure, the New Zealand education system continues to emphasise whole language teaching methods at the <b>expense</b> <b>of</b> explicit phonological <b>instruction.</b> Children from low socioeconomic backgrounds {{are at high risk}} of reading failure and are over-represented among New Zealand’s under-achieving readers. The current study investigated the extent to which teachers of beginning readers in low socioeconomic communities placed an emphasis on explicit phonological-based instruction. The relationship between teacher emphasis on phonological instruction and student progress in reading-related skills was also examined. Results demonstrated a significant relationship between teacher emphasis on phonological-based instruction and student progress in word reading whereby students receiving explicit phonological-based literacy instruction made superior progress in word reading skills over children receiving implicit phonological-based <b>instruction.</b> Moreover, analysis <b>of</b> standard deviation in class word reading scores over time demonstrated that a strong emphasis on explicit phonological instruction was associated with a reduction in class variation of word reading scores, while minimal emphasis on explicit phonological instruction was associated with increasing variability of class word reading scores. Correlation results indicated a relationship between word reading skills and phonological ability that strengthened over time. The study findings support previous research demonstrating that phonological awareness and decoding skills {{play a crucial role in}} the development of word reading ability and that explicit phonological-based instruction can attenuate differences in word reading development. Implications for teachers and policy makers are described...|$|R
6000|$|... "Major Clarke, {{convinced}} {{of the necessity of}} reducing the hostile forts in the Ohio country, submitted a plan for the purpose to the Virginia Legislature, in December, 1777. His scheme was highly approved, and Governor Henry and his council were so warmly interested that Major Clarke received two sets <b>of</b> <b>instructions,</b> one public, ordering him to 'proceed to the defense of Kentucky,' the other private, directing an attack upon the British fort at Kaskaskia. Twelve hundred pounds were appropriated to defray the <b>expenses</b> <b>of</b> the expedition; and the commandant of Fort Pitt was ordered to furnish Clarke with ammunition, boats, and other necessary equipments.|$|R
40|$|We {{address the}} problem <b>of</b> <b>instruction</b> {{selection}} in code generation for embedded digital signal processors. Recent work has shown that this task can be efficiently solved by tree covering with dynamic programming, even {{in combination with the}} task of register allocation. However, performing instruction selection by tree covering only does not exploit available instructionlevel parallelism, for instance in form <b>of</b> multiplyaccumulate <b>instructions</b> or parallel data moves. In this paper we investigate how such complex instructions may affect detection of optimal tree covers, and we present a two-phase scheme for instruction selection which exploits available instruction-level parallelism. At the <b>expense</b> <b>of</b> higher compilation time, this technique may significantly increase the code quality compared to previous work, which is demonstrated for a widespread DSP. 1 1 Introduction With growing market shares of embedded systems compared to general-purpose computers, code generation for embedded p [...] ...|$|R
40|$|This {{research}} is case study at PT. Maya Muncar Banyuwangi with title " Reporting <b>Of</b> <b>Expense</b> Quality <b>Of</b> Going to Sertifikasi ISO 9000 at PT. Maya Muncar Banyuwangi". This Research target is to classification <b>of</b> quality <b>expense</b> which was later presented in report of[is <b>expense</b> <b>of</b> quality matching with operating procedure of ISO 9000 and measurement <b>of</b> performance <b>expense</b> <b>of</b> quality. In presentation <b>of</b> report <b>Expense</b> <b>of</b> quality matching with operating procedure of ISO 9000 to cover, <b>expense</b> <b>of</b> inspection to production process, <b>expense</b> <b>of</b> preserver <b>of</b> equipments, <b>expense</b> <b>of</b> training labour, <b>expense</b> <b>of</b> testing product {{and related to}} sigh. In cost analysis quality of used measurement <b>of</b> percentage <b>of</b> <b>expense</b> <b>of</b> quality to sale of year 2005 - 2006 and analyse report performance <b>of</b> <b>expense</b> <b>of</b> quality by using report of trend one period. From this research result, PT. Maya Muncar not yet owned report <b>expense</b> <b>of</b> quality and after classification <b>of</b> quality <b>expense</b> coming from operating cost and cost of goods sold to be presented in report of[is <b>expense</b> <b>of</b> quality and have included what element is existing in procedure of ISO 9000 covering the <b>expense</b> <b>of</b> <b>Expense</b> inspect to production process, <b>expense</b> <b>of</b> looking after equipments (machine), expense train labour, <b>expense</b> <b>of</b> testing product (finished goods of sampel) and related to sigh. For percentage of[is <b>expense</b> <b>of</b> quality at the company experience of increase equal to 0, 35 % from 2, 59 % (year 2005) becoming 2, 94 % (year 2006) meaning quality of natural quality performance and product of degradation during period 2005 - 2006. Preventive <b>expense</b> consisting <b>of</b> the <b>expense</b> <b>of</b> consultant and training <b>of</b> <b>expense</b> and employees treatment of this machine experience of increase equal to 0, 13 % from 1, 58 % (year 2005) becoming 1, 71 % (year 2006). In detail the <b>expense</b> <b>of</b> natural assessment of increase equal to 0, 03 % from 0, 15 % (year 2005) becoming 0, 18 % (year 2006), internal failure <b>expense</b> experience <b>of</b> increase equal to 0, 19 % from 1, 01 (year 2005) becoming 0, 82 (year 2006), <b>expense</b> failure <b>of</b> natural eksternal degradation equal to 0, 001 % from 0, 032 % (year 2005) becoming 0, 031 % (year 2006). Pursuant to above conclusion, PT. Maya Muncar require to be formed a commisioned team draw up all something that needed in applying of ISO 9000. formed team better be lifted from some areas work and given enough training, [doing/conducting] classification <b>of</b> quality <b>expense</b> which presented in report form of[is <b>expense</b> <b>of</b> quality (budget and his realization) by kontinu percentage and every year <b>expense</b> <b>of</b> quality is that happened expected can more depress as minimum as possible especially at internal failure biya which in the year 2006 experiencing of highest increase so that percentage <b>expense</b> <b>of</b> quality can reside in gyration 2, 5 % from sale without having to lessen quality of yielded produc...|$|R
40|$|The {{purpose of}} this {{research}} is to test infuence: (1) the <b>expense</b> <b>of</b> advertisement to improvement of deposit sale; (2) the <b>expense</b> <b>of</b> personal selling to improvement of deposit sale; (3) {{at the same time the}} <b>expense</b> <b>of</b> advertisement and the <b>expense</b> <b>of</b> personal selling to improvement of deposit sale. The research uses six sekunder data in the year 2011 up to 2013 in semester. The technique of data analysis uses the double analysis regresi with the program SPSS 21. The fnding of the research was the <b>expense</b> <b>of</b> advertisement is not signifcant infuence to improvement of deposit sale and the <b>expense</b> <b>of</b> personal selling is signifcant infuence to improvement of deposite sale. At the same time the <b>expense</b> <b>of</b> advertisement and personal selling are signifcant infuence to improvement of deposite sale...|$|R
5000|$|The <b>expense</b> <b>of</b> {{training}} on real equipment can sometimes exceed the <b>expense</b> <b>of</b> a simulator.|$|R
50|$|In 2000/2001 {{academic}} year, 70% {{of students}} attended Ukrainian-language schools (that is where Ukrainian {{is the primary}} language <b>of</b> <b>instruction),</b> while 29% were studying in Russian-language schools. There are schools with instruction in Romanian, Crimean Tatar, Hungarian, and Polish in regions populated by those groups.Historically, the language <b>of</b> <b>instruction</b> has often changed in Ukraine. When Ukraine {{was part of the}} Russian Empire, the Ukrainian language was proscribed, and Russian predominated among the elite, who had access to schools.The initial policies of the Bolsheviks were supportive of local languages, and many Ukrainian-language schools were opened, with the long-term goal of getting rid of illiteracy. From the mid-1930s to the mid-1980s, the Soviet government policies favoured Russification. In the 1970s and 1980s, the number of Russian-language schools constantly increased at the <b>expense</b> <b>of</b> Ukrainian-language schools. After Ukraine obtained independence the trend was reversed. However, reintroduction of formal Ukrainian-language study has taken longer than expected. In some schools that have tried to switch to Ukrainian, part or most <b>of</b> the <b>instruction</b> is still given in Russian.In universities there are similar trends. In 1991/92 academic year, according to the Razumkov Centre, 49% of high school students were receiving their education in Ukrainian, and 50% in Russian.|$|R
40|$|Abstract. An {{important}} issue in embedded systems design {{is the size}} of programs. As computing devices decrease in size, yet with more and more functions, better code size optimizations are in greater demand. For an embedded RISC processor, where the use <b>of</b> compact <b>instructions</b> (e. g., the ARM Thumb) restricts the number of accessible registers at the <b>expense</b> <b>of</b> a potential increase in spill code, a significant proportion <b>of</b> <b>instructions</b> load or store to memory. In this paper we present a new technique which both identifies sequences of single load and store instructions for combining into multiple load and store instructions, and guides the layout of function stack frames, global storage and register allocation, previously only seemingly done by opportunistic optimization. We implement this in our SolveMMA algorithm, similar to Liao’s Simple Offset Assignment algorithm. We implement our algorithm within the Value State Dependence Graph framework, describe how the algorithm is specialized for specific processors, and use the ARM Thumb as a concrete example for analysis. ...|$|R
40|$|The {{interactivity}} {{principle in}} multimedia learning states that giving learners control over pace and order <b>of</b> <b>instructions</b> decreases cognitive load and increases transfer performance. We tested this guideline by comparing a learner-paced instruction with a system-paced instruction. Time-on-task and interactive behavior were logged, and were {{also related to}} interest, prior knowledge, and cognitive involvement. We successfully replicated the interactivity principle in terms of better transfer. However, this coincided with a large increase in time-on-task. Also, large individual differences existed {{in the use of}} learner control options, which were mostly unrelated to the other variables. Thus, the benefits of introducing learner control in multimedia learning are at the <b>expense</b> <b>of</b> learning efficiency, and it remains unclear for whom the interactivity principle works best...|$|R
50|$|David Merrill's First Principles <b>of</b> <b>Instruction</b> {{discusses}} universal methods <b>of</b> <b>instruction,</b> situational {{methods and}} core {{ideas of the}} post-industrial paradigm <b>of</b> <b>instruction.</b>|$|R
40|$|In {{this paper}} we address the problem <b>of</b> {{generating}} an <b>instruction</b> sequence S from a data dependence graph (DDG) that is optimal {{in terms of the}} number of registers used by the sequence S. This problem is closely related to the traditional optimal code generation (OCG) problem, which minimizes the code length, and is known to be NP-Complete for DAGs. While traditional code generation methods and instruction-level parallelism compilation techniques emphasize exposing parallelism to reduce the code length, there are at least two execution environments [...] - out-of-order issue superscalar processors and low-power embedded architectures [...] - where optimizing the number of registers used takes precedence, even at the <b>expense</b> <b>of</b> limiting the amount of instruction-level parallelism exposed at compile-time. We present two solution methods for the Minimum Register Instruction Sequence (MRIS) problem. First, we present a heuristic solution which introduces the notion <b>of</b> <b>instruction</b> linea [...] ...|$|R
40|$|California has a {{long history}} of {{linguistic}} diversity and conflict surrounding the education of students who come to school speaking a language other than English. This conflict has been evident since before the 1960 s, when the federal Bilingual Education Act was signed; presently, state legislation specifies that instruction must be overwhelmingly in English (Unz and Matta-Tuchman, 1998). In June 1998, California voters approved Proposition 227. Authored by businessman Ron Unz and elementary teacher Gloria Mana Tuchman, the measure called for all students classified as English Language Learners (ELLs) to be placed in classrooms designed to provide intensive English language instruction for one academic year before placement in mainstream English-only classes. The intensive English language program, called Structured English Immersion (SEI), places the instructional emphasis on English language <b>instruction</b> at the <b>expense</b> <b>of</b> other content areas for one to two years. This plan is based on an English-only ideology that denounces the use of any language other than English as a medium <b>of</b> <b>instruction</b> in the public schools and includes a provision that allows parents to sue teachers and school administrators for using Spanish as a means <b>of</b> <b>instruction...</b>|$|R
60|$|Then {{came the}} {{question}} as to whether he should return by the train at the <b>expense</b> <b>of</b> his small capital, or walk at the <b>expense</b> <b>of</b> time.|$|R
50|$|Certain {{models have}} engine {{controls}} that permit lower fuel consumption (possibly at the <b>expense</b> <b>of</b> higher emissions) or lower emissions (possibly at the <b>expense</b> <b>of</b> higher fuel consumption).|$|R
25|$|A peace {{made with}} foreigners at the <b>expense</b> <b>of</b> the princes of the blood; with the House of Lorraine at the <b>expense</b> <b>of</b> the House of France; with rebels at the <b>expense</b> <b>of</b> obedient subjects; with {{agitators}} at the <b>expense</b> <b>of</b> {{those who have}} brought peace by every means within their power.... I intend to oppose it with all my heart, and to this end to rally around me... all true Frenchmen without regard to religion, since this time {{it is a question}} of the defence of the state against the usurpation of foreigners.|$|R
3000|$|... [...]. The <b>expense</b> <b>of</b> calculating LU {{factorization}} is O(N 3) {{operations and}} the <b>expense</b> <b>of</b> solving the linear system (35), {{provided that the}} factorization is known, is O(N 2).|$|R
5000|$|Disclosure <b>of</b> <b>expenses</b> <b>of</b> Members of the United Kingdom Parliament ...|$|R
40|$|International audienceModern {{multicore}} chips target thread-level parallelism at the <b>expense</b> <b>of</b> increasing instruction-level parallelism from single threaded programs. While {{recent work}} {{has attempted to}} construct a wide-ILP machine from multiple simple cores, these approaches suffer from ISA overheads or scalability challenges. In this paper, we describe an architecture that is inspired by the scalability and flexibility of the TFLEX architecture, yet elides the unorthodox ISA and the overheads that stem from its dataflow execution model. Our results focus on the tradeoff between near out-of-order execution (small out-of-order window within a block <b>of</b> <b>instructions)</b> and far out-of-order execution across blocks. Experiments indicate that a small out-of-order window combined with block-level speculation enables our proposed ReFLEX architecture to achieve comparable performance and flexibility as TFLEX yet with simpler cores and a more conventional ISA...|$|R
40|$|On-chip {{instruction}} caches {{are increasing}} in size. Compiler writers are exploiting this fact by applying {{a variety of}} optimizations that improve the execution performance of a program at the <b>expense</b> <b>of</b> increasing its code size. This paper describes a new optimization {{that can be used}} to avoid conditional branches by replicating code. The central idea is to determine if there are paths where the result of a conditional branch will be known and to replicate code to exploit it. Algorithms are described for detecting when branches are avoidable, for restructuring the control flow to avoid these branches, and for positioning the replicated blocks in the restructured code. The results indicate that the optimization can be frequently applied with reductions in both the number <b>of</b> <b>instructions</b> executed and total instruction cache work...|$|R
40|$|Modern {{multicore}} chips target thread-level parallelism at the <b>expense</b> <b>of</b> increasing instruction-level parallelism from single threaded programs. While {{recent work}} {{has attempted to}} construct a wide-ILP machine from multiple simple cores, these approaches suffer from ISA overheads or scalability challenges. In this paper, we describe an architecture that is inspired by the scalability and flexibility of the TFLEX architecture, yet elides the unorthodox ISA and the overheads that stem from its dataflow execution model. Our results focus on the tradeoff between near out-of-order execution (small out-of-order window within a block <b>of</b> <b>instructions)</b> and far out-of-order execution across blocks. Experiments indicate that a small out-of-order window combined with block-level speculation enables our proposed ReFLEX architecture to achieve comparable performance and flexibility as TFLEX yet with simpler cores and a more conventional ISA. ...|$|R
40|$|Abstract—The large <b>expense</b> <b>of</b> current chip {{fabrication}} can generally only be amortized {{for large}} manufacturing volumes. Thus, {{it is desirable}} to build adaptable chips that can be customized to the application needs after production. In this contribution we show that this adaptation is possible even without reconfigurable HW components. We propose synthilation, a new method for adapting the processor to the application requirements. It combines methods of hardware synthesis and software compilation to map high-level descriptions to hardware components of the processor. Our approach is applicable to varying degrees of reconfigurability, reaching from static microar-chitectures just with writable control stores (variable microcode), to the exploitation <b>of</b> <b>instruction</b> level parallelism with multiple computational units. We consider both a practical real-world example as well as theoretical bounds on the speed-ups achievable by our method. I...|$|R
