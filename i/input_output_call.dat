0|10000|Public
50|$|The French company Kapsys {{offers a}} {{navigation}} system without a display, {{that works with}} speech <b>input</b> and <b>output,</b> <b>called</b> Kapten.|$|R
40|$|Daily {{activity}} of the users of a mobile-phone network is represented as a sequence of <b>input</b> and <b>output</b> <b>calls</b> and of <b>input</b> and <b>output</b> text messages. Each such sequence corresponds to its spectrum, the distribution of short two-letter sequences of the same type. It is shown that the spectra of any user’s sequences are stable, i. e. reproduced daily. Based on this, {{the notion of a}} user’s strategy is introduced. The number of different strategies appears to be limited, {{in the sense that the}} number of user groups with the same strategy is sufficiently small...|$|R
30|$|All web {{services}} implementing the trust pattern currently described in our knowledge repository {{have been created}} and registered as artifacts in our service repository [34]. Furthermore, these artifacts are described in detail including a definition of <b>input,</b> <b>output</b> and example <b>calls</b> as defined in Table 4.|$|R
5000|$|Memory (typically some {{region of}} virtual memory); which {{includes}} the executable code, process-specific data (<b>input</b> and <b>output),</b> a <b>call</b> stack (to keep track of active subroutines and/or other events), and a heap to hold intermediate computation data generated during run time.|$|R
40|$|AbstractAn {{important}} {{class of}} timed transition {{systems can be}} modeled by deterministic weighted automata, which are essentially partial Mealy automata, and their extensions using synchronous compositions defined over extended alphabets. From a coalgebraic viewpoint, behaviours of deterministic partial Mealy automata are causal and length preserving partial functions between finite and infinite sequences of <b>inputs</b> and <b>outputs,</b> <b>called</b> stream functionals. After a study of fundamental properties of functional stream calculus an application to the definition by coinduction of the synchronous product of stream functionals is proposed...|$|R
5000|$|At any {{specific}} time, processes can be grouped into two categories: {{those that are}} waiting for <b>input</b> or <b>output</b> (<b>called</b> [...] "I/O bound"), {{and those that are}} fully utilizing the CPU ("CPU bound"). In primitive systems, the software would often [...] "poll", or [...] "busywait" [...] while waiting for requested input (such as disk, keyboard or network input). During this time, the system was not performing useful work. With the advent of interrupts and preemptive multitasking, I/O bound processes could be [...] "blocked", or put on hold, pending the arrival of the necessary data, allowing other processes to utilize the CPU. As the arrival of the requested data would generate an interrupt, blocked processes could be guaranteed a timely return to execution.|$|R
30|$|In this paper, we bridged two {{existing}} {{approaches to}} networks, categorical network theory and network science. The former regards networks as processes, {{on the other}} hand, the latter does networks as things. We internalized the idea that networks are processes into networks themselves: Nodes are processes rather than things. Based on the category theoretic representation of this viewpoint, we proposed betweenness centralities of nodes as <b>input</b> and <b>output</b> <b>called</b> IBC and OBC, respectively. We discussed their meaning through toy directed networks and demonstrated their use in real-world directed networks by calculating them for a food web. We also compared them with existing centrality measures that reflect asymmetry of links in directed networks. We found that IBC and OBC take quite different values from out- and in-degrees or Hub and Authority scores for some nodes.|$|R
5000|$|At any {{specific}} time, processes can be grouped into two categories: {{those that are}} waiting for <b>input</b> or <b>output</b> (<b>called</b> [...] "I/O bound"), {{and those that are}} fully utilizing the CPU ("CPU bound"). In early systems, processes would often [...] "poll", or [...] "busywait" [...] while waiting for requested input (such as disk, keyboard or network input). During this time, the process was not performing useful work, but still maintained complete control of the CPU. With the advent of interrupts and preemptive multitasking, these I/O bound processes could be [...] "blocked", or put on hold, pending the arrival of the necessary data, allowing other processes to utilize the CPU. As the arrival of the requested data would generate an interrupt, blocked processes could be guaranteed a timely return to execution.|$|R
40|$|Multiple Response Surface (MRS) is {{the useful}} way to satisfy {{more than one}} output characteristic. It’s {{originated}} from statistical approach to estimate relations between <b>inputs</b> and <b>output</b> variable <b>called</b> Response Surface Methodology (RSM). This study reviews important Multi-Response Optimization (MRO) methods and uses Multiple Attribute Decision Making (MADM) methods such as VIKOR, PROMETHEE II, ELECTRE III and TOPSIS in converting multi-response to single response in order to analyze the robust experimental design. Finally, numerical results and comparison of MADM methods are shown...|$|R
40|$|We present new {{experimental}} Windows 95 / 98 /NT {{software for}} investigation of graph properties of boolean (in particular, Reed-Muller) logic {{with an equal}} number n of <b>inputs</b> and <b>outputs</b> (<b>called</b> movement functions). Realized at the input of an n-bit register, such functions create autonomous Finite State Machines (FSMs). TRACE software system allows the user to visualize State Transition Graphs (STGs) of the autonomous FSMs. Other features of TRACE help explore graph properties of function families. These families are produced by a generic function, differing from it only {{in the order of}} components, one operation, or one literal (this literal is complemented or replaced by another literal). The autonomous FSMs are used to implement economically next-state logic of realtime control units such as CPU controllers. A case study using TRACE to build economical, highly testable reversible counters based on linear Reed-Muller polynomials is given. Introduction The classical approach [...] ...|$|R
40|$|We {{propose a}} new {{representation}} of exact real numbers using Gray code. This representation is injective {{and with a}} modied Type 2 machine induces the same computable structure on real numbers as admissible representations. This means that real numbers with the standard computable structure can be embedded into the space of innite words by considering a dierent sort of Type 2 machine. We also show that basic algorithms can be expressed naturally {{with respect to this}} representation. 1 Introduction One of the ways of dening computability of real functions is by representing a real number as an innite sequence and dening the computability of a function by the existence of a machine which <b>inputs</b> and <b>outputs</b> the representations one-way from left to right. This kind of machine with innite <b>input</b> and <b>output</b> is <b>called</b> a Type 2 machine. We can also dene the notion of a computable real number as a special case with no input. This notion of computability dates back to Turing[Turing 1 [...] ...|$|R
40|$|We {{introduce}} an <b>input</b> and <b>output</b> {{device that}} enables illumination, bi-directional data communication, and position sensing on a soft cloth. This “LightCloth ” is woven from diffusive optical fibers. Sensor-emitter pairs attached to bundles of contiguous fibers enable bundle-specific light <b>input</b> and <b>output.</b> We developed a prototype {{system that allows}} full-color illumination and 8 -bit data input by infrared signals. Author Keywords Soft deformable user interface; diffusive optical fiber; illumination; light communication; position sensing. ACM Classification Keywords H. 5. 2. Information interfaces and presentation (e. g., HCI) : User Interfaces. What is LightCloth? An optical fiber typically acts as a waveguide {{from one end to}} the other. Another type of the fiber is “diffusive” optical fiber which leaks some light through micro-scratches on its surface. A cloth woven from such diffusive optical fibers has been used in fashion and spatial design fields for making light-emitting fabric products [1, 2]. A diffusive optical fiber not only leaks light but also receives light incident on its surface. The light entering from the scratches on the surface goes through the core and leaks out from the ends. Focusing on this property, we developed a new fabric I/O (<b>input</b> and <b>output)</b> device, <b>called</b> “LightCloth, ” that enables illumination, bi-directional data communication, and position sensing (Figure 1) ...|$|R
40|$|This paper {{presents}} {{a computer program}} that simulates situations (called &quot;MIKROKOSMS&quot;) in which severl entities (called &quot;organisms&quot;) wander around {{in an environment that}} includes one another plus other, apparently simpler, entities (called &quot;objects&quot;). The program has a rather simple set of &quot;laws &quot; of objects, which {{can be thought of as}} the laws of physics of the MIKROKOSM. It also has other specifications for organisms- their <b>input</b> and <b>output</b> functions (<b>called</b> &quot;perception&quot; and &quot;response&quot;), their reward functions (called &quot;motivation &quot; or &quot;needs&quot;), and their mechanisms for building up internal memories (called &quot;learning&quot; and &quot;hypothesis formation&quot;) that will'help them to recognize objects in the future, and respond appropriately to them (for example, in order to maximize expected rewards). This program lays bare the processes that are needed to handle interactions among simulated organisms and objects, including the learning of hypotheses that wil...|$|R
5000|$|... "Applications of <b>Input</b> <b>Output</b> Analysis for Less Developed Countries", in Sohn, I. (ed.), Readings in <b>Input</b> <b>Output</b> Analysis, Oxford University Press, 1986 ...|$|R
2500|$|A {{parallel}} feedback connection at the <b>input</b> (<b>output)</b> {{decreases the}} <b>input</b> (<b>output)</b> resistance {{by a factor}} ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
40|$|In this paper, {{we study}} {{the power of}} {{sequential}} decoding strategies for several channels with classical <b>input</b> and quantum <b>output.</b> In our sequential decoding strategies, the receiver loops through all candidate messages trying to project the received state onto a `typical' subspace for the candidate message under consideration, stopping if the projection succeeds for a message, which is then declared as the guess of the receiver for the sent message. We show that even such a conceptually simple strategy {{can be used to}} achieve rates up to the mutual information for a single sender single receiver channel called cq-channel henceforth, as well as the standard inner bound for a two sender single receiver multiple access channel, called ccq-MAC in this paper. Our decoding scheme for the ccq-MAC uses a new kind of conditionally typical projector which is constructed using a geometric result about how two subspaces interact structurally. As the main application of our methods, we construct an encoding and decoding scheme achieving the Chong-Motani-Garg inner bound for a two sender two receiver interference channel with classical <b>input</b> and quantum <b>output,</b> <b>called</b> ccqq-IC henceforth. This matches the best known inner bound for the interference channel in the classical setting. Achieving the Chong-Motani-Garg inner bound, which is known to be equivalent to the Han-Kobayashi inner bound, answers an open question raised recently by Fawzi et al. (arxiv: 1102. 2624). Our encoding scheme is {{the same as that of}} Chong-Motani-Garg, and our decoding scheme is sequential. Comment: 34 page...|$|R
30|$|Our {{primary source}} of data is the <b>Input</b> <b>Output</b> Transaction Table of 2007 – 08 {{published}} by Central Statistical Organization (CSO 2012), Government of India. This is a 130 X 130 commodity matrix used for <b>Input</b> <b>Output</b> Analysis.|$|R
40|$|The use of {{measures}} originally suggested by Bennet, Bowley, and Hicks {{in the context}} of cost of living, welfare, and consumer surplus measurement to measure <b>inputs,</b> <b>outputs,</b> and productivity is examined. Suitably normalized versions of the Bennet-Bowley measures are shown to be exact and superlative measures of <b>input,</b> <b>output,</b> and productivity indicators. <b>Input</b> and <b>output</b> measurement, Productivity measurement, Directional distance functions. ...|$|R
5000|$|The general {{conclusion}} from this example {{and a similar}} example for the output resistance case is:A parallel feedback connection at the <b>input</b> (<b>output)</b> decreases the <b>input</b> (<b>output)</b> resistance by a factor ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
40|$|A network {{management}} system has SNMP agents distributed at {{one or more}} sites, an <b>input</b> <b>output</b> module at each site, and a server module located at a selected site for communicating with <b>input</b> <b>output</b> modules, {{each of which is}} configured for both SNMP and HNMP communications. The server module is configured exclusively for HNMP communications, and it communicates with each <b>input</b> <b>output</b> module according to the HNMP. Non-iconified, informationally complete views are provided of network elements to aid in {{network management}}...|$|R
40|$|Games for system {{analysis}} • Verification: check if a given system is correct → reduces to graph searching System <b>input</b> <b>output</b> Spec: φ(input,output) Environment Games for {{system analysis}} <b>input</b> <b>output</b> Spec: φ(input,output) Environment • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy Games for system analysis Spec: φ(input,output) • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy This talk: environment is abstracted as a stochastic process <b>input</b> <b>output</b> Environment <b>input</b> <b>output</b> = Markov decision process (MDP) ? Markov decision proces...|$|R
40|$|This thesis {{documents}} {{the design and}} implementation of computations, the procedural abstraction facility of a database programming language. Conceived as a special form of relation, computations fit neatly into the relational model. A computation is defined over a set of domains, which also act as parameters. Invocation is accomplished {{by means of the}} operators of the relational algebra. A computation is intended to embody a constraint amongst its parameters. These are grouped into <b>inputs</b> and <b>outputs</b> at <b>call</b> time. Given a set of input values, the computation returns output values that satisfy the constraint. Computations may be recursive, and may also be nested within other computations. This latter property leads to a notion of scopes and environments. With computations, a mechanism is also provided for the instantiation of stateful objects. It is designed to handle large numbers of such objects efficiently. Behaviour may be encapsulated within the object. The implementation is part of the jRelix project at McGill University. jRelix is the successor of the Relix relational database programming language. A significant feature of the new implementation is the support for nested relations of arbitrary depth. The programming language Java was used exclusively for the implementation...|$|R
40|$|Acquaye, Alston and Pardey {{report and}} discuss {{agricultural}} <b>input</b> and <b>output</b> price and quantity estimates for various spatial aggregates within the United States {{and a range}} of multi-factor productivity measures for the period 1949 - 1991. Laspeyres, Paasche, Fisher Ideal, and Törnqvist-Theil index number procedures (base year 1949 = 100) were used to develop their estimates, the formulas for which are presented below and elaborated further in Alston, Norton, and Pardey (1995). An Excel spreadsheet file named accompanies these notes. It contains the price and quantity <b>input</b> and <b>output</b> aggregates for each of the 48 contiguous states, 11 USDA production regions (with the Northeast region split into two sub-regions), and a 48 -state (national) total for the period 1949 - 91. The data file also includes various <b>input</b> and <b>output</b> subaggregates (see table 1 from Acquaye, Alston, and Pardey, appended below, for details) and the value shares using prices from the current and past period that are required to reconstruct all these indexes for all the spatial units reported in the paper. Documentation of the primary data files constructed by Craig, Pardey, and Acquaye is also available in the file named Index Number Construction The Laspeyres and Paasche indexes are not chain-linked indexes—they use base-period and current prices and quantities, respectively in the calculation. The Laspeyres <b>input</b> (<b>output)</b> quantity index uses base period <b>input</b> (<b>output)</b> prices to weight both current and base-period <b>input</b> (<b>output)</b> quantities, and was calculated as where Pi 0 is the price of <b>input</b> (<b>output)</b> i in the base-period, and Qi 0 is the quantity of <b>input</b> (<b>output)</b> i in the base-period. N is the number of individual observations of <b>input</b> (<b>output)</b> ...|$|R
5000|$|... #Article: Hybrid <b>input</b> <b>output</b> (HIO) {{algorithm}} for phase retrieval ...|$|R
5000|$|Imported {{function}} {{can have}} <b>input,</b> <b>output,</b> and inout arguments.|$|R
50|$|<b>Input,</b> <b>Output,</b> and I/O {{fields are}} similar to text boxes.|$|R
5000|$|... #Subtitle level 2: Bootstrapping {{using the}} Basic <b>input</b> <b>output</b> system ...|$|R
5000|$|Directorate General of <b>Input</b> <b>Output</b> Coefficient Organization - Pakistan Customs ...|$|R
5000|$|... 20+4 {{including}} 8 GPIOs {{which can}} be <b>input,</b> <b>output,</b> interrupt sources; ...|$|R
5000|$|... {{automatic}} redirection {{of standard}} <b>input,</b> <b>output</b> and error from/to regular files; ...|$|R
30|$|As a conclusion, our {{proposed}} approach {{suggests an}} efficient alternative procedure to estimate predicted intervals for FR model with fuzzy <b>input</b> and <b>output.</b> As {{a limitation of}} our study, we only focused on fuzzy regression model in the case that <b>input</b> and <b>output</b> {{are assumed to be}} symmetric or nonsymmetric triangular fuzzy numbers. Therefore, we only considered FRBF Network when <b>input,</b> <b>output</b> and weights are triangular fuzzy numbers and we did not consider another types of fuzzy numbers in this study. Although the discussion of this study is confined to simple regression with one <b>input</b> and one <b>output,</b> it can be generalized to cope with cases of multiple <b>inputs</b> and <b>outputs.</b> For future studies, more general fuzzy <b>inputs,</b> <b>outputs</b> and weights such as trapezoidal fuzzy numbers could be handled with our FRBF Network approach and it could be applied to different FR models.|$|R
5000|$|... #Caption: Figure 2:Transfer {{function}} relating <b>input</b> <b>output</b> powers for the Mamyshev 2R regenerator.|$|R
5000|$|The PFile format {{based on}} the Protocol Buffers engine for {{multiplatform}} <b>input</b> <b>output</b> ...|$|R
5000|$|Process ontology: <b>inputs,</b> <b>outputs,</b> constraints, {{sequencing}} information, {{involved in}} business or engineering processes ...|$|R
5000|$|... 2010 - Experiments on the Notation of Shapes, <b>Input</b> <b>Output</b> Gallery, Hong Kong ...|$|R
50|$|A datacard is an {{electronic}} card for data operations (storage, transfer, transformation, <b>input,</b> <b>output).</b>|$|R
