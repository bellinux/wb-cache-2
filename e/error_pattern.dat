294|1068|Public
2500|$|Definition. The {{number of}} symbols {{in a given}} <b>error</b> <b>pattern</b> [...] is denoted by ...|$|E
2500|$|For example, {{the burst}} {{description}} of the <b>error</b> <b>pattern</b> [...] is [...] Notice that such description is not unique, because [...] describes the same burst error. In general, {{if the number of}} nonzero components in [...] is , then [...] will have [...] different burst descriptions each starting at a different nonzero entry of [...] To remedy the issues that arise by the ambiguity of burst descriptions with the theorem below, however before doing so we need a definition first.|$|E
2500|$|It {{is often}} useful {{to have a}} compact {{definition}} of a burst error, that encompasses not only its length, but also the pattern, and location of such error. [...] We define a burst description to be a tuple [...] where [...] is {{the pattern of the}} error (that is the string of symbols beginning with the first nonzero entry in the <b>error</b> <b>pattern,</b> and ending with the last nonzero symbol), and [...] is the location, on the codeword, where the burst can be found.|$|E
3000|$|..., of the ML decoding, {{the list}} size L must be large. Hence, we can obtain a {{practical}} list construction by assuming the L sufficiently probable <b>error</b> <b>patterns</b> rather than assuming the L most likely <b>error</b> <b>patterns.</b> We restate Theorems 1 and 2 in [4] {{to obtain the}} likely <b>error</b> <b>patterns</b> and to define the practical list decoding algorithms.|$|R
40|$|<b>Error</b> <b>patterns</b> are {{considered}} to be the best criterion to identify children with phonological disorders (Dodd, 2005). Assessing bilingual children with suspected phonological disorders is a challenge to speech pathologists because developmental <b>error</b> <b>patterns</b> in bilingual children are not well understood. This presentation reports on <b>error</b> <b>patterns</b> in typically developing Korean-English bilingual children aged between 5; 0 and 6; 11 (n = 30) from an on-going study. Compared to their monolingual counterparts, a greater number of <b>error</b> <b>patterns</b> were found with the bilinguals. While most <b>error</b> <b>patterns</b> were considered typical for monolinguals, the ages of suppression for these were delayed. For example, stopping of fricatives persisted till 6; 5 in bilingual children in English and 5; 11 in Korean, even though it is suppressed by 3; 5 and 4; 11 in monolingual English- (Dodd, Holm, Hua, & Crosbie, 2003) and Korean-speaking children (Kim, 2006), respectively. In addition, <b>error</b> <b>patterns</b> deemed atypical for monolingual children emerged in both languages (e. g. word final vowel epenthesis in English and word final stop aspiration in Korean). Such 'atypical' <b>error</b> <b>patterns</b> are likely {{to be the result of}} a transference of the phonotactic constraints of one language into the other. The emerging <b>error</b> <b>patterns</b> will be further discussed with potential factors influencing their emergence and suppression (e. g. age of second language acquisition, language exposure). The presentation will conclude with clinical implications of the study’s findings...|$|R
40|$|One hundred forty {{students}} in grades 3, 5 and 8 were tested to compare <b>error</b> <b>patterns</b> for whole number addition, subtraction, multiplication, and division. Results showed that <b>error</b> <b>patterns</b> do persist from grade to grade. The most prevalent errors were: lack of mastery of basic addition and multiplication facts; failure to understand place value and numeration; and confusion with subtraction and regrouping. The study concluded that because <b>error</b> <b>patterns</b> endure, teachers {{must be prepared to}} identify and remediate, as well as prevent errors through informed methods. Future studies should focus on <b>error</b> <b>patterns</b> in other grades and the effect of computer assisted instruction on student errors...|$|R
5000|$|Definition. The {{number of}} symbols {{in a given}} <b>error</b> <b>pattern</b> [...] is denoted by ...|$|E
5000|$|Also, {{decoding}} {{a folded}} Reed-Solomon code is an easier task. Suppose {{we want to}} correct a third of errors. The decoding algorithm chosen must correct an <b>error</b> <b>pattern</b> that corrects every third symbol in the Reed-Solomon encoding. But after folding, this <b>error</b> <b>pattern</b> will corrupt all symbols over [...] and will {{eliminate the need for}} error correction. This propagation of errors is indicated by the blue color in the graphical description. This proves that the for a fixed fraction of errors [...] the folding operation reduces the channel's flexibility to distribute errors, which in turn leads to a {{reduction in the number of}} error patterns that need to be corrected.|$|E
5000|$|Near-surface land {{temperature}} {{errors are}} substantial {{in the average}} over flux-adjusted models, which systematically underestimates (by about 5 K) temperature in areas of elevated terrain. The corresponding average over non-flux-adjusted models forms a similar <b>error</b> <b>pattern</b> (with somewhat increased amplitude) over land.|$|E
40|$|One-step {{majority}} logic decoding corrects {{not only}} all <b>error</b> <b>patterns</b> of weight t or less {{but also some}} <b>error</b> <b>patterns</b> of weight greater than t. In this thesis {{an estimate of the}} number of <b>error</b> <b>patterns</b> of weight t+ 1, which 1 -step MLD can correct, is given since they have a high probability of occurrence as compared, to those of greater weights. General considerations on 1 -step MLD are also included...|$|R
40|$|We {{propose a}} verb {{suggestion}} method which uses candidate sets and domain adaptation to incorporate <b>error</b> <b>patterns</b> produced by ESL learners. The candidate sets are constructed {{from a large}} scale learner corpus to cover various <b>error</b> <b>patterns</b> made by learners. Furthermore, the model is trained using both a native corpus and the learner corpus via a domain adaptation technique. Experiments on two learner corpora show that the candidate sets increase the coverage of <b>error</b> <b>patterns</b> and domain adaptation improves the performance for verb suggestion. ...|$|R
5000|$|... 1975 - Owen Gingerich, using modern {{planetary}} {{theory and}} digital computers, calculates the actual {{positions of the}} planets in the 16th Century and graphs the errors in the planetary positions predicted by the ephemerides of Stöffler, Stadius and others. According to Gingerich, the <b>error</b> <b>patterns</b> [...] "are as distinctive as fingerprints and reflect {{the characteristics of the}} underlying tables. That is, the <b>error</b> <b>patterns</b> for Stöffler are different from those of Stadius, but the <b>error</b> <b>patterns</b> of Stadius closely resemble those of Maestlin, Magini, Origanus, and others who followed the Copernican parameters." ...|$|R
5000|$|Similarly to the Quicksort {{comparison}} above, if {{the channel}} {{wants to do}} something smart, it must first test all the permutations. However, this is infeasible for a computationally bounded adversary, so the most it can do is make a random <b>error</b> <b>pattern</b> [...] But then: ...|$|E
5000|$|Now {{suppose that}} a {{codeword}} [...] is sent over the channel and the <b>error</b> <b>pattern</b> [...] occurs. Then [...] is received. Ordinary minimum distance decoding would lookup the vector [...] in {{a table of}} size [...] for the nearest match - i.e. an element (not necessarily unique) [...] with ...|$|E
50|$|At first glance, the {{worst-case}} model seems intuitively ideal. The guarantee that an algorithm will succeed {{no matter what}} is, of course, highly alluring. However, it demands too much. A real-life adversary cannot spend an indefinite amount of time examining a message {{in order to find}} the one <b>error</b> <b>pattern</b> which an algorithm would struggle with.|$|E
30|$|For the OSD(I)and {{the list}} of the test <b>error</b> <b>patterns</b> (10), the bit errors in the MRIPs can be {{considered}} as conditionally independent. Similarly, for the POSD(I 1,I 2)and {{the list of}} the test <b>error</b> <b>patterns</b> (12), the bit errors in the two segments can be considered to be conditionally independent.|$|R
40|$|Abstract — This paper {{addresses}} two coding schemes {{which can}} handle emerging <b>errors</b> with crisscross <b>patterns.</b> For example, these <b>error</b> <b>patterns</b> {{can occur in}} time-stationary fading channel conditions of a next generation multi-carrier based transmission system. First, a code with maximum rank distance, so-called Rank-Codes, is described and a modified Berlekamp-Massey algorithm is provided. Secondly, a permutation code based coding scheme for crisscross <b>error</b> <b>patterns</b> is presented which can be decoded by the concepts of permutation trellis codes. I...|$|R
40|$|For {{a number}} of binary cyclic codes with e 2 ̆ 6 gt;e BCH, {{algebraic}} algorithms are given to find the error locator polynomial. Thus, for these codes more errors can be corrected algebraically than by the Berlekamp-Massey algorithm. In some cases, all <b>error</b> <b>patterns</b> of weight up to e can be decoded; in other cases, only <b>error</b> <b>patterns</b> of weight up to e' with e BC...|$|R
5000|$|... {{can detect}} [...] errors : Because a {{codeword}} [...] {{is the only}} codeword in the Hamming ball centered at itself with radius , no <b>error</b> <b>pattern</b> of [...] or fewer errors could change one codeword to another. When the receiver detects that the received vector is not a codeword of , the errors are detected (but no guarantee to correct).|$|E
5000|$|A normal SYNC [...] "ready" [...] {{pattern of}} 0000 (or an <b>error</b> <b>pattern</b> of 1010) {{requests}} that the host stop DMA after the immediately following byte until the device makes another DMA request via the LDRQ# signal. A pattern of 1001 {{indicates that the}} host should consider he device's DMA request still active; the host will continue with any remaining bytes in this transfer or start another transfer, as appropriate, without a separate request via LDRQ#.|$|E
5000|$|For example, {{the burst}} {{description}} of the <b>error</b> <b>pattern</b> [...] is [...] Notice that such description is not unique, because [...] describes the same burst error. In general, {{if the number of}} nonzero components in [...] is , then [...] will have [...] different burst descriptions each starting at a different nonzero entry of [...] To remedy the issues that arise by the ambiguity of burst descriptions with the theorem below, however before doing so we need a definition first.|$|E
40|$|Abstract: This paper {{addresses}} {{the problem of}} efficient forward error correction on differentially encoded, quadriphase-shift-keying (DQPSK) channels. The approach is to design codes to correct the most probable <b>error</b> <b>patterns.</b> First the probability distribution of <b>error</b> <b>patterns</b> is derived. Then a class of convolutional codes that correct any single two-bit error is described. Finally a threshold decodable code that corrects all single, and many double, two-bit errors is presented...|$|R
40|$|This study {{analyzed}} three {{fifth grade}} students’ misconceptions and <b>error</b> <b>patterns</b> {{when working with}} equivalence, addition and subtraction of fractions. The findings revealed that students used both conceptual and procedural knowledge to solve the problems. They used pictures, gave examples, and made connections to other mathematical concepts and to daily life topics. <b>Error</b> <b>patterns</b> found include using addition and subtraction of numerators and denominators, and finding the greatest common factor...|$|R
40|$|Forgetting in {{short-term}} memory {{has generally been}} attributed {{to the passage of}} time or interfering events. Various models tracing patterns of recall over brief periods of time ascribe forgetting to decay of information with time, loss of distinctiveness of information, or interference from other material. This study attempted to choose between the Primacy model, the SIMPLE (scale-independent memory, perception, and learning) model, and the SOB (serial order in-a-box) model that would best explain performance on a visual serial recall task manipulating delay at encoding and retrieval. The results failed to find detrimental effects of decay with longer intervals, refuting predictions of the decay-based Primacy model. In contrast, an interference-based SOB was found to reasonably explain the results obtained. Analysis of <b>error</b> <b>patterns</b> revealed the Primacy model to not best explain the <b>error</b> <b>patterns</b> noted in the data, contrary to popular findings in serial recall literature. The SIMPLE and SOB provided satisfactory explanation for <b>error</b> <b>patterns,</b> with the SOB accommodating <b>error</b> <b>patterns</b> better. It can be concluded that purely temporal models of forgetting cannot offer adequate explanation for forgetting in visual STM...|$|R
50|$|In cryptography, the Niederreiter {{cryptosystem}} is {{a variation}} of the McEliece cryptosystem developed in 1986 by Harald Niederreiter. It applies the same idea to the parity check matrix, H, of a linear code. Niederreiter is equivalent to McEliece from a security point of view. It uses a syndrome as ciphertext and the message is an <b>error</b> <b>pattern.</b> The encryption of Niederreiter is about ten times faster than the encryption of McEliece. Niederreiter can be used to construct a digital signature scheme.|$|E
50|$|Verification then {{applies the}} public {{encryption}} function to the signature and checks {{whether or not}} this equals the hash value of the document. When using Niederreiter, or in fact any cryptosystem based on error correcting codes, the second step in the signature scheme almost always fails. This is because a random syndrome usually corresponds to an <b>error</b> <b>pattern</b> of weight greater than t. The system then specifies a deterministic way of tweaking d until one is found which can be decrypted.|$|E
5000|$|It {{is often}} useful {{to have a}} compact {{definition}} of a burst error, that encompasses not only its length, but also the pattern, and location of such error. We define a burst description to be a tuple [...] where [...] is {{the pattern of the}} error (that is the string of symbols beginning with the first nonzero entry in the <b>error</b> <b>pattern,</b> and ending with the last nonzero symbol), and [...] is the location, on the codeword, where the burst can be found.|$|E
40|$|The need to {{differentially}} diagnose {{children with}} speech disorder is widely accepted, although {{how to do}} this remains controversial. One differential diagnostic framework proposes four subgroups of speech disorder. Investigating the <b>error</b> <b>patterns</b> of bilingual children will validate the existence of subgroups. The subgroups are differentiated in terms of their surface speech <b>error</b> <b>patterns</b> which are thought to reflect different underlying deficits in the speech processing chain. If this hypothesis is true, then bilingual children with speech disorder should show the same type of speech <b>error</b> <b>patterns</b> in each of their languages. The two case studies reported here describe the <b>error</b> <b>patterns</b> of two bilingual 4 year old children who spoke English and Italian. Their disorders were of unknown aetiology. One child presented with an inconsistent phonological system in both languages. The second child made errors that indicated a delay of her phonological development in both languages. The results of their phonological assessments are discussed in terms of current theories about bilingual development and differential diagnosis of phonological disorders. The study identifies the clinical implications for speech-language pathologists...|$|R
5000|$|... only (for {{a binary}} code). The table is against pre-computed values of [...] for all {{possible}} <b>error</b> <b>patterns</b> [...]|$|R
40|$|Abstract: To use the {{theories}} of artificial intelligence and cognitive science in designing the intelligent computer-assisted instruction (ICAI) systems is a challenging job with much research value. This research collected different types of <b>error</b> <b>patterns</b> that novice learners had during computer programming. These <b>error</b> <b>patterns</b> were analyzed and categorized. The misconception of semantic errors during the programming were also analyzed. The outcome {{will serve as the}} base knowlege for computer programming ICAI system design...|$|R
5000|$|From Hamming {{distance}} concept, a code {{with minimum}} distance [...] can correct any [...] errors. But in many channels <b>error</b> <b>pattern</b> {{is not very}} arbitrary, it occurs within very short segment of the message. Such kind of errors are called burst errors. So, for correcting such errors we will get a more efficient code of higher rate because of the less constraints. Cyclic codes are used for correcting burst error. In fact, cyclic codes can also correct cyclic burst errors along with burst errors. Cyclic burst errors are defined as ...|$|E
50|$|Coset {{leaders are}} used in the {{construction}} of a standard array for a linear code, which can then be used to decode received vectors. For a received vector y, the decoded message is y - e, where e is the coset leader of y. Coset leaders {{can also be used to}} construct a fast decoding strategy. For each coset leader u we calculate the syndrome uH&prime;. When we receive v we evaluate vH&prime; and find the matching syndrome. The corresponding coset leader is the most likely <b>error</b> <b>pattern</b> and we assume that v+u was the codeword sent.|$|E
5000|$|Depression {{is linked}} with a hyperactive right hemisphere, with {{evidence}} of selective involvement in [...] "processing negative emotions, pessimistic thoughts and unconstructive thinking styles", as well as vigilance, arousal and self-reflection, and a relatively hypoactive left hemisphere, [...] "specifically involved in processing pleasurable experiences" [...] and [...] "relatively more involved in decision-making processes". Additionally, [...] "left hemisphere lesions result in an omissive response bias or <b>error</b> <b>pattern</b> whereas right hemisphere lesions result in a commissive response bias or error pattern." [...] The delusional misidentification syndromes, reduplicative paramnesia and Capgras delusion are also often the result of right hemisphere lesions.|$|E
30|$|Recall {{that the}} test <b>error</b> <b>patterns</b> are uniquely {{specified}} by bits within the MRIPs, whereas the bits outside the MRIPs are obtained using the parity check matrix of the code. In order to generate {{a list of the}} test <b>error</b> <b>patterns</b> independently of the particular generator matrix (i.e., independently of the particular code) as well as independently of the particular received sequence, we consider only the bit errors within the MRIPs. Hence, we assume that, for all test <b>error</b> <b>patterns,</b> the bit <b>errors</b> outside the MRIPs affect the value of the metric in (5) equally. More importantly, {{in order to reduce the}} list decoding complexity while improving the BER performance, we consider partitioning of the MRIPs into disjoint segments. This decoding strategy employing segments of the MRIPs is investigated next.|$|R
40|$|Abstract. This paper {{presents}} <b>error</b> <b>patterns</b> {{built on}} the basis of our comparative analysis of American English and Mexican Spanish phonemes and allophones which can be applied in designing the error detection module of a Computer Assisted Pronunciation Training (CAPT) System for teaching American English pronunciation to Mexican Spanish speakers. Error identification is important for an adequate choice of correcting techniques which improves English pronunciation acquisition and helps learners to develop less accented speech. Since automatic individual error detection remains a highly complex computational task, <b>error</b> <b>patterns</b> can enhance the system performance and improve its precision. To the best of our knowledge, <b>error</b> <b>patterns</b> in American English speech generated by Mexican Spanish speakers has not been defined in previous work which was done mainly for Castilian-originated standard Spanish...|$|R
40|$|An {{interactive}} 2 -step {{theory of}} lexical retrieval {{was applied to}} the picture-naming <b>error</b> <b>patterns</b> of aphasic and nonaphasic speakers. The theory uses spreading activation in a lexical network to accomplish the mapping between the conceptual representation of an object and the phonological form of the word naming the object. A model developed from the theory was parameterized to fit normal <b>error</b> <b>patterns.</b> It was then &quot;lesioned &quot; by globally altering its connection weight, decay rates, or both to provide fits to the <b>error</b> <b>patterns</b> of 21 fluent aphasic patients. These fits were then used to derive predictions about the influence of syntactic categories on patient errors, the effect of phonology on semantic <b>errors,</b> <b>error</b> <b>patterns</b> after recovery, and patient performance on a single-word repetition task. The predictions were confirmed. It is argued that simple quantitative alterations to a normal processing model can explain much of the variety among patient patterns in naming. Difficulty in word retrieval is the most pervasive symptom of language breakdown in aphasia. As with other symptoms of brain damage, word retrieval is subject to graceful degradation (Marr, 1982; Rumelhart & McClelland, 1986) : Unsuccessful attempts at retrieval generally resemble the target, either i...|$|R
