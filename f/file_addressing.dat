3|319|Public
60|$|I saw first my old enemy, Screw, {{with his}} villainous face much paler than usual; next, two respectably-dressed strangers whom he {{appeared}} to have brought into the room; and next to them Young <b>File,</b> <b>addressing</b> himself to the doctor.|$|E
50|$|The data {{is shown}} using a cabinet and drawer metaphor, {{corresponding}} with the <b>file</b> <b>addressing</b> method of the Univac 1100. Data {{were presented in}} strict rows of 80 to 132 characters long to match card punching and line printing capabilities. A set of commands gradually developed that were executed via a user's video screen.|$|E
40|$|The {{principal}} {{approaches to}} random-access file organization and addressing are reviewed in this paper. The review is general, {{in the sense}} that it is relatively independent of specific equipment. In the case of a number of unsettled questions, the author's evaluations of alternatives are included. The relation between sorting and random-access <b>file</b> <b>addressing</b> is clarified by viewing both as belonging to a common class of ordering operations. Basic considerations of both sequential and random-access approaches, arithmetical key-to-address transformation methods with their overflow problems, and table lookup methods are discussed. Results of an experimental analysis of key transformation techniques are presented. File organization and addressin...|$|E
5000|$|Record <b>File</b> <b>Address</b> Access - {{records are}} {{retrieved}} directly by their {{location in the}} file (RFA, or Record <b>File</b> <b>Address).</b>|$|R
50|$|The <b>filing</b> <b>address</b> for Form I-140 {{depends on}} whether Form I-140 is being filed on its own or {{concurrently}} with Form I-485. The <b>filing</b> <b>address</b> can also differ by the state the beneficiary will work in for Premium Processing.|$|R
50|$|Form I-539 {{can always}} be {{submitted}} by paper. The form is available for download from the USCIS website. The <b>filing</b> <b>address</b> depends {{on the type of}} status change or extension that the applicant is requesting. The possible <b>filing</b> <b>addresses</b> include lockbox facilities, service centers, and (in the case of diplomatic statuses) appropriate international bodies.|$|R
50|$|All {{processor}} shared {{records on}} a TPF {{system will be}} accessed via exactly the same <b>file</b> <b>address</b> which will resolve to exactly the same location.|$|R
30|$|The gr command used in {{previous}} examples issues an Addr message with a <b>file</b> <b>address</b> (including a line range and a rune rage) for each matching text received.|$|R
40|$|At the November 2002 SSC- 2 {{working group}} meeting when {{responding}} to Letter Ballot comments, {{it was noted}} that the Logical <b>File</b> <b>Address</b> and Logical Set Address portions of the Locate(16) command was not clearly specified. Since IBM was the company that requested this capability, I was asked to see if it could be removed. If it can not be removed I was given an action to clearly define Logical <b>File</b> <b>Address</b> and Logical Set Address. I was also given the action to cleary specify this in the Locate (16) command. This document is the response to this action item...|$|R
30|$|As of today, defined {{message types}} are raw bytes ([]byte), errors, {{directory}} entries (Dir), <b>file</b> <b>addresses</b> (Addr, with a file {{name and a}} line/rune range), and user defined types (with application specific data). By convention, []byte messages are considered as the actual data flowing through the stream, which should be processed by commands in a pipeline. All commands usually handle such messages and blindly forward everything else. All other messages provide context for the flowing data. For example, a Dir followed by []byte messages is used to send data for a given file, commands similar to grep send Addr messages with <b>file</b> <b>addresses</b> before sending any matched data, etc.|$|R
30|$|Messages {{carrying}} application {{specific data}} are still uninterpreted and sent as raw bytes by the system, but their type indicates {{that they are}} application messages. By convention, commands encode them using JSON, sending a type name as a prefix. They permit programs in a pipeline to send extra information along with the data being processed. As an example, early versions of the framework used such messages to forward <b>file</b> <b>addresses</b> (<b>file</b> names and line numbers) from programs locating lines. Such addresses were consumed by other programs running later in the same pipeline. Since <b>file</b> <b>addresses</b> became often used, they were promoted to a well-known message type, as a convenience. Application specific messages are also used by some text processing filters to select part of the data flowing through the stream by sending all other data as strings. Such ignored data may be promoted to actual data at later stages of the pipeline. There are examples of this in Section  7.|$|R
40|$|Nowadays, our {{personal}} computer contains {{a huge amount}} of information, that is stored in several different formats, including emails, pictures, text documents, media <b>file,</b> <b>address</b> books, etc. When we need to look for some information, one possibility is to use a keyword-based search tool, such as Google Desktop [1]. We then get several links t...|$|R
5000|$|Contacts, {{analogous}} to index cards in a Rolodex card <b>file</b> or <b>address</b> book ...|$|R
50|$|A {{processor}} unique {{record is}} one that is defined such that each processor expected to be in the loosely coupled complex has a record type of 'FRED' and perhaps 100 ordinals. However, if a user on any 2 or more processors examines the <b>file</b> <b>address</b> that record type 'FRED', ordinal '5' resolves to, they will note a different physical address is used.|$|R
50|$|The OpenVMS {{operating}} system uses the Files-11 file system {{in conjunction with}} RMS (Record Management Services). RMS provides an additional layer between the application and the files on disk that provides a consistent method of data organization and access across multiple 3GL and 4GL languages. RMS provides four different methods of accessing data; sequential, relative record number access, record <b>file</b> <b>address</b> access, and indexed access.|$|R
3000|$|The {{simulation}} procedure {{consists in}} a DL-only data transmission {{on both the}} macro-UE and the small cell UE links. A non-full buffer (FTP) traffic model with an arrival rate λ= 0.5 and a file size of 2 MB is considered [41]. Each UE is randomly assigned a data rate requirement upon arrival of a new <b>file</b> <b>addressed</b> to it, drawn from a Rayleigh distribution with scale parameter σ [...]...|$|R
40|$|Compliance <b>filing</b> <b>addressing</b> {{implementation}} timelines {{and transparency}} obligations {{with respect to}} retail regulatory prohibitions on end-use customer participation in PJM’s demand response programs Dear Ms. Schleiden: Pursuant to the authority delegated to the Director, Division of Electric Power Regulation-East under 18 C. F. R. § 375. 307, your submittal filed in the above referenced docket is accepted for filing, with a retroactive effective date of August 28, 2009, as requested...|$|R
40|$|A {{letter report}} {{issued by the}} Government Accountability Office with an {{abstract}} that begins "To conduct a successful census, {{it is important that}} the U. S. Census Bureau (Bureau) produce the most complete and accurate <b>address</b> <b>file</b> and maps for 2010. For this review, GAO's specific objectives were to determine the extent to which (1) the Bureau's efforts to modernize the <b>address</b> <b>file</b> and maps are addressing problems experienced during the 2000 Census, (2) the Bureau is managing emerging <b>address</b> <b>file</b> and map issues, (3) the Bureau is able to collect and transmit address and mapping data using mobile computing devices (MCD) equipped with global positioning system (GPS) technology, and (4) the Bureau has a plan to update the <b>address</b> <b>file</b> and maps in areas affected by hurricanes Katrina and Rita. GAO reviewed the Bureau's progress in modernizing both the <b>address</b> <b>file</b> and maps. ...|$|R
2500|$|Some {{operating}} systems require {{the user to}} allocate the maximum size of the file when the file is created. The file can then be allocated as contiguous disk blocks. In that case, to convert the <b>file</b> block <b>address</b> [...] into a disk block address, the operating system simply adds the <b>file</b> block <b>address</b> [...] to {{the address of the}} first disk block constituting the file. The scheme is simple, but the file cannot exceed its created size.|$|R
50|$|Records that {{absolutely}} must {{be managed by}} a record locking process are those which are processor shared. In TPF, most record accesses are done by using record type and ordinal. So if you had defined a record type in the TPF system of 'FRED' and gave it 100 records or ordinals, then in a processor shared scheme, record type 'FRED' ordinal '5' would resolve to exactly the same <b>file</b> <b>address</b> on DASD — clearly necessitating {{the use of a}} record locking mechanism.|$|R
30|$|The {{idea is to}} let {{programs}} produce or consume data streams {{that carry}} individual messages. Some systems like Oberon [5] use strong typing, while others such as UNIX [6] use raw, untyped, data. We take the middle way: streams sent through channels carry typed data, but application specific data types are unknown to the system. The system forwards messages (as raw data) and {{it is up to}} senders and receivers to know what they mean and how to handle them. Messages are typed but {{there are only a few}} well-known types: raw bytes, directory entries (<b>file</b> metadata), <b>file</b> <b>addresses</b> (with a <b>file</b> name and a line/rune range), and error indications (encoded as a string with the error message). By convention, messages with raw bytes are considered as the actual data flowing through the stream, which should be processed by commands through the pipeline. All commands usually handle such messages and blindly forward everything else. All other messages provide context for the flowing data. For example, a directory entry followed by raw-bytes messages can be used to send data for a given file, commands similar to grep may send messages with <b>file</b> <b>addresses</b> before sending the matched data, and so on.|$|R
40|$|This {{pamphlet}} by the South Carolina Department of Archives and History {{is one in}} {{a series}} titled Electronic Records Management Guidelines. This pamphlet <b>addresses</b> <b>file</b> naming, its uses and legal considerations including differences among file names, <b>file</b> paths, and <b>addresses,</b> challenges in <b>file</b> naming and Internet file naming protocols...|$|R
40|$|Citation/Reference) American {{statistics}} index(Additional Physical Form) Some issues {{also available}} via Internet from the Bureau of Public Debt web site (as PDF, Excel and. txt <b>files).</b> <b>Address</b> as of 4 / 19 / 01 : [URL] current access is available via PURL. (Dates or Sequential Designation) -Dec. 31, 2000. (Dates or Sequential Designation) Began in July 1974 (Issuing Body) Issued by: the Bureau of the Public Debt,; the Dept. of the Treasury,; the Bureau of the Public Debt, Some vols. distributed to depository libraries in microfiche. Description based on: Aug. 31, 1974; title from caption...|$|R
5000|$|A quick {{introduction}} to Royal Mail's Postcode <b>Address</b> <b>File</b> (PAF) ...|$|R
5000|$|Noise in the <b>address</b> <b>file</b> {{that causes}} {{geocoding}} software to skip records.|$|R
50|$|By default Filetopia {{is not an}} {{anonymous}} peer to peer network: when sending or downloading <b>files,</b> IP <b>addresses</b> are not visible, but the software makes no attempt at keeping them anonymous through, for example, onion routing.|$|R
5000|$|Address bar, {{location}} bar or URL bar is a toolbar that mainly {{consists of}} a text box. It accepts uniform resource locators (URLs) or <b>file</b> system <b>addresses.</b> They are found in web browsers and file managers.|$|R
5000|$|Apart {{from the}} above, {{there is no}} further {{evidence}} of the Lahore Bar till 1892-93. Out of the Association’s available records, the register containing the Minutes of the earliest General Meetings of the Chief Court Bar Association starts from the year 1893. The file dealing with the subject [...] "Touts-High Court" [...] amongst the High Court’s records, contains the copy of a letter addressed to the Secretary of the Bar Association in 1892 and his seems to be the earliest letter traceable from the various High Court <b>files</b> <b>addressed</b> to the legal fraternity practicing in the Chief court in its capacity as an Association.|$|R
5000|$|Postcomm {{says the}} {{following}} regarding the extended use of postcodes and the Postcode <b>Address</b> <b>File</b> (PAF): ...|$|R
40|$|Bedding {{dairy cows}} is costly and time-consuming. The cost and {{availability}} of bedding fluctuates, and good consistent bedding can be expensive and hard to find. More dairies have turned to dairy manure solids (DMS) as a bedding source. However, there are many questions about using DMS as bedding such as will it have an affect on udder health and milk quality? How often should it be re-bed? Is there a cost/savings to using DMS? These <b>files</b> <b>address</b> these issues: Project Description; Literature Review; Project Summary; Project Summary-Phase 2; Save Money on Bedding. NYS Energy Research and Development Authority, NY Farm Viability Institute, Cornell Cooperative Extension and the College of Agriculture and Life Science...|$|R
40|$|The {{primary goal}} of this {{technical}} specification is to meet the consolidated environmental data requirements defined by the Federal Facility (FFA) and the Tennessee Oversight Agreement (TOA) as they pertain to NPDES surface water data maintained in Oak Ridge, Tennessee, by the Department of Energy`s Maintenance and Operations (M&O) contractor Martin Marietta Energy Systems and prime contractors to DOE. This technical specification describes the organizational responsibilities for getting NPDES data into OREIS, describes the logical data transfer file required from NPDES, addresses business rules and submission rules, describes the physical data transfer <b>file,</b> <b>addresses</b> configuration control of this technical specification, and addresses required changes to the current OREIS data base structure due {{to the requirements of}} NPDES...|$|R
5000|$|<b>File</b> {{virtualization}} <b>addresses</b> the NAS challenges {{by eliminating}} the dependencies between the data accessed at the file level and the location where the files are physically stored. This provides opportunities to optimize storage use and server consolidation and to perform non-disruptive file migrations.|$|R
50|$|The 8065 had an {{enhanced}} instruction set, additional register space, and a much-enhanced I/O.As a result, the 8065 had a register <b>file</b> from <b>address</b> 0020H to 03FFH, addressable in 4 banks.I/O addresses were from 0002H to 001FH. The stack pointer was at 00020H.|$|R
30|$|In Clive, {{applications}} perform I/O through named channels. Named channels do {{not carry}} raw byte streams. Instead, they stream typed messages that include directory entries, raw bytes, <b>file</b> <b>addresses,</b> errors, and application defined data. Doing so enables streaming of structured data, avoiding extra RPCs, which permits operation in high latency networks. For example, for file commands, full file trees can be concurrently streamed {{from one or}} more servers and pipelines may process such streams without further RPCs to the file servers involved, reducing the effects of latency. Together, named channels and structured streams cooperate to make it practical to combine existing programs to build new ones in distributed environments with high latencies, instead of requiring to write ad-hoc applications in all cases. Existing UNIX programs {{may be used as}} well as new ones.|$|R
40|$|We {{present an}} {{algorithm}} for compiler-driven register name adjustment {{with the main}} goal of power minimization on instruction fetch and register file access. In most instruction set architecture (ISA) designs, the register fields reside in fixed positions within the instruction encoding, hence forming streams of indices on the instruction bus and to the register <b>file</b> <b>address</b> decoder. The number of bit transitions in these streams greatly determines the power consumption on the address bus and the register file decoder. While general-purpose registers are semantically indistinguishable and hence interchangeable, the particular register indices do have {{a direct impact on}} power consumption. The algorithms presented in this paper address this power minimization problem by reassigning/encoding the registers so that the bit transitions within the register index streams are minimized. 1...|$|R
40|$|Motivated by the {{importance}} of I/O performance in data mining efficiency, we focus this paper on analyzing data mining performance across different file systems. In our study, we consider {{three of the most}} popular filesystems available under the Linux distribution. These include: Ext 2 [3] (nonjournaled), Ext 3 [16] (journaled), and Reiser[12] (journaled). We conclude that full data and metadata journaling (Ext 3) appears to dramatically slow down the performance of a data mining engine. For I/O intensive cases, data mining execution time was double when run over Ext 3 as compared to Reiser. We found that the write speed of Ext 3 was 35 times slower than Reiser, and <b>file</b> <b>address</b> references display only a shortrange dependence in data mining, indicating high degree of locality in data references...|$|R
