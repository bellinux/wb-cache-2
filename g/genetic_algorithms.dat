10000|10000|Public
5|$|Pre-conference {{tutorials}} {{have played}} an important role in ISMB since the first conference. Tutorials at ISMB 1994 included introductions to <b>genetic</b> <b>algorithms,</b> neural networks, AI for molecular biologists and molecular biology for computer scientists. Tutorials on computational mass spectrometry-based proteomics and ENCODE data access were presented at ISMB/ECCB 2013.|$|E
5|$|In {{computer}} science, {{simulations of}} evolution using evolutionary algorithms and artificial life {{started in the}} 1960s and were extended with simulation of artificial selection. Artificial evolution became a widely recognised optimisation method {{as a result of}} the work of Ingo Rechenberg in the 1960s. He used evolution strategies to solve complex engineering problems. <b>Genetic</b> <b>algorithms</b> in particular became popular through the writing of John Henry Holland. Practical applications also include automatic evolution of computer programmes. Evolutionary algorithms are now used to solve multi-dimensional problems more efficiently than software produced by human designers and also to optimise the design of systems.|$|E
25|$|Recursion, neural {{nets and}} <b>genetic</b> <b>algorithms</b> are all {{components}} of intelligent machines, Kurzweil explains. Beyond algorithms Kurzweil says the machines {{will also need}} knowledge. The emergent techniques, neural nets and <b>genetic</b> <b>algorithms,</b> require significant training effort above and beyond creating the initial machinery. While hand-coded knowledge is tedious and brittle acquiring knowledge through language is extremely complex.|$|E
40|$|Based on the {{traditional}} <b>genetic</b> <b>algorithm,</b> proposed an improved adaptive <b>genetic</b> <b>algorithm,</b> the experimental {{results show that the}} improved adaptive <b>genetic</b> <b>algorithm</b> results than standard <b>genetic</b> <b>algorithm</b> much better and effective to improve the convergence of <b>genetic</b> <b>algorithm</b> optimization of speed and efficiency. </p...|$|R
40|$|Abstract. A dual-zone {{reinforcement}} ply stacking sequence optimization {{method used}} for comosite laminate with large cutout is present. The optimization method utilized a new <b>Genetic</b> <b>Algorithm.</b> The new <b>Genetic</b> <b>Algorithm</b> {{introduced a new}} strategy which can improve {{the efficiency of the}} traditional <b>Genetic</b> <b>Algorithm</b> and overcome the shortages of the worse convergency and prematurity of the Simple <b>Genetic</b> <b>Algorithm.</b> In the new <b>Genetic</b> <b>Algorithm,</b> the selection probability and the mutation probability are self-adaptive. Compared with the Simple <b>Genetic</b> <b>Algorithm,</b> the new <b>Genetic</b> <b>Algorithm</b> method shows good consistency, fast convergency and practical feasibility. By using the new <b>Genetic</b> <b>Algorithm,</b> the reinforcement ply stacking sequence optimization method got reasonable symmetric and balance stacking sequence which could meet the design requirements...|$|R
40|$|Abstract. Simple <b>genetic</b> <b>algorithm</b> has {{shortcomings}} of poor local search ability and premature convergence. To overcome these disadvantages, simulated annealing algorithm which has good local search ability was combined with <b>genetic</b> <b>algorithm</b> to form simulated annealing <b>genetic</b> <b>algorithm.</b> The tests by two commonly used test functions of Shaffer’s F 6 and Rosenbrock show that simulated annealing <b>genetic</b> <b>algorithm</b> outperforms the simple <b>genetic</b> <b>algorithm</b> both in convergence rate and convergence quality. Finally, the simulated annealing <b>genetic</b> <b>algorithm</b> was firstly applied {{in a practical}} problem of balancing and sequencing design of mixed-model assembly line, once again, the solution results show that simulated annealing <b>genetic</b> <b>algorithm</b> outperforms the simple <b>genetic</b> <b>algorithm.</b> Meanwhile, it provides a new algorithm for solving the design problem of mixed-model assembly line...|$|R
25|$|In <b>genetic</b> <b>algorithms,</b> {{crossover}} is {{a genetic}} operator used to vary the programming of a chromosome or chromosomes {{from one generation}} to the next. It is analogous to reproduction and biological crossover, upon which <b>genetic</b> <b>algorithms</b> are based. Crossover is a process of taking more than one parent solution and producing a child solution from them. There are methods for selection of the chromosomes. Those are also given below.|$|E
25|$|The NASA Advanced Supercomputing {{facility}} (NAS) ran <b>genetic</b> <b>algorithms</b> {{using the}} Condor cycle scavenger running on about 350 Sun Microsystems and SGI workstations.|$|E
25|$|Intelligent control uses various AI {{computing}} approaches like neural networks, Bayesian probability, fuzzy logic, machine learning, {{evolutionary computation}} and <b>genetic</b> <b>algorithms</b> {{to control a}} dynamic system.|$|E
30|$|For {{comparison}} study, {{the traditional}} <b>genetic</b> <b>algorithm</b> (GA), fast <b>genetic</b> <b>algorithm</b> (FGA) (Gao 2007) and the immunized <b>genetic</b> <b>algorithm</b> (IGA) are all applied for this example.|$|R
40|$|Abstract: <b>Genetic</b> <b>algorithm</b> is {{a search}} <b>algorithm</b> based on <b>genetic</b> {{mechanism}} and natural selection. It {{has been widely}} applied to research fields including image processing field. The paper improves standard <b>genetic</b> <b>algorithm</b> and improves the arithmetic speed of the algorithm, which achieves better image restoration effect. And the paper compares the image restoration quality of traditional <b>algorithm,</b> standard <b>genetic</b> <b>algorithm</b> and improved <b>genetic</b> <b>algorithm</b> to prove the feasibility of applying <b>genetic</b> <b>algorithm</b> to image restoration...|$|R
40|$|This paper {{provides}} an introduction of <b>Genetic</b> <b>Algorithm,</b> its basic functionality. The basic functionality of <b>Genetic</b> <b>Algorithm</b> include various steps such as selection, crossover, mutation. This paper also {{focuses on the}} comparison of <b>Genetic</b> <b>Algorithm</b> with other problem solving technique. The details of labs that basically concentrate on {{the research and development}} of <b>Genetic</b> <b>Algorithm</b> is also included. The details of labs include the various projects that are carried out on <b>Genetic</b> <b>Algorithm...</b>|$|R
25|$|TSP is a touchstone {{for many}} general {{heuristics}} devised for combinatorial optimization such as <b>genetic</b> <b>algorithms,</b> simulated annealing, Tabu search, ant colony optimization, river formation dynamics (see swarm intelligence) and the cross entropy method.|$|E
25|$|In {{artificial}} intelligence, stochastic programs work {{by using}} probabilistic methods to solve problems, as in simulated annealing, stochastic neural networks, stochastic optimization, <b>genetic</b> <b>algorithms,</b> and genetic programming. A problem itself may be stochastic as well, as in planning under uncertainty.|$|E
25|$|<b>Genetic</b> <b>algorithms</b> (GA) {{maintain}} {{a pool of}} solutions rather than just one. The process of finding superior solutions mimics that of evolution, with solutions being combined or mutated to alter the pool of solutions, with solutions of inferior quality being discarded.|$|E
40|$|Abstract — The {{relevant}} idea is {{to consider}} {{the search for the}} best <b>genetic</b> <b>algorithm</b> approach as an optimisation problem and use another <b>genetic</b> <b>algorithm</b> approach to solve it. A methodology calculation is based on the idea of measuring the increase of fitness and fitness quality eva. luating created by two methodologies with secondary <b>genetic</b> <b>algorithm</b> approach using. Performance results for finding the best <b>genetic</b> <b>algorithm</b> for the complex real problem of optimal machinery equipment operation and predictive maintenance are presented. We illustrate two interesting solutions approaches within <b>genetic</b> <b>algorithm</b> environment. Index Terms — <b>genetic</b> <b>algorithm,</b> fuzzy set, fitness, crossover, mutation. I...|$|R
40|$|In this paper, {{a hybrid}} <b>genetic</b> <b>algorithm</b> is {{developed}} {{to solve the}} single machine scheduling problem with the objective to minimize the weighted sum of earliness and tardiness costs. First, dominance properties of (the conditions on) the optimal schedule are developed based on the switching of two adjacent jobs i and j. These dominance properties are only necessary conditions and not sufficient conditions for any given schedule to be optimal. Therefore, these dominance properties are further embedded in the <b>genetic</b> <b>algorithm</b> and we call it <b>genetic</b> <b>algorithm</b> with dominance properties (GADP). This GADP is a hybrid <b>genetic</b> <b>algorithm.</b> The initial populations of schedules in the <b>genetic</b> <b>algorithm</b> are generated using these dominance properties. GA can further improve the performance of these initial solutions after the evolving procedures. The performances of hybrid <b>genetic</b> <b>algorithm</b> (GADP) have been compared with simple <b>genetic</b> <b>algorithm</b> (SGA) using benchmark instances. It is shown that this hybrid <b>genetic</b> <b>algorithm</b> (GADP) performs very well when compared with DP or SGA alone...|$|R
40|$|Abstract. In {{this paper}} a hybrid <b>genetic</b> <b>algorithm</b> which {{consists}} of the simplex method and the <b>genetic</b> <b>algorithm</b> is proposed for the defect of poor local search ability of <b>genetic</b> <b>algorithm.</b> The hybrid <b>genetic</b> <b>algorithm</b> has the advantages of good global convergence of the <b>genetic</b> <b>algorithm</b> and excellent local search ablility of the simplex method and can improve search speed and calculation accuracy. The hybrid algorithm {{is applied to the}} control network adjustment and experimental results demonstrates the effectiveness and superiority of the algorithm...|$|R
25|$|Mathematics: Random {{numbers are}} also {{employed}} where their use is mathematically important, such as sampling for opinion polls and for statistical sampling in quality control systems. Computational solutions for {{some types of}} problems use random numbers extensively, {{such as in the}} Monte Carlo method and in <b>genetic</b> <b>algorithms.</b>|$|E
25|$|Evolutionary {{computation}} uses {{a form of}} optimization search. For example, {{they may}} begin {{with a population of}} organisms (the guesses) and then allow them to mutate and recombine, selecting only the fittest to survive each generation (refining the guesses). Forms of evolutionary computation include swarm intelligence algorithms (such as ant colony or particle swarm optimization) and evolutionary algorithms (such as <b>genetic</b> <b>algorithms,</b> gene expression programming, and genetic programming).|$|E
25|$|In {{computer}} sciences, {{and more}} particularly in artificial intelligence these mean field type <b>genetic</b> <b>algorithms</b> {{are used as}} random search heuristics that mimic {{the process of evolution}} to generate useful solutions to complex optimization problems. These stochastic search algorithms belongs to the class of Evolutionary models. The idea is to propagate a population of feasible candidate solutions using mutation and selection mechanisms. The mean field interaction between the individuals is encapsulated in the selection and the cross-over mechanisms.|$|E
5000|$|IEC {{methods include}} {{interactive}} evolution strategy, interactive <b>genetic</b> <b>algorithm,</b> interactive <b>genetic</b> programming, and human-based <b>genetic</b> <b>algorithm.,</b> ...|$|R
40|$|AbstractThis paper {{presents}} a network parallel <b>genetic</b> <b>algorithm</b> {{for the one}} machine sequencing problem. It examines a parallel <b>genetic</b> <b>algorithm</b> in which processors exchange their best solution found at periodic intervals and the case when no exchange is performed. The network parallel <b>genetic</b> <b>algorithm</b> is executed on a cluster of IBM RS/ 6000 workstations using a master-slave approach. Performance to a serial <b>genetic</b> <b>algorithm</b> is reported...|$|R
40|$|The Cryptanalysis {{has been}} the most {{fascinating}} area for science fraternity. The application of <b>Genetic</b> <b>Algorithm</b> (GAs) to the field of cryptanalysis is rather unique as no robust model for cryptanalysis using <b>Genetic</b> <b>Algorithm</b> exists. <b>Genetic</b> <b>Algorithm</b> (GAs) are the class of heuristic algorithm which are known for optimization and search problem. The paper presents the systematic review of <b>Genetic</b> <b>Algorithm</b> applied to the Cryptanalysis...|$|R
25|$|Apart {{from the}} field of {{evolutionary}} biology, the concept of a fitness landscape has also gained importance in evolutionary optimization methods such as <b>genetic</b> <b>algorithms</b> or evolution strategies. In evolutionary optimization, one tries to solve real-world problems (e.g., engineering or logistics problems) by imitating the dynamics of biological evolution. For example, a delivery truck with a number of destination addresses can take a large variety of different routes, but only very few will result in a short driving time.|$|E
25|$|Kurzweil then {{explains}} that a computer {{version of this}} design {{could be used to}} create an artificial intelligence more capable than the human brain. It would employ techniques such as hidden Markov models and <b>genetic</b> <b>algorithms,</b> strategies Kurzweil used successfully in his years as a commercial developer of speech recognition software. Artificial brains will require massive computational power, so Kurzweil reviews his law of accelerating returns which explains how the compounding effects of exponential growth will deliver the necessary hardware in only a few decades.|$|E
25|$|In 2002, Crichton {{published}} Prey, {{a cautionary}} tale about developments in science and technology; specifically nanotechnology. The novel explores relatively recent phenomena engendered {{by the work of}} the scientific community, such as artificial life, emergence (and by extension, complexity), <b>genetic</b> <b>algorithms,</b> and agent-based computing. Reiterating components in many of his other novels, Crichton once again devises fictional companies, this time Xymos, a nanorobotics company which is claimed {{to be on the verge}} of perfecting a revolutionary new medical imaging technology based on nanotechnology and a rival company, MediaTronics.|$|E
40|$|It {{is usually}} said that <b>genetic</b> <b>algorithm</b> {{should be used}} when nothing else works. In practice, <b>genetic</b> <b>algorithm</b> are very often used for large sized global {{optimization}} problems, but are not very efficient for local optimization problems. The Nelder-Mead simplex algorithm has some common characteristics with <b>genetic</b> <b>algorithm,</b> but it can only find a local optimum close to the starting point. In this article, a combined Nelder-Mead Simplex and <b>Genetic</b> <b>algorithm</b> is introduced and tested on classical test functions on which both <b>genetic</b> <b>algorithm</b> or local optimization techniques are not efficient when separately used...|$|R
40|$|Abstract: Genetic {{arithmetic}} {{operators in}} <b>genetic</b> <b>algorithm</b> be improved, and a hybrid <b>genetic</b> <b>algorithm</b> of a gradient algorithm combining with the <b>genetic</b> <b>algorithm</b> be given against to the defects such as premature，slow on convergence rate，weak {{in the ability}} of local search ，all these appeared on the progress of <b>genetic</b> <b>algorithm's</b> iteration. Analysis result indicate that not only strong on the local search capacity of gradient algorithm be exhibited but also strong on the general search capacity of <b>genetic</b> <b>algorithm</b> be combined based on the hybrid genetic algorithm,which make phenomenon of premature avoid, and the rate of convergence be improved greatly. Concrete calculated example indicated that the hybrid <b>genetic</b> <b>algorithm</b> is an effective structural optimization method...|$|R
40|$|Abstract. It {{has become}} a widely {{concerned}} problem in <b>genetic</b> <b>algorithm</b> and even evolutionary computing field that how to apply <b>genetic</b> <b>algorithm</b> to solve multi-modal optimization problem, {{and it is the}} basis for <b>genetic</b> <b>algorithm</b> theory and practical application. Achievements in this aspect are emerging in endless, while theoretical researches are comparatively less. Especially there is no research on influences of external parameters to performances of applying <b>genetic</b> <b>algorithm</b> to solve multi-modal optimization problem yet. This article mainly carries out theoretical researches on this aspect and generalizes corresponding conclusions. The generalized theoretical results are used to improve searching performance of <b>genetic</b> <b>algorithm</b> in solving multi-modal optimization problem. Main research contents of this article include brief review of multi-modal optimization problem and <b>genetic</b> <b>algorithm,</b> analysis of research status of applying <b>genetic</b> <b>algorithm</b> to solve multi-model optimization problem, and introduction to basic theory and development trend of <b>genetic</b> <b>algorithm.</b> In this article, two kinds of complicated evolutionary systems based on infinite population model of <b>genetic</b> <b>algorithm</b> are analyzed, two kinds of new population evolutionary systems are built on this basis, and dynamic equation under the condition of single-gene is derived as well...|$|R
25|$|Finding all {{solutions}} to the eight queens puzzle {{is a good example}} of a simple but nontrivial problem. For this reason, it is often used as an example problem for various programming techniques, including nontraditional approaches such as constraint programming, logic programming or <b>genetic</b> <b>algorithms.</b> Most often, it is used as an example of a problem that can be solved with a recursive algorithm, by phrasing the n queens problem inductively in terms of adding a single queen to any solution to the problem of placing n1 queens on an n-by-n chessboard. The induction bottoms out with the solution to the 'problem' of placing 0 queens on the chessboard, which is the empty chessboard.|$|E
25|$|In {{optimization}} problems, heuristic algorithms {{can be used}} to find {{a solution}} close to the optimal solution in cases where finding the optimal solution is impractical. These algorithms work by getting {{closer and closer to the}} optimal solution as they progress. In principle, if run for an infinite amount of time, they will find the optimal solution. Their merit is that they can find a solution very close to the optimal solution in a relatively short time. Such algorithms include local search, tabu search, simulated annealing, and <b>genetic</b> <b>algorithms.</b> Some of them, like simulated annealing, are non-deterministic algorithms while others, like tabu search, are deterministic. When a bound on the error of the non-optimal solution is known, the algorithm is further categorized as an approximation algorithm.|$|E
25|$|Class {{prediction}} analysis: This approach, called supervised classification, {{establishes the}} basis for developing a predictive model into which future unknown test objects can be input in order to predict the most likely class membership of the test objects. Supervised analysis for class prediction involves use of techniques such as linear regression, k-nearest neighbor, learning vector quantization, decision tree analysis, random forests, naive Bayes, logistic regression, kernel regression, artificial neural networks, support vector machines, mixture of experts, and supervised neural gas. In addition, various metaheuristic methods are employed, such as <b>genetic</b> <b>algorithms,</b> covariance matrix self-adaptation, particle swarm optimization, and ant colony optimization. Input data for class prediction are usually based on filtered lists of genes which are predictive of class, determined using classical hypothesis tests (next section), Gini diversity index, or information gain (entropy).|$|E
40|$|Application of <b>genetic</b> <b>algorithm</b> {{method to}} {{optimize}} flow shop sequencing problem {{as the title}} of this project is the study about the method used in order to optimize flow shop sequencing problem. <b>Genetic</b> <b>algorithm</b> method was one of the methods that were widely used in solving optimization problem. <b>Genetic</b> <b>algorithm</b> method is methods that follow the natural concept. Flow shop sequencing problem or also known as assembly line problem that normally faced by production company. This project will define the application of <b>genetic</b> <b>algorithm</b> method in solving flow shop sequencing problem in details and evaluate the strength and weakness of <b>genetic</b> <b>algorithm</b> method in order to optimize the optimization problem. This project will focusing on the method used to solve an optimization problem, the limitation of the method used and the results of solving flow shop sequencing problem using <b>genetic</b> <b>algorithm</b> method. At the end of this project, we can see the performance of <b>genetic</b> <b>algorithm</b> method in solving flow shop sequencing problem and types of flow shop sequencing problems that can be solve through <b>genetic</b> <b>algorithm</b> method. Limitation of <b>genetic</b> <b>algorithm</b> method also can be shown {{at the end of this}} project...|$|R
40|$|Abstract—Today, <b>Genetic</b> <b>Algorithm</b> {{has been}} used to solve wide range of {{optimization}} problems. Some researches conduct on applying <b>Genetic</b> <b>Algorithm</b> to text classification, summarization and information retrieval system in text mining process. This researches show a better performance {{due to the nature of}} <b>Genetic</b> <b>Algorithm.</b> In this paper a new <b>algorithm</b> for using <b>Genetic</b> <b>Algorithm</b> in concept weighting and topic identification, based on concept standard deviation will be explored...|$|R
40|$|Abstract. To {{improve the}} {{efficiency}} of holes drilling, the <b>genetic</b> <b>algorithm</b> was employed to optimum the air travel of holes drilling in this article. The implementation of <b>genetic</b> <b>algorithm</b> was described in detail, {{and the performance of}} the <b>genetic</b> <b>algorithm</b> was demonstrated using an example. Results showed that the optimization for holes drilling using <b>genetic</b> <b>algorithm</b> can improve {{the efficiency of}} drilling by reducing the cost of air travel...|$|R
