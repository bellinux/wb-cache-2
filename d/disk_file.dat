174|530|Public
25|$|Older {{versions}} of Virtual PC (v5.0 or earlier) {{may have the}} hard disk formatted after creating the Virtual Hard <b>Disk</b> <b>file.</b> Newer versions must partition and format the Virtual Hard <b>Disk</b> <b>file</b> manually.|$|E
25|$|The name of {{the file}} system {{originates}} from the file system's prominent usage of an index table, the File Allocation Table, statically allocated {{at the time of}} formatting. The table contains entries for each cluster, a contiguous area of disk storage. Each entry contains either the number of the next cluster in the file, or else a marker indicating end of file, unused disk space, or special reserved areas of the disk. The root directory of the disk contains the number of the first cluster of each file in that directory; the operating system can then traverse the FAT table, looking up the cluster number of each successive part of the <b>disk</b> <b>file</b> as a cluster chain {{until the end of the}} file is reached. In much the same way, sub-directories are implemented as special files containing the directory entries of their respective files.|$|E
2500|$|The {{process of}} {{initializing}} these logical blocks {{on the physical}} disk platters is called low-level formatting, which is usually performed at the factory and is not normally changed in the field. High-level formatting writes data structures used by the operating system to organize data files on the disk. This includes [...] writing partition and file system structures into selected logical blocks. For example, some of the disk space {{will be used to}} hold a directory of <b>disk</b> <b>file</b> names and a list of logical blocks associated with a particular file.|$|E
5000|$|Virtual file system: {{abstract}} file system that transparently allows access to <b>disk</b> <b>files,</b> memory files, [...]zip files and [...]gz files.|$|R
5000|$|<b>Disk</b> <b>files</b> {{primarily}} represent one of {{the following}} structures: ...|$|R
50|$|Tapes and IBM <b>disk</b> <b>files</b> were {{supported}} {{as well as}} native VPS text files.|$|R
2500|$|Hyper-V, like Microsoft Virtual Server and Windows Virtual PC, saves each guest OS to {{a single}} virtual hard <b>disk</b> <b>file.</b> It {{supports}} the older [...]vhd format, {{as well as the}} newer [...]vhdx. Older [...]vhd files from Virtual Server 2005, Virtual PC 2004 and Virtual PC 2007 can be copied and used in Hyper-V, but any old virtual machine integration software (equivalents of Hyper-V Integration Services) must be removed from the virtual machine. After the migrated guest OS is configured and started using Hyper-V, the guest OS will detect changes to the (virtual) hardware. Installing [...] "Hyper-V Integration Services" [...] installs five services to improve performance, at the same time adding the new guest video and network card drivers.|$|E
5000|$|Older {{versions}} of Virtual PC (v5.0 or earlier) {{may have the}} hard disk formatted after creating the Virtual Hard <b>Disk</b> <b>file.</b> Newer versions must partition and format the Virtual Hard <b>Disk</b> <b>file</b> manually.|$|E
5000|$|<b>Disk</b> <b>File</b> Controller, {{which was}} a {{modified}} Tape Controller, connected to a Bryant <b>Disk</b> <b>File,</b> which had 25 disks that were 39" [...] in diameter, 125 read/write heads that were hydraulically actuated, and had a total capacity of 26 megabytes ...|$|E
5000|$|IBM LTFS Enterprise Edition - run {{applications}} {{designed for}} <b>disk</b> <b>files</b> from tape storage.|$|R
5000|$|Gramophone (recorded on {{underside}} of flat, transparent <b>disk),</b> <b>filed</b> November 7, 1887, issued July 1896 ...|$|R
5000|$|Btrfs, XFS, and ext4 are all {{supported}} file {{systems for}} virtual <b>disk</b> <b>files</b> {{used with the}} “vdisk_fileio” device handler.|$|R
5000|$|<b>Disk</b> <b>File</b> Controller, {{which was}} a {{modified}} Tape Controller, connected to the ...|$|E
5000|$|HISTCOPY (*), to {{copy the}} System History file to a <b>disk</b> <b>file.</b>|$|E
5000|$|Optimize {{virtual machine}} I/O with {{adjustable}} volume, <b>disk,</b> <b>file</b> and block sizes.|$|E
50|$|Because {{mechanical}} disks {{have much}} {{longer and more}} unpredictable response times, swapping to <b>disk</b> <b>files</b> is not used {{for the same reasons}} as RAM allocation discussed above.|$|R
50|$|The compilers were {{released}} in various versions, of increasing sophistication. Initially paper tape and cards {{were used for}} input and output, later magnetic tape and finally <b>disk</b> <b>files.</b>|$|R
5000|$|Recording and Reproducing Speech and Other Sounds (improvements include {{compliant}} cutting head, wax surface, {{and constant}} linear velocity <b>disk),</b> <b>filed</b> June 1885, issued May 1886 (with Charles Tainter) ...|$|R
50|$|The IBM 350 <b>Disk</b> <b>File</b> was {{developed}} under the code-name RAMAC by an IBM San Jose {{team led by}} Reynold Johnson. It was announced in 1956 with the then new IBM 305 RAMAC computer. A variant the IBM 355 <b>Disk</b> <b>File</b> was simultaneous announced with the IBM RAM 650 computer, an enhancement to the IBM 650.|$|E
5000|$|Block Optimization Support: Intelligent {{skipping}} of unused blocks {{within a}} virtual <b>disk</b> <b>file</b> ...|$|E
5000|$|... "BESYS was {{a complex}} {{software}} package that provided convenient input/output and integrated <b>disk</b> <b>file</b> storage facilities." ...|$|E
50|$|Quarantine is a {{function}} of antivirus software that isolates infected files on a computer's hard <b>disk.</b> <b>Files</b> put in quarantine are no longer capable of infecting their hosting system.|$|R
5000|$|Even {{though the}} Registry {{presents}} {{itself as an}} integrated hierarchical database, branches of the Registry are actually stored {{in a number of}} <b>disk</b> <b>files</b> called hives. (The word hive constitutes an in-joke.) ...|$|R
5000|$|The channel, a small integer {{previously}} {{associated with}} the device. At this level, all operations on <b>disk</b> <b>files</b> and directories (filename parsing, directory lookup, file opening/closing) are done by appropriate QIO requests.|$|R
50|$|A valid boot sector on the floppy disk, not in {{the format}} of a normal <b>disk</b> <b>file.</b>|$|E
5000|$|<b>Disk</b> <b>file</b> and device backup {{and restore}} {{utilities}} with streaming support for streaming tape drives supported by RSTS/E.|$|E
5000|$|Virtual mode: The mapped disk is {{presented}} {{as if it is}} a logical volume, or a virtual <b>disk</b> <b>file,</b> to the guest operating system and its real hardware characteristics are hidden. In this mode, file locking provides data protection through isolation for concurrent updates; the copy on write operation enables snapshots. Virtual mode also offers portability across storage hardware because it presents the consistent behavior as a virtual <b>disk</b> <b>file.</b>|$|E
5000|$|Unlike predecessors, RPG III uses {{external}} file descriptions, {{which means that}} <b>disk</b> <b>files</b> are built and RPG III programs are attached to them at compile time. Some other noteworthy changes from RPG II include: ...|$|R
50|$|Robot Program:A robot {{communication}} {{program for}} IBM and compatible personal computers. Provides terminal emulation and utility functions. This program can record {{all of the}} user memory, {{and some of the}} system memory to <b>disk</b> <b>files.</b>|$|R
50|$|TRSDOS was {{primarily}} a way of extending the MBASIC (BASIC in ROM) with additional I/O (input/output) commands that worked with <b>disk</b> <b>files</b> rather than the cassette tapes that were used by most other TRS-80 systems.|$|R
5000|$|Z-SAN is a {{proprietary}} type of {{storage area network}} licensed by Zetera corporation. Z-SAN hardware is bundled with {{a modified version of}} SAN-FS, which is a shared <b>disk</b> <b>file</b> system driver and management software product SAN File System (SFS) made by DataPlow. [...] The shared <b>disk</b> <b>file</b> system allows multiple computers to access the same volume at block level. Zetera calls their version of the file system Z-SAN.|$|E
5000|$|Some early {{operating}} systems {{were capable of}} handling only tape and <b>disk</b> <b>file</b> systems. These provided {{the most basic of}} interfaces with: ...|$|E
50|$|The above code {{defines a}} tape file on channel 1 called OUT, a {{sequential}} 1301/1302 <b>disk</b> <b>file</b> called DAFILE and a card file called CONSFILE.|$|E
50|$|OPEN, CLOSE, WRITE, REWRITE, DELETE, and APPEND {{are already}} {{familiar}} to COBOL programmers {{and describe the}} actions taken to access S/34 <b>disk</b> <b>files</b> using BASIC. It isn't possible to access every single type of S/34 file because these include system files, libraries, and folders, but every user-created S/34 file with a fixed record length (only FORTRAN programs can use variable record lengths) will suffice. <b>Disk</b> <b>files</b> can be opened sequentially, by index, or relatively (by record number). If a file is delete-capable, records can be deleted using the DELETE statement. To add a record, use WRITE (with APPEND specified in the OPEN statement) and to update use REWRITE.|$|R
5000|$|A strong device {{independent}} input/output model {{that allows the}} same commands and programs to access terminals, <b>disk</b> <b>files,</b> printers, magnetic and paper tapes, card readers and punches, floppy disks, network hosts, and an audio response unit (ARU).|$|R
50|$|There is {{only one}} way to infect a {{computer}} with the Ada virus; by executing an infected file. The infected file may come from a variety of sources: floppy <b>disks,</b> <b>files</b> downloaded from the Internet, and infected networks.|$|R
