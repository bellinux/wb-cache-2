11|280|Public
40|$|This {{presents}} the optimal variable input use model. It introduces the key concepts of Marginal Physical Product, Marginal Revenue Product, and Marginal Factor Cost. The optimal <b>input</b> <b>rule</b> is presented, {{and this is}} linked to information on production, demand for the final product, and the price in the input market...|$|E
40|$|A {{conceptual}} model is discussed {{which allows the}} hierarchic definition of high-level input driven objects, called input-output tools, from any set of basic input primitives. An input-output tool {{is defined as a}} named object. Its most important elements are the <b>input</b> <b>rule,</b> output rule, internal tool definitions, and a tool body consisting of executable statements. The <b>input</b> <b>rule</b> contains an expression with tool designators as operands and with operators allowing for sequencing, selection, interleaving, and repetition. Input rules are similar in appearance to production rules in grammars. The input expression specifies one or more input sequences, or input patterns, in terms of tool designators. An input parser tries, at run-time, to match (physical) input tokens against active input sequences. If a match between an input token and a tool designator is found, the corresponding tool body is executed, and the output is generated according to specifications in the tool body. The control structures in the input expression allow a variety of input patterns from any number of sources. Tool definitions may occur in-line or be stored in a library. All tools are ultimately encompassed in one tool representing the program...|$|E
40|$|Abstract. In {{this paper}} we {{consider}} a simple syntactic extension of Answer Set Programming (ASP) {{for dealing with}} (nested) existential quantifiers and double negation in the rule bodies, in a close way to the recent proposal RASPL- 1. The semantics for this extension just resorts to Equilibrium Logic (or, equivalently, to the General Theory of Stable Models), which provides a logic-programming interpretation for any arbitrary theory in the syntax of Predicate Calculus. We present a translation of this syntactic class into standard logic programs with variables (either disjunctive or normal, depending on the <b>input</b> <b>rule</b> heads), as those allowed by current ASP solvers. The translation relies on the introduction of auxiliary predicates and the main result shows that it preserves strong equivalence modulo the original signature. ...|$|E
3000|$|As {{noted in}} some of the {{previous}} work, an injected error does not always violate a CFD rule, which may lead to a low recall. To separate out the problem of errors’ not being detected by the <b>input</b> <b>rules,</b> we measure the performances with the score metrics defined as follows: [...]...|$|R
50|$|When executed, the {{bytecode}} {{generated by}} PGE will parse text {{as described in}} the <b>input</b> <b>rules,</b> generating a parse tree. The parse tree can be manipulated directly, or fed into the next stage of the Parrot compiler toolchain in order to generate an AST from which code generation can occur (if the grammar describes a programming language).|$|R
40|$|Abstract: In the {{approximate}} fuzzy reasoning the covering over of fuzzy <b>rule</b> base <b>input</b> and <b>rule</b> premise of a rule determines {{the importance of}} that fuzzy rule and the rule output as well. An axiom system has been created, describing {{the relationship between the}} fuzzy rule base system, <b>rule</b> <b>input</b> and <b>rule</b> output. By using distance-based operators a novel reasoning method appears by the compositional rule of inference, which is based on similarity measures of fuzzy sets, and it will be shown that this new system satisfies the mentioned axiom system. ...|$|R
40|$|This article {{presents}} a new neuro-fuzzy controller to stabilize an inverted pendulum system. The proposed controller {{consists of the}} Single <b>Input</b> <b>Rule</b> Modules (SIRMs), the artificial neural network (ANN) and the dynamic importance degrees (DIDs). It simultaneously controls both {{the angle of the}} pendulum and the position of the cart. The learning of the ANN results in the DIDs. The proposed controller has a simple structure that can decrease the number of fuzzy rules. The simulation results show that the proposed neurofuzzy controller has an ability to stabilize a wide range of the inverted pendulum system within a short periodof time. Moreover, the comparisons of the simulation results between the proposed neuro-fuzzy controller and the SIRMs fuzzy controller are revealed in this article...|$|E
40|$|The {{principle}} of ratios {{has been applied}} to many real world problems, e. g. the part-to-part and part-to-whole ratio formulations. As it is difficult for humans to provide an exact ratio in many real situations, we introduce a fuzzy ratio in this paper. We use some notions from fuzzy arithmetic to analyze fuzzy ratios captured from humans. An application of the formulated fuzzy ratio to a Single <b>Input</b> <b>Rule</b> Modules connected Fuzzy Inference System (SIRMs-FIS) is demonstrated. Instead of using a precise weight, fuzzy sets are employed to represent the relative importance of each rule module. The resulting fuzzy weights are explained as a fuzzy ratio on a weight domain. In addition, a new SIRMs-FIS model with fuzzy weights and part-to-whole fuzzy ratio is devised. A simulated example is presented to clarify the proposed SIRM-FIS model...|$|E
40|$|ABSTRACT [...] -The global {{scenario}} {{of the present}} world highly needs the communication between the urban areas and the rural areas. To motivate a new system for rural broadband access, there needs the integration of LAN and IEEE 802. 11 WLAN technologies. The variable metrics such as Access Protocol, User traffic profile, Buffer size and Data collision and retransmission {{are involved in the}} modeling of such LAN. In the paper, a fuzzy logic based LAN modeling technique is designed for which the variable metrics are imprecise. The technique involves the fuzzification of the variable metrics to be <b>input,</b> <b>rule</b> evaluation, and aggregation of the rule outputs. The implementation is done using Fuzzy Inference System (FIS) based on Mamdani style in MatLab 7. 6 for the representation of the reasoning and effective analysis. Four LAN systems are tested to analyze potential variable metrics to bring a smooth communication in the rural societies...|$|E
30|$|To {{test the}} {{completeness}} of repairs, {{we have used}} a basic function for CFD validation implemented separately from the one used in CondRepair and IncRepair. The basic function followed the original definition of CFD described in Bohannon et al. [1], by naively matching LHS value sets and RHS values for all pairs of tuples for all <b>input</b> <b>rules.</b> CondRepair produced repairs without a violation with WBC and Adult datasets, and left on average 43.2 tuples with violation with DBGen, because the input FD set contained rules that lead to the collision problem. It should be noted that if we are allowed to impose an order restriction described in Sect. 3.3 on the <b>input</b> <b>rules,</b> there should be no remaining errors also with DBGen. There were on average 308.5 tuples with remaining violations with IncRepair, 534.6 with FDRepair (WBC), 271.2 with IncRepair and 268.4 with FDRepair (1  K tuples of DBGen), and 4.8 with IncRepair and 236.6 with FDRepair (1  K tuples of Adult), when the error rate 0.05 and with no skew.|$|R
40|$|In the paper, {{we propose}} novel methods for {{designing}} and reduction of neuro-fuzzy systems without {{the deterioration of}} their accuracy. The reduction and merging algorithms gradually eliminate <b>inputs,</b> <b>rules,</b> antecedents, {{and the number of}} discretization points of integrals in the center of area defuzzification method. Our algorithms have been tested using well known classification benchmark. Key words: algorithm of best global eliminations, algorithm of best local eliminations, consecutive eliminations algorithm, consecutive mergings algorithm, interpretability, logical approach, neuro-fuzzy system...|$|R
5000|$|In the beginning, the Cangjie {{input method}} {{was not a}} way to produce a {{character}} in any character set. It was, instead, an integrated system consisting of the Cangjie <b>input</b> <b>rules</b> and a Cangjie controller board. The controller board contains character generator firmware, which dynamically generates Chinese characters from Cangjie codes when characters are output, using the hi-res graphics mode of an Apple II computer. In the preface of the Cangjie users manual, Chu Bong-Foo wrote in 1982: ...|$|R
3000|$|Use of {{equivalence}} classes assures {{a complete}} repair, i.e., a repair with no remaining violation. However, as Bohannon et al. have noted as collision problem, it often generates excessively large equivalence sets by applying repeated merges with multiple rules. For example, an equivalence class with cell t[B] is {{merged with the}} one with cell t'[B] based on ϕ _ 1 : A → B, then an equivalence class with cell t[C] is merged with the one with t'[C], based on another rule ϕ _ 2 : B → C, and so on. We make some modifications to Beskales et al.’s equivalence class. First, we do not make equivalence classes {{where there is no}} conflict, whereas Beskales’ method first merges all cells that have the same values. Secondly, we merge equivalence classes not based on their LHS equivalence classes, but simply based on the values on the LHS attributes. In order to achieve a complete repair, we impose some limitations on the order and the involving attributes of rules in the <b>input</b> <b>rule,</b> so that Σ ^< ^rules = {ϕ|∀ A ∈ϕ [...].LHS, A ∈ϕ '.RHS, ∀ϕ ' < ^rulesϕ}, which means Σ is a list of rules sorted in the order <^rules where any attribute on LHS of rule ϕ is not included in the RHS of any preceding rule ϕ '.|$|E
40|$|In this paper, the {{development}} of a semi- active suspension control of quarter car model using fuzzy-based controller has been done. The quarter car model to be used here can be described as a nonlinear two degrees of freedom system which is subject to excitation from different road profile. The semi-active control is designed as the fuzzy control inferred by using two single <b>input</b> <b>rule</b> fuzzy modules, and the road model is used as the control force is released by actuating an electromagnetic shaker. To implement semi-active suspension system experimentally, the MR damper is used here as the adjustable damper. The MR damper is a control device that consists of a hydraulic cylinder filled with magnetically polarizable particles suspended in a liquid. MR dampers dissipate vibration by absorbing energy. Magnetorheological (MR) fluids dampers are very effective to control vibration, which use MR fluids to produce controllable damping force and provide both the reliability of passive systems and the facility of active control systems with small power supply. Due to their mechanical simplicity, high dynamic range, low power requirements, large force capacity, and robustness, offer an attractive means of vibration protection. The objectives of this are modeling of semi-active suspension system, developing controller and understanding the characteristics of the MR damper to provide effective damping for the purpose of suspension isolation or suppression car model. In this work pid, fuzzy logic and fuzzy-hybrid controller are used to control semi-active car suspension system...|$|E
40|$|The {{common law}} often is casually {{referred}} to as an iterative process without much attention given to the detailed attributes such processes exhibit. This Article explores this characterization, uncovering how common law as an iterative process is one of endless repetition that is simultaneously stable and dynamic, self-similar but evolving, complex yet simple. These attributes constrain the systemic significance of judicial discretion and also confirm the wisdom of traditional approaches to studying and learning law. As an iterative system, common law exhibits what physicists call sensitive dependence on initial conditions. This generates a path dependency from which {{it may be hard}} to escape. Escape occurs through a second attribute of iterative processes, called self-similarity. Self-similarity in an iterative process exists when the output of one operation closely resembles the output in the next operation. Applications of an existing rule to new disputes bear that quality when disputes generated by the rule 2 ̆ 7 s initial conditions continue to be resolved in the same way. Non-self-similar applications of a rule involve departures from earlier formulations. When self-similarity dominates, the population of disputes cognizable under a rule is stable. Evolution and articulation of social norms promotes growth of non-self-similarity which threatens stability in the population of disputes. Such threats and path dependency created by initial conditions are overcome by what this Article calls judicial bifurcation, meaning a splintering of the <b>input</b> <b>rule</b> in a later dispute so that the population of disputes attracted by the population of rules regains stability. This produces a dominant systemic tendency towards stability in the population of disputes attracted by the population of rules. This systemic tendency puts limits on the systemic significance of judicial discretion. The fabric of the common law absorbs social norms, more than any idiosyncratic prejudices or tastes of particular judges. Importance of facts captured by sensitive dependence on initial conditions entails a substantial complexity in law that demands a close and careful reading of individual cases to understand law. Yet resulting systemic stability and influence of bifurcations reveal a systemic simplicity in the common law process, entailing also a need to study rhythms of case law dispute resolution...|$|E
50|$|Oomba is {{creating}} a mobile app and website to serve three major functions: tournament organization, webcasting, and social networking. The software records permanent results of events participated in, and allows users to create multiple identities or profiles to engage with different groups and/or games separately. The software will automatically organize tournaments for any game a user <b>inputs</b> <b>rules</b> for, and {{can serve as a}} platform for broadcasting live web streams of any event using it. Access to these streams can be found via their oomba.tv component.|$|R
40|$|Ordinal data play an {{important}} part in financial forecasting. For example, advice from expert sources may take the form of “bullish”, “bearish ” or “sluggish”, or &quot;buy &quot; or &quot;do not buy&quot;. This paper describes an application of using Genetic Programming (GP) to combine investment opinions. The aim is to combine ordinal forecast from different opinion sources in order to make better predictions. We tested our implementation, FGP (Financial Genetic Programming), on two data sets. In both cases, FGP generated more accurate rules than the individual <b>input</b> <b>rules...</b>|$|R
30|$|Table 1 {{presents}} an illustrative {{example of an}} <b>input</b> association <b>rules</b> set (noted as: “AR-Set” or the “ 14 -Rule Set”), and the mathematical formulas of some interestingness measures.|$|R
40|$|Soft {{computing}} techniques {{differ from}} conventional (hard) computing, in that unlike hard computing, it is tolerant of imprecision, uncertainty, partial truth, and approximation. In effect, the {{role model for}} soft computing is the human mind {{and its ability to}} address day-to-day problems. The principal constituents of Soft Computing (SC) are Fuzzy Logic (FL), Evolutionary Computation (EC), Machine Learning (ML) and Artificial Neural Networks (ANNs). This thesis presents a generic hardware architecture for type-I and type-II standalone tunable Fuzzy Logic Controllers (FLCs) in Field Programmable Gate Array (FPGA). The designed FLC system can be remotely configured or tuned according to expert operated knowledge and deployed in different applications to replace traditional Proportional Integral Derivative (PID) controllers. This re-configurability is added as a feature to existing FLCs in literature. The FLC parameters which are needed for tuning purpose are mainly input range, output range, number of inputs, number of outputs, the parameters of the membership functions like slope and center points, and an If-Else rule base for the fuzzy inference process. Online tuning enables users to change these FLC parameters in real-time and eliminate repeated hardware programming whenever {{there is a need to}} change. Realization of these systems in real-time is difficult as the computational complexity increases exponentially with an increase in the number of inputs. Hence, the challenge lies in reducing the rule base significantly such that the inference time and the throughput time is perceivable for real-time applications. To achieve these objectives, Modified Rule Active 2 Overlap Membership Function (MRA 2 -OMF), Modified Rule Active 3 Overlap Membership Function (MRA 3 -OMF), Modified Rule Active 4 Overlap Membership Function (MRA 4 -OMF), and Genetic Algorithm (GA) base rule optimization methods are proposed and implemented. These methods reduce the effective rules without compromising system accuracy and improve the cycle time in terms of Fuzzy Logic Inferences Per Second (FLIPS). In the proposed system architecture, the FLC is segmented into three independent modules, fuzzifier, inference engine with rule base, and defuzzifier. Fuzzy systems employ fuzzifier to convert the real world crisp input into the fuzzy output. In type 2 fuzzy systems there are two fuzzifications happen simultaneously from upper and lower membership functions (UMF and LMF) with subtractions and divisions. Non-restoring, very high radix, and newton raphson approximation are most widely used division algorithms in hardware implementations. However, these prevalent methods have a cost of more latency. In order to overcome this problem, a successive approximation division algorithm based type 2 fuzzifier is introduced. It has been observed that successive approximation based fuzzifier computation is faster than the other type 2 fuzzifier. A hardware-software co-design is established on Virtex 5 LX 110 T FPGA board. The MATLAB Graphical User Interface (GUI) acquires the fuzzy (type 1 or type 2) parameters from users and a Universal Asynchronous Receiver/Transmitter (UART) is dedicated to data communication between the hardware and the fuzzy toolbox. This GUI is provided to initiate control, <b>input,</b> <b>rule</b> transfer, and then to observe the crisp output on the computer. A proposed method which can support canonical fuzzy IF-THEN rules, which includes special cases of the fuzzy rule base is included in Digital Fuzzy Logic Controller (DFLC) architecture. For this purpose, a mealy state machine is incorporated into the design. The proposed FLCs are implemented on Xilinx Virtex- 5 LX 110 T. DFLC peripheral integration with Micro-Blaze (MB) processor through Processor Logic Bus (PLB) is established for Intellectual Property (IP) core validation. The performance of the proposed systems are compared to Fuzzy Toolbox of MATLAB. Analysis of these designs is carried out by using Hardware-In-Loop (HIL) test to control various plant models in MATLAB/Simulink environments. ...|$|E
40|$|This {{thesis is}} {{concerned}} with the merging of two active research domains: Knowledge Discovery in Databases (KDD), more precisely the Association Rule Mining technique, and Knowledge Engineering (KE) with a main interest in knowledge representation languages developed around the Semantic Web. In Data Mining, the usefulness of association rule technique is strongly limited by the huge amount and the low quality of delivered rules. Experiments show that rules become almost impossible to use when their number exceeds 100. At the same time, nuggets are often represented by those rare (low support) unexpected association rules which are surprising to the user. Unfortunately, the lower the support is, the larger the volume of rules becomes. Thus, it is crucial to help the decision maker with an efficient technique {{to reduce the number of}} rules. To overcome this drawback, several methods have been proposed in the literature such as itemset concise representations, redundancy reduction, filtering, ranking and post-processing. Even though rule interestingness strongly depends on user knowledge and goals, most of the existing methods are generally based on data structure. For instance, if the user looks for unexpected rules, all the already known rules should be pruned. Or, if the user wants to focus on specific family of rules, only this subset of rules should be selected. In this context, we address two main issues: the integration of user knowledge in the discovery process and the interactivity with the user. The first issue requires defining an adapted formalism to express user knowledge with accuracy and flexibility such as ontologies in the Semantic Web. Second, the interactivity with the user allows a more iterative mining process where the user can successively test different hypotheses or preferences and focus on interesting rules. The main contributions of this work can be summarized as follows: (i) A model to represent user knowledge. First, we propose a new rule-like formalism, called Rule Schema, which allows the user to define his/her expectations regarding the rules through ontology concepts. Second, ontologies allow the user to express his/her domain knowledge by means of a high semantic model. Last, the user can choose among a set of Operators for interactive processing the one to be applied over each Rule Schema (i. e. pruning, conforming, unexpectedness,...). (ii) A new post-processing approach, called ARIPSO (Association Rule Interactive Post-processing using rule Schemas and Ontologies), which helps the user to reduce the volume of the discovered rules and to improve their quality. It consists in an interactive process integrating user knowledge and expectations by means of the proposed model. At each step of ARIPSO, the interactive loop allows the user to change the provided information and to reiterate the post-processing phase which produces new results. (iii) The implementation in post-processing of the proposed approach. The developed tool is complete and operational, and it implements all the functionalities described in the approach. Also, it makes the connection between different elements like the set of rules and rule schemas stored in PMML/XML files, and the ontologies stored in OWL files and inferred by the Pellet reasoner. (iv) An adapted implementation without post-processing, called ARLIUS (Association Rule Local mining Interactive Using rule Schemas), consisting in an interactive local mining process guided by the user. It allows the user to focus on interesting rules without the necessity to extract all of them, and without minimum support limit. In this way, the user may explore the rule space incrementally, a small amount at each step, starting from his/her own expectations and discovering their related rules. (v) The experimental study analyzing the approach efficiency and the discovered rule quality. For this purpose, we used a real-life and large questionnaire database concerning customer satisfaction. For ARIPSO, the experimentation was carried out in complete cooperation with the domain expert. For different scenarios, from an input set of nearly 400 thousand association rules, ARIPSO filtered between 3 and 200 rules validated by the expert. Clearly, ARIPSO allows the user to significantly and efficiently reduce the <b>input</b> <b>rule</b> set. For ARLIUS, we experimented different scenarios over the same questionnaire database and we obtained reduced sets of rules (less than 100) with very low support...|$|E
5000|$|Assign symbols from a membrane’s {{content to}} the <b>rule’s</b> <b>inputs</b> ...|$|R
5000|$|... #Subtitle level 2: Forming a {{consensus}} of <b>inputs</b> and fuzzy <b>rules</b> ...|$|R
40|$|Abstract—In this two-part paper, {{a design}} {{methodology}} for bus-splitting digital delta-sigma modulators (DDSMs) is presented. The design methodology {{is based on}} error masking and is applied to both ditherless and dithered DDSMs with constant and sinusoidal <b>inputs.</b> <b>Rules</b> for selecting the appropriate wordlengths of the con-stituent DDSMs are derived which ensure that the spectral per-formance of the bus-splitting architecture is {{comparable to that of}} the conventional design but with less hardware. Behavioral simula-tions and experimental results confirm the theoretical predictions. Part I addresses ditherless MASH DDSMs with constant inputs; Part II focuses on DDSMs with dither and sinusoidal inputs. Index Terms—Bus-splitting, digital delta-sigma modulator (DDSM), dither, nesting. I...|$|R
40|$|In {{this paper}} the {{functioning}} of the landscape generator is presented. The landscape generator is developed as part of the planning support system called Simlandscape. Using real-world spatial data and a user-defined intended landscape typology, the landscape generator progresses for satisfying an overall fitness function. This fitness function is compiled of a set of criterion functions describing configurational characteristics of a landscape typology. When the overall fitness function is satisfied a landscape configuration is generated. Discerning technical characteristics with respect to other optimisation techniques, are the use of straightforward design <b>input</b> <b>rules</b> (criterion functions) and its ability to produce acceptable results in considerable time...|$|R
40|$|The paper {{proposes a}} new Adaptive Mamdani Fuzzy Model (AMFM) based system {{modelling}} methodology that improves on traditional Mamdani fuzzy rule based system (FRBS) techniques {{through use of}} alternative membership functions and a defuzzification mechanism that is ‘differentiable’, allowing a back error propagation (BEP) algorithm to refine the initial fuzzy model. Moreover, a variational Bayesian (VB) method is applied to simplify the results via automatic selection {{of the number of}} <b>input</b> <b>rules</b> so that redundant rules can be removed for the initial modelling phase. The efficacy of the proposed VB modified AMFM (VB-AMFM) approach is demonstrated through experimental trials using measurements from a compressor in an industrial gas turbine (IGT) ...|$|R
30|$|Inference engine simulates {{the human}} {{reasoning}} process by making fuzzy inference on the <b>inputs</b> and IF-THEN <b>rules.</b>|$|R
40|$|This {{conceptual}} paper {{examines the}} democratic legitimacy of multi-stakeholder initiatives, global regulatory mechanisms involving corporations {{and civil society}} to solve public problems. It identifies three driving factors of <b>input</b> legitimacy (<b>rule</b> credibility) and three driving factors of output legitimacy (rule effectiveness) and examines their interplay...|$|R
50|$|In 2016, AED {{closely watched}} and {{submitted}} <b>input</b> during the <b>rule</b> making {{process for the}} new 2016 federal rules on overtime.|$|R
40|$|The aim is {{to develop}} the {{theoretical}} bases for construction and methodical principles {{for use of the}} expert system on the subject knowledge field "Interaction of medicaments" on base of creating the application-oriented knowledge base providing the multifactor processing of the scientific pharmaco-therapeutic information about medicaments. The traditional methods of the knowledge representation in the given thematic field, technology of the accumulation, storage, search and explanation of the discovered data with use of the <b>input</b> <b>rules</b> have been studied. The investigation materials have been included into the text-books on the problems of creating information retrieval system of interaction results of the medicaments and prevention of selling incompatible medicaments for practical studies of the students. Available from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|The {{capabilities}} and {{applications of the}} three-degree-of-freedom (3 DOF) version and the six-degree-of-freedom (6 DOF) version of the Program to Optimize Simulated Trajectories (POST) are summarized. The document supplements the detailed program manuals by providing additional information that motivates and clarifies basic capabilities, input procedures, applications and computer requirements of these programs. The information will enable prospective users to evaluate the programs, and {{to determine if they}} are applicable to their problems. Enough information is given to enable managerial personnel to evaluate the capabilities of the programs and describes the POST structure, formulation, input and output procedures, sample cases, and computer requirements. The report also provides answers to basic questions concerning planet and vehicle modeling, simulation accuracy, optimization capabilities, and general <b>input</b> <b>rules.</b> Several sample cases are presented...|$|R
40|$|Fuzzy-neural-network-based {{inference}} {{systems are}} well-known universal approximators which can produce linguistically interpretable results. Unfortunately, their dimensionality {{can be extremely}} high due to an excessive number of <b>inputs</b> and <b>rules,</b> which raises the need for overall structure optimization. In the literature, various input selection methods are available, but they are applied separately from rule selection, often without considering the fuzzy structure. This paper proposes an integrated framework to optimize the number of inputs {{and the number of}} rules simultaneously. First, a method is developed to select the most significant rules, along with a refinement stage to remove unnecessary correlations. An improved information criterion is then proposed to find an appropriate number of <b>inputs</b> and <b>rules</b> to include in the model, leading to a balanced tradeoff between interpretability and accuracy. Simulation results confirm the efficacy of the proposed method...|$|R
30|$|The {{inference}} procedure process fuzzy <b>input</b> {{data and}} <b>rules</b> to infer fuzzy control actions employing fuzzy implication {{and the rules}} of inference in fuzzy logic.|$|R
50|$|The {{first rule}} only applies {{in the usual}} case where the op-amp is used in a {{closed-loop}} design (negative feedback, {{where there is a}} signal path of some sort feeding back from the output to the inverting <b>input).</b> These <b>rules</b> are commonly used as a good first approximation for analyzing or designing op-amp circuits.|$|R
40|$|Abstract — To {{find the}} outlier and disease {{possibility}} of ten cancer diseases. In the existing system, Transactional data of three companies are taken as <b>input.</b> Association <b>rules</b> are {{extracted from the}} input data using open source data mining tool. By applying consistency rule, the outliers are identified. Outliers are manually examined to determine whether any data quality is violation has really occurred. Cost for manual examination is estimated using confusion matrix. In this system, recorded patient details is taken as input. From the <b>input</b> data, association <b>rule</b> is identified and outliers are detected. Weight is assigned to each symptoms of all considered cancer disease. When user enters the symptoms, percentage of cancer disease possibility is calculated. Index Terms—Association rule,outlier,consistency rul...|$|R
40|$|Liu’s {{inference}} is {{a process}} of deriving consequences from <b>input</b> and <b>rules</b> containing uncertain evidence or knowledge via the tool of conditional uncertainty. Sometimes, one input may match more than one rules with different degree, which will export more than one output consequences. In order to obtain one output from these initial outputs, interpolation method is proposed in this paper...|$|R
5000|$|Like other machine {{learning}} methods, LLM uses data {{to build a}} model able to perform a good forecast about future behaviors. LLM starts from a table including a target variable (output) and some inputs and generates {{a set of rules}} that return the output value [...] corresponding to a given configuration of <b>inputs.</b> A <b>rule</b> is written in the form: ...|$|R
