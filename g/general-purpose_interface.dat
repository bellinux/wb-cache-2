16|41|Public
5000|$|IEEE-488 (also {{known as}} GPIB, <b>General-Purpose</b> <b>Interface</b> Bus, and HPIB, Hewlett-Packard Instrumentation Bus) ...|$|E
40|$|Report {{describes}} interface {{electronic circuit}} developed to enable ground controllers to send commands and data via Ku-band radio uplink to multiple circuits connected to standard IEEE- 488 <b>general-purpose</b> <b>interface</b> bus in space shuttle. Design of circuit extends data-throughput capability of communication system...|$|E
40|$|Data-communication adapter circuit on single {{printed-circuit board}} serves as <b>general-purpose</b> <b>interface</b> between {{personal}} computer and satellite communication system. Designed as direct interface with Ku-band data-communication system for payloads on space shuttle, also used with any radio-frequency transmission systems. Readily installed {{in almost any}} personal computer via widely used Industry Standard Architecture (ISA) bus...|$|E
40|$|We present {{specifications}} and provable protocol, for secure ordering and {{provision of}} digital goods and services. Notably, our protocol includes fully automated {{resolution of disputes}} between providers and customers. Disputes may involve the timely receipt of orders and goods, due to communication failures and malicious faults, as well as disputes of fitness of goods and order. The protocol and specifications are modular, with precise yet <b>general-purpose</b> <b>interfaces.</b> This allows usage as an underlying service to di#erent ecommerce scenarios and applications, in particular secure online banking and brokerage...|$|R
5000|$|Use of standard, open, <b>general-purpose</b> {{protocols}} and <b>interfaces</b> ...|$|R
40|$|We {{present a}} layered {{architecture}} for secure e-commerce applications and protocols with fully automated dispute-resolution process, robust to communication failures and malicious faults. Our design is modular, with precise yet <b>general-purpose</b> <b>interfaces</b> and functionalities, and allows usage as an underlying secure service to different e-commerce, e-banking and other distributed systems. The interfaces support diverse, flexible and extensible payment scenarios and instruments, including direct buyer-seller payments {{as well as}} (the more common) indirect payments via payment service providers (e. g. banks). Our design is practical, efficient, and ensures reliability and security under realistic failure and delay conditions...|$|R
40|$|Computer-controlled, {{motorized}} {{positioning system}} developed {{for use in}} robotic manipulation of samples in custom-built secondary-ion mass spectrometry (SIMS) system. Positions sample repeatably and accurately, even during analysis in three linear orthogonal coordinates and one angular coordinate under manual local control, or microprocessor-based local control or remote control by computer via <b>general-purpose</b> <b>interface</b> bus (GPIB) ...|$|E
40|$|IBM-compatible {{personal}} computer {{used instead of}} logic analyzer or other special instrument to monitor IEEE- 488 interface data bus that interconnects various pieces of laboratory equipment. Needed is short program for computer, commercial <b>general-purpose</b> <b>interface</b> bus circuit card, and adapter cable to link card to bus. Software available in Ada or Quick Basic language...|$|E
40|$|Custom-build {{apparatus}} positions specimen in {{vacuum system}} in three translational and one rotational degree of freedom. Operates under manual control, local microprocessor control, or remote computer control via <b>general-purpose</b> <b>interface</b> bus (GPIB), specific control option being selectable by technician. Used to position and orient specimen for secondary-ion mass spectroscopy (SIMS). Apparatus made from relatively inexpensive parts...|$|E
40|$|Traditionally 3 D {{interaction}} techniques (3 DITs) are implemented in VR applications in a proprietary way on specific target platforms. Mixing 3 DIT specific code with application code neither allows for reusability in other applications nor for exchanging 3 DITs {{in a comfortable}} and flexible way. We propose an additional system software layer called Virtual Environment Interaction Technique Abstraction Layer (VITAL) targeted on platform and application independent (portable) 3 DIT implementation. We describe the underlying concepts and provide details on how to integrate VITAL in VR frameworks. Furthermore, development mechanisms targeted on portability and <b>general-purpose</b> <b>interfacing</b> techniques with other system components are outlined and demonstrated in examples...|$|R
40|$|Opportunities {{promised by}} IMS and {{value-added}} multimedia services have given mobile network operators and solutions provider a new impetus to: (1) equip middleware platforms {{to deal with}} services distribution and heterogeneity; and (2) to accelerate development and provisioning of services in a consistent and methodical manner. This paper describes a methodological approach to the development and life cycle management of middleware components, and publication and discovery of component’s services. The methodology addresses {{the need for a}} common understanding of the heterogeneous service execution platforms in form of artefacts such as interfaces specifications, UML information and use case models, meta-models, XML Schemas, representing the components and services. These artefacts also make the component generic, that is, component can be executed on several types of runtime environments. Component’s service-specific interfaces are separated from more <b>general-purpose</b> <b>interfaces.</b> The interfaces are defined in metadata, and published and distributed using technology-neutral mechanisms. This enables the user of the component to invoke its operations seamlessly...|$|R
50|$|In {{addition}} to the HP-IB interface, HP also sold RS-232 and <b>general-purpose</b> parallel I/O <b>interfaces</b> {{as well as a}} prototype kit to create custom interfaces.|$|R
40|$|We {{designed}} a small stereovision (SSV) sensor module for easily adding visual functions {{to a small}} robot and enabling their use. The SSV sensor module concept includes 1) a vision sensor module containing a camera and a visual pro-cessor and 2) connecting to a robot system through <b>general-purpose</b> <b>interface.</b> This design {{enables the use of}} visual functions as ordinary sensors such, as touch or ultra-sonic sensors, by simply connecting a <b>general-purpose</b> <b>interface</b> port such as an IO port or serial con-nector. We developed a prototype module with small CMOS image sensors for a mobile phone and a 16 bit micro-processor. The 3040 mm prototype is small enough to attach even to palm-top robots. Our module demon-strates image processing including binarization, color extraction and labeling, and template matching. We developed self-contained robots, including a 2 DOF head robot, a humanoid robot, and a palm-top robot, and realized vision-based autonomous behavior...|$|E
40|$|A {{plan has}} been {{formulated}} and selected for a NASA Phase 2 SBIR award for using the VLBA tape recorder for recording general data. The VLBA tape recorder is a high-speed, high-density linear tape recorder developed for Very Long Baseline Interferometry (VLBI) which is presently capable of recording at rates up to 2 Gbit/sec and holding up to 1 Terabyte of data on one tape, using a special interface and not employing error correction. A <b>general-purpose</b> <b>interface</b> and error correction will be added so that the recorder {{can be used in}} other high-speed, high-capacity applications...|$|E
40|$|Multiplexable input/output (I/O) system {{developed}} as interface between host computer and real-time, fixed-base simulator cockpit. Unit {{designed to be}} <b>general-purpose</b> <b>interface</b> and operated through virtually any 8 - or 16 -bit, transistor/transistor-logic-level, parallel-I/O port with or without handshaking. Accepts byte-coded data in form of data blocks from host computer and routes data to various system I/O modules like discrete outputs, lamp drivers, and seven-segment-display drivers. Formats and routes data from input modules back to host computer. Other modules designed to drive alphanumeric displays and communications interfaces and to serve as analog-to-digital and digital-to-analog converter modules...|$|E
50|$|In Electronics/computer {{hardware}} {{a display}} driver {{is usually a}} semiconductor integrated circuit (but may alternatively comprise a state machine made of discrete logic and other components) which provides an interface function between a microprocessor, microcontroller, ASIC or <b>general-purpose</b> peripheral <b>interface</b> and {{a particular type of}} display device, e.g. LCD, LED, OLED, ePaper, CRT, Vacuum fluorescent or Nixie.|$|R
40|$|The 8255 A {{programmable}} {{peripheral interface}} (PPI) implements a <b>general-purpose</b> I/O <b>interface</b> to connect peripheral equipment to a microcomputer system bus. The core's functional configuration is designed by VHDL code and designed input signal (Test bench) for PPI 8255, which {{is generated by}} VHDL code. Simulated result is verified for three 8 -bit Peripheral Ports- Ports A, B, and C, three programming modes for Periphera...|$|R
50|$|A single-board {{microcontroller}} {{differs from}} a single-board computer {{in that it}} lacks the <b>general-purpose</b> user <b>interface</b> and mass storage interfaces that a more general-purpose computer would have. Compared to a microprocessor development board, a microcontroller board would emphasize digital and analog control interconnections to some controlled system, whereas a development board might by {{have only a few}} or no discrete or analog input/output devices. The development board exists to showcase or train on some particular processor family and, therefore, internal implementation is more important than external function.|$|R
40|$|Microprocessor-controlled {{interface}} (IEEE- 488 /LVABI) incorporates service-request and direct-memory-access features. Is {{circuit card}} enabling digital communication between system called "laser auto-covariance buffer interface" (LVABI) and compatible personal computer via <b>general-purpose</b> <b>interface</b> bus (GPIB) conforming to Institute for Electrical and Electronics Engineers (IEEE) Standard 488. Interface serves as second interface enabling first interface to exploit advantages of GPIB, via utility software written specifically for GPIB. Advantages include compatibility with multitasking {{and support of}} communication among multiple computers. Basic concept also applied in designing interfaces for circuits other than LVABI for unidirectional or bidirectional handling of parallel data up to 16 bits wide...|$|E
40|$|We {{long for}} the day when {{interfaces}} automatically configure themselves without requiring tedious and time-consuming programming. Such an automatic configuration capability would require knowledge of the objects they are editing. Our current generation of OO interface tools lack a general protocol for exploring the objects they are processing. Therefore, they are unsuitable for auto-configuration. Here we explore a surprisingly simple syntactic model of objectsto -be-edited which a <b>general-purpose</b> <b>interface</b> hierarchy can use to manage the auto-configuration of interfaces. The model relies on "black-box" constraints: methods that when messaged may add error strings to a list of known errors. These constraints are not "glass-box"; i. e. our configuration tools cannot query them to discover their dependency information. Without such dependency information, our black-box system cannot optimise the processing of its constraints. Nevertheless, we demonstrate that black-box constraints can su [...] ...|$|E
40|$|The goal of {{this paper}} is to {{describe}} a simple method for the automated data acquisition and analysis of data taken by programmable instruments. Device controls and communication method are explained and some typical illustrative examples showing the potential applications of the method in real experiments are presented. This method oers a quick and exible way to control many instruments by using a multi-device arrangement of a stacking method in a parallel operation. The <b>General-Purpose</b> <b>Interface</b> Bus (GPIB) is used here for remote control of the devices. By using Excel and Visa interactive programs and using GPIB interface, easy communication and data transfer between instruments and a PC is accomplished. A special probe system is devised for the small resistant measuring experiments and the DC resistance measurements are performed by using the four-probe method. The related temperatures are measured by using a silicone diode as a resistance thermometer detector. Using this data acquisition method, short circuit voltage measurement, resistance measurements and the temperature dependence of resistance for a thin platinum wire are reported...|$|E
40|$|Abstract: The 8255 A {{programmable}} {{peripheral interface}} PPI) implements a <b>general-purpose</b> I/O <b>interface</b> to connect peripheral equipment to a microcomputer system bus. The core’s functional configuration is designed by VHDL code and designed input signal (Test bench) for PPI 8255, which {{is generated by}} VHDL code. Simulated result is verified for one 8 -bit Peripheral Ports- Ports A, three programming modes for Peripheral Ports: Mode 0 (Basic Input/output programmable I/O lines. Also verified simulated and synthesized result for PPI 8255. All designed is done by using Xilinx ISE 10. 1 i...|$|R
40|$|Abstract — These days, the PCI bus is the {{standard}} bus which not only x 86 architecture but also other architecture is equipped with. However, the details are difficult to understand. We designed the <b>general-purpose</b> PCI bus <b>interface</b> for developing PCI devices, and implemented it. In this paper, the feature of design is reported. P...|$|R
40|$|High-performance network {{hardware}} is advancing, with multi-gigabit link bandwidths and sub-microsecond switch latencies. Network-interface hardware also {{continues to}} evolve, although the design space remains large and diverse. One critical abstraction, a simple, portable, and <b>general-purpose</b> communications <b>interface,</b> {{is required to}} make effective use of these increasingly high-performance networks and their capable interfaces. Without a new interface, the software overheads of existing ones will dominate communication costs, and many applications may not benefit from the advancements in network hardware. This document specifies a new active message communications interface for these networks. Its primitives, in essence an instruction set for communications, map efficiently onto underlying network hardware and compose effectively into higher-level protocols and applications. For high-performance implementations, the interface enables direct application-network interface interactions. In [...] ...|$|R
40|$|The frequency-multiplier {{submillimeter}} spectrometer (FMSS) is {{a laboratory}} apparatus for far-infrared molecular spectroscopy, embodying several advances over prior such apparatuses. The most innovative {{part of the}} FMSS {{is a source of}} monochromatic submillimeter- wavelength radiation that can be tuned over a wide frequency range, as needed for trace gas analyses and molecular- structure studies for which such apparatuses are typically used. The radiation source features a modular design and is built mostly from commercially available components. It includes a computer-controlled radio-frequency synthesizer, amplifiers, and frequency multipliers of a type heretofore used in local oscillators for heterodyne far-infrared receivers. In conjunction {{with the rest of the}} apparatus, this source makes it possible to perform measurements over large portions of the submillimeter-wavelength spectrum with resolution, accuracy, and sensitivity greater than those achievable in Fourier-transform infrared spectroscopy. In comparison with prior laboratory submillimeter- wavelength radiation sources, this source is much lighter in weight, less cumbersome, less power-hungry, and capable of sustained operation with less intervention by laboratory personnel. Also, unlike some prior submillimeter-wavelength sources, this source does not require a high-voltage power source. As shown in more detail in the figure, the radiation source includes a sweep frequency synthesizer connected to an external waveform generator, the output of which is used as a reference signal. The synthesizer is computer-controlled through a standard <b>general-purpose</b> <b>interface</b> bus (GPIB) and is operated in phase-locked continuous- wave mode for all measurements. The synthesizer output ranges in frequency from 11 to 18 GHz. For suppression of frequency spurs and harmonics, the output of the frequency synthesizer is fed through a tunable yttrium iron garnet (YIG) filter, which is swept in frequency simultaneously with the frequency synthesizer...|$|E
40|$|Note added March 2002 The methods {{described}} in the paper below have been automated as part of Release 8. 0 of GEMPACK. This new version of GEMPACK (which is being beta tested by several modellers now and will be officially released later in 2002) makes it very easy to implement quotas (including import/export quotas and tariff rate quotas). This means {{that many of the}} implementation details in the technical paper below are no longer required. If you need to implement quotas etc in GEMPACK, please consult Ken Pearson. Abstract Explicit modeling of tariff rate quotas (TRQs) is important in the current World Trade Organization negotiations. In order to do such modeling with GTAP, extra data is required and extra equations must be added to the model. This paper provides tools for assisting modelers to carry out explicit modeling of bilateral tariff rate quotas in GTAP using GEMPACK. The paper describes how the extra data for sugar TRQ applications was obtained and reconciled with the standard GTAP data. Supplied with the paper is a TABLO Input file TRQDATA. TAB which others can use for reconciling their TRQ data with the usual GTAP data. Supplied with the paper is a module which can be added to the standard TABLO Input files for GTAP. This module contains the extra equations required to model TRQs. Detailed hands-on examples are supplied with the paper, as is a TRQ application relating to a partial liberalization of sugar TRQ. Readers of the paper can replicate these applications. A windows interface TRQmate is supplied with the paper. This is a relatively <b>general-purpose</b> <b>interface</b> which automates the steps in carrying out TRQ applications with GTAP and GEMPACK. If you wish to carry out your own bilateral TRQ applications with GTAP and GEMPACK, the tools supplied with this paper will make it relatively straightforward for you to do so once you have collected the extra data you need. ...|$|E
40|$|The {{development}} of speaker-independent mixed-initiative spoken language interfaces, in which users not only answer questions but also {{ask questions and}} give instructions, is currently limited by the performance of language models based largely on word co-occurrences. Even under ideal circumstances, with large application-specific corpora on which to train, conventional language models are not sufficiently predictive to correctly analyze {{a wide variety of}} inputs {{from a wide variety of}} speakers, such as might be encountered in a <b>general-purpose</b> <b>interface</b> for directing robots, office assistants, or other agents with complex capabilities. This thesis explores the use of statistical models of language conditioned on the meanings or denotations of input utterances in the context of an interface 2 ̆ 7 s underlying application environment or world model, as an extension to the ‘semantic grammars’ used in existing spoken language interfaces (which rely on co-occurrences among words or word classes). Since there are an exponential number of possible parse tree analyses attributable to any string of words, and many possible word strings attributable to any utterance, this use of model-theoretic interpretation must involve some kind of sharing of partial results between competing analyses if interpretation is to be performed on large numbers of possible analyses in a practical interactive application. This thesis presents a formal result that model-theoretic semantic interpretation can be factored (cut into well-behaved partial results) and shared (re-used between possible analyses) in polynomial time, in much the same way that simple syntactic structure is factored into context-free rules and shared in standard dynamic programming parsing algorithms. This polynomial bound holds even for analyses containing non-immediate variable scopings (including intra-sentential anaphora and quantifier raising) and generalized quantifiers, which are traditionally analyzed to have second-order (exponential) denotations. The thesis also presents the practical result that this approach does indeed yield a statistically significant improvement in accuracy in analyzing a corpus of spoken directions to 3 -D animated agents. ...|$|E
40|$|In {{this paper}} we {{present the results}} of a study that investigates the {{relationships}} between search tasks, information architecture, and interaction style. Three kinds of search tasks (simple lookup, complex lookup and exploratory) were performed using three different user interfaces (standard web site, hierarchical text-based faceted interface, and dynamic query faceted interface) for a large-scale public corpus containing semi-structured statistical data and reports. Twenty-eight people conducted the three kinds of searches in a between-subjects study and twelve others conducted the three kinds of searches on all three systems in a within-subjects study. Quantitative results demonstrate that the alternative <b>general-purpose</b> user <b>interfaces</b> that accept automated structuring of data offer comparable effectiveness, efficiency, and aesthetics to manually constructed architectures. Qualitative results demonstrate the manual architectures are favored...|$|R
5000|$|It {{introduced}} {{the idea of}} the Dock (carried through OpenStep and into today's macOS) and the Shelf. NeXTSTEP also originated or innovated a large number of other GUI concepts which became common in other operating systems: 3D [...] "chiseled" [...] widgets, large full-color icons, system-wide drag and drop {{of a wide range of}} objects beyond file icons, system-wide piped services, real-time scrolling and window dragging, properties dialog boxes called [...] "inspectors", and window modification notices (such as the saved status of a file). The system is among the first <b>general-purpose</b> user <b>interfaces</b> to handle publishing color standards, transparency, sophisticated sound and music processing (through a Motorola 56000 DSP), advanced graphics primitives, internationalization, and modern typography, in a consistent manner across all applications.|$|R
40|$|Abstract — We {{present a}} {{hardware}} verification environment that integrates the ACL 2 theorem prover and SixthSense, the IBM internal formal verification tool. In this environment, SixthSense is called through an ACL 2 function acl 2 six that {{makes use of}} a <b>general-purpose</b> external <b>interface</b> added to the ACL 2 theorem prover. This interface allows connecting any decision procedures and model-checker to ACL 2 by simply writing ACL 2 functions. Our environment exploits a unique approach to connect the logic of general-purpose theorem prover and machine designs in VHDL, rather than a language embedding. With {{an example of a}} pipelined multiplier, we show how our environment can be used to divide a large verification problem into a number of simpler problems, which can be verified using automated verification engines. I...|$|R
40|$|Proteins are {{the wheels}} and mill {{stones of the}} complex {{machinery}} that underlies human life. In carrying out their functions, proteins work in close association with other proteins, forming protein complexes. A huge network of protein-protein interactions enables the cell to respond quickly {{to changes in the}} environment and to communicate with other cells. When the balance of this network is disrupted, diseases such as cancer may result, and for this reason, pharmaceutical drugs are very often targeted at proteins. To fully understand how proteins work together, knowledge at the atomic level is required. X-ray crystallography and NMR are the classical methods for this, solving the three-dimensional structure of many individual proteins as well as protein complexes. However, the number of complexes in the cell is at least one order of magnitude larger than the number of proteins. Moreover, associations between proteins and other macromolecules are often transient and reversible, especially the biologically interesting signal transduction complexes. For many complexes, the 3 D structures of the individual proteins in their free, unbound form are known, but the structure of the protein complex itself remains elusive. This thesis deals with two fields of study that aim to shed light on protein complexes by computational means: data-driven docking and interface prediction. Docking, in general, is predicting the structure of a complex starting from the free, unbound structures. Data-driven docking, in particular, uses experimental information during the docking process. Chemical shift perturbation (CSP), hydrogen-deuterium (H/D) exchange and site-directed mutagenesis can identify the interface region; residual dipolar couplings and relaxation anisotropy can provide information about the relative orientation of the proteins. All of this information can be used in HADDOCK, the data-driven docking method developed in our group, and an improved version of HADDOCK is presented in chapter 6 of this thesis. HADDOCK is not limited to complexes between two proteins, but can deal with up to six molecules of proteins, nucleic acids, sugars or small ligands. HADDOCK finished second in the recent cycle of the CAPRI international docking competition. Finally, a web server interface for HADDOCK is presented in chapter 7, facilitating data-driven docking for a larger community. It is shown that {{even in the absence of}} experimental data, data-driven docking can be successful when the interface region between the proteins is predicted by computational means. Chapter 4 describes WHISCY, a <b>general-purpose</b> <b>interface</b> prediction program and web server. In chapter 5, pairwise propensities and their use in interface prediction are evaluated. Finally, in chapter 8, CPORT is introduced: a consensus method that combines six interface predictors and that is specifically designed for data-driven docking. In this chapter, prediction-driven docking is successfully applied to a large and diverse benchmark of protein complexes, including signal transduction complexes. While correct solutions could not be obtained for all complexes, the success rate is comparable with state-of-the-art ab initio docking methods, and it is argued that further improvement is still possible...|$|E
40|$|The {{performance}} of page-based software shared virtual memory (SVM) {{is still far}} from that achieved on hardwarecoherent distributed shared memory (DSM) systems. The interrupt cost for asynchronous protocol processing {{has been found to}} be a key source of performance loss and complexity. This paper shows that by providing simple and general support for asynchronous message handling in a commodity network interface (NI), and by altering SVM protocols appropriately, protocol activity can be decoupled from asynchronous message handling and the need for interrupts or polling can be eliminated. The NI mechanisms needed are generic, not SVM-dependent. They also require neither visibility into the node memory system nor code instrumentation to identify memory operations. We prototype the mechanisms and such a synchronous home-based LRC protocol, called GeNIMA (<b>GEneral-purpose</b> Network <b>Interface</b> support in a shared Memory Abstraction), on a cluster of SMPs with a programmable NI, though the mechan [...] ...|$|R
40|$|We {{present a}} novel type of {{tangible}} controls for interactive tabletops: actuated general-purpose widgets {{that are used}} to manipulate digital data on interactive tabletops. Due to their transparency the visual appearances can be changed dynamically. Unlike previous approaches, our widgets can be arranged and configured on the tabletop by employing an array of electromagnets beneath the multi-touch surface. This enables a bilateral communication between the user and the multi-touch application while keeping the controls untethered, low-cost, and easy to build. a) b) c) d) e) f) g) Author Keywords Tangible user <b>interface,</b> <b>general-purpose,</b> widgets, actuate...|$|R
40|$|Fast and {{accurate}} speech recognition systems {{bring with them}} the possibility of designing flexible voice driven applications. In this paper, we highlight the needs related to a voice interface and describe {{the implementation of a}} <b>general-purpose</b> spoken language <b>interface,</b> the Camegie Mellon Spoken Language Shell (CM-SLS). CM-SLS provides voice interface services to different applications running on the same computer. CM-SLS was used to build the Office Manager, a collection of applications that includes an appointment calendar, a personal database, voice mail and a calculator. The performance of several system components is described...|$|R
50|$|Thunderbolt was co-developed by Intel and Apple as a <b>general-purpose</b> {{high speed}} <b>interface</b> {{combining}} a ×4 PCIe link with DisplayPort and was {{originally intended to}} be an all-fiber interface, but due to early difficulties in creating a consumer-friendly fiber interconnect, most early implementations are hybrid copper-fiber systems. A notable exception, the Sony VAIO Z VPC-Z2, uses a nonstandard USB port with an optical component to connect to an outboard PCIe display adapter. Apple has been the primary driver of Thunderbolt adoption through 2011, though several other vendors have announced new products and systems featuring Thunderbolt.|$|R
40|$|Programming massively-parallel {{machine is}} a {{daunting}} task for anyhuman programmer and parallelization mayeven be impossible for any compiler. Instead, the functional programming paradigm {{may prove to be}} an ideal solution by providing an implicitly parallel interface to the programmer. We describe here the Sisal project #Stream and Iteration in a Single Assignment Language# and its goal to provide a <b>general-purpose</b> user <b>interface</b> {{for a wide range of}} parallel processing platforms. 1 Introduction The history of computing has shown shifts from explicit to implicit programming. In the early days, computers were programmed in assembly language, mostly with the purpose of utilizing the available memory space as e#ectively as possible. This came at the cost of obscure, machine-dependent, hard to maintain programs, whichwere designed with high programming e#ort. Fortran ? This research is supported in part by ARPA grant#DABT 63 - 95 - 0093 and NSF grant 53 - 4503 - 3481 was introduced to m [...] ...|$|R
