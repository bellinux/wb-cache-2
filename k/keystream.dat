601|38|Public
5|$|Another Trojan in this wave, TorrentLocker, {{initially}} {{contained a}} design flaw comparable to CryptoDefense; it {{used the same}} <b>keystream</b> for every infected computer, making the encryption trivial to overcome. However, this flaw was later fixed. By late-November 2014, {{it was estimated that}} over 9,000 users had been infected by TorrentLocker in Australia alone, trailing only Turkey with 11,700 infections.|$|E
25|$|Scott Fluhrer and David McGrew {{also showed}} such attacks which {{distinguished}} the <b>keystream</b> of the RC4 from a random stream given a gigabyte of output.|$|E
25|$|These test vectors are not official, but {{convenient}} for anyone testing their own RC4 program. The keys and plaintext are ASCII, the <b>keystream</b> and ciphertext are in hexadecimal.|$|E
50|$|A {{correlation}} attack {{enables the}} recovery of a <b>keystream's</b> seed at complexity of 216.|$|R
40|$|After a brief {{introduction}} {{to a new}} chaotic stream cipher Mmohocc which utilizes the fundamental chaos characteristics of mixing, unpredictability, and sensitivity to initial conditions, we conducted the randomness statistical tests against the <b>keystreams</b> generated by the cipher. Two batteries of most stringent randomness tests, namely the NIST Suite and the Diehard Suite, were performed. The {{results showed that the}} <b>keystreams</b> have successfully passed all the statistical tests. We conclude that Mmohocc can generate high-quality pseudorandom numbers from a statistical point of view. Comment: 8 pages, 4 figures, and 3 tables, submitted to ICCS 0...|$|R
40|$|Abstract. The DECT Standard Cipher (DSC) is a {{proprietary}} stream cipher used for enciphering payload of DECT transmissions such as cordless telephone calls. The algorithm was kept secret, but {{a team of}} cryptologists reverse-engineered it and published a {{way to reduce the}} key space when enough known <b>keystreams</b> are available [4]. The attack consists of two phases: At first, the <b>keystreams</b> are analyzed to build up an underdetermined linear equation system. In the second phase, a bruteforce attack is performed where the equation system limits the number of potentially valid keys. In this paper, we present an improved variant of {{the first phase of the}} attack as well as an optimized FPGA implementation of the second phase, which can be used with our improved variant or with the original attack. Our improvement to the first phase of the attack is able to more than double the success probability of the attack, depending of the number of available <b>keystreams.</b> Our FPGA implementation of the second phase of the attack is currently the most cost-efficient way to execute the second phase of the attack...|$|R
25|$|Similarly, the 22-bits of {{the frame}} number are added in 22 cycles. Then the entire system is clocked using the normal {{majority}} clocking mechanism for 100 cycles, with the output discarded. After this is completed, the cipher is ready to produce two 114 bit sequences of output <b>keystream,</b> first 114 for downlink, last 114 for uplink.|$|E
25|$|In cryptography, RC4 (Rivest Cipher 4 {{also known}} as ARC4 or ARCFOUR meaning Alleged RC4, see below) is a stream cipher. While {{remarkable}} for its simplicity and speed in software, multiple vulnerabilities have been discovered in RC4, rendering it insecure. It is especially vulnerable when {{the beginning of the}} output <b>keystream</b> is not discarded, or when nonrandom or related keys are used. Particularly problematic uses of RC4 have led to very insecure protocols such as WEP.|$|E
25|$|In 2005, Andreas Klein {{presented}} {{an analysis of}} the RC4 stream cipher showing more correlations between the RC4 <b>keystream</b> and the key. Erik Tews, Ralf-Philipp Weinmann, and Andrei Pychkine used this analysis to create aircrack-ptw, a tool which cracks 104-bit RC4 used in 128-bit WEP in under a minute. Whereas the Fluhrer, Mantin, and Shamir attack used around 10 million messages, aircrack-ptw can break 104-bit keys in 40,000 frames with 50% probability, or in 85,000 frames with 95% probability.|$|E
5000|$|... {{the best}} cryptanalytic attack on Py (by Hongjun Wu and Bart Preneel) can under some {{circumstances}} (e.g. where the IV is {{much longer than}} the key) recover the key given partial <b>keystreams</b> for 224 chosen IVs http://www.ecrypt.eu.org/stream/papersdir/2006/052.pdf.|$|R
40|$|RC 4 is {{a stream}} cipher {{included}} in the TLS protocol, and widely used for encrypting network traffic during the last decades. Spritz is a possible candidate for replacing RC 4. Spritz {{is based on a}} sponge construction and preserves the byte-oriented behaviour existing in RC 4, but introduces an interface that provides encryption, hashing or MAC-generation functionalities. We present here the results obtained after applying several statistical tests on the <b>keystreams</b> generated by Spritz when used in the cipher mode. Our methodology makes use of 1024 <b>keystreams</b> of 2 ^ 25 bits. The algorithm was tested against the DieHarder test suite. None of the tests failed. Few tests produced weak results that were corrected when the number of samples increased. Comment: 4 page...|$|R
40|$|This {{communication}} {{proposes a}} simplified model of pseudorandom bit generator, {{based on two}} Chirikov standard maps filtered with shrinking rule. The study also demonstrates that the generated <b>keystreams</b> have excellent properties of randomness and resistance to statistical attacks, which is proven by using the NIST, ENT, and DIEHARD testing suites...|$|R
25|$|The <b>keystream</b> {{generated}} by the RC4 is biased in varying degrees towards certain sequences making it vulnerable to distinguishing attacks. The best such attack is due to Itsik Mantin and Adi Shamir who showed that the second output byte of the cipher was biased toward zero with probability 1/128 (instead of 1/256). This {{is due to the}} fact that if the third byte of the original state is zero, and the second byte is not equal to 2, then the second output byte is always zero. Such bias can be detected by observing only 256 bytes.|$|E
25|$|In 2001, {{a new and}} {{surprising}} discovery was made by Fluhrer, Mantin and Shamir: over all possible RC4 keys, the statistics {{for the first few}} bytes of output <b>keystream</b> are strongly non-random, leaking information about the key. If the nonce and long-term key are simply concatenated to generate the RC4 key, this long-term key can be discovered by analysing a large number of messages encrypted with this key. This and related effects were then used to break the WEP ("wired equivalent privacy") encryption used with 802.11 wireless networks. This caused a scramble for a standards-based replacement for WEP in the 802.11 market, and led to the IEEE 802.11i effort and WPA.|$|E
25|$|A GSM {{transmission}} is organised as sequences of bursts. In a typical channel {{and in one}} direction, one burst is sent every 4.615 milliseconds and contains 114 bits available for information. A5/1 is used to produce for each burst a 114 bit sequence of <b>keystream</b> which is XORed with the 114 bits prior to modulation. A5/1 is initialised using a 64-bit key together with a publicly known 22-bit frame number. Older fielded GSM implementations using Comp128v1 for key generation, had 10 of the key bits fixed at zero, resulting in an effective key length of 54 bits. This weakness was rectified {{with the introduction of}} Comp128v2 which yields proper 64 bits keys. When operating in GPRS / EDGE mode, higher bandwidth radio modulation allows for larger 348 bits frames, and A5/3 is then used in a stream cipher mode to maintain confidentiality.|$|E
40|$|Abstract. We give three {{weaknesses}} of a recently proposed streamcipher MICKEY. A small class of weak keys is found and we show timememory-data tradeoff is applicable. We {{also show that}} the state update function reduces entropy of the internal state as it is iterated, resulting in <b>keystreams</b> that start out differently but become merged together towards the end...|$|R
50|$|Mask Generation Functions, as generalizations of hash {{functions}}, {{are useful}} in all the same cases hash functions are useful. However use of a MGF is desirable in cases where a fixed-size hash would be inadequate. Examples include generating padding, producing one time pads or <b>keystreams</b> in symmetric key encryption, and yielding outputs for pseudorandom number generators.|$|R
40|$|The WG {{family of}} ciphers {{provides}} <b>keystreams</b> with mathematically proven randomness properties such as ideal two-level autocorrelation, balance, long period, ideal tuple distribution, and high and exact linear complexity. In this paper, we extend the mathematical analysis of WG family of ciphers to multioutput WG (MOWG) ciphers and demonstrate that MOWG ciphers provide a large design space of hardware architectures and implementation options with tradeoffs in security, area, and performance, including options that are competitive with the eSTREAM Phase- 3 Profile- 2 finalists. ...|$|R
25|$|In 1995, Andrew Roos {{experimentally}} {{observed that}} the first byte of the <b>keystream</b> is correlated to the first three bytes of the key and the first few bytes of the permutation after the KSA are correlated to some linear combination of the key bytes. These biases remained unexplained until 2007, when Goutam Paul, Siddheshwar Rathi and Subhamoy Maitra proved the keystream-key correlation and in another work Goutam Paul and Subhamoy Maitra proved the permutation-key correlations. The latter work also used the permutation-key correlations to design the first algorithm for complete key reconstruction from the final permutation after the KSA, without any assumption on the key or initialization vector. This algorithm has a constant probability of success in a time which is the square root of the exhaustive key search complexity. Subsequently, many other works have been performed on key reconstruction from RC4 internal states. Subhamoy Maitra and Goutam Paul also showed that the Roos type biases still persist even when one considers nested permutation indices, like S or S. These types of biases are used {{in some of the}} later key reconstruction methods for increasing the success probability.|$|E
2500|$|Protocols {{can defend}} against this attack by {{discarding}} the initial {{portion of the}} <b>keystream.</b> [...] Such a modified algorithm is traditionally called [...] "RC4-drop", where n {{is the number of}} initial <b>keystream</b> bytes that are dropped. [...] The SCAN default is n = 768 bytes, but a conservative value would be n = 3072 bytes.|$|E
2500|$|RC4 {{generates a}} {{pseudorandom}} stream of bits (a <b>keystream).</b> As with any stream cipher, {{these can be}} used for encryption by combining it with the plaintext using bit-wise exclusive-or; decryption is performed the same way (since exclusive-or with given data is an involution). (This is similar to the Vernam cipher except that generated pseudorandom bits, rather than a prepared stream, are used.) To generate the <b>keystream,</b> the cipher makes use of a secret internal state which consists of two parts: ...|$|E
40|$|Abstract. Pseudorandom generators, {{which produce}} <b>keystreams</b> for stream ciphers by the exclusive-or sum of output bits from {{alternately}} clocked linear feedback shift registers, {{are vulnerable to}} cryptanalysis. In order to increase their resistance to attacks, we introduce a nonlinear scrambler at the output of these generators. The role of the scrambler plays the nonlinear feedback shift register. In addition, we propose the Modified Alternating Step Generator (MASG 1 S) built with the nonlinear scrambler and regularly or irregularly clocked linear feedback shift registers with nonlinear filtering functions...|$|R
40|$|In {{this paper}} we {{introduce}} a new chaotic stream cipher Mmohocc which utilizes the fundamental chaos characteristics. The designs of the major components of the cipher are given. Its cryptographic properties of period, auto- and cross-correlations, and the mixture of Markov processes and spatiotemporal effects are investigated. The cipher is resistant to the related-key-IV attacks, Time/Memory/Data tradeoff attacks, algebraic attacks, and chosen-text attacks. The <b>keystreams</b> successfully passed two batteries of statistical tests and the encryption speed is comparable with RC 4. Comment: 14 pages, 4 figures, 4 table...|$|R
40|$|In this paper, we {{describe}} modified Exclusive- 128 NLFSR stream cipher which generates 128 bit <b>keystreams</b> using only NLFSR element as its main function and XOR operation. It consists {{of different sizes}} of NLFSRs both in Fibonacci and Galois configurations which offer better trade off between the algorithm security and hardware capability. Further, using this modified version of Exclusive- 128 NLFSR stream cipher, analysis has been done for pseudorandom test to prove that this stream cipher is highly non-linear and truly randomness when all the initial key inputs are either zero and/or one...|$|R
2500|$|For as many {{iterations}} as are needed, the PRGA modifies {{the state}} and outputs a byte of the <b>keystream.</b> [...] In each iteration, the PRGA increments , looks up the th element of , , and adds that to , exchanges the values of [...] and , and then uses the sum [...] as an index to fetch a third element of , (the <b>keystream</b> value [...] below) which is bitwise exclusive OR'ed (XOR'ed) with the next byte of the message to produce the next byte of either ciphertext or plaintext. [...] Each element of S is swapped with another element at least once every 256 iterations.|$|E
50|$|To encrypt we add the <b>keystream</b> {{numbers to}} the plaintext. And to decrypt we {{subtract}} the same <b>keystream</b> {{numbers from the}} ciphertext to get the plaintext.|$|E
50|$|An autokey cipher (also {{known as}} the {{autoclave}} cipher) is a cipher which incorporates the message (the plaintext) into the key. There are two forms of autokey cipher: key autokey and text autokey ciphers. A key-autokey cipher uses previous members of the <b>keystream</b> to determine the next element in the <b>keystream.</b> A text-autokey uses the previous message text to determine the next element in the <b>keystream.</b>|$|E
40|$|In this paper, new {{attacks against}} TKIP based IEEE 802. 11 {{networks}} are described. Using the known Beck-Tews attack, we define schemas to con-tinuously generate new <b>keystreams,</b> which allow more and longer packets to be injected. Also {{an attack against}} the Michael message integrity code is presented, that allows an attacker to reset the internal MIC state and building on top of that, concatenating a known message with an unknown message keeping the unknown MIC valid for the new entire packet. Based on this, a schema to decrypt all traffic towards the client is described. ...|$|R
40|$|Abstract. The DECT Standard Cipher (DSC) is a {{proprietary}} 64 -bit stream cipher based on irregularly clocked LFSRs and a non-linear output combiner. The cipher {{is meant to}} provide confidentiality for cordless telephony. This paper illustrates how the DSC was reverse-engineered from a hardware implementation using custom firmware and information {{on the structure of}} the cipher gathered from a patent. Beyond disclosing the DSC, the paper proposes a practical attack against DSC that recovers the secret key from 2 15 <b>keystreams</b> on a standard PC with a success rate of 50 % within hours; somewhat faster when a CUDA graphics adapter is available...|$|R
40|$|Abstract This paper {{presents}} an efficient stream cipher using an internal state with variable structure and evolution. Arbitrarily large internal states {{can be used}} in order to defeat brute-force guessing attacks without compromising the performance of cipher, and possibly improving it. Attacking is made even more complicated by dynamically chosing different topologies and evolutions for the cipher's internal state. The cipher controls the evolution of its internal state by using both an external keyed pseudo-random generator (EKPRG), either cryptographically strong or weak, and plaintext feedback. The plaintext feedback reduces the probability of producing cyclic <b>keystreams</b> without compromising the security of the cipher...|$|R
50|$|ACHTERBAHN-128 is {{downward}} compatible and {{can produce}} the same <b>keystream</b> as ACHTERBAHN-80 if so desired.The <b>keystream</b> generator of ACHTERBAHN-128/80 {{is based on the}} design principle of the nonlinear combination generator,however it deploys primitive nonlinear feedback shift registers (NLFSR) instead of linear ones (LFSR).|$|E
50|$|The authors {{recommend}} {{to use a}} version of QUAD with an 80-bit key, 80-bit IV and an internal state of n = 160 bits. It outputs 160 <b>keystream</b> bits (m = 320) at each iteration until 240 bits of <b>keystream</b> have been produced.|$|E
5000|$|The {{algorithm}} {{generates a}} stream of values which are combined with the message to encrypt and decrypt it. Each value of the <b>keystream</b> {{is to be used}} for one value of the message, thus the <b>keystream</b> will need to be the same length as the message.|$|E
40|$|This paper {{shows that}} Py and Pypy are {{practically}} insecure. If one key is used with about 2 16 IVs with special differences, with high probability two identical <b>keystreams</b> will appear. This can be exploited {{in a key}} recovery attack. For example, for a 16 -bye key and a 16 -byte IV, 2 23 chosen IVs can reduce the effective key size to 3 bytes. For a 32 -bye key and a 32 -byte IV, the effective key size is reduced to 3 bytes with 2 24 chosen IVs. Py 6, a variant of Py, is more vulnerable to these attacks...|$|R
5000|$|We do {{not need}} to stop here. Observe in the table above that [...] also agrees with the {{generator}} output 6 times out of 8, again a correlation of 75% correlation between [...] and the generator output. We may begin a brute force attack against LFSR-2 independently of the keys of LFSR-1 and LFSR-3, leaving only LFSR-1 unbroken. Thus, we are able to break the Geffe generator with as much effort as required to brute force 3 entirely independent LFSRs, meaning that the Geffe generator is a very weak generator and should never be used to generate stream cipher <b>keystreams.</b>|$|R
40|$|Abstract. In this paper, {{we first}} present some new results about the Welch-Gong (WG) trans-formations, {{followed}} by {{a description of the}} WG stream cipher family which is built upon an LFSR and a WG transformation over an extension field. The randomness properties of <b>keystreams</b> produced by a decimated WG cipher are derived based on the new results. We also discuss the selection criteria for choosing the optimal parameters for a WG cipher in order to achieve the maximum level of security. Finally, we present the optimal parameters for the WG transformations over F 2 m, 7 ≤ m ≤ 16 based on the proposed criteria...|$|R
