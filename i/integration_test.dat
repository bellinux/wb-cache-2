343|2386|Public
5|$|In September 2006, NATO {{selected}} {{an international}} consortium led by Science Applications International Corporation (SAIC) {{to build an}} <b>Integration</b> <b>Test</b> Bed for the Alliance's future Active Layered Theatre Missile Defence (ALTBMD) capability. After two months of negotiations, ALTBMD Programme Manager, General (Ret) Billard, and SAIC contracting Officer, Mr. Robert Larrick, signed the contract {{on the first day}} of NATO's Riga Summit. This decision was based on an unpublished report agreed upon earlier by NATO ministers following a study into the feasibility of theatre missile defences.|$|E
25|$|To {{integrate}} immigrants {{into the}} Dutch society, each person {{who wants to}} immigrate into the Netherlands must pass an <b>integration</b> <b>test,</b> except for those who come from other European Union-member states, United States, Canada, Japan, Australia and New Zealand (such immigrants must still take a year of integration classes after entry). It tests knowledge of the Dutch language, political system and social conventions. The test must be taken before entering the Netherlands, preferably in a Dutch embassy in the person's country of origin. Immigrants coming from an EU state, the United States, Canada, Japan, Australia and New Zealand cannot take this <b>integration</b> <b>test,</b> even if they want to.|$|E
25|$|In {{preparation}} for the service's launch, The Weather Channel reached agreements with various information service providers to offer content for Local Now to supplement its in-house weather data and video content. Initial partners included the Associated Press, which provides headlines and video for its news segments; Sportradar, a sports information agency which provides sports scores and schedules for its local news and sports segment; INRIX, which provides real-time incident data sourced from intelligent transportation systems; and TrafficLand, a traffic video integration service that provides footage from cameras maintained by state departments of transportation. The Weather Channel collaborated with Arris Global Services to provide technological management services for Local Now, handling design and <b>integration,</b> <b>test</b> validation, deployment, customized HTML software development and managed services. Local Now utilizes integration of the company's transcoders and Anevia's ViaMotion+ packaging software, {{and was the first}} service to implement CPE virtualization technology from ActiveVideo (a cloud video provider operated as joint venture of ARRIS and Charter Communications).|$|E
40|$|<b>Integration</b> <b>testing</b> plays {{a crucial}} role in component-based {{software}} development. In complementary to the existing works on the selection of test cases and measurement of <b>test</b> adequacy in <b>integration</b> <b>testing,</b> this paper focuses on questions about how to observe the behaviours of a large and complicated system during dynamic testing. We first analyse the structure of white-box <b>integration</b> <b>testing</b> and propose a family of <b>integration</b> <b>testing</b> methods. We then discuss and formalise the requirements of proper uses of test drivers and component stubs in incremental integration. Finally, we propose a set of axioms for <b>integration</b> <b>testing</b> of concurrent systems. 1...|$|R
5000|$|Unit <b>testing</b> and <b>integration</b> <b>testing.</b> One {{study found}} that the average defect {{detection}} rates of unit <b>testing</b> and <b>integration</b> <b>testing</b> are 30% and 35% respectively.|$|R
50|$|An {{elaborate}} {{hierarchy of}} unit tests does not equal <b>integration</b> <b>testing.</b> <b>Integration</b> with peripheral units {{should be included}} in <b>integration</b> <b>tests,</b> but not in unit <b>tests.</b> <b>Integration</b> <b>testing</b> typically still relies heavily on humans testing manually; high-level or global-scope testing can be difficult to automate, such that manual testing often appears faster and cheaper.|$|R
2500|$|The SLBM Phased Array Radar System (SPARS) was the USAF program {{initiated}} In November 1972 by the Joint Chiefs of Staff (JCS) {{while the}} Army's PAR was under construction. [...] A 1974 SPARS proposal for [...] "two new SLBM Phased Array Warning Radars" [...] was submitted {{to replace the}} east/west coast 474N detection radars, which had [...] "limitations against Soviet SLBMs, particularly the longer range SS-N-8" [...] on 1973 [...] "Delta" [...] class submarines. Development began in August 1973, SPARS was renamed PAVE PAWS on 18 February 1975, and system production was requested by a 13 June 1975 Request for Proposals (RFP). Rome Air Development Center (RADC) [...] "was responsible for the design, fabrication installation, <b>integration</b> <b>test,</b> and evaluation of" [...] PAVE PAWS through 1980.|$|E
5000|$|<b>Integration</b> <b>test</b> report, {{this test}} report {{contains}} the test-results which are formed after an <b>integration</b> <b>test</b> of the application. Based on this test-report the project-team can decide which action to undertake further.|$|E
5000|$|TestSwarm, a {{distributed}} continuous <b>integration</b> <b>test</b> suite for JavaScript.|$|E
50|$|An {{alternative}} {{definition of}} a test harness is software constructed to facilitate <b>integration</b> <b>testing.</b> Where test stubs are typically components of the application under development and are replaced by working components as the application is developed (top-down <b>integration</b> <b>testing),</b> test harnesses are external to the application being tested and simulate services or functionality not available in a test environment.|$|R
40|$|<b>Integration</b> <b>testing</b> is an {{important}} part of the testing process, but few <b>integration</b> <b>testing</b> techniques have been systematically studied or defined. This paper presents an <b>integration</b> <b>testing</b> technique based on couplings between software components. The coupling-based testing technique is described, and 12 coverage criteria are defined. The coupling-based technique is compared with the category-partition method. Results show that the coupling-based technique detected more faults with fewer test cases than category-partition on a subject program. This modest result indicates that the coupling-based testing approach can benefit practitioners who are performing <b>integration</b> <b>testing</b> on software. While it is our intention to develop algorithms to fully automate this technique, it is relatively easy to apply it by hand. Keywords: Category-partition, <b>Integration</b> <b>testing,</b> Software module coupling, Software testing. COMPASS Areas: Software Reliability, Measurement & Metrics. 1 Introdu [...] ...|$|R
40|$|This paper {{discusses}} {{the benefits of}} conducting multi-system <b>integration</b> <b>testing</b> of space flight elements in lieu of merely shipping and shooting to the launch site and launching. "Ship and shoot" is a philosophy that proposes to transport flight elements directly from the factory to the launch site and begin the mission without further <b>testing.</b> <b>Integration</b> <b>testing,</b> relevant to validation testing in this context, is a risk mitigation effort that builds upon the individual element and system levels of qualification and acceptance tests, greatly improving the confidence of operations in space. The International Space Station Program (ISSP) experience {{is the focus of}} most discussions from a historical perspective, while proposed <b>integration</b> <b>testing</b> of the Constellation Program is also discussed. The latter will include Multi-Element <b>Integration</b> <b>Testing</b> (MElT) and Flight Element <b>Integration</b> <b>Testing</b> (FElT) ...|$|R
5000|$|<b>Integration</b> <b>test</b> {{code for}} testing HelloActable wired {{together}} with Greeter {{may look like}} the following: ...|$|E
5000|$|... 5. June 1992 - August 1993, Chief, <b>Integration,</b> <b>Test</b> and Operations Division, Los Angeles AFB, Calif.|$|E
5000|$|Jerry L. Ross (born 1948), U.S. Air Force (7 flights) - Currently NASA Chief of JSC's Vehicle <b>Integration</b> <b>Test</b> Office ...|$|E
40|$|<b>Integration</b> <b>testing</b> is an {{important}} part of the testing process, but few <b>integration</b> <b>testing</b> techniques have been systematically studied or defined. The goal of this research is to develop practical, effective, formalizable, automatable techniques for testing of connections between components during software integration. This paper presents an <b>integration</b> <b>testing</b> technique that is based on couplings between software components. This technique can be used to support <b>integration</b> <b>testing</b> of software components, and satisfies part of the USA's Federal Aviation Authority's (FAA) requirements for structural coverage analysis of software. The coupling-based testing technique is described, and the coverage criteria for three types of couplings are defined. Techniques and algorithms for developing coverage analyzers to measure the extent to which a test set satisfies the criteria are presented, and results from a comparative case study are presented. Keywords: <b>Integration</b> <b>testing,</b> Sof [...] ...|$|R
50|$|In the big-bang approach, {{most of the}} {{developed}} modules are coupled {{together to form a}} complete software system or major part of the system and then used for <b>integration</b> <b>testing.</b> This method is very effective for saving time in the <b>integration</b> <b>testing</b> process. However, if the test cases and their results are not recorded properly, the entire integration process will be more complicated and may prevent the testing team from achieving the goal of <b>integration</b> <b>testing.</b>|$|R
50|$|Support for {{performing}} <b>integration</b> <b>testing</b> via JUnit.|$|R
50|$|Ross {{served as}} Chief of the Vehicle <b>Integration</b> <b>Test</b> Office at the Johnson Space Center in Houston, Texas until {{he retired in}} January 2012.|$|E
50|$|The term SUT means also a {{stage of}} {{maturity}} of the software, because a system test is the successor of <b>integration</b> <b>test</b> in the testing cycle.|$|E
50|$|While {{on active}} duty, Wheelock {{received}} a Master of Science degree in Aerospace Engineering from Georgia Tech in 1992. In August 1996 Wheelock {{was assigned to}} the Johnson Space Center as a Space Shuttle <b>integration</b> <b>test</b> engineer. His technical duties involved engineering liaison for launch and landing operations of the Space Shuttle. He was selected as the vehicle <b>integration</b> <b>test</b> team lead for the joint Space Shuttle and Russian Space Station Mir mission STS-86, and lead engineer for International Space Station hardware fit checks.|$|E
50|$|Dynamic {{analysis}} {{is in contrast}} to static <b>testing.</b> Unit <b>tests,</b> <b>integration</b> <b>tests,</b> system tests and acceptance tests use dynamic testing.|$|R
50|$|From 1997 to 2007, KSC {{planned and}} {{performed}} on the ground <b>integration</b> <b>tests</b> and checkouts of station modules: three Multi-Element <b>Integration</b> <b>Testing</b> (MEIT) sessions and the Integration Systems Test (IST). Numerous issues were found and corrected {{that would have been}} difficult to nearly impossible to do on-orbit.|$|R
40|$|Abstract—Testing is an {{activity}} that is required both {{in the development and}} maintenance of the software development life cycle in which <b>Integration</b> <b>Testing</b> is an important activity. <b>Integration</b> <b>testing</b> is based on the specification and functionality of the software and thus could be called black-box testing technique. The purpose of <b>integration</b> <b>testing</b> is <b>testing</b> <b>integration</b> between software components. In function or system testing, the concern is with overall behavior and whether the software meets its functional specifications or performance characteristics or how well the software and hardware work together. This explains the importance and necessity of IT for which the emphasis is on interactions between modules and their interfaces. Software errors should be discovered early during IT to reduce the costs of correction. This paper introduces a new type of integration error, presenting an overview of <b>Integration</b> <b>Testing</b> techniques with comparison of each technique and also identifying which technique detects what type of error...|$|R
5000|$|Google {{introduced}} its own classification of test types. Instead of categorizations like unit, functional or <b>integration</b> <b>test</b> {{they have only}} three categories: small, medium, and large scale tests: ...|$|E
50|$|<b>Integration</b> <b>Test</b> Plans are {{developed}} during the Architectural Design Phase. These tests verify that units created and tested independently can coexist and communicate among themselves. Test results are shared with customer's team.|$|E
50|$|Creamer was {{assigned}} to NASA at the Johnson Space Center (JSC) in July 1995 as a Space Shuttle vehicle <b>integration</b> <b>test</b> engineer. His duties primarily involved engineering liaison for launch and landing operations of the Space Shuttle. He was {{actively involved in the}} integrated tests of the systems for each Orbiter for its preparations for its next flight, and directly supported eight Shuttle missions as a vehicle <b>integration</b> <b>test</b> team lead. Additionally, he focused his efforts in coordinating the information technologies for the Astronaut Office to aid personnel in their electronic communications both on JSC as well as through their travels to other centers.|$|E
5000|$|Regarding {{the launch}} of modules of the International Space Station (ISS), there had been {{philosophical}} differences for years between designers and payload processors whether to ship-and-shoot or perform <b>integration</b> <b>testing</b> prior to launch. The former involved building a station module and launching it without ever physically testing it with other modules. The <b>integration</b> <b>testing</b> was not originally in the ISS plan, but in 1995 Johnson Space Center designers began to consider it and embedding KSC personnel at module factories. Multi-Element <b>Integration</b> <b>Testing</b> (MEIT) of ISS modules at KSC was officially in the books in 1997.|$|R
50|$|System-wide <b>integration</b> <b>testing</b> was encouraged, initially, as a daily {{end-of-day}} activity, {{for early}} detection of incompatible interfaces, to reconnect before the separate sections diverged widely from coherent functionality. However, system-wide <b>integration</b> <b>testing</b> has been reduced, to weekly, or less often, depending on {{the stability of the}} overall interfaces in the system.|$|R
5000|$|Testing: support {{classes for}} writing unit <b>tests</b> and <b>integration</b> <b>tests</b> ...|$|R
5000|$|To {{integrate}} immigrants {{into the}} Dutch society, each person {{who wants to}} immigrate into the Netherlands must pass an <b>integration</b> <b>test,</b> except for those who come from other European Union-member states, United States, Canada, Japan, Australia and New Zealand (such immigrants must still take a year of integration classes after entry). It tests knowledge of the Dutch language, political system and social conventions. The test must be taken before entering the Netherlands, preferably in a Dutch embassy in the person's country of origin. Immigrants coming from an EU state, the United States, Canada, Japan, Australia and New Zealand cannot take this <b>integration</b> <b>test,</b> even if they want to.|$|E
50|$|Capacities of UNI in {{satellite}} technology through the design, analysis, assembly, <b>integration,</b> <b>test,</b> launch {{and operation of}} a technology nanosatellite Cubesat. The satellite Chasqui I plans included taking pictures of the earth with transmission to a ground station.|$|E
5000|$|The CDP4 {{implements}} both Annex A (the formal UML model) and Annex C (the Webservices API {{and exchange}} file format). The compliance of the CDP4 Webservices with Annex C are verified {{by means of}} an open-source test framework available on GitHub called 10-25 <b>Integration</b> <b>test</b> suite ...|$|E
5000|$|System <b>integration</b> <b>testing</b> of a {{database}} layer might proceed as follows: ...|$|R
40|$|In 1968 {{the idea}} of Component-Based Software Engineering (CBSE) was {{introduced}} at the NATO conference. The emergence of CBSE facilitates the development of today’s complex software applications by using pre-built software units called components. Consequently, CBSE has gained wide attention amongst software engineers and researchers. This attention arises from the many benefits that {{can be obtained by}} using components to develop today’s complex software applications. However, to develop software applications using components; components need to be integrated and <b>tested.</b> Thus, <b>integration</b> <b>testing</b> becomes an essential activity in CBSE. Unfortunately, up to now <b>integration</b> <b>testing</b> of CBS {{is still one of the}} open issues in software engineering. In the literature, different solutions for <b>integration</b> <b>testing</b> of CBS have been proposed. The main goal for conducting this study is to review existing work into <b>integration</b> <b>testing</b> for CBS in order to identify future research directions in this area. This paper aims at presenting a systematic review protocol and the steps of applying the protocol. The expected outcome after implementing this protocol will be the identification of issues and challenges in the area of <b>integration</b> <b>testing</b> for CBS...|$|R
5000|$|Verification and Validation (V&V): Embedded {{throughout}} the software development process (e.g. user requirements specification, functional specification, design specification, code review, unit <b>tests,</b> <b>integration</b> <b>tests,</b> system tests).|$|R
