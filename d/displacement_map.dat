154|510|Public
50|$|In the {{construction}} of digital 3D clothing shirring {{can be accomplished by}} applying a <b>Displacement</b> <b>map</b> or Normal map when rendering the digital clothing models in a render engine.|$|E
5000|$|... bump lemur_bump.tga # {{bump map}} (which by default uses {{luminance}} channel of the image) disp lemur_disp.tga # <b>displacement</b> <b>map</b> decal lemur_stencil.tga # stencil decal texture (defaults to 'matte' channel of the image) ...|$|E
50|$|Which {{includes}} {{giving the}} model the properties that the render engine uses {{to render the}} model, in an unbiased render engine like blender cycles you can give the model materials to tell the engine how to treat light when it hits the surface, also textures are used to give the material color like a color or albedo map, or give the surface features like bumb or normal maps, it can be also used to deform the model it self like <b>displacement</b> <b>map.</b>|$|E
40|$|We {{present an}} {{algorithm}} for ray tracing <b>displacement</b> <b>maps</b> that requires no additional storage over the base model. <b>Displacement</b> <b>maps</b> are rarely used in ray tracing {{due to the}} cost associated with storing and intersecting the displaced geometry. This is unfortunate because <b>displacement</b> <b>maps</b> allow the addition of large amounts of geometric complexity into models. Our method works for models composed of triangles with normals at the vertices. In addition, we discuss a special purpose displacement that creates a smooth surface that interpolates the triangle vertices and normals of a mesh. The combination allows relatively coarse models to be <b>displacement</b> <b>mapped</b> and ray traced effectively. 1 Introduction Visually rich images are often generated from simpler models by applying <b>displacement</b> <b>maps</b> to increase surface detail (Figure 1). <b>Displacement</b> <b>maps</b> are a special type of offset surface, and are usually assumed to perturb surface positions a small distance using some function. I [...] ...|$|R
40|$|Abstract. Details can {{be added}} to spline {{surfaces}} by applying <b>displacement</b> <b>maps.</b> However, the computational intensity of <b>displacement</b> <b>mapping</b> prevents its use for interactive design. In this paper we explore a form of simulated displacement {{that can be used for}} interactive design by providing a preview of true displacements at low computational cost. <b>Displacement</b> <b>mapping</b> is a standard and useful tool for realistic rendering [3, 8], and it has been suggested for application to surface approximation [6]. Because of its computational cost, however, it has not yet been fully explored as a design tool. In [4] a restricted form of <b>displacement</b> <b>mapping</b> was investigate...|$|R
5000|$|... {{supports}} per-pixel lighting techniques: normal <b>mapping,</b> virtual <b>displacement</b> <b>mapping,</b> environment mapping or parametrized Phong lighting ...|$|R
5000|$|Parallax {{occlusion}} mapping (POM) is an {{enhancement of}} the parallax mapping technique. Parallax occlusion mapping {{is used to}} procedurally create 3D definition in textured surfaces, using a <b>displacement</b> <b>map</b> (similar to a topography map) instead of through the generation of new geometry. [...] This allows developers of 3D rendering applications to add 3D complexity in textures, which correctly change relative to perspective and with self occlusion in real time (self-shadowing is additionally possible), without sacrificing the processor cycles required to create the same effect with geometry calculations.|$|E
50|$|The TeraScale tessellator units {{allows a}} {{developer}} {{to take a}} simple polygon mesh and subdivide it based on a curved surface evaluation function, with different tessellation forms as BÃ©zier surfaces with N-patches, B-splines and NURBS, and even some subdivision surface techniques, which usually comes with a <b>displacement</b> <b>map</b> texture. Essentially, this allows a simple, low-polygon model to be increased dramatically in polygon density in real-time with minimized performance loss. Scott Wasson of Tech Report noted during an AMD demo of the technology that the resulting model was so dense with millions of polygons that {{it appeared to be}} solid.|$|E
50|$|ZBrush is {{used for}} {{creating}} high-resolution models (able to reach 40+ million polygons) for use in movies, games, and animations, by companies ranging from ILM to Electronic Arts. ZBrush uses dynamic levels of resolution to allow sculptors to make global or local changes to their models. ZBrush is most known {{for being able to}} sculpt medium to high frequency details that were traditionally painted in bump maps. The resulting mesh details can then be exported as normal maps to be used on a low poly version of that same model. They can also be exported as a <b>displacement</b> <b>map,</b> although in that case the lower poly version generally requires more resolution. Or, once completed, the 3D model can be projected to the background, becoming a 2.5D image (upon which further effects can be applied). Work can then begin on another 3D model which can be used in the same scene. This feature lets users work with complicated scenes without heavy processor overhead.|$|E
40|$|This thesis {{describes}} {{technique for}} adding roughness to surface of models called <b>displacement</b> <b>mapping</b> with virtual textures. Efficiency and visual quality of <b>displacement</b> <b>mapping</b> will {{be compared to}} normal mapping. Thesis also briefly describes some of lightning models and former techniques for adding details to smooth surface...|$|R
40|$|Abstract. While <b>displacement</b> <b>maps</b> {{can provide}} a rich set of visual detail on {{otherwise}} simple surfaces {{they have always been}} very expensive to render. Rendering has only been done using ray tracing or by introducing a great number of micro-polygons. We present a new image-based approach by showing that rendering <b>displacement</b> <b>maps</b> is sufficiently similar to image warping and introduce a new warping algorithm which is particularly well suited for this task. It allows efficient modelling of complicated shapes with few <b>displacement</b> <b>mapped</b> polygons and renders them at interactive rates. ...|$|R
50|$|This {{difference}} between <b>displacement</b> <b>mapping</b> in micropolygon renderers vs. <b>displacement</b> <b>mapping</b> in a non-tessellating (macro)polygon renderers can {{often lead to}} confusion in conversations between people whose exposure to each technology or implementation is limited. Even more so, as in recent years, many non-micropolygon renderers have added {{the ability to do}} <b>displacement</b> <b>mapping</b> of a quality similar to that which a micropolygon renderer is able to deliver naturally. To distinguish between the crude pre-tessellation-based displacement these renderers did before, the term sub-pixel displacement was introduced to describe this feature.|$|R
40|$|This paper {{presents}} a layered animation framework which uses displacement maps for efficient representation and animation of highly detailed surfaces. The model {{consists of three}} layers: a skeleton; low-resolution control model; and a <b>displacement</b> <b>map</b> image. The novel aspects of this approach are an automatic closed-form solution for <b>displacement</b> <b>map</b> generation and animation of the layered <b>displacement</b> <b>map</b> model. This approach provides an efficient representation of complex geometry which allows realistic deformable animation with multiple levels-of-detail. The representation enables compression, efficient transmission and level-of-detail control for animated models. ...|$|E
40|$|This paper {{proposes a}} novel {{technique}} for converting a given animated mesh {{into a series}} of displaced subdivision surfaces. Instead of independently converting each frame in the animated mesh, our technique produces displaced subdivision surfaces that share the same topology of the control mesh and a single <b>displacement</b> <b>map.</b> We first propose a conversion framework that enables sharing the same control mesh topology and <b>displacement</b> <b>map</b> among frames, and then present the details of the components in the framework. Each component is specifically designed to minimize the conversion errors that can be caused by enforcing a single <b>displacement</b> <b>map.</b> The resulting displaced subdivision surfaces have a compact representation, while reproducing the details of the original animated mesh. The representation can also be used for efficient rendering by modern graphics hardware that supports accelerated rendering of subdivision surfaces...|$|E
30|$|The {{advantage}} of this <b>displacement</b> <b>map</b> technique is {{in its ability to}} quickly generate 3 D model representations of surfaces that can be more easily analyzed. In contrast to previous studies involving stereoimaging (Cuijpers et al., 2011), only a single SEM micrograph is required for the reconstruction of the 3 D model. An additional {{advantage of}} using the <b>displacement</b> <b>map</b> technique is that complex mathematical computations are not required for the visualization process (Marschall et al., 2000; Samak et al., 2007). As a result, topographical surveys can be performed quickly, bearing in mind that the depth dimension of the data is an approximation.|$|E
40|$|Details can {{be added}} to spline {{surfaces}} by applying <b>displacement</b> <b>maps.</b> However, the computational intensity of <b>displacement</b> <b>mapping</b> prevents its use for interactive design. In this paper we explore a form of simulated displacement {{that can be used for}} interactive design by providing a preview of true displacements at low computational cost. Introduction <b>Displacement</b> <b>mapping</b> is a standard and useful tool for realistic rendering [3, 8], and it has been suggested for application to surface approximation [6]. Because of its computational cost, however, it has not yet been fully explored as a design tool. In [4] a restricted form of <b>displacement</b> <b>mapping</b> was investigated for use in interactive design. Composite surfaces were constructed by layering a sequence of detail surfaces onto a base surface. Each detail was formulated as a vector <b>displacement</b> field and <b>mapped</b> onto a region of the base. The process was restricted in that, in order to achieve continuity between detail and base, it was [...] ...|$|R
40|$|In this chapter, {{we present}} {{distance}} mapping, a technique for adding small-scale <b>displacement</b> <b>mapping</b> to objects in a pixel shader. We treat <b>displacement</b> <b>mapping</b> as a ray-tracing problem, beginning with texture coordinates {{on the base}} surface and calculating texture coordinates where the viewing ray intersects the displaced surface. For this purpose, we precompute a three-dimensional distance map, which gives {{a measure of the}} distance between points in space and the displaced surface. This distance map gives us all the information necessary to quickly intersect a ray with the surface. Our algorithm significantly increases the perceived geometric complexity of a scene while maintaining real-time performance. Cook (1984) introduced <b>displacement</b> <b>mapping</b> as a method for adding small-scale detail to surfaces. Unlike bump mapping, which affects only the shading of surfaces, <b>displacement</b> <b>mapping</b> adjusts the positions of surface elements. This leads to effects not possible with bump mapping, such as surface features that occlude each other an...|$|R
5000|$|<b>Displacement</b> <b>mapping</b> and subdivision: Based on {{procedural}} or image textures, object surfaces can be transformed.|$|R
40|$|Based on a {{standard}} software ray-tracer with soft shadowing and glossy reflection capabilities, I present a per-pixel displacement mapping algorithm. This algorithm modifies the intersection routine already used for shadows and reflections {{and so they are}} preserved. The algorithm relies on a distance map, which along with a normal map for lighting information, can be generated for each point in the <b>displacement</b> <b>map</b> input. The distance map allows efficient calculation of dynamic sampling of the <b>displacement</b> <b>map</b> by an intersecting ray. As perpixel displacement mapping can be implemented in a modern GPU pixel shader, this algorithm has many future possibilities...|$|E
40|$|In this paper, {{we present}} a novel view-dependent {{rendering}} approach for large polygonal models. In an offline stage, the input model is simplified to reach a light coarse representation. Each simplified face is then assigned a <b>displacement</b> <b>map,</b> which resembles the geometry of the corresponding patch on the input model. At runtime, the coarse representation is transmitted to the graphics hardware at each frame. Within the graphics hardware, the GPU subdivides each face {{with respect to the}} viewparameters, and adds fine details using the assigned <b>displacement</b> <b>map.</b> Initial results show that our implementation achieves quality images at high frame rates...|$|E
30|$|The 3 D {{visualization}} of SEM images was {{realized in the}} 3 D animation software package Autodesk MayaÂ® ([URL] Mayaâs 3 D modeling and shading/texturing capabilities were used for construction of <b>displacement</b> <b>map</b> from the SEM images and conversion into 3 D polygonal geometry.|$|E
50|$|For years, <b>displacement</b> <b>mapping</b> was a {{peculiarity}} of high-end rendering {{systems like}} PhotoRealistic RenderMan, while realtime APIs, like OpenGL and DirectX, were only starting {{to use this}} feature. One {{of the reasons for}} this is that the original implementation of <b>displacement</b> <b>mapping</b> required an adaptive tessellation of the surface in order to obtain enough micropolygons whose size matched the size of a pixel on the screen.|$|R
5000|$|... 3D meshes (.obj) can be {{imported}} {{into the program}} for further detailing, generating normal and <b>displacement</b> <b>maps.</b>|$|R
40|$|<b>Displacement</b> <b>mapping</b> is a {{technique}} for applying fine geometric detail to a simpler base surface. The displacement is often specified as a scalar function which makes it relatively easy to increase visual complexity without the difficulties inherent in more general modeling techniques. We would like to use <b>displacement</b> <b>mapping</b> in real-time applications. Ideally, a graphics accelerator should create a polygonal tessellation of the displaced surface on the fly to avoid storage and host bandwidth overheads...|$|R
40|$|<b>Displacement</b> <b>map</b> is a {{modeling}} {{technique that}} creates shape by mapping the height {{field of the}} complicated shape feature {{on the surface of}} the target shape, which is preferable in describing sophisticated feature details. This paper investigates the techniques for fast creation of the <b>displacement</b> <b>map</b> based on the rich research achievements of shape analysis and digital signal processing. The possibility that fuses multi-discipline knowledge with that of shape modeling is explored. A generalized shape synthesis operation in frequency domain is formulated, as well as shape controls to achievement specific mapping effects, such as spherical mapping, cylindrical mapping and normal field mapping. The proposed approach provides comprehensive yet flexible control in shape modeling. Some shape models are provided to demonstrate the effectiveness of the proposed approach...|$|E
40|$|This {{research}} work investigates {{the efficacy of}} the Stanford Method for Persistent Scatterer Interferometry (StaMPS) in measuring the surface deformation over the LâAquila region, Italy just before an event of earthquake of magnitude Mw 6. 3 by using seven descending Envisat C-Band ASAR images. The results show that the StaMPS technique successfully extracted sufficient number of Persistent Scatterers (PS) to derive a one dimensional (1 D) time series <b>displacement</b> <b>map</b> which shows the deformation rates up to 59 mm/year in the satellite Line of Sight (LOS) direction and 50. 8 mm/year in the direction opposite to the satellite LOS. Further, several deformation gradients are also observed from this map which indicate the occurrence of multiple crustal movement mechanism. Another dataset of 14 ASAR images is processed covering a time period before and after the earthquake in the study area to validate the results obtained by the previous dataset. We observed that the generated <b>displacement</b> <b>map</b> follows the deformation characteristics of the earlier <b>displacement</b> <b>map</b> in terms of magnitude and surface movement. We conclude that the generated displacement maps validate the presence of a normal fault mechanism with a tectonic process stretching in a NW-SE direction as predicted by earlier research studies...|$|E
40|$|In {{this paper}} a new adaptation-based method is {{presented}} to reconstruct animatable facial models of human individuals from scan data. An anatomy-based generic control model serves {{as the starting point}} for our adaptation algorithm. Based on a series of measurements between the specified 3 D landmarks, a global adaptation is carried out to align the generic control model to the scan surface. A local adaptation then deforms the geometry of the generic model to fit all of its vertices to the scan surface. The high-resolution geometry of the scan surface is represented as a <b>displacement</b> <b>map</b> which is generated using an offsetenvelope mapping. Reconstruction of high-resolution geometry on the adapted generic mesh is achieved by hierarchical refinement using a surface subdivision scheme with resampling of the <b>displacement</b> <b>map...</b>|$|E
30|$|The {{ability to}} produce {{three-dimensional}} <b>displacement</b> <b>maps</b> based on two-dimensional data widens the range of analytical techniques {{that can be applied}} for the visualization and assessment of surface topography. This technique is particularly applicable to scanning electron micrographs, when calibrated appropriately using data collected from AFM scans. <b>Displacement</b> <b>maps</b> are particularly effective for visualizing conductive surfaces such as titanium, or for viewing surfaces that cannot be easily examined by other topography analysis tools, such as AFM.|$|R
40|$|<b>Displacement</b> <b>maps</b> were {{originally}} intended for mostly superficial alterations of polygonal models, while being artificially obtained {{by means of}} various raster graphics software. Now, though, with rapid development of graphics hardware and its constantly increasing level of programmability it becomes possible to apply or simulate <b>displacement</b> <b>mapping</b> in real time, which renders it a very promising technique for making polygonal scene visualisations look even more realistic. It is also possible to utilize the displacement approach for lossy (or even lossless, considering significant data overhead) 3 d-models compression algorithms. If combined with dedicated model compression methods and image and binary data compression algorithms, <b>displacement</b> <b>mapping</b> can result in dramatically improved overall compression ratios. In this article a complete life cycle of differential <b>displacement</b> <b>maps</b> is described, including proposed algorithm of GPU-based map creation and an algorithm of model restoration. It is shown that the described algorithm is capable {{of all of the}} features of conventional raytracing-based algorithms, while significantly outperforming them in terms of speed and feedback times, which renders it much more suitable for real life development process. Also, a multi-level displacing approach is presented, clearing the possibilities of non-height-field model details representation...|$|R
40|$|This paper {{reviews the}} latest {{developments}} of <b>displacement</b> <b>mapping</b> algorithms implemented on the vertex, geometry, and fragment shaders of graphics cards. <b>Displacement</b> <b>mapping</b> algorithms are classified as per-vertex and per-pixel methods. Per-pixel approaches are further categorized as safe algorithms that aim at correct solutions in all cases, to unsafe techniques that may fail in extreme cases but are usually much faster than safe algorithms, and to combined methods that exploit the robustness of safe and the speed of unsafe techniques. We discuss the possible roles of vertex, geometry, and fragment shaders to implement these algorithms. Then the particular GPU based bump, parallax, relief, sphere, horizon mapping, cone stepping, local ray tracing, pyramidal and view-dependent <b>displacement</b> <b>mapping</b> methods, {{as well as their}} numerous variations are reviewed providing also implementation details of the shader programs. We present these methods using uniform notations and also point out when different authors called similar concepts differently. In addition to basic <b>displacement</b> <b>mapping,</b> self-shadowing and silhouette processing are also reviewed. Based on our experiences gained having re-implemented these methods, their performance and quality are compared, and the advantages and disadvantages are fairly presented...|$|R
40|$|We {{present a}} review of methods for the {{construction}} and deformation of character models. We consider both {{state of the art}} research and common practice. In particular we review applications, data capture methods, manual model construction, polygonal, parametric and implicit surface representations, basic geometric deformations, free form deformations, subdivision surfaces, <b>displacement</b> <b>map</b> schemes and physical deformation...|$|E
40|$|In this paper, {{we present}} {{for the first time}} an {{approach}} for hardware accelerated displacement mapping. The displaced surface is generated from a 2 D <b>displacement</b> <b>map</b> by remeshing a coarse triangle mesh according to the screen projection of the surface. The remeshing algorithm is implemented in hardware. Filtered access to the <b>displacement</b> <b>map</b> makes our approach competitive with available view dependent multiresolution techniques. The advantage of displacement mapping is the compact representation. A displacement mapped surface consumes together with all filter levels {{only a fraction of the}} storage space needed for a hardware compatible representation of an equivalent triangle mesh. A possible design of the displacement mapping rendering pipeline is proposed. Previously described hardware components are used as often as possible. Our approach can be smoothly integrated into all available graphics application programming interfaces. Most existing graphics applications can be extended to the new feature with marginal effort...|$|E
40|$|Adaptive {{subdivision}} of triangular meshes is {{the next}} step for surface generation algorithms like those used for displacement mapping, where a highly detailed model can be constructed from a coarse triangle mesh and a <b>displacement</b> <b>map.</b> In this case the communication requirements between the CPU and the graphics pipeline can be reduced if the displacement mapping projection is performed in an adaptive tessellation unit attached to the graphics pipeline. This paper presents an architecture for the implementation of the adaptive subdivision of triangular meshes in which the coarse triangle mesh is tessellated according to the surface complexity described by the <b>displacement</b> <b>map.</b> The mesh connectivity description we employ permits the reduction of the memory requirements while simultaneous allowing quick access to all the data required for each subdivision step. As a result, we obtain a regular architecture, characterized by an optimum data management that minimizes the data storage and avoids the waiting cycles associated with the multiple data accesses required for each subdivision step...|$|E
50|$|Bump mapping is {{much faster}} and consumes less {{resources}} for {{the same level of}} detail compared to <b>displacement</b> <b>mapping</b> because the geometry remains unchanged.|$|R
40|$|The {{implementation}} of <b>displacement</b> <b>mapping</b> on subdivision surfaces {{is discussed in}} this paper The subdivision surface has recently drawn {{a lot of attention}} in the area of geometric modeling, multiresolution surface representation and geometric compression. In our research, we have developed the versatility and extensibility of this technique. The subdivision surface technique can be conveniently incorporated with many existing surface modeling methodologies. In this paper we present the amalgamation of the subdivision surface and <b>displacement</b> <b>mapping,</b> for producing realistic surface details...|$|R
50|$|Subpoly displacement, {{allowing}} for high detail <b>displacement</b> <b>mapping</b> of models {{using data from}} programs such as Zbrush. With field weighting tools, displacement effects can be animated.|$|R
