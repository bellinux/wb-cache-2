178|1830|Public
25|$|XML <b>data</b> <b>binding,</b> which {{provides}} an automated translation between an XML document and programming-language objects.|$|E
25|$|WPF Designer: The WPF designer, codenamed Cider, was {{introduced}} with Visual Studio 2008. Like the Windows Forms designer it supports the {{drag and drop}} metaphor. It is used to author user interfaces targeting Windows Presentation Foundation. It supports all WPF functionality including <b>data</b> <b>binding</b> and automatic layout management. It generates XAML code for the UI. The generated XAML file is compatible with Microsoft Expression Design, the designer-oriented product. The XAML code is linked with code using a code-behind model.|$|E
25|$|Windows Presentation Foundation (codenamed Avalon) is the {{overhaul}} of the graphical subsystem in Windows and the flagship resolution independent API for 2D and 3D graphics, raster and vector graphics (XAML), fixed and adaptive documents (XPS), advanced typography, animation (XAML), <b>data</b> <b>binding,</b> audio and video in Windows Vista. WPF enables richer control, design, {{and development of the}} visual aspects of Windows programs. Based on DirectX, it renders all graphics using Direct3D. Routing the graphics through Direct3D allows Windows to offload graphics tasks to the GPU, reducing the workload on the computer's CPU. This capability is used by the Desktop Window Manager to make the desktop, all windows and all other shell elements into 3D surfaces. WPF applications can be deployed on the desktop or hosted in a web browser (XBAP).|$|E
40|$|International audienceModern GUI toolkits {{propose the}} use of {{declarative}} <b>data</b> <b>bindings</b> to link the domain data to their presentations. These approaches work fine for defining simple bindings, but require an increasing programming effort {{as soon as the}} bindings become more complex. In this paper, we propose {{the use of}} active operations for specifying and implementing UI <b>data</b> <b>bindings</b> to tackle this issue. We demonstrate that the proposed approach goes beyond the usual declarative <b>data</b> <b>bindings</b> by combining the simplicity of the declarative approaches with the expressiveness of active operations...|$|R
5000|$|When a file {{from one}} {{development}} machine is moved or copied to another, the <b>data</b> <b>bindings</b> panel may not show recordsets. Even though the server behaviors tab displays that a recordset has been defined, {{it may not}} be available under the <b>data</b> <b>bindings</b> tab in the design environment. This happens when the associated MNO file is missing in the new development machine. The solution to this issue is to copy the missing MNO file to the [...] "_notes" [...] folder in the relevant directory in new machine.|$|R
40|$|Probabilistic network {{component}} analysis (pNCA) is a two-stage estimation-resampling method for regulatory network reconstruction. pNCA integrates gene expression <b>data</b> and <b>binding</b> <b>data</b> (ChIP-on-chip or <b>binding</b> motif) to identify both target genes and significant transcription factors. The method is robus...|$|R
25|$|XML and its {{extensions}} have regularly {{been criticized}} for verbosity and complexity. Mapping the basic tree model of XML to type systems of programming languages or databases can be difficult, especially when XML is used for exchanging highly structured data between applications, which was not its primary design goal. However, XML <b>data</b> <b>binding</b> systems allow applications to access XML data directly from objects representing a data structure of the data in the programming language used, which ensures type safety, rather than using the DOM or SAX to retrieve data from a direct representation of the XML itself. This is accomplished by automatically creating a mapping between elements of the XML schema XSD of the document and members of a class to be represented in memory. Other criticisms attempt to refute the claim that XML is a self-describing language (though the XML specification itself makes no such claim). JSON, YAML, and S-Expressions are frequently proposed as simpler alternatives (see Comparison of data serialization formats); that focus on representing highly structured data rather than documents, which may contain both highly structured and relatively unstructured content. However, W3C standardized XML schema specifications offer {{a broader range of}} structured XSD data types compared to simpler serialization formats and offer modularity and reuse through XML namespace.|$|E
2500|$|XML <b>data</b> <b>binding</b> is {{the binding}} of XML {{documents}} to {{a hierarchy of}} custom and strongly typed objects, {{in contrast to the}} generic objects created by a DOM parser. This approach simplifies code development, and in many cases allows problems to be identified at compile time rather than run-time. It is suitable for applications where the document structure is known and fixed at the time the application is written. Example <b>data</b> <b>binding</b> systems include the Java Architecture for XML Binding (JAXB), XML Serialization in [...]NET Framework. and XML serialization in gSOAP.|$|E
50|$|UI <b>data</b> <b>binding</b> is a {{software}} design pattern to simplify development of GUI applications. UI <b>data</b> <b>binding</b> binds UI elements to an application domain model. Most frameworks employ the Observer pattern as the underlying binding mechanism. To work efficiently, UI <b>data</b> <b>binding</b> has to address input validation and data type mapping.|$|E
5000|$|... e. XML <b>data</b> <b>bindings</b> and SOAP {{serialization}} tools provide type-safe XML serialization {{of programming}} data structures into XML. Shown are XML values {{that can be}} placed in XML elements and attributes.|$|R
5000|$|AngularJS {{directives}} {{allow the}} developer to specify custom and reusable HTML-like elements and attributes that define <b>data</b> <b>bindings</b> {{and the behavior}} of presentation components. Some {{of the most commonly}} used directives are: ...|$|R
5000|$|... gSOAP is a C and C++ {{software}} development toolkit for SOAP/XML web services and generic XML <b>data</b> <b>bindings.</b> The gSOAP tools generate efficient source code for XML serialization {{of any type}} of C/C++ data with zero-copy overhead.|$|R
50|$|It {{is worth}} noting that <b>data</b> <b>binding</b> {{discussed}} in the article mentioned above needs to be implemented by the application: VTD-XML itself only offers accessors. In this regard VTD-XML is not a <b>data</b> <b>binding</b> solution itself (unlike JiBX, JAXB, XMLBeans), although it offers extraction functionality for <b>data</b> <b>binding</b> packages, much like other XML parsers (DOM, SAX, StAX).|$|E
50|$|<b>Data</b> <b>binding</b> is {{a general}} {{technique}} that binds data sources from the provider and consumer together and synchronizes them. This is usually done with two data/information sources with different languages as in XML <b>data</b> <b>binding.</b> In UI <b>data</b> <b>binding,</b> data and information objects of the same language but different logic function are bound together (e.g. Java UI elements to Java objects).|$|E
5000|$|Castor is a <b>data</b> <b>binding</b> {{framework}} for Java with some features like Java to Java-to-XML binding, Java-to-SQL persistence, paths between Java objects, XML documents, relational tables, etc. [...] Castor {{is one of}} the oldest <b>data</b> <b>binding</b> projects.|$|E
50|$|Like OpenGL ES 2.0, WebGL {{does not}} have the fixed-function APIs {{introduced}} in OpenGL 1.0 and deprecated in OpenGL 3.0. This functionality can instead be provided by the user by providing shader code and configuring <b>data</b> <b>bindings</b> in JavaScript.|$|R
40|$|We outline a {{framework}} for managing information quality (IQ) in e-Science, using ontologies, semantic annotation of resources, and <b>data</b> <b>bindings.</b> Scientists define the quality characteristics that are of importance in their particular domain by extending an OWL DL IQ ontology, which classifies and organises these domain-specific quality characteristics within an overall quality management framework. RDF is used to annotate data resources, with reference to IQ indicators defined in the ontology. <b>Data</b> <b>bindings</b> — again defined in RDF — are used to represent mappings between data elements (e. g. defined in XML Schemas) and the IQ ontology. As a practical illustration of our approach, we present a case study from the domain of proteomic...|$|R
5000|$|<b>Data</b> Source <b>binding,</b> easing {{database}} client/server development ...|$|R
5000|$|Q*Model - used {{directly}} in <b>data</b> <b>binding</b> (e.g. QAbstractItemModel) ...|$|E
5000|$|OpenWire Visual Live Binding - 3rd-party Visual <b>Data</b> <b>Binding</b> tool ...|$|E
5000|$|Verified W3C schema {{patterns}} for <b>data</b> <b>binding,</b> full test pattern coverage ...|$|E
50|$|The MVVM pattern {{attempts}} to gain both advantages {{of separation of}} functional development provided by MVC, while leveraging the advantages of <b>data</b> <b>bindings</b> and the framework by <b>binding</b> <b>data</b> {{as close to the}} pure application model as possible. It uses the binder, view model, and any business layers' data-checking features to validate incoming data. The result is the model and framework drive as much of the operations as possible, eliminating or minimizing application logic which directly manipulates the view (e.g., code-behind).|$|R
50|$|WPF employs XAML, an XML-based language, {{to define}} and link various {{interface}} elements. WPF applications can be deployed as standalone desktop programs or hosted as an embedded object in a website. WPF aims to unify a number of common user interface elements, such as 2D/3D rendering, fixed and adaptive documents, typography, vector graphics, runtime animation, and pre-rendered media. These elements can then be linked and manipulated based on various events, user interactions, and <b>data</b> <b>bindings.</b>|$|R
50|$|However {{tracking}} {{could also}} be capable of providing monitoring <b>data</b> without <b>binding</b> to a fixed location by using a cooperative tracking capability, e.g. an RTLS.|$|R
5000|$|Liquid XML Studio - Commercial {{tool for}} XML <b>data</b> <b>binding</b> code {{generation}} ...|$|E
50|$|Ember also {{provides}} dependency injection, declarative two-way <b>data</b> <b>binding,</b> computed properties, and automatically-updating templates.|$|E
5000|$|Similar to , but {{establishes}} a two-way <b>data</b> <b>binding</b> between the view and the scope.|$|E
5000|$|When a {{page with}} a {{recordset}} {{is created by}} some web design software, an [...]mno file is created in the site's _notes folder[...]mno file contains design notes. This folder is usually not visible in the site manager, {{but it can be}} viewed using your system's file management tool. The MNO file contains XML information that are used to gain information about recordsets on the page. The XML file defines the name and data type of the recordset columns. Web Designing software need this file to properly populate the <b>data</b> <b>bindings</b> panel in their design environment.|$|R
40|$|We {{propose a}} class of constraints, {{referred}} to as conditional functional dependencies (CFDs), and study their applications in data cleaning. In contrast to traditional functional dependencies (FDs) that were developed mainly for schema design, CFDs aim at capturing the consistency of <b>data</b> by incorporating <b>bindings</b> of semantically related values. For CFDs we provide an inference system analogous to Armstrong’s axioms for FDs, as well as consistency analysis. Since CFDs allow <b>data</b> <b>bindings,</b> {{a large number of}} individual constraints may hold on a table, complicating detection of constraint violations. We develop techniques for detecting CFD violations in SQL as well as novel techniques for checking multiple constraints in a single query. We experimentally evaluate the performance of our CFD-based methods for inconsistency detection. This not only yields a constraint theory for CFDs butisalsoasteptowardapractical constraint-based method for improving data quality. ...|$|R
50|$|Yielder {{entities}} {{consist of}} unevaluated quantities of data. The values of these quantities are {{contingent on the}} current information and state of computation. Yielders draw on transient <b>data,</b> <b>bindings,</b> and storage to select the information to be processed by actions. It is during action performance that yielders are evaluated, and their evaluation results in data entities. While the current information can influence the data produced by the evaluation of a yielder entity, the evaluation cannot influence the current information. If data operations are employed on yielder entities, compound yielder entities may be formed as a result.|$|R
5000|$|Unity 3D <b>data</b> <b>binding</b> {{framework}} (available in modifications for NGUI, iGUI and EZGUI libraries) ...|$|E
50|$|Code Synthesis Tools CC is a {{software}} development company located in Cape Town, South Africa. The company {{revolves around the}} development and licensing of ODB, a compiler-based object-relational mapping (ORM) system for C++, CodeSynthesis XSD, an open-source, cross-platform XML <b>Data</b> <b>Binding</b> compiler for C++, and CodeSynthesis XSD/e, an open-source, validating XML parser/serializer generator and C++ XML <b>Data</b> <b>Binding</b> for mobile and embedded systems.|$|E
50|$|LINQ queries, {{including}} LINQ to XML, {{can also}} act as data sources for <b>data</b> <b>binding.</b>|$|E
40|$|Motivation: Modelling the {{regulation}} of gene expression can {{provide insight into the}} regulatory roles of individual transcription factors (TFs) and histone modifications. Recently, Ouyang et al. in 2009 modelled gene expression levels in mouse embryonic stem (mES) cells using in vivo ChIP-seq measurements of TF binding. ChIP-seq TF <b>binding</b> <b>data,</b> however, are tissue-specific and relatively difficult to obtain. This limits the applicability of gene expression models that rely on ChIP-seq TF <b>binding</b> <b>data.</b> Results: In this study, we build regression-based models that relate gene expression to the binding of 12 different TFs, 7 histone modifications and chromatin accessibility (DNase I hypersensitivity) in two different tissues. We find that expression models based on computationally predicted TF binding can achieve similar accuracy to those using in vivo TF <b>binding</b> <b>data</b> and that including binding at weak sites is critical for accurate prediction of gene expression. We also find that incorporating histone modification and chromatin accessibility data results in additional accuracy. Surprisingly, we find that models that use no TF <b>binding</b> <b>data</b> at all, but only histone modification and chromatin accessibility data, can be as (or more) accurate than those based on in vivo TF <b>binding</b> <b>data...</b>|$|R
40|$|The data {{presented}} in this paper supports the research article “A rapid, highly sensitive and culture-free detection of pathogens from blood by positive enrichment” (Vutukuru et al., 2016) [1]. We compared a list of sepsis causing pathogens to the ApoH <b>binding</b> <b>data</b> given to us by ApoH technologies. The <b>data</b> highlights the <b>binding</b> of ApoH beads to sepsis causing pathogens...|$|R
5000|$|... is a public, web-accessible {{database}} of measured binding affinities, focusing chiefly on {{the interactions of}} proteins considered to be candidate drug-targets with ligands that are small, drug-like molecules. As of March, 2011, BindingDB contains about 650,000 <b>binding</b> <b>data,</b> for 5,700 protein targets and 280,000 small molecules. BindingDB also includes a small collection of host-guest <b>binding</b> <b>data</b> of interest to chemists studying supramolecular systems.|$|R
