1|30|Public
50|$|The KDF9 {{was one of}} the {{earliest}} fully hardware-secured multiprogramming systems. Up to four programs could be run at once under the control of its elegantly simple operating system, the Timesharing Director, each being locked into its own core area by BA (Base Address) and NOL (Number of Locations) registers. Each program had its own sets of stack and Q store registers, which were activated when that program was dispatched, so that context switching was very efficient. Each program could drive hardware I/O devices directly, but was limited by hardware checks to those that the Director had allocated to it. Any attempt to use an unallocated device caused an <b>error</b> <b>interrupt.</b> A similar interrupt resulted from overfilling (or over-emptying) the Nest or SJNS, or attempting to access storage at an address above that given in the NOL register. Somewhat different was the Lock-Out interrupt, which resulted from trying to access an area of store that was currently being used by an I/O device, so that there was hardware mutual exclusion of access to DMA buffers. When a program blocked on a Lock-Out, or by voluntarily waiting for an I/O transfer to terminate, it was interrupted and Director switched to the program of highest priority that was not itself blocked. When a Lock-Out cleared, or an awaited transfer terminated, and the responsible program was of higher priority than the program currently running, the I/O Control (IOC) unit interrupted to allow an immediate context switch. IOC also made provision to avoid priority inversion, in which a program of high priority waits for a device made busy by a program of lower priority, requesting a distinct interrupt in that case.|$|E
40|$|Cognitive {{robotics}} is that {{branch of}} artificial intelligence concerned with “the {{study of the}} knowledge representa-tion and reasoning problems faced by an autonomous robot (or agent) in a dynamic and incompletely known world” (Levesque & Reiter 1998, p. 106). My work is not aimed at solving all the problems of cognitive robotics; rather, it is about studying, fleshing out, and investigating solutions to a subset of them. In particular, a subset of those problems that face an agent reasoning and acting in time. To understand what this exactly means, a number of general assumptions about what is reasonably to be expected from an embodied cognitive agent should first be pointed out. First, to appropriately behave in a changing world, an agent {{must be aware of}} its environment and the outcome of its acts, and ready to recover from <b>errors,</b> <b>interrupts,</b> and fail...|$|R
50|$|Most {{assembly}} languages {{will have}} a macro instruction or an interrupt address available for the particular system to intercept events such as illegal op codes, program check, data errors, overflow, divide by zero, and other such. IBM and Univac mainframes had the STXIT macro. Digital Equipment Corporation RT11 systems had trap vectors for program <b>errors,</b> i/o <b>interrupts,</b> and such. DOS has certain interrupt addresses. Microsoft Windows has specific module calls to trap program errors.|$|R
5000|$|How used: The {{operating}} system shall allocate an SMAP buffer in memory (20 bytes buffer). Then set registers as specified in [...] "Input" [...] table. On first call, EBX {{should be set}} to 0. Next step is to call INT 0x15. If no <b>error,</b> the <b>interrupt</b> call returns with CF clear and the buffer filled with data representing first region of the memory map. EBX is updated by BIOS {{so that when the}} OS calls the routine again, The next region is returned in the buffer. BIOS sets EBX to zero if all done.|$|R
40|$|The Friendly Batch Routing (FBR) {{application}} {{uses the}} Google Maps API to easily and simply gather route data for many origin-destination pairs. FBR is designed with usability in mind so that <b>errors</b> do not <b>interrupt</b> processing and skipped records {{can easily be}} resubmitted for processing. Additionally the FBR output can easily be imported into GIS packages...|$|R
40|$|Unrecognized frameshifts, {{in-frame}} stop codons and sequencing <b>errors</b> lead to <b>Interrupted</b> CoDing Sequence (ICDS) {{that can}} seriously affect all sub-sequent steps of functional characterization, from in silico analysis to high-throughput proteomic pro-jects. Here, {{we describe the}} Interrupted CoDing Sequence database containing ICDS detected by a similarity-based approach in 80 complete proka-ryotic genomes. ICDS can be retrieved by species browsing or similarity searches via a web interfac...|$|R
40|$|Single event {{effects are}} {{investigated}} in 90 -nm phase change memories. The cells are {{shown to be}} insensitive to heavy-ion strikes and will likely remain so {{for a few more}} generations. Possible physical mechanisms leading to upsets in future generations are discussed. <b>Errors</b> and functional <b>interrupts,</b> in addition to single event latch-up, were observed during read, word and buffer program due to strikes in the peripheral circuitry...|$|R
40|$|Voltage sags, swells and {{momentary}} {{power interruptions}} lasting a few cycles to several seconds are common disturbances on utility power distribution systems. These disturbances {{are a result}} of normal utility recloser switching activity due in part to distribution system short circuits from natural causes such as lightning, rodents, traffic accidents, and current overloads. Power disturbances pose serious problems for many customers with critical, voltage sensitive equipment. Faults can interrupt a manufacturing process, cause PLC`s to initialize their programmed logic and restart equipment out of sequence, create computer data <b>errors,</b> <b>interrupt</b> communications, lockup PC keyboards and cause equipment to malfunction. These momentary disturbances result in billions of dollars of lost productivity annually due to downtime, cleanup, lost production and the loss of customer confidence in the business. This report describes prototype development work for a factory assembled 2 MW/ 10 Second Battery Energy Storage System. The system design includes (1) a modular battery energy storage system comprised of several strings of batteries-each string provided with an integral Power Conversion System (PCS), (2) an Electronic Selector Device (ESD) comprised of a solid state static switch with sensing and power switching controls, and utility interconnection termination bus bars, and (3) a separate isolation transformer to step-up PCS output voltage to interface directly with the distribution transformer serving the industrial or commercial customer. The system monitors the utility distribution system voltage for voltage sags, swells, and interruptions, switches the customer`s critical loads from utility power to the energy stored in the systems batteries and provides up to 2 MVA until the disturbance clears or up to 10 seconds. Once the ESD sensing circuits have confirmed that the utility is again stable, it seamlessly returns the critical load to the utility. 22 figs., 1 tab...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedCurrent software development methodologies {{have proven to}} be ineffective for meeting the rising demand for fast production of reliable software for hard real-time computer systems. A computer-aided, rapid prototyping system (CAPS) based on a Prototype System Description Language (PSDL) and a set of software tools including an Execution Support System (ESS), has been proposed by other research and provides a promising and cost effective alternative to the traditional development life cycle of these systems. This study proposes a four function design for the dynamic scheduler of the CAPS ESS. This design includes a method for invoking processes for the ESS static scheduler and translator, a scheduling algorithm for the scheduling of the prototype's non-time critical processes, and a method for <b>error</b> and <b>interrupt</b> handling during prototype execution. Thesis. (RH) [URL] United States Nav...|$|R
40|$|A {{radiation}} tolerant testbed {{was designed}} using a Commercial-Off-the- Self Digital Signal Processor and presented {{to prove the}} concept of Triple Modular Redundant (TMR) processors {{in order to make}} a COTS DSP radiation tolerant design. The system was designed to handle the effects of radiation associated with Single Event Upset only. Two of the industry's leading programmable 32 -bit floating-point digital signal processors were reviewed for this thesis, Analog Devices ADSP- 21060 and the Texas Instruments TMS 320 C 6701. The 6701 was the best processor for this design based upon size, power, speed, and tolerance to single event latchup, signal event burnout, and total ionization dose. A review of the processor's performance and characteristics is provided to ensure the proper operation of 6701 in a TMR design. The system employs a bit by bit voter that compares the three processors' results and outputs the majority of the bits. All data, address, and control signals are monitored to determine that the system is operating properly. This system significantly differs from previous TMR designs, because only address <b>errors</b> cause immediate <b>interrupts.</b> Data <b>errors</b> cause processor <b>interrupts</b> only when the errors accumulate to a critical level. An external host processor controls the processors' shared memory space...|$|R
40|$|Abstract We {{present a}} model for <b>error</b> {{recovery}} and <b>interrupt</b> handling by a reasoning, acting, and linguistically-competent cognitive agent. Faced with an emergency situation, the agent reasons about what it needs {{to do and what}} it is currently doing {{to decide what to do}} next. Its reasoning is based on general context-sensitive domain knowledge about the priority of acts. Such knowledge may be provided to the agent in natural language while it is acting, rather than being hardwired into the agent's knowledge base as is the case with most existing systems...|$|R
5000|$|It is {{best for}} TLER to be [...] "enabled" [...] when in a RAID array to prevent the {{recovery}} time from a disk read or write error from exceeding the RAID implementation's timeout threshold. If a drive times out, the hard disk {{will need to be}} manually re-added to the array, requiring a re-build and re-synchronization of the hard disk. Enabling TLER seeks to prevent this by <b>interrupting</b> <b>error</b> correction before timeout, to report failures only for data segments. The result is increased reliability in a RAID array.|$|R
40|$|A {{real-time}} Ada application, an Inertial Navigation System (INS) simulator, {{is being}} developed by the Real-Time Embedded Systems Testbed Project {{as a vehicle to}} analyze issues regarding the use of Ada in the real-time embedded domain and to provide a context for future experimentation. The technical philosophy behind developing a real-time Ada artifact is to: (1) select a representative (e. g., strict timing demands, multiple concurrent activities, low-level I/O, <b>error</b> handling, <b>interrupts,</b> and periodic activities) real-time application; (2) use Ada tasks as the unit of concurrency for the real-time design; and (3) apply any relevant practical results being produced by the real-time scheduling research community. In particular, the INS simulator must satisfy a set of timing requirements that are similar to an INS with respect to data updating, message transmission, and message reception. This document discusses the top-level design of this application from three points of view: data flow perspective, concurrency and control perspective, and the Ada module perspective...|$|R
50|$|Arriving at the tree, {{she meets}} {{up with the}} Cheshire cat again, who {{arranges}} Alice's transportation to the palace. Alice spots four playing cards - numbers 2, 3, 5, and 9 - who are painting a rose bush red because they planted a rose bush of the wrong color and could lose their heads for it. They quarrel over assigning blame for the <b>error,</b> but are <b>interrupted</b> by the White Rabbit's heralding the Queen of Heart's arrival (The Queen of Hearts). Spotting Alice, the queen invites her to join the croquet game, which Alice ultimately wins, a grave mistake.|$|R
30|$|The MicroBlaze {{processor}} {{also has}} special purpose registers such as: program counter (PC) {{can read it}} but cannot write to it, machine status register (MSR) to indicate {{the status of the}} processor such as indicating arithmetic carry, divide by zero error, a FSL <b>error</b> and enabling/disabling <b>interrupts</b> to name a few. An exception address register (EAR) that stores the full load/store address that caused the exception. An exception status register (ESR) that indicates what kind of exception occurred. A floating point status register (FSR) to indicate things such as invalid operation divide by zero error, overflow, underflow and denormalized operand error of a floating point operation.|$|R
40|$|Abstract. We {{study the}} problem of {{determining}} stack boundedness and the exact maximum stack size for three classes of interrupt-driven programs. Interrupt-driven programs are used in many real-time applications that require responsive interrupt handling. In order to ensure responsiveness, programmers often enable interrupt processing {{in the body of}} lower-priority interrupt handlers. In such programs a programming <b>error</b> can allow <b>interrupt</b> handlers to be interrupted in cyclic fashion to lead to an unbounded stack, causing the system to crash. For a restricted class of interrupt-driven programs, we show that there is a polynomial-time procedure to check stack boundedness, while determining the exact maximum stack size is PSPACE-complete. For a larger class of programs, the two problems are both PSPACE-complete, and for the largest class of programs we consider, the two problems are PSPACE-hard and can be solved in exponential time. ...|$|R
40|$|International audienceSupercomputers {{are rapidly}} {{evolving}} with now millions of processing units, posing {{the questions of}} their programmability. Despite the emergence of more widespread and functional programming models, developing correct and effective parallel applications still remains a complex task. Although debugging solutions have emerged to address this issue, they often come with restrictions. Furthermore, programming model evolutions stress the requirement for a validation tool able to handle hybrid applications. Indeed, as current scientific applications mainly rely on MPI (Message-Passing Interface), new hardwares designed with a larger node-level parallelism advocate for an MPI+X solution with X a shared-memory model like OpenMP. But integrating two different approaches inside the same application can be error-prone leading to complex bugs. In an MPI+X program, not only the correctness of MPI should be ensured but also its interactions with the multi-threaded model. For example, identical MPI collective operations cannot be performed by multiple non-synchronized threads. In this paper, we present {{an extension of the}} PARallel COntrol flow Anomaly CHecker (PARCOACH) to enable verification of hybrid HPC applications. Relying on a GCC plugin that combines static and dynamic analysis, the first pass statically verifies the thread level required by an MPI+OpenMP application and outlines execution paths leading to potential deadlocks. Based on this analysis, the code is selectively instrumented, displaying an <b>error</b> and <b>interrupting</b> all processes if the actual scheduling leads to a deadlock situation. Emmanuelle Saillard CEA, DAM...|$|R
40|$|AbstractWe {{study the}} problem of {{determining}} stack boundedness and the exact maximum stack size for three classes of interrupt-driven programs. Interrupt-driven programs are used in many real-time applications that require responsive interrupt handling. In order to ensure responsiveness, programmers often enable interrupt processing {{in the body of}} lower-priority interrupt handlers. In such programs a programming <b>error</b> can allow <b>interrupt</b> handlers to be interrupted in a cyclic fashion to lead to an unbounded stack, causing the system to crash. For a restricted class of interrupt-driven programs, we show that there is a polynomial-time procedure to check stack boundedness, while determining the exact maximum stack size is PSPACE-complete. For a larger class of programs, the two problems are both PSPACE-complete, and for the largest class of programs we consider, the two problems are PSPACE-hard and can be solved in exponential time. While the complexities are high, our algorithms are exponential only in the number of handlers, and polynomial {{in the size of the}} program...|$|R
40|$|This study operationalizes {{the concept}} of hostility {{tradition}} in antitrust as mentioned by Oliver Williamson and Ronald Coase through erroneous law enforcement effects. The antitrust agency may commit type I, not just type II, errors when evaluating an agreement in terms of cartels. Moreover, firms can compete in a standard way, collude or engage in cooperative agreements that improve efficiency. The antitrust agency may misinterpret such cooperative agreements, committing a type I error (over-enforcement). The model set-up is drawn from Motta and Polo (2003) and is extended as described above using the findings of Ghebrihiwet and Motchenkova (2010). Three effects {{play a role in}} this environment. Type I errors may induce firms that would engage in socially efficient cooperation absent errors to opt for collusion (the deserved punishment effect). For other parameter configurations, type I <b>errors</b> may <b>interrupt</b> ongoing cooperation when investigated. In this case, the firms falsely report collusion and apply for leniency, fearing being erroneously fined (the disrupted cooperation effect). Finally, over-enforcement may prevent beneficial cooperation from starting given the threat of being mistakenly fined (the prevented cooperation effect). The results help us understand the negative impact that a hostility tradition in antitrust — which is more likely for inexperienced regimes and regimes with low standards of evidence — and the resulting type I enforcement errors can have on social welfare when applied to the regulation of horizontal agreements. Additional interpretations are discussed in light of leniency programs for corruption and compliance policies for antitrust violations...|$|R
40|$|Previous {{research}} has shown that interruptions can lead to delays and <b>errors</b> on the <b>interrupted</b> task. Such research, however, seldom considers whether interruptions cause a change in how information is processed. The central question of this research is to determine whether an interruption causes a processing change. We investigate this question in a decision-making paradigm well-suited for examining the decision-making process. Participants are asked to select from a set of risky gambles, each with multiple possible stochastic outcomes. The information gathering process is measured using a mouse-click paradigm. Consistent with past work, interruptions did incur a cost: An interruption increased the time and the amount of information needed to make a decision. Furthermore, after an interruption, participants did seem to partially “restart” the task. Importantly, however, {{there was no evidence that}} the information gathering pattern was changed by an interruption. There was also no overall cost to the interruption in terms of choice outcome. These results are consistent with the idea that participants recall a subset of pre-interruption information, which was then incorporated into post-interruption processing...|$|R
40|$|International audienceUnrecognized frameshifts, {{in-frame}} stop codons and sequencing <b>errors</b> lead to <b>Interrupted</b> CoDing Sequence (ICDS) {{that can}} seriously affect all subsequent steps of functional characterization, from in silico analysis to high-throughput proteomic projects. Here, {{we describe the}} Interrupted CoDing Sequence database containing ICDS detected by a similarity-based approach in 80 complete prokaryotic genomes. ICDS can be retrieved by species browsing or similarity searches via a web interface ([URL] The definition of each interrupted gene is provided {{as well as the}} ICDS genomic localization with the surrounding sequence. Furthermore, to facilitate the experimental characterization of ICDS, we propose optimized primers for re-sequencing purposes. The database will be regularly updated with additional data from ongoing sequenced genomes. Our strategy has been validated by three independent tests: (i) ICDS prediction on a benchmark of artificially created frameshifts, (ii) comparison of predicted ICDS and results obtained from the comparison of the two genomic sequences of Bacillus licheniformis strain ATCC 14580 and (iii) re-sequencing of 25 predicted ICDS of the recently sequenced genome of Mycobacterium smegmatis. This allows us to estimate the specificity and sensitivity (95 and 82 %, respectively) of our program and the efficiency of primer determination...|$|R
40|$|This {{study is}} an {{investigation}} of the application of multileaf collimators (MLCs) to the treatment of moving anatomy with external beam radiation therapy. First, a method for delivering intensity modulated radiation therapy (IMRT) to moving tumors is presented. This method uses an MLC control algorithm that calculates appropriate MLC leaf speeds in response to feedback from real-time imaging. The algorithm does not require a priori knowledge of a tumor’s motion, and is based on the concept of self-correcting DMLC leaf trajectories. This gives the algorithm the distinct advantage of allowing for correction of DMLC delivery <b>errors</b> without <b>interrupting</b> delivery. The algorithm is first tested for the case of one-dimensional (1 D) rigid tumor motion in the beam’s eye view (BEV). For this type of motion, it is shown that the real-time tracking algorithm results in more accurate deliveries, with respect to delivered intensity, than those which ignore motion altogether. This is followed by an appropriate extension of the algorithm to two-dimensional (2 D) rigid motion in the BEV. For this type of motion, it is shown that the 2 D real-time tracking algorithm results in improved accuracy (in the delivered intensity) in comparison to deliveries which ignore tumor motion or only account for tumor motion which is aligned with MLC leaf travel. Finally, a method is presented for designing DMLC leaf trajectories which deliver a specified intensity over a moving tumor without overexposing critical structures which exhibit motion patterns that differ from that of the tumor. In addition to avoiding overexposure of critical organs, the method can, in the case shown, produce deliveries that are superior to anything achievable using stationary anatomy. In this regard, the method represents a systematic way to include anatomical motion as a degree of freedom in the optimization of IMRT while producing treatment plans that are deliverable with currently available technology. These results, combined with those related to the real-time MLC tracking algorithm, show that an MLC is a promising tool to investigate for the delivery of four-dimensional radiation therapy. ...|$|R
40|$|Human NK cell {{deficiencies}} {{are rare}} yet result in severe and often fatal disease, particularly {{as a result}} of viral susceptibility. NK cells develop from hematopoietic stem cells, and few monogenic <b>errors</b> that specifically <b>interrupt</b> NK cell development have been reported. Here we have described biallelic mutations in IRF 8, which encodes an interferon regulatory factor, as a cause of familial NK cell deficiency that results in fatal and severe viral disease. Compound heterozygous or homozygous mutations in IRF 8 in 3 unrelated families resulted in a paucity of mature CD 56 dim NK cells and an increase in the frequency of the immature CD 56 bright NK cells, and this impairment in terminal maturation was also observed in Irf 8 –/–, but not Irf 8 +/–, mice. We then determined that impaired maturation was NK cell intrinsic, and gene expression analysis of human NK cell developmental subsets showed that multiple genes were dysregulated by IRF 8 mutation. The phenotype was accompanied by deficient NK cell function and was stable over time. Together, these data indicate that human NK cells require IRF 8 for development and functional maturation and that dysregulation of this function results in severe human disease, thereby emphasizing a critical role for NK cells in human antiviral defense...|$|R
40|$|By {{collecting}} information {{we can make}} assumptions, foresee possible events and even conjecture certain objects or exams for approval. Even if information collecting is versatile and technological possibilities are developing, it grows in public gathering and presentment as well. However, not all information given is appropriate and useful. Therefore information is collected and re-processed {{as many times as}} necessary for aims of the project. This information is presented in many formats and not always from primary sources, making it difficult to analyze and present the results. Even information gathering from several sources can vary cardinally and be completely incompatible. Since information collected from different sources cannot match, it requires the gathering of big quantities of information as quickly as possible for processing purposes, analysis and distinguishment of the most suitable interface connections. Because the project is designed to collect long-term data it needs to analyze possible changes in source system and atleast slightly protect it from data loss. Information gathering must be protected from possible service <b>errors</b> to avoid <b>interrupting</b> the information collection. In order to obtain more precise data and to make it as accurate as possible, the information must be collected for a long time, without interruptions. In order to get more precise data minimal time of data gathering should be at least three months...|$|R
5000|$|The first mastersingers file {{into the}} church, {{including}} Eva's wealthy father Veit Pogner {{and the town}} clerk Beckmesser. Beckmesser, a clever technical singer who was expecting to win the contest without opposition, is distressed to see that Walther is Pogner's guest and intends to enter the contest. Meanwhile, Pogner introduces Walther to the other mastersingers as they arrive. Fritz Kothner the baker, serving as chairman of this meeting, calls the roll. Pogner, addressing the assembly, announces his offer of his daughter's hand for {{the winner of the}} song contest. When Hans Sachs argues that Eva ought to have a say in the matter, Pogner agrees that Eva may refuse the winner of the contest, but she must still marry a mastersinger. Another suggestion by Sachs, that the townspeople, rather than the masters, should be called upon to judge the winner of the contest, is squelched by the other masters. Pogner formally introduces Walther as a candidate for admission into the masterguild. Questioned by Kothner about his background, Walther states that his teacher in poetry was Walther von der Vogelweide whose works he studied in his own private library in Franconia, and his teachers in music were the birds and nature itself. Reluctantly the masters agree to admit him, provided he can perform a master-song of his own composition. Walther chooses love as the topic for his song and therefore is to be judged by Beckmesser alone, the [...] "Marker" [...] of the guild for worldly matters. At the signal to begin, Walther launches into a novel free-form tune, breaking all the mastersingers' rules, and his song is constantly interrupted by the scratch of Beckmesser's chalk on his chalkboard, maliciously noting one violation after another. When Beckmesser has completely covered the slate with symbols of Walther's <b>errors,</b> he <b>interrupts</b> the song and argues that {{there is no point in}} finishing it. Sachs tries to convince the masters to let Walther continue, but Beckmesser sarcastically tells Sachs to stop trying to set policy and instead, to finish making his (Beckmesser's) new shoes, which are overdue. Raising his voice over the masters' argument, Walther finishes his song, but the masters reject him and he rushes out of the church.|$|R
2500|$|The first mastersingers file {{into the}} church, {{including}} Eva's wealthy father Veit Pogner {{and the town}} clerk Beckmesser. Beckmesser, a clever technical singer who was expecting to win the contest without opposition, is distressed to see that Walther is Pogner's guest and intends to enter the contest. Meanwhile, Pogner introduces Walther to the other mastersingers as they arrive. Fritz Kothner the baker, serving as chairman of this meeting, calls the roll. Pogner, addressing the assembly, announces his offer of his daughter's hand for {{the winner of the}} song contest. When Hans Sachs argues that Eva ought to have a say in the matter, Pogner agrees that Eva may refuse the winner of the contest, but she must still marry a mastersinger. Another suggestion by Sachs, that the townspeople, rather than the masters, should be called upon to judge the winner of the contest, is squelched by the other masters. Pogner formally introduces Walther as a candidate for admission into the masterguild. Questioned by Kothner about his background, Walther states that his teacher in poetry was Walther von der Vogelweide whose works he studied in his own private library in Franconia, and his teachers in music were the birds and nature itself. Reluctantly the masters agree to admit him, provided he can perform a master-song of his own composition. Walther chooses love as the topic for his song and therefore is to be judged by Beckmesser alone, the [...] "Marker" [...] of the guild for worldly matters. [...] At the signal to begin (Fanget an!), Walther launches into a novel free-form tune (So rief der Lenz in den Wald), breaking all the mastersingers' rules, and his song is constantly interrupted by the scratch of Beckmesser's chalk on his chalkboard, maliciously noting one violation after another. When Beckmesser has completely covered the slate with symbols of Walther's <b>errors,</b> he <b>interrupts</b> the song and argues that {{there is no point in}} finishing it. Sachs tries to convince the masters to let Walther continue, but Beckmesser sarcastically tells Sachs to stop trying to set policy and instead, to finish making his (Beckmesser's) new shoes, which are overdue. Raising his voice over the masters' argument, Walther finishes his song, but the masters reject him and he rushes out of the church.|$|R
40|$|OBJECTIVE: Although initial {{research}} suggests that computerized physician order entry reduces pediatric medication errors, no comprehensive error surveillance studies have evaluated the effect of computerized physician order entry on children. Our objective was to evaluate comprehensively the effect of computerized physician order entry on the rate of inpatient pediatric medication <b>errors.</b> METHODS: Using <b>interrupted</b> time-series regression analysis, we reviewed all charts, orders, and incident reports for 40 admissions per month to the NICU, PICU, and inpatient pediatric wards for 7 months before and 9 months after implementation of commercial computerized physician order entry in a general hospital. Nurse data extractors, who were unaware of study objectives, used an established error surveillance method to detect possible errors. Two physicians who were unaware of when the possible error occurred rated each possible error. RESULTS: In 627 pediatric admissions, with 12, 672 medication orders written over 3234 patient-days, 156 medication errors were detected, including 70 nonintercepted serious medication errors (22 / 1000 patient-days). Twenty-three errors resulted in patient injury (7 / 1000 patient-days). In time-series analysis, there was a 7 % decrease in level of the rates of nonintercepted serious medication errors. There was {{no change in the}} rate of injuries as a result of error after computerized physician order entry implementation. CONCLUSIONS: The rate of nonintercepted serious medication errors in this pediatric population was reduced by 7 % after the introduction of a commercial computerized physician order entry system, much less than previously reported for adults, and there was no change in the rate of injuries as a result of error. Several human-machine interface problems, particularly surrounding selection and dosing of pediatric medications, were identified. Additional refinements could lead to greater effects on error rates...|$|R
40|$|Knowledge {{workers are}} {{frequently}} bombarded with interruption and {{are required to}} constant multitask. Previous observational studies found that frequent interrupted activities cause more errors and induce feelings of stress and frustration. Therefore, {{the aim of the}} current research is to investigate how interruption affects error detection performance. Current error detection research focused on the effectiveness of different checking methods. In this thesis, we concentrate on the psychological mechanism of error detection. A series of experiments was carried out {{to examine the effects of}} self-interruption (i. e. the pilot study and Study I) and external interruption (Study II) on error detection performance respectively. The pilot study and Study I focus on the effects of working memory (WM) load and capacity. The pilot study employed a think-aloud technique to verify the predictions on WM and self-interruption. The results suggest that low-capacity individuals (LWMC) rehearsed more frequent than high-capacity individuals (HWMC). In other words, LWMC have more self-initiated interruptions during the primary error detection task. Study I was carried out to test the generated predictions from the pilot study. A reliable interaction effect WM load × capacity was found: LWMC performed significantly worse in higher WM load conditions; however, HWMC’s performances were unaffected by higher WM load. Study II focuses on the effect of interruption task types and position. There was no difference between the different interruption task types proposed. However, a significant main effect was found in interruption position: participants performed significantly worse in terms of both error detection and resumption when they were interrupted just before the actual field is displayed (i. e. between-fields interruption) compared to when they can see what is in the field (i. e. within-field interruption). The results are explained in terms of Salvucci and Taategen’s (2008) threaded cognition. The concurrent execution of error detection and WM tasks in Study I is interpreted as concurrent multitasking performance; whereas the sequential execution of <b>error</b> detection and <b>interrupting</b> tasks is interpreted as sequential multitasking. The current study contributed to the understanding of error detection performance by examining the roles of both self-interruption and external interruption and extends the application boundary of threaded cognition to interpret the effect of interruptions...|$|R
40|$|This thesis {{describes}} an operational concept and {{the implementation of}} an automated process chain for the characterisation of hyperspectral sensors. The process chain includes the definition of sensor independent measurement procedures, the conduction of the measurements and {{the analysis of the}} recorded data to determine sensor parameters. The design driver for the setup of the Calibration Home Base (CHB) was the imaging spectrometer APEX (Airborne Prism EXperiment). But the facility can also be used for the characterisation of other optical sensors like the DLR sensors ROSIS (Reflective Optics System Imaging Spectrometer), ARES (Airborne Reflective Emissive Spectrometer) and AISA (Airborne Imaging Spectrometer for different Applications). The first part of this thesis describes the setup of the laboratory and its devices (chapter 2) as well as the operational concept for the automatic conduction of characterisation measurements (chapter 3). The concept divides the measurement process into three functional modules: a generic measurement control module (Master), a module for the control of the laboratory devices (Slave) and a sensor specific control module (Sensor) per sensor. The single modules interact via TCP/IP on the intranet by exchanging commands using well-defined XML formatted data. The implementation of the concept is described in Chapter 4. Utilising the new Slave software the laboratory can be operated fully automated. The operator in the laboratory does not need a broad knowledge of the operation of the individual devices. The necessary manual settings are interactively reported to the operator by the Slave module. Furthermore the Slave module monitors a multitude of possible errors of the single laboratory devices. In addition the Slave enables external users to use the laboratory needing nothing more than the description of the interface. The Master software is the central superordinate module which controls the Slave and the respective Sensor module. The Master hosts the various characterisation measurement procedures and executes the detailed instructions of the actual procedure(s). The Master offers many different options for the execution of measurements. For example, it is possible to use the emulate mode, or to control only the laboratory devices or the sensor, or to transfer data, or to carry out a data analysis. A time estimation function enables the evaluation of the estimated time for the execution of a measurement series. The Master module has comprehensive monitoring functions to ensure a safe operation of the laboratory, to intercept arising <b>errors,</b> to <b>interrupt</b> the measurement process and to inform the operator immediately. Besides the monitoring functions, the Master stores the actual device settings in measurement logs which are necessary for the analysis software. The current measurement process can be monitored using an internal web site. The operator has to access the laboratory only in case of a necessary manual interaction. This is beneficial for working safety aspects (dark room) and cost reasons. Each sensor needs its individual Sensor module for the communication with the Master module, due to different internal devices which have to be controlled (sensor mirrors, internal calibration devices, shutter, etc.). The sensor control software has to provide an input interface for the communication with the Sensor module. If this is missing the sensor control software has to be modified. For the implementation of a new sensor, a Sensor module is needed and a new sensor interface and a GUI to capture the sensor parameter values have to be implemented in the Master module. The implementations of the two sensors AISA and ROSIS are described in chapter 4. 4. With the newly developed software modules larger measurement series can be performed automatically in less time. The second part of the thesis was the development of generic characterisation measurement and analysis methods for imaging spectrometers in the wavelength range from 0. 4 μm to 2. 5 μm (chapter 5). The three main types are spectral, geometric and radiometric characterisation. Each of the defined measurement methods describes the setup of the necessary laboratory devices and explains the measurement principle. For the essential device parameters general selection criteria were defined. The developed IDL analysis procedures are generic except for the conversion of the raw data into the defined generic data format (ENVI cube format). Each analysis procedure has quality and error checks. The first and second part of this work have been verified independently using the sensors AISA and ROSIS (chapter 6). The third part of the thesis exemplifies characterisation measurements and data analysis performed for the two above mentioned sensors intending to test the methods and to draw some conclusions from the results...|$|R

