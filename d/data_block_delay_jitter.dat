0|5181|Public
40|$|The {{research}} results upon {{the application of}} the existing information transmission methods in polymodal info communication systems are presented herein. The analysis of the existing commutation ways and multiplexing schemes has revealed that modern means of telecommunication are capable of providing polymodal information delivery with the required quality to the customer correspondent terminal. Under these conditions substantial capacity resource consumption in the data transmission networks with a simultaneous static time multiplexing is required, however, it is easier to achieve the modality synchronization within that kind of an infrastructure. The data networks with a static time multiplexing demand employing more sophisticated supporting algorithms of the guaranteed <b>data</b> <b>blocks</b> delivery quality. However, due to the stochastic <b>data</b> <b>blocks</b> <b>delays</b> modality synchronizing during the off-line processing is more difficult to provide. Nowadays there are objective preconditions for a data networking realization which is invariable to the applied transmission technology. This capability is defined by a wide (person-to-person) application of the optical technologies in the transport infrastructure of the polymodal info communication systems. In case of the availability of the customer terminal and networking functioning matching mode it becomes possible to organize channels in the latter which can adaptively select the most effective networking technology according to the current volume allocation and modality types in the messages...|$|R
40|$|This {{dissertation}} {{addresses the}} problem of displaying live continuous media (e. g., digital audio and video) with low latency {{in the presence of}} <b>delay</b> <b>jitter,</b> where <b>delay</b> <b>jitter</b> is defined as variation in processing and transmission delay. Display in the presence of <b>delay</b> <b>jitter</b> requires a tradeoff between two goals: displaying frames with low latency and displaying every frame. Applications must choose a display latency that balances these goals. The driving problem for my work is workstation-based videoconferencing using conventional data networks. I propose a two-part approach. First, <b>delay</b> <b>jitter</b> at the source and destination should be controlled, leaving network transmission as the only uncontrolled source. Second, the remaining <b>delay</b> <b>jitter</b> should be accommodated by dynamically adjusting display latency in response to observed <b>delay</b> <b>jitter.</b> My thesis is that this approach is sufficient to support the low-latency display of continuous media transmitted over building-sized networks [...] ...|$|R
40|$|Abstract. A certain <b>delay</b> <b>jitter</b> {{will impact}} the time {{synchronization}} accuracy of PTP {{system in the}} IP packet switched network. Look the network <b>delay</b> <b>jitters</b> as independently distributed random noise, and use the Least Mean Square (LMS) filter to filter out the noise, that will help to relieve the <b>delay</b> <b>jitter</b> on the system synchronization accuracy. The simulation results show that, by using the LMS algorithm, the research can increase the synchronization accuracy and decrease the bad impact on master and slave time synchronization of packet <b>delay</b> <b>jitter...</b>|$|R
40|$|International audienceThis paper {{explores the}} perceptual effect of network <b>delay</b> <b>jitters</b> on consumers' quality of {{experience}} during packet-based VoIP conversations. Novel parametric speech quality models are proposed to faithfully capture speech quality impairment caused by network <b>delay</b> <b>jitter</b> and de-jittering buffer settings. The proposed {{models have been}} rigorously conceived following a regression analysis approach using {{a wide range of}} network <b>delay</b> <b>jitter</b> traces and de-jittering buffer settings. The network delay traces were synthetically produced by a stochastic generator, widely used by the research community. Moreover, new speech quality models, which quantify the individual and mixed perceptual effect of network random packet losses and <b>delay</b> <b>jitter,</b> are proposed and validated. The packet layer key parameters of proposed speech quality models, namely mean network <b>delay</b> <b>jitter</b> and de-jittering buffer delay, are easily accessible at run-time. Experimental results show that our no-reference speech quality models correlate very well with the standard full-reference speech quality models. Indeed, our performance evaluation shows correlation factors equal to 0. 97 and 0. 94 for, respectively, the G. 711 and the G. 729 CODECs. The proposed speech quality models should help design optimized schemes for network <b>delay</b> <b>jitter</b> removal, thus improving the perceptual speech quality for a given network <b>delay</b> <b>jitter</b> intensity. Moreover, the speech quality models can be used to accurately measure in a non-intrusive way the perceptual effect of network <b>delay</b> <b>jitter</b> and packet loss, separately. This constitutes a desirable feature, as it enables the smart mitigation of the sources of speech quality degradation...|$|R
40|$|We {{consider}} {{the definition of}} the Expedited Forwarding Per-Hop Behaviour (EF PHB) as given in RFC 2598 rfc 2598, and its impact on worst case end-to-end <b>delay</b> <b>jitter.</b> On one hand, the definition in RFC 2598 can be used to predict extremely low end-to-end <b>delay</b> <b>jitter,</b> independent of the network scale. On the other hand, we find that the worst case <b>delay</b> <b>jitter</b> can be made arbitrarily large, while each flow traverses at most a specified number of hops, if we allow networks to become arbitrarily larg...|$|R
40|$|Abstract—A multiple-input multiple-output (MIMO) {{satellite}} communications system for fixed-satellite services (FSS) is con-sidered. The MIMO Line-of-Sight (LOS) satellite channel is optimized to achieve maximum spectral efficiency. This requires an orthogonal MIMO channel matrix, ending up with large antenna spacing {{of the ground}} terminal antennas. As the main drawback, considerable propagation delays between the MIMO paths are observed, and the MIMO signal sub-streams interfere asynchronously {{in the order of}} several tens or hundreds of a symbol duration at the receiver. To cope with these delays, we propose a system architecture that uses a sufficiently large guard-interval or cyclic prefix between successive <b>data</b> <b>blocks.</b> The <b>delay</b> equalization at the receiver is then performed by a zero-forcing frequency domain equalizer for single-carrier transmission (SC-FDE). Thanks to the orthogonality of the considered MIMO channel, the SC-FDE architecture achieves even perfect spatial equalization of the multiplexed signal streams at considerably low implementation effort. The capacity reduction caused by the guard-interval is, moreover, mitigated by long <b>data</b> <b>blocks,</b> which can be used because of the long channel coherence times in FSS applications. The system concept reveals superior BER and transinformation performance, which is verified through fair comparison with current single-input single-output (SISO) systems. If the channel orthogonality is violated through narrow antenna spacing, the system performance degrades dramatically. I...|$|R
30|$|According to {{the network}} traffic class (e.g., conversational, streaming, interactive, or {{background}} class), the network selection algorithm exhibits different sensitivities to <b>delays</b> or <b>delay</b> <b>jitters.</b> In such scenarios, there is a tradeoff between the handoff delay and throughput during these handoff operations. Therefore, we propose a network selection algorithm by exploiting the information provided by both throughput and <b>delay</b> <b>jitter.</b>|$|R
40|$|Abstract- This paper {{presents}} {{the interpretation of}} simple IP network, MPLS enabled network, MPLS VPN network, MPLS VPN with QoS enabled network {{in the form of}} <b>Delay,</b> <b>Jitter</b> and Packet loss. The analysis shows that the network with simple IP network will have more <b>delay,</b> <b>jitter</b> and packet loss. Without QOS model in MPLS VPN network the <b>delay,</b> <b>jitter</b> and packet loss are rising with increase of traffic on the network. With the QoS model it provides almost constant <b>delay,</b> <b>jitter</b> and packet loss. Keywords- Multiprotocol Label Switching, Virtual Private Network, Quality of Service Multi Protocol Label Switching (MPLS) is a technology to overcome the problems of traditional IP routing and to make routing fast, manageable and able to carry heavy traffic, and accept new routing architectures. MPLS is a modern technique for forwarding network data. In a MPLS network packets are assigned labels and the labels are used to make forwarding decisions without IP lookups at each node. It is called multi protocol because it support...|$|R
40|$|Ethernets {{are very}} popular in LANs because of their ease of administration. With the growing trend towards {{distributed}} multimedia applications, it has become essential for the underlying systems to provide resource guarantees. Traditionally, Ethernet uses the Truncated Binary Exponential Backo (BEB) algorithm for medium access. BEB has very good characteristics for reducing the average latency of packets, but is not designed to support low <b>delay</b> <b>jitter.</b> We propose a distributed backoff algorithm which gives good bounds on the <b>delay</b> <b>jitter</b> and average <b>delay</b> for the transmission of realtime trac over shared 100 Mbit/sec Ethernet medium. Simulation results show that for a mixture of data and constant bit rate (CBR) video trac, our backoff algorithm has {{an order of magnitude}} less <b>delay</b> <b>jitter</b> than BEB for offered loads below 76 %. The <b>delay</b> <b>jitter</b> of our algorithm is around 4 times lower than BEB for simulation of a mixture of data and variable bit rate (VBR) video traffic...|$|R
40|$|Internet random {{time delay}} {{constitutes}} {{a major challenge}} for Internet-based teleoperation systems. Since the uncertain time delay may degrade the system performance, and even lead to instability. Although large-scale research works have been conducted on the understanding, testing, and analysis of Internet round trip time delay (RTT), it is not appropriate to use RTT in control methods design. It {{is well known that}} control commands arrive at the slave site in an aperiodic manner as a result of Internet random time delay. The subsequent control command will terminate the execution of the current command. Consequently, we will get precise information for slave system once the time <b>delay</b> <b>jitter</b> can be known in advance. This paper proposes a novel research idea for Internet-based teleoperation system {{from the point of view}} of <b>delay</b> <b>jitter</b> prediction. Statistical properties of the time <b>delay</b> <b>jitter</b> are investigated. Furthermore, the sparse multivariate linear regression method is used to give prediction on Internet time <b>delay</b> <b>jitter.</b> Simulation results demonstrate that sparse multivariate linear regressive method gives a precise prediction, which indicates that the proposed control method based on Internet time <b>delay</b> <b>jitter</b> has a broad prospect in teleoperation systems. The Institute of Electrical and Electronics Engineers (IEEE); IEEE Industrial Electronics Society (IEEE-IES); Ruhr University of Bochum (RUB...|$|R
3000|$|Since {{the purpose}} of this work should {{demonstrate}} that such a synchronization approach works with an off-the-shelf communication stack without MAC-timestamping, we have to expect a <b>delay</b> <b>jitter</b> in the order of milliseconds due to the uncertainty in the application and MAC layer. It should be mentioned that Lundelius and Lynch have shown in [6] that {{in the presence of a}} maximum <b>delay</b> <b>jitter</b> [...]...|$|R
40|$|As all-IP based mobile {{communications}} networks {{become a}} reality, {{it is important}} to understand how characteristics of these networks such as <b>delay</b> <b>jitter</b> can affect the overall performance of the system. We find that backbone network <b>delay</b> <b>jitter</b> can significantly influence the multiple access performance of an all-IP mobile communications system. To compensate for this, we introduce an adaptive jitter compensation technique that is linked to the system slot allocation and multiple access mechanisms. By linking these mechanisms, we are able to compensate for <b>delay</b> <b>jitter,</b> whilst also introducing novel resource allocation techniques for use with multimedia traffic. We detail the various techniques introduced, and show the performance enhancements possible when using such a scheme...|$|R
40|$|We {{consider}} {{the definition of}} the Expedited Forwarding PerHop Behaviour (EF PHB) as given in RFC 2598 [1], and its impact on worst case end-to-end <b>delay</b> <b>jitter.</b> On one hand, the definition in RFC 2598 can be used to predict extremely low end-to-end <b>delay</b> <b>jitter,</b> independent of the network scale. On the other hand, we find that the worst case <b>delay</b> <b>jitter</b> can be made arbitrarily large, while each flow traverses at most a specified number of hops, if we allow networks to become arbitrarily large; this is in contradiction with the previous statement. We analyze where the contradiction originates, and find the explanation. It resides {{in the fact that the}} definition in RFC 2598 is not easily implementable in schedulers we know of, mainly because it is not formal enough, and also because it does not contain an error term. We propose a new definition for the EF PHB, called "Packet Scale Rate Guarantee", which preserves the spirit of RFC 2598, while allowing a number of reasonable implementations, and has very useful properties for per-node and end-to-end network engineering. We show that this definition implies the rate-latency service curve guarantee. Then we propose some proven bounds on <b>delay</b> <b>jitter</b> for networks implementing this new definition, both in cases without loss and with loss. Keywords [...] -Differentiated Services; Expedited Forwarding; <b>Delay</b> <b>Jitter</b> I...|$|R
40|$|Abstract — Most of IEEE 802. 16 e {{scheduling}} {{proposals for}} realtime traffic using unsolicited grant service (UGS) {{focus on the}} throughput and maximum latency. <b>Delay</b> <b>jitter</b> {{and the effect of}} burst overhead have not yet been investigated. This paper introduces a new technique called SWIM for UGS scheduling that not only meets the delay constraint with optimal throughput but also minimizes the <b>delay</b> <b>jitter</b> and burst overhead...|$|R
40|$|When {{voice traffic}} is transported over a packet-based network, {{a number of}} {{conditions}} different from {{the ones in the}} traditional circuit-switched network will have an influence {{on the quality of the}} speech signal as perceived by the users. In particular, distortion of the voice signal due to <b>delay</b> <b>jitter</b> and partial loss of signal caused by packet loss will have an important impact. Therefore, in order to determine the influence of <b>delay</b> <b>jitter</b> and packet loss on the perceived quality, an objective speech quality assessment system, called DSLA, is used to predict the Mean Opinion Score for voice connections, which are set up on a test-bed, subject to artificially introduced network conditions. A decomposition of the voice degradation is made into different parts, due to sampling, digitization, encoding/decoding, packet loss and <b>delay</b> <b>jitter,</b> respectively. It Is found that <b>delay</b> <b>jitter</b> has a devastating influence on the perceived quality, when no dejittering buffer is used. However, when the received signal is dejittered, the degradation due to jitter is similar to the one caused by packet loss...|$|R
40|$|The aim of {{this paper}} is to study the {{behavior}} of two characteristics of ATM video traffic which are critical on the quality degradation introduced by the network. These characteristics are cell loss and <b>delay</b> <b>jitter.</b> This study takes the burstiness of the traffic, due to its variable-rate nature, as a reference. Cell loss can alter the characteristics of some parts of the images, and a high <b>delay</b> <b>jitter</b> may put some pixels of a frame into the next. This study has been carried out by measuring a set of multiplexed video traffic traces, always with the same fixed mean output load. First, the influence of frame synchronization on burstiness is shown, and then burstiness, buffer occupancy and <b>delay</b> <b>jitter</b> are measured by fixing that synchronization. This is done by using two ways of distributing the cells over the frame. The results show a real influence of burstiness on buffer occupancy and of the number of sources on <b>delay</b> <b>jitter,</b> so these measures are a valid way to calibrate the loss [...] ...|$|R
40|$|The {{end-to-end}} {{delay is}} often used to analyze network performance. There are different types of delay in the network: (artificial) delay due to unsynchronized clocks, transmission and propagation <b>delays,</b> and <b>delay</b> <b>jitter.</b> First, we show how to obtain a least squares estimate of the clock skew (i. e. difference between the sender and receiver clock frequencies) and the fixed delay. We then show that the linear programming algorithm proposed elsewhere to estimate the clock ratio is equivalent to the maximum likelihood estimator if the <b>delay</b> <b>jitter</b> is modeled as an independent, identically distributed random process with an exponential probability density function. Finally, we show how to estimate the <b>delay</b> <b>jitter</b> and propose an unbiased recursive least squares algorithm to estimate the clock skew and fixed delay...|$|R
40|$|Abstract. Most of the IEEE 802. 16 e Mobile WiMAX {{scheduling}} {{proposals for}} real-time traffic using Unsolicited Grant Service (UGS) {{focus on the}} throughput and guaranteed latency. The <b>delay</b> <b>jitter</b> {{and the effect of}} burst overhead have not yet been investigated. This paper introduces a new technique called Swapping Min-Max (SWIM) for UGS scheduling that not only meets the delay constraint with optimal throughput, but also minimizes the <b>delay</b> <b>jitter</b> and burst overhead...|$|R
3000|$|... [...]. In our approach, the {{convergence}} function {{is defined by}} the RFA and heavily depends on the maximum <b>delay</b> <b>jitter</b> [...]...|$|R
3000|$|... {{with respect}} to the <b>delay</b> <b>jitter.</b> For this reason we have {{introduced}} bounds for the relative adjustment value, that is, [...]...|$|R
40|$|The {{performance}} of real time {{applications such as}} video andvoice streams relies on packet <b>delay</b> <b>jitter.</b> Large <b>delay</b> jittercauses buffer overflow or underflow at the receiver end and theuser encounters interrupts. The <b>delay</b> <b>jitter</b> is mainly due to theperturbation of background traffic in the bottleneck router. Fulton and Li provide an analytical approximationfor the first-order and second-order statistics of <b>delay</b> <b>jitter.</b> However, their analysis {{is based on a}} Markovian model of thebackground traffic, which is not quite suitable for Internettraffic and requires lots of computational effort. We propose anefficient method to predict the jitter variance of a CBR(constant-bit rate) connection based on the wavelet model of thebackground traffic. The wavelet analysis extracts the statisticalproperties of background traffic and the analysis result can beused to predict an upper bound for the jitter variance of the CBRconnection...|$|R
30|$|The {{approach}} has been evaluated by simulation and an implementation in a real testbed environment. Several experiments based on an all-to-all topology have shown {{that it is possible}} to achieve a synchronization precision which is lower than 1 [*] milliseconds. Unfortunately, the testbed system suffered from an unexpected <b>delay</b> <b>jitter</b> and an additional communication delay. For this reason, the testbed results considering highly multihop topologies were worse compared to the simulation results with a low <b>delay</b> <b>jitter.</b>|$|R
40|$|This paper {{describes}} queue monitoring, {{a policy}} {{for managing the}} effect of <b>delay</b> <b>jitter</b> on audio and video in computer-based conferences. By observing <b>delay</b> <b>jitter</b> over time, this policy dynamically adjusts display latency {{in order to support}} low-latency conferences with an acceptable gap rate. Queue monitoring is evaluated by comparing it with two other policies in an empirical study of a computer-based conferencing system. Our results show that queue monitoring performs well under a variety of observed network loads...|$|R
40|$|Most of the IEEE 802. 16 e Mobile WiMAX {{scheduling}} {{proposals for}} real-time traffic using Unsolicited Grant Service (UGS) {{focus on the}} throughput and the guaranteed latency. The delay variation or <b>delay</b> <b>jitter</b> {{and the effect of}} burst overhead have not yet been investigated. This paper introduces a new technique called Swapping Min-Max (SWIM) for UGS scheduling that not only meets the delay constraint with optimal throughput, but also minimizes the <b>delay</b> <b>jitter</b> and burst overhead. Comment: IEEE Systems Journal, August 201...|$|R
40|$|In this paper, we {{analyze the}} effects of <b>delay</b> <b>jitter</b> on {{receiver}} buffer requirements in distributed Videoon -Demand systems. We use a general purpose realtime producer-consumer model to describe the distributed architecture of a Video-on-Demand system. We prove a Theorem that states {{that the amount of}} data in the receiver buffer is linear in network <b>delay</b> <b>jitter.</b> We present necessary conditions for preventing buffer overflow and underflow situations. Finally, we show through numerical analysis that controlling network <b>delay</b> <b>jitter</b> results in reducing buffer requirements at the receiver. Keywords: Distributed VoD, Network Performace Parameters, Buffer Requirements 1 Introduction The next generation of distributed Video-onDemand (VoD) systems will be supported by different combinations of high speed networks, high capacity storage devices, and powerful workstations and PCs. A typical VoD architecture consists of three subsystems: a real-time producer of synchronized multimedia data, a [...] ...|$|R
40|$|In {{multimedia}} systems end-to-end <b>delay</b> <b>jitter</b> has a {{great impact}} on the continuity of information playback. Therefore it is necessary to introduce appropriate mechanisms to compensate for delay variations, so that the intramedia and intermedia temporal relationships can be preserved. In this paper, two methods for compensation of the network <b>delay</b> <b>jitter</b> in a distributed multimedia retrieval service are compared: the first is based on prediction of the network <b>delay</b> <b>jitter</b> suffered by each information unit and retrieval time modification at the source site; the second is based on a compensation buffer at the destination site. Comparison is made by assuming a master/slave relationship between the monomedia streams composing the multimedia data flow. Keywords: multimedia communications, intramedia and intermedia synchronization, jitter, skew 2 1. Introduction In traditional telecommunication services, user needs determine different performance requirements in terms of delay and packet [...] ...|$|R
40|$|Abstract — We {{consider}} {{the definition of}} the Expedited Forwarding Per-Hop Behaviour (EF PHB) as given in RFC 2598 [1], and its impact on worst case end-to-end <b>delay</b> <b>jitter.</b> On one hand, the definition in RFC 2598 can be used to predict extremely low end-to-end <b>delay</b> <b>jitter,</b> independent of the network scale. On the other hand, we find that the worst case <b>delay</b> <b>jitter</b> can be made arbitrarily large, if we allow networks to become arbitrarily large; this is in contradiction with the previous statement. We analyze where the contradiction originates, and find the explanation. It resides {{in the fact that the}} definition in RFC 2598 is not easily implementable in schedulers we know of, mainly because it is not formal enough, and also because it does not contain an error term. We propose a new definition for the EF PHB, called “Packet Scale Rate Guarantee”, which preserves the spirit of RFC 2598, while allowing a number of reasonable implementations, and has very useful properties for per-node and end-to-end network engineering. We show that this definition is stronger than the rate-latency service curve guarantee. Then we propose some proven bounds on <b>delay</b> <b>jitter</b> for networks implementing this new definition, both in cases without loss and with loss...|$|R
40|$|Abstract. An {{end to end}} (e 2 e) packet <b>delay</b> <b>jitter</b> has a {{negative}} impact on the offered QoS in IP networks. Therefore, in this paper we clarify this passive impact, and discuss the <b>delay</b> <b>jitter</b> that is based on the analysis done in [1]. However, here we focus on the expedited forwarding (EF) class in the differentiated services network (DiffServ). EF flows are represented by renewalperiodic ON-OFF flows, and the background (BG) flows by Poisson process. We analyze the jitter effects of these BG flows on EF flows patterns when they are serviced by a single class scheduling discipline, such as FIFO, and a multicalss scheduling discipline, such as static priority service discipline (SPS). Thus, we have simulated a DiffServ network, where different users were provided with different service classes. Consequently, along the simulations different scenarios were formed to see the impact of BG flows and their characteristics on EF flows. As a result, we have found out from these simulations that the EF Per-Hop Behaviors (PHBs) configuration according to RFC 2598 can’t stand alone in guaranteeing the EF flows <b>delay</b> <b>jitter.</b> Therefore, playout buffers must be added to the DiffServ network for handling the EF <b>delay</b> <b>jitter</b> problem...|$|R
40|$|We {{consider}} {{the definition of}} the Expedited Forwarding Per-Hop Behaviour (EF PHB) as given in RFC 2598, and its impact on worst case end-to-end <b>delay</b> <b>jitter.</b> On one hand, the definition in RFC 2598 can be used to predict extremely low end-to-end <b>delay</b> <b>jitter,</b> independent of the network scale. On the other hand, we find that the worst case <b>delay</b> <b>jitter</b> can be made arbitrarily large, if we allow networks to become arbitrarily large; this is in contradiction with the previous statement. We analyze where the contradiction originates, and find the explanation. It resides {{in the fact that the}} definition in RFC 2598 is not easily implementable in schedulers we know of, mainly because it is not formal enough, and also because it does not contain an error term. We propose a new definition for the EF PHB, called ``Packet Scale Rate Guarantee', which preserves the spirit of RFC 2598, while allowing a number of reasonable implementations, and has very useful properties for per-node and end-to-end network engineering. We show that this definition is stronger than the rate-latency service curve guarantee. Then we propose some proven bounds on <b>delay</b> <b>jitter</b> for networks implementing this new definition, both in cases without loss and ith loss...|$|R
40|$|The {{conventional}} synchronous {{model of}} digital video, in which video is reconstructed synchronously at the decoder on a frame-by-frame basis, assumes its transport is delayjitter-free. This assumption is inappropriate for modern integrated service packet networks {{such as the}} Internet for network <b>delay</b> <b>jitter</b> varies widely. Furthermore, multiframe buffering is not a viable solution in interactive applications such as video conferencing. We have proposed a “delay cognizant ” model of video coding (DCVC) that segments an incoming video into two video flows with different delay attributes. The DCVC decoder operates in an asynchronous reconstruction mode that attempts to maintain image quality {{in the presence of}} network <b>delay</b> <b>jitter.</b> Our goal is to maximize the allowable delay of one flow relative to that of the other with minimal effect on image quality since an increase in the delay offset reflects more tolerance to transmission <b>delay</b> <b>jitter.</b> Subjective quality evaluations indicated for highly compressed sequences, differences in video quality of reconstructed sequences with large delay offsets as compared with zero delay offset are small. Moreover, in some cases asynchronously reconstructed video sequences look better than the zero delay case. DCVC is a promising solution to transport <b>delay</b> <b>jitter</b> in low-bandwidth video conferencing with minimal impact on video quality...|$|R
40|$|Abstract — This paper {{proposes a}} link {{utilization}} estimation {{scheme based on}} Round-Trip Time (RTT) measurement with consideration of the processing <b>delay</b> <b>jitter</b> and practical timer granularity. In a previous work, RTT measurements are used to estimate link utilization from a probability distribution of the minimum RTTs on a link where the RTT variation {{is considered to be}} caused by only queuing delay. However, the original RTT-based scheme has problems with the two factors of processing <b>delay</b> <b>jitter</b> and actual timer granularity. The first problem is that processing <b>delay</b> <b>jitter</b> is only one cause of RTT variation. The observer cannot differentiate the impact of queuing from that of processing. The second problem is that measuring the minimum RTT is difficult if the timing accuracy is of the order of micro-seconds because an observer cannot determine whether an RTT value is minimum or not. The proposed scheme, which extends the previous scheme, identifies and eliminates the effects of processing <b>delay</b> <b>jitter</b> and estimates the probability of the minimum RTT with micro-second order timer granularity. The former is achieved with division by an appearance probability value of the processing delays at the ingress and egress nodes of a targeted link from the estimated RTTs on the target link. To realize the latter, the proposed scheme sets a suitable range from estimated RTTs on a target link. Experiments show that the proposed scheme effectively eliminates the jitter effects under low load with a 0. 2 reduction in deviation from the true value. Index Terms—link utilization, round-trip time, active measurement, processing <b>delay</b> <b>jitter,</b> timer granularity, timer jitter. L I...|$|R
40|$|We present queueing-based {{algorithms}} {{to calculate}} the bandwidth required for a video stream so that the three main Quality of Service constraints, i. e., end-to-end <b>delay,</b> <b>jitter</b> and packet loss, are ensured. Conversational and streaming video-based applications are becoming {{a major part of}} the everyday Internet usage. The quality of these applications (QoS), as experienced by the user, depends on three main metrics of the underlying network, namely, end-to-end <b>delay,</b> <b>jitter</b> and packet loss. These metrics are, in turn, directly related to the capacity of the links that the video traffic trav...|$|R
30|$|The {{simulator}} and testbed {{results have}} shown that the simulator provides promising results which are mostly similar to the testbed results. Several experiments {{have shown that}} the rate calibration works well in the presence of high <b>delay</b> <b>jitter</b> and transmission <b>delay.</b> However, the results from the multihop topology experiments in the testbed system are worse compared to the simulation results. This {{comes from the fact that}} our testbed environment suffers from an unexpected <b>delay</b> <b>jitter</b> and further an additional communication delay which was not regarded in the state correction algorithm.|$|R
40|$|Introduction In the {{previous}} chapters, I {{have demonstrated that}} {{through the use of}} real-time systems design, analysis, and implementation techniques, it is possible to bound the <b>delay</b> <b>jitter</b> experienced by continuous media frames due to causes other than transmission over the network. In this and the following chapter, I address the question of displaying CM frames {{in the presence of the}} potentially unbounded <b>delay</b> <b>jitter</b> incurred when transmitting over the network. In Chapter 1, I discussed the fact that, in the presence of <b>delay</b> <b>jitter,</b> there is a fundamental tradeoff between display latency and gap frequency; the lower the display latency, the higher the probability of encountering an end-to-end delay sufficient to cause a gap. An application that displays continuous media frames must manage this tradeoff to produce a balance between display latency and gaps that results in good quality playout. It is useful to consider the tradeoff between display latency and gap frequenc...|$|R
40|$|Abstract. Mobile WiMAX, {{based on}} IEEE 802. 16 e {{provides}} five different service classes: UGS, ertPS, rtPS, nrtPS and BE, {{to deliver the}} best quality experiences for mobile WiMAX users. Each service class is incorporated with several quality of service (QoS) mechanisms at the Media Access Control (MAC) layer to support the various applications. To ensure that the QoS of each class is provisioned, the uplink scheduler needs to allocate the available resources effectively {{to meet with the}} QoS parameters such as the <b>delay,</b> <b>delay</b> <b>jitter</b> and throughput requirements. In this paper, we propose a threshold-based priority algorithm to improve on the <b>delay</b> <b>jitter</b> of the UGS and rtPS classes. The proposed algorithm works by adjusting the threshold imposed on the nrtPS queue. The threshold value here represents the number of bandwidth request message in the nrtPS queue. Simulation results show that our proposed algorithm reduces the <b>delay</b> <b>jitter</b> for the UGS and rtPS when compared with other scheduling algorithms...|$|R
40|$|There is {{currently}} {{great interest in}} transmitting continuous media by packet-switched networks. In particular, {{we are interested in}} audio data. Variation in packet arrival times (called <b>delay</b> <b>jitter)</b> can interrupt the steady delivery of the data stream. We can hide <b>delay</b> <b>jitter</b> by buffering the data before playing it. How long should we buffer? If the buffer time is short, we do not effectively hide <b>delay</b> <b>jitter.</b> If it is large, we introduce undesirable latency into the stream. This project explores methods of choosing this buffer time. We define a model of a stream and choose a measure of sound quality. We present probability theory based on our model that allows us to choose the buffer size for exponentially distributed packet delivery times. If the delivery times are not exponential, we define a new heuristic solution to choosing the buffer size called History (based on an ordered list of past interarrival times) and compare it to two statistical heuristics: StDev (based on standard [...] ...|$|R
