85|201|Public
2500|$|Ancient Roman {{architecture}} {{adopted the}} <b>external</b> <b>language</b> of classical Greek architecture {{for the purposes}} of the ancient Romans, but differed from Greek buildings, becoming a new architectural style. The two styles are often considered one body of classical architecture. [...] Roman architecture flourished in the Roman Republic and even more so under the Empire, when the great majority of surviving buildings were constructed. It used new materials, particularly concrete, and newer technologies such as the arch and the dome to make buildings that were typically strong and well-engineered. [...] Large numbers remain in some form across the empire, sometimes complete and still in use.|$|E
2500|$|In 1986, Chomsky {{proposed}} {{a distinction between}} I-language and E-language, similar but not identical to the competence/performance distinction. [...] "I-language" [...] refers to internal language and is contrasted with <b>external</b> <b>language</b> (or E-language). I-language is taken to be the object of study in linguistic theory; it is the mentally represented linguistic knowledge that a native speaker of a language has, and is therefore a mental object [...] from this perspective, most of theoretical linguistics is a branch of psychology. E-language encompasses all other notions of what a language is, for example {{that it is a}} body of knowledge or behavioural habits shared by a community. Thus, E-language is not itself a coherent concept, and Chomsky argues that such notions of language are not useful in the study of innate linguistic knowledge, i.e., competence, even though they may seem sensible and intuitive, and useful in other areas of study. Competence, he argues, can only be studied if languages are treated as mental objects.|$|E
5000|$|... #Subtitle level 3: Possible {{relations}} to <b>external</b> <b>language</b> families ...|$|E
5000|$|Radio Habana Cuba - <b>external,</b> <b>languages</b> include Spanish, English, French, Portuguese ...|$|R
40|$|We {{investigate}} the computational {{complexity of the}} basic type of contextual languages, that is, the ones introduced by Marcus in [M 2] and called subsequently <b>external</b> contextual <b>languages.</b> Our main result states {{that the most important}} family of <b>external</b> contextual <b>languages,</b> namely that of languages generated by grammars with context-free choice, contains only polynomial time parsable languages...|$|R
40|$|This paper uses Bernstein’s {{concept of}} grammar to {{illuminate}} aspects of educational research. The relationship between internal and <b>external</b> <b>languages</b> of description {{in the production}} of disciplinary knowledge is examined. This leads to a reflection on the various factors both internal and external to the discipline of educational studies that foster and undermine forms of research knowledge...|$|R
50|$|Language support uses <b>external</b> <b>language</b> files, and {{includes}} Albanian, Bulgarian, Catalan, Chinese, Czech, Danish, Dutch, English, Spanish, Estonian, French, Galician, German, Greek, Hungarian, Italian, Korean, Norwegian, Polish, Portuguese, Romanian, Russian, Serbian, Swedish, Turkish, and Ukrainian.|$|E
50|$|Soar can {{interface}} with <b>external</b> <b>language</b> environments including C++, Java, Tcl, and Python through the Soar Markup Language (SML). SML {{is a primary}} mechanism for creating instances of Soar agents and interacting with their I/O links.|$|E
50|$|This is a materialist {{rather than}} spiritualist notion, the mind being {{thought of as}} {{extending}} over the brain, <b>external</b> <b>language</b> and media such as charts, diaries and indeed any material substrate that can become intimately involved in our mindful actions.|$|E
50|$|Radio Prague: <b>external</b> broadcasts, six <b>languages</b> available.|$|R
40|$|Spreadsheets are {{ubiquitous}} end-user programming tools, {{but lack}} {{even the simplest}} abstraction mechanism: The ability to encapsulate a computation as a function. This paper presents a solution {{in the form of}} sheetdefined functions, which are built from well-known spreadsheet cells, formulas and references. They should be understandable to most spreadsheet users, yet offer far more programming power than standard spreadsheet programs. We present a prototype implementation of sheet-defined functions and several example applications. We show that they can perform as well as built-in functions and better than <b>external</b> <b>languages</b> such as VBA. ...|$|R
40|$|AbstractIt is {{investigated}} for which {{choice of a}} parameter q, denoting the number of contexts, the class of simple <b>external</b> contextual <b>languages</b> is iteratively learnable. On the one hand, the class admits, for all values of q, polynomial time learnability provided an adequate choice of the hypothesis space is given. On the other hand, additional constraints like consistency and conservativeness {{or the use of}} a one–one hypothesis space changes the picture — iterative learning limits the long term memory of the learner to the current hypothesis and these constraints further hinder storage of information via padding of this hypothesis. It is shown that if q> 3, then simple <b>external</b> contextual <b>languages</b> are not iteratively learnable using a class preserving one–one hypothesis space, while for q= 1 it is iteratively learnable, even in polynomial time. It is also {{investigated for}} which choice of the parameters the simple <b>external</b> contextual <b>languages</b> can be learnt by a consistent and conservative iterative learner...|$|R
5000|$|... {{things were}} still a bit unclear. ICAD 8.3 was delivered.The recent COE Aerospace Conference had a {{discussion}} about the futures of KBE. One issue involves the stacking of 'meta' issues within a computer model. How this is resolved, whether by more icons or the availability of an <b>external</b> <b>language,</b> remains to be seen.|$|E
50|$|In 1986, Chomsky {{proposed}} a distinction {{similar to the}} competence/performance distinction, entertaining {{the notion of an}} I-Language (internal language) which is the intrinsic linguistic knowledge within a native speaker and E-Language (<b>external</b> <b>language)</b> which is the observable linguistic output of a speaker. It was I-Language that Chomsky argued should be the focus of inquiry, and not E-Language.|$|E
50|$|The Proto-Mon-Khmer {{language}} (Proto-Austroasiatic) is the reconstructed {{ancestor of}} the Mon-Khmer languages, a purported primary {{branch of the}} Austroasiatic language family. However, Mon-Khmer as a taxon has been abandoned in recent classifications, making Proto-Mon-Khmer synonymous with Proto-Austroasiatic; the Munda languages, which are not well documented, and have been restructured through <b>external</b> <b>language</b> contact, have not {{been included in the}} reconstructions.|$|E
5000|$|A hybrid {{strategy}} of instruction should be employed that combines Konstantinov's {{system and the}} best practices of leading Western mathematics departments (such as teaching assistantships, a cumulative grading scheme, an <b>external</b> English <b>language</b> proficiency evaluation, etc.).|$|R
50|$|To support user {{interface}} widgets, NeWS expanded the original PostScript stack-based language into a complete object oriented (OO) programming style with inheritance. This eliminated {{the need for}} an <b>external</b> OO <b>language</b> to build a complete application.|$|R
50|$|Based on <b>external</b> identification: the <b>language(s)</b> one is {{identified}} with/as a speaker of, by others.|$|R
50|$|Syntactic preprocessors were {{introduced}} with the Lisp family of languages. Their {{role is to}} transform syntax trees according {{to a number of}} user-defined rules. For some programming languages, the rules are written in the same language as the program (compile-time reflection). This is the case with Lisp and OCaml. Some other languages rely on a fully <b>external</b> <b>language</b> to define the transformations, such as the XSLT preprocessor for XML, or its statically typed counterpart CDuce.|$|E
50|$|Tiki is an {{international}} project, supporting many languages. The default interface language in Tiki is English, but any language that can be encoded and displayed using the UTF-8 encoding can be supported. Translated strings can be included via an <b>external</b> <b>language</b> file, or by translating interface strings directly, through the database. As of 29 September 2005, Tiki had been fully translated into eight languages and reportedly 90% or more translated into another five languages, as well as partial translations for nine additional languages.|$|E
5000|$|Ancient Roman {{architecture}} {{adopted the}} <b>external</b> <b>language</b> of classical Greek architecture for {{the purposes of}} the ancient Romans, but differed from Greek buildings, becoming a new architectural style. The two styles are often considered one body of classical architecture. Roman architecture flourished in the Roman Republic and even more so under the Empire, when {{the great majority of}} surviving buildings were constructed. It used new materials, particularly concrete, and newer technologies such as the arch and the dome to make buildings that were typically strong and well-engineered. Large numbers remain in some form across the empire, sometimes complete and still in use.|$|E
40|$|This article {{reports on}} a review of {{empirical}} research published in selected higher education journals in 2008, which was focused on examining how often theories are developed through research. This review found relatively little evidence of theory development. Drawing on the notions of internal and <b>external</b> <b>languages</b> of description, {{it is argued that}} this is partly {{due to the lack of}} explicit conceptualisation of the object of research in the writing-up of higher education research, and the lack of a discursive gap between the ways in which research objects are conceptualised and the ways in which data are analysed in accounts of empirical research into higher education. In conclusion, four ways of promoting such a discursive gap in the reporting of research are discussed...|$|R
40|$|We {{investigate}} three dierent {{aspects of}} <b>external</b> contextual <b>languages,</b> focusing mainly on linear selector sets: (1) comparison with conditional languages regarding their descriptive capacity (2) {{as well as}} their computational complexity and (3) inductive inference of <b>external</b> contextual <b>languages</b> with various selector set families. 1 Introduction External contextual grammars were dened by Marcus [24] in 1969 in order to model basic phenomena in descriptive linguistics. The generative process in a contextual grammar is based on the linguistic operation of inserting a word into a given context. Independently, only one year later, Navratil [25] presented conditional grammars|context-free grammars with regular conditions|in order to model more natural phenomena using context-independent derivation rules. There, a production ! is applicable to a sentential form xy if the sentential form belongs to the condition set of !. Since the introduction of both concepts, many for [...] ...|$|R
40|$|We have {{developed}} an implementation of sheet-defined functions, a mechanism that allows spreadsheet users to define their own functions, using only spreadsheet concepts such as cells, formulas and references, and no <b>external</b> programming <b>languages.</b> This position paper presents the motivation and vision of this work, describes the features of our prototype implementation, and outlines future work...|$|R
50|$|Ancient Roman {{architecture}} {{adopted the}} <b>external</b> <b>language</b> of classical Greek architecture {{for the purposes}} of the ancient Romans, but differed from Greek buildings, becoming a new architectural style. The two styles are often considered one body of classical architecture. Roman architecture flourished in the Roman Republic and even more so under the Empire, when the great majority of surviving buildings were constructed. It used new materials, particularly concrete, and newer technologies such as the arch and the dome to make buildings that were typically strong and well-engineered. Large numbers remain in some form across the empire, sometimes complete and still in use.|$|E
5000|$|In 1986, Chomsky {{proposed}} {{a distinction between}} I-Language and E-Language, similar but not identical to the competence/performance distinction. [...] "I-language" [...] refers to Internal language and is contrasted with <b>External</b> <b>Language</b> (or E-language). I-Language is taken to be the object of study in linguistic theory; it is the mentally represented linguistic knowledge that a native speaker of a language has, and is therefore a mental object [...] - [...] from this perspective, most of theoretical linguistics is a branch of psychology. E-Language encompasses all other notions of what a language is, for example {{that it is a}} body of knowledge or behavioural habits shared by a community. Thus, E-Language is not itself a coherent concept, and Chomsky argues that such notions of language are not useful in the study of innate linguistic knowledge, i.e., competence, even though they may seem sensible and intuitive, and useful in other areas of study. Competence, he argues, can only be studied if languages are treated as mental objects. The I-language concept is given primacy in a recent textbook.|$|E
5000|$|An {{alternative}} approach to CTC-based models are attention-based models. Attention-based ASR models were introduced simultaneously by Chan et al. of Carnegie Mellon University and Google Brain and Bahdanaua et al. of the University of Montreal in 2016. The model named [...] "Listen, Attend and Spell" [...] (LAS), literally [...] "listens" [...] to the acoustic signal, pays [...] "attention" [...] to {{different parts of}} the signal and [...] "spells" [...] out the transcript one character at a time. Unlike CTC-based models, attention-based models do not have conditional-independence assumptions and can learn all the components of a speech recognizer including the pronunciation, acoustic and language model directly. This means, during deployment, {{there is no need to}} carry around a language model making it very practical for deployment onto applications with limited memory. By the end of 2016, the attention-based models have seen considerable success including outperforming the CTC models (with or without an <b>external</b> <b>language</b> model). Various extensions have been proposed since the original LAS model. Latent Sequence Decompositions (LSD) was proposed by Carnegie Mellon University, MIT and Google Brain to directly emit sub-word units which are more natural than English characters; University of Oxford and Google DeepMind extended LAS to [...] "Watch, Listen, Attend and Spell" [...] (WLAS) to handle lip reading surpassing human-level performance.|$|E
50|$|Minicom is a text-based modem {{control and}} {{terminal}} emulation program for Unix-like operating systems, originally written by Miquel van Smoorenburg, and {{modeled after the}} popular MS-DOS program Telix. Minicom includes a dialing directory, ANSI and VT100 emulation, an (<b>external)</b> scripting <b>language,</b> and other features. Minicom is a menu-driven communications program. It also has an auto ZMODEM download.|$|R
50|$|Year Eleven {{students}} must complete six subjects at school regardless of any external LOTE. Students can only undertake {{a maximum of}} two VCE subjects before Year Twelve providing their GPA from Year Nine and Ten is high enough. Many students choose to take Biology 3/4, Mathematical Methods 3/4 and/or and <b>External</b> LOTE <b>language</b> such as Chinese, Korean or Vietnamese.|$|R
40|$|This paper {{starts from}} the {{following}} outcome: a func-tionality of a program can be cut up to little pieces and then reassembled down to a layered structure. The very late composition {{is the ability to}} get and use the features of the functionality only when it is necessary, and even after the program has been compiled. We achieve this purpose and we lay out a complete implementation which sets up two autonomous sides in the functionality building process: on the one hand, the features are combined as external ab-stract operators; the <b>external</b> <b>languages</b> derive from XML by being dedicated to a domain. On the other hand, the use of the resultant functionality is independent and does not interfere in the composition process. Our implementation focuses on the compose-time (as opposed to runtime) and exactly matches the layered design; it can be integrated in real world applications right now. ...|$|R
40|$|TeD is a {{language}} designed mainly for modeling telecommunication networks. The TeD language specification is separated {{into two parts}} [...] - (1) a "meta" language (2) an "external" language. The met{{a language}} specification {{is concerned with the}} high [...] level description of the structural and behavioral interfaces of various network elements. The <b>external</b> <b>language</b> specification is concerned with the detailed low-level description of the implementation of the structure and behavior of the network elements. The meta language, called MetaTeD, is described in a separate related document. An <b>external</b> <b>language</b> specification, with C++ as the <b>external</b> <b>language,</b> is described in this document. A software support system for the development and parallel simulation of TeD models is also described...|$|E
40|$|TeD is a {{language}} designed mainly for modeling telecommunication networks. The TeD language specification is separated {{into two parts}} [...] - (1) a met{{a language}} (2) an <b>external</b> <b>language.</b> The meta language specification {{is concerned with the}} high [...] level description of the structural and behavioral interfaces of various network elements. The <b>external</b> <b>language</b> specification is concerned with the detailed low-level description of the implementation of the structure and behavior of the network elements. The meta language, called MetaTeD, is described in a separate related document. An <b>external</b> <b>language</b> specification, with C ++ as the <b>external</b> <b>language,</b> is described in this document. A software support system for the development and parallel simulation of TeD models is also described. CONTENTS 1 Contents 1 Introduction 2 2 Language Restrictions 3 2. 1 Re-entrant code : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 3 2. 2 Input/Output : : : : : : : : : : : : : : : : : [...] ...|$|E
40|$|TeD is a {{language}} designed mainly for modeling telecommunication networks. The TeD language speci-cation is separated {{into two parts}} | (1) a met{{a language}} (2) an <b>external</b> <b>language.</b> The meta language speci cation {{is concerned with the}} high{level description of the structural and behavioral interfaces of various network elements. The <b>external</b> <b>language</b> speci cation is concerned with the detailed low-level de-scription of the implementation of the structure andbehavior of the network elements. In this document, we present an introduction to the TeD language, along with a brief tutorial using an example model of a simple ATM multiplexer. ...|$|E
40|$|Syntax Trees 1 Steve Atkinson November 8, 1993 1 Project Supervisor: Dr Paul A. Bailes Abstract Researchers in {{the field}} of {{software}} re-engineering have recognised that transformations acting upon the abstract syntax trees of source programs are a useful method of preserving the semantics of program constructs whilst changing the language in which they are expressed. Software re-engineering environments will therefore require infrastructure support for storing abstract syntax trees. This report describes the development of an open architecture object store system which provides this support, and then demonstrates how the openness of the system allows communication of abstract syntax structures between the system and multiple <b>external</b> <b>languages.</b> Acknowledgements I {{would like to thank the}} following people for help during the progress of this project: Murray Chapman and Ian Peake for their technical advice, Eric Salzman and Dan Johnston for constructive criticisms and helpful ques [...] ...|$|R
50|$|Not all {{language}} {{changes are}} caused by <b>external</b> influences. Sometimes <b>language</b> changes {{through the course of}} time. One example of such a change is θ-fronting (Kerswill, 2003).|$|R
40|$|The aim of {{this paper}} is to present S-DSL, an <b>external</b> domain-specific <b>language</b> for {{programming}} sensor nodes, which seeks to facilitate the programming of devices using easily understood language that allows the developer to focus on the states which can pass a node and the actions to be developed in each state. Eje: Workshop Procesamiento de señales y sistemas de tiempo real (WPSTR...|$|R
