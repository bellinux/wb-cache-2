144|10000|Public
5000|$|Donald D. Chamberlin, Ph.D., Computer scientist, {{one of the}} {{principal}} designers of the SQL <b>database</b> <b>query</b> <b>language.</b>|$|E
50|$|Comprehensions were {{proposed}} as a query notation for databases and were {{implemented in the}} Kleisli <b>database</b> <b>query</b> <b>language.</b>|$|E
50|$|SQL:2006 or ISO/IEC 9075:2006 {{standard}} {{is the fifth}} revision of the ISO standard for the SQL <b>database</b> <b>query</b> <b>language.</b>|$|E
5000|$|... <b>database</b> <b>query</b> <b>languages,</b> like SQL {{that have}} UNIX_TIMESTAMP (...) like {{commands}} ...|$|R
50|$|Common {{declarative}} languages {{include those}} of <b>database</b> <b>query</b> <b>languages</b> (e.g., SQL, XQuery), regular expressions, logic programming, functional programming, and configuration management systems.|$|R
50|$|Some logical {{programming}} languages, such as Prolog, and <b>database</b> <b>query</b> <b>languages,</b> such as SQL, while declarative in principle, {{also support}} a procedural style of programming.|$|R
5000|$|SQL/DS (Structured Query Language/Data System), {{released}} in 1981, was IBM's first commercial relational database management system. It implemented the SQL <b>database</b> <b>query</b> <b>language.</b>|$|E
50|$|SQL:2003 is {{the fourth}} {{revision}} of the SQL <b>database</b> <b>query</b> <b>language.</b> The standard consists of 9 parts which are described in detail in SQL. It was updated by SQL:2006.|$|E
50|$|In {{computer}} science, domain {{relational calculus}} (DRC) is a calculus that {{was introduced by}} Michel Lacroix and Alain Pirotte as a declarative <b>database</b> <b>query</b> <b>language</b> for the relational data model.|$|E
40|$|While {{the basic}} idea of using Conceptual Graphs as query {{interface}} to relational databases has already been stated very early in [Sow 84], no approach so far has covered the full expressiveness of modern <b>database</b> <b>query</b> <b>languages.</b> Especially negation and the so-called aggregating functions have not been treated. In this paper, we present Nested Concept Graphs with Cuts which extend the syntactical Concept Graph (which mathematize Conceptual Graphs) to treat simultaneously negation and nesting. With these extensions they have the expressiveness of <b>database</b> <b>query</b> <b>languages</b> (e. g. SQL), which will be exemplified by selected queries...|$|R
5000|$|Relational algebra {{received}} little attention outside of pure mathematics until {{the publication of}} E.F. Codd's relational model of data in 1970. Codd proposed such an algebra {{as a basis for}} <b>database</b> <b>query</b> <b>languages.</b> (See section Implementations.) ...|$|R
50|$|Veith {{received}} his Diplom-Ingenieur in computational logic at TU Wienin 1994. He {{received his}} doctorate {{in computer science}} in 1998 underthe supervision of Professor Georg Gottlob {{on the topic of}} computationalcomplexity of logics and <b>database</b> <b>query</b> <b>languages.</b>|$|R
50|$|EJB QL or EJB-QL is a {{portable}} <b>database</b> <b>query</b> <b>language</b> for Enterprise Java Beans. It {{was used in}} Java EE applications. Compared to SQL, however, it is less complex but less powerful as well.|$|E
50|$|SQL-92 was {{the third}} {{revision}} of the SQL <b>database</b> <b>query</b> <b>language.</b> Unlike SQL-89, {{it was a major}} revision of the standard. Aside from a few minor incompatibilities, the SQL-89 standard is forward-compatible with SQL-92.|$|E
50|$|SQL:2008 is {{the sixth}} {{revision}} of the ISO and ANSI standard for the SQL <b>database</b> <b>query</b> <b>language.</b> It was formally adopted in July 2008. The standard consists of 9 parts which are described in detail in SQL.|$|E
5000|$|The <b>query</b> <b>language</b> was {{designed}} to perform complex queries in as simple a manner as possible. The syntax is superficially reminiscent of information retrieval <b>query</b> <b>languages</b> such as CQL which are characterized as less complicated than traditional <b>database</b> <b>query</b> <b>languages</b> such as SQL. The <b>query</b> <b>language</b> always return object identifiers based on tag values, using the predicates below: ...|$|R
50|$|Another {{result that}} he proved in his PhD thesis is that first-order logic has a zero-one law, {{a tool for}} proving inexpressibility results for <b>database</b> <b>query</b> <b>languages.</b> This result was proved {{independently}} by GlebskiÄ­ et al. earlier (1969) in Russia, with a very different proof.|$|R
40|$|An {{interactive}} <b>query</b> <b>languages</b> is {{an essential}} part of a GIS user interface to allow the user to pose ad-hoc <b>queries.</b> Traditional <b>database</b> <b>query</b> <b>languages,</b> such as SQL or Query-byExample, have provide insufficient services for the treatment of spatial properties. Deficiencies observed include the requirement to model spatial data in terms of relations, the users'need of a sophisticated mathematical knowledge in order to express queries with spatial conditions, and the lack of representations of query results in forms other than text. This paper presents a methodology for the design of spatial <b>query</b> <b>languages</b> which are embedded into a human interface. The methodology is based upon the definition of objects and operations available at the conceptual level of the user interface. This object-oriented approach is complemented by the selection of appropriate techniques to interact with spatial objects rendered on a screen. 1 Introduction Current <b>database</b> <b>query</b> <b>languages,</b> which are well-sui [...] ...|$|R
50|$|SQL:1999 (also called SQL 3) was {{the fourth}} {{revision}} of the SQL <b>database</b> <b>query</b> <b>language.</b> It introduced {{a large number of}} new features, many of which required clarifications in the subsequent SQL:2003. In the meanwhile SQL:1999 is deprecated.|$|E
50|$|The model's {{linguistic}} aspect {{described above}} is utilized in the declarative <b>database</b> <b>query</b> <b>language</b> ERROL, which mimics natural language constructs. ERROL's semantics and implementation {{are based on}} reshaped relational algebra (RRA), a relational algebra that is adapted to the entity-relationship model and captures its linguistic aspect.|$|E
50|$|Both UniVerse and UniData have a {{structured}} BASIC language (UniVerse Basic and UniBasic, respectively), similar to Pick/BASIC which naturally operates on {{the structures of}} the MultiValue database. They also have {{a structured}} <b>database</b> <b>query</b> <b>language</b> (RetrieVe and UniQuery) used to select records for further processing and for ad hoc queries and reports.|$|E
25|$|Richard Thomas Snodgrass is an American {{computer}} scientist and writer, currently {{employed as a}} professor at the University of Arizona. He {{is best known for his}} work on temporal <b>databases,</b> <b>query</b> <b>language</b> design, <b>query</b> optimization and evaluation, storage structures, database design, and ergalics (the science of computing).|$|R
40|$|Most {{database}} theory {{focused on}} investigating databases containing sets of tuples. In practice databases often implement relations using bags, i. e. sets with duplicates. In this paper we study how <b>database</b> <b>query</b> <b>languages</b> are aected {{by the use}} of duplicates. We consider <b>query</b> <b>languages</b> that are simple extensions of the (nested) relational algebra, and investigate their resulting expressive power and complexity. ...|$|R
40|$|The {{declarative}} programming paradigms used in constraint languages {{can lead}} to powerful extensions of Codd's relational data model. The development of constraint <b>database</b> <b>query</b> <b>languages</b> from logical <b>database</b> <b>query</b> <b>languages</b> has many similarities {{with the development of}} constraint logic programming from logic programming, but with the additional requirements of data efficient, set-at-a-time, and bottomup evaluation. In this overview of constraint <b>query</b> <b>languages</b> (CQLs) we first present the framework of [41]. The principal idea is that: "the k-tuple (or record) data type can be generalized by a conjunction of quantifier-free constraints over k variables". The generalization must preserve various language properties of the relational data model, e. g., the calculus/algebra equivalence, and have time complexity polynomial {{in the size of the}} data. We next present an algebra for dense order constraints that is simpler to evaluate than the calculus described in [41], and we sharpen some of [...] ...|$|R
50|$|Broadly, query {{languages}} can {{be classified}} according to whether they are database query languages or information retrieval query languages. The difference is that a <b>database</b> <b>query</b> <b>language</b> attempts to give factual answers to factual questions, while an information retrieval query language attempts to find documents containing information that is relevant to an area of inquiry.|$|E
5000|$|SQL:2011 or ISO/IEC 9075:2011 (under {{the general}} title [...] "Information {{technology}} - Database languages - SQL") is the seventh {{revision of the}} ISO (1987) and ANSI (1986) standard for the SQL <b>database</b> <b>query</b> <b>language.</b> It was formally adopted in December 2011. The standard consists of 9 parts which are described in detail in SQL.|$|E
50|$|GeoSPARQL is a {{standard}} for representation and querying of geospatial linked data for the Semantic Web from the Open Geospatial Consortium (OGC). The definition of a small ontology based on well-understood OGC standards is intended to provide {{a standard}}ized exchange basis for geospatial RDF data which can support both qualitative and quantitative spatial reasoning and querying with the SPARQL <b>database</b> <b>query</b> <b>language.</b>|$|E
40|$|The book {{deals with}} the {{problems}} of characterizing the semantics of and assuring efficient execution for <b>database</b> <b>query</b> <b>languages,</b> where the <b>database</b> contains semistructured and time-varying information. This area of technology is of much interest and significance for databases and knowledge bases; it also presents many challenging research problems deserving an in-depth investigation...|$|R
50|$|The {{absence of}} these {{facilities}} from XQuery 1.0 {{was a deliberate}} design decision: it has the consequence that XQuery is very amenable to static analysis, which is essential to achieve the level of optimization needed in <b>database</b> <b>query</b> <b>languages.</b> This also {{makes it easier to}} detect errors in XQuery code at compile time.|$|R
40|$|We {{introduce}} a new constraint domain, aggregation constraints, which is useful in <b>database</b> <b>query</b> <b>languages,</b> and in constraint logic programming languages that incorporate aggregate functions. We study the fundamental problem of checking if a conjunction of aggregation constraints is solvable, and present undecidability results for many different classes of aggregation constraints. We describe a complete and minimal axiomatization {{of the class of}} aggregation constraints over finite multisets of reals, which permits a natural reduction from the class of aggregation constraints to the class of mixed integer/real, non-linear arithmetic constraints. We then present a polynomial-time algorithm that directly checks for solvability of a useful class of aggregation constraints, where the reduction-based approach does not lead to efficient checks for solvability. 1 Introduction <b>Database</b> <b>query</b> <b>languages,</b> such as SQL, allow the use of the grouping construct in conjunction with aggregate functio [...] ...|$|R
50|$|The two languages, however, {{are rooted}} in {{different}} traditions and {{serve the needs of}} different communities. XSLT was primarily conceived as a stylesheet language whose primary goal was to render XML for the human reader on screen, on the web (as web template language), or on paper. XQuery was primarily conceived as a <b>database</b> <b>query</b> <b>language</b> in the tradition of SQL.|$|E
5000|$|Don Chamberlin, {{database}} pioneer, {{creator of}} SQL. In announcing Chamberlin's award, Dr. Dobb's editor Jonathan Erickson praised the programmer {{not only for}} creating the <b>database</b> <b>query</b> <b>language</b> SQL, but for the document editor and formatter Quill, and for devising the XML query language Quilt, which {{is the basis of}} XQuery. Erickson wrote that Chamberlin [...] "reminds us that a mix of technology, innovation, vision, and cooperative spirit continue to be fundamental to advancement in software development." ...|$|E
5000|$|Query by Example (QBE) is a <b>database</b> <b>query</b> <b>language</b> for {{relational}} databases. It was {{devised by}} MoshÃ© M. Zloof at IBM Research during the mid-1970s, in {{parallel to the}} development of SQL. It is the first graphical query language, using visual tables where the user would enter commands, example elements and conditions. Many graphical front-ends for databases use the ideas from QBE today. Originally limited only for the purpose of retrieving data, QBE was later extended to allow other operations, such as inserts, deletes and updates, as well as creation of temporary tables.|$|E
40|$|Abstract. Can {{a system}} {{designed}} {{primarily for the}} purpose of databasetype storage and retrieval be used for information-retrieval tasks? This was {{one of the questions that}} led us to participate in the INEX 2004 initiative. DocBase, a prototype database system developed initially for SGML, and adapted to work with XML, was used {{for the purpose of}} answering the queries. DocBase uses DSQL, an adaptation of SQL to provide a mechanism for querying XML using existing database and indexing technologies. The INEX evaluation experience was encouraging- although it did show the limitations of <b>database</b> <b>query</b> <b>languages</b> for classic information retrieval tasks, it also demonstrated that several interesting results can be obtained by using <b>database</b> <b>query</b> <b>languages</b> for information retrieval, especially for queries involving both content and structure. Our results demonstrate the adaptability and scalability of a database system for processing IR queries. ...|$|R
50|$|In {{mathematical}} logic, a LindstrÃ¶m quantifier is {{a generalized}} polyadic quantifier. They are a generalization of first-order quantifiers, {{such as the}} existential quantifier, the universal quantifier, and the counting quantifiers. They were introduced by Per LindstrÃ¶m in 1966. They were later studied for their applications in logic in computer science and <b>database</b> <b>query</b> <b>languages.</b>|$|R
40|$|In {{this paper}} we {{describe}} the basic ideas and concepts behind the Information Retrieval <b>Query</b> <b>Language</b> (IRQL). The principal focus of IRQL development is the integration of concepts of information retrieval and <b>database</b> <b>query</b> <b>languages.</b> Therefore, {{we will be able}} to exploit the structure of documents and can additionally use information retrieval techniques regardless of whether the structure is known or not. Our approach develops a <b>query</b> <b>language</b> that is compatible with the recently adopted SQL 99 standard and information retrieval clauses (e. g. boolean retrieval). It then integrates features of <b>database</b> <b>query</b> <b>languages</b> such as (1) exploiting the document's structure and (2) restructuring (including linking of multiple documents) and information retrieval techniques such as (I) content-based retrieval, (II) ranking, and (III) relevance feedback. Our data model extends the object-relational model and additionally supports an abstraction of attribute names. We evaluate IRQL queries by mapping them to queries supported by existing systems such as object-relational DBMSs, full-text DBMSs, or conventional search engines, and post processing the results supplied by these systems, if necessary. IRQL is use...|$|R
