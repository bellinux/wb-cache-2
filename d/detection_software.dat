397|373|Public
2500|$|Within academia, {{plagiarism}} by students, professors, or researchers {{is considered}} academic dishonesty or academic fraud, and offenders {{are subject to}} academic censure, {{up to and including}} expulsion. Many institutions use plagiarism <b>detection</b> <b>software</b> to uncover potential plagiarism and to deter students from plagiarizing. Most universities address the issue of academic integrity by providing students with thorough orientations, required writing courses, and clearly articulated honor codes. Indeed, there is a virtually uniform understanding among college students that plagiarism is wrong. Nevertheless, each year students are brought before their institutions’ disciplinary boards on charges that they have misused sources in their schoolwork." [...] However, the practice of plagiarizing by use of sufficient word substitutions to elude <b>detection</b> <b>software,</b> known as rogeting, has rapidly evolved as students and unethical academics seek to stay ahead of <b>detection</b> <b>software.</b> An extreme form of plagiarism, known as contract cheating involves students paying someone else, such as an essay mill, to do their work for them.|$|E
2500|$|During {{the spread}} of CyberAIDS, there were {{apparently}} a variety of Apple II programmers of the time who wrote virus <b>detection</b> <b>software</b> and sold it to protect people from Apple ProDOS viruses. Since the only viruses that existed at the time (and the only viruses that such programs would detect) were CyberAIDS and Festering Hate, the [...] "Kool/Rad Alliance" [...] appears to have released {{the final version of}} the code-base to include a sarcastic taunt directed at Glen Bredon, one of the programmers who was selling anti-virus software.|$|E
2500|$|The Falco UAV is [...] long, [...] high, has a [...] {{wingspan}} and a {{top speed}} of [...] A maximum altitude of around [...] and endurance of up to 14 hours can be attained. As well as providing the Falco air vehicle, Selex ES offers a range of sensors, including EOST 46 electro-optical/infrared turret, Gabbiano 20 multi-mode surveillance radar and the PicoSAR radar. The latter is a compact, active [...] "e-scan" [...] radar providing synthetic aperture radar imagery and ground moving target indication. When used in conjunction with change <b>detection</b> <b>software,</b> the PicoSAR can be a powerful counter-IED tool. The Falco can also carry the SAGE electronic warfare suite for accurate direction-finding, classification and geo-location of emitters.|$|E
40|$|Abstract. The {{software}} robustness {{is affected}} by many factors, {{in order to improve}} the <b>detection</b> accuracy of <b>software</b> robustness, multiple probability analysis of computer control system is introduced, and a <b>software</b> robustness <b>detection</b> model based on probability robustness analysis is put forward. The computer control system of multiple probability analysis is utilized to detect the overall trend of software robustness, and achieve accurate <b>detection</b> of <b>software</b> robustness. The simulation results show that, compared to the traditional <b>detection</b> method, the <b>software</b> robustness <b>detection</b> model based on probability robustness analysis improves the <b>detection</b> accuracy of <b>software</b> robustness, provides some scientific, constructive suggestions for the work of software development, and improves the quality of software...|$|R
5000|$|Labris Intrusion <b>Detection</b> and Prevention <b>Software</b> and Hardware ...|$|R
5000|$|... #Subtitle level 3: ARP {{spoofing}} <b>detection</b> {{and prevention}} <b>software</b> ...|$|R
2500|$|The {{fundamental}} problem with rootkit detection {{is that if}} the operating system has been subverted, particularly by a kernel-level rootkit, it cannot be trusted to find unauthorized modifications to itself or its components. Actions such as requesting a list of running processes, or a list of files in a directory, cannot be trusted to behave as expected. In other words, rootkit detectors that work while running on infected systems are only effective against rootkits that have some defect in their camouflage, or that run with lower user-mode privileges than the <b>detection</b> <b>software</b> in the kernel. As with computer viruses, the detection and elimination of rootkits is an ongoing struggle between both sides of this conflict. Detection can take a number of different approaches, including looking for virus [...] "signatures" [...] (e.g. antivirus software), integrity checking (e.g. digital signatures), difference-based detection (comparison of expected vs. actual results), and behavioral detection (e.g. monitoring CPU usage or network traffic).|$|E
5000|$|Shift Technology - France: Fraud <b>detection</b> <b>software</b> in {{insurance}} ...|$|E
50|$|The {{practice}} of plagiarizing {{by use of}} sufficient word substitutions to elude <b>detection</b> <b>software</b> is known as rogeting.|$|E
5000|$|Agent Logic - event <b>detection</b> and {{response}} <b>software</b> - Webspector webpage change software ...|$|R
40|$|We study random {{words in}} a {{weighted}} regular language that achieve the maximal free energy using thermodynamics formalism. In particular, typical words in the language are algorithmically generated which have applications in computer security (anomaly <b>detection)</b> and <b>software</b> enegineering (test case generation) ...|$|R
40|$|Many {{software}} applications are developed to find answers to unsolved {{problems in the}} first place. Detecting failures or incorrect outputs in these applications is fundamentally challenging because the correct expected outputs (oracles) are unknown. This thesis investigates failure <b>detections</b> in these <b>software</b> applications through a property-based testing approach known as metamorphic testing. Six novel cost saving strategies have been proposed and adopted in designing cost effective metamorphic testing techniques to detect failures {{in the absence of}} oracles. The proposed testing techniques enable cost-effective failure <b>detections</b> in <b>software</b> applications without knowing the correct expected outputs and contribute towards software quality improvement...|$|R
5000|$|The {{design of}} {{plagiarism}} <b>detection</b> <b>software</b> {{for use with}} text documents {{is characterized by a}} number of factors: ...|$|E
5000|$|The {{plagiarism}} blog plagiarismtoday.com ranked PlagScan as {{the fourth}} best plagiarism <b>detection</b> <b>software</b> {{on the market}} in 2011.|$|E
50|$|Zimperium is {{a privately}} owned mobile {{security}} {{company based in}} San Francisco, California. The company is known for developing several mobile threat <b>detection</b> <b>software.</b>|$|E
50|$|Cybereason is a cyber {{security}} company specializing in endpoint <b>detection</b> and response <b>software.</b> The company {{is based in}} Boston, Massachusetts.|$|R
40|$|This release {{contains}} the software implementation of SCODE (Supervised Complex <b>Detection).</b> The <b>software</b> {{is described in}} our paper SCODE: A Cytoscape app for supervised complex detection in protein-protein interaction graphs (2016) {{and is based on}} the algorithm developed by Qi et al, 10. 1093 /bioinformatics/btn 164...|$|R
30|$|Storm: {{this is an}} SSC <b>detection</b> {{that the}} <b>software</b> has {{categorized}} as an SSC at the commencement of a geomagnetic storm.|$|R
5000|$|The {{spacecraft}} were {{equipped with}} robust execution management software (Spacecraft Command Language (SCL), Continuous Activity Scheduling Planning Execution and Replanning (CASPER) software, Context-sensitive anomaly <b>detection</b> <b>software</b> (SELMON monitoring system) ...|$|E
5000|$|Within academia, {{plagiarism}} by students, professors, or researchers {{is considered}} academic dishonesty or academic fraud, and offenders {{are subject to}} academic censure, {{up to and including}} expulsion. Many institutions use plagiarism <b>detection</b> <b>software</b> to uncover potential plagiarism and to deter students from plagiarizing. Most universities address the issue of academic integrity by providing students with thorough orientations, required writing courses, and clearly articulated honor codes. Indeed, there is a virtually uniform understanding among college students that plagiarism is wrong. Nevertheless, each year students are brought before their institutions’ disciplinary boards on charges that they have misused sources in their schoolwork." [...] However, the practice of plagiarizing by use of sufficient word substitutions to elude <b>detection</b> <b>software,</b> known as rogeting, has rapidly evolved as students and unethical academics seek to stay ahead of <b>detection</b> <b>software.</b> An extreme form of plagiarism, known as contract cheating involves students paying someone else, such as an essay mill, to do their work for them.|$|E
50|$|ClamAV for Windows {{is now a}} part of the Immunet client {{produced}} by Sourcefire. Immunet is a real-time cloud based <b>detection</b> <b>software,</b> maintained by Sourcefire, which owns both ClamAV and Immunet.|$|E
30|$|False positive: this {{constitutes}} a false <b>detection</b> where the <b>software</b> detected {{a signal that}} had no connection to a confirmed geomagnetic storm.|$|R
30|$|CME: {{this is a}} <b>detection</b> {{that the}} <b>software</b> has {{categorized}} as a CME shock front powerful enough to induce a geomagnetic storm.|$|R
40|$|International audienceAn {{approach}} is presented for the <b>detection</b> of <b>software</b> vulnerabilities using the widely known SPIN model checker. Classes of vulnerabilities in C programs {{that can be}} detected using the presented approach are discussed. We present the results of experiments on detecting vulnerabilities in student-made software tools implementing array processing algorithms...|$|R
5000|$|However, most {{bayesian}} spam <b>detection</b> <b>software</b> {{makes the}} assumption {{that there is no}} a priori reason for any incoming message to be spam rather than ham, and considers both cases to have equal probabilities of 50%: ...|$|E
50|$|Everything said by the daters is {{run through}} lie <b>detection</b> <b>software.</b> Through an earpiece, the {{friend in the}} RV tells the dater if what one says is a lie or the truth. At {{the end of the}} date, the dater reveals that the {{statements}} made during the date have been run through lie <b>detection</b> <b>software,</b> usually to shocked reactions from the two contestants. Next, the dater asks the two contestants if there is anything they would like to 'come clean' about, giving them a last chance to reveal a lie. Commonly, both daters don't respond to this, though they know they have (usually) both lied.|$|E
50|$|The company {{developed}} {{and sold the}} first commercial intrusion detection system: NetRanger, which was the Flagship intrusion <b>detection</b> <b>software</b> at Cisco Systems and which has now been re-engineered, and re-branded, as the Cisco Systems Adaptive Security Appliance.|$|E
5000|$|... #Caption: Step 2: Edge Detection- By {{completing}} an edge <b>detection</b> process, the <b>software</b> {{can determine}} the various sizes of material in the photo ...|$|R
5000|$|Cybereason offers {{endpoint}} <b>detection</b> {{and response}} <b>software.</b> “It is a hybrid with sensors at the endpoints that communicate with a ‘hunting engine’ in the cloud.” ...|$|R
50|$|Simseer {{is a free}} {{online service}} that tells you how similar to each other are the {{software}} that you give it. It is built using the technology of Malwise. There {{are a number of}} applications where it is useful to know if software is similar such as malware classification, incident response, plagiarism <b>detection,</b> and <b>software</b> theft <b>detection.</b>|$|R
50|$|Lavasoft is a {{software}} development company that produces spyware and malware <b>detection</b> <b>software,</b> including Ad‐Aware. Lavasoft software is often bundled into third-party installers, thus reaching unwilling {{users in the}} same way used by the malware they claim to fight (dubious - source?).|$|E
5000|$|Spafford {{has stated}} that his {{research}} interests have focused on [...] "the prevention, detection, and remediation of information system failures and misuse, {{with an emphasis on}} applied information security. This has included research in fault tolerance, software testing and debugging, intrusion <b>detection,</b> <b>software</b> forensics, and security policies." ...|$|E
50|$|Kineo Collision Detector (KCD) is a {{collision}} <b>detection</b> <b>software</b> library with an object-oriented API. It {{is included in}} KineoWorks and exists also as a standalone library. It works with a hierarchical architecture of heterogeneous data types based on composite design pattern and is especially suited for large 3D models.|$|E
50|$|Tommy is a {{political}} activist fighting against the biotech corporations, who plan {{to open a new}} natural park populated by animals artificially created by cloning. Tommy plans to spoil the inauguration ceremony by letting loose rucksacks filled with cockroaches. Rebecca, herself a computer programmer of leak <b>detection</b> sonar <b>software</b> for underground storage containers, insists on accompanying Tommy.|$|R
40|$|We {{introduce}} a new approach for securing intellectual property in embedded software implementations by using the response of an implementation to fault injections. In our approach, the implementation serves as its own watermark that is recorded through its fault effects. There is no additional code for the watermark. A simulator that maps the fault injections to the executed instructions aids an automated characterization of program code. We provide a proof-of-concept implementation of our watermarking approach using an 8 -bit ATMega 163 microcontroller and several assembly implementations of AES encryption. The results show that our method is well-suited for <b>detection</b> of identical <b>software</b> copies. In addition, our method shows robust performance in <b>detection</b> of <b>software</b> copies {{with a large number}} of added dummy instructions...|$|R
50|$|From 2006 to 2013, DC3 held a free online, {{international}} competition consisting of individual progressive-level exercises. Challenges tests included stenography, data carving, data recovery, and <b>detection</b> of malicious <b>software.</b>|$|R
