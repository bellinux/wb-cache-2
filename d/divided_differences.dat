352|612|Public
25|$|An {{example is}} the set of {{matrices}} of <b>divided</b> <b>differences</b> {{with respect to a}} fixed set of nodes.|$|E
25|$|A {{difference}} {{engine is}} an automatic mechanical calculator designed to tabulate polynomial functions. The name {{derives from the}} method of <b>divided</b> <b>differences,</b> a way to interpolate or tabulate functions by using a small set of polynomial coefficients. Most mathematical functions commonly used by engineers, scientists and navigators, including logarithmic and trigonometric functions, can be approximated by polynomials, so a difference engine can compute many useful tables of numbers.|$|E
500|$|Here [...] is the th finite {{difference}} operator with {{step size}} [...] The series {{is precisely the}} Taylor series, except that <b>divided</b> <b>differences</b> appear in place of differentiation: the series is formally similar to the Newton series. When the function [...] is analytic at , the terms in the series converge {{to the terms of}} the Taylor series, and in this sense generalizes the usual Taylor series.|$|E
5000|$|Note {{that the}} [...] "divided portion" [...] from forward <b>divided</b> <b>difference</b> {{must still be}} computed, to recover the forward <b>divided</b> <b>difference</b> from the forward difference.|$|R
30|$|<b>Divided</b> <b>difference</b> is {{a helpful}} tool {{when we are}} dealing with {{functions}} that have different degrees of smoothness. In [2], p. 14, the <b>divided</b> <b>difference</b> is given as follows.|$|R
3000|$|... where V is a <b>divided</b> <b>difference.</b> The 0 th-degree <b>divided</b> <b>difference</b> of V(x) {{is simply}} V[xj+ 1 / 2]≡V(xj+ 1 / 2). The ENO polynomials {{approximate}} the cell boundaries of (2) by taking [...]...|$|R
2500|$|For {{the case}} of {{nonuniform}} steps in the values of x, Newton computes the <b>divided</b> <b>differences,</b> ...|$|E
2500|$|The {{principle}} {{of a difference}} engine is Newton's method of <b>divided</b> <b>differences.</b> If the initial value of a polynomial (and of its finite differences) is calculated by some means for some value of X, the difference engine can calculate any number of nearby values, using the method generally known as the method of finite differences. For example, consider the quadratic polynomial ...|$|E
5000|$|This {{is called}} the Peano form of the <b>divided</b> <b>differences</b> and [...] {{is called the}} Peano kernel for the <b>divided</b> <b>differences,</b> both named after Giuseppe Peano.|$|E
40|$|A {{development}} of an inverse first-order <b>divided</b> <b>difference</b> operator for functions of several variables is presented. Two generalized derivative-free algorithms builded up from Ostrowski's method for solving systems of nonlinear equations are written and analyzed. A direct computation of the local order of convergence for these variants of Ostrowski's method is given. In order to preserve the local order of convergence, any <b>divided</b> <b>difference</b> operator is not valid. Two counterexamples of computation of a classical <b>divided</b> <b>difference</b> operator without preserving the order are presented. A new <b>divided</b> <b>difference</b> operator solving this problem is proposed. Furthermore, a computation that approximates the order of convergence is generated for the examples and it confirms in a numerical way that {{the order of the}} methods is well deduced...|$|R
40|$|On the {{approximation}} of derivatives using <b>divided</b> <b>difference</b> operators preserving the local convergence order of iterative methods. (English summary) J. Comput. Appl. Math. 237 (2013), no. 1, 363 – 372. Summary: “A {{development of an}} inverse first-order <b>divided</b> <b>difference</b> operator for functions of several variables is presented. Two generalized derivative-free algorithms built up from Ostrowski’s method for solving systems of nonlinear equations are written and analyzed. A direct computation of the local order of convergence for these variants of Ostrowski’s method is given. In order to preserve the local order of convergence, any <b>divided</b> <b>difference</b> operator is not valid. Two counterexamples of computation of a classical <b>divided</b> <b>difference</b> operator without preserving the order are presented. A rigorous study to know a priori if the new method will preserve {{the order of the}} original modified method is presented. The conclusion is that this fact does not depend on the method but on the systems of equations and if the associated <b>divided</b> <b>difference</b> verifies a particular condition. A new <b>divided</b> <b>difference</b> operator solving this problem is proposed. Furthermore, a computation that approximates the order of convergence is generated for the examples and it confirms in a numerical way that the order of the methods is well deduced. Thi...|$|R
5000|$|Since we {{have two}} {{derivatives}} to work with, we construct the set [...] Our <b>divided</b> <b>difference</b> table is then:and the generated polynomial isby taking the coefficients from the diagonal of the <b>divided</b> <b>difference</b> table, and multiplying the kth coefficient by , as we would when generating a Newton polynomial.|$|R
5000|$|The {{relationship}} between <b>divided</b> <b>differences</b> and forward differences is ...|$|E
50|$|In the {{mathematical}} field of numerical analysis, a Newton polynomial, named after its inventor Isaac Newton, is the interpolation polynomial {{for a given}} set of data points in the Newton form. The Newton polynomial is sometimes called Newton's <b>divided</b> <b>differences</b> interpolation polynomial because the coefficients of the polynomial are calculated using <b>divided</b> <b>differences.</b>|$|E
5000|$|From {{the mean}} value theorem for <b>divided</b> <b>differences</b> {{it follows that}} ...|$|E
5000|$|... {{then the}} {{corresponding}} <b>divided</b> <b>difference</b> operator {{is defined by}} ...|$|R
40|$|We {{discuss a}} class of {{generalized}} <b>divided</b> <b>difference</b> operators which {{give rise to a}} representation of Nichols-Woronowicz algebras associated to Weyl groups. For the root system of type $A,$ we also study the condition for the deformations of the Fomin-Kirillov quadratic algebra, which is a quadratic lift of the Nichols-Woronowicz algebra, to admit a representation given by generalized <b>divided</b> <b>difference</b> operators. The relations satisfied by the mutually commuting elements called Dunkl elements in the deformed Fomin-Kirillov algebra are determined. The Dunkl elements correspond to the truncated elliptic Dunkl operators via the representation given by the generalized <b>divided</b> <b>difference</b> operators...|$|R
2500|$|... is {{the first}} <b>divided</b> <b>difference</b> of , a {{symmetric}} polynomial of degree −1.|$|R
5000|$|... the <b>divided</b> <b>differences</b> can be {{calculated}} via forward differences defined as ...|$|E
5000|$|In {{numerical}} analysis, Hermite interpolation, {{named after}} Charles Hermite, {{is a method}} of interpolating data points as a polynomial function. The generated Hermite interpolating polynomial {{is closely related to}} the Newton polynomial, in that both are derived from the calculation of <b>divided</b> <b>differences.</b> However, the Hermite interpolating polynomial may also be computed without using <b>divided</b> <b>differences,</b> see [...]|$|E
5000|$|... {{contains}} the divided difference scheme for the identity function {{with respect to}} the nodes ,thus [...] {{contains the}} <b>divided</b> <b>differences</b> for the power function with exponent [...]Consequently, you can obtain the <b>divided</b> <b>differences</b> for a polynomial function {{with respect to the}} polynomial by applying [...] (more precisely: its corresponding matrix polynomial function [...] ) to the matrix [...]This is known as Opitz' formula.|$|E
40|$|International audienceWe {{construct}} a <b>divided</b> <b>difference</b> operator using GKM theory. This generalizes the classical <b>divided</b> <b>difference</b> operator for the cohomology {{of the complete}} flag variety. This construction proves a special case of a recent conjecture of Shareshian and Wachs. Our methods are entirely combinatorial and algebraic, and rely heavily on the combinatorics of root systems and Bruhat order...|$|R
50|$|The <b>divided</b> <b>difference</b> {{formulas}} {{are more}} versatile, useful in more kinds of problems.|$|R
5000|$|The <b>divided</b> <b>difference</b> scheme can be {{put into}} an upper {{triangular}} matrix.Let [...]|$|R
5000|$|To {{make the}} {{recursive}} process more clear, the <b>divided</b> <b>differences</b> {{can be put}} in a tabular form: ...|$|E
50|$|In {{mathematical}} analysis, {{the mean}} value theorem for <b>divided</b> <b>differences</b> generalizes the mean value theorem to higher derivatives.|$|E
50|$|An {{example is}} the set of {{matrices}} of <b>divided</b> <b>differences</b> {{with respect to a}} fixed set of nodes.|$|E
40|$|Abstract. The q-analogue of the {{derivative}} operator {{is playing}} a more and more important role in mathematics and physics. Moreover, the <b>divided</b> <b>difference,</b> as an important and classical mathematical tool with a close relation to the derivative, is also used in many fields. In this paper, {{the connection between the}} q-derivative and the <b>divided</b> <b>difference</b> is investigated such that the q-derivative can be understood better. The q-derivative of higher order of a function f can be represented by the <b>divided</b> <b>difference</b> of f at some special nodes. Furthermore, the result is used to provide a new and easier proof of q-Leibnitz formula and its generalization...|$|R
40|$|The Leibniz formula, for the <b>divided</b> <b>difference</b> of a product, and Opitz’s formula, for the <b>divided</b> <b>difference</b> {{table of}} a {{function}} {{as the result of}} evaluating that function at a certain matrix, are shown to be special cases of a formula available for the coefficients, with respect to any basis, of an ‘ideal’ or ‘Hermite’ polynomial interpolant, in any number of variables...|$|R
40|$|Abstract. A {{formula for}} the error in Chung-Yao {{interpolation}} announced earlier is proved (by induction). In the process, a bivariate <b>divided</b> <b>difference</b> identity of independent interest is proved. Also, an inductive proof of an error formula for polynomial interpolation by tensorproducts is given. The main tool is a (convenient notation for a) multivariate <b>divided</b> <b>difference.</b> In [2], a particular multivariate <b>divided</b> <b>difference</b> is introduced and, {{as an illustration}} of its usefulness, error formulæ for three special cases of multivariate polynomial interpolation are stated, but not proved. To be sure, an inductive procedure is indicated which, so it is claimed there, will produce each of these formulæ, but (apparently crucial) detail is missing, for both the error in tensor-product interpolation and in Chung-Yao interpolation. It {{is the purpose of}} this note to provide complete, inductive proofs, as outlined in [2], of these formulæ. In the process of proving the formula for Chung-Yao interpolation, an essentially bivariate <b>divided</b> <b>difference</b> identity is proved whic...|$|R
5000|$|<b>Divided</b> <b>differences</b> of polynomials are {{particularly}} interesting, {{because they can}} benefit from the Leibniz rule.The matrix [...] with ...|$|E
5000|$|If {{we would}} have to compute the <b>divided</b> <b>differences</b> for the power functionsin the usual way, we would {{encounter}} the same numerical problemsthat we had when computing the divided difference of [...]The nice thing is, that there is a simpler way.It holdsConsequently, we can compute the <b>divided</b> <b>differences</b> of by a division of formal power series.See how this reduces to the successive computation of powerswhen we compute [...] for several [...]|$|E
50|$|The {{limit of}} the Newton {{polynomial}} if all nodes coincide is a Taylor polynomial, because the <b>divided</b> <b>differences</b> become derivatives.|$|E
30|$|Case  1.2. 1. M_j and D_j (the lower <b>divided</b> <b>difference</b> in {{absolute}} value) have different sign.|$|R
5000|$|... where [...] is the <b>divided</b> <b>difference</b> of the jth {{order of}} [...] {{with respect to}} : ...|$|R
40|$|We study {{an action}} of the skew <b>divided</b> <b>difference</b> {{operators}} on the Schubert polynomials and give an explicit formula for structural constants for the Schubert polynomials in terms of certain weighted paths in the Bruhat order on the symmetric group. We also prove that, under certain assumptions, the skew <b>divided</b> <b>difference</b> operators transform Schubert polynomials into polynomials with positive integer coefficients. Comment: PlainTeX, 15 page...|$|R
