1|2387|Public
40|$|The {{international}} Global Precipitation Measurement (GPM) mission led by NASA and JAXA {{is planned}} as a multi-radiometer constellation mission. A key mission component {{is the ability}} to intercalibrate the Tb from the partner constellation radiometers and create inter-calibrated, mission consistent Tc. One of the enabling strategies for this approach is the launching of a joint NASA/JAXA core satellite which contains a JAXA/NICT provided dual precipitation radar and a NASA provided Microwave Imaging passive radiometer. The observations from these instruments on the core satellite provide the opportunity to develop a transfer reference standard that can then be applied across the partner provided constellation radiometers that enables the creation of mission consistent brightness temperatures. The other aspect of the strategy is the development of a community consensus intercalibration algorithm that will be applied to the Tb observations from partner radiometers and create the best calibrated Tc. Also described is the development of the framework in which the inter-calibration is included in the final algorithm. A part of the latter effort has been the development of a <b>generic,</b> <b>logical</b> <b>structure</b> which can be applied across radiometer types and which guarantees the user community that key information for using Tc properly is recorded. Ke...|$|E
40|$|The {{design of}} new diagram {{recognition}} systems remains a challenging problem. Ideally, recognition systems should accept real-world input, perform robustly, fail gracefully, and {{be implemented in}} a timely manner. In reality, the intricacy involved in implementing recognition systems for diagram notations makes this a challenging open problem. One solution to these challenges is the design of middleware to speed the development of robust applications. Middleware {{takes the form of}} a framework or toolkit for the creation of applications. This paper describes a retargetable framework which can be used to speed the development of robust interactive sketch recognition systems. The system includes a drawing surface to capture interactively created drawings, a set of generic segmentation routines, a character recognizer, and a common interface for integrating domain-specific components. The framework has been used to construct systems for the recognition of UML, math, and molecular diagrams. Work is on-going on the design of additional <b>generic</b> recognizers of <b>logical</b> <b>structure</b> and spatial layout of diagrams. 1...|$|R
5000|$|A more <b>generic</b> <b>logical</b> volume manager (provided {{with most}} server-class {{operating}} systems, e.g. Veritas or LVM) ...|$|R
40|$|General purpose rich-text editors, such as MS Word {{are often}} used to author {{software}} requirements specifications. These requirements specifications contain many different <b>logical</b> <b>structures,</b> such as use cases, business rules and functional requirements. Automated recognition and extraction of these <b>logical</b> <b>structures</b> is necessary to provide useful automated requirements management features, such as automated traceability, template conformance checking, guided editing and interoperability with sophisticated requirements management tools like Requisite Pro. The variability among instances of these <b>logical</b> <b>structures</b> and their attributes poses many challenges for their accurate recognition and extraction. The thesis provides a framework for the extraction of <b>logical</b> <b>structures</b> from software requirements documents. The framework models information about style, structure, and attributes of the <b>logical</b> <b>structures</b> and uses the defined meta-model to extract instances of <b>logical</b> <b>structures.</b> A meta-model also incorporates information about the variability present in the instances. The framework includes an extraction tool, ET, that reads the meta-model and extracts instances of modelled <b>logical</b> <b>structures</b> from the documents. The framework is evaluated on a collection of real-world software requirements documents. Using the framework, different <b>logical</b> <b>structures</b> can be extracted with high precision and recall, each close to 100 %. The performance of the extraction tool is acceptable for fast extraction of <b>logical</b> <b>structures</b> from documents with extraction times ranging from a few milliseconds to a few seconds...|$|R
40|$|Structured {{documents}} {{are composed of}} objects with a content and a <b>logical</b> <b>structure.</b> The effective retrieval of structured documents requires models that provide for a content-based retrieval of objects {{that takes into account}} their <b>logical</b> <b>structure,</b> so that the relevance of an object is not solely based on its content, but also on the <b>logical</b> <b>structure</b> among objects...|$|R
40|$|Current argumentation support {{software}} often employs graphical representations of logical relationships. Little {{is known about}} the extent to which <b>logical</b> <b>structuring</b> helps to increase a user’s task performance. In this paper, various levels of graphical representation of the <b>logical</b> <b>structure</b> of legal subject matter are experimentally compared in terms of performance. It is shown that <b>logical</b> <b>structuring</b> significantly increases task performance, but we have found no evidence that the extensive representation of <b>logical</b> <b>structure</b> as employed by several contemporary software applications is more effective or usable than a simplified graphical representation that was previously implemented in an application called ArguGuide...|$|R
40|$|AbstractIn {{a simple}} clausal <b>logical</b> <b>structure,</b> {{a set of}} clauses determines models, {{each of which is}} a subset of some prede-termined set G and {{represents}} a possible state of a world. A multiple-world clausal <b>logical</b> <b>structure</b> is an extension of a simple clausal <b>logical</b> <b>structure,</b> wherein multiple worlds are considered simultaneously. Each world model may be related not only to its corresponding set of clauses, but also to other world models. We dene a method for multiple-world extension of a clausal <b>logical</b> <b>structure.</b> By applying this extension, we propose a new multiple-world clausal <b>logical</b> <b>structure</b> for S-expression atoms with denitions of several concrete constraints, which together provide rich expressive power including function variables and concepts such as argmax and negation. KeywordsMultiple-world logical structure; Referential con-straint; Specialization system; Declarative description. I...|$|R
40|$|We {{introduce}} {{a new approach to}} automatically extract an idealized <b>logical</b> <b>structure</b> from a parallel execution trace. We use this structure to define intuitive metrics such as the lateness of a process involved in a parallel execution. By analyzing and illustrating traces in terms of logical steps, we leverage a developer’s understanding of the happened-before relations in a parallel program. This technique can uncover dependency chains, elucidate communication patterns, and highlight sources and propagation of delays, all of which may be obscured in a traditional trace visualization. Extracting <b>Logical</b> <b>Structure</b> The <b>logical</b> <b>structure</b> of a program is the ordering of events implied by that program. We describe the <b>logical</b> <b>structure</b> by assigning a logical step to each event. Structure extraction occurs in two phases...|$|R
5000|$|Discriminating the <b>logical</b> <b>structure</b> of {{linguistic}} expressions ...|$|R
30|$|The {{first step}} of our method {{transforms}} files into a more abstract representation, their <b>logical</b> <b>structure.</b> This step is essential to our approach because it achieves two key goals: (a) use of <b>logical</b> <b>structure</b> for discrimination between malicious and benign files and (b) applicability to multiple file formats.|$|R
40|$|Abstract. Structured {{documents}} {{are composed of}} objects with a con-tent and a <b>logical</b> <b>structure.</b> The eective retrieval of structured docu-ments requires models that provide for a content-based retrieval of ob-jects {{that takes into account}} their <b>logical</b> <b>structure,</b> so that the relevance of an object is not solely based on its content, but also on the <b>logical</b> <b>structure</b> among objects. This paper proposes a formal model for repre-senting structured documents where the content of an object is viewed as the knowledge contained in that object, and the <b>logical</b> <b>structure</b> among objects is captured by a process of knowledge augmentation: the knowl-edge contained in an object is augmented with that of its structurally related objects. The knowledge augmentation process takes into account the fact that knowledge can be incomplete and become inconsistent. ...|$|R
40|$|MODEL When one designs a table, one {{normally}} has a <b>logical</b> <b>structure</b> in mind {{before one}} selects a presentational form. Thus, we {{should deal with}} the <b>logical</b> <b>structure</b> and the presentation separately. There {{are at least two}} advantages with the separation the <b>logical</b> <b>structure</b> and the presentation. First, tables can be manipulated independently of their presentations. For example, to remove a label from a category, 4 / 7 / 1996 08 : 41 PAGE PROOFS ep 96 paper Xtable [...] - A TABULAR EDITOR AND FORMATTER 5 Assignments Examinations Grade A 1 A 3 Midterm Final Mark A 2 Figure 1. The tree of the category Mark in Table 1 we no longer have to determine which rows or columns should be removed from the presentation. Second, by associating different topologies and styles with a <b>logical</b> <b>structure,</b> we can easily obtain various presentations for a table. The abstract model for Xtable is based on the multidimensional <b>logical</b> <b>structure</b> and is independent of any characteristics that are related to the presen [...] ...|$|R
5000|$|Document Object Model's <b>logical</b> <b>structure,</b> Yahoo! subject index, DMOZ ...|$|R
5000|$|... {{languages}} for document <b>logical</b> <b>structures</b> {{and their}} support facilities ...|$|R
40|$|A digital {{integrated}} circuit chip is designed by identifying a <b>logical</b> <b>structure</b> to be implemented. This <b>logical</b> <b>structure</b> is represented {{in terms of a}} logical operations, at least 5 % of which include selection operations. A determination is made of logic cells that correspond to an implementation of these logical operations...|$|R
40|$|<b>Logical</b> <b>structures</b> {{and case}} marking systems in Japanese are {{investigated}} {{in the framework}} of Role and Reference Grammar. Section one summarizes theoretical backgrounds. In section two, transitive, ditransitive, inversion, possessor-raising, causative, direct passive, and indirect passive constructions are discussed. Based on the observations of those structures and synactic behaviors, it is concluded that case marking systems in Japanese are accounted for by referring to <b>logical</b> <b>structures</b> and the notion of ‘pragmatic peak’. Instead of grammatical relations,the combination of semantic argument status in <b>logical</b> <b>structures,</b> syntactic argument/adjunct status, and pragmatics are appropriate to describe case marking systems and syntactic behaviors in Japanese...|$|R
40|$|Highly {{optimised}} provers like MSPASS [HS 00] and FaCT [HPS 98] {{can test}} formulae {{with hundreds of}} symbols within a few seconds. <b>Generic</b> <b>logical</b> frameworks like Isabelle [Pau 93] allow us to implement almost any logical calculus as a “shallow embedding ” with an automatic search tactic. But researchers often find thes...|$|R
5000|$|Describe IT {{skills in}} a common {{language}} and a <b>logical</b> <b>structure</b> ...|$|R
5000|$|... #Caption: <b>Logical</b> <b>structure</b> of {{the first}} six propositions of Spinoza's Ethics ...|$|R
40|$|In general, {{collaboration}} infrastructures {{have supported}} sharing {{of an object}} based on its <b>logical</b> <b>structure.</b> However, current implementations assume an implicit binding between this <b>logical</b> <b>structure</b> and particular system-defined abstractions. We present a new composable design based on programming patterns that eliminates this binding, thereby increasing the range of supported objects and supporting extensibility...|$|R
500|$|An {{intuitive}} {{feeling for}} the <b>logical</b> <b>structure</b> of any new mathematical theory; ...|$|R
5000|$|Support of <b>logical</b> <b>structures</b> (such as conditions, loops, or {{iterating over}} arrays) ...|$|R
40|$|Arrow famously shows that, under basic desiderata, the <b>logical</b> <b>structure</b> {{of social}} and {{individual}} choices may differ. They cannot simultaneously satisfy WARP. This paper shows simple aggregation rules such that, under Arrow’s desiderata, individual and social choice can simultaneously satisfyWeakWARP. Thus, for decions making caractherized by Weak WARP, social and individual choice can have compatible <b>logical</b> <b>structures.</b> 1...|$|R
40|$|Document {{understanding}} has {{attained a}} level of maturity that requires migration from ad-hoc experimental systems, each of which employs {{its own set of}} assumptions and terms, into a solid, standard frame of reference, with generic definitions that are agreed upon by the document understanding community. The <b>logical</b> <b>structure</b> of a document conveys semantic information that is beyond the document's character string contents. To capture this additional semantics, document understanding must relate the document's physical layout to its <b>logical</b> <b>structure.</b> This work provides a formal definition of the <b>logical</b> <b>structure</b> of text-intensive documents. A generic framework using a hierarchy of textons is described for the interpretation of any text-intensive document <b>logical</b> <b>structure.</b> The recursive definition of textons provides a powerful and flexible tool that is not restricted by the size or complexity of the document. Frames are analogously used as recursive constructs for the physical struct [...] ...|$|R
40|$|Text {{documents}} generally contain {{two forms}} of <b>structures,</b> <b>logical</b> <b>structures</b> and physical <b>structures.</b> Loosely speaking, <b>logical</b> <b>structures</b> are sections of text that are both visually and semantically distinct. For example, a document may have an "introduction", a "body", and a "conclusion" as its <b>logical</b> <b>structures.</b> These structures are so named because each section has a distinct purpose in conveying the document's logical arguments or intentions. Perfect machine recognition of <b>logical</b> <b>structures</b> in large collections of documents is an unsolved problem in computational linguistics. This thesis presents evidence that a new family of functions on text segments carries information that is useful for differentiating document <b>logical</b> <b>structures.</b> For any given text segment, a function of this form {{is referred to as}} the cadence, and it is based on a new interpretation of the vector space representation that Gerard Salton introduced in 1975. Cadence also differs from the original Salton representation in that it relies on three heuristic transformations based on authorship, location, and term coherence. To test the hypothesis that the cadence of a text segment carries information helpful to differentiating <b>logical</b> <b>structures,</b> a corpus was built containing 2800 documents with manually-annotated <b>logical</b> <b>structures.</b> Structures representing abstracts, introductions, bodies, and conclusions from this corpus were clustered with a k-means algorithm using cadence data. Precision and recall performances were computed for the results, and a chi-squared cross-tabulation test was used to determine the statistical significance of the clustering results. Precision and recall were highest for abstracts (P = 0. 931 [plus-minus] 0. 025, R = 0. 992 (cont.) [plus-minus] 0. 026), followed by introductions (P = 0. 747 [plus-minus] 0. 025, R = 0. 802 [plus-minus] 0. 026) and conclusions (P = 0. 737 [plus-minus] 0. 025, R = 0. 813 [plus-minus] 0. 026), and lowest for bodies (P = 0. 876 [plus-minus] 0. 03, R = 0. 663 [plus-minus] 0. 026). These results suggest that cadence may have substantial promise for finding <b>logical</b> <b>structures</b> in un-annotated documents. by Ngon D. Dao. Thesis (Ph. D.) [...] Harvard-MIT Division of Health Sciences and Technology, 2004. Includes bibliographical references (p. 49 - 51) ...|$|R
5000|$|As {{the form}} or {{internal}} <b>logical</b> <b>structure</b> that ideas have within a set; ...|$|R
50|$|Superimpose a <b>logical</b> <b>structure</b> {{upon the}} data {{on the basis of}} these relationships.|$|R
30|$|Most importantly, however, {{this paper}} {{introduces}} a novel system design for Hidost that enables its generalization to multiple unrelated file formats. To {{the best of}} our knowledge, Hidost is the first static machine-learning-based malware detection system applicable to multiple file formats. Its generality was achieved by extending the feature definition based on the PDF <b>logical</b> <b>structure</b> to a second file format with a hierarchical <b>logical</b> <b>structure,</b> Flash’s SWF format. Finally, taking a step further, Hidost not only considers the <b>logical</b> <b>structure</b> of the file but its content as well, enabling a higher degree of precision on formats with less discriminative structure such as SWF.|$|R
25|$|J.D. Sneed, The <b>Logical</b> <b>Structure</b> of Mathematical Physics. Reidel, Dordrecht, 1971 (revised edition 1979).|$|R
50|$|<b>Logical</b> <b>Structures</b> of Ockham's Theory of Supposition. Franciscan Studies 38(1978) 161-83. With J. Swiniarski.|$|R
5000|$|The <b>logical</b> <b>structure</b> of the RC 4000 computer, BIT 7, 3 (1967), 191- 199 ...|$|R
30|$|By {{treating}} the directory hierarchy {{as the top}} level of the <b>logical</b> <b>structure</b> and XML files as sub-trees beloning to it, we ensure the complete and unambiguous extraction of <b>logical</b> <b>structure.</b> Compared to PDF and SWF, we prepend the file system path of a given XML file, relative {{to the root of}} the ZIP archive, to structural paths extracted from the file itself.|$|R
5000|$|A {{concern with}} axiomatization, that is, with demonstrating the <b>logical</b> <b>structure</b> and {{coherence}} of these statements; ...|$|R
5000|$|The UIA tree {{facilitates}} navigation {{through the}} <b>logical</b> <b>structure</b> of the UI for accessibility and automation.|$|R
3000|$|The PDF <b>logical</b> <b>structure</b> is {{organized}} as a directed rooted cyclic graph. To {{transform it into}} a structural multimap, {{it is first necessary}} to reduce the graph to a directed rooted tree instead. This is achieved by removing all cycles from the graph. There is a cycle in the PDF <b>logical</b> <b>structure</b> when an indirect reference from a tree node at depth d [...]...|$|R
5000|$|In {{order for}} a picture to {{represent}} a certain fact it must in some way possess the same <b>logical</b> <b>structure</b> as the fact. The picture is a standard of reality. In this way, linguistic expression {{can be seen as}} a form of geometric projection, where language is the changing form of projection but the <b>logical</b> <b>structure</b> of the expression is the unchanging geometric relationships.|$|R
