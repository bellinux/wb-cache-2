73|244|Public
25|$|Increasing gauge numbers denote {{decreasing}} wire diameters, {{which is}} similar to many other non-metric gauging systems such as British Standard Wire Gauge (SWG), but unlike IEC 60228, the metric wire-size standard used {{in most parts of the}} world. This gauge system originated in the number of <b>drawing</b> <b>operations</b> used to produce a given gauge of wire. Very fine wire (for example, 30gauge) required more passes through the drawing dies than 0gauge wire did. Manufacturers of wire formerly had proprietary wire gauge systems; the development of standardized wire gauges rationalized selection of wire for a particular purpose.|$|E
50|$|A mirror {{driver is}} a display driver for a virtual device that mirrors the <b>drawing</b> <b>operations</b> {{of one or}} more {{additional}} physical display devices.|$|E
5000|$|Vector <b>drawing</b> <b>operations</b> {{could be}} done with either {{absolute}} (pixel-based) or fixed relative coordinates. The latter allowed window contents to scaled when a window was resized without recalculation of coordinates.|$|E
50|$|These {{objects are}} a {{necessary}} part of every Java 2D <b>drawing</b> <b>operation.</b>|$|R
5000|$|This type {{of steel}} is {{suitable}} for <b>drawing</b> <b>operation</b> (except severe <b>drawing).</b>|$|R
50|$|Drawing: The <b>drawing</b> <b>{{operation}}</b> is {{very similar}} to the forming operation except that the <b>drawing</b> <b>operation</b> undergoes severe plastic deformation and the material of the part extends around the sides. A metal cup with a detailed feature at the bottom {{is an example of the}} difference between formed and drawn. The bottom of the cup was formed while the sides were drawn.|$|R
5000|$|A {{software}} implementation of double buffering has all <b>drawing</b> <b>operations</b> store their results in some region of system RAM; any such region {{is often called}} a [...] "back buffer". When all <b>drawing</b> <b>operations</b> are considered complete, the whole region (or only the changed portion) is copied into the video RAM (the [...] "front buffer"); this copying is usually synchronized with the monitor's raster beam {{in order to avoid}} tearing. Double buffering necessarily requires more memory and CPU time than single buffering because of the system memory allocated for the back buffer, the time for the copy operation, and the time waiting for synchronization.|$|E
50|$|In {{the area}} of 2D {{computer}} graphics known as vector graphics, the (approximate) computation of parallel curves is involved {{in one of the}} fundamental <b>drawing</b> <b>operations,</b> called stroking, which is typically applied to polylines or polybeziers (themselves called paths) in that field.|$|E
5000|$|When GRAPHIC {{targets are}} attached, a REDRAW option can be {{specified}} which buffers the results of <b>drawing</b> <b>operations</b> until they are specifically requested. Using this technique reduces flicker {{in a similar way}} to the technique of drawing on memory DCs [...] when using the GDI API.|$|E
50|$|A <b>draw</b> <b>operation</b> can {{therefore}} be described as creating a new, stroked object and then filling that object.|$|R
50|$|The {{earliest}} railways in Scotland were waggonways, {{intended for}} horse <b>drawn</b> <b>operation,</b> {{in most cases}} from a colliery or other mineral source, to a waterway for onward transport.|$|R
50|$|A {{shape in}} Java 2D is a {{boundary}} which defines an inside and an outside. Pixels inside the shape {{are affected by}} the <b>drawing</b> <b>operation,</b> those outside are not.|$|R
50|$|Many of the {{functions}} in USER32.DLL call upon GDI functions exported by GDI32.DLL to do the actual rendering of the various elements of the user interface.Some types of programs will also call GDI functions directly to perform lower-level <b>drawing</b> <b>operations</b> within a window previously created via USER32 functions.|$|E
50|$|With the {{drafting}} machine one can perform {{a series of}} <b>drawing</b> <b>operations</b> that otherwise could only be achieved with a much more complex use of the classic ruler square and protractor, as, for example, drawing parallel lines, orthogonal lines, inclined lines according to a preset angle, measurement of angles, etc.|$|E
5000|$|Tailor Heat Treated Blanks are sheets that exhibit locally {{different}} material properties. A local {{heat treatment}} {{is used to}} change the properties of aluminium alloys, for example, that show precipitation hardening. With this technology, the material properties can be optimised for subsequent deep <b>drawing</b> <b>operations</b> or for the final industrial application.|$|E
50|$|The {{first route}} from Adelaide to Port Adelaide was only 6 miles long, quite {{straight}} and flat and suitable for horse <b>drawn</b> <b>operation.</b> The initial line {{was to be}} single track, with frequent crossing loops.|$|R
50|$|When video {{mirroring}} is active, {{each time}} the system draws to the primary video device at a location inside the mirrored area, {{a copy of the}} <b>draw</b> <b>operation</b> is executed on the mirrored video device in real-time.|$|R
50|$|In computing, Java 2D is an API {{for drawing}} {{two-dimensional}} graphics using the Java programming language. Every Java 2D <b>drawing</b> <b>operation</b> can ultimately {{be treated as}} filling a shape using a paint and compositing the result onto the screen.|$|R
5000|$|For best {{dimensional}} control (when component requirements are exacting), a secondary drawing operation is added after the extrusion of most metals. Although such an operation is entirely feasible, it does entail additional tooling, handling, and cost. Therefore, the designer should specify liberal enough tolerances, if possible, so that secondary <b>drawing</b> <b>operations</b> are not required.|$|E
50|$|Lubricants {{are used}} to reduce {{friction}} between the working material and the punch and die. They also aid in removing the part from the punch. Some examples of lubricants used in <b>drawing</b> <b>operations</b> are heavy-duty emulsions, phosphates, white lead, and wax films. Plastic films covering {{both sides of the}} part while used with a lubricant will leave the part with a fine surface.|$|E
50|$|GSX {{consisted}} of two parts: a selection of routines for common <b>drawing</b> <b>operations,</b> and the device drivers {{that are responsible for}} handling the actual output. The former was known as GDOS and the latter as GIOS, a play on the division of CP/M into machine-independent BDOS and machine-specific BIOS. GDOS was a selection of routines that handled the GKS drawing, while GIOS actually used the underlying hardware to produce the output.|$|E
50|$|During any <b>drawing</b> <b>operation,</b> {{there is}} a source (the pixels being {{produced}} by the paint) and a destination (the pixels already onscreen). Normally, the source pixels simply overwrite the destination pixels, but the composite allows this behavior to be changed.|$|R
50|$|In {{addition}} to the fill operation, Java 2D provides a <b>draw</b> <b>operation.</b> While fill <b>draws</b> {{the interior of a}} shape, draw draws its outline. The outline {{can be as simple as}} a thin line, or as complicated as a dashed line with each dash having rounded edges.|$|R
50|$|Using PB GRAPHIC statements, a GRAPHIC (WINDOW, BITMAP or control) {{is first}} {{selected}} as the current GRAPHIC target, then operations are done on it without requiring it to be identified again. Contrast this with the GDI API approach, where the Device Context handle is required for every <b>drawing</b> <b>operation.</b>|$|R
50|$|Increasing gauge numbers denote {{decreasing}} wire diameters, {{which is}} similar to many other non-metric gauging systems such as SWG. This gauge system originated in the number of <b>drawing</b> <b>operations</b> used to produce a given gauge of wire. Very fine wire (for example, 30 gauge) required more passes through the drawing dies than 0 gauge wire did. Manufacturers of wire formerly had proprietary wire gauge systems; the development of standardized wire gauges rationalized selection of wire for a particular purpose.|$|E
5000|$|Within a Mac application, any {{sequence}} of <b>drawing</b> <b>operations</b> could be simply recorded/encoded to the PICT format by opening a [...] "Picture", then closing it after issuing the required commands. By saving the resulting byte stream as a resource, a PICT resource resulted, {{which could be}} loaded and played back at any time. The same stream could be saved to a data file on disk (with 512 bytes of unused header space added) as a PICT file.|$|E
50|$|However, {{performing}} {{this entire}} sequence of steps for each drawing operation {{would be very}} inefficient. Java 2D therefore optimizes common <b>drawing</b> <b>operations</b> so {{that many of these}} steps can be skipped. If the paint is a simple solid color, for instance, {{there is no need to}} actually command it to generate a list of colors to be painted. Likewise, if the default fully opaque composite is in use, actually asking it to perform the compositing operation is unnecessary and would waste effort.|$|E
40|$|Abstract. A novel hydro-mechanical {{deep drawing}} for {{magnesium}} alloy sheets at gradient temperature is proposed and studied. The novel process {{is on the}} basis of the study in sheet metal forming, the properties of magnesium alloy and the forming characteristics of workpiece in deep drawing. It indicates that the deep <b>drawing</b> <b>operation</b> of magnesium alloy sheet should be done in warm condition due to the poor plasticity of magnesium alloy. In addition, the reasonable temperature gradient of the workpiece is necessary in light on the principle of deep drawing. The essence why the limited drawing ratio can be improved with the new process is demonstrated. The reasonable temperature gradient can be obtained by the fluid pressure control during deep <b>drawing</b> <b>operation.</b> Thus the feasibility of the new technology is verified...|$|R
25|$|Annealing: This is {{a thermal}} {{treatment}} generally used {{to soften the}} material being drawn, to modify the microstructure, the mechanical properties and the machining characteristics of the steel and/or to remove internal stresses in the product. Depending on the desired characteristics of the finished product, annealing may be used before, during (between passes) or after the cold <b>drawing</b> <b>operation,</b> depending on material requirements.|$|R
5000|$|<b>Draw</b> Railroad <b>Operation</b> Card - <b>Draw</b> a {{card from}} the face up pile, {{conveying}} some sort of benefit.|$|R
50|$|Hardware {{acceleration}} of 2D <b>drawing</b> <b>operations</b> {{has been a}} common feature of many window systems (including X11) for many years. The novelty of Xgl and similar systems {{is the use of}} APIs specifically developed for 3D rendering for accelerating 2D desktop operations. Prior to the adoption of anti-aliased drawing by X11, the use of 3D rendering APIs for 2D desktop rendering was undesirable because such APIs did not make the pixel accurate rendering guarantees {{that are part of the}} original X11 protocol definition.|$|E
5000|$|For Jelly Bean, {{work was}} made on {{optimizing}} the operating system's visual performance and responsiveness {{through a series of}} changes referred to as [...] "Project Butter": graphical output is now triple buffered, vsync is used across all <b>drawing</b> <b>operations,</b> and the CPU is brought to full power when touch input is detected—preventing the lag associated with inputs made while the processor is in a low-power state. These changes allow the operating system to run at a full 60 frames per second on capable hardware.|$|E
50|$|Hardware-accelerated OpenGL {{window and}} desktop rendering, limited to using OpenGL for texture composition, {{has been in}} use in Mac OS X, in a {{technology}} called Quartz Extreme, since Mac OS X v10.2. Quartz 2D Extreme is an enhancement of this feature and more directly comparable to Xgl. Like Xgl, Quartz 2D Extreme brings OpenGL acceleration to all 2D <b>drawing</b> <b>operations</b> (not just desktop compositing) and ships with Mac OS X v10.4, but is disabled by default pending a formal declaration of production-readiness. Core Animation is the extension of this effort for Leopard (Mac OS X v10.5).|$|E
30|$|Teachers can {{specify a}} {{condition}} for actuating the <b>drawing</b> <b>operation</b> by referencing the statement number (statement ID) or variables in the target program, such as “when a certain statement is executed,” or “when {{the value of a}} certain variable satisfies the condition.” A condition can be expressed with six types of comparison operators, ==, !=, >=, <=, <, and >, and three types of operands, i.e., the immediate number, a variable in the target program, and the statement ID.|$|R
40|$|Pegasus is a {{prototype}} drawing system for rapid geometric design. Using Pegasus, a user can construct precise geometric diagrams easily without struggling with complicated editing commands. Two novel interaction techniques are introduced: interactive beautification and predictive drawing. Interactive beautification receives the user's free stroke input and beautifies it by considering possible geometric constraints among segments by generating multiple candidates to prevent recognition errors. Predictive drawing predicts the user's next <b>drawing</b> <b>operation</b> {{based on the}} spatial relationship among existing segments on the screen...|$|R
40|$|The {{object of}} this paper is a sheet metal cover from {{diaphragm}} frictional clutch cover MF 395, made form sheet metal with thickness of 5 mm. Using numerical simulation and experiments, the stress distribution was determined in the technological process of the first deep <b>drawing</b> <b>operation.</b> The numerical simulation was performed using the software Simufact and the stress was determined by applying deformation analysis. A comparative analysis was made between the experimentally obtained results and the ones determined by numerical simulation. ...|$|R
