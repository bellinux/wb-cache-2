10000|10000|Public
5|$|When {{interpreting}} the attitude display instruments under stress, the commander resorted to a reaction pattern (<b>heuristics)</b> {{which he had}} learned earlier.|$|E
5|$|Almost a {{year after}} the initial release, Microsoft quietly {{released}} the second version. It entered the technical preview stage on 19 July 2010, and the final build was released on 16 December 2010. It includes Network Inspection System (NIS), a network intrusion detection system that works on Windows Vista and Windows 7, as well as a new anti-malware engine that employs <b>heuristics</b> in malware detection. Version 2.0 integrates with Internet Explorer to protect users against web-based threats. NIS requires a separate set of definition updates.|$|E
5|$|Norton Internet Security, {{developed}} by Symantec Corporation, {{is a computer}} program that provides malware prevention and removal during a subscription period and uses signatures and <b>heuristics</b> to identify viruses. Other features included in the product are a personal firewall, email spam filtering, and phishing protection. With {{the release of the}} 2015 line in summer 2014, Symantec officially retired Norton Internet Security after fourteen years as the chief Norton product. It is superseded by Norton Security, a rechristened adaptation of the Norton 360 security suite.|$|E
5000|$|<b>Heuristic</b> Algorithms : Modified {{due date}} {{scheduling}} <b>heuristic</b> and Shifting bottleneck <b>heuristic</b> ...|$|R
40|$|Recently, {{landmarks}} count <b>heuristic</b> {{can increase}} the number of problem instances solved and improve the quality of the solutions in satisfying non-optimal planning. &nbsp;In order to make the <b>heuristic</b> optimal, we give the solution to solve the overestimate of landmarks count <b>heuristic.</b> We extend landmarks count <b>heuristic</b> without action cost assignments, and prove that the extension of <b>heuristic</b> is admissible. Our empirical evaluation shows that the extension of <b>heuristic</b> is admissible and can be competed with the state-of-the-art of <b>heuristic...</b>|$|R
40|$|Planning {{problems}} are often formulated as <b>heuristic</b> search. The {{choice of the}} <b>heuristic</b> function {{plays a significant role}} in the performance of planning systems, but a good <b>heuristic</b> is not always available. We propose a new approach to learning <b>heuristic</b> functions from previously solved problem instances in a given domain. Our approach is based on approximate linear programming, commonly used in reinforcement learning. We show that our approach can be used effectively to learn admissible <b>heuristic</b> estimates and provide an analysis of the accuracy of the <b>heuristic.</b> When applied to common <b>heuristic</b> search problems, this approach reliably produces good <b>heuristic</b> functions...|$|R
25|$|<b>Heuristics</b> and metaheuristics make {{few or no}} {{assumptions}} about the problem being optimized. Usually, <b>heuristics</b> do not guarantee that any optimal solution need be found. On the other hand, <b>heuristics</b> are used to find approximate solutions for many complicated optimization problems.|$|E
25|$|Several {{categories}} of <b>heuristics</b> are recognized.|$|E
25|$|In practice, simpler <b>heuristics</b> with weaker {{guarantees}} {{continue to}} be used.|$|E
40|$|Finding {{the optimal}} {{broadcasting}} schedule in an arbitrary network is an NP-hard problem. Many papers {{have been published}} {{on the topic of}} finding an efficient and effective <b>heuristic</b> for broadcasting. In this thesis, a <b>heuristic</b> algorithm for broadcasting in arbitrary networks is presented. This <b>heuristic</b> is first tested in several commonly used graphs; such as Butterfly, CCC d, deBruijn and Shuffle Exchange. In these graphs, this <b>heuristic</b> generates almost the same broadcast schedules as the best existing <b>heuristic</b> for broadcasting. However, the time complexity of this <b>heuristic</b> is much lower. The <b>heuristic</b> is also tested in three of the best-known network design models, and the <b>heuristic</b> outperforms the best existing <b>heuristic</b> in these models. The time complexity of this <b>heuristic</b> is O (R · m), where R represents the rounds of broadcasting, and m stands for the total number of communication links in the network...|$|R
5000|$|Imitate-the-successful <b>heuristic,</b> also {{referred}} to follow-the-best <b>heuristic.</b> An agent using the <b>heuristic</b> would imitate {{the behavior of the}} most successful person in her reference group.|$|R
40|$|This paper {{discusses}} {{the development of}} a <b>heuristic</b> methodology to generate salary merit increases and to schedule these salary actions along a specified planning horizon. The <b>heuristic</b> approach consists of two procedures, referred to as <b>Heuristic</b> Procedure 1 and <b>Heuristic</b> Procedure 2. For a group of executive personnel, <b>Heuristic</b> Procedure 1 yields salary increase percentages, {{in such a way that}} external consistency is maximized without violating internal consistency conditions. <b>Heuristic</b> Procedure 2 establishes the time intervals between salary increases for each eligible employee. A comparison is performed, in terms of computer execution time and optimality of solutions, between the <b>heuristic</b> methodology and a mathematical programming approach developed for formulating salary administration guidelines. Computational results are reported for a number of sample problems. compensation mathematical programming <b>heuristic</b> procedures...|$|R
25|$|The {{teaching}} of <b>heuristics</b> and other problem-solving strategies to solve non-routine problems.|$|E
25|$|<b>Heuristics</b> for {{adaptive}} quadrature {{are discussed}} by Forsythe et al. (Section 5.4).|$|E
25|$|Finding {{special cases}} {{for the problem}} ("subproblems") for which either better or exact <b>heuristics</b> are possible.|$|E
40|$|In this paper, {{we propose}} a Minimum Damage (MinD) rule based <b>heuristic</b> for packing as many equal circles as {{possible}} into a circular container. The MinD <b>heuristic</b> places the next circle {{in a way}} to block the fewest future positions for other circles. The MinD <b>heuristic</b> packs more circles than either the position-coordinates based Bottom-Left (BL) <b>heuristic</b> or the minimum-distance based Maximum Hole Degree (MHD) <b>heuristic...</b>|$|R
50|$|The gaze <b>heuristic</b> is a <b>heuristic</b> used in {{directing}} correct {{motion to}} achieve a goal using one main variable. An example of the gaze <b>heuristic</b> is catching a ball. The gaze <b>heuristic</b> {{is one example of}} psychologist Gerd Gigerenzer's one good reason <b>heuristic,</b> where humans and animals are able to process large amounts of information quickly and react, regardless of whether the information is consciously processed.|$|R
40|$|In 1951 Shannon {{provided}} a simple analog <b>heuristic</b> for the connection game Bridg-It. Although this <b>heuristic</b> is {{based only on}} a simple network flow analysis, Shannon reported that it almost always wins against human players when having the first move. In this note, we analyse this <b>heuristic</b> showing examples where the <b>heuristic</b> fails. Furthermore, we consider the question whether the first player always wins if both players use Shannon’s <b>heuristic...</b>|$|R
25|$|Hex-related {{research}} is current {{in the areas}} of topology, graph and matroid theory, combinatorics, game theory and computer <b>heuristics.</b>|$|E
25|$|Kahneman, D., Slovic, P., & Tversky, A. (1982) Judgment Under Uncertainty: <b>Heuristics</b> and Biases. New York: Cambridge University Press.|$|E
25|$|Examines {{the list}} of hits and applies <b>heuristics</b> in order to select {{templates}} that maximise sequence coverage and confidence.|$|E
40|$|Making {{a choice}} between multidimensional {{alternatives}} is a difficult task. Therefore, a decision maker may adopt some procedure (<b>heuristic)</b> to simplify this task. We provide an axiomatic model of one such <b>heuristic</b> called the Intra-Dimensional Comparison (IDC) <b>heuristic.</b> The IDC <b>heuristic</b> is well-documented in the experimental literature on choice under risk. The IDC <b>heuristic</b> is a procedure in which a decision maker compares multidimensional alternatives dimension-by-dimension and makes a decision based on those comparisons. The model of the IDC <b>heuristic</b> provides a general framework applicable to many different contexts, including risky choice and social choice...|$|R
5000|$|Equity <b>heuristic,</b> also {{referred}} to 1/N <b>heuristic.</b> Using the <b>heuristic</b> means equally distributing resources among the available options. The <b>heuristic</b> {{was found to be}} successful in the stock market and also been found to describe parental resource allocation decisions: parents typically allocate their time and effort equally amongst their children.|$|R
40|$|Abstract: We {{present a}} local {{improvement}} <b>heuristic</b> for genetic algorithms, and term it a Kernighan-Lin style <b>heuristic.</b> We analyze the runtime {{cost of the}} <b>heuristic,</b> and show {{that it can be}} affordable. We then demonstrate through experiments that the <b>heuristic</b> provides very quick solutions to several problems which have been touted in the literature as especially hard ones for genetic algorithms. We suggest explanations for why the <b>heuristic</b> works so well on these problems. ...|$|R
25|$|There {{are quite}} a number of ways to find a knight's tour on a given board with a computer. Some of these methods are {{algorithms}} while others are <b>heuristics.</b>|$|E
25|$|Deterministic {{algorithms}} {{solve the}} problem with exact decision at {{every step of the}} algorithm whereas non-deterministic algorithms solve problems via guessing although typical guesses are made more accurate through the use of <b>heuristics.</b>|$|E
25|$|TSP is a touchstone {{for many}} general <b>heuristics</b> devised for {{combinatorial}} optimization such as genetic algorithms, simulated annealing, Tabu search, ant colony optimization, river formation dynamics (see swarm intelligence) and the cross entropy method.|$|E
30|$|In the {{analytical}} study, the HMOR-S 2 <b>heuristic</b> (basic {{version of the}} <b>heuristic</b> without storage of non-dominated solutions) is run once, followed by a run of the HMOR-S 2 PAS <b>heuristic.</b>|$|R
40|$|One of {{the issues}} in tuning an output {{probability}} of a Bayesian network by changing multiple parameters is the relative amount of the individual parameter changes. In an existing <b>heuristic</b> parameters are tied such that their changes induce locally a maximal change of the tuned probability. This <b>heuristic,</b> however, may reduce the attainable values of the tuned probability considerably. In another existing <b>heuristic</b> parameters are tied such that they simultaneously change in the entire interval. The tuning range of this <b>heuristic</b> will in general be larger then the tuning range of the locally optimal <b>heuristic.</b> Disadvantage, however, is that knowledge of the local optimal change is not exploited. In this paper a <b>heuristic</b> is proposed that is locally optimal, yet covers the larger tuning range of the second <b>heuristic.</b> Preliminary experiments show that this <b>heuristic</b> is a promising alternative...|$|R
40|$|This thesis {{presents}} {{an investigation into}} the use of fuzzy methodologies for University timetabling problems. The first area of investigation is the use of fuzzy techniques to combine multiple <b>heuristic</b> orderings within the con-struction of timetables. Different combinations of multiple <b>heuristic</b> order-ing were examined, considering five graph-based <b>heuristic</b> orderings- Largest Degree, Saturation Degree, Largest Enrolment, Largest Coloured Degree and Weighted Largest Degree. The initial development utilised only two <b>heuristic</b> orderings simultaneously and subsequent development went on to incorpo-rate three <b>heuristic</b> orderings simultaneously. A central hypothesis of this thesis is that this approach provides a more realistic scheme for measuring the difficulty of assigning events to time slots than the use of a single <b>heuristic</b> alone. Experimental results demonstrated that the fuzzy multiple <b>heuristic</b> orderings (with parameter tuning) outperformed all of the single <b>heuristic</b> orderings and non-fuzzy linear weighting factors. Comprehensive analysi...|$|R
25|$|With Amos Tversky and others, Kahneman {{established}} a cognitive basis for common human errors {{that arise from}} <b>heuristics</b> and biases (Kahneman & Tversky, 1973; Kahneman, Slovic & Tversky, 1982; Tversky & Kahneman, 1974), and developed prospect theory (Kahneman & Tversky, 1979).|$|E
25|$|The {{parameters}} of the maximum-margin hyperplane are derived by solving the optimization. There exist several specialized algorithms for quickly solving the QP problem that arises from SVMs, mostly relying on <b>heuristics</b> for breaking the problem down into smaller, more-manageable chunks.|$|E
25|$|Peter Hart, Nils Nilsson and Bertram Raphael of Stanford Research Institute (now SRI International) first {{described}} the algorithm in 1968. It {{is an extension}} of Edsger Dijkstra's 1959 algorithm. A* achieves better performance by using <b>heuristics</b> to guide its search.|$|E
5000|$|To {{avoid using}} the null-move <b>heuristic</b> in zugzwang positions, most chess-playing {{programs}} {{that use the}} null-move <b>heuristic</b> put restrictions on its use. Such restrictions often include not using the null-move <b>heuristic</b> if ...|$|R
40|$|Most of the <b>heuristic</b> search based {{planning}} systems perform guided search evaluating states to compute a <b>heuristic</b> mea-sure. Although recent planners are quite efficient, {{the time spent}} in computing the <b>heuristic</b> measure is still an issue that the community has to address. In this work we present an ex-tension to the <b>heuristic</b> of the relaxed plan introduced by the FF Planner. We propose to integrate in the <b>heuristic</b> measure the actions preconditions difficulty, which is computed dur-ing the relaxed plan extraction phase. Results show {{that the number of}} evaluated states and the time to compute plans are decreased using this integrated <b>heuristic...</b>|$|R
30|$|It {{should be}} noted that a list decoder can never have a higher {{probability}} of correct decoding than a maximum <b>heuristic</b> decoder for the same <b>heuristic.</b> When the list decoder decodes correctly, the user with the maximum <b>heuristic</b> will clearly be in the output set and also be correctly returned by the maximum <b>heuristic</b> decoder.|$|R
