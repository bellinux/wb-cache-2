0|221|Public
40|$|A packet {{forwarding}} node (20) of a {{transport network}} (10) performs a first packet forwarding mode in which received packets (51) are processed and forwarded on a per-packet basis. The forwarding node performs a second packet forwarding mode when the node identifies a group (50) of consecutive <b>packets</b> (51). The <b>group</b> of <b>packets</b> are {{destined for the}} same destination node of the transport network (10). The second packet forwarding mode comprises determining a forwarding treatment for the <b>group</b> of <b>packets</b> (51) and forwarding the <b>group</b> of <b>packets</b> with the determined treatment. The forwarding is performed without processing the headers (52) of {{at least some of}} the <b>packets</b> in the <b>group.</b> The group (50) of consecutive packets (51) is identified by a control packet (60) preceding the group (50) or by inter-packet signalling (53) which indicates that the packet before the inter-packet signalling and the packet after the inter-packet signalling are to be treated as part of the same <b>group.</b> <b>Packets</b> which are determined to be received on transit channels can be forwarded without processing headers of individual packets...|$|R
50|$|Once {{the other}} routers which need to receive those <b>group</b> <b>packets</b> have subscribed, the RP will {{unsubscribe}} to that multicast group, unless it {{also needs to}} forward packets to another router or node. Additionally, the routers will use reverse-path forwarding {{to ensure that there}} are no loops for packet forwarding among routers that wish to receive multicast packets.|$|R
40|$|Wireless {{local area}} {{networks}} experience performance degradation in presence of small packets. The {{main reason for}} that is the large overhead added at the physical and link layers. This paper proposes a concatenation algorithm which <b>groups</b> IP layer <b>packets</b> prior to transmission, called PAC-IP. As a result, the overhead added at the physical and the link layers is shared among the <b>grouped</b> <b>packets.</b> Along with performance improvement, PAC-IP enables packet-based fairness in medium access as well as includes QoS support module handling delay-sensitive trafﬁc demands. The performance of the proposed algorithm is evaluated through both simulations and an experimental WLAN testbed environment covering the single-hop and the widespread infrastructure network scenarios. Obtained results underline signiﬁcant performance enhancement in different operating scenarios and channel conditions...|$|R
30|$|Over the years, several network-coding-based MAC {{protocols}} {{have been}} proposed for UWSNs. VBF-NC [17] is a reliable transport protocol for UWSNs. It transfers packets, coded by network coding, over relay node sets. However, error correction function of network coding cannot improve the throughput of the network and reduce transmission overhead. In order to solve this problem, the multi-path with network coding MAC (MPNC-MAC) [18] protocol is proposed by Shaobin Cai. In MPNC-MAC, three disjoint paths are established firstly, and then, two <b>groups</b> of <b>packets</b> A and B, coded by network coding, are transmitted over the two side paths individually, and another <b>group</b> of <b>packets</b> C (C[*]=[*]A⊕B) are transmitted over the middle path. Hence, two <b>groups</b> of <b>packets</b> can be transmitted over three paths reliably. MPNC-MAC provided higher throughput and reliability of data transmission. However, the MPNC-MAC protocol only applies to the sparse network, and it wastes energy consumption due to idle listening.|$|R
50|$|It {{is related}} to the Fair queuing principle, that <b>groups</b> the <b>packets</b> into classes, and share the service {{capacity}} between them. The GPS shares this capacity according to some fixed weights.|$|R
40|$|In {{this work}} we propose a new stream {{authentication}} scheme that {{is suitable for}} live packet streams distributed over a lossy channel, such as an IP-multicast <b>group.</b> <b>Packets</b> are signed together in a block and the recipient can authenticate this block if the loss rate per block is lower than a certain threshold, which can be chosen based on the characteristic of the communication channel. This scheme provides both integrity and non repudiation of origin, and in a majority of situations, it performs with less overhead in bytes per packet than previously proposed practical live stream authentication schemes...|$|R
40|$|Deep packet {{inspection}} is a {{means of}} ensuring network security and eliminating malicious activity by scanning the contents of packets for threats. Deep packet inspection analyzes each packet on an individual basis to ensure that it does not exhibit a malicious signature. As network link speeds increase as well as the number of threats, it becomes increasingly difficult to scan for threats in real time. As a result, costly and very specialized hardware implementations were designed to handle the demand of scanning packets at high link rates. It is common that packets from the same session arrive out of order at inspection points. As a result it is possible that a signature can exist across the boundaries of two different packets and a scanner will miss a potential threat. The IBM Cell Broadband Engine was selected to <b>group</b> <b>packets</b> of the same session together prior to scanning because it offered a cost effective solution compared to specialized hardware. By having the ability to scan across packet boundaries one achieves a greater degree of threat detection and characterization of traffic. This thesis investigates the performance achieved by using the Cell processor as a preprocessor to <b>group</b> <b>packets</b> from the same network sessions together for scanning across packet boundaries. The implemented sessionizer was capable of processing network traffic at a worst case rate of 3 Gb/s and a best case of 20 Gb/s with four out of eight available synergistic processing elements...|$|R
40|$|Packet # 1 : Alternatives to Traditional Teaching Methods and Learning Strategies Packet # 2 : Cooperative/Collaborative Learning, Small <b>Groups</b> <b>Packet</b> # 3 : Critical Thinking Packet # 4 : Defining and Characterizing Teaching Packet # 5 : Diversity Issues Packet # 6 : Evaluation and Grading Issues Packet # 7 : Improvement of Teaching and Assessment Packet # 8 : Introductory Courses / General Education Packet # 9 : Motivating Students Packet # 10 : The Student/Teacher Relationship Packet # 11 : Change, Renewal, and the Professoriate Packet # 12 : Thoughts on the Future Packet # 13 : Technology and Related Issues Packet # 14 : The Learning Proces...|$|R
3000|$|... simulator. In our simulations, a {{multihop}} cluster hierarchical WSN is randomly generated {{with the}} fixed {{value of the}} number of sensors if without specification. We <b>group</b> the <b>packets</b> required to send into batches, and each batch has [...]...|$|R
40|$|The core-assisted mesh {{protocol}} (CAMP) {{is introduced}} for multicast routing in ad hoc networks. CAMP generalizes {{the notion of}} core-based trees introduced for internet multicasting into multicast meshes that have much richer connectivity than trees. A shared multicast mesh is defined for each multicast group; the main goal of using such meshes is to maintain the connectivity of multicast groups even while network routers move frequently. CAMP consists of the maintenance of multicast meshes and loop-free packet forwarding over such meshes. Within the multicast mesh of a <b>group,</b> <b>packets</b> from any source in the group are forwarded along the reverse shortest path to the source, just as in traditional multicast protocols based on source-based trees. CAMP guarantees that within a finite time, every receiver of a multicast group has a reverse shortest path to each source of the multicast <b>group.</b> Multicast <b>packets</b> for a <b>group</b> are forwarded along the shortest paths from sources to receivers defined within the group's mesh. CAMP uses cores only to limit the traffic needed for a router to join a multicast group; the failure of cores does not stop packet forwarding or the process of maintaining the multicast meshes...|$|R
30|$|In this technique, there won’t be any {{possibilities}} for a malicious node to make tunnelling between {{the source and}} the destination nodes, as it {{is not included in}} the either of any <b>groups.</b> The <b>packets</b> are safe to reach the destination node efficiently.|$|R
40|$|The {{internal}} {{waves on}} the continental shelf on the Middle Atlantic Bight seen on Space Shuttle photographs {{taken during the}} STS- 40 mission in June 1991 are measured and analyzed. The internal wave field in the sample area has a three-level structure which consists of <b>packet</b> <b>groups,</b> <b>packets,</b> and solitons. An average <b>packet</b> <b>group</b> wavelength of 17. 5 km and an average soliton wavelength of 0. 6 km are measured. Finite-depth theory is used to derive the dynamic parameters of the internal solitons: the maximum amplitude of 5. 6 m, the characteristic phase speed of 0. 42 m/s, the characteristic period of 23. 8 min, the velocity amplitude of the water particles in {{the upper and lower}} layers of 0. 13 m/s and 0. 030 m/s respectively, and the theoretical energy per unit crest line of 6. 8 x 10 exp 4 J/m. The frequency distribution of solitons is triple-peaked rather than continuous. The major generation source is at 160 m water depth, and a second is at 1800 m depth, corresponding to the upper and lower edges of the shelf break...|$|R
30|$|MPNC (multiple {{path and}} network coding) is {{proposed}} as a reliable transport protocol for UWASN (underwater acoustic sensor network). In MPNC, after three disjoint paths being established, two <b>groups</b> of <b>packets</b> (A and B), coded by network coding, are transmitted {{over the two}} side paths respectively, and another <b>group</b> of <b>packets</b> C[*]=[*]A[*]⊕[*]B are transmitted over the middle path. That is, any two paths can work together as a redundant path for another path, and the reliable transmission of one packet can be guaranteed by 1.5 packets. In {{order to reduce the}} number of redundant packets without affecting the transmission reliability, the <b>packets</b> of <b>group</b> C are coded further at special ratio by network coding as shareable redundant packets according to the link error, and a reliable transport protocol TPNC (twin path and network coding) based on two paths and network coding is proposed in this paper. In TPNC, after two disjoint paths, called twin paths, being established, two <b>groups</b> of <b>packets</b> (A and B), coded by network coding, are transmitted with their own shareable redundant packets over the two paths respectively to guarantee the data packet transmission reliability. The results of simulations show that, compared with MPNC, TPNC can acquire similar data delivery ratio with lower energy consumption.|$|R
40|$|Abstract — The core-assisted mesh {{protocol}} (CAMP) {{is introduced}} for multicast routing in ad hoc networks. CAMP generalizes {{the notion of}} core-based trees introduced for internet multicasting into multicast meshes that have much richer connectivity than trees. A shared multicast mesh is defined for each multicast group; the main goal of using such meshes is to maintain the connectivity of multicast groups even while network routers move frequently. CAMP consists of the maintenance of multicast meshes and loop-free packet forwarding over such meshes. Within the multicast mesh of a <b>group,</b> <b>packets</b> from any source in the group are forwarded along the reverse shortest path to the source, just as in traditional multicast protocols based on source-based trees. CAMP guarantees that within a finite time, every receiver of a multicast group has a reverse shortest path to each source of the multicast <b>group.</b> Multicast <b>packets</b> for a <b>group</b> are forwarded along the shortest paths from sources to receivers defined within the group’s mesh. CAMP uses cores only to limit the traffic needed for a router to join a multicast group; the failure of cores does not stop packet forwarding or the process of maintaining the multicast meshes. Index Terms—Ad hoc networks, core-based trees, meshes, mobile networks, multicasting, routing. I...|$|R
30|$|Node S codes <b>packets</b> of <b>group</b> D {{by network}} coding {{to acquire the}} D(1 [*]+[*]⌊e⌋) packets and forms <b>packet</b> <b>group</b> E.|$|R
40|$|ABSTRACT: In this {{position}} {{paper we propose}} an event-based decomposition of business rules, providing guidance and examples of how rules from e-commerce applications may be decomposed into events and stored in an event store. Rules may be <b>grouped</b> into <b>packets</b> or contracts for manageability. KEY WORDS: business rules, policy, events...|$|R
40|$|Applications to {{evaluate}} Internet quality-of-service and increase network security {{are essential to}} maintaining reliability and high performance in computer networks. These applications typically use very accurate, but high cost, hardware measurement systems. Alternate, less expensive software based systems are often impractical for use with analysis applications because they reduce the number and accuracy of measurements using a technique called interrupt coalescence, which {{can be viewed as}} a form of sampling. The goal of this paper is to optimize the way interrupt coalescence <b>groups</b> <b>packets</b> into measurements so as to retain as much of the packet timing information as possible. Our optimized solution produces estimates of timing distributions much closer to those obtained using hardware based systems. Further we show that for a real Internet analysis application, periodic signal detection, using measurements generated with our method improved detection times by at least 36 %...|$|R
30|$|Source node: The {{source node}} will start {{transmitting}} when it receives g packets {{from the upper}} layers. It will encode them into h output packets and send {{them down to the}} MAC layer with hop count equal to 1. In this way, the source performs NC to the desired <b>group</b> of <b>packets.</b> There might also be cases when there are less than g packets to transmit. In this case, the upper layers may inform the encoder to process a smaller <b>group</b> of <b>packets.</b> This will save time and keep the end-to-end delay limited. To contrast harsh environments, it is preferable to have h>g. This is because the first hop is the bottleneck of the overall transmission. If all the source’s 1 -hop neighbours do not receive g independent packets, the overall transmission will result in a waste of energy since the destination cannot retrieve the original information.|$|R
40|$|Abstract: In single-hop {{star network}} with {{wavelength}}-division-multiplexing (WDM) technique, the packet/ wavelength assignment {{over a number}} of available channels is an important issue to provide low switching delay and high bandwidth utilization. Basically, three pipelined stages are used to service packets: collecting packets stage, scheduling packet stage and transmitting packet stage. Conventional scheduling algorithms only discuss how to find the schedule with the minimal access delay for an individual group of variable length packets regardless the pipeline feature. If the schedule of a <b>group</b> of <b>packets</b> cannot finish all transmissions before the starting time of servicing the packets of the following <b>group,</b> some <b>packets</b> will suffer extra delay. In this paper, we will propose a scheduling algorithm to overcome the potential problem by performing load balance in channels. Simulations show that the proposed balancing approach indeed can reduce the average delay and improve the load balance degree concurrently...|$|R
40|$|Because {{of rising}} costs and reduced {{reliability}} of spacecraft and ground network {{hardware and software}} customization, standardization Packet Telemetry and Packet Telecommand concepts are emerging as viable alternatives. Autonomous packets of data, within each concept, which are created within ground and space application processes {{through the use of}} formatting techniques, are switched end-to-end through the space data network to their destination application processes through the use of standard transfer protocols. This process may result in facilitating a high degree of automation and interoperability because of completely mission-independent-designed intermediate data networks. The adoption of an international guideline for future space telemetry formatting of the Packet Telemetry concept, and the advancement of the NASA-ESA Working <b>Group's</b> <b>Packet</b> Telecommand concept to a level of maturity parallel to the of Packet Telemetry are the goals of the Consultative Committee for Space Data Systems. Both the Packet Telemetry and Packet Telecommand concepts are reviewed...|$|R
3000|$|... is {{the floor}} operator. The {{assumption}} {{used in this}} paper is that all packets in the coded group are of the same length. This imposes some limitations which can be overcome by padding the packets to the same length. For brevity of notation, for all symbols in the <b>group</b> of <b>packets,</b> we rewrite (1) using the packet version of this relationship as: [...]...|$|R
40|$|Abstract — To {{overcome}} the drawbacks {{of the existing}} methods for traffic classification (by ports, Deep Packet Inspection, statistical classification), a new system was developed, in which the data are collected and classified directly by clients installed on machines belonging to volunteers. Our approach combines the information obtained from the system sockets, the HTTP content types, and the data transmitted through network interfaces. It allows to <b>group</b> <b>packets</b> into flows and associate them with particular applications or the types of service. This paper presents the design and implementation of our system, the testing phase and the obtained results. The performed threat assessment highlights potential security issues and proposes solutions in order to mitigate the risks. Furthermore, it proves {{that the system is}} feasible in terms of uptime and resource usage, assesses its performance and proposes future enhancements. We released the system under The GNU General Public License v 3. 0 and published it as a SourceForge project called Volunteer-Based System for Research on the Internet...|$|R
40|$|The {{focus of}} this paper is on the {{engineering}} of a work efficient IPv 6 header compressor. We introduce a new adaptive data structure, the move-to-root Patricia tree, with favorable properties for this particular application. Considerable effort has been devoted to an efficient implementation in the C programming language, and the incorporation of the data structure with an existing IPv 6 header compression implementation for the NetBSD operating system. Experiments performed on a 200 MHz Pentium Pro machine running NetBSD 1. 2 show that the data structure gives extremely fast compression state lookup. Our results indicate that we can perform lookup on approximately 100, 000 headers per second. Assuming an average packet size of 125 bytes, this translates into a link capacity of 100 Mbits per second. 1. Introduction In today's Internet, a widely used method for increasing the bandwidth utilization is header compression. The header compression algorithm <b>groups</b> <b>packets</b> into flows where the [...] ...|$|R
40|$|As {{the number}} of {{portable}} devices roaming across the Internet increases, the problem of routing packets to mobile hosts generates increasing research and commercial interest. This paper presents a hierarchical scheme to support mobility in the Internet. This scheme {{is based on the}} Multicast routing protocol PIM-SM. In this proposal, a mobile node is seen by its correspondent nodes as a special Multicast <b>group.</b> <b>Packets</b> destined for a mobile host are delivered to its RP (RendezVous point) and then forwarded to the mobile node's current location. Our scheme has two main benefits. First, it is hierarchical and therefore reduces handoff latency and the load on the Internet. Second, it uses IP Multicast and consequently benefits from its diffusion property, which can be very useful for providing smooth subnet handoffs. We compare the performance of our approach with the IETF Mobile IPv 6 proposal. We show that while our approach has a larger memory space requirement, it reduces the network lo [...] ...|$|R
40|$|To {{overcome}} the drawbacks of existing methods for traffic classification (by ports, Deep Packet Inspection, statistical classification) {{a new system}} has been developed, in which data are collected and classified directly by clients installed on machines belonging to volunteers. Our approach combines the information obtained from the system sockets, the HTTP content types, and the data transmitted through network interfaces. It allows <b>grouping</b> <b>packets</b> into flows and associating them with particular applications or types of service. This paper presents the design of our system, implementation, the testing phase and the obtained results. The performed threat assessment highlights potential security issues and proposes solutions in order to mitigate the risks. Furthermore, it proves {{that the system is}} feasible in terms of uptime and resource usage, assesses its performance and proposes future enhancements. We released the system under The GNU General Public License v 3. 0 and published as a SourceForge project called Volunteer-Based System for Research on the Internet...|$|R
3000|$|B are {{two groups}} of K {{original}} packets. They are coded by network coding individually to form two coded <b>packet</b> <b>groups</b> (A and B), {{each of which has}} K[*]+[*]K [...]...|$|R
40|$|We {{consider}} {{in this paper}} packets which arrive according to a Poisson process into a finite queue. Often, a <b>group</b> of consecutive <b>packets</b> forms a frame, and loss of one packet results {{in the loss of}} the whole frame. This is the case in ATM where a transport layer protocol (the AAL layer) is responsible for this <b>grouping.</b> Thus, <b>packets</b> of a frame, that arrive after a packet is lost from the same frame, have no use anymore, and it is advantageous to discard them. We derive exact expressions for the performan- ce of such a policy and obtain simple approximations for the heavy traffic regime. Our analytical results may be quite useful in dimensioning the buffer size that is necessary for a given required bound on loss rate...|$|R
40|$|This paper {{presents}} a test input data compression technique, {{which can be}} used to reduce input test data volume, test time, and the number of required tester channels. The technique is based on <b>grouping</b> data <b>packets</b> and applying various binary encoding techniques, such as Huffman codes and Golomb-Rice codes. Experiments on actual industrial designs and benchmark circuits show an input vector data reduction ranging from 17 x to 70 x...|$|R
40|$|In {{this paper}} we propose a novel {{methodology}} to generate realistic traffic traces to be used for performance evaluation of switches. Indeed, real Internet traffic shows long and short range dependency characteristics, difficult to be captured by flexible, yet simple, synthetic models. One option is to use real traffic traces, which however are difficult to obtain, as requires to capture traffic in different places with synchronization and management problems. We therefore present a methodology to generate several synthetic traffic traces from a single real trace of <b>packets,</b> by carefully <b>grouping</b> <b>packets</b> belonging to the same flow to guarantee to keep the same statistical properties of the original trace. After formalizing the problem, we solve it and apply the results to assess the performance of scheduling algorithms in high performance switches, comparing the results to other simpler traffic models traditionally adopted in the switching community. Our results show that realistic traffic degrades the performance of the switch by more than one order of magnitude with respect to the traditional traffic models...|$|R
30|$|There {{are several}} related {{concepts}} {{in this area}} which can also be referred as multi-path routing and may {{be confused with the}} meaning of multi-path routing as it is used in this paper. In this paper, we use the term multi-path routing for partitioning the data into <b>groups</b> of data <b>packets</b> without employing data redundancy and sending each <b>group</b> of <b>packets</b> via a different path towards the base station. Alternate path routing is different from multi-path routing in the sense that a single path is used in normal operation, but alternative paths are kept ready to be used in case the primary path becomes unavailable. Redundant multi-path routing is another related term that means the data to be conveyed to the base station is transported via multiple paths with added redundancy (e.g., multiple replicas of the data are sent on different paths) [8].|$|R
30|$|In {{order to}} reduce data {{transmission}} overhead, the <b>packets</b> of <b>group</b> C are coded further at special ratio by network coding as shareable redundant packet according to the link error, and TPNC (twin path and network coding) is proposed in this paper. In TPNC, two disjoint paths are established firstly, and then, one <b>group</b> of <b>packets</b> A(B), coded by network coding, are transmitted with its respective shareable redundant packets on one path.|$|R
40|$|We present PERT, a {{power-efficient}} {{scheme to}} deliver real-time data packets in sensor networks. Time-sensitive sensor data {{is common in}} applications such as hazard monitoring systems, traffic control systems and battlefield command systems. Such data are associated with end-to-end deadlines, within which they must reach the base station. We make two contributions in this work. First, we propose a novel loadbalanced routing scheme that distributes data packets evenly among the nodes relaying data towards the base station, avoiding bottlenecks and increasing the likelihood that packets will meet their deadlines. Second, we propose a method of <b>grouping</b> smaller <b>packets</b> into larger ones by delaying data transmissions at the relaying nodes whenever slack times are positive. Our <b>packet</b> <b>grouping</b> scheme significantly reduces packet transmissions, reduces congestion, and saves power in the sensor network. We verify the effectiveness of our approach through extensive simulations of wireless networ...|$|R
30|$|Three {{groups are}} {{selected}} to generate traffic. But {{only half of}} the group members from each <b>group</b> will generate <b>packets.</b> This is to mimic the real scenario where group members may have different tasks or different traffic amounts within a group.|$|R
40|$|Abstract—The DVB-H {{standard}} {{has been}} defined to provide digital video broadcast to mobile handheld devices. However, without a request channel, a handheld device may encounter data loss and thus it requires an additional recovery architecture to relieve this problem. In this paper, we follow the DVB-IPDC standard and propose combining a DVB-H system with an IP-relay wireless network. A handheld device losing DVB-H data can thus request the relay network for retransmission. Under this architecture, we identify two critical issues, <b>group</b> <b>packet</b> loss (GPL) and broadcast data handover (BDH). The GPL problem occurs when there are bursty requests for retransmissions of the same data with high spatial and temporal locality, causing network congestion. The BDH problem occurs when these re-questing devices move out of their current serving cells. In this paper, we propose a bulk request recovery (BRR) scheme to solve these problems by exploiting spatial and temporal locality of recovery requests. Our scheme can efficiently reduce duplicate requests and schedule retransmissions of lost packets, so both GPL and BDH problems are relieved. Simulations results are also presented to verify the effectiveness of our result. Index Terms—broadcasting network, DVB-H, error recovery, scheduling, video broadcast, wireless network. I...|$|R
40|$|Abstract—Stationary {{collectors}} reading wireless, battery pow-ered smart meters, often {{operate in}} harsh channel conditions to cut network installation cost to a minimum, challenging the individual link to each meter. The desired performance measure is reliable reception {{of at least}} some data from {{as many as possible}} meters, rather than increasing the fraction of received packets from one meter. As a first step for improving reliable reception, and motivated by the recent revision of Wireless M-Bus, we propose the use of a deterministic packet transmission interval to <b>group</b> <b>packets</b> from the same meter. We derive the probability of falsely pairing packets from different senders in the simple case of no channel errors, and show through simulation and data from an experimental deployment the probability of false pairing with channel errors. The pairing is an essential step towards recovery of metering data from as many as possible meters under harsh channel conditions. From the experiment we find that more than 15 % of all conducted pairings are between two erroneous packets, which sets an upper bound on the number of additional meters that can be reliably recovered. I...|$|R
40|$|Abstract—IPSec is a {{suite of}} {{protocols}} that adds security to communications at the IP level. Protocols within the IPSec suite make extensive use of cryptographic algorithms. Since these algorithms are computationally very intensive, some hardware acceleration is needed to support high throughput. IPSec accelerator performance may heavily depend on the dimension of the packets to be processed. In fact, when packets are small, {{the time needed to}} transfer data and to set up the accelerators may exceed the one to process (e. g. to encrypt) the packets by software. In this paper we present a packet scheduling algorithm that tackles this problem. Packets belonging to the same Security Association are grouped before the transfer to the accelerators. Thus, the transfer and the initialization time have a lower influence on the total processing time of the packets. This algorithm also provides the capability of scheduling <b>grouped</b> <b>packets</b> over multiple cryptographic accelerators. High-level simulations of the scheduling algorithm have been performed and the results for a one-accelerator and for a two-accelerator system are also shown in this paper. Index Terms—Cryptographic accelerators, packet scheduling algorithm, IPSec, small packets...|$|R
