1|204|Public
30|$|Since {{the first}} {{introduction}} of quantum-dot cellular automata (QCA), an interesting nanoscale computing paradigm by Lent et al. in 1993 [1], many researchers have embraced its simple concept and {{potential as a}} future processing platform [2 – 6]. In recent years, a group of researchers have presented a generalization of the basic QCA cell, namely the ternary QCA (tQCA) cell [7 – 10], which enables ternary computation. Their principal motivator was the premise that future processing platforms should not disregard the advantages of multi-valued processing [11 – 15]. The group presented the basic ternary building blocks, the inverter, majority <b>gate,</b> <b>wire,</b> corner wire and fan-out, and more recently also, a functionally complete set of ternary logic functions, based on Post Logic, and a memorizing tQCA circuit [16, 17]. Due to the specifics of the tQCA cell, wire crossings seem to be the principal drawback before a more widespread acceptance of tQCA circuitry. Wire crossings {{are one of the most}} used steps in systematic logic design. In the classic, binary QCAs, wires can be crossed either in a coplanar fashion by using rotated QCA cells for one of the wires or in a multilayer fashion where two intermediate layers are used to prevent any possible crosstalk between the two crossing lines [18]. Although the multilayer approach proves to be more robust [19], the majority of designs employ the coplanar one; that is in fact one of the most praised features of classic QCA. Since coplanar crossings tend to be prone to robustness issues, much research has been devoted to its increase, even to the extents of altering the design of QCA logic gates [20 – 22], or as in the case of molecular implementations, through the elimination of crossings by logic gate duplication [23, 24]. Another approach exploits the pipelined nature of QCAs and uses parallel-to-serial converters and a specialized clocking scheme to design a coplanar crossbar network [25]. Coplanar crossings with rotated tQCA cells are not possible, but multilayer crossings are, as it has been reported recently [26]. Here, we go a step further by presenting a wire crossing that is synchronized, i.e., the two wires employ such clocking schemes that the outputs of the two wires have the same effective delay. In addition, the clocking schemes allow for a two-layer design, in other words, removing the requirement for additional layers, whose sole purpose is to prevent possible crosstalk. The article is organized as follows. We first present the overview of a ternary QCA cell, its architecture and inter-cell interaction. We follow by presenting a two-layer design, where we first show the inter-layer interaction followed by presenting the design and clocking scheme of a two-layer synchronized wire crossing.|$|E
5000|$|John Warne <b>Gates,</b> <b>Wire</b> & Steel magnate, {{railroad}} and oil financier ...|$|R
50|$|A Hampshire gate, New Zealand <b>gate</b> or <b>wire</b> <b>gate</b> {{is a type}} of {{agricultural}} gate formed from a section of wire fence which can be removed temporarily.|$|R
40|$|In {{the deep}} {{sub-micron}} domain wires consume {{more power than}} transistors. Power <b>Gating</b> for <b>Wires</b> {{is a form of}} bus segmentation that alleviates the power loss from on-chip interconnects, by switching off the supply voltage from inactive drivers, cycle by instruction-cycle. The success of Power <b>Gating</b> for <b>Wires</b> depends much on control: the gain from segmentation can conceivably be undon...|$|R
50|$|Delay {{calculation}} is {{the term}} used in integrated circuit design for the calculation of the gate delay of a single logic <b>gate</b> and the <b>wires</b> attached to it. By contrast, static timing analysis computes the delays of entire paths, using delay calculation to determine the delay of each <b>gate</b> and <b>wire.</b>|$|R
40|$|We {{evaluate}} {{the performance of}} resonant tunneling permeable base transistors (RT-PBTs) by numerical simulations. Since the current {{is limited by the}} barriers, a design with a low doping level around the embedded <b>gate</b> <b>wires</b> is chosen to improve the transconductance. We {{evaluate the}} influence of the various geometrical parameters, to optimize the design for high frequency operation. We obtain a performance comparable to conventional PBTs, to which we have incorporated the tunneling characteristic...|$|R
40|$|A new {{scattering}} {{approach for}} correlated one-dimensional systems is developed. The adiabatic contact to charge reservoirs is encoded in time-dependent boundary conditions. The conductance matrix for an arbitrary <b>gated</b> <b>wire,</b> respecting charge conservation, is expressed through a dynamic scattering matrix. It is {{shown that the}} dc conductance is equal to e^ 2 /h for any model with conserved total left- and right-moving charges. The ac conductance matrix is explicitly computated for the interacting Tomonaga-Luttinger model. Comment: Five revtex pages, one Postscript figur...|$|R
50|$|The {{property}} has {{a concrete}} post fence with spherical tops, iron <b>gates</b> and <b>wire</b> balustrade on Mowbray Terrace, and a timber and wire fence on Geelong Street.|$|R
40|$|While still {{relatively}} "new", the quantum-dot cellular automata (QCA) {{appears to be}} able to provide many of the properties and functionalities that have made CMOS successful over the past several decades. Early experiments have demonstrated and realized most, if not all, of the "fundamentals " needed for a computational circuit [...] devices, logic <b>gates,</b> <b>wires,</b> etc. This study introduces the beginning of a next step in experimental work: designing a computationally useful [...] yet simple and fabricatable circuit for QCA. The design target is a QCA Field Programmable Gate Array...|$|R
5000|$|Clock gating: The clock {{distribution}} to entire functional {{units in the}} processor is blocked, thus saving dynamic power from the capacitive charging and discharging of synchronous <b>gates</b> and <b>wires.</b>|$|R
40|$|Abstract — This paper {{considers}} simultaneous <b>gate</b> and <b>wire</b> sizing {{for general}} very large scale integrated (VLSI) circuits under the Elmore delay model. We present a fast and exact algorithm which can minimize total area subject to maximum delay bound. The algorithm {{can be easily}} modified to give exact algorithms for optimizing several other objectives (e. g., minimizing maximum delay or minimizing total area subject to arrival time specifications at all inputs and outputs). No previous algorithm for simultaneous <b>gate</b> and <b>wire</b> sizing can guarantee exact solutions for general circuits. Our algorithm is an iterative one with a guarantee on convergence to global optimal solutions. It is based on Lagrangian relaxation and “one-gate/wire-at-a-time ” greedy optimizations, and is extremely economical and fast. For example, we can optimize a circuit with 27 648 <b>gates</b> and <b>wires</b> in 11. 53 min using under 23 Mbytes memory on a PC with a 333 -MHz Pentium II processor. Index Terms—Gate sizing, interconnect, Lagrangian relaxation, performance optimization, wire sizing...|$|R
40|$|This paper {{considers}} simultaneous <b>gate</b> and <b>wire</b> sizing {{for general}} very large scale integrated (VLSI) circuits under the Elmore delay model. We present a fast and exact algorithm which can minimize total area subject to maximum delay bound. The algorithm {{can be easily}} modified to give exact algorithms for optimizing several other objectives (e. g., minimizing maximum delay or minimizing total area subject to arrival time specifications at all inputs and outputs). No previous algorithm for simultaneous <b>gate</b> and <b>wire</b> sizing can guarantee exact solutions for general circuits. Our algorithm is an iterative one with a guarantee on convergence to global optimal solutions. It is based on Lagrangian relaxation and "one-gate/wire-at-atime " greedy optimizations, and is extremely economical and fast. For example, we can optimize a circuit with 27 648 <b>gates</b> and <b>wires</b> in 11. 53 min using under 23 Mbytes memory on a PC with a 333 -MHz Pentium II processor...|$|R
5000|$|Cosmic <b>Gate</b> - Fire <b>Wire</b> (Cosmic <b>Gate</b> B2B3 Reconstruction) 2007 ...|$|R
40|$|AbstractWe {{investigated}} the spin lifetime in gate-fitted InGaAs narrow wires by magnetotransport measurement. By applying positive gate bias voltage, the spin lifetime in narrow wires became {{more than one}} order longer than those obtained from a Hall bar sample with two-dimensional electron gas. By comparison with a theoretical model of the quasi one-dimensional transport, {{it is found that}} this enhancement of spin lifetime in <b>gated</b> <b>wires</b> is due to dimensional confinement and resonant spin-orbit interaction effect by gate bias modulation of the Rashba spin-orbit interaction. Spin relaxation due to the cubic Dresselhaus term is negligible in the present InGaAs wires...|$|R
5000|$|Cosmic <b>Gate</b> - Fire <b>Wire</b> (Cosmic <b>Gate's</b> Back 2 The Future Remix) 2010 ...|$|R
50|$|The Old Head of Kinsale juts {{into the}} Atlantic Ocean and widens {{out after a}} narrow isthmus at its entrance. It {{is at this point}} that access is blocked with <b>gates,</b> barbed <b>wire</b> and heavy security.|$|R
40|$|In a {{one-dimensional}} (1 D) {{system of}} interacting electrons, excitations of spin and charge travel at different speeds, {{according to the}} theory of a Tomonaga-Luttinger liquid (TLL) at low energies. However, the clear observation of this spin-charge separation is an ongoing challenge experimentally. We have fabricated an electrostatically gated 1 D system in which we observe spin-charge separation and also the predicted power-law suppression of tunneling into the 1 D system. The spin-charge separation persists even beyond the low-energy regime where the TLL approximation should hold. TLL effects should therefore also be important in similar, but shorter, electrostatically <b>gated</b> <b>wires,</b> where interaction effects are being studied extensively worldwide...|$|R
40|$|In {{the deep}} {{sub-micron}} domain wires consume {{more power than}} transistors. Power <b>Gating</b> for <b>Wires</b> {{is a form of}} bus segmentation that alleviates the power loss from on-chip interconnects, by switching off the supply voltage from inactive drivers, cycle by instruction-cycle. The success of Power <b>Gating</b> for <b>Wires</b> depends much on control: the gain from segmentation can conceivably be undone by control costs. Yet during design exploration, the data required for statistical analysis are not available. A theory of efficient control for Power <b>Gating</b> for <b>Wires</b> and a design framework, determining the balance of cost factors, at an early stage, are both needed. In this paper, we formulate a theory of Useful State Analysis to obtain minimal-redundancy encoding of control information. We establish two figures of merit, based on network topology: Intrinsic Sectioning Gain and Useful Encoding Efficiency. They quantify the power loss reduction achievable, and the success of Useful State Analysis in keeping control costs low. We propose a design pattern for the operation of a control plane, wherein the costs of control can be identified. From use cases, we find that architectures can have an Intrinsic Sectioning Gain of 50 % and more. Useful Encoding Efficiency is found to be in a range of 44 - 80 % for some common multipath architectures. Although ultimately, the limits of feasibility to control Power <b>Gating</b> for <b>Wires</b> must be decided by means of statistical analysis, we find Useful State Analysis is applicable to networks with tens of terminals, and that our method of control scales well with increasing network size and complexity...|$|R
50|$|The key {{advantage}} of VHDL, when used for systems design, {{is that it}} allows the behavior of the required system to be described (modeled) and verified (simulated) before synthesis tools translate the design into real hardware (<b>gates</b> and <b>wires).</b>|$|R
40|$|An {{emerging}} nanotechnology, quantum-dot cellular automata (QCA), has {{the potential}} for attractive features such as faster speed, smaller size, and lower power consumption than transistor based technology. Quantum-dot cellular automata has a simple cell as the basic element. The cell is used as a building block to construct <b>gates,</b> <b>wires,</b> and memories. Several adder designs have been proposed, but multiplier design in QCA is a rather unexplored research area. This paper utilizes the QCA characteristics to design serial parallel multipliers. Two types of serial parallel multipliers are designed and simulated with several different operand sizes. Those designs are compared in terms of complexity, area, and latency. The serial parallel multipliers have simple and regular structures. 1...|$|R
60|$|He unhitched {{his horse}} and mounted, and Jernyngham walked {{with him to the}} <b>gate</b> in the <b>wire</b> fence.|$|R
40|$|ABSTRACT- This paper {{presents}} a new design flow, FPD-SiMPA, {{and a set}} of techniques for synthesizing high-performance sub-half micron logic circuits. FPD-SiMPA consists of logic partitioning, floorplanning, global routing, and timing analysis/budgeting steps, followed by technology remapping and detailed placement of the selected logic clusters. The strength of the approach lies in the dynamic programming-based algorithm, SiMPA-D, used for performing simultaneous technology mapping and linear placement of logic clusters. This algorithm generates a set of solutions for each cluster, all of which are noninferior (in terms of gate area, cutwidth and delay), and hence permits trade-offs between total area (<b>gate</b> plus <b>wiring)</b> and total delay (<b>gate</b> plus <b>wiring).</b> Experimental results from a large number of MCNC benchmarks have proved the effectiveness of the proposed flow. I...|$|R
5000|$|... #Caption: Two quickdraws. The upper {{has a solid}} bent gate for {{the rope}} and the lower a <b>wire</b> <b>gate</b> for it.|$|R
50|$|A path-based {{algorithm}} sums <b>gate</b> and <b>wire</b> delays {{on specific}} paths. The statistical calculation is simple, but {{the paths of}} interest must be identified prior to running the analysis. There is the potential that some other paths may be relevant but not analyzed so path selection is important.|$|R
40|$|With an {{ever-increasing}} {{portion of the}} delay in high-speed CMOS chips attributable to the interconnect, inter-connect-circuit design automation continues to grow in importance. By transforming the <b>gate</b> and multilayer <b>wire</b> sizing problem into a convex programming problem for the Elmore delay approximation, we demonstrate the effi-cacy of a sequential quadratic programming (SQP) solu-tion method. For cases where accuracy greater than that provided by the Elmore delay approximation is required, we apply SQP to the <b>gate</b> and <b>wire</b> sizing problem with more accurate delay models. Since efficient calculation of sensitivities {{is of paramount importance}} during SQP, we describe an approach for efficient computation of the accurate delay sensitivities. ...|$|R
5000|$|... #Caption: Clockwise {{from top}} left: D-shaped <b>wire</b> <b>gate,</b> D-shaped {{straight}} gate, Oval straight gate, Pear-shaped auto-locker, D-shaped screw-locker. Center {{is a standard}} carabiner rating.|$|R
40|$|A digital {{simulator}} incorporating <b>gate</b> and <b>wire</b> delays, with friendly GUI. Intended for use {{demonstrating the}} operation of digital circuits in lectures and labs, but {{can also be used}} for designing simple circuits. Runs in a web-browser (requires the Silverlight plug-in, so don't use Chrome). Saves and loads designs to the clipboard...|$|R
40|$|We {{study the}} {{transport}} through <b>gated</b> GaAS:Si <b>wires</b> of 0. 5 micrometer length in the insulating regime and observe transport via elastic tunneling {{at very low}} temperature. We describe the mean positive magnetoconductance and the mesoscopic fluctuations of the conductance (versus energy or magnetic field) purely within one electron model without introducing Coulomb blockade considerations. Comment: 23 pages, 19 figure...|$|R
60|$|Red Rock ranch was now {{in plain}} view, not over two hundred yards distant. In front and to one side was a level stretch. The reddish rocks were behind, leading to a small hill. There were {{numerous}} outbuildings, and a heavy barbed fence surrounded the whole, excepting at one point, {{where there was a}} wide-swinging <b>gate</b> of <b>wire</b> and boards.|$|R
40|$|In this study, a {{new method}} for {{automatic}} optimization of digital circuit design method has been introduced. This method is base on randomized search techniques mimicking natural genetic evolution. The proposed method is an iterative procedure {{that consists of}} a constant-size population of individuals, each one encoding a possible solution in a given problem space. The structure of the circuit is encoded into one-dimensional genotype as represented by a finite string of bits. A number of bit string used to represent 8 types of possible logic <b>gates,</b> <b>Wire</b> 1, Wire 2, NOT 1, NOT 2, XOR, XNOR, NAND, NOR, AND and OR. The structure of gates are arranged in a m * n matrix form which m {{is the number of}} input variables. The experimental results have shown that this method can produce the circuit design base on user specified performance requirement. The representation approach also has been implemented with a computer program which can give better achievement in terms of quality solution and speed of convergence...|$|R
50|$|An {{application}} circuit must be {{built on}} a gate array that has enough <b>gates,</b> <b>wiring</b> and I/O pins. Since requirements vary, gate arrays usually come in families, with larger members having more of all resources, but correspondingly more expensive. While the designer can fairly easily count how many gates and I/Os pins are needed, the amount of routing tracks needed may vary considerably even among designs with {{the same amount of}} logic. (For example, a crossbar switch requires much more routing than a systolic array with the same gate count.) Since unused routing tracks increase the cost (and decrease the performance) of the part without providing any benefit, gate array manufacturers try to provide just enough tracks so that most designs that will fit in terms of gates and I/O pins can be routed. This is determined by estimates such as those derived from Rent's rule or by experiments with existing designs.|$|R
5000|$|... #Caption: A barbed <b>wire</b> <b>gate</b> in {{a trench}} system to form a block against raiders at Cambrin in {{trenches}} held by the 1/7th Battalion, Sherwood Foresters (Nottinghamshire and Derbyshire Regiment), 16 September 1917.|$|R
40|$|We {{consider}} a Luttinger liquid (LL) connected to two reservoirs {{when the two}} sample-reservoir interface resistances $R_{S}$ and $R_{D}$ are arbitrary (not necessarily quantized at half-the-quantum of resistance). We compute exactly the dynamical impedance of a Luttinger liquid and generalize earlier expressions for its dynamical conductance in the following situations. (i) We first {{consider a}} gated Luttinger liquid. It is shown that the Luttinger liquid parameters $u$ and $K$ and the interface resistances $R_{S}$ and $% R_{D}$ can be experimentally determined by measuring both the dynamical conductance and impedance of a <b>gated</b> <b>wire</b> at second order in frequency. The parallel law addition for the charge relaxation resistance $R_{q}$ is explicitly recovered for these non-trivial interface resistances as $R_{q}^{- 1 } = R_{S}^{- 1 } + R_{D}^{- 1 }$. (ii) We discuss the AC response when only one electrode {{is connected to the}} LL. (iii) Thirdly we consider application of an arbitrary AC electric field along the sample and compute the dynamical response of the LL with arbitrary interface resistances. The discussion is then specialized to the case of a uniform electric field...|$|R
40|$|Abstract-This paper {{investigates the}} {{influence}} of parasitic interconnections on high speed logic gates. A {{complementary metal oxide semiconductor}} logic (CMOS) gate, a high speed source coupled logic (SCL) gate and a low power SCL gate are compared. The important impact of the wiring parasitics on the speed performances is pointed out. The results are confirmed with test circuits, fabricated on commercial 0. 25 pm CMOS technology. Index Terms [...] CMOS, SCL, <b>gate</b> delay, <b>wiring</b> parasitics. T...|$|R
40|$|Nowadays, {{the digital}} circuit {{production}} {{is carried out}} specifying the circuit functionality using a hardware description language. Then, this specification is synthesized down to a structural netlist suitable {{for use by the}} target technologys place-and-route applications. Many synthesis tools make this task introducing some unnecessary <b>gates</b> and <b>wires</b> in the final circuit. As a consequence, it can appear a circuit containing one or more paths that do not influence the circuit output. This kind of non-relevant paths is known as False Path. The problem with false paths is that if they are not considered, the circuit delay may be overestimated during design analysis and optimization. For this reason, the digital circuit industry is looking for effective methods and tools to overcome the mentioned drawbacks. This paper presents a system to detect False Paths based on the analysis of the circuit intermediate specification. The tool analyzes the specification using compilation techniques and then applies some special purpose algorithms for detecting false paths. Furthermore, it shows the <b>gates</b> and <b>wires</b> that are not necessary for the circuit final version. Presentado en el VII Workshop Ingeniería de Software (WIS...|$|R
30|$|It is an {{intriguing}} idea to design some small additional hardware to embedded processors for rearranging {{the bits of}} a register. With {{the help of a}} few extra <b>gates</b> (or just <b>wires)</b> the performance of our pseudorandom number generator might be improved.|$|R
