442|2539|Public
25|$|The {{proportional}} term {{produces an}} output value that {{is proportional to}} the current <b>error</b> <b>value.</b> The proportional response can be adjusted by multiplying the error by a constant Kp, called the proportional gain constant.|$|E
2500|$|In this {{standard}} form, the parameters {{have a clear}} physical meaning. In particular, the inner summation produces a new single <b>error</b> <b>value</b> which is compensated for future and past errors. The addition of the proportional and derivative components effectively predicts the <b>error</b> <b>value</b> at [...] seconds (or samples) in the future, assuming that the loop control remains unchanged. The integral component adjusts the <b>error</b> <b>value</b> {{to compensate for the}} sum of all past errors, with the intention of completely eliminating them in [...] seconds (or samples). The resulting compensated single <b>error</b> <b>value</b> is scaled by the single gain [...]|$|E
2500|$|A PID {{controller}} continuously calculates an <b>error</b> <b>value</b> [...] as {{the difference}} between a desired setpoint and a measured process variable and applies a correction based on proportional, integral, and derivative terms, respectively (sometimes denoted P, I, and D) which give their name to the controller type.|$|E
50|$|Using the <b>error</b> <b>values</b> and <b>error</b> location, {{correct the}} errors and form a {{corrected}} code vector by subtracting <b>error</b> <b>values</b> at <b>error</b> locations.|$|R
30|$|The {{comparison}} between observed and GCMs-derived temperature in Fig.  13 a, b showed a slight underestimation of GCMs-derived temperature while Fig.  13 c indicated an overestimation. The {{degree to which}} the GCMs-derived climate variables were underestimated or overestimated were denoted by positive and negative mean <b>error</b> <b>values</b> (ME) in Table  6. Kinyanambo station mean <b>error</b> <b>values</b> were 0.95 and 1.24 for the baseline and verification periods, respectively; while, Ikweha station had negative mean <b>error</b> <b>values</b> of −[*] 1.19 and −[*] 0.91, respectively. The mean <b>error</b> <b>values</b> of precipitation from all three weather stations ranged from −[*] 0.19 to 0.05. Generally, the mean <b>error</b> <b>values</b> for both temperature and precipitation were relatively small. In addition, the distribution parameters, the mean, standard deviation (SD) and median of the GCMs-derived climate data were close to those from the observed station data.|$|R
50|$|Once {{the error}} {{locations}} are known, {{the next step}} is to determine the <b>error</b> <b>values</b> at those locations. The <b>error</b> <b>values</b> are then used to correct the received values at those locations to recover the original codeword.|$|R
2500|$|A PID {{controller}} continuously calculates an <b>error</b> <b>value</b> [...] as {{the difference}} between a desired setpoint and a measured process variable and applies a correction based on proportional, integral, and derivative terms. PID is an initialism for Proportional-Integral-Derivative, referring to the three terms operating on the error signal to produce a control signal.|$|E
2500|$|A proportional–integral–derivative {{controller}} [...] (PID controller {{or three}} term controller) is a control loop feedback mechanism {{widely used in}} industrial control systems {{and a variety of}} other applications requiring continuously modulated control. A PID controller continuously calculates an <b>error</b> <b>value</b> [...] as the difference between a desired setpoint (SP) and a measured process variable (PV) and applies a correction based on proportional, integral, and derivative terms (denoted P, I, and D respectively) which give the controller its name.|$|E
2500|$|The {{distinguishing}} {{feature of the}} PID controller {{is the ability to}} use the three control terms of proportional, integral and derivative influence on the controller output to apply accurate and optimal control. The block diagram on the right shows the principles of how these terms are generated and applied. It shows a PID controller which continuously calculates an <b>error</b> <b>value</b> [...] as the difference between a desired setpoint SP= and a measured process variable PV=, and applies a correction based on proportional, integral, and derivative terms. The controller attempts to minimize the error over time by adjustment of a control variable , such as the opening of a control valve, to a new value determined by a weighted sum of the control terms.|$|E
5000|$|<b>Error</b> <b>values</b> {{relating}} to parameter values or any {{point on the}} curve.|$|R
5000|$|For convenience, {{define the}} error {{locators}} Xk and <b>error</b> <b>values</b> Yk as: ...|$|R
40|$|Today, in the {{multimedia}} encoding technology, fractal image coding {{is an effective}} coding method without resolution. The effectiveness {{is because of the}} high compressing ratio of fractal image coding. But the computational complexity of this coding method is so high that it needs long encoding time. In this paper, a novel fast fractal coding method is constructed to decrease the coding time by the capture of primary additional <b>error</b> <b>values.</b> This method is a universal algorithm, which is independent of image types. First, we abstract the additional <b>error</b> <b>values</b> from classic image coding. Then, we present a method to abstract the primary <b>error</b> <b>values</b> with a given rule of weight. Moreover, the encoding and decoding processes are reformed to store the primary additional <b>error</b> <b>values.</b> Finally, experimental results shows the improved fractal image coding method has higher compressing ratio and better effectiveness (signal to noise ratio) than the classic algorithm...|$|R
50|$|Increase the <b>error</b> <b>value</b> of {{the winner}} (<b>error</b> <b>value</b> is the {{difference}} between the input vector and the weight vectors).|$|E
5000|$|In this {{standard}} form, the parameters {{have a clear}} physical meaning. In particular, the inner summation produces a new single <b>error</b> <b>value</b> which is compensated for future and past errors. The addition of the proportional and derivative components effectively predicts the <b>error</b> <b>value</b> at [...] seconds (or samples) in the future, assuming that the loop control remains unchanged. The integral component adjusts the <b>error</b> <b>value</b> {{to compensate for the}} sum of all past errors, with the intention of completely eliminating them in [...] seconds (or samples). The resulting compensated single <b>error</b> <b>value</b> is scaled by the single gain [...]|$|E
5000|$|... 3 Missing {{arguments}} are actually a particular <b>Error</b> <b>value</b> titled [...] "parameter not found".|$|E
5000|$|Let us {{look for}} <b>error</b> <b>values</b> using formula [...] where [...] are roots of {{polynomial}} ...|$|R
5000|$|Then the syndromes can {{be written}} {{in terms of the}} error {{locators}} and <b>error</b> <b>values</b> as ...|$|R
5000|$|Defining [...] {{and using}} [...] {{on the place}} of [...] in the Fourney formula will give us <b>error</b> <b>values.</b>|$|R
5000|$|To {{find the}} minimum <b>error</b> <b>value,</b> we {{calculate}} the Wirtinger derivative {{with respect to}} [...] and set it equal to zero.|$|E
5000|$|Another {{iterative}} method for calculating both the error locator polynomial and the <b>error</b> <b>value</b> polynomial {{is based on}} Sugiyama's adaptation of the Extended Euclidean algorithm [...]|$|E
50|$|The {{optimization}} algorithm repeats a two phase cycle, propagation and weight update. When an input vector {{is presented to}} the network, it is propagated forward through the network, layer by layer, until it reaches the output layer. The output of the network is then compared to the desired output, using a loss function. The resulting <b>error</b> <b>value</b> is calculated {{for each of the}} neurons in the output layer. The error values are then propagated from the output back through the network, until each neuron has an associated <b>error</b> <b>value</b> that reflects its contribution to the original output.|$|E
5000|$|Than if syndromes {{could be}} {{explained}} by an error word, which could be nonzero only on positions , then <b>error</b> <b>values</b> are ...|$|R
3000|$|... -axis, {{there was}} no {{significant}} difference between <b>error</b> <b>values</b> of different similarity measures as there is hardly any motion along the [...]...|$|R
3000|$|... [*]=[*] 50, the SFFTv 1 and SFFTv 2 {{algorithms}} manifest {{very close}} absolute error values; in particular, the attained average absolute <b>error</b> <b>values</b> were 5.6162 [*]×[*] 10 − 5 and 5.0689 [*]×[*] 10 − 5, respectively. However, the SFFTv 3 attains a lower absolute average <b>error</b> <b>values</b> than other SFFT versions. It is noteworthy {{to mention that}} the lowest absolute average error was attained with the DFTCOMM algorithm at a value of 2.7642 [*]×[*] 10 − 10.|$|R
5000|$|Generalizing PID {{controllers}} to use fractional orders {{can increase}} {{their degree of}} freedom. The new equation relating the control variable [...] {{in terms of a}} measured <b>error</b> <b>value</b> [...] can be written as ...|$|E
50|$|The {{proportional}} term {{produces an}} output value that {{is proportional to}} the current <b>error</b> <b>value.</b> The proportional response can be adjusted by multiplying the error by a constant Kp, called the proportional gain constant.|$|E
5000|$|A PID {{controller}} continuously calculates an <b>error</b> <b>value</b> [...] as {{the difference}} between a desired setpoint (SP) and a measured process variable (PV), and applies a correction based on proportional, integral, and derivative terms.|$|E
2500|$|They are not <b>error</b> <b>values</b> in any way, {{though they}} are often (but not always, as {{it depends on the}} rounding) used as ...|$|R
50|$|Remez's {{algorithm}} {{uses the}} fact that one can construct an Nth-degree polynomial that leads to level and alternating <b>error</b> <b>values,</b> given N+2 test points.|$|R
50|$|The {{margin of}} error in these surveys is {{typically}} between 2 and 2.9%. See the links for actual <b>error</b> <b>values</b> associated with particular surveys.|$|R
5000|$|A PID {{controller}} continuously calculates an <b>error</b> <b>value</b> [...] as {{the difference}} between a desired setpoint and a measured process variable and applies a correction based on proportional, integral, and derivative terms, respectively (sometimes denoted P, I, and D) which give their name to the controller type.|$|E
50|$|While {{chaining}} is syntax, it has semantic consequences, {{namely that}} requires methods to return an object, and if implementing cascading via chaining, {{this must be}} the current object. This prevents the return value from being used for some other purpose, such as returning an <b>error</b> <b>value.</b>|$|E
50|$|In 1903 {{each of the}} 13 {{pictorial}} denominations of the 1901 {{issue was}} printed with the centre inverted. Due to stamp collectors' demand Waterlow and Sons reprinted 20 sheets (1,000 copies) of each <b>error</b> <b>value.</b> Careful study can determine if an error comes from the original 1901 or 1922 printing.|$|E
30|$|In all cases, the {{ensemble}} SVR model gives {{the best results}} in predicting μ od, μ ob and μ oa with the least statistical <b>error</b> <b>values.</b>|$|R
30|$|Besides, the {{proposed}} approach for the OQ estimation {{can be considered}} as interesting and efficient regarding the <b>error</b> <b>values</b> and the lack of developed works in this field.|$|R
30|$|This paper {{presents}} an adaptive neuro/fuzzy system {{which can be}} trained to detect the current human emotions from a set of measured responses. Six models are built using different types of input/output membership functions and trained by different kinds of input arrays. The models are compared based {{on their ability to}} train with lowest <b>error</b> <b>values.</b> Many factors impact the <b>error</b> <b>values</b> such as input/output membership functions, the training data arrays, and the number of epochs required to train the model. ANFIS editor in MATLAB is used to build the models.|$|R
