45|219|Public
5000|$|Cloud based: The Protogrid back <b>end</b> <b>server</b> {{resides in}} a public or private cloud¨ ...|$|E
50|$|Recall {{that every}} message {{forwarded}} on a path, {{except for the}} final request to the <b>end</b> <b>server,</b> is encrypted. Thus, while the eavesdropper is able to view any message emanating from the user's computer, it only views a message submitted to the <b>end</b> <b>server</b> if the user's jondo ultimately submits the user's request itself.Since {{the probability that the}} user's jondo ultimately submits the request is 1/n where n is the size of the crowd when the path was created.Thus We learn that the probability that the eavesdropper learns the identity of the receiver decreases as a function of crowd size. Moreover, when the user's jondo does not ultimately submit the request, the local eavesdropper sees only the encrypted address of the <b>end</b> <b>server,</b> which we suggest yields receiver anonymity that is (informally) beyond suspicion.(beyond suspicion - no user is more suspicious than other).|$|E
5000|$|Each jondo either submits {{a request}} to the <b>end</b> <b>server</b> or {{forwards}} it to a randomly chosen jondo (possibly itself). Other jondo tasks are to strip out any personal information such as cookies, identifying header fields.|$|E
50|$|Large server farms {{typically}} also place {{load balancers}} between the front <b>end</b> <b>servers</b> and the network.|$|R
50|$|The web centre {{has high}} <b>end</b> <b>servers</b> and is {{connected}} by NKN (National Knowledge Network) 1 Gbps Intranet / Internet connectivity via NIC.|$|R
50|$|Many {{colocation}} facilities {{can provide}} redundant, A and B power feeds to customer equipment, and high <b>end</b> <b>servers</b> and telecommunications equipment often can have two power supplies installed.|$|R
50|$|A client cannot ordinarily {{tell whether}} it is {{connected}} directly to the <b>end</b> <b>server,</b> or to an intermediary along the way. Intermediary servers may improve system scalability by enabling load balancing and by providing shared caches. They may also enforce security policies.|$|E
5000|$|Back <b>end</b> <b>server</b> : This is {{the data}} storage {{system for the}} front end servers. They usually have RAIDs to hold the data. The {{provider}} can increase reliability by using multiple backend servers with redundant data, redundant arrays attached to the same server, or even both.|$|E
50|$|Unisys {{promotes}} {{itself as}} a global information technology company that solves complex IT challenges {{for some of the}} world’s largest companies and government organizations. Including the CIA, FBI, INS, ICE, and the U.S. military. The company offers outsourcing and managed services, systems integration and consulting services, high <b>end</b> <b>server</b> technology, cybersecurity and cloud management software, and maintenance and support services.|$|E
5000|$|Numbering server (stamper) : This server inserts the RFC 1036 Xref: header {{into each}} article, {{so that the}} back and front <b>end</b> <b>servers</b> all present article lists in a uniform manner.|$|R
5000|$|Transit server : These are the servers that handle basic article {{exchange}}. They exchange traffic with remote servers, supply {{articles to}} the numbering servers, and transmit articles posted {{from the local}} front <b>end</b> <b>servers.</b>|$|R
40|$|This {{paper is}} from the SANS Institute Reading Room site. Reposting is not {{permitted}} without express written permission. Leveraging the Load Balancer to Fight DDoS Can Load Balancing hardware traditionally used to help scale servers also help against DDoS attacks? Many DDoS mitigation techniques traditionally focus on either getting help from the upstream ISP or reconfiguring the <b>end</b> <b>servers</b> that are getting attacked. Many people forget that the load balancing hardware that typically lives in between the edge routers and <b>end</b> <b>servers</b> may have features that can help fight against a DDoS attack. In fact, some common load balancing features have unintended benefits that can help f [...] . Copyright SANS Institut...|$|R
5000|$|Front <b>end</b> <b>server</b> : These are the servers that a user would {{actually}} connect to. It is not unheard of {{for a large}} commercial news service provider {{to have more than}} 50 front end servers. These systems usually only store overviews locally, and retrieve article bodies from the back end servers. These systems typically carry the heaviest CPU load in the farm.|$|E
5000|$|Consider {{a set of}} collaborating {{corrupted}} jondos in the crowd. Because each jondo {{can observe}} plaintext traffic on a path routed through it, any such traffic, including {{the address of the}} <b>end</b> <b>server</b> is exposed to this attacker.The question we consider here is if the attacker can determine who initiated the path. The goal of the collaborators is to determine the member that initiated the path.We now analyze how confident the collaborators can be that their immediate predecessor is in fact the path initiator: ...|$|E
50|$|In 1990, IBM {{wanted to}} merge the low <b>end</b> <b>server</b> and mid range server architectures, the RS/6000 RISC ISA and AS/400 CISC ISA into one common RISC ISA that could host both IBM's AIX and OS/400 {{operating}} systems. The existing POWER and the upcoming PowerPC ISAs were deemed unsuitable by the AS/400 team so an extension to the 64-bit PowerPC instruction set was developed called PowerPC AS for Advances Series or Amazon Series. Later, additions from the RS/6000 team and AIM Alliance PowerPC were included, and by 2001, {{with the introduction}} of POWER4, they were all joined into one instruction set architecture: the PowerPC v.2.0.|$|E
50|$|The {{center has}} its own {{datacenter}} where it hosts all its public as well as private services for its stakeholders. This data-center subsumes standard data center equipment including high <b>end</b> <b>servers,</b> storage servers; network attached storages as well as network connectivity and integration accessories.|$|R
40|$|The first {{efficient}} generic-point parallel scalar multiplication {{method is}} presented here. The novelty {{of the proposed}} method is that the precomputation overhead can be replaced by postcomputations that can be parallelised. This method will be very attractive for use in high-performance <b>end</b> <b>servers</b> that employ parallel elliptic curve cryptoprocessors...|$|R
5000|$|All {{communication}} between the ZeroPC front end user interface and the ZeroPC back <b>end</b> <b>servers</b> is encrypted using SSL (HTTPS) protocol. Furthermore, any content stored in the ZeroPC server-side repository is also encrypted using 256-bit Advanced Encryption Standard (AES-256) by the Amazon Web Services Simple Storage Service (S3).|$|R
30|$|The {{authors would}} like to thank Signalling Engineering Officer and Sub Engineer of Rawalpindi Cantt train station for the {{provision}} of interlocking diagram and data related to the train station. Dr. Adnan Maqsood of RCMS, NUST for providing administration support. Dr. Prof. Umar Khattaq at GIS, NUST for access to high <b>end</b> <b>server.</b>|$|E
40|$|The {{authentication}} system stores the password in a Central Server, {{and the possibility}} for the intruder to obtain the password is very easy and can {{gain access to the}} contents of the user. For the purpose of authentication, the multi-server systems we proposed to communicate with one or all of the servers. It requires high communication bandwidth at the same time is not easy to maintain and also the protocols are highly expensive. The Two Server Authentication System avoids this problem, which uses the passwords and the session keys, rather than performing the cryptographic techniques. It consists of two servers, the front end and the back <b>end</b> <b>server.</b> The front <b>end</b> <b>server</b> communicates with the user, whereas the back end control server is only visible to the service server. These two servers are responsible for the authentication. The password is split into two words, which is one with the service server and the other with the control server. Both the servers are validated during the form validation process. The system is suitable for both the computation and communication system. The servers are also used for the multiple clients and also for the single server systems...|$|E
40|$|Mobile phone {{banking and}} {{payments}} continues {{to not only}} be a popular way of transacting business but it also seems to evolve rapidly. Despite its popularity however {{there seem to be}} some very genuine concerns on the security issues revolving around it, particularly in regard to man in the middle attacks. This paper seeks to propose a secure framework for communication between a mobile device and the back <b>end</b> <b>server</b> for protecting mobile banking applications from man-in-the-middle attacks without introducing further threats to the communication channel...|$|E
50|$|Similar {{critical}} {{applications such}} as medical equipment and high <b>end</b> <b>servers</b> can use nvSRAMs to store their data. In case of external power failure, or unforeseen calamities, nvSRAM can hold the data without external intervention (autostore feature). Hence it would provide the flexibility of an EEPROM but at SRAM speeds.|$|R
50|$|Lync Server {{also has}} the {{capability}} to log and archive all instant message traffic passing through the server and to create Call Detail Records for conferences and voice. These features can help provide compliance with legal requirements for many organizations. The Archiving server is not an overall end-to-end compliance solution, as archiving requires you to install the Archiving Server and to configure front <b>end</b> <b>servers</b> accordingly.|$|R
40|$|The {{processing}} {{of the huge}} amounts of information in the bioinformatics has been the bottleneck to restrict its development, and in this article, we used the distributed computation to solve this problem, and we described the structure, the design, the implementation of task decomposition, the distributed application program and the database management of the distributed computing platform. The distributed computing platform first decomposes one problem into many subtasks, and then the client sends the request of task computation for the <b>server</b> <b>end,</b> and the <b>server</b> <b>end</b> responses the request and takes out the information of the minimum subtask, and distribute {{the information to the}} client end. When the client end acquires the information of the subtask, it will transfer the operation module to compute, and when the task is completed, it will upload the result to the <b>server</b> <b>end,</b> and the <b>server</b> <b>end</b> repeats above process until all subtasks are completed, and according to the computation results of all subtasks, we can obtain the solution of the problem. </p...|$|R
40|$|This thesis {{describes}} a computing environment WBCSim and its experiment management component. WBCSim is a web-based simulation system used {{to increase the}} productivity of wood scientists conducting research on wood-based composite and material manufacturing processes. This experiment management component integrates a web-based graphical front <b>end,</b> <b>server</b> scripts, and a database management system to allow scientists to easily save, retrieve, and perform customized operations on experimental data. A {{detailed description of the}} system architecture and the experiment management component is presented, along with a typical scenario of usage...|$|E
30|$|Modern high {{performance}} computing {{is dominated by}} parallelization. At {{the time of this}} writing, virtually all desktop CPUs contain at least four cores, and high <b>end</b> <b>server</b> CPUs can have as many as twenty or more [48]. Even mobile phones have begun to routinely ship with multicore processors [49]. In addition to powerful CPUs, GPUs, and other types of coprocessors such as the Xeon Phi [50] can be used to accelerate parallel algorithms. It, therefore, is becoming increasingly important to write parallel software that fully utilizes the available computing resources.|$|E
40|$|The Internet was {{originally}} designed to support universal reachability by allowing any host to communicate with any <b>end</b> <b>server</b> over the globe. Unfortunately, this feature has been abused by attackers to overload the servers with malicious traffic. In {{order to deal with}} this situation, many mechanisms such as Firewalls and Access Lists have been introduced to restrict servers’ accessibility only to legitimate users. This paper discusses some of these mechanisms, highlights their pros and cons and then proposes a new mechanism that attempts to limit a server’s reachability based on its operational scope...|$|E
40|$|Wireless {{devices are}} {{characterized}} by low computational power and memory. Hence security protocols dealing with these devices have to be designed to give minimal computational and memory load. We present an efficient authentication and key exchange protocol for low-end wireless clients and high <b>end</b> <b>servers,</b> which is overall nearly three {{times as fast as}} comparable protocols. The basic idea of our protocol is to use symmetric key encryption in place of public key encryption wherever possibl...|$|R
40|$|One of {{the biggest}} {{challenges}} to the data storage community is how to effectively store data without taking the exact same data and storing again and again in different locations on the back <b>end</b> <b>servers.</b> In this paper, we outline the performance achievements that can be achieved by exploiting block level data deduplication in File Systems. We have achieved replication of data by storing a deduplicated copy of the original data on the backup partition, which can enable us to access or restore data in case of a system crash...|$|R
50|$|ORCA {{consisted}} of 11 back-end database servers {{and a single}} web server and application server providing the front <b>end.</b> The <b>servers</b> {{were said to have}} all been hosted in Boston.|$|R
40|$|We {{present the}} design of a {{distributed}} authorization service which parallels existing authentication services for distributed systems. Such a service would operate on top of an authenti-cation substrate. There are two distinct ideas underlying our design: (1) The use of a language, called generalized access control list (GACL), as a common representation of authoriza-tion requirements. (2) The use of authenticated delegation to effect authorization offloading from an <b>end</b> <b>server</b> to an au-thorization server. We present the syntax and semantics of GACL, and illustrate how {{it can be used to}} specify authoriza-tion requirements that cannot be easily specified by ordinary ACL. We also describe the protocols in our design. ...|$|E
40|$|Radio Frequency Identification (RFID) has {{potential}} for application {{in the new}} field of telemedicine, {{as the use of}} radio waves offers advantages over traditional optical technology such as bar codes. Radio waves are not limited by line of sight, they can penetrate objects and communicate in a wireless fashion. However, the same advantage is also the inherent weakness, as radio waves are susceptible to attack. Ongoing efforts have identified forward secure chain hashing as a viable security protocol for RFID authentication. Today 2 ̆ 7 s typical RFID communications take place with the 2 ̆ 2 host-reader-tag 2 ̆ 2 arrangement where the computational requirements are performed by a back <b>end</b> <b>server</b> system which holds all the intelligence and houses all records for an entire facility. One server can easily utilize multiple readers, but a compromise of this single system could have serious ramifications. Why not make a smaller system that is more robust and tolerant of intrusion. This can be achieved by implementing a stand alone reader that relies only on itself. We propose a server-less system that can accomplish the same results. Because our enhanced reader does not require a server to perform its function, if any readers are breached it only impacts that specific reader, not the entire server. By eliminating the resource heavy server device, we can yield a more robust overall system. We have selected a forward secure protocol to implement on an embedded platform that will be able to authenticate a tag without the resources of a back <b>end</b> <b>server...</b>|$|E
40|$|As {{more and}} more {{critical}} services are provided over the Internet, the risk to these services from malicious users is also increasing. Several networks have witnessed problems like Denial of Service attacks over the recent past. Denial of Service attacks work by flooding a network, router or an <b>end</b> <b>server</b> with malicious packets. An excess of these packets can cause overload conditions in the network and on the end servers. The {{purpose of this paper}} is to provide an efficient way to keep a track of server and network resources in an attempt to mitigate the effect of such attacks. Our scheme provides a general, and not attack specific, mechanism to provide graceful server degradation in the face of such an attack...|$|E
50|$|Rumors {{that the}} Wii U CPU {{was derived from}} IBM's high <b>end</b> POWER7 <b>server</b> {{processor}} proved false. Espresso shares some technology with POWER7, such as eDRAM and Power Architecture, but those are superficial similarities.|$|R
40|$|Web base {{applications}} {{have grown}} huge and complex owing to dynamic computations and {{large number of}} dispersed users. This paper highlights some challenges before the researchers causing overload in the web based applications and necessitate the use of scheduling techniques like Dynamic Load Balancing (DLB) in Information Technology. The primary issues include mismatch of servers, lack of optimization algorithms in routers and heterogeneity of <b>end</b> <b>servers.</b> These issues make us aware of possible problems which may be encountered in distributed computing environment and provide a new direction to {{research in the area}} of distributed scheduling. We feel that such problems have been ignored by the research community and need urgent attention...|$|R
50|$|It is marketed for extreme {{transaction}} processing. It is {{a complement}} to traditional transaction processing {{systems that have}} been available for decades {{in the form of}} high <b>end</b> SMP <b>servers</b> such as the IBM System z mainframe.|$|R
