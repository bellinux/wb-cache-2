365|174|Public
25|$|In doing so, {{the company}} faced several {{simultaneous}} challenges: creating {{a lot of}} intricate user-facing software from scratch or from existing code which must target all the disparate Linux environment versions; integrating a corporate personality into the existing and outspoken volunteer community of the GNOME desktop environment; building upon a very small nascent market of Linux desktop users amongst an already widely served and monopolized <b>desktop</b> <b>computing</b> market; and monetizing free software for individual consumers by creating essential business services. In other words, Eazel sought to switch a groundswell of users from Macintosh and Windows to a new and immature system that free software users would want to pay for. Of the two predominant free desktop environments for Linux, the choice to target GNOME instead of KDE was made {{largely because of the}} questionable legality of the Qt license upon which KDE was based.|$|E
25|$|From {{the early}} 1900s through the 1960s, {{mechanical}} calculators dominated the <b>desktop</b> <b>computing</b> market (see History of computing hardware). Major suppliers in the USA included Friden, Monroe, and SCM/Marchant. (Some comments about European calculators follow below.) These devices were motor-driven, and had movable carriages where results of calculations were displayed by dials. Nearly all keyboards were full — each digit {{that could be}} entered had its own column of nine keys, 1..9, plus a column-clear key, permitting entry of several digits at once. (See the illustration below of a Marchant Figurematic.)One could call this parallel entry, by way of contrast with ten-key serial entry that was commonplace in mechanical adding machines, and is now universal in electronic calculators. (Nearly all Friden calculators, {{as well as some}} rotary (German) Diehls had a ten-key auxiliary keyboard for entering the multiplier when doing multiplication.) Full keyboards generally had ten columns, although some lower-cost machines had eight. Most machines made by the three companies mentioned did not print their results, although other companies, such as Olivetti, did make printing calculators.|$|E
2500|$|In January 2014, Hewlett-Packard began a {{promotion}} for desktops running Windows 7, {{saying that it}} was [...] "back by popular demand". Outside sources have suggested that this might be because HP or its customers thought the Windows 8 platform would be more appropriate for mobile computing than <b>desktop</b> <b>computing,</b> or that they were looking to attract customers forced to switch from XP who wanted a more familiar interface.|$|E
40|$|<b>Desktop</b> Grid <b>Computing</b> {{presents}} common {{techniques used}} in numerous models, algorithms, and tools {{developed during the}} last decade to implement <b>desktop</b> grid <b>computing.</b> These techniques enable the solution of many important sub-problems for middleware design, including scheduling, data management, security, load balancing, result certification, and fault tolerance. The book's first part covers the initial ideas and basic concepts of <b>desktop</b> grid <b>computing.</b> The second part explores challenging current and future problems. Each chapter presents the sub-problems, discusses theoretical and practica...|$|R
40|$|The {{high school}} and {{undergraduate}} chemistry curriculum has traditionally focused on teaching the experimental and theoretical foundations of modern chemical knowledge. Faculty members are comfortable with this approach because {{this is how they}} were taught. In recent years Internet availability, the rapid increase in <b>desktop</b> <b>compute...</b>|$|R
5000|$|... 2011: Seminar & Workshop: <b>Desktop</b> GRID <b>Computing</b> (Bandung, Indonesia)http://www.comlabs.itb.ac.id/blog/2011/09/26/seminar-workshop-desktop-grid-computing ...|$|R
2500|$|The Apple Lisa was a {{commercial}} failure for Apple, the largest since {{the failure of}} the Apple III of 1980. The intended business customers were reluctant to purchase the machine because of its high launch price of US$9,995 (equivalent to nearly US$ in [...] ), making it largely unable to compete with the less expensive IBM PCs, which were already beginning to dominate business <b>desktop</b> <b>computing,</b> as well as Steve Jobs's announcement that they'd be releasing a superior system in the future which would not be compatible with it. The largest Lisa customer was NASA, which used LisaProject for project management and was eventually faced with significant problems when the Lisa was discontinued.|$|E
50|$|By March 1988, Bhurgri {{had come}} up with a more stable version of Sindhi <b>desktop</b> <b>computing.</b> In July 1988, Pakistani {{distributors}} for Apple officially announced Sindhi <b>desktop</b> <b>computing</b> at a ceremony in Karachi, and acknowledged Bhurgri’s contribution.|$|E
5000|$|<b>Desktop</b> <b>Computing</b> Workbook A Guide for Using 15 Programs in Macintosh and Windows Formats (1996).|$|E
5000|$|Crash to <b>desktop,</b> in <b>computing,</b> {{an event}} where a program exits {{abnormally}} ...|$|R
5000|$|Kacsuk, Lovas, Németh (Eds.). 2008: Distributed and Parallel Systems. In Focus: <b>Desktop</b> Grid <b>Computing.</b> Springer US http://www.springer.com/computer/swe/book/978-0-387-79447-1 ...|$|R
40|$|International audienceThe {{goal of the}} <b>Desktop</b> Grid <b>Computing</b> is {{to offer}} a {{synthesis}} on various approaches in <b>Desktop</b> Grid <b>Computing,</b> {{a decade after the}} pioneering work. <b>Desktop</b> Grids use <b>computing,</b> network and storage resources of idle desktop PCs distributed over multiple LANs or the Internet. Today, this type of computing platform forms one of the largest distributed computing systems, and currently provides scientists with tens of TeraFLOPS from hundreds of thousands of hosts. Several topics will be discussed in details, which may appeal to a much larger audience than the community of researcher in the field. DGC is certainly the first book that makes a deep comprehensive and up-to-date presentation about the topic. It also draws perspectives, recent trends in the domain that underline the evolution of the initial concept...|$|R
5000|$|As <b>desktop</b> <b>computing</b> power increased, such {{a simple}} system was always {{inherently}} vulnerable to brute force 'image-processing' attacks.|$|E
5000|$|Plays {{a role in}} {{supporting}} <b>desktop</b> <b>computing</b> to the end-user {{in the areas of}} software and hardware, including internet, communications, and access technologies.|$|E
50|$|Founder & Chief Technology Officer Timothy Griffin founded Userful Corporation in 1999. The company {{commenced}} {{work on a}} multi-screen <b>desktop</b> <b>computing</b> {{platform that}} {{is at the core of}} Userful software.|$|E
40|$|International audienceProtein-protein docking {{programs}} can give valuable {{insights into the}} structure of protein complexes {{in the absence of}} an experimental complex structure. Web interfaces can facilitate the use of docking programs by structural biologists. Here, we present an easy web interface for protein-protein docking with the ATTRACT program. While aimed at nonexpert users, the web interface still covers a considerable range of docking applications. The web interface supports systematic rigid-body protein docking with the ATTRACT coarse-grained force field, as well as various kinds of protein flexibility. The execution of a docking protocol takes up to a few hours on a standard <b>desktop</b> <b>compute...</b>|$|R
5000|$|Red Hat Enterprise Linux WS for {{technical}} power user enterprise <b>desktops</b> for high-performance <b>computing</b> ...|$|R
40|$|Tyt. z nagłówka. Bibliogr. s. 250 - 252. The Berkeley Open Infrastructure for Network Computing (BOINC) is an {{open-source}} middleware {{system for}} volunteer and <b>desktop</b> grid <b>computing.</b> In this paper, we propose BNBTEST, a BOINC {{version of the}} distributed branch-and-bound method. The crucial issues of the distributed branch-and-bound method are traversing the search tree and loading the balance. We developed a subtask packaging method and three different subtask distribution strategies to solve these. Dostępny również w formie drukowanej. KEYWORDS: BOINC, branch-and-bound method, distributed <b>computing,</b> volunteer <b>computing,</b> <b>desktop</b> grid...|$|R
5000|$|... pfs:Write was {{a simple}} word {{processor}} created by Software Publishing Corporation (SPC) {{in the early days}} of <b>desktop</b> <b>computing.</b> It was intended for DOS systems, but Apple II versions were also released.|$|E
50|$|Desktop dynamic {{provisioning}} environment (desktop DPE) or client {{dynamic provisioning}} environment (client DPE) is the scenario where a dynamic provisioning environment (DPE) {{is being used}} to provision client computing instances or <b>desktop</b> <b>computing</b> instances.|$|E
50|$|Remote desktop {{virtualization}} {{can also}} provide a means of resource sharing, to distribute low-cost <b>desktop</b> <b>computing</b> services in environments where providing every user with a dedicated desktop PC is either too expensive or otherwise unnecessary.|$|E
40|$|The {{speciality}} {{of virtual}} <b>desktop</b> cloud <b>computing</b> is that user applications are executed in virtual desktops on remote servers. Resource management and resource utilization {{are very much}} significant {{in the area of}} virtual <b>desktop</b> cloud <b>computing.</b> Handling a large amount of clients in most efficient manner is the main challenge in this field. This is because we have to ensure maximum resource utilization along with user data confidentiality, customer satisfaction, scalability, minimum SLA violation etc. Assigning too many users to one server may cause overloaded condition and which will lead to customer dissatisfaction. Assigning too little load will result in high investment cost. So we have taken in to consideration these two situations also. Here the proposed Rule Based Resource Management (RBRM) scheme assures the above mentioned parameters like minimum SLA violation. The concept of virtual <b>desktop</b> cloud <b>computing</b> is extended to a hybrid cloud environment. This is because to make the private cloud scalable. And priorities are assigned to user requests in order to maintain their confidentiality. The results of the paper indicate that by applying this RBRM scheme to the already existing overbooking mechanism will improve the performance of the system with significant reduction in SLA violation...|$|R
5000|$|The {{integrated}} software genre {{has been largely}} overshadowed by fully functional office suites, most notably Microsoft Office, but at one time was considered the [...] "killer application" [...] type responsible for the rise and dominance of the IBM PC in the <b>desktop</b> business <b>computing</b> world.|$|R
40|$|In this paper, {{we discuss}} how Peer-to-Peer data {{distribution}} techniques {{can be adapted}} to <b>Desktop</b> Grid <b>computing</b> environments, particularly to the BOINC platform. In this paper, we discuss how Peer-to-Peer data distribution techniques {{can be adapted to}} <b>Desktop</b> Grid <b>computing</b> environments, particularly to the BOINC platform. To date, Desktop Grid systems have focused primarily on utilizing spare CPU cycles, yet have neglected to take advantage of client network capabilities. Leveraging client bandwidth will not only benefit current projects by lowering their overheads but also will facilitate Desktop Grid adoption by data-heavy applications. We propose two approaches to Peer-to-Peer data sharing that could be adapted for volunteer computing platforms: the highly successful BitTorrent protocol and a secure and customizable Peer-to-Peer data center approach...|$|R
5000|$|PCLinuxOS places {{specific}} {{emphasis on}} <b>desktop</b> <b>computing,</b> concentrating its efforts for home or small business environments, hence paying {{less attention to}} other more [...] "traditional" [...] uses, like servers, although packages for most server tasks are available.|$|E
50|$|Managing user {{personalization}} is complicated, with a {{large number}} of factors and variables to be considered. As the <b>desktop</b> <b>computing</b> environment has evolved, the methods for delivering the desktop and applications have grown, further compounding the complexity involved in managing the user’s personality.|$|E
50|$|In 1993, IDT {{entered the}} PC clock {{market with a}} family of devices (CV104, CV105, CV107, and CV109) {{focusing}} on desktop computer platforms. IDT planned to expand its market by producing a suite of PC clock devices that serve next-generation notebook and <b>desktop</b> <b>computing</b> platforms.|$|E
40|$|Desktop Grid has {{recently}} been an attractive computing paradigm for high throughput applications. However, <b>Desktop</b> Grid <b>computing</b> is complicated by heterogeneous capabilities, failures, volatility, and lack of trust because {{it is based on}} desktop computers {{at the edge of the}} In-ternet. In a <b>Desktop</b> Grid <b>computing</b> environment, volunteers (that is, resource providers) have heterogeneous properties such as CPU, mem-ory, network, etc. They are exposed to failures such as crash and link failures. In addition, volunteers can freely participate in the computa-tions and dynamically leave them in the middle of execution. Moreover, some malicious volunteers may tamper with the computation and return corrupted results. These distinct features make it difficult for a Desktop Grid scheduler to allocate tasks to volunteers. Therefore, it is necessary to develop scheduling mechanisms that adapt to such a dynamic com-puting environment...|$|R
40|$|This report {{presents}} two reference architectures {{that can}} be used as ar-chitectural blueprints for applications of two different system classes. The first system class comprises applications in the field of energy manage-ment and the second one contains applications in the domain of <b>desktop</b> grid <b>computing.</b> Because applications in the scope of energy management are safety-critical and <b>desktop</b> grid <b>computing</b> applications have to cope with a variety of self-interested participants, applications of these domains have in common that they can increase their robustness and efficiency by considering the trustworthiness of participants. Therefore, the reference architectures given here are based on a middleware that provides func-tionality for the utilization of trust: experiences with participants can be stored and evaluated so that trust can be derived and incorporated into the applications. ...|$|R
40|$|One of {{the most}} {{exciting}} developments in current Human-Computer Interaction research is the shift in focus from <b>computing</b> on the <b>desktop</b> to <b>computing</b> in the wider world. Computational power and the interfaces to that power are moving rapidly into our streets, our vehicles, our buildings and our pockets. The combination o...|$|R
50|$|This {{section is}} focused on the {{popularity}} and adoption of rolling distributions. For a more general look at the popularity and adoption of Linux distributions, please see Linux adoption. For a specific look at adoption in the <b>desktop</b> <b>computing</b> sector, see Desktop Linux#Measuring adoption.|$|E
50|$|As <b>desktop</b> <b>computing</b> has {{continued}} to proliferate throughout the 1990s and onwards, Unistat's end-user oriented interface has attracted a following amongst biomedicine researchers, social scientists, market researchers, government departments and students, enabling them to perform complex data analysis {{without the need for}} large manuals and scripting languages.|$|E
50|$|Traditionally, the {{operating}} system kernel was responsible for providing an abstract interface to the hardware the system ran on. Applications used the system call interface, or performed file I/O on device nodes in order to communicate with hardware through these abstractions. This sufficed for the simple hardware of early <b>desktop</b> <b>computing.</b>|$|E
50|$|On 5 April 2017 Shuttleworth {{announced}} that this release, {{a year away}} at that time, will abandon the Unity desktop and employ the GNOME 3 desktop instead, as Canonical moves away from its ambitions to produce a unified mobile and desktop operating system and concentrates on <b>desktop,</b> cloud <b>computing</b> and IoT platforms instead.|$|R
40|$|Abstract The PBS Pro {{software}} is a full-featured workload management and job schedul-ing system with capabilities {{that cover the}} entire Grid computing space: security, information, compute, and data. The security infrastructure includes user au-thentication, access control lists, X. 509 certificate support, and cross-site user mapping facilities. Detailed status and usage information is maintained and available both programmatically and via a graphical interface. Compute Grids can be built to support advance reservations, harvest idle <b>desktop</b> <b>compute</b> cy-cles, and peer schedule work (automatically moving jobs across the room or across the globe). Data management in PBS Pro is handled via automatic stage-in and stage-out of files. The PBS Pro system has numerous site-tunable param-eters and can provide access to available scheduling information, information about requesting resources, allocation properties, and information about how an allocation execution can be manipulated. 1...|$|R
40|$|Geospatial Information Systems (GIS) were {{designed}} to model the world. With the growth and data and increasing sophistication of analysis and processing techniques the traditional methods of performing GIS processing on <b>desktop</b> <b>computes</b> is insufficient. This thesis evaluates the map reduce and message passing paradigms of parallel pro-graming {{in the context of}} GIS processing. This is accomplished by implementing two sets of operations, one using Hadoop and the other using the Message Passing Interface (MPI) standard. These implementations are then evaluated for speedup and usability. PostGIS is used to represent desktop GIS processing. Two categories of operations were discovered. Record level operations, or operations that work with only one dataset run most quickly in PostGIS and are easy to implement. Operations requiring two datasets run most quickly with the MPI implementation and are easiest to implement in that environment...|$|R
