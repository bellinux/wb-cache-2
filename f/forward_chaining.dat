413|251|Public
2500|$|<b>Forward</b> <b>chaining</b> [...] {{process in}} which events or {{received}} data are considered by an entity to intelligently adapt its behavior.|$|E
2500|$|Although it {{was based}} on the proof methods of logic, Planner, {{developed}} at MIT, was the first language to emerge within this proceduralist paradigm. [...] Planner featured pattern-directed invocation of procedural plans from goals (i.e. goal-reduction or backward chaining) and from assertions (i.e. <b>forward</b> <b>chaining).</b> [...] The most influential implementation of Planner was the subset of Planner, called Micro-Planner, implemented by Gerry Sussman, Eugene Charniak and Terry Winograd. It was used to implement Winograd's natural-language understanding program SHRDLU, which was a landmark at that time. To cope with the very limited memory systems at the time, Planner used a backtracking control structure so that only one possible computation path had to be stored at a time. Planner gave rise to the programming languages QA-4, Popler, Conniver, QLISP, and the concurrent language Ether.|$|E
2500|$|Task {{analysis}} {{is a process}} in which a task is analyzed into its component parts so that those parts can be taught through the use of chaining: <b>forward</b> <b>chaining,</b> backward chaining and total task presentation. Task analysis has been used in organizational behavior management, a behavior analytic approach to changing the behaviors of members of an organization (e.g., factories, offices, or hospitals). Behavioral scripts often emerge from a task analysis. Bergan conducted a task analysis of the behavioral consultation relationship and Thomas Kratochwill developed a training program based on teaching Bergan's skills. A similar approach was used for the development of microskills training for counselors. Ivey would later call this [...] "behaviorist" [...] phase a very productive one and the skills-based approach came to dominate counselor training during 1970–90. Task analysis was also used in determining the skills needed to access a career. In education, Englemann (1968) used task analysis as part of the methods to design the Direct Instruction curriculum.|$|E
5000|$|As {{a result}} of the forward list, {{boarding}} seas began flooding the <b>forward</b> <b>chain</b> lockers located in the forward corner support columns; ...|$|R
5000|$|Do not <b>forward</b> <b>chain</b> letters, urban legends, urgent {{messages}} about email viruses, or claims that Bill Gates will send everyone thousands of dollars. These things clog up everybody's inbox with worthless stuff.|$|R
40|$|The {{main tasks}} of {{tolerance}} charting include {{the identification of}} dimensional chains, the calculation of mean working dimensions, and the allocation of proper tolerances to the working dimensions for all machining cuts. When an angular featured component is involved, tolerance charting becomes very difficult because the axial dimensions are interrelated with the radial dimensions due to the angular feature. The {{purpose of this paper}} is to accomplish the above three tasks in a 2 D tolerance chart, constructed for a component with an angular feature. With the algebraic method, the reverse chain matrix, which contains the reverse tolerance chains, is obtained first and the mean working dimensions are determined from the reverse <b>chain</b> matrix. The <b>forward</b> <b>chain</b> matrix for the <b>forward</b> tolerance <b>chains</b> is then obtained by inversing the reverse chain matrix. Thereafter, by using the <b>forward</b> <b>chain</b> matrix in a linear programming model, the tolerances are optimally allocated to the working dimensions. A numerical example is given in the paper. Department of Industrial and Systems Engineerin...|$|R
2500|$|Forward {{inference}} is a {{data driven}} method that uses patterns of brain activation {{to distinguish between}} competing cognitive theories. It shares characteristics with cognitive psychology’s dissociation logic and philosophy’s <b>forward</b> <b>chaining.</b> For example, Henson [...] discusses forward inference’s contribution to the [...] "single process theory vs. dual process theory" [...] debate with regard to recognition memory. Forward inference supports the dual process theory by demonstrating {{that there are two}} qualitatively different brain activation patterns when distinguishing between [...] "remember vs. know judgments". The main issue with forward inference {{is that it is a}} correlational method. Therefore, one cannot be completely confident that brain regions activated during cognitive process are completely necessary for that execution of those processes. In fact, there are many known cases that demonstrate just that. For example, the hippocampus has been shown to be activated during classical conditioning, however lesion studies have demonstrated that classical conditioning can occur without the hippocampus.|$|E
50|$|<b>Forward</b> <b>chaining</b> (or forward {{reasoning}}) {{is one of}} the {{two main}} methods of reasoning when using an inference engine and can be described logically as repeated application of modus ponens. <b>Forward</b> <b>chaining</b> is a popular implementation strategy for expert systems, business and production rule systems. The opposite of <b>forward</b> <b>chaining</b> is backward chaining.|$|E
5000|$|Bossam, a <b>forward</b> <b>chaining</b> {{rule engine}} {{supports}} SWRL. http://bossam.wordpress.com/ ...|$|E
30|$|<b>Forward</b> supply <b>chain</b> network design using fuzzy {{mathematical}} programming.|$|R
5000|$|Make Money Fast (stylised as MAKE.MONEY.FAST) is a {{title of}} an {{electronically}} <b>forwarded</b> <b>chain</b> letter which became so infamous {{that the term}} is now used to describe all sorts of <b>chain</b> letters <b>forwarded</b> over the Internet, by e-mail spam or Usenet newsgroups. In anti-spammer slang, the name is often abbreviated [...] "MMF".|$|R
50|$|Chain {{conveyors}} {{are primarily}} used to transport heavy unit loads, e.g. pallets, grid boxes, and industrial containers. These conveyors can be single or double chain strand in configuration. The load is positioned on the chains, the friction pulls the load <b>forward.</b> <b>Chain</b> conveyors are generally easy {{to install and}} have very minimum maintenance for users.|$|R
5000|$|Perform {{inference}}s as a <b>forward</b> <b>chaining</b> FOPL inference engine.|$|E
5000|$|... <b>forward</b> <b>chaining</b> {{state space}} search, {{possibly}} enhanced with heuristics ...|$|E
5000|$|There {{are mainly}} two modes for an {{inference}} engine: <b>forward</b> <b>chaining</b> and backward chaining. The different approaches are dictated by whether the inference engine is {{being driven by}} the antecedent (left hand side) or the consequent (right hand side) of the rule. In <b>forward</b> <b>chaining</b> an antecedent fires and asserts the consequent. For example, consider the following rule: ...|$|E
40|$|Point-of-sale (POS) systems {{increasingly}} support more retail processes {{than just}} the basic cash functionality. But {{to what extent do}} they support chain digitisation, i. e., interorganisational processes as the exchange of order and sales information? We develop a two-dimensional maturity model for categorising POS systems by their level of backward and <b>forward</b> <b>chain</b> digitisation support. Both dimensions have the same maturity scale, cumulating from internal isolated, internal integrated, external linked to external integrated. We operationalise and apply this model to the Dutch POS system market by assessing 86 different POS solutions of 79 POS vendors. It appears that about a third of all POS systems support backward chain digitisation to the external integrated level, and <b>forward</b> <b>chain</b> digitisation to the external linked level. In some branches, chain digitisation enabling initiatives are successfully deployed, e. g., in the fashion and furniture branches where EDI initiatives are established by industry boards. (aut. ref. ...|$|R
40|$|This paper {{describes}} the rule structure {{used to select}} the appropriate sequence of operations to produce various types of holes in 2 1 / 2 D prismatic components manufactured on machining centres. Operation selection is based on <b>forward</b> <b>chained</b> rules coded in Prolog. A different rule priority sequence is applicable depending on the rule fired last. This solves the conflict resolution problem an...|$|R
40|$|Abstract — One of {{the major}} {{challenges}} for the wireless net-works is related to efficient mobility management issue. In this paper, we propose a new micro-mobility management scheme, called Micro Mobile MPLS, that supports both mobility and quality-of-service (QoS) management in cellular networks. Our proposal includes two protocol variants. In the first variant, called FC-Micro Mobile MPLS, the <b>forwarding</b> <b>chain</b> (FC) concept is provided to track efficiently the host mobility within a domain. This concept fits mobile nodes (MNs) with high mobility rate. The second protocol variant, called Master <b>Forwarding</b> <b>Chain</b> (MFC) -Micro Mobile MPLS, aims to reduce the total signaling cost by controlling the number of registration updates with {{the root of the}} domain. In order to assess the efficiency of our proposals, the aforesaid protocols are compared with respect to the existing solutions. To achieve this, we develop analytical models to evaluate both registration updates and link usage costs. Numerical and simulation results show that the proposed mechanisms can significantly reduce the registration updates cost and provide low handoff latency and packet loss rate under various scenarios. I...|$|R
5000|$|Most rules engines used by {{businesses}} are <b>forward</b> <b>chaining,</b> {{which can be}} further divided into two classes: ...|$|E
50|$|The OPS5 <b>forward</b> <b>chaining</b> process {{makes it}} {{extremely}} parallelizeable during the matching phase, and several automatic parallelizing compilers were created.|$|E
5000|$|Let us {{illustrate}} <b>forward</b> <b>chaining</b> {{by following}} the pattern of a computer as it evaluates the rules.Assume the following facts: ...|$|E
40|$|Abstract — The {{efficient}} mobility management schemes {{based on}} pointer forwarding for wireless mesh networks (WMNs) with this {{to reduce the}} overall network traffic incurred by mobility management and packet delivery. The proposed schemes are per-user-based, i. e., the optimal threshold of the <b>forwarding</b> <b>chain</b> length that minimizes the overall network traffic is dynamically determined for each individual mobile user, based on the user’s specific mobility and service patterns. We analyze proposed models based on stochastic Petri nets to evaluate {{the performance of the}} proposed schemes. We demonstrate that there exists an optimal threshold of the <b>forwarding</b> <b>chain</b> length, given a set of parameters characterizing the specific mobility and service patterns of a mobile user. We also compare that our schemes yield significantly better performance than schemes that apply a static threshold to all mobile users. A comparative analysis shows that our pointer forwarding schemes outperform routing-based mobility management protocols for WMNs, especially for mobile Internet applications characterized by large traffic asymmetry for which the downlink packet arrival rate is much higher than the uplink packet arrival rate...|$|R
5000|$|HELLO CSECT The name of {{this program}} is 'HELLO' * Register 15 points here on entry from OPSYS or caller. STM 14,12,12(13) Save {{registers}} 14,15, and 0 thru 12 in caller's Save area LR 12,15 Set up base register with program's entry point address USING HELLO,12 Tell assembler which register we are using for pgm. base LA 15,SAVE Now Point at our own save area ST 15,8(13) Set <b>forward</b> <b>chain</b> ST 13,4(15) Set back chain [...] LR 13,15 Set R13 to address of new save area * -end of housekeeping (similar for most programs) - WTO 'Hello World' Write To Operator (Operating System macro) * L 13,4(13) restore address to caller-provided save area XC 8(4,13),8(13) Clear <b>forward</b> <b>chain</b> LM 14,12,12(13) Restore registers as on entry DROP 12 The opposite of 'USING' SR 15,15 Set register 15 to 0 so that the return code (R15) is Zero BR 14 Return to caller * [...] SAVE DS 18F Define 18 fullwords to save calling program registers [...] END HELLO This {{is the end of}} the program ...|$|R
30|$|Two major {{observations}} {{follow from}} the figure: (1) the predicted delivery ratio can differ significantly, {{depending on the}} type of input, and (2) providing the framework with key input parameters from simulations leads to highly accurate predictions of the delivery performance. The remaining gap can be attributed to simplifications made in the framework, and the fact that it is difficult to estimate long <b>forwarding</b> <b>chains</b> and delays from the simulation data, as described earlier in Section 4.3.|$|R
50|$|The Rete {{algorithm}} {{is widely used}} to implement matching functionality within pattern-matching engines that exploit a match-resolve-act cycle to support <b>forward</b> <b>chaining</b> and inferencing.|$|E
50|$|Since {{the order}} of the data is important, {{cross-validation}} might be problematic for Time-series models. A more appropriate approach might be to use <b>forward</b> <b>chaining.</b>|$|E
5000|$|<b>Forward</b> <b>chaining</b> {{starts with}} the {{available}} data and uses inference rules to extract more data (from an end user, for example) until a goal is reached. An inference engine using <b>forward</b> <b>chaining</b> searches the inference rules until it finds one where the antecedent (If clause) {{is known to be}} true. When such a rule is found, the engine can conclude, or infer, the consequent (Then clause), resulting in the addition of new information to its data. [...] Inference engines will iterate through this process until a goal is reached.|$|E
40|$|Auction mechanisms	have	attracted	a	great	deal	of	interest	and	have	been	used	in	diverse	e-marketplaces. In	particular,	 combinatorial	auctions	have	the	potential	to	play	an	important role in	electronic	transactions. Therefore,	 diverse	combinatorial	auction	market	types	have	been	proposed	to	satisfy	market	needs. These	combinatorial	auction	types	have	diverse market characteristics,	 which	require	an	effective	market	design	approach. This	study	proposes	a	comprehensive	and	systematic	market	design	methodology	for	combinatorial auctions based	on	three	phases:	 market	architecture	design,	 auction	rule	design,	 and	winner	determination	design. A	market	architecture	design	is	for	designing	market	architecture types by	Backward	Chain	Reasoning. Auction	rules	design	is	to	design	transaction	rules	for	auctions. The	specific	auction	process	type	is	identified	by	the	Backward	Chain	Reasoning process. Winner	determination	design	is	about	determining	the	decision	model	for	selecting	optimal	bids	and	auctioneers. Optimization	models	are	identified	by	<b>Forward</b>	<b>Chain</b> Reasoning. Also,	 we	propose	an	agent	based	combinatorial	auction	market	design	system	using	Backward	and	<b>Forward</b>	<b>Chain</b>	Reasoning. Then	we	illustrate	a	design	process	for	the general n-bilateral	combinatorial	auction	market. This	study	serves	as	a	guideline	for	practical	implementation	of	combinatorial	auction	markets	design...|$|R
40|$|Abstract—We propose {{efficient}} mobility management schemes {{based on}} pointer forwarding for wireless mesh networks (WMNs) {{with the objective}} to reduce the overall network traffic incurred by mobility management and packet delivery. The proposed schemes are per-user based, i. e., the optimal threshold of the <b>forwarding</b> <b>chain</b> length that minimizes the overall network traffic is dynamically determined for each individual mobile user, based on the user’s specific mobility and service patterns. We develop analytical models based on stochastic Petri nets to evaluate {{the performance of the}} proposed schemes. We demonstrate that there exists an optimal threshold of the <b>forwarding</b> <b>chain</b> length, given a set of parameters characterizing the specific mobility and service patterns of a mobile user. We also demonstrate that our schemes yield significantly better performance than schemes that apply a static threshold to all mobile users. A comparative analysis shows that our pointer forwarding schemes outperform routing-based mobility management protocols for WMNs, especially for mobile Internet applications characterized by large traffic asymmetry for which the downlink packet arrival rate is much higher than the uplink packet arrival rate. Index Terms—Mobility management, pointer forwarding, wireless mesh networks, performance analysis, stochastic Petri net...|$|R
5000|$|In the Andy Griffith Show episode [...] "The Lucky Letter," [...] Barney doesn't <b>forward</b> a <b>chain</b> {{letter and}} {{is the victim of}} {{continuing}} misfortune.|$|R
50|$|A simple {{example of}} <b>forward</b> <b>chaining</b> {{would be to}} assert Man(Socrates) to the system and then trigger the {{inference}} engine. It would match R1 and assert Mortal(Socrates) into the knowledge base.|$|E
50|$|Because {{the data}} determines which rules are {{selected}} and used, {{this method is}} called data-driven, in contrast to goal-driven backward chaining inference. The <b>forward</b> <b>chaining</b> approach is often employed by expert systems, such as CLIPS.|$|E
5000|$|Specific {{reasoning}} methods {{may be used}} to {{draw conclusions}} from a set of given facts in a knowledge base, e.g. <b>forward</b> <b>chaining</b> versus backward chaining. However, in opportunistic reasoning, pieces of knowledge may be applied either forward or backward, at the [...] "most opportune time".|$|E
30|$|In general, {{responsibility}} of RL {{is assigned to}} the supply chain department rather than having separate department. Therefore integration of forward and reverse supply chain {{plays an important role}} because same people work on both forward and reverse supply chains. One of the big concerns is the impact of reverse supply <b>chain</b> on <b>forward</b> supply <b>chain.</b> Experts fear that integration may disturb the whole of the <b>forward</b> supply <b>chain.</b> Employee’s awareness and motivation for the change is essential for successful integration.|$|R
40|$|International audienceProxy mobile IPv 6 (PMIPv 6) {{has been}} {{developed}} as a network-based mobility management protocol by the Internet Engineering Task Force. Mobility for individual mobile nodes (MNs) is supported by network entities. PMIPv 6 thus eliminates mobility signaling from the MNs as {{it does not require}} a mobility stack at the MNs. However, during handovers of MNs, PMIPv 6 induces unnecessary location update traffic and suffers the packet loss, which downgrades the quality of mobility support. In this paper, we introduce a state-aware pointer forwarding scheme with fast handover support, called FC-PMIPv 6, to further enhance the performance of mobility support in a PMIPv 6 domain. In FC-PMIPv 6, a pointer <b>forwarding</b> <b>chain</b> between mobility access gateways (MAGs) is established to reduce location update traffic to a local mobility anchor during handovers of an MN. The current mobility state of the MN is also considered in deciding whether the <b>forwarding</b> <b>chain</b> should be prolonged or refreshed by an MAG serving the MN. This mobility state consideration in pointer forwarding reduces unnecessary traffic for the location update and guarantees the efficiency of packet transmission. In addition, a fast handover process is adopted to reduce the handover latency and avoid the packet loss during handovers. We develop analytical models to study the performance of FC-PMIPv 6, which consider both the signaling cost and the packet transmission cost. Numerical results not only demonstrate that FC-PMIPv 6 outperforms the basic PMIPv 6 protocol, but also present a relationship between an optimized length of a <b>forwarding</b> <b>chain</b> and a mobility state of an MN. From the conducted numerical results, for example, it is shown that the signaling cost of FC-PMIPv 6 is enhanced up to 23 % over the basic PMIPv 6 protocol. In addition, simulation results on the weighted signaling cost are provided to demonstrate the performance improvement of our FC-PMIPv 6 compared with the basic PMIPv 6 protocol...|$|R
30|$|Success Rates under Various Movement Speeds: The {{performance}} of PTLS {{has also been}} validated by varying the movement speed of hosts. The results {{are very similar to}} the results shown in Figure 3. The robustness is mostly attributed to two facts. First, a location query can be answered by multiple hosts. Second, changes of network connectivity are unlikely to break the <b>forwarding</b> <b>chains</b> of location queries because a next-hop host is dynamically selected from multiple candidates where a copy of the up-to-date location can be found.|$|R
