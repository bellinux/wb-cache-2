189|412|Public
5000|$|In 1979 Dr.-Ing. Hans Hubschneider and Michael Sahling founded PTV Planungsbüro Transport und Verkehr GmbH in Karlsruhe, Germany. Between 1979 and 1982 they {{developed}} the first computer program for trip planning. The first projects included location and distribution planning for Raiffeisen in Schleswig-Holstein, line network planning for bus and road transport in Mannheim and trip planning for Langnese-Iglo. These projects were {{the basis for}} the development of other software products.In 1999, PTV's five GmbH units were merged into PTV Planung Transport Verkehrs AG (the [...] "AG" [...] stands for Aktiengesellschaft, which is a corporation under German law). Since 2001, the company has been providing software products and services in the fields of transport, mobility, and logistics. In 2012, PTV launches a new corporate design which reflects PTV's position as a global smart software company and a new logo: The PTV Group. In 2016 PTV Group has acquired 100% of the British company <b>Distributed</b> <b>Planning</b> Software Limited (DPS).|$|E
40|$|This {{viewgraph}} representation {{presents an}} overview of the mission planning process involving distributed operations (such as the International Space Station (ISS)) and the computer hardware and software systems needed to support such an effort. Topics considered include: evolution of <b>distributed</b> <b>planning</b> systems, ISS <b>distributed</b> <b>planning,</b> the Payload Planning System (PPS), future developments in <b>distributed</b> <b>planning</b> systems, Request Oriented Scheduling Engine (ROSE) and Next Generation <b>distributed</b> <b>planning</b> systems...|$|E
40|$|<b>Distributed</b> <b>planning</b> is {{the problem}} of finding a plan that helps a set of agents in a given initial {{configuration}} to collectively achieve their subgoals. In most distributed planners, multiple agents synthesize individual plans which are merged to get globally correct plan. The plan merging process involves resolution of conflicts. Importance of <b>distributed</b> <b>planning</b> is clear from the DARPA initiative air battle management program [Baker & Greenwood 1987], air campaign planning [Wilkins & Myers 1998], and the DARPA initiative pilot's associate program. A brief review of various <b>distributed</b> <b>planning</b> techniques is given in [Mali & Kambhampati 2002]...|$|E
5000|$|Multi-Criteria Evaluation in User-Centric Distributed Scheduling Agents, P.M. Berry, M. Gervasio, B. Peintner, T. Uribe, and N. Yorke-Smith. AAAI Spring Symposium on <b>Distributed</b> <b>Plan</b> and Schedule Management, Mar 2006.|$|R
50|$|The Grüne Post was a {{secondary}} trainer glider designed by Alexander Lippisch {{at the request}} of a German newspaper, the Grüne Post (Green Post), who <b>distributed</b> <b>plans.</b> Many were built by amateur groups.|$|R
40|$|MADGS) system {{facilitates}} <b>distributed</b> mission <b>planning</b> {{and execution}} in complex dynamic environments {{with a focus}} on <b>distributed</b> goal <b>planning</b> and satisfaction and mixedinitiative interactions with the human user. By understanding the fundamental technical challenges faced by our commanders on and off the battlefield, we can help ease the burden of decision-making. MADGS lays the foundations for retrieving, analyzing, synthesizing, and disseminating information to commanders. In this paper, we present an overview of the MADGS architecture and discuss the key components that formed our initial prototype and testbed. Keywords Mobile multiagent systems. Mixed-initiative <b>planning.</b> <b>Distributed</b> mission <b>planning</b> and execution. Intelligent resource allocation. Agent oriented software engineering 1 Introduction an...|$|R
40|$|SUMMARY: Planning {{processes}} in civil engineering are highly complex and characterised {{by a great}} number of participants and heterogeneous, <b>distributed</b> <b>planning</b> resources in terms of software methods, models and means of communication. The interaction, communication and information exchange between planning participants must be organised in computer networks. This paper presents an integrative process model to support cooperation in <b>distributed</b> <b>planning</b> {{processes in}} civil engineering, taking fire protection planning as an example. Firstly, the integrative process model consists of Petri-Nets to model the processes and to support the coordination between the participants during the planning process. Secondly, it consist of agents providing resources und methods to process the technical information within the modelled processes. Thirdly, Petri-Nets are used to model the agent migration and the agent interaction. KEYWORDS: Cooperation, <b>distributed</b> <b>planning</b> processes, process modelling, software agents, Petri-Nets...|$|E
40|$|Distributed SIPE (DSIPE) is a <b>distributed</b> <b>planning</b> {{system that}} {{provides}} decision support to human planners in a collaborative planning environment. The key contributions {{of our research}} on DSIPE are (1) constraint-based, consistent local views of the global plan that give each planner a view of how other planners ' subplans relate to their local planning decisions; (2) methods for automatically identifying and sharing potentially relevant information among <b>distributed</b> <b>planning</b> agents; and (3) techniques for merging subplans that leverage the shared subplan structure to generate a complete, final plan. DSIPE is a fully implemented system, and has been demonstrated to end users in the maritime (U. S. Navy and U. S. Marine Corps) planning community. Keywords: Distributed HTN planning, information management <b>Distributed</b> <b>Planning</b> This paper describes Distributed SIPE (DSIPE), a distributed version of the SIPE- 2 1 hierarchical task network (HTN) planning system (Wilkins 1988 [...] ...|$|E
40|$|This paper {{analyzes}} the <b>distributed</b> <b>planning</b> architecture proposed by Durfee (Durfee 1999) and discusses {{the properties of}} the suggested architecture in a peerto-peer, dynamic and semi-trusted environment. The I-Globe integrated architecture linking classical planning algorithms with multi-agent technologies is presented (namely using the Hierarchical Task Network style I-X technology and A-globe multi-agent system). As a key technical contribution of the paper we present a specific interaction protocol based on incremental improvement of the social knowledge of agents, the Incrementally Refined Acquaintance Model (IRAM), and provide justification for its deployment in a specific <b>distributed</b> <b>planning</b> scenario...|$|E
40|$|Global {{stabilization}} of energy networks without centralised {{control is a}} challenge. This paper explores the potential of coordination of energy usage of intelligent thermostatically controlled appliances (TCA) using a p 2 p network. A p 2 p tree overlay provides the basic structure for <b>distributed</b> <b>plan</b> aggregation and distribution. The approach is presented and discussed {{in the light of}} the risks and benefits identified. 1...|$|R
50|$|JourneyWeb, a {{protocol}} {{to allow the}} development of a <b>distributed</b> journey <b>planning</b> service (which became the Transport Direct Portal).|$|R
40|$|This paper {{presents}} a software component, the plan database, which provides the services {{needed to build}} and execute plans in a multi-robot context. This plan database handles fully dynamic plans (insertion and removal of tasks), provides tools for safe concurrent execution and modiﬁcation of <b>plans,</b> and handles <b>distributed</b> <b>plan</b> supervision without permanent robot-to-robot communication. The proposed concept is illustrated by a simulated example that involves a rover and an UAV in an initially unmapped environment...|$|R
40|$|The paper {{deals with}} <b>distributed</b> <b>planning</b> in a Multi-Agent System (MAS) {{constituted}} by several intelligent agents each {{one has to}} interact with the other autonomous agents. The problem faced is how to ensure a <b>distributed</b> <b>planning</b> through the cooperation in our multi-agent system. To do so, we propose the use of fuzzy logic to represent the response of the agent in case of interaction with the other. Finally, we use JADE platform to create agents and ensure the communication between them. A Benchmark Production System is used as a running example to explain our contribution...|$|E
40|$|<b>Distributed</b> <b>planning</b> and {{scheduling}} for instruments and platform operations in resource constrained environments are discussed. NASA has repeatedly faced {{the situation of}} multiple users having differing goals, objectives, and requirements interacting with a planning {{and scheduling}} system. Current examples include the Hubble Space Telescope and Space Station Freedom. The paper provides {{a brief description of}} the instrument and platform operations domain, discusses both traditional and <b>distributed</b> <b>planning</b> and scheduling in the context of this domain, and looks at examples of NASA environments in which planning and scheduling is or will be performed in a distributed system...|$|E
40|$|Efficient and {{effective}} <b>distributed</b> <b>planning</b> requires careful control {{over how much}} information the plan-ning agents broadcast to one another. Sending too lit-tle information could result in incorrect plans, while sending too much information could overtax the dis-tributed planning system’s resources (bandwidth and computational power). Ideally, <b>distributed</b> <b>planning</b> systems would have an efficient technique for filtering {{a large amount of}} irrelevant information from the mes-sage stream while retaining all the relevant messages. This paper describes an approach to controlling infor-mation distribution among planning agents using ir-relevance reasoning (Levy & Sagiv 1993). In this ap-proach, each planning agent maintains a data structur...|$|E
50|$|JourneyWeb is an XML {{protocol}} to allow <b>distributed</b> journey <b>planning</b> engines {{to communicate in}} order to provide multimodal journeys spanning different regions.|$|R
40|$|Summary. This paper {{presents}} a software component, the plan database, which provides the services {{needed to build}} and execute plans in a multi-robot context. This plan database handles fully dynamic plans (insertion and removal of tasks), provides tools for safe concurrent execution and modification of <b>plans,</b> and handles <b>distributed</b> <b>plan</b> supervision without permanent robot-to-robot communication. The proposed concept is illustrated by a simulated example that involves a rover and an UAV in an initially unmapped environment. ...|$|R
40|$|We have {{developed}} probabilistic algorithms that leverage the associates network for <b>distributed</b> <b>plan</b> instantiation, role allocation, information sharing and adjustable autonomy with a team. By developing such new algorithms, {{we have been}} able to build teams of hundreds of cooperating agents, and test specific behaviors among tens of thousands of agents. In this paper, we describe the algorithms that we {{have developed}}, the tests that we subjected them to, and sketch some of the key challenges that remain to be addressed...|$|R
40|$|We {{introduce}} the Fortunate Artists Media Empire (FAME) problem domain to study approaches for solving key challenges in <b>distributed</b> <b>planning</b> such as dynamic environments, dynamic goals, uncertainty of actions and scalability. FAME is an artificial problem domain {{that allows us}} to focus on key domain-independent research issues. The FAME problem domain is focused on broadcast quality monitoring tasks for radio and TV stations. Besides the broadcast stations, the FAME infrastructure consists of a quality assurance (QA) monitoring headquarters, QA regional centers, and mobile, truck-mounted sensors that need to be employed effectively. An implementation of the FAME domain could serve as a testbed for <b>distributed</b> <b>planning</b> research...|$|E
40|$|SHAI is {{developing}} a software architecture for automated, <b>distributed</b> <b>planning</b> and coordination of constellations of satellites. This architecture allows large satellite constellations to manage themselves with minimal human oversight. SHAI is utilizing an integrated approach drawing upon {{a broad range of}} A! and non-Al techniques. Advanced planning and scheduling algorithms permit the system to quickly create complex plans satisfying intricate time and other constraints. A reactive planning component deals with unexpected, time-critical local events such as new critical tasks. In addition, a knowledge base stores information about the satellites ’ capabilities and commitments that is used during the <b>distributed</b> <b>planning</b> process to properly allocate tasks to the satellites best suited to perform them...|$|E
40|$|ChainOfAsker is job {{management}} web application which have distributed or decentralized project planning capability based on chained asking mechanism. This paper briefly explain concept of chained asking and collaborative scheduling and the video will show how project is developed under <b>distributed</b> <b>planning</b> environment which provided by ChainOfAsker...|$|E
40|$|Some {{application}} domains {{highlight the}} importance of <b>distributed</b> continual <b>planning</b> concepts; coordinating teams of unmanned ground vehicles in dynamic environments {{is an example of}} such a domain. In this article, we illustrate the ideas in and promises of <b>distributed</b> continual <b>planning</b> by showing how acquiring and distributing operator intent among multiple semi-autonomous vehicles supports ongoing, cooperative mission elaboration and revision. Introduction An agent {{needs to be able to}} do <b>Distributed</b> Continual <b>Planning</b> (DCP) if its application domain has at least three characteristics. First, the application should require that an agent's success depends on choosing immediate actions that flow into good choices for future options. It is this longer-term view that motivates the use of planning such that an agent should decide between alternative anticipated sequences of activities; otherwise, the application might be better served with simpler reactive agents that only decide [...] ...|$|R
40|$|Abstract — We have {{developed}} probabilistic algorithms that leverage the associates network for <b>distributed</b> <b>plan</b> instantiation, role allocation, information sharing and adjustable autonomy with a team. By developing such new algorithms, {{we have been}} able to build teams of hundreds of cooperating agents, and test specific behaviors among tens of thousands of agents. In this paper, we describe the algorithms that we {{have developed}}, the tests that we subjected them to, and sketch some of the key challenges that remain to be addressed. I...|$|R
50|$|As {{the size}} of the {{transport}} systems covered by journey planners has increased, protocols and algorithms for <b>distributed</b> journey <b>planning</b> have been developed, allowing the distributed computation of journeys using networks of journey planners, each computing parts of the journey for different parts of the country. JourneyWeb, EU Spirit, Xephos, and the Delfi Protocol are all examples of <b>distributed</b> journey <b>planning</b> protocols. Another development in the 2000s has been the addition of real-time information to update the current schedules to include any delays or changes that will affect the journey plan.|$|R
40|$|We presentamulti-agent {{approach}} to planning for configuration, repair and maintenance activities in networked computing environments. In this setting, several planners, represented by different agents, cooperate {{on the network}} {{in order to build}} plans of actions needed to achievegiven goals. The knowledge domain is partitioned in sub-domains and each agentisincharge of managing and operating upon a given subset of resources, called the agent domain. In order to implement such <b>distributed</b> <b>planning</b> architecture wehave applied the agenttechnology to a constraint-based planner called PlanNet (Planning for the Network) [1]. The exploitation of the agenttechnology allows for an efficient and reliable <b>distributed</b> <b>planning</b> activity. 1 Introduction and Motivation In distributed environments the complexity of management tasks calls for the design of automated support systems for assisting network administrators in their activity. Wehavedeveloped an integrated planning architecture [1], c [...] ...|$|E
40|$|The Last Planner {{methodology}} {{has been}} applied to construction and design. These efforts have resulted in the development of computer programs (WorkPlan and DePlan) that guide production units in creating reliable work plans. One of these programs was extended to include <b>distributed</b> <b>planning</b> and coordination and space scheduling capabilities as well (WorkMovePlan) ...|$|E
40|$|International audienceIn this paper, we {{introduce}} a generic and fresh model for <b>distributed</b> <b>planning</b> called "Distributed Planning Through Graph Merging'' (DPGM). This model unifies the different {{steps of the}} <b>distributed</b> <b>planning</b> process into a single step. Our approach {{is based on a}} planning graph structure for the agent reasoning and a CSP mechanism for the individual plan extraction and the coordination. We assume that no agent can reach the global goal alone. Therefore the agents must cooperate, i. e., take in into account potential positive interactions between their activities to reach their common shared goal. The originality of our model consists in considering as soon as possible, i. e., in the individual planning process, the positive and the negative interactions between agents activities {{in order to reduce the}} search cost of a global coordinated solution plan...|$|E
40|$|Abstract. Putting {{forward the}} straight-line {{trajectory}} of MEFP （multi-explosively formed penetrators, also called attack unit ） {{in the target}} coordinate by means of building ground coordinate and target coordinate and the conversion of ground coordinate to target coordinate in the Area Blank off Weapon System. According to the intersection criterion {{that there are only}} two points between the attack unit straight-line trajectory and the cylindrical surface of the target, whether attack unit hits the target or not is decided. The intersection criterion is applied on the simulation of all kinds of different <b>distributed</b> <b>plans...</b>|$|R
40|$|The Multi-Agent Distributed Goal Satisfaction (MADGS) system {{facilitates}} <b>distributed</b> mission <b>planning</b> {{and execution}} in complex dynamic environments {{with a focus}} on <b>distributed</b> goal <b>planning</b> and satisfaction and mixed-initiative interactions with the human user. By understanding the fundamental technical challenges faced by our commanders on and off the battlefield, we can help ease the burden of decision-making. MADGS lays the foundations for retrieving, analyzing, synthesizing, and disseminating information to commanders. In this paper, we present an overview of the MADGS architecture and discuss the key components that formed our initial prototype and testbed...|$|R
40|$|Research on <b>distributed</b> task <b>planning</b> {{model for}} multi-autonomous {{underwater}} vehicle (MAUV). A scroll time domain quantum artificial bee colony (STDQABC) optimization {{algorithm is proposed}} to solve the multi-AUV optimal task planning scheme. In the uncertain marine environment, the rolling time domain control technique is used to realize a numerical optimization in a narrowed time range. Rolling time domain control {{is one of the}} better task planning techniques, which can greatly reduce the computational workload and realize the tradeoff between AUV dynamics, environment and cost. Finally, a simulation experiment was performed to evaluate the <b>distributed</b> task <b>planning</b> performance of the scroll time domain quantum bee colony optimization algorithm. The simulation results demonstrate that the STDQABC algorithm converges faster than the QABC and ABC algorithms in terms of both iterations and running time. The STDQABC algorithm can effectively improve MAUV <b>distributed</b> tasking <b>planning</b> performance, complete the task goal and get the approximate optimal solution...|$|R
40|$|This is {{the second}} of a two-part paper dealing with <b>distributed</b> <b>planning</b> for Air Traffic Control. Three {{different}} organizational structures have been implemented: the Local, Centralized Architecture, and the Location Centered, Cooperative Planning System with one- and two-level Coordinator-Coworker Hierarchies. We present an initial, simplified analysis of the speedup obtainable by using the latter two organizational structures. The vehicle of our empirical studies, the Distributed Air Traffic Control Test Bed is then introduced. We discuss the design {{and the results of}} a series of experiments performed. We compare in the test bed performance measures of the three systems using the respective organizational structures. The comparisons are made at different levels of traffic density and problem size, in terms of communication overhead and processing time needed for planning. Keywords: <b>Distributed</b> <b>Planning</b> and Problem Solving; Air Traffic Control; System Recovery with Graceful Degradat [...] ...|$|E
40|$|We {{present an}} {{approach}} of a <b>distributed</b> <b>planning</b> method to solve dynamically some typical tasks of a production planning {{system in a}} flexible manufacturing system (FMS) at control level without using a fixed central component during planning and execution of orders received by one or several production planning systems above the control level. To achieve this, a flexible manufacturing system has been modelled as a multi-agent system, while the planning method we present uses the structure of manufacturing plans to coordinate properly their activities through negotiation among the agents. This has been implemented and tested in an object-oriented simulation environment. 1 Introduction In present-day manufacturing environments there is {{an increasing number of}} intelligent mobile robots and intelligent manufacturing cells with growing autonomous capabilities. These systems are usually connected by a powerful computer network. It seems to be just a natural step to use <b>distributed</b> <b>planning</b> [...] ...|$|E
40|$|<b>Distributed</b> <b>planning</b> is {{fundamental}} to the generation of cooperative activities in Multi-Agent Systems. It requires both an adequate plan representation and efficient interacting methods allowing agents to coordinate their plans. This paper proposes a recursive model for the representation and the handling of plans by means of Recursive Petri Nets (RPN) which support the specification of concurrent activities, reasoning about simultaneous actions and continuous processes, a theory of verification and mechanisms of transformation (e. g. abstraction, refinement, merging). The main features of the RPN formalism are domain independence, broad coverage of interacting situations and operational coordination. This paper also provides an approach to the interleaving of execution and planning {{which is based on}} the RPN semantics and gives some significant methods allowing plan management in <b>distributed</b> <b>planning.</b> It goes on to show how this approach can be used to coordinate agents' plans in a shared and dynamic environment...|$|E
40|$|Key words: {{distribution}} network planning; comprehensive fuzzy evaluation; entropy weight method Abstract. Comprehensive evaluation of <b>distribute</b> network <b>planning</b> is a multi-factors decision-making problem in complicated system. Combining with the factors of <b>distribute</b> network <b>planning,</b> {{established for the}} {{distribution network}} planning project evaluation fuzzy comprehensive evaluation model, and the entropy weight method is led into comprehensive fuzzy evaluation. It overcomes the shortages of traditional method, which requires to the independence of each index, and the weight coefficients of factors are automatically determined according to the opinion of experts. Finally, one example is used to verify the feasibility and practicality of the method...|$|R
40|$|The 4 D/RCS {{architecture}} {{provides a}} reference model for military unmanned vehicles on how their software components should {{be identified and}} organized. It defines ways of interacting to ensure that missions, especially those involving unknown or hostile environments, can be analyzed, decomposed, <b>distributed,</b> <b>planned,</b> and executed intelligently, effectively, efficiently and in coordination. To achieve this, the 4 D/RCS reference model provides well defined and highly coordinated sensory processing, world modeling, knowledge management, cost/benefit analysis, behavior generation, and messaging functions, {{as well as the}} associated interfaces. The 4 D/RCS architecture is based on scientific principles and is consistent with military hierarchical command doctrine...|$|R
2500|$|AM's {{impact on}} {{firearms}} involves two dimensions: new manufacturing methods for established companies, and new {{possibilities for the}} making of do-it-yourself firearms. In 2012, the US-based group Defense <b>Distributed</b> disclosed <b>plans</b> to design a working plastic 3D printed firearm [...] "that could be downloaded and reproduced by anybody with a 3D printer." [...] After Defense <b>Distributed</b> released their <b>plans,</b> questions were raised regarding the effects that 3D printing and widespread consumer-level CNC machining may have on gun control effectiveness.|$|R
