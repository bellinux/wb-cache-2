10000|9003|Public
5|$|C# is {{intended}} to be suitable for writing applications for both hosted and <b>embedded</b> <b>systems,</b> ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.|$|E
5|$|Since 2004, the New York City BSD Users Group {{database}} provides dmesg {{information from}} a collection of computers (laptops, workstations, single-board computers, <b>embedded</b> <b>systems,</b> virtual machines, etc.) running FreeBSD.|$|E
5|$|The ARM and MIPS {{support is}} mostly aimed at <b>embedded</b> <b>systems,</b> however FreeBSD/ARM runs {{on a number}} of single-board computers, {{including}} the BeagleBone Black, Raspberry Pi and Wandboard.|$|E
40|$|Abstract. Because {{the absence}} of {{hardware}} support, almost all of <b>embedded</b> operating <b>system</b> are based on SDRAM in past time. With progress of <b>embedded</b> <b>system</b> hardware, <b>embedded</b> <b>system</b> can provide more substrative supports for <b>embedded</b> operating <b>systems.</b> In this paper we present an operating <b>system</b> microkernel for <b>embedded</b> <b>system</b> which can reside in the SRAM on chip. With progress of <b>embedded</b> <b>system</b> hardware, <b>embedded</b> <b>system</b> can provide more substrative supports for <b>embedded</b> operating <b>systems.</b> In this paper we present an operating system microkernel named SRAMOS for <b>embedded</b> <b>system</b> which can reside in the SRAM on chip. This microkernel can {{make the most of}} low power consumption of SRAM. The experiment results show that this microkernel performs better than the traditional <b>embedded</b> operating <b>systems.</b> ...|$|R
40|$|Abstract: <b>Embedded</b> <b>system</b> {{becomes more}} and more useful in all of the domain of our society. An <b>embedded</b> <b>system</b> {{education}} in universities is an urgent requirement. College of Computer Science of Zhejiang University is trying to improve its education in <b>embedded</b> <b>system.</b> This paper describes the achievement Zhejiang University has accomplished since 2002. Key–Words: <b>Embedded</b> <b>System,</b> Curriculum, Course reformation, Embedded Softwar...|$|R
40|$|Nowadays <b>embedded</b> <b>system,</b> hardware/software {{technology}} has progressed prosperously. In many field of industrial manufacture and people life, <b>embedded</b> <b>system</b> is indispensable. Recently hardware of <b>embedded</b> <b>system</b> becomes {{more powerful and}} sophisticated. SOC is an important trend for hardware design. New software architecture has to be proposed to adapt to this progress. In this paper, new software architecture for <b>embedded</b> <b>system</b> is proposed and described...|$|R
5|$|The goal of {{computer}} forensics is {{to explain the}} current state of a digital artifact; such as a computer system, storage medium or electronic document. The discipline usually covers computers, <b>embedded</b> <b>systems</b> (digital devices with rudimentary computing power and onboard memory) and static memory (such as USB pen drives).|$|E
5|$|As part of Microsoft's {{unification}} strategies, Windows {{products that}} are based on Windows 10's common platform but meant for specialized platforms are marketed as editions of the operating system, rather than as separate product lines. An updated version of Microsoft's Windows Phone operating system for smartphones, and also tablets, was branded as Windows 10 Mobile. Editions of Enterprise and Mobile will also be produced for <b>embedded</b> <b>systems,</b> along with Windows 10 IoT Core, which is designed specifically for use in small footprint, low-cost devices and Internet of Things (IoT) scenarios and is similar to Windows Embedded.|$|E
25|$|The {{classification}} tree editor for <b>embedded</b> <b>systems</b> also based upon this edition.|$|E
40|$|Abstract. This paper {{describes}} {{the design and}} implementation of a hybrid intelligent surveillance system that consists of an <b>embedded</b> <b>system</b> and a personal computer (PC) -based <b>system.</b> The <b>embedded</b> <b>system</b> performs some of the image processing tasks and sends the processed data to the PC. The PC tracks persons and recognizes two-person interactions by using a grayscale side view image sequence captured by a stationary camera. Based on our previous research, we explored the optimum division of tasks between the <b>embedded</b> <b>system</b> and the PC, simulated the <b>embedded</b> <b>system</b> using dataflow models in Ptolemy, and prototyped the <b>embedded</b> <b>system</b> in real-time hardware and software using a 16 -bit CISC microprocessor. This <b>embedded</b> <b>system</b> processes one 320 × 240 frame in 89 ms, which yields one-third of the rate of 30 Hz video system. In addition, the real-time <b>embedded</b> <b>system</b> prototype uses 5. 7 K bytes of program memory, 854 K bytes of internal data memory and 2 M bytes external DRAM...|$|R
40|$|This {{paper has}} {{analyzed}} the display module in <b>embedded</b> <b>system,</b> introduced the AT 91 RM 9200 <b>embedded</b> <b>system</b> and S 1 D 13506 controller interfacing. Then it researched the driver transplant of SID 13506 in the AT 91 RM 9200 <b>embedded</b> <b>system,</b> and amended the former device driver of display kernel in <b>embedded</b> <b>system.</b> Finally, the paper put forward whole design methods, and applied {{them to the}} railroad switch snow-thawing system. China Instrumentation and Control Society (CIS...|$|R
40|$|This paper {{presents}} {{a new way}} that testing fiscal cash register <b>embedded</b> <b>system</b> with a scenario pattern-based method. It also introduces to some concepts of scenario and scenario patterns, and formalizes the <b>embedded</b> <b>system</b> with scenario model ACDATE. The verification patterns are built the fiscal cash register <b>embedded</b> <b>system,</b> and are tested with the samples of basic scenario pattern and complex scenario pattern. This paper shows the whole process how to verify the <b>embedded</b> <b>system</b> with scenario patterns. Key words...|$|R
25|$|Mirza Athar Baig, Researcher in {{the field}} of Electronics and <b>Embedded</b> <b>Systems.</b>|$|E
25|$|Don't panic! Douglas Adams to keynote Embedded show. (2001). <b>Embedded</b> <b>Systems</b> Programming, 14(3), 10.|$|E
25|$|Nard SDK – is a {{software}} development kit (SDK) for industrial <b>embedded</b> <b>systems.</b>|$|E
5000|$|As {{with other}} software, <b>embedded</b> <b>system</b> {{designers}} use compilers, assemblers, and debuggers to develop <b>embedded</b> <b>system</b> software. However, {{they may also}} use some more specific tools: ...|$|R
40|$|Abstract: This paper {{reports on}} {{performance}} results gained while modelling an <b>embedded</b> <b>system,</b> how the associated workload was constructed and finally documents the results measured {{on the actual}} <b>embedded</b> <b>system.</b> The main hardware components of the <b>embedded</b> <b>system</b> consisted of a Pentium 32 bit microprocessor, 32 Mbyte of memory and a ne 2000 10 / 100 Mbit/sec 802. 3 network interface card. The software for the <b>embedded</b> <b>system</b> was built from lightweight processes which are coordinated through a preemptive executive running in a microkernel. This paper reports of the measured and simulated performance of the device driver and the simulated throughput results {{were found to be}} accurate to within 8 %. Ke ywords: m 2 f, gdb, binutils, <b>embedded</b> <b>system,</b> simulation, pentium, device driver. 1...|$|R
30|$|<b>Embedded</b> <b>system</b> (blue). The {{software}} {{implemented in}} the <b>embedded</b> <b>system</b> was designed for real-time tasks and developed in Simulink. Examples include state machines {{to interact with the}} hardware, an emergency routine, routines in the control layer which have real-time requirements, interactions with sensors and localization algorithms to process the sensor outputs. The ControlDesk program, which runs on Linux, allows communication with the <b>embedded</b> <b>system.</b>|$|R
25|$|Other {{special-purpose}} physical layers include Avionics Full-Duplex Switched Ethernet and TTEthernet — Time-Triggered Ethernet for <b>embedded</b> <b>systems.</b>|$|E
25|$|The {{proprietary}} {{nature of}} the complete SD specification affects <b>embedded</b> <b>systems,</b> laptop computers, and some desktop computers; many desktop computers do not have card slots, instead using USB-based card readers if necessary. These card readers present a standard USB mass storage interface to memory cards, thus separating the operating system from {{the details of the}} underlying SD interface. However, <b>embedded</b> <b>systems</b> (such as portable music players) usually gain direct access to SD cards and thus need complete programming information. Desktop card readers are themselves embedded systems; their manufacturers have usually paid the SDA for complete access to the SD specifications. Many notebook computers now include SD card readers not based on USB; device drivers for these essentially gain direct access to the SD card, as do <b>embedded</b> <b>systems.</b>|$|E
25|$|Some <b>embedded</b> <b>systems</b> use {{operating}} {{systems such as}} Palm OS, BSD, and Linux, although such {{operating systems}} do not support real-time computing.|$|E
40|$|A course project {{experiment}} plays a {{very important}} role in mastering a student <b>embedded</b> <b>system</b> software education. The paper gives the design and implementation solution to a Chinese character text editor for <b>embedded</b> <b>system</b> (CCTE for short), including requirement analysis, function design, task division, main process flow, Chinese character process, man-machine interface layout and test results. This course project {{can be used as a}} template for <b>embedded</b> <b>system</b> software experiment...|$|R
40|$|Abstract—Technologies {{and methods}} for the {{development}} of <b>embedded</b> <b>system</b> projects are highly constrained by predefined hardware and software platforms. In this sense, <b>embedded</b> <b>system</b> projects may have more goals (derived from constraints) to achieve than regular software projects. Without pragmatic support, engineers from different disciplines are likely to neglect some project goals in the real-world <b>embedded</b> <b>system</b> projects. As a consequence, the success of <b>embedded</b> <b>system</b> projects may be more difficult to achieve than regular software projects. In this paper we report experiences gained during applying a goal driven project management methodology on several <b>embedded</b> <b>system</b> projects in a software company. We evaluated the effectiveness and efficiency of our Goal-Driven Development (GDD) methodology in practice by both projects results and feedbacks from relevant stakeholders. The results of our study show that GDD enables <b>embedded</b> <b>system</b> project teams to systematically and effectively identify, understand, track, and ultimately realize the project goals to meet relevant stakeholders’ expectations. Being supported by GDD, explicit linkages and assignments are established between goals and solutions with project team’s commitments...|$|R
50|$|The {{programmer}} usually edits and compiles the <b>embedded</b> <b>system's</b> code on {{the host}} system, as well. The host system will have special compilers that produce executable code for the <b>embedded</b> <b>system,</b> termed cross compilers or cross assemblers.|$|R
25|$|The courses offered include Diploma in <b>Embedded</b> <b>Systems</b> Design in {{addition}} to the courses on IBM Mainframe, Web Technology, Database Technology, and Internet Technology.|$|E
25|$|MIPS III was {{eventually}} implemented {{by a number}} of embedded microprocessors. Quantum Effect Design's R4600 (1993) and its derivatives was widely used in high-end <b>embedded</b> <b>systems</b> and low-end workstations and servers. MIPS Technologies' R4200 (1994), was designed for <b>embedded</b> <b>systems,</b> laptop, and personal computers. A derivative, the R4300i, fabricated by NEC Electronics, was used in the Nintendo 64 game console. The Nintendo 64, along with the PlayStation, were the among the highest volume users of MIPS architecture processors in the mid-1990s.|$|E
25|$|Adams {{was also}} a keynote speaker for the April 2001 <b>Embedded</b> <b>Systems</b> Conference in San Francisco, {{one of the major}} {{technical}} conferences on embedded system engineering.|$|E
40|$|<b>Embedded</b> <b>system</b> {{plays an}} {{important}} role in various industry applications. An <b>embedded</b> <b>system</b> is consisting of software and hardware. The hardware platform of conventional <b>embedded</b> <b>system</b> is typically based on IC chips that have fixed resources. Besides, with the development of FPGA, an emerging approach for designing <b>embedded</b> <b>system</b> is implementing soft IP cores on FPGAs. Soft IP cores are synthesizable hardware blocks described in HDL language. Their source code can be either open or close to public. For example, OpenRISC 1200, is an open source 32 -bit RISC microprocessor. In addition, the increasing complexity of <b>embedded</b> <b>system</b> forces software developers to consider operating system support to reduce their workload. Thus, in this thesis, a prototype of open source IP based <b>embedded</b> <b>system</b> with Linux is implemented on Atlys (Xilinx Spartan- 6) FPGA board and the goal is to evaluate if the system is appropriate for industrial applications. The hardware platform is ORPSOC, which is a reference SoC design based on OpenRISC 1200 processor. For software, Linux operating system is installed. Furthermore, an application executes on Linux is developed that reads the output of an I 2 C compass sensor-LSM 303 DLM. With the success of the application and the investigation of license issues, the conclusion is drawn that open source IP based <b>embedded</b> <b>system</b> with Linux is usable for industry. Although comparing to conventional <b>embedded</b> <b>system,</b> the open source IP based <b>embedded</b> <b>system</b> with Linux has following cons, such as high product cost, basic-supported development environment and more difficult software development if Linux driver doesn’t support the hardware. However, its pros are high flexibility and scalability, high software portability, low software development difficulty and high reusability that make it more suitable for industry usage...|$|R
50|$|An in-circuit {{emulator}} (ICE) provides {{a window into}} the <b>embedded</b> <b>system.</b> The programmer uses the emulator to load programs into the <b>embedded</b> <b>system,</b> run them, step through them slowly, and view and change data used by the system's software.|$|R
40|$|In recent years, {{internet}} {{of things}} or IoT {{became one of the}} hottest topics in field of computer science and electrical engineering. The core of each IoT device is <b>embedded</b> <b>system,</b> which is based on microcontroller, sensors and actuators. Based on data obtained by sensors, microcontroller generates response, which is executed by actuators. We developed <b>embedded</b> <b>system,</b> which {{could be used as a}} tracking device for suitcases. Apart from <b>embedded</b> <b>system,</b> we developed server-side application and mobile application for devices with Android operating system. Server application is used to store the data obtained from tracking device and acts as intermediate point between mobile application and <b>embedded</b> <b>system.</b> Mobile application offers user interface for interaction with tracking device...|$|R
25|$|It did {{achieve some}} success, however, in the PC-compatible x86 <b>embedded</b> <b>systems</b> market with its STPC SoC line, {{culminating}} in the 486-class STPC Atlas, which reached end-of-life in 2008.|$|E
25|$|Unique {{implementations}} include Lightweight TCP/IP, an {{open source}} stack designed for <b>embedded</b> <b>systems,</b> and KA9Q NOS, a stack and associated protocols for amateur packet radio systems and personal computers connected via serial lines.|$|E
25|$|Additionally, QNX is a {{microkernel}} {{which is}} principally used in <b>embedded</b> <b>systems,</b> and the open-source software MINIX, while originally created for educational purposes, is now focussed {{on being a}} highly reliable and self-healing microkernel OS.|$|E
40|$|Since the <b>Embedded</b> <b>system</b> and SOC {{technology}} is increasingly developing and widely applied in industry, the {{education in this}} field is considered as an important part for the students in Electronic Engineering. Therefore, a basic but complete <b>embedded</b> <b>system</b> for demonstration is required to implement. In practice, the Altera DE 2 board is adopted to construct an <b>embedded</b> <b>system</b> which consists of CPU (soft core “Nios”), ALU, memory chip and USB port. At the same time, a remote terminal in PC is created to control the system depending on the USB channel connecting two sides. In the project, the procedure for building a platform based <b>embedded</b> <b>system</b> is presented {{as well as the}} USB application in Windows environment...|$|R
40|$|Abstract. With {{the rapid}} {{development}} of computer technology, <b>embedded</b> <b>system</b> {{is more and}} more widely used. The <b>embedded</b> hardware <b>system</b> was designed by taking Samsung ARM 7 TDMI CPU as the core. And a small uClinux <b>system</b> was <b>embedded</b> into this hardware system. Various kinds of applications in uClinux system can be developed. This thesis introduced one of those applications, which is embedded web server and its protocol-HTTP. In this thesis, the <b>embedded</b> <b>system</b> based on ARM had been developed. Our <b>embedded</b> <b>system</b> has the characters of low cost and high efficiency. It is at large applicated on business forwardly...|$|R
50|$|VLSI design & <b>Embedded</b> <b>system.</b>|$|R
