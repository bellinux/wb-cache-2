4|153|Public
5000|$|... <b>guaranteed</b> <b>transactions,</b> {{thanks to}} the {{establishment}} of a market guarantee fund supported by brokerage firms to mitigate an eventual default; ...|$|E
40|$|The aim of {{this thesis}} is to present novel {{techniques}} for reasoning about the dynamic and static semantics of concurrent programs that use locks and transactions to isolate accesses to shared memory. We use moverness to characterise the observational semantics of reads issued by locks and transactions under the simpler semantics of free, left, right and both movers. The second contribution is <b>guaranteed</b> <b>transactions</b> which are a safer alternative to locks and the privatisation/publication idioms for specific scenarios. <b>Guaranteed</b> <b>transactions</b> facilitate a simpler pessimistic coordination semantics than locks, but offer most of the conveniences that have made transactions appealing. Finally, we present a static analysis for reasoning about the isolation of a program that uses locks and transactions. If our isolation algorithm determines that all the accesses issued by a program are isolated, then the program is declared data-race-free...|$|E
30|$|Financial {{intermediaries}} enable {{strangers to}} transact because a state-backed trusted institution <b>guaranteed</b> <b>transactions.</b> Most money in global financial systems is actually credit extended by these institutions, not currency printed by governments. Periodic credit crises undermine confidence in these trusted institutions, {{as does the}} abuse of seignorage—the return to the issuer (e.g., a government) from the right to create money—typically by over-inflating a currency. A host of tokens using distributed ledgers are competing to institutionalize ways of creating trust among strangers that {{does not depend on}} trusted intermediaries.|$|E
40|$|We {{study the}} {{transaction}} atomicity problem for designing electronic payment protocols in distributed systems. We observe that the techniques {{that are used}} to <b>guarantee</b> <b>transaction</b> atomicity in a database system are not robust enough to <b>guarantee</b> <b>transaction</b> atomicity in an electronic payment system, in which a set of dishonest or malicious participants may exhibit unpredictable behavior and cause arbitrary failures. We present a new concept [...] -verifiable transaction atomicity [...] -for designing electronic payment protocols. We give formal specifications to the verifiable atomic commitment problem. Then we design a robust electronic currency system to meet the specifications and achieve the verifiable transaction atomicity. 1 Introduction A critical task in the execution of a monetary transaction in a distributed system is to ensure its consistent and nonrepudiational termination. The participants of the transactions whose financial records were updated by the transaction must agree on wh [...] ...|$|R
40|$|Database {{replication}} protocols {{based on}} group communication primitives have recently {{emerged as a}} promising technology to improve database faulttolerance and performance. Roughly speaking, this approach consists in exploiting the order and atomicity properties provided by group communication primitives or, more specifically Atomic Broadcast, to <b>guarantee</b> <b>transaction</b> properties. This paper proposes a systematic classification of non voting database replication algorithms based on Atomic Broadcast. 1...|$|R
30|$|For half a century, no {{consensus}} {{has been reached}} on optimal capital structure after numerous intensive studies. This paper develops three alternative simple models to derive optimal capital structure. Because the optimal leverage ratio determined by the models is close to most survey data, some relevant puzzles, such as “financial conservatism”, are easily explained. In addition, the new models can be extended to accommodate various decision situations, for instance, abnormal growth, bankrupt expectancy, debt <b>guarantee,</b> <b>transaction</b> cost, and personal income tax.|$|R
40|$|The article {{studies the}} {{possibilities}} and expediency of endowment utilization {{as an alternative}} of the social sphere elements budgetary funding in Ukraine. We have conclusions that the endowments have some advantages. That’s is creates the possibility for a long-term planning and development of social sphere (mechanism of adequate general stable situation in the country), convenient for major companies inclined to strategic business planning and contributions in the social sphere, transparent and provides guarantees for the donors in the specific cash expenditure, provides the non-commercial organizations with the possibility to change the approach to implementation of social projects, to study how to earn the money {{and not to be}} just the consumers, creates the possibility to accumulate the funds in charitable purposes that makes them attractive for medium and small companies. The disadvantages of endowments are risks of financial nature (small income <b>guaranteed</b> <b>transactions,</b> high inflation rate, exposure to the financial crises), difficulties with forming the «body» of the specific capital of such size that would guarantee more or less substantial income directed for charity, no instant effect for recipient’s favor,  possibility to be used in swindling, no tax stimulation of donors. Let’s think that endowments or funds specific capital have an important meaning in the development of social sphere because they are basis for its long-term planning and development. For non-commercial organization {{there are at least two}} advantages. First is stable financing and second is attraction of new contributors for non-commercial organizations. It is both stability of financing and guarantee of stable functioning...|$|E
40|$|Thesis on topic "Guarantee Valuation" aims to {{describe}} methods of valuing a guarantee. In {{first part of}} the document the <b>guarantees,</b> <b>guarantee</b> <b>transaction</b> structure and factors affecting the value of guarantees are defined. The second part describes four methods of guarantee valuation. In the last practical part, selected methods are used to estimate the value of a hypothetic guarantee. Emphasis is also put on the related topics as tax impacts of guarantees and special situations. Rating methodologies are used to estimate the risk of the borrower...|$|R
40|$|Transactional memory (TM) {{is a key}} {{concurrent}} programming abstraction. Several software-based transactional memory (STM) implementations have been developed in recent years. All STM implementations must <b>guarantee</b> <b>transaction</b> atomicity but different STM implementations may provide different progress guarantees. In order to ensure progress, an STM implementation must resolve transaction conflicts. This is done either by the implementation itself or by delegating conflict resolution to a separate contention manager module that tries to resolve transaction collisions once they are detected. We present CAR-STM, a scheduling-based mechanism for STM Collision Avoidance and Resolution, that {{can be incorporated into}} existing STM implementations. CAR-ST...|$|R
40|$|Networks are {{emerging}} as a possible solution for future on-chip interconnects. In this chapter, we show how networks on chip (NoC) are similar to and differ from both off-chip networks (e. g., computer networks) and current on-chip interconnects (e. g., buses). We re-examine their communication services {{in the context of}} NoCs. To enable a clean separation between the NoC and IP blocks, we provide services that abstract from network implementations. We define a request-response transaction model similar to bus protocols, to make our approach backward compatible. To exploit the full power of NoCs, we also provide connection-oriented communication with differentiated services. Examples are bandwidth <b>guarantees,</b> <b>transaction</b> orderings, and end-to-end flow control...|$|R
5000|$|Durability (database systems), {{one of the}} ACID {{properties}} that <b>guarantee</b> that database <b>transactions</b> are processed reliably ...|$|R
50|$|In {{database}} systems, durability is the ACID property which <b>guarantees</b> that <b>transactions</b> {{that have}} committed will survive permanently. For example, if a flight booking {{reports that a}} seat has successfully been booked, then the seat will remain booked even if the system crashes.|$|R
5000|$|The <b>guarantee</b> {{that any}} <b>transactions</b> {{started in the}} future {{necessarily}} see the effects of other transactions committed in the past ...|$|R
40|$|Cloud {{technology}} is evolving {{at a rapid}} pace with innovation occurring throughout the software stack. While updates to Software-as-a-Service (SaaS) products require a simple push of code to the production servers or platform, updates to the Infrastructure-as-a-Service (IaaS) or Platform-as-a-Service (PaaS) layers require more intricate procedures to prevent disruption to services at higher abstraction layers. In this work we address the need for rolling upgrades to PaaS systems. We do so with the App-Scale PaaS, which is a multi-application, multi-language, multi-infrastructure, and multi-datastore platform. Our design and implementation allows for applications and tenants to be migrated live from one cloud deployment to another with <b>guaranteed</b> <b>transaction</b> semantics and minimal performance degradation. In this paper we motivate the need for PaaS migration support and empirically evaluate migrations between two AppScale deployments using highly scalable datastores. ...|$|R
40|$|The {{crash of}} the French stock market in 1882 {{presented}} the Paris Bourse with its worst crisis of the nineteenth century. Its structure was similar in key respects to today’s futures markets, with a dominant forward market leading the Bourse to adopt a common fund to <b>guarantee</b> <b>transactions</b> and liquidity. While this mutualization of risk protects clients and brokers from idiosyncratic shocks, it is generally assumed that it also provides considerable protection against systemic shocks, as no twentieth century exchange {{has been forced to}} shut down. Using new archival data, this paper shows how a stock market crash overwhelmed the Bourse’s common fund. Only an emergency loan from the Bank of France, intermediated by the largest banks, prevented a closure of the Bourse. Stock market crash, Microstructure, Mutualization of risk, Bailout...|$|R
5000|$|To {{be able to}} pay out large cash prizes at any time, {{the company}} has {{completed}} a <b>guaranteed</b> insurance <b>transaction</b> (Insurance-Linked Securities (ILS)) that insures it against high bet payouts. This bond is particularly popular among institutional investors such as pension funds, insurance companies or family offices. [...] The company also has an insurance policy with Lloyd’s of London.|$|R
40|$|The {{rapid growth}} of {{derivative}} markets has raised concerns about counterparty risk. It {{has been argued that}} their mutual guarantee funds provide an adequate safety net. While this mutualization of risk protects clients and brokers from idiosyncratic shocks, it is generally assumed that it also offers protection against systemic shocks, largely based on the observation that no twentieth century exchange has been forced to shut down. However, an important exception occurred in 1882 when the crash of the French stock market nearly forced the closure of the Paris Bourse. This exchange's structure was very similar to today's futures markets, with a dominant forward market leading the Bourse to adopt a common fund to <b>guarantee</b> <b>transactions.</b> Using new archival data, this paper shows how the crash overwhelmed the Bourse's common fund. Only an emergency loan from the Bank of France, intermediated by the largest banks, prevented a closure of the Bourse. ...|$|R
50|$|Fully transactional: {{supports}} ACID <b>transactions</b> <b>guaranteeing</b> {{that all}} database transactions are processed reliably {{and in the}} event of a crash all pending documents are recovered and committed.|$|R
40|$|It {{seems clear}} from the cases that {{independent}} advice {{can play a role}} where the lender or creditor attempts to argue that a guarantor or surety has entered into a guarantee in an act of free and independent will, and is aware of the nature and effect of such a security. The purpose of independent advice in this context is to ensure that the guarantor understands the nature and effect of the transaction and the documents to be signed. This article critically analyses the importance of the surety procuring independent advice before executing the contract of guarantee. It examines some of the evolving problems with independent advice and whether the presence of such advice can actually be used to protect a <b>guarantee</b> <b>transaction</b> from the taint of, for example, unfairness. It also considers whether current ideas of what constitutes independent advice are in general adequate to form the basis of an effective protective regime for guarantor...|$|R
40|$|E-commerce has {{appeared}} and developed {{along with the}} Internet. Online buyers and sellers can become fraud victims. Escrow Services {{reduce the number of}} fraud cases and <b>guarantees</b> online <b>transactions.</b> In Romania, those services are only just beginning to act, as the cyber fraud phenomenon is present in our country in the same rates as worldwide. escrow, e-commerce, cyber - fraud, escrow accounts, legislation, online auctions...|$|R
40|$|Abstract. Transactional memory (TM) is an {{emerging}} concurrent programming abstraction. Numerous software-based transactional memory (STM) implementations {{have been developed}} in recent years. STM implementations must <b>guarantee</b> <b>transaction</b> atomicity and isolation. In order to ensure progress, an STM implementation must resolve transaction collisions by consulting a contention manager (CM). Recent work established that serializing contention management- a technique in which the execution of colliding transactions is serialized for eliminating repeatcollisions- can dramatically improve STM performance in high-contention workloads. In low-contention and highly-parallel workloads, however, excessive serialization of memory transactions may limit concurrency too much and hurt performance. It is therefore important to better understand how the impact of serialization on STM performance varies {{as a function of}} workload characteristics. We investigate how serializing CM influences the performance of STM systems. Specifically, we study serialization’s influence on STM throughput (number of committed transactions per time unit) and efficiency (ratio between the extent of “useful” work done by the STM and work “wasted ” by aborts) as the workload’s level of contentio...|$|R
40|$|Completion {{guarantees}} {{are well}} known in the entertainment industry as a form of guarantee issued to motion picture and television producers to satisfy the requirements of their financiers. This thesis reviews and analyzes some of the business and legal issues that arise in connection with completion guarantees, as the completion guarantor assumes an increasingly pivotal role in entertainment financing transactions. The author discusses the current nature of North American entertainment financing and provides a brief history of completion guarantees. An analysis of the major forms of documentation involved in completion <b>guarantee</b> <b>transactions</b> follows. The obligations undertaken by the completion guarantor and their discharge are discussed, as are claims and reinsurance matters. A considerable portion of this thesis examines the position of the completion guarantor operating in Quebec and, in particular, the security rights enjoyed by the guarantor in this province. This thesis concludes by exploring the direction in which the completion guarantee industry is evolving, some extraterritorial considerations and the interplay between business and law in this field of endeavour...|$|R
40|$|In a {{previous}} {{article published in}} JIBLR, {{the operation of the}} special equity rule can be seen where a spouse, usually a wife, does not understand the nature and effect of the guarantee she was induced to sign by the husband whereupon the transaction may be set aside. This article looks at the importance of independent advice which is an educative process to assist the wife guarantor to make informed decisions in relation to whether to enter a contract of guarantee. It should, however, be pointed out that independent advice, which usually means legal advice, is limited in the kind of issues legal practitioners take into consideration, and it is sometimes doubtful if this enables guarantors to obtain the type of information and advice they need. This is certainly the case these days, as commercial transactions become more complicated and sophisticated, resulting in guarantors having to require even accounting or financial advice to reflect more comprehensively the effect of a <b>guarantee</b> <b>transaction</b> and the risks involved in entering into such a transaction...|$|R
40|$|Transactional memory (TM) is an {{emerging}} concurrent programming abstraction. Numerous software-based transactional memory (STM) implementations {{have been developed}} in recent years. STM implementations must <b>guarantee</b> <b>transaction</b> atomicity and isolation. In order to ensure progress, an STM implementation must resolve transaction collisions by consulting a contention manager (CM). Recent work established that serializing contention management – a technique in which the execution of colliding transactions is serialized for eliminating repeat-collisions – can dramatically improve STM performance in high-contention workloads. In low-contention and highly-parallel workloads, however, excessive serialization of memory transactions may limit concurrency too much and hurt performance. It is therefore important to better understand how the impact of serialization on STM performance varies {{as a function of}} workload characteristics. We investigate how serializing CM influences the performance of STM systems. Specifically, we study serialization’s influence on STM throughput (number of committed transactions per time unit) and efficiency (ratio between the extent of “useful ” work done by the STM and work “wasted ” by aborts) as the workload’s level of contention changes. Towards this goal, we implemen...|$|R
50|$|Tibero <b>guarantees</b> {{reliable}} database <b>transactions,</b> {{which are}} logical sets of SQL statements, by supporting ACID (Atomicity, Consistency, Isolation, and Durability). Providing enhanced synchronization between databases, Tibero 5 enables reliable database service operation in a multi node environment.|$|R
50|$|Tibero RDBMS {{enables a}} stable and {{efficient}} management of DBMSs and <b>guarantees</b> high-performance <b>transaction</b> processing, using the Tibero Active Cluster (hereafter TAC) technology, which is a failover operation based on a shared disk clustering system environment. TAC allows instances on different nodes to share the same data via the shared disk. It supports stable system operation (24x365) with the fail-over function, and optimal <b>transaction</b> processing by <b>guaranteeing</b> the integrity of data in each instance’s memory.|$|R
30|$|Business {{transactions}} - The scheme {{can be used}} to <b>guarantee</b> business <b>transactions</b> environment {{which is}} composed of two users who agree on a contract. The contract contains a Terms of Use agreement, ToU, and a set of arbitrators. Each user may issue a digital bond to the other user. A bond is a guarantee to pay the other party a certain amount of money. The bonds remain secret and therefore cannot be cashed as long as the agreement is not violated.|$|R
50|$|If the {{database}} <b>guaranteed</b> serializable <b>transactions,</b> {{the simplest way}} of coding T1 is to deduct $200 from V1, and then verify that V1 + V2 ≥ 0 still holds, aborting if not. T2 similarly deducts $200 from V2 and then verifies V1 + V2 ≥ 0. Since the transactions must serialize, either T1 happens first, leaving V1 = -$100, V2 = $100, and preventing T2 from succeeding (since V1 + (V2 - $200) is now -$200), or T2 happens first and similarly prevents T1 from committing.|$|R
40|$|Abstract. One of {{the most}} {{difficult}} tasks in the design of information systems is how to control the behaviour of the back-end storage engine, usually a relational database. As the load on the database increases, the longer issued transactions will take to execute, mainly because the presence of a high number of locks required to provide isolation and concurrency. In this paper we present MIDAS, a middleware designed to manage the behaviour of database servers, focusing primarily on <b>guaranteeing</b> <b>transaction</b> execution within an specified amount of time (deadline). MIDAS was developed for Java applications that connects to storage engines through JDBC. It provides a transparent QoS layer and can be adopted with very few code modifications. All transactions issued by the application are captured, forcing them to pass through an Admission Control (AC) mechanism. To accomplish such QoS constraints, we propose a novel AC strategy, called 2 -Phase Admission Control (2 PAC), that minimizes the amount of transactions that exceed the established maximum time by accepting only those transactions that are not expected to miss their deadlines. We also implemented an enhancement over 2 PAC, called diffserv – which gives priority to small transactions and can adopted when their occurrences are not often...|$|R
50|$|Ludhiana Stock Exchange {{became the}} second bourse in India to {{introduce}} modified carryforward system after BSE on April 6, 1998. On the same date, LSE also introduced a settlement guarantee fund (SGF). The SGF <b>guarantees</b> settlement of <b>transactions</b> and the carryforward facility provides liquidity to the market.|$|R
50|$|DSE initialised its Rs. 1.25 billion Trade Guarantee Fund on 27 July 1998. TGF <b>guarantees</b> all the <b>transactions</b> of the DSE interse {{through the}} stock exchange. If a member fails to honour the {{settlement}} commitment, TGF undertakes to fulfil the commitment and complete all the settlement without disruption.|$|R
40|$|This paper {{describes}} a newscheme for <b>guaranteeing</b> that <b>transactions</b> in a client/server system observe consistent state {{while they are}} running. The scheme is presented in conjunction with an optimistic concurrency control algorithm, but {{could also be used}} to prevent read-only transactions from conflicting with read/write transactions in a multi-version system. The scheme is lazy about the consistency it provides for running transactions and also in the way it generates the consistency information. The paper presents results of simulation experiments showing that the cost of the scheme is negligible. The schem...|$|R
30|$|One kind of Distributed Ledger Technologies (DLTs), blockchain, {{has been}} flourishing {{for the past}} decade. It has {{advantages}} in securing immutability and <b>guaranteeing</b> transparency of <b>transactions.</b> Its decentralized nature and integrated computing feature bring the potential of adding value in the energy sector, especially regarding energy dispatching, billing, as well as energy financing.|$|R
40|$|Information {{asymmetry}} is {{a problem}} that affects to the trust in the electronic markets, {{especially in the case of}} the electronic banking. A possible solution is to generate trust by means of structures and norms generating “institution-based” trust. In this context, this paper analyzes some of these tools as security in the <b>transaction,</b> <b>guarantees</b> of money refunds, customers’ opinions and reputation of the establishment. Their influence in an isolated way and also jointly is measured by an on line experimental design. The form that theses mechanisms of trust are presented (isolated or combined in a different way) causes different effects on the level of trustworthiness toward and dependability of the bank. A situation with seals of security in the <b>transaction,</b> <b>guarantees</b> of money refunds and a recognized brand provides strong trust. This suggests interesting implications for the web management and design...|$|R
40|$|Abstract—A {{potentially}} {{serious problem}} with current payment systems {{is that their}} underlying hard problems from number theory may be solved by either a quantum computer or unanticipated future advances in algorithms and hardware. A new quantum payment system is proposed in this paper. The suggested system makes use of fundamental principles of quantum mechanics to ensure the unconditional security without prior arrangements between customers and vendors. More specifically, the new system uses Greenberger-Home-Zeilinger (GHZ) states and Quantum Key Distribution to authenticate the vendors and <b>guarantee</b> the <b>transaction</b> integrity. Keywords—Bell state, GHZ state, Quantum key distribution, Quantum payment system. I...|$|R
40|$|Abstract- This paper {{describes}} {{a method of}} implementing two factor authentication using SMS OTP- One Time Password to Secure an E-Transaction (SET). The proposed method <b>guarantees</b> authenticated <b>transactions</b> in services, such as online banking, e-shopping or ATM machines. The proposed system involves generating and delivering a One Time Password (OTP) to a mobile phone {{in the form of}} SMS – Simple Messaging Service. The generated One Time Password is valid for only a short user defined period of time and it is generated and verified using Secured Cryptographic Algorithm. The proposed method has been implemented and tested successfully. Index Terms – SET,OTP,SMS. I...|$|R
