348|312|Public
5000|$|Shutting {{down the}} engine during traffic stops or while {{coasting}} or during other <b>idle</b> <b>periods.</b>|$|E
5000|$|Data {{movement}} {{is based on}} access patterns, if data {{had been on the}} HDD and suddenly became frequently accessed, it would usually get moved to the SSD by the program controlling the Fusion Drive. During <b>idle</b> <b>periods,</b> data is adaptively migrated to the most suitable device to provide sustained data processing performance for users.|$|E
5000|$|Special {{consideration}} must {{be given}} to <b>idle</b> <b>periods</b> in the Day Out of Days. A cast member can either be held (paid) or dropped (not paid) during an idle period. The Screen Actors Guild has very specific rules addressing when an actor can—or especially can't—be dropped. (The rules don't apply for actors with run-of-show agreements.) ...|$|E
30|$|However, in fact, {{because of}} the long-tailed {{characteristic}} of generalized Pareto distribution, the <b>idle</b> <b>period</b> ends with greater probability at the former time slot of <b>idle</b> <b>period</b> and with less probability at the subsequent time slots. Naturally, to satisfy the constraint of collision tolerable level, the secondary user should keep away from the beginning duration of <b>idle</b> <b>period,</b> which may result in collision with more probability.|$|R
3000|$|... is the {{probability}} density {{function of the}} <b>idle</b> <b>period.</b> The {{first part of the}} right side of (8) represents the transmission duration expectation that the <b>idle</b> <b>period</b> terminates in the time interval [...]...|$|R
3000|$|Research [19] {{shows that}} an {{exponential}} distribution {{is a good}} fit for the <b>idle</b> <b>period</b> only in heavy traffic case while a generalized Pareto distribution is {{a good fit for}} the <b>idle</b> <b>period</b> in both heavy-traffic and small-traffic cases. Thus, in this section, we extend our work to more general case that the <b>idle</b> <b>period</b> is Pareto distribution or generalized Pareto distribution while the busy period still is general distribution and its average value is [...]...|$|R
50|$|In {{order to}} not disturb regular memory {{requests}} from the CPU and thus prevent decreasing performance, scrubbing is usually only done during <b>idle</b> <b>periods.</b> As the scrubbing consists of normal {{read and write}} operations, it may increase power consumption for the memory compared to non-scrubbing operation. Therefore, scrubbing is not performed continuously but periodically. For many servers, the scrub period can be configured in the BIOS setup program.|$|E
50|$|The {{programming}} {{paradigm is}} mostly used for safety critical programs, since the behaviour {{of the program}} is highly deterministic. No external events are allowed to affect the control-flow of the program, the same pattern (i.e., described by the dispatch table) will be repeated time after time. However, idle time of the processor is also highly deterministic, allowing for the scheduling of other non-critical tasks through slack stealing techniques during these <b>idle</b> <b>periods.</b>|$|E
50|$|Instead {{of having}} a power supply unit {{generate}} some fixed voltage, the CPU uses a small set of digital signals, the VID lines, to instruct an on-board power converter of the desired voltage level. The switch-mode buck converter then adjusts its output accordingly. The flexibility so obtained {{makes it possible to}} use the same power supply unit for CPUs with somewhat different nominal supply voltages and to reduce power consumption during <b>idle</b> <b>periods</b> by lowering the supply voltage.|$|E
3000|$|... 2) Average <b>idle</b> <b>period</b> is {{the average}} period of the CPU while it is free. Under energy constraints, it {{includes}} free time and relaxed time. The longer the average <b>idle</b> <b>period,</b> the higher the average energy level is, and thus, the lower energy constraints the system has.|$|R
5000|$|Synchronization pattern {{used when}} {{starting}} the SBA bus after an <b>idle</b> <b>period.</b>|$|R
3000|$|... {{is certain}} and {{constant}} if the <b>idle</b> <b>period</b> distribution is certain. Thus, maximizing spectrum holes utilization [...]...|$|R
5000|$|Idle power-down: This {{technique}} exploits gaps in workload {{demand to}} shut off components that are idle. When shut down, components cannot do any useful work. The problems unique to this approach are: (1) it costs {{time and energy to}} transition between active and idle power-down states, (2) no work can be done in the off state, so power-up must be done to handle a request, and (3) predicting <b>idle</b> <b>periods</b> and adapting appropriately by choosing the right power state at any moment is difficult.|$|E
50|$|The {{game had}} {{originated}} by the Warring States period of China, probably invented by archers or soldiers as a pastime during <b>idle</b> <b>periods.</b> The game {{began as a}} game of skill or a drinking game at parties, {{but by the time}} it was described in a chapter of the Chinese Classic Book of Rites, it had acquired Confucian moral overtones. Initially popular among elites, it spread to other classes and remained popular in China until the end of the Qing Dynasty. During this time it also spread to Korea and Japan. Today, its popularity in Korea is highest.|$|E
5000|$|Compressors may be {{connected}} to a bank of large, high-pressure cylinders to store compressed gas, for use at peak times. This allows a cheaper low-powered compressor, which is relatively slow at pumping gas, to fill the bank automatically during <b>idle</b> <b>periods,</b> storing a large volume of pressurized air so that a batch of cylinders can be filled more quickly at peak demand without being delayed by the slow-running compressor. In surface-supplied diving, high-pressure cylinder banks {{may be used as}} an emergency backup in case of primary compressor failure, or they may be used as the primary source of breathing gas, a system also known as [...] "Scuba replacement".|$|E
30|$|In this subsection, we {{solve the}} {{optimization}} problem (13) {{in the case}} that the <b>idle</b> <b>period</b> is exponential distribution.|$|R
30|$|The <b>idle</b> <b>period</b> {{occurs when}} the time margin is greater than ten times the jitter in the TimeCode {{distribution}} to each instrument.|$|R
40|$|Busy period {{problems}} in infinite server queues are studied systematically, {{starting from the}} batch service time. General relations are given for the lengths of the busy cycle, busy <b>period</b> and <b>idle</b> <b>period,</b> and {{for the number of}} customers served in a busy period. These relations show that the <b>idle</b> <b>period</b> is the most difficult while the busy cycle is the simplest of the four random variables. Renewal arguments are used to derive explicit results for both general and special cases...|$|R
5000|$|Since these engines {{typically}} {{need extra}} weight for traction purposes anyway the battery pack's weight is a negligible penalty. The diesel generator and batteries are normally built on an existing [...] "retired" [...] "yard" [...] locomotive's frame. The existing motors and running gear are all rebuilt and reused. Fuel savings of 40-60% {{and up to}} 80% pollution reductions are claimed over a [...] "typical" [...] older switching/yard engine. The advantages hybrid cars have for frequent starts and stops and <b>idle</b> <b>periods</b> apply to typical switching yard use. [...] "Green Goat" [...] locomotives have been purchased by Canadian Pacific Railway, BNSF Railway, Kansas City Southern Railway, and Union Pacific Railroad among others.|$|E
50|$|Although it {{was once}} {{believed}} that slaves built these monuments—a bias based on the biblical Exodus story—study of overseers' tombs has shown that they were built by a corvée of peasants drawn from across Egypt. Apparently, they worked during <b>idle</b> <b>periods,</b> while the annual Nile flood covered their fields, along with a very large crew of specialists including stone cutters, painters, mathematicians, and priests. Some records indicate that each household was responsible for providing a worker for civic projects and the wealthy could hire others to take their places. Civic duties were not necessarily building projects; there were duties for the temples, libraries, and festivals as well, and {{both men and women}} filled some of the positions.|$|E
50|$|By {{the time}} the x86 CPU {{shortage}} was over, AMD had developed and released revised members of the K6 family. These K6-2+ and K6-III+ variants were specifically designed as low-power mobile (laptop) CPUs, and significantly marked the transition of the K6 architecture (and foretold of AMD's future K7 project) to the new 180 nm production process. Functionally, both parts were die shrunk K6-IIIs (the 2+ disabled 128 KiB of cache, the III+ had the full 256 KiB) and introduced AMD's new PowerNow! power saving technology. PowerNow! offered processor power savings for mobile applications by measuring computational load, and reduced processor operational voltage and frequency during <b>idle</b> <b>periods</b> {{in order to reduce}} overall system power consumption.|$|E
3000|$|... and {{the second}} part of the right side of (8) {{represents}} the transmission duration expectation that the <b>idle</b> <b>period</b> does not terminate in the time interval [...]...|$|R
30|$|On {{the basis}} of {{fundamental}} access scheme, we will study optimal time allocation strategy of the <b>idle</b> <b>period</b> and compare the performance of optimal strategy and other strategies.|$|R
3000|$|We {{assume that}} the arrival process of one primary user is Poisson process while the service time {{distribution}} can be arbitrary. This assumption holds in many situations such as voice traffic, data session, and data network. When there are multiple primary users in a channel, the system can be modeled as an M/G/ 1 queue with multiple inputs {{and it can be}} proved that the <b>idle</b> <b>period</b> is exponential distribution while the busy period is general distribution [8]. Thus, we can {{assume that the}} <b>idle</b> <b>period</b> is exponential distribution and its expectation is [...]...|$|R
5000|$|DAMA and PAMA {{are related}} only to channel/resource {{allocation}} {{and should not}} be confused with the Multiple access/multiplexing methods (such as FDMA frequencies, TDMA slots, CDMA codes, or others) intended to divide a single communication channel into multiple virtual channels. These systems typically use resource allocation protocols that allow a more rapid (although often less deterministic, consider CDMA collisions) near-real-time allocation of bandwidth based on demand and data priority. However, in sparsely allocated multiple-access channels, DAMA can be used to allocate the individual virtual channel resources provided by the multiple-access channel. This is most common in environments that are sufficiently sparsely utilized that there is no need to add complexity just to recover [...] "conversation gap" [...] <b>idle</b> <b>periods.</b>|$|E
40|$|<b>Idle</b> <b>periods</b> on {{different}} processes of Message Passing applications are unavoidable. While {{the origin of}} <b>idle</b> <b>periods</b> on a single process is well understood as the effect of system and architectural random delays, yet {{it is unclear how}} these <b>idle</b> <b>periods</b> propagate from one process to another. It is important to understand idle period propagation in Message Passing applications as it allows application developers to design communication patterns avoiding idle period propagation and the consequent performance degradation in their applications. To understand idle period propagation, we introduce a methodology to trace <b>idle</b> <b>periods</b> when a process is waiting for data from a remote delayed process in MPI applications. We apply this technique in an MPI application that solves the heat equation to study idle period propagation on three different systems. We confirm that <b>idle</b> <b>periods</b> move between processes in the form of waves and that there are different stages in idle period propagation. Our methodology enables us to identify a self-synchronization phenomenon that occurs on two systems where some processes run slower than the other processes. Comment: 18 th International Conference on High Performance Computing and Communications, IEEE, 201...|$|E
30|$|Pareto {{distribution}} is more suited for modelling event arrival when <b>idle</b> <b>periods</b> are long [10].|$|E
5000|$|Ethernet devices {{must allow}} a minimum <b>idle</b> <b>period</b> between {{transmission}} of Ethernet packets {{known as the}} interpacket gap (IPG), interframe spacing, or interframe gap (IFG). A brief recovery time between packets allows devices to prepare for reception of the next packet. While some physical layer variants literally transmit nothing during the <b>idle</b> <b>period,</b> most modern ones transmit a constant signal and send idle symbols. The standard minimum interpacket gap for transmission is 96 bit times (the {{time it takes to}} transmit 96 bits of raw data on the medium), which is ...|$|R
30|$|In this section, {{we study}} {{and compare the}} {{performances}} of the optimal OSA approach and the fixed STR approach in {{the case that the}} <b>idle</b> <b>period</b> is uniform distribution.|$|R
30|$|Given {{that the}} {{distribution}} of the <b>idle</b> <b>period</b> is fixed, maximize the spectrum holes utilization, subject to the constraint that the collision probability is bounded below collision tolerable level.|$|R
3000|$|... are given. TBUSY and TIDLE {{denote the}} random {{variables}} representing busy and <b>idle</b> <b>periods</b> {{of a primary}} signal, respectively, while assuming that both are independent of each other. The appearance pattern of a primary signal in terms of mean busy and <b>idle</b> <b>periods,</b> E TBUSY and E TIDLE, {{is assumed to be}} known to the secondary network (e.g., by historic measurements). As a particular example, in this article, we will focus on the exponentially distributed busy and <b>idle</b> <b>periods</b> (as in [3, 7, 10, 14]), which will allow us to obtain several main formulas such as the TDP in this section and the interference ratio and the achievable throughput for secondary users in the next section. Then, the pdfs of TBUSY and TIDLE can be expressed as [...]...|$|E
40|$|Recent {{studies have}} {{identified}} disk storage systems {{as one of}} the major consumers of power in data centers. Many disk power management (DPM) schemes were suggested where the power consumed by disks is reduced by spinning them down during long <b>idle</b> <b>periods.</b> Spinning the disks down and up results in additional energy and response time costs. For that reason, DPM schemes are effective only if the disks experience relatively long <b>idle</b> <b>periods</b> and the scheme does not introduce a severe response time penalty. In this paper we introduce a dynamic block exchange algorithm which switches data between disks based on the observed workload such that frequently accessed blocks end up residing on a few "hot" disks thus allowing the majority of disks to experience longer <b>idle</b> <b>periods.</b> We validate the effectiveness of the algorithm with trace-driven simulations showing power savings of up to 60 percent with very small response time penalties...|$|E
40|$|Leakage {{power is}} a major concern in current microarchitectures as it is {{increasing}} exponentially with decreasing transistor feature sizes. In this paper, we present a technique called functional unit shutdown to reduce the static leakage power consumption of a microprocessor by power gating functional units when not used. We use profile information to identify functional unit <b>idle</b> <b>periods</b> that is used by the compiler to issue corresponding OFF/ON instructions. The decision to power gate during <b>idle</b> <b>periods</b> is made based on the comparison between the energy consumed by leaving the units ON and the overhead and leakage energy involved in power cycling them. This comparison identifies short <b>idle</b> <b>periods</b> where less power is consumed if a functional unit is left ON rather than cycling the power during that period. The results show that this technique saves up to 18 % of the total energy and between 4 and 11 % on average with a performance degradation of 1 %. 1...|$|E
30|$|Under {{non-energy}} constraints, {{the comparisons}} of average busy <b>period,</b> average <b>idle</b> <b>period,</b> average overhead, and average preemption are in Figs.  1, 2, 3, and 4, respectively. The ALAP algorithm postpones the execution of tasks as long as possible, and it generates massive free time, so both the average busy <b>period</b> and <b>idle</b> <b>period</b> are minimum. However, {{with the increase of}} the number of tasks, the average overhead of the ALAP algorithm increases obviously. The ASAP algorithm executes tasks as soon as possible, and it is equal to the scheduling of fixed-priority preemption. Our algorithm is based on fixed-priority preemption, and increases the threshold of preemption, so it has similar average busy <b>period,</b> average <b>idle</b> <b>period,</b> and average overhead to the ASAP algorithm. In addition, with the introduction of preemption threshold, our algorithm avoids the tasks with high priorities preempted, while keeping these tasks finished in time. So, our algorithm has the least number of preemptions.|$|R
3000|$|In optimal OSA approach, we {{consider}} that the secondary user at most accesses the channel one time in an <b>idle</b> <b>period.</b> The secondary user starts to transmit at the [...]...|$|R
30|$|In this section, {{we study}} {{and compare the}} {{performances}} of optimal OSA approach and fixed STR approach in {{the case that the}} <b>idle</b> <b>period</b> is Pareto distribution or generalized Pareto distribution.|$|R
