184|240|Public
25|$|Parity: <b>Immediate</b> <b>value</b> of the {{convertible}} if converted, typically obtained as current stock price {{multiplied by the}} conversion ratio expressed for a base of 100. May also be known as Exchange Property.|$|E
25|$|The Air Ministry still {{saw little}} <b>immediate</b> <b>value</b> {{in the effort}} (they {{regarded}} it as long-range research), and having no production facilities of its own, Power Jets entered into an agreement with steam turbine specialists British Thomson-Houston (BTH) to build an experimental engine facility at a BTH factory in Rugby, Warwickshire. Work progressed quickly, {{and by the end}} of the year 1936 the prototype detail design was finalised and parts for it were well on their way to being completed, all within the original £2,000 budget. However, by 1936, Germany had also started working on jet engines (Herbert A. Wagner at Junkers and Hans von Ohain at Heinkel) and, although they too had difficulty overcoming conservatism, the German Ministry of Aviation (Reichsluftfahrtministerium) was more supportive than their British counterpart.|$|E
2500|$|Instructions (statements) in {{assembly}} language are generally very simple, unlike those in high-level languages. Generally, a mnemonic is a symbolic {{name for a}} single executable machine language instruction (an opcode), and {{there is at least}} one opcode mnemonic defined for each machine language instruction. Each instruction typically consists of an operation or opcode plus zero or more operands. Most instructions refer to a single value, or a pair of values. [...] Operands can be <b>immediate</b> (<b>value</b> coded in the instruction itself), registers specified in the instruction or implied, or the addresses of data located elsewhere in storage. This is determined by the underlying processor architecture: the assembler merely reflects how this architecture works. Extended mnemonics are often used to specify a combination of an opcode with a specific operand, e.g., the System/360 assemblers use [...] as an extended mnemonic for [...] with a mask of 15 and [...] ("NO OPeration" [...] – do nothing for one step) for [...] with a mask of 0.|$|E
50|$|Most {{instructions}} {{can take}} either <b>immediate</b> <b>values</b> or register contents; thus a single instruction mnemonic may correspond {{to one of}} two opcodes.|$|R
40|$|Abstract. We {{continue}} {{the work of}} Kaplansky on <b>immediate</b> <b>valued</b> field extensions and determine special properties of elements in such extensions. In particular, {{we are interested in}} the question when an <b>immediate</b> <b>valued</b> function field of transcendence degree 1 is henselian rational (i. e., generated, modulo henselization, by one element). If so, then wild ramification can be eliminated in this valued function field. The results presented in this paper are crucial for the first author’s proof of henselian rationality over tame fields, which in turn is used in his work on local uniformization. 1...|$|R
50|$|Using markers has a {{negligible}} overhead {{thanks in part}} to <b>Immediate</b> <b>Values,</b> another support mechanism that embeds switches in the code that can be dynamically turned on and off, without using a memory reference and thus saving cache lines.|$|R
6000|$|He {{had to read}} {{prayers to}} the {{soldiers}} from the drum-head by way of desk; there were no seats, and he was desired to omit the sermon: but afterwards a room was provided, and then {{the families of the}} officers and residents began to attend, though at first they were much scandalized by his preaching extempore. In fact there was a good deal in his whole tone that startled old orthodoxy; and in the opposition with which he met at times, there was some lawful and just distrust of the onesidedness of his tenets, together with the ordinary hatred and dislike of darkness to light. So scrupulous was he in the Jewish force given by his party to the Fourth Commandment, that, having one Sunday conceived the plan of translating the Prayer-book into Hindostanee, he worked at it till he had {{reached the end of the}} Te Deum; and there, doubting whether it were a proper employment for the day, desisted until the Monday, to give himself up to prayer, singing hymns, Scripture-reading, and meditation. The <b>immediate</b> <b>value</b> of this work was for the poor native wives of the English soldiers, whom he found professing Christianity, but utterly ignorant; and to them every Sunday, after the official English service, he repeated the Liturgy in the vulgar tongue. In this holy work he was the pioneer, since Swartz's service was in Tamul. While working at his translations with his moonshee, or interpreter, a Mussulman, he had much opportunity for conversation and for study of the Mahometan arguments, so as to be very useful to himself; though he could not succeed in convincing the impracticable moonshee, who had all that self-satisfaction belonging to Mahometanism. [...] "I told him that he ought to pray that God would teach him what the truth really is. He said he had no occasion to pray on this subject, as the word of God is express." [...] With the Hindoos at Dinapore, he found, to his surprise, that there was apparently little disinclination to [...] "become Feringees," [...] as they called it, outwardly; but the difficulty lay in his insistance on Christian faith and obedience, instead of a mere external profession.|$|E
6000|$|... 122. Then, {{touching}} {{the accumulation of}} wealth {{for the maintenance of}} such men, observe, that you must never use the terms [...] "money" [...] and [...] "wealth" [...] as synonymous. Wealth consists of the good, and therefore useful, things in the possession of the nation; money is only the written or coined sign of the relative quantities of wealth in each person's possession. All money is a divisible title-deed, of immense importance as an expression of right to property, but absolutely valueless as property itself. Thus, supposing a nation isolated from all others, the money in its possession is, at its maximum value, worth all the property of the nation, and no more, because no more can be got for it. And the money of all nations is worth, at its maximum, the property of all nations, and no more, for no more can be got for it. Thus, every article of property produced increases, by its value, the value of {{all the money in the}} world, and every article of property destroyed, diminishes the value of all the money in the world. If ten men are cast away on a rock, with a thousand pounds in their pockets, and there is on the rock, neither food nor shelter, their money is worth simply nothing, for nothing is to be had for it. If they built ten huts, and recover a cask of biscuit from the wreck, then their thousand pounds, at its maximum value, is worth ten huts and a cask of biscuit. If they make their thousand pounds into two thousand by writing new notes, their two thousand pounds are still worth ten huts and a cask of biscuit. And the law of relative value is the same for all the world, and all the people in it, and all their property, as for ten men on a rock. Therefore, money is truly and finally lost in the degree in which its value is taken from it (ceasing in that degree to be money at all); and it is truly gained in the degree in which value is added to it. Thus, suppose the money coined by the nation be a fixed sum, and divided very minutely (say into francs and cents), and neither to be added to nor diminished. Then every grain of food and inch of lodging added to its possessions makes every cent in its pockets worth proportionally more, and every gain of food it consumes, and inch of roof it allows to fall to ruin, makes every cent in its pockets worth less; and this with mathematical precision. The <b>immediate</b> <b>value</b> of the money at particular times and places depends, indeed, on the humors of the possessors of property; but the nation is in the one case gradually getting richer, and will feel the pressure of poverty steadily everywhere relaxing, whatever the humors of individuals may be; and, in the other case, is gradually growing poorer, and the pressure of its poverty will every day tell more and more, in ways that it cannot explain, but will most bitterly feel.|$|E
50|$|Load value - {{place the}} <b>immediate</b> <b>value</b> or the {{contents}} of the variable named in the accumulator.|$|E
3000|$|Berg et al. {{identify}} the following design principles for a time-predictable processor: [...] "recoverability from information {{loss in the}} analysis, minimal variation of the instruction timing, noninterference between processor components, deterministic processor behavior, and comprehensive documentation" [...] [10]. The authors propose a processor architecture that meets these design principles. The processor is a classic five-stage RISC pipeline with minimal changes in the instruction set: it handles function calls with an explicit instruction for simpler reconstruction of the control flow graph and construction of 32 -bit <b>immediate</b> <b>values</b> with two instructions to avoid <b>immediate</b> <b>values</b> in the code segment. The memory system has to be organized in Harvard-style with dedicated busses to the FLASH memory for the code and the SRAM memory for the data. The replacement strategy of caches has to be least-recently used (LRU).|$|R
40|$|In this paper, {{we propose}} {{instruction}} encoding tech-niques for embedded system design, which encode immedi-ate fields of instructions {{to reduce the}} size of an instruction memory. Although our proposed techniques require an ad-ditional decoder for the encoded <b>immediate</b> <b>values,</b> exper-imental results demonstrate the effectiveness of our tech-niques to reduce the chip area. 1...|$|R
40|$|This work {{deals with}} the new, {{relativistic}} direction in quantum econophysics, {{within the bounds of}} which a change of the classical paradigms in mathematical modelling of socio-economic system is offered. Classical physics proceeds from the hypothesis that <b>immediate</b> <b>values</b> of all the physical quantities, characterizing system's state, exist and can be accurately measured in principle. Non-relativistic quantum mechanics does not reject the existence of the <b>immediate</b> <b>values</b> of the classical physical quantities, nevertheless not each of them can be simultaneously measured (the uncertainty principle). Relativistic quantum mechanics rejects the existence of the <b>immediate</b> <b>values</b> of any physical quantity in principle, and consequently the notion of the system state, including the notion of the wave function, which becomes rigorously nondefinable. The task of this work consists in econophysical analysis of the conceptual fundamentals and mathematical apparatus of the classical physics, relativity theory, non-relativistic and relativistic quantum mechanics, subject to the historical, psychological and philosophical aspects and modern state of the socio-economic modeling problem. We have shown that actually and, virtually, a long time ago, new paradigms of modeling were accepted in the quantum theory, within the bounds of which the notion of the physical quantity operator becomes the primary fundamental conception, description of the system dynamics becomes discrete and approximate in its essence, prediction of the future, even in the rough, is actually impossible when setting aside the aftereffect i. e. the memory. Comment: 23 pages, PDFLaTe...|$|R
50|$|Parity: <b>Immediate</b> <b>value</b> of the {{convertible}} if converted, typically obtained as current stock price {{multiplied by the}} conversion ratio expressed for a base of 100. May also be known as Exchange Property.|$|E
5000|$|Cumulative TSN ACK : Acknowledges all {{sequence}} numbers received in sequence {{so is the}} sequence number of the last received byte. The <b>immediate</b> <b>value</b> after this one has not been received yet.|$|E
50|$|Freely {{convertible}} currencies have <b>immediate</b> <b>value</b> on {{the foreign}} exchange market, and few restrictions on the manner and amount that can be traded for another currency. Free convertibility is a major feature of a hard currency.|$|E
50|$|Add value - add the {{variable}} or <b>immediate</b> integer <b>value</b> to the accumulator.|$|R
3000|$|... matrix interleaver. The {{program is}} written in the iVAG {{assembly}} language and produces a sequence of 360 addresses (45 vectors). A number of operations have been highlighted in Algorithm 1 : memory operations, control operations and operations that produce addresses at the outputs of the iVAG. All operands are {{expressed in terms of}} scalar or vector register file indices or represent <b>immediate</b> <b>values.</b> The symbol [...]...|$|R
50|$|Arithmetic {{instructions}} available include addition, bitwise AND, and bitwise NOT, {{with the}} first two of these able to use both registers and sign-extended <b>immediate</b> <b>values</b> as operands. These operations are sufficient to implement a number of basic arithmetic operations, including subtraction (by negating values) and bitwise left shift (by using the addition instruction to multiply values by two). The LC-3 can also implement any bitwise logical function, because NOT and AND together are logically complete.|$|R
5000|$|This type of {{reference}} {{can be applied}} to all r-values including non-l-values as well as l-values. Some processors provide one or more instructions which take an <b>immediate</b> <b>value,</b> sometimes referred to as [...] "immediate" [...] for short. An <b>immediate</b> <b>value</b> is stored as part of the instruction which employs it, usually to load into, add to, or subtract from, a register. The other parts of the instruction are the opcode, and destination. The latter may be implicit. (A non-immediate value may reside in a register, or be stored elsewhere in memory, requiring the instruction to contain a direct or indirect address index register address to the value.) ...|$|E
50|$|Instructions {{which allow}} an <b>immediate</b> <b>value</b> {{are limited to}} {{registers}} R16-R31 (8-bit operations) or to register pairs R25:R24-R31:R30 (16-bit operations ADIW and SBIW). Some variants of the MUL operation are limited to eight registers, R16 through R23.|$|E
50|$|As an example, here′s {{a typical}} x86 {{assembly}} language function prologue as {{produced by the}} GCC push ebp mov ebp, esp sub esp, NThe N <b>immediate</b> <b>value</b> {{is the number of}} bytes reserved on the stack for local use.|$|E
40|$|We prove in {{arbitrary}} {{characteristic that}} an <b>immediate</b> <b>valued</b> algebraic function field F of transcendence degree 1 over a tame field K {{is contained in}} the henselization of K(x) for a suitably chosen x∈ F. This eliminates ramification in such valued function fields. We give generalizations of this result, relaxing the assumption on K. Our theorems have important applications to local uniformization and to the model theory of valued fields in positive and mixed characteristic. Comment: new improved versio...|$|R
40|$|So {{far there}} exist {{just a few}} results about the {{uniqueness}} of maximal <b>immediate</b> <b>valued</b> differential field extensions and {{about the relationship between}} differential-algebraic maximality and differential-henselianity. We remove here the assumption of monotonicity in these results but replace it with the assumption that the value group is the union of its convex subgroups of finite (archimedean) rank. We also show the existence and uniqueness of differential-henselizations of asymptotic fields with such a value group. Comment: 9 page...|$|R
5000|$|The {{constant}} {{might be}} signed or unsigned. For example, [...] {{to move the}} <b>immediate</b> hex <b>value</b> of [...] "FEEDABBA" [...] into register D0.|$|R
50|$|Mass-produced images {{did have}} consequences. Besides informing the public, the glut of images in {{distribution}} over-saturated the market, allowing viewers {{to develop the}} ability to disregard the <b>immediate</b> <b>value</b> and historical importance of certain photographs. Despite this, photojournalists continue to cover conflicts around the world.|$|E
5000|$|Share of mind - Executives are {{incredibly}} taxed with an increasing set of responsibilities; mid-level management {{has been reduced}} {{and the number of}} stakeholders (community, environment, government, etc.) has increased, all putting incredible pressure on leaders. Development that is not of <b>immediate</b> <b>value</b> risks elimination.|$|E
50|$|DLX {{instructions}} can {{be broken}} down into three types, R-type, I-type and J-type. R-type instructions are pure register instructions, with three register references contained in the 32-bit word. I-type instructions specify two registers, and use 16 bits to hold an <b>immediate</b> <b>value.</b> Finally J-type instructions are jumps, containing a 26-bit address.|$|E
5000|$|Tax Change Risk: Unanticipated {{changes in}} {{taxation}} may adversely impact {{the value of}} a bond to investors and consequently its <b>immediate</b> market <b>value.</b>|$|R
2500|$|In some {{assembly}} languages {{the same}} mnemonic such as MOV {{may be used}} for a family of related instructions for loading, copying and moving data, whether these are <b>immediate</b> <b>values,</b> values in registers, or memory locations pointed to by values in registers. [...] Other assemblers may use separate opcode mnemonics such as L for [...] "move memory to register", ST for [...] "move register to memory", LR for [...] "move register to register", MVI for [...] "move immediate operand to memory", etc.|$|R
50|$|In the x86 {{assembly}} language, the TEST instruction {{performs a}} bitwise AND on two operands. The flags SF, ZF, PF are modified while {{the result of}} the AND is discarded. The OF and CF flags are set to 0, while AF flag is undefined. There are 9 different opcodes for the TEST instruction depending on the type and size of the operands. It can compare 8-bit, 16-bit, 32-bit or 64-bit values. It can also compare registers, <b>immediate</b> <b>values</b> and register indirect values.|$|R
50|$|Note: The above routine {{presumes that}} the CDP1802 {{microprocessor}} {{is in an}} initial reset state (or {{that it has been}} set as such prior to executing this code). Therefore, the program counter (PC) and the X indirect register 'pointer' are both set to 16-bit register R0. That is why you can output an <b>immediate</b> <b>value,</b> as in the example 'OUT 4,00', because PC and X are both pointing to R0. The PC is incremented after the opcode instruction byte is retrieved from memory, so it points to the next address when the OUT 4 is executed. Therefore, it outputs the value in memory pointed to by RX = R0, which is the next immediate byte. The OUT instruction also increments the X register, which is R0, which is also the PC, so it outputs the <b>immediate</b> <b>value</b> after the OUT and continues program execution at the next instruction address after the <b>immediate</b> <b>value.</b> This is why you see the routine set X (SEX) to register R6 and R0 as needed. Also note that, although the OUT opcode increments the RX register, to easily output a section of memory ('buffer'), INP does not. It stores the value at the address pointed to by RX and into the D 8-bit data byte accumulator, but RX is not modified.|$|E
50|$|Typical {{instructions}} {{contain a}} function code, the target (or source) register, an index register, a base register and a displacement field. When the function code with its qualifier indicates immediate data, the displacement, base, i, and h fields combine {{to form a}} single 18-bit <b>immediate</b> <b>value.</b> This allows loading, adding, multiplying, etc. by small constants to eliminate a memory reference and the associated storage.|$|E
5000|$|Kirkus Reviews {{wrote that}} [...] "the {{literature}} of flight {{has no more}} gifted contributor than Anne Morrow Lindbergh", and that [...] "her prose style has a rhythm tuned {{to the rhythm of}} flight". The critic commended the use of symbology, but wrote that [...] "the <b>immediate</b> <b>value</b> and appeal of the book lies not there, but rather in the spiritual message it carries for each reader".|$|E
5000|$|In some {{assembly}} languages {{the same}} mnemonic such as MOV {{may be used}} for a family of related instructions for loading, copying and moving data, whether these are <b>immediate</b> <b>values,</b> values in registers, or memory locations pointed to by values in registers. Other assemblers may use separate opcode mnemonics such as L for [...] "move memory to register", ST for [...] "move register to memory", LR for [...] "move register to register", MVI for [...] "move immediate operand to memory", etc.|$|R
30|$|Rawat et al. (2017) {{proposed}} Vuzzer, {{an application}} aware grey box fuzzer that integrates with static and dynamic analysis. Mutation of seed inputs involves two key question: where to mutate and what value {{to use for}} the mutation. Specifically, Vuzzer extracts <b>immediate</b> <b>values,</b> magic values and other characteristic strings that affect the control flow via static analysis before the main fuzzing loop. During the program execution, Vuzzer utilize the dynamic taint analysis technique to collect information that affect the control flow branches, including specific value and the corresponding offset. By mutation with collected value and mutation at recognized locations, Vuzzer could generate testcases that {{are more likely to}} meet the branch judgment condition and pass magic value validations. However, Vuzzer still could not pass other types of validation in programs, like hash based checksum. Besides, Vuzzer’s instrument, taint analysis, and main fuzzing loop is implemented based on Pin (Luk et al. 2005), which result in a relatively slow testing speed, compared to AFL.|$|R
5000|$|Each {{instruction}} specifies some {{number of}} operands (registers, memory locations, or <b>immediate</b> <b>values)</b> explicitly. Some instructions give {{one or both}} operands implicitly, such as by being stored {{on top of the}} stack or in an implicit register. If some of the operands are given implicitly, fewer operands need be specified in the instruction. When a [...] "destination operand" [...] explicitly specifies the destination, an additional operand must be supplied. Consequently, the number of operands encoded in an instruction may differ from the mathematically necessary number of arguments for a logical or arithmetic operation (the arity). Operands are either encoded in the [...] "opcode" [...] representation of the instruction, or else are given as values or addresses following the instruction.|$|R
