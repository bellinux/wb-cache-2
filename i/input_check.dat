6|204|Public
50|$|In {{the same}} year, the Egyptian Government, began issuing smart {{taxation}} cards to taxpayers for security reasons. ACS's ACR100 SIMFlash Smart Card Readers {{were used to}} <b>input,</b> <b>check</b> and back-up transaction information of the taxpayers.|$|E
40|$|The {{contactless}} check procedure {{has been}} substantiated, and the theoretical description of dependences in {{the characteristics of}} heating wires upon the capacitive meter indices has been substantiated. The factors distrurbing this relation have been found. It has been proposed to optimize the geometric meter parameters by a mathematical modelling method. The device for contactless check of the heating wire characteristics on the extrusion plant and for <b>input</b> <b>check</b> of such wires at EHP manufacture has been developed. The contactless check device of heating wire parameters has been introduced in the Production Intra-Economic Association "Saratovoblagropromenergo". The rejection of conductor products was reduced by 15 - 20 %, the labour provuctivity was increased by 10 - 12 %. Application field: research and design institutes, enterprises on manufacture of concrete heating floors, panels, mats, heating and other wires of electrotechnical purposeAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|E
40|$|Report on {{the study}} of IDN with respect to south Indian Languages IDNA (Internalizing Domain Names in Applications) allows the non-ASCII {{characters}} to be represented using ASCII characters. This is done by converting the internationalized domain names to punycode (which is a unique and reversible transformation of Unicode string to ASCII). During the conversion of internationalized domain names to punycodes it passes through a process called NAMEPREP. NAMEPREP specifies a framework of processing rules such as Mapping(For each character in the <b>input,</b> <b>check</b> if it has a mapping and, if so, replace it with its mapping), Normalization(Possibly normalize the result of step 1 using Unicode Normalization), Prohibited Output(Check for any characters that are not allowed in the output if any are found, return an error), Bidirectional characters(Possibly check for right-to-left characters, and if any are found, make sure that the whole string satisfies the requirements for bidirectional strings) for Unicode text. A profile of STRINGPREP MUST include:- The intended applicability of the profile- The character repertoire that is the input and output to stringprep- The mapping tables used- Any additional mapping tables specific to the profile- The Unicode normalization used, if any- Th...|$|E
5000|$|If {{the script}} has no <b>input</b> <b>checking,</b> instead trusting that the {{filename}} is always valid, a malicious user could forge a URL to retrieve configuration files from the webserver: ...|$|R
5000|$|... and [...] {{family of}} I/O routines, {{for lack of}} (either any or easy) <b>input</b> length <b>checking.</b>|$|R
40|$|This release has the {{following}} changes: adds (unit) testing with the testthat package adds a tripleCount(store) method some documentation improvements typo in package description now lists all formats in asString() add. data. triple() and load. rdf() should now stop() when exceptions happen (closes # 10) add. data. triple() now checks the data type given sparql. remote() now discusses bif:contains (closes # 32) now uses missing() instead of is. null() for <b>input</b> <b>checking</b> (addresses # 34...|$|R
40|$|Burgeoning coastal development, {{recreational}} use, and {{the future}} affects of climate change are placing increasing strain on regulators to manage risk associated with coastal hazards. Low-lying coastal communities in particular are vulnerable {{to a range of}} natural hazards including coastal erosion, storm surge inundation, tsunami and water safety that come with varying levels of risk to life and property. New Zealand's coastal hazard monitoring network is patchy and resources are limited. As a consequence there is considerable potential for coastal communities are going to need to take {{a more active role in}} monitoring their environment and building data bases and knowledge that can be used to better manage their coast. This paper describes simple methodologies based on the needs of various community groups and sound science principles that can be used to monitor beaches and the coastal environment. By employing these tools councils, technical experts and community groups will be able to make better-informed decisions for managing activities in the coastal environment. One of the keys to the successful uptake of a monitoring programme by a community group is its relevance to the group. The programme and the tools provided must fit the interests, needs, capability and resources of the group. This project develops tools for coastal monitoring and targets coastal community groups such as Coast Care, Coastal Hapu, Secondary Schools, and Surf Life Saving Clubs. The monitoring methodologies have been developed in consultation with Tainui ki Whaingaroa hapu, Raglan Area School, and the Waikato Beach Care and Coast Care Bay of Plenty. Successful methodologies for measuring changes on the coast are also those that are matched to the type of beach, use appropriate equipment, collect structured data, provide data to which analysis can be applied, incorporate local knowledge of the environment, and feed results back to the community and other interested parties such as councils and science organisations. This project provides the target groups with simple monitoring methodologies, field forms/checklists, and appropriate survey and measurement equipment (which have undergone field trials) to carry out coastal monitoring. A web-based facility has been developed to <b>input,</b> <b>check</b> and store data; and provide immediate feedback using graphs and images. It also provides background information on coastal processes relevant to monitoring programmes. In this manner, a scientifically robust data set is collected and stored within a secure and future proofed archive, providing valuable information to coastal groups for years to come. Although the primary objective of this research is to develop a means for coastal communities to monitor changes in their environment, there are additional benefits associated with engaging communities in the study of their environment. These benefits include increasing awareness of coastal hazards, capacity building, providing valuable educational resources, and improving the temporal and spatial data coverage of information for the New Zealand coastline...|$|E
40|$|Concrete slabs {{are today}} usually {{designed}} by traditional hand calculation methods. Powerful numerical calculation methods like the Finite Element Method (FEM) are not recommended in design handbooks for design of slabs, see e. g. Hillerborg et al (1990),(1996). In contrary, its distribution of reinforcement {{is considered to}} be unsuitable for practical use. Most FE-programs are also more adapted for analyses than for design. SKANSKA IT Solutions in Malm√∂, Sweden, has developed a FE-based design program called FEM-Design. The program handles e. g. FE-analyses and design of frames, trusses, beams, shear walls and plates. In this report the program is checked and improved regarding the crack analysis, the calculated effects of actions and the design of reinforcement. Another importent issue discussed is the extreme-value problem of moments in centre of interior columns/walls in flat slab floors. The models used are checked regarding influence of mesh density, element types, column widths and modelling of column stiffness. The FE-analyses show that the mesh density and the modelling of the column stiffness mainly affects the size of the support moments, whereas the field moments are almost independent of all modelling parameters. Fem-Design's automatically generated mesh gave good results with respect {{to the size of the}} support moments. However, the result of moment distribution or actually the reinforcement distribution could be improved by distributing the column stiffness over one plate element. The multi spring concept is also suggested for interior walls wider than 0. 2 m. The iterative crack analysis is compared with Abaqus/Explicit smeared cracks and an experimental test, McNiece (1978). FEM-Design's crack analysis is found to be adequate for design, despite that the crack propagation differs quite much in comparison with Abaqus. FEM-Design's load-displacement curve shows better agreement with the experimental test. The difference depends on the implemented crack theory i. e. when a crack {{is considered to be}} a crack. The distribution of design moments for a simple flat slab floor are compared with designs by two hand calculation methods, the strip method and the yield line theory. The comparison shows that FEM-Design's design moments or actually the required reinforcements have to be chosen at certain points and redistributed by a design method. A FE-based design method is developed with respect to the capabilities of FEM-Design and FE-analyses performed with the traditionally distributed reinforcement. Comparisons between the three methods show that the FE-based reinforcement design method (FED) distributes less total amount of reinforcement than the two traditional methods with respect of both bending- and final design. The thesis concludes that FE-analyses can be used to get a practical reinforcement design in concrete slabs - if the reinforcement like for other methods are redistributed in appropriate areas/strips. This is in contradiction to statements by Hillerborg et al (1990), (1996). Finally, FEM-Design has proven to give reliable analyses and designs, for all tested cases. Actually, there are very few drawbacks with the use of a FE-based design, especially since FEM-Design's plate module is found to be a very user-friendly design tool. However, three improvements/implementations are suggested to make the program even better: ‚Ä¢ A distributed stiffness (the multi spring concept) to model interior columns/walls. ‚Ä¢ A more available and clear <b>input</b> <b>check</b> option. ‚Ä¢ A distribution method for reinforcement. The distribution method (FED), proposed in the thesis is suggested as one suitable method to implement, because it combines FE-theory with theories behind traditional design methods. Validerat; 20101217 (root...|$|E
40|$|This study {{aimed at}} the re-organization and {{simulation}} for the multi-functional center of rose production in Pu-Li district. Topics of re-organization and simulation included layout of placement, procedure of operation, specification of machines, and labors estimation. The operation procedure was analyzed {{on the base of}} dynamic information of rose production and marketing. Moreover, flowchart of IDEFO was applied to explore the post-harvest processes for rose production. The results suggested the post-harvest processes for rose production should include <b>input</b> <b>check,</b> pre-cooling, pre-treatment, grading, film wrapping, packing, and temporary storage in cooling chamber. However, the facilities considered in simulation contained pre-cooling chamber, AWETA cutting and grading machine, film wrapping machine, packing machine, and cooling chamber. A software named ProModel was used in simulation, and its parameters was decided by layout of placement and the efficiency and functionality of operators, in practice. Two grading level were also tested in simulation and they were 60 %: 40 % and 99. 76 %: 0. 24 % in ratio of grade A and B. Under the condition of eight hours smooth work, the simulation parameters were adjusted based on preliminary study. As a result, the utilization ratio of facilities was upgraded when the packing machine was a semi-automatic type and one packing labor was reduced. The utilization ratio of machines was 100 % for pre-cooling chamber, forklift truck, and grading machine, as the film-wrapping machine was 97 %, semi-automatic packing machine was 45 - 50 %, and cooling chamber was 22 %, respectively. Utilizations of labors, in contrast, were 84 - 94 % for flower hanging, 88 % for pre-cooling, and more than 76 % for packing. In summary, this study simulated the post-harvesting processes for rose production and adjusted the input parameters based on preliminary results. Consequently, the utilization of facilities and labors were upgraded and reached to their optimum conditions. Êú¨Á†îÁ©∂ÈáùÂ∞çÂ∑≤ÂÆåÂ∑•‰πãÂüîÈáåÂ§öÂäüËÉΩËä±ÂçâËôïÁêÜË°åÈä∑Â±ïÂîÆ‰∏≠ÂøÉ‰πãÁé´Áë∞ÂàÜÁ¥öËôïÁêÜÂçÄÔºåÁâπÂ∞±ÂÖ∂Áé´Áë∞Ëä±ÂàÜÁ¥öËôïÁêÜÁõ∏Èóú‰ΩúÊ•≠ÊµÅÁ®ã„ÄÅÂ†¥Âú∞‰ΩàÁΩÆ„ÄÅÊ©üÂÖ∑Ë®≠ÂÇôÂäüËÉΩË¶èÊ†ºÁ≠âÂÅöË¶èÂäÉÔºå‰∏¶ÈÖçÂêàË®≠ÂÇôÂäüËÉΩËàá‰∫∫ÂäõÈÖçÁΩÆÈ†ê‰º∞Ë¶èÂäÉÈÄ≤Ë°åÊ®°Êì¨„ÄÇ Á∂ìË™øÊü•‰ª•Áé´Áë∞Ëä±Áî¢Èä∑ÂãïÊÖã‰æÜÂàÜÊûê‰ΩúÊ•≠ÊµÅÁ®ãÔºåÂà©Áî®IDEF 0 ÊµÅÁ®ãÂúñÊ∏ÖÊ•öË°®ÈÄπÁé´Áë∞Ëä±Êé°Êî∂ÂæåËôïÁêÜÊµÅÁ®ãÔºå‰∏¶ÊìöÊ≠§Ë¶èÂäÉÁõ∏Èóú‰ΩúÊ•≠ÊµÅÁ®ãËàáË®≠ÁΩÆÔºåÂÖ∂ÊµÅÁ®ãË¶èÂäÉÁÇ∫Ëá™Êé°Êî∂ÂæåÈÄ≤ÂÖ•Ëä±ÂçâËôïÁêÜ‰∏≠ÂøÉÁî±ÈÄ≤Ë≤®ÈªûÊî∂„ÄÅÁúüÁ©∫È†êÂÜ∑„ÄÅÈ†êÊé™„ÄÅÂàÜÁ¥ö„ÄÅÂåÖËÜú„ÄÅÂåÖË£ùÂèäÂà©Áî®Âè∞ËªäÊö´Â≠òËá≥ÂÜ∑ËóèÂ∫´Á≠â‰ΩúÊ•≠ÔºåÁõ∏ÈóúË®≠ÂÇôË¶èÂäÉÊúâÁúüÁ©∫È†êÂÜ∑Â∫´„ÄÅËç∑Ëò≠AWETAÁé´Áë∞ÂàáËä±ÂàÜÁ¥öÊ©üÊßã„ÄÅËá™ÂãïÂåÖËÜúÊ©ü„ÄÅÊçÜÂåÖÊ©ü„ÄÅÂÜ∑ËóèÂ∫´Á≠âË®≠ÂÇôÔºå‰∏¶‰æùÊ≠§ÈÄ≤Ë°åÊ®°Êì¨„ÄÇ Êú¨Á†îÁ©∂‰ª•ProModelËªüÈ´îÈÄ≤Ë°åÊï¥È´îË®≠ÂÇôÊ®°Êì¨ÔºåÂèÉËÄÉÂ†¥Âú∞‰ΩàÁΩÆÂèä‰∫∫Âì°Êìç‰ΩúË®≠ÂÇôÂäüËÉΩÂèäÊïàÁéáÂàóÂÖ•ÂèÉÊï∏Ë®≠ÂÆöÔºåÂà©Áî®ÂãïÊÖãÊ®°Êì¨Ê®°ÊäÄÂ∑ßÊñπÂºè‰æÜÊ®°Êì¨ÂàÜÁ¥öÁõ∏ÈóúË®≠ÂÇôÂèä‰ΩúÊ•≠‰∫∫Âì°ÈÖçÁΩÆË¶èÂäÉÔºåÊú¨Ê®°Êì¨Âè¶‰æùÁî¢Èä∑Ë™øÊü•ÁµêÊûúË®≠ÂÆö‰∫åÁµÑÂàÜÁ¥ö‰ΩúÊ•≠ÈáèÊ®°Êì¨ÔºåÂÖ∂ÁÇ∫A„ÄÅBÁ≠âÁ¥öÂìÅÈ†ÖÊØî‰æãÁÇ∫ 60 %Ôºö 40 %ÔºåÂèä 99. 76 %Ôºö 0. 24 %‰∫åÁµÑËÆäÊï∏Ôºå‰ª•Á¨¶ÂúãÂÖßÂ∏ÇÂ†¥Áé´Áë∞Ëä±ÂàÜÁ¥öÁèæÊ≥ÅÂèäÂØ¶ÈöõÊÉÖÂΩ¢ÊØîËºÉ„ÄÇ Âú®‰ª•‰ΩúÊ•≠ÂÖ´Â∞èÊôÇÂèäÊï¥È´î‰ΩúÊ•≠È†ÜÊö¢‰πãÊ¢ù‰ª∂‰∏ãÔºå‰æùÁ¨¨‰∏ÄÊ¨°Ê®°Êì¨ÁµêÊûú‰øÆÊ≠£Ëá™ÂãïÊçÜÂåÖÊ©üÊîπÊàêÂçäËá™ÂãïË®≠ÂÇôÔºåÊ∏õÂ∞ë‰∏ÄÂ∞ÅÁÆ±‰∫∫Âì°Á≠â‰ΩúÊ•≠ÊµÅÁ®ã‰ª•ÂÜçÊ¨°Ê®°Êì¨ÔºåÊ®°Êì¨ÁµêÊûúÊñºÂà©Áî®Áéá‰∏äÂ§ßÂ§öÊúâÊèêÊòáÔºåË®≠ÂÇôÂà©Áî®ÁéáÂàÜÂà•ÁÇ∫ÔºöÈ†êÂÜ∑Â∫´„ÄÅÂ†ÜÈ´òÊ©üÂèäÂàÜÁ¥öÊ©üÊé•Ëøë 100 %ÔºåËá™ÂãïÂåÖËÜúÊ©ü 97 %ÔºåÂçäËá™ÂãïÊçÜÂåÖÊ©üÂú® 45 %- 50 %ÔºåÂè¶Âõ†È†êÁïôÊö´Â≠òÁ©∫ÈñìËºÉÂ§ßÔºåÊïÖÂÜ∑ËóèÂ∫´ÁÇ∫ 22 %„ÄÇ‰∫∫Âì°Âà©Áî®ÁéáÂàÜÂà•ÁÇ∫ÔºöÊéõËä±‰∫∫Âì°ÁÇ∫ 84 %Ëá≥ 94 %ÔºåÈ†êÂÜ∑È†êÊé™‰∫∫Âì°ÁÇ∫ 88 %ÔºåË£ùÁÆ±‰∫∫Âì°‰∫¶Ë™øÊï¥Ëá≥ 76 %‰ª•‰∏ä„ÄÇÂà©Áî®Ê®°Êì¨Ê™¢Ë®éË¶èÂäÉÂÖßÂÆπÂêàÂÆúÊÄßÔºå‰∏¶Á∂ìÁî±ÁµêÊûúÊ™¢Ë¶ñË™øÊï¥Ë¶èÂäÉÂÖßÂÆπÔºå‰ª•ÊúâÊïàÊèêÊòá‰∫∫Âì°‰πãÂà©Áî®ÁéáÂèäÊï¥Â†¥‰ΩúÊ•≠ÊïàÁéá‰ª•ÈÅîÊúÄÈÅ©Ë¶èÂäÉ„ÄÇÁõÆ ÈåÑ ÁõÆÈåÑ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ö† ÂúñÁõÆÈåÑ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ö¢ Ë°®ÁõÆÈåÑ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ö§ ‰∏Ä„ÄÅÂâçË®Ä‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 1 1. 1 Á†îÁ©∂ÂãïÊ©ü‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 1 1. 2 Á†îÁ©∂ÁõÆÁöÑ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 3 ‰∫å„ÄÅÊñáÁçªÊé¢Ë®é‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 5 2. 1 ÈõªËÖ¶Ê®°Êì¨‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 5 2. 2 Áé´Áë∞Ëä±Êé°Êî∂Âæå‰πãÁîüÁêÜËÆäÂåñËàáËôïÁêÜ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 9 2. 3 Áé´Áë∞Ëä±Êé°Êî∂ÂæåËôïÁêÜÂàÜÁ¥ö‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 13 2. 4 IDEF 0 ÊñπÊ≥ïË´ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 16 ‰∏â„ÄÅÁ†îÁ©∂Ë®≠Ë®à‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 19 3. 1 Áé´Áë∞Ëä±Â∏ÇÂ†¥Ë™øÊü•‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 19 3. 2 ‰ΩúÊ•≠ÁèæÂ†¥Ë®≠ÁΩÆË¶èÂäÉ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 24 3. 3 IDEF 0 ÊµÅÁ®ãÂúñË£Ω‰Ωú‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 37 3. 4 ÈõªËÖ¶Ê®°Êì¨Ê®°ÂºèÂª∫Á´ã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 49 Âõõ„ÄÅÁµêÊûúËàáË®éË´ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 53 4. 1 Áé´Áë∞ÂàáËä±Áµ±Ë®àÁµêÊûúË®éË´ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 53 4. 2 Ê®°Êì¨ÁµêÊûúËàáË®éË´ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 54 ‰∫î„ÄÅÁµêË´ñËàáÂª∫Ë≠∞‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 62 5. 1 ÁµêË´ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 62 5. 2 Âª∫Ë≠∞‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 64 ÂÖ≠„ÄÅÂèÉËÄÉÊñáÁçª‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 65 ÈôÑÈåÑ‰∏Ä„ÄÅÊ®°Êì¨ÁµêÊûúÁµ±Ë®àË≥áÊñôÊ®°Êì¨‰∏Ä‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 68 ÈôÑÈåÑ‰∫å„ÄÅÊ®°Êì¨ÁµêÊûúÁµ±Ë®àË≥áÊñôÊ®°Êì¨‰∫å‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 79 ÈôÑÈåÑ‰∏â„ÄÅÁ¨¨‰∫åÊ¨°Ê®°Êì¨ÁµêÊûúÁµ±Ë®àË≥áÊñôÊ®°Êì¨‰∏Ä‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 90 ÈôÑÈåÑ‰∫å„ÄÅÁ¨¨‰∫åÊ¨°Ê®°Êì¨ÁµêÊûúÁµ±Ë®àË≥áÊñôÊ®°Êì¨‰∫å‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 101 Âúñ ÁõÆ ÈåÑ Âúñ 2 - 1 IDEF‰∏ä‰∏ãÈÄ£Êé•ÂúñÂèäÂÆöÁæ©‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 17 Âúñ 2 - 2 IDEFÂàÜËß£Âúñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 18 Âúñ 3 - 1 ÂÖ®Âè∞ÁÅ£ÁúÅ 91 Âπ¥Áé´Áë∞Ëä±Áî¢ÂçÄÂàÜ‰ΩàÂúñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 19 Âúñ 3 - 2 ÂÖ®Âè∞ÁÅ£ÁúÅ 91 Âπ¥Ëä±ÂçâÁî¢ÂçÄÂàÜ‰ΩàÂúñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 20 Âúñ 3 - 3 ÁèæÂ†¥Ë®≠ÁΩÆË¶èÂäÉÂúñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 25 Âúñ 3 - 4 AWETAÂàÜÁ¥öÊ©üÊßã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 27 Âúñ 3 - 5 Ëä±ÂçâËôïÁêÜ‰∏≠ÂøÉÁé´Áë∞Ëä±ËôïÁêÜÊµÅÁ®ã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 31 Âúñ 3 - 6 Ëä±ÂçâÈ†êÊé™ËôïÁêÜ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 32 Âúñ 3 - 7 ÂàÜÁ¥öÊ©üÊéõËä±‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 34 Âúñ 3 - 8 Ëá™ÂãïÂåÖË¶ÜÂ°ëËÜ†ËÜú‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 34 Âúñ 3 - 9 ÊàêÂìÅÊö´Â≠òÊñºÂè∞Ëªä‰∏ä‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 35 Âúñ 3 - 10 Áé´Áë∞ÊîæÁΩÆÊñºÁ´ãÂºèÂÆπÂô®Êö´Â≠òÊñºÂÜ∑ËóèÂ∫´‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 36 Âúñ 3 - 11 Êú™ÂàÜÁ¥ö‰πãÁé´Áë∞Ëä±È†êÊé™Êö´Â≠òÊñºÂÜ∑ËóèÂ∫´‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 36 Âúñ 3 - 12 Áé´Áë∞Ëä±Êé°Êî∂ÂæåËôïÁêÜÊµÅÁ®ã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 38 Âúñ 3 - 13 ÈÄ≤Ë≤®‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 40 Âúñ 3 - 14 È†êÊé™È†êÂÜ∑‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 42 Âúñ 3 - 15 ÂàÜÁ¥öÂåÖË£ù‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 44 Âúñ 3 - 16 ÂÜ∑Ëóè‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 46 Âúñ 3 - 17 Âá∫Ë≤®‰ΩúÊ•≠‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 48 Âúñ 3 - 18 Áé´Áë∞Ëä±ÂàÜÁ¥ö‰ΩúÊ•≠Ê®°Êì¨ÈÖçÁΩÆÂúñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 52 Âúñ 4 - 1 ÈñãÂßãÊ®°Êì¨ÊôÇÁöÑÊÉÖÊ≥Å‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 55 Âúñ 4 - 2 Ê®°Êì¨ÈÅéÁ®ã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 55 Âúñ 4 - 3 Á¨¨‰∫åÊ¨°Ê®°Êì¨ÈÅéÁ®ã‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 59 Ë°® ÁõÆ ÈåÑ Ë°® 2 - 1 Ê®°Êì¨ÁöÑÊ≠∑Âè≤ÁôºÂ±ï‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 7 Ë°® 2 - 2 Áé´Áë∞Ëä±‰ª£ËôüÁ≠âÁ¥öÊ®ôÊ∫ñ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 13 Ë°® 2 - 3 Áé´Áë∞Ëä±ÂìÅË≥™Ê®ôÊ∫ñ‰ª£Ëôü‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 14 Ë°® 3 - 1 ËøëÂπ¥‰æÜÂçóÊäïÁ∏£‰ΩîÂè∞ÂåóËä±ÂçâÁî¢Èä∑(ËÇ°) ÂÖ¨Âè∏Áé´Áë∞Ëä±ÈÄ≤Ë≤®ÁôæÂàÜÊØî‚Ä¶‚Ä¶‚Ä¶ 21 Ë°® 3 - 2 Âè∞ÂåóËä±ÂçâÁî¢Èä∑(ËÇ°) ÂÖ¨Âè∏ 93 Âπ¥Áé´Áë∞Ëä±ÂêÑÁ≠âÁ¥öÊï∏ÈÄ≤Ë≤®‰πãÁôæÂàÜÊØî‚Ä¶‚Ä¶‚Ä¶ 21 Ë°® 3 - 3 ÂçóÊäïÁ∏£ 92 Âπ¥‰æõË≤®Ëá≥Âè∞ÂåóËä±ÂçâÁî¢Èä∑(ËÇ°) ÂÖ¨Âè∏Áé´Áë∞Ëä±ÂêÑÁ≠âÁ¥öÊï∏ÈÄ≤Ë≤® ‰πãÁôæÂàÜÊØî‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 22 Ë°® 3 - 4 ÈáùÂ∞çÁé´Áë∞AÁ¥öÂèäBÁ¥öËä±‰πãÂØ¶Èöõ‰ΩîÊúâÁéáÊÑèË¶ãË™øÊü•Áµ±Ë®àË°®‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 23 Ë°® 3 - 5 ‰æùË™øÊü•Áµ±Ë®àÂè¶Ë®àÁÆóÂçóÊäïÁ∏£ 92 Âπ¥Áé´Áë∞Ëä±‰æõË≤®Ëá≥Âè∞ÂåóËä±ÂçâÁî¢Èä∑(ËÇ°) ÂÖ¨Âè∏A„ÄÅBÁ≠âÁ¥ö‰πãÁôæÂàÜÊØî‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 23 Ë°® 3 - 6 Êú¨Á†îÁ©∂Ë®≠ÂÇôË¶èÂäÉË°®‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 26 Ë°® 4 - 1 ‰∫åÊ®°Êì¨‰πãÂ∑•‰Ωú‰∫∫Âì°Âà©Áî®Áéá‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 56 Ë°® 4 - 2 ‰∫åÊ®°Êì¨‰πãÊ©üÂÖ∑Âà©Áî®ÁéáÂàÜÊûê‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 57 Ë°® 4 - 3 ‰øÆÊ≠£ÂæåÂæóÁ¨¨‰∫åÊ¨°Ê®°Êì¨‰πãÂ∑•‰Ωú‰∫∫Âì°‰πãÂà©Áî®Áéá‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 60 Ë°® 4 - 3 ‰øÆÊ≠£ÂæåÂæóÁ¨¨‰∫åÊ¨°Ê®°Êì¨‰πãÊ©üÂÖ∑‰πãÂà©Áî®Áéá‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 6...|$|E
40|$|Software {{is playing}} {{increasingly}} {{important roles in}} avionics systems. It is widely used in navigation and, in some cases, in control loops that maintain aircraft stability. To guarantee the safety of flight systems, the FAA requires that critical components have a probability of failure no greater than 10 (exp - 9) per hour of flight. Software {{is being used to}} diagnose system components for failure. SIFT (Software Implemented Fault Tolerance) was a computer system developed to study the use of software to check for failure and manage processor reconfiguration. To guarantee that software satisfies its specifications, formal verification can be used. With this a program and its specification are viewed as mathematical objects, and a mathematical proof is used to show that the program and its specification are equivalent. In previous research, a theory of checking was developed to offer assistance in analyzing specifications and designing run-time checks. In the theory, checking is considered abstractly in terms of n-ary relations much like those of relational database theory. Within the theory check are categorized, <b>checks</b> on <b>input</b> and <b>checks</b> on results are considered, and formal attention is given to the minimization and logical combination of checks. The focus is upon <b>input</b> <b>checks</b> and the obstacles in <b>checking</b> <b>input</b> to critical systems. A central concern is with a property referred to as independence. The concern is with circumstances under which it is possible to apply isolated, independent checks to separate sensor inputs and be assure that all illegal input will be properly detected. Presently, independence is being investigated and checked {{in the context of the}} GCS (Guidance and Control System). The GCS simulator is intended for testing software that implements control laws for landing spacecraft. The large number of inputs and their complex interrelationships provide an exciting context in which to investigate independence and the difficulties of supplying <b>input</b> <b>checks...</b>|$|R
50|$|Except {{the extreme}} case with , all the {{security}} vulnerabilities {{can be avoided}} by introducing auxiliary code to perform memory management, bounds <b>checking,</b> <b>input</b> <b>checking,</b> etc. This is often done {{in the form of}} wrappers that make standard library functions safer and easier to use. This dates back to as early as The Practice of Programming book by B. Kernighan and R. Pike where the authors commonly use wrappers that print error messages and quit the program if an error occurs.|$|R
5000|$|Does an {{automaton}} {{accept any}} <b>input</b> word? (Emptiness <b>checking)</b> ...|$|R
5000|$|Data {{comparison}} [...] - [...] cross <b>check</b> <b>inputs</b> from duplicated sensors ...|$|R
50|$|Along with Prof. DeFrancis {{overseeing}} the general planning and {{supervision of the}} project {{as well as its}} detailed operations, a volunteer team of some 50 contributors - including academics, Chinese language teachers, students, lexicographers, and computer consultants - were involved in the myriad tasks of processing dictionary entries, such as defining, <b>inputting,</b> <b>checking,</b> and proofreading. The University of Hawai'i Press published the ABC Chinese-English Dictionary in September 1996. UHP republished the original paperback ABC Chinese-English Dictionary, which had a total 916 pages and was 23 cm. high, into the ABC Chinese-English Dictionary: Pocket Edition (1999, 16 cm.) and hardback ABC Chinese-English Dictionary: Desk Reference Edition (2000, 23 cm.).|$|R
40|$|Developer testing, {{a common}} step in {{software}} development, involves generating desirable test <b>inputs</b> and <b>checking</b> {{the behavior of}} the program unit under test during the execution of the test inputs. Existing industrial developer testing tools include various techniques to address challenges of generating desirable test <b>inputs</b> and <b>checking</b> {{the behavior of the}} program unit under test. This paper presents an overview of techniques implemented in industrial developer testing tools to address challenges in improving automation in developer testing. These techniques are summarized from two main aspects: test efficiency (e. g., with a focus on cost) and test effectiveness (e. g., with a focus on benefit). ...|$|R
30|$|The IsPath {{function}} takes {{sequence of}} blocks and edges as an <b>input</b> and <b>checks</b> if the sequence forms a {{path in the}} edge relation. It is stated that any two consecutive elements in the path sequence constitute an edge in the graph relation.|$|R
50|$|In {{software}} testing, monkey {{testing is}} a technique where the user tests the application or system by providing random <b>inputs</b> and <b>checking</b> the behavior, or seeing whether the application or system will crash. Monkey testing is usually implemented as random, automated unit tests.|$|R
40|$|Abstract. Input {{validation}} is {{the problem}} that need to solve for all Web applications, to calibrate data for its constraints and rules. The Struts 2 framework provides a variety of check method, and validation. xml file {{is the most common}} method in this research. Firstly, study Struts 2 framework architecture composed of three parts such as model, view and controller; Then, show the <b>input</b> <b>checking</b> process of Struts 2 through a graphical mode;Finally, the design of validation. xml validation file example, realizes the checkers such as required string, string length, integer, date and double precision floating point number. Using Validation. xml authentication of Struts 2 has the advantages of convenient and suitable, and can also be combined with other methods in practical application...|$|R
5000|$|Built-in Functions [...] - [...] table search, phonetic conversion, field verify, field edit, bit <b>checking,</b> <b>input</b> formatting, {{weighted}} retrieval.|$|R
50|$|Genealogica Grafica is {{a utility}} for the {{creation}} of genealogical charts and reports for web publishing. Genealogica Grafica relies on genealogy software to produce the GEDCOM file it requires as an <b>input,</b> and <b>checks</b> the GEDCOM for consistency of the data and produces a variety of web reports.|$|R
40|$|Expert {{systems and}} {{artificial}} intelligence can contribute substantially {{to the quality}} of real-estate development analysis. 'A. I. coaches'help correlate <b>input</b> and <b>check</b> the validity of schedules. Expert systems enhance life cycle cost analysis. Property value indicators become viable when used in conjunction with remote sensing and life style mappin...|$|R
40|$|A Green's-function-based solver for the {{modified}} Bessel equation {{has been developed}} with the primary motivation of solving the Poisson and biharmonic equations in cylindrical geometries. The method is implemented using a discrete Hankel transform and a Green's function based on {{the modified}} Bessel functions {{of the first and}} second kind. The computation of these Bessel functions has been implemented to avoid scaling problems due to their exponential and singular behaviour, allowing the method to be used for large-order problems, as would arise in solving the Poisson equation with a dense azimuthal grid. The method has been tested on monotonically decaying and oscillatory <b>inputs,</b> <b>checking</b> for errors due to interpolation and/or aliasing. The error has been found to reach machine precision and to have computational time linearly proportional to the number of nodes...|$|R
40|$|This {{article is}} {{the survey of}} author's work on dialog shells over {{interpreting}} systems. Aspects of the shell for the computational algebra package Bergman are presented: the solved task, homogenization algorithm, <b>input</b> data <b>checking,</b> approaches to implementation. The shell automatizes and strongly simplifies data preparation and monitoring of the Bergman package...|$|R
40|$|A Green's {{function}} based solver for {{the modified}} Bessel equation {{has been developed}} with the primary motivation of solving the Poisson equation in cylindrical geometries. The method is implemented using a Discrete Hankel Transform and a Green's function based on the modified Bessel functions {{of the first and}} second kind. The computation of these Bessel functions has been implemented to avoid scaling problems due to their exponential and singular behavior, allowing the method to be used for large order problems, as would arise in solving the Poisson equation with a dense azimuthal grid. The method has been tested on monotonically decaying and oscillatory <b>inputs,</b> <b>checking</b> for errors due to interpolation and/or aliasing. The error has been found to reach machine precision and to have computational time linearly proportional to the number of nodes. Comment: Submitted to SIAM Journal on Scientific Computin...|$|R
40|$|Current {{software}} {{products such}} as spreadsheets are beginning to include automated graphical design and <b>input</b> <b>checking</b> heuristics to provide added automated functionality. The use of such rules requires higher levels of abstract meaning representation than raw media. They also rely upon representing contextual information describing the domain, task, user and current dialogue. With these technologies interfaces move from being purely multimedia towards multimodality. The MMI 2 multimodal system is described to illustrate the representation and architecture required for this class of system and the cooperative dialogue which it can support. A second, simpler multimedia information retrieval and presentation system (MIPS) is then described to show how these technologies of context and abstract meaning representation can be incorporated in commercial multimedia applications to structure and tailor multimedia information to the user. Keywords: Multimodal User Interface, Multimedia, Intellig [...] ...|$|R
40|$|This {{high school}} level {{computer}} activity requires students to use formulas to calculate heat index from data collected in Lamont, Oklahoma. The activity includes a calculator with air temperature and relative humidity <b>inputs</b> to <b>check</b> answers. It {{is part of the}} Atmospheric Visualization Collection (AVC), which focuses on data from the Atmospheric Radiation Measurement(ARM) program. Educational levels: High school...|$|R
50|$|One of {{the biggest}} {{problems}} found in the second phase was how to <b>input</b> the <b>check</b> information, especially the account numbers, with any sort of speed. Beise demanded a system that would not require the information to be changed from one medium to another, from check to punched card for instance, {{while at the same time}} lowering error rates.|$|R
50|$|A parser is a {{software}} component that takes input data (frequently text) and builds a data structure - often {{some kind of}} parse tree, abstract syntax tree or other hierarchical structure - giving a structural representation of the <b>input,</b> <b>checking</b> for correct syntax in the process. The parsing may be preceded or followed by other steps, or these may be combined into a single step. The parser is often preceded by a separate lexical analyser, which creates tokens from the sequence of input characters; alternatively, these can be combined in scannerless parsing. Parsers may be programmed by hand or may be automatically or semi-automatically generated by a parser generator. Parsing is complementary to templating, which produces formatted output. These may be applied to different domains, but often appear together, such as the scanf/printf pair, or the input (front end parsing) and output (back end code generation) stages of a compiler.|$|R
30|$|After {{the user}} clicks to save in the details-on-demand window, the <b>input</b> is <b>checked</b> for its {{conformity}} with the STIX specification. If {{the object is}} conform it is parsed into a compliant JSON. This happens regardless of whether a new object is added or an existing one is changed. Afterwards the JSON {{is sent to the}} CTI vault where the data is persisted.|$|R
5000|$|The Brake Control Unit (computer) detects the <b>inputs,</b> {{and then}} <b>checks</b> the wheel speed sensors to {{determine}} vehicle speed, {{and to determine}} if a wheel lockup requires the ABS algorithm.|$|R
5000|$|Data Validation {{tests the}} {{validity}} of input into fields by comparing the <b>input</b> to patterns, <b>checking</b> for the correct data type (such as a string or an integer), and in other customizable ways.|$|R
40|$|The {{purpose of}} this study was to {{investigate}} the relationship among the teachers' use of the individual elements of lesson design, students' mastery of mathematics objectives, the hours of inservice training completed by the teachers and the teachers' years of experience. The individual elements of lesson design are defined by Madeline Hunter and are anticipatory set, objective and purpose, <b>input,</b> modeling, <b>checking</b> for understanding, guided practice, and independent practice...|$|R
40|$|Data mappings: # 45 : Changed DataMappings remoteInput/Output from {{records to}} simple Maps Added {{an option to}} the config to switch on/off <b>input</b> objects {{existence}} <b>check</b> # 44 : Renamed DataMapping's id to label # 47 : Added a logger message {{and some kind of}} progress output for the <b>input</b> objects existence <b>check</b> # 50 : Instead of <b>checking</b> <b>input</b> objects object metadata, listing objects with the given prefix # 52 : Added a check for missing/non-needed input/output data keys in the datamappings Data processing: # 51 : Fixed input objects handling by passing the map of (dataKey. label -> fileLocation) from worker to the processing context; this way context. inputFile lookup doesn't rely on conventions and return the actual file location Self-termination: # 48 : Added a time deadline for SQS polling Added some logging and exception handling to the polling Other fixes: # 49 : Removed any worker instance state tagging for now; was causing RequestLimitExceeded on a big autoscaling group with quick tasks # 43 : Changed log messages for downloads/upload...|$|R
40|$|Packet {{filters are}} a {{mechanism}} for efficiently demultiplexing network packets to application endpoints. There is currently no general, formal specification method for packet filters that allows for easy or efficient composition of specifications. In this paper we present an automatic approach that achieves all of these goals. We approach packet filter specification as a language recognition problem: each filter is represented by a context-free grammar, whose language is the set of packets the filter should accept. Thus, packet filters can be formulated through a general, well defined specification; further, the grammar-based approach simplifies filter composition, which is essential where scalability is important. However packet filters based on standard LR parsing techniques suffer from poor performance: they touch every portion of the <b>input,</b> they <b>check</b> <b>input</b> bit by bit, they occupy large amount of space. We present new optimizations to LR parsing that enable our automatic approach to [...] ...|$|R
40|$|The aim of {{the present}} paper is to apply the Laguerre polynomials method for the {{analytical}} solution of the Altarelli- Martinelli equation. We use this method of the low $x$ gluon distribution to the longitudinal structure function using MRST partons as <b>input.</b> Having <b>checked</b> that this model gives a good description of the data to predict of the longitudinal structure function at leading and next to leading order analysis at low $x$Comment: 6 pages, 2 figure...|$|R
40|$|TPOT now detects {{whether there}} are missing values in your dataset and replaces them with the median value of the column. TPOT now allows you to set a group {{parameter}} in the fit function so {{you can use the}} GroupKFold cross-validation strategy. TPOT now allows you to set a subsample ratio of the training instance with the subsample parameter. For example, setting subsample= 0. 5 tells TPOT to create a fixed subsample of half of the training data for the pipeline optimization process. This parameter can be useful for speeding up the pipeline optimization process, but may give less accurate performance estimates from cross-validation. TPOT now has more built-in configurations, including TPOT MDR and TPOT light, for both classification and regression problems. TPOTClassifier and TPOTRegressor now expose three useful internal attributes, fitted_pipeline_, pareto_front_fitted_pipelines_, and evaluated_individuals_. These attributes are described in the API documentation. Oh, TPOT now has thorough API documentation. Check it out! Fixed a reproducibility issue where setting random_seed didn't necessarily result in the same results every time. This bug was present since TPOT v 0. 7. Refined <b>input</b> <b>checking</b> in TPOT. Removed Python 2 uncompliant code...|$|R
