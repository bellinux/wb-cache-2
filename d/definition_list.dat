12|278|Public
50|$|A {{value in}} a {{description}} list (previously definition data in a <b>definition</b> <b>list).</b>|$|E
50|$|A {{name in a}} {{description}} list (previously definition term in a <b>definition</b> <b>list).</b>|$|E
5000|$|A {{description}} list (a.k.a. association list), {{which consists of}} name-value groups, and {{was known as a}} <b>definition</b> <b>list</b> prior to HTML5. [...] Description lists are intended for groups of [...] "terms and definitions, metadata topics and values, questions and answers, or any other groups of name-value data".|$|E
3000|$|Based on the {{dimensionless}} <b>definitions</b> <b>listed</b> in Table  1, the dimensionless governing flow equation, {{converted from}} Eq. (16), {{can be obtained}} as [...]...|$|R
50|$|The {{miscellaneous}} {{hazardous materials}} category encompasses all hazardous materials {{that do not}} fit one of the <b>definitions</b> <b>listed</b> in Class 1 through Class 8.|$|R
50|$|First the <b>list</b> <b>definition.</b> The <b>list</b> entries could contain {{multiple}} arguments, {{but here}} only {{the name of}} the variable is used.|$|R
50|$|In the {{technique}} {{used in this}} entry each CONCEPT requires a proper definition which is preferably copied from a standard glossary of which the source is given, if applicable. All CONCEPT names in the text are with capital characters. In Table 1 the concept <b>definition</b> <b>list</b> is presented.|$|E
5000|$|In March 1999, State Senator Don Perata {{introduced}} Senate Bill 23 (SB 23). The {{bill had}} three provisions: to make illegal the manufacture, importation, sale or offer, or to give or lend any large-capacity magazine as defined {{as having the}} capacity to accept more than ten rounds; {{the addition of a}} [...] "generic" [...] <b>definition</b> <b>list</b> to the existing Roberti-Roos legislation; and the exemption to allow on and off duty and retired peace officers the use of assault weapons. [...] They are defined in Penal Code §12276.1 and §30515. The bill was passed and went into effect on January 1, 2000.|$|E
5000|$|ISO/IEC JTC 1/SWG 5 {{does not}} develop or {{facilitate}} {{the development of}} standards, but consolidates the standardization activity, for IoT, of multiple groups, {{both internal and external}} to ISO and IEC. The special working group also identifies current and future trends, needs, and gaps in IoT. The result of the special working group’s IoT collection of data is a number of documents, including the IoT mind map and a collection of definitions for the IoT, M2M, and CPS. Both of these documents were produced by ISO/IEC JTC 1/SWG 5’s Ad Hoc Group 1, and are meant to provide a better understanding of what is meant by IoT. The mind map visually describes the technologies related to, and application domains, requirements, and stakeholders of, IoT. Standardization related to IoT is not included in the mind map, as that area of work is covered by Ad Hoc Group 3. [...] The <b>definition</b> <b>list</b> provides a list of collected definitions from various standards-setting organizations divided into four categories: Internet of Things (IoT), Machine to Machine Communications (M2M), Machine Type Communications (MTC), and Cyber Physical Systems (CPS). Ad Hoc Group 2 is working on collecting data on the market requirements for IoT and will soon develop a document describing these market requirements, which will be presented based on a pre-determined template. Ad Hoc Group 3 is developing a document that will identify standardization gaps within IoT, as well as a standards roadmap, both of which will take into account the inputs of relevant stakeholders. Ad Hoc Group 4 is studying IoT Reference Architectures/Frameworks which includes collecting, comparing and summarizing of existing IoT Architectures/Frameworks. This study leads to a report to JTC 1 Plenary 2014.|$|E
50|$|Does the {{definition}} of music determine its aspects, or does the combination of certain aspects determine {{the definition}} of music? For example, intensional <b>definitions</b> <b>list</b> aspects or elements that make up their subject.|$|R
3000|$|... 3) Words were {{considered}} spatial {{if the first}} <b>definition</b> <b>listed</b> in the American Heritage Dictionary (5 th edition) was overtly and uniquely spatial in that it referred to movement, action, shape, configuration, or size.|$|R
5000|$|The [...] of {{mutually}} exclusive <b>definitions</b> <b>list</b> characteristics {{which are the}} opposite of {{those found in the}} [...] An example would occur if a cow were defined as a flying animal with no legs.|$|R
40|$|If {{the data}} is useful for its {{intended}} purpose [Juran, 1989] Hence, the Encyclopedia Britannica is of low quality for me if I {{want to build a}} DBMS? Formal Criteria: (but no formal <b>definition)</b> <b>List</b> of quality attributes, e. g. IAIDQ, DGIQ adopted 15 dimensions of attributes from [Wang/Strong, 1996] within 4 categories: accessability interpretation relevance accuracy 2 /...|$|E
40|$|Past {{research}} has shown that dictionaries and glosses can be beneficial in computer assisted language learning, particularly in vocabulary learning. We propose that L 2 vocabulary learners can benefit from the use of a dictionary whose definitions are sensitive to the provided reading context, and that advances in the natural language processing task of word sense disambiguation can be used to automatically order the definitions of such a dictionary. An in-vivo study was conducted with ESL students to investigate the effect that the order of definitions has on vocabulary learning using REAP, a computer based vocabulary tutor. Our results showed that students benefited from having the algorithmically determined best definitions listed {{at the top of the}} <b>definition</b> <b>list.</b> Furthermore, our results suggest that word sense disambiguation may currently be good enough for use in intelligent language tutoring environments...|$|E
40|$|Today the {{documentation}} of natural heritage with scientific methods but for conservation practice &ndash; like mapping of actual vegetation &ndash; {{becomes more and}} more important. For this purpose mapping guides containing only the names and descriptions of vegetation types are not sufficient. Instead, new, mapping-oriented vegetation classification systems and handbooks are needed. There are different standardised systems fitted to the characteristics of a region already published and used successfully for surveying large territories. However, detailed documentation of the aims and steps of their elaboration is still missing. Here we present a habitat-classification method developed specifically for mapping and the steps of its development. Habitat categories and descriptions reflect site conditions, physiognomy and species composition as well. However, for species composition much lower role was given deliberately than in the phytosociological systems. Recognition and mapping of vegetation types in the field is highly supported by a <b>definition,</b> <b>list</b> of subtypes and list of &lsquo;types not belonging to this habitat category&rsquo;. Our system is two-dimensional: the first dimension is habitat type, the other is naturalness based habitat quality. The development of the system was conducted in two steps, over 200 mappers already tested it over 7000 field days in different projects...|$|E
50|$|Thermal {{conductivity}}, k, often {{depends on}} temperature. Therefore, the <b>definitions</b> <b>listed</b> below make sense when the thermal conductivity is temperature independent. Otherwise an representative mean value {{has to be}} considered; for more, see the equations section below.|$|R
50|$|A {{number of}} other {{lightweight}} markup languages extend Markdown by adding features (such as tables, footnotes, <b>definition</b> <b>lists,</b> and Markdown inside HTML blocks) not available in the original Markdown syntax. Among these are Markdown Extra, MultiMarkdown, and the Pandoc Markdown extension.|$|R
5000|$|One of {{the most}} popular {{definitions}} of the term [...] "open standard," [...] as measured by Google ranking, is the one developed by Bruce Perens.His <b>definition</b> <b>lists</b> a set of principles that he believes must be met by an open standard: ...|$|R
40|$|Aim. The aim of {{the given}} paper is to expose species {{structure}} and geographical distribution of Coleoptera, Tenebrioridae (C, T) of coastal and island ecosystem of the Caspian Sea. The given report is compiled of the matcrials, collected in different periods by authors (1961 - 2013) in the Caucasian part of the Caspian Sea, in the south of the European part of the Russian Federation, Kazakhstan, islands (the Chechen island, the Nord island. The Tuleniyisland. The Kulaly island), collective materials (ZIN; RAS, museum of Zoology of MSU, Institute NAN of Azerbaijan, National museum of Georgia) and materials published (Kryzhanovsky, 1965, Medvedev, 1987, 1990; Medvedev, Nepesova, 1990; Shuster, 1934; Kaluzhnaya, 1982; Arzanov and others, 2004, Egorov, 2006). Methods. We used the traditional methods of collecting (hand picking, traps soil, soil traps light amplification light traps), processing and material <b>definition.</b> <b>List</b> of species composition discussed fauna composed by modern taxonomy using directories.   Location. Coastal and island ecosystems of the Caspian sea. Results. Species structure and data on general and regional distribution of C,T of coastal and island ecosystems of the Caspian Sea is represented in the paper.  Faund discussed is widely represented in the fauna of arid regions of land, especially in the fauna of subtropical deserts and semideserts. Main conclusions. Results of the study will be {{a step in the}} determination of age of the islands through the biological diversity and the consequent level regime of the Caspian Sea, as well as possible changes in the population structure of darkling beetles (Coleoptera: Tenebrionidae) on island ecosystems. </p...|$|E
40|$|Add [...] print-highlight-style option. This {{generates a}} JSON {{version of a}} {{highlighting}} style, which can be saved as a. theme file, modified, and used with [...] highlight-style (# 4106, # 4096). Add [...] strip-empty-paragraphs option. This works for any input format. It is primarily intended for use with docx and odt documents where empty paragraphs {{have been used for}} inter-paragraph spaces. Support [...] webtex for gfm output. Recognize. muse file extension. Support beamer in LaTeX reader. Closes # 4091. Docx reader: don't strip out empty paragraphs (# 2252). Users who have a conversion pipeline from docx may want to consider adding [...] strip-empty-paragraphs to the command line. Org reader (Albert Krewinkel) : Allow empty list items (# 4090). Muse reader (Alexander Krotov) : Parse markup in <b>definition</b> <b>list</b> terms. Allow definition to end with EOF. Make code blocks round trip. Drop common space prefix from list items. Add partial round trip test. Don't interpret XML entities. Remove nested. Parse as non-breaking space in Emacs mode. Correctly remove indentation from notes. Exactly one space is required and considered {{to be part of the}} marker. Allow list items to be empty. Add ordered list test. Add more multiline definition tests. Don't allow blockquotes within lists. Fix reading of multiline definitions. Add inline support. Concatenate inlines of the same type Docx writer: allow empty paragraphs (# 2252). CommonMark/gfm writer: Use raw html for native divs/spans (# 4113). This allows a pandoc markdown native div or span to be rendered in gfm using raw html tags. Implement raw_html and raw_tex extensions. Note that raw_html is enabled by default for gfm, while raw_tex is disabled by default. Muse writer (Alexander Krotov) : Test that inline math conversion result is normalized. Without normalization this test produced a b c. Improve inline list normalization and move to writer. Escape hash symbol. Escape [...] to avoid accidental horizontal rules. Escape only inside code tag. Additional is not needed as is verbatim already. LaTeX writer: Allow specifying just width or height for image size. Previously both needed to be specified (unless the image was being resized to be smaller than its original size). If height but not width is specified, we now set width to textwidth. If width but not height is specified, we now set height to textheight. Since we have keepaspectratio, this yields the desired result. Escape and _ in code with [...] listings (# 4111). HTML writer: export tagWithAttributes. This is a helper allowing other writers to create single HTML tags. Let papersizes a 0, a 1, a 2, … be case-insensitive by converting the case as needed in LaTeX and ConTeXt writers. Change fixDisplayMath from Text. Pandoc. Writers. Shared so that it no longer produces empty Para's as an artifact. Text. Pandoc. Shared. blocksToInlines: rewrote using builder. This gives us automatic normalization, so we don't get for example two consecutive Spaces. Include default CSS for 'underline' class in HTML-based templates. revealjs template: add tex 2 jax configuration for the math plugin. With the next release of reveal. js, this will fix the problem of s outside of math contexts being interpreted as math delimiters (# 4027). pandoc. lua module for use in lua filters (Albert Krewinkel) : Add basic lua List module (# 4099, # 4081). The List module is automatically loaded, but not assigned to a global variable. It can be included in filters by calling List = require 'List'. Lists of blocks, lists of inlines, and lists of classes are now given List as a metatable, making working with them more convenient. E. g., it is now possible to concatenate lists of inlines using Lua's concatenation operator [...] (requires at least one of the operants to have List as a metatable) : function Emph (emph) local s = pandoc. Space(), pandoc. Str 'emphasized' return pandoc. Span(emph. content [...] s) end The List metatable is assigned to the tables which get passed to the constructors MetaBlocks, MetaInline, and MetaList. This enables the use of the resulting objects as lists. Lua/StackInstances: push Pandoc and Meta via constructor. Pandoc and Meta elements are now pushed by calling the respective constructor functions of the pandoc Lua module. This makes serialization consistent with the way blocks and inlines are pushed to lua and allows to use List methods with the blocks value. Add documentation for pandoc. List in lua-filters. md. Use latest tagsoup. This fixes a bug in parsing HTML tags with & (but not a valid entity) following them (# 4094, # 4088). Use skylighting 0. 4. 4. 1, fixing the color of unmarked code text when numberLines is used (# 4103). Make normalizeDate more forgiving (Mauro Bieg, # 4101), not requiring a leading 0 on single-digit days. Fix [...] help output for [...] highlight-style to include FILE (Mauro Bieg, # 4095). Clearer deprecation warning for [...] latexmathml, [...] asciimathml, -m. Previously we only mentioned [...] latexmathml, even if -m was used. Changelog: fix description of lua filters in 2. 0 release (Albert Krewinkel). Lua filters were initially run after conventional (JSON) filters. However, this was changed later to make it easier to deal with files in the mediabag. The changelog is updated to describe that feature of the 2. 0 release correctly. Change Generic JSON instances to TemplateHaskell (Jasper Van der Jeugt, # 4085). This reduces compile time and memory usage significantly. lua-filters. md: Added tikz filter example. Create alternative zip file for macOS binaries. Create alternative zip file for Windows binaries. Update INSTALL. md since we now provide zips for binaries. Relax [URL] dependency (Justus Sagemüller, # 4084). Add epub. md, getting-started. md to docs. These used to live in the website repo. Add packages target to Makefile. Bump bounds for binary, [URL] tasty-huni...|$|E
40|$|Added jats as {{an input}} format. Add Text. Pandoc. Readers. JATS, {{exporting}} readJATS (API change) (Hamish Mackenzie). Improved citation handling in JATS reader. JATS citations are now converted to pandoc citations, and JATS ref-lists are {{converted into a}} references field in metadata, suitable for use with pandoc-citeproc. Thus a JATS article with embedded bibliographic information can be processed with pandoc and pandoc-citeproc to produce a formatted bibliography. Allow [...] list-extensions to take an optional FORMAT argument. This lists the extensions set by default for the selected FORMAT. The extensions are now alphabetized, and the + or - indicating the default setting comes before, rather than after, the extension. Markdown reader: Preserve original whitespace between blocks. Recognize as context. Be pickier about table captions. A caption starts with a : which can't be followed by punctuation. Otherwise we can falsely interpret {{the start of a}} fenced div, or even a table header line like : [...] :|: [...] :, as a caption. Always use four space rule for example lists. It would be awkward to indent example list contents to the first non-space character after the label, since example list labels are often long. Thanks to Bernhard Fisseni for the suggestion. Improve raw tex parsing. Note that the Markdown reader is also affected by the latex_macros extension changes described below under the LaTeX reader. LaTeX reader: latex_macros extension changes (# 4179). Don't pass through macro definitions themselves when latex_macros is set. The macros have already been applied. If latex_macros is enabled, then rawLaTeXBlock in Text. Pandoc. Readers. LaTeX will succeed in parsing a macro definition, and will update pandoc's internal macro map accordingly, but the empty string will be returned. Export tokenize, untokenize (API change). Use applyMacros in rawLaTeXBlock, rawLaTeXInline. Refactored inlineCommand. Fix bug in tokenizer. Material following ^^ was dropped if it wasn't a character escape. This only affected invalid LaTeX, so we didn't see it in the wild, but it appeared in a QuickCheck test failure. Fix regression in LateX tokenization (# 4159). This mainly affects the Markdown reader when parsing raw LaTeX with escaped spaces. Add tests of LaTeX tokenizer. Support from babel. Be more tolerant of & character (# 4208). This allows us to parse unknown tabular environments as raw LaTeX. Muse reader (Alexander Krotov) : Parse anchors immediately after headings as IDs. Require that note references does not start with 0. Parse empty comments correctly. Org reader (Albert Krewinkel) : Fix asterisks-related parsing error (# 4180). Support minlevel option for includes (# 4154). The level of headers in included files can be shifted to a higher level by specifying a minimum header level via the :minlevel parameter. E. g. #+include: "tour. org" :minlevel 1 will shift the headers in tour. org such that the topmost headers become level 1 headers. Break-up org reader test file into multiple modules. OPML reader: Enable raw HTML and other extensions by default for notes (# 4164). This fixes a regression in 2. 0. Note that extensions can now be individually disabled, e. g. -f opml-smart-raw_html. RST reader: Allow empty list items (# 4193). More accurate parsing of references (# 4156). Previously we erroneously included the enclosing backticks in a reference ID (# 4156). This change also disables interpretation of syntax inside references, as in docutils. So, there is no emphasis in `my *link*`_. Docx reader: Continue lists after interruption (# 4025, Jesse Rosenthal). Docx expects that lists will continue where they left off after an interruption and introduces a new id if a list is starting again. So we keep track of the state of lists and use them to define a "start" attribute, if necessary. Add tests for structured document tags unwrapping (Jesse Rosenthal). Preprocess Document body to unwrap w:sdt elements (Jesse Rosenthal, # 4190). Plain writer: Don't linkify table of contents. RST writer: Fix anchors for headers (# 4188). We were missing an _. PowerPoint writer (Jesse Rosenthal) : Treat lists inside BlockQuotes as lists. We don't yet produce incremental lists in PowerPoint, but we should at least treat lists inside BlockQuotes as lists, for compatibility with other slide formats. Add ability to force size. This replaces the more specific blockQuote runProp, which only affected the size of blockquotes. We can use this for notes, etc. Implement notes. This currently prints all notes on a final slide. Note that at the moment, there is a danger of text overflowing the note slide, since there is no logic for adding further slides. Implement basic <b>definition</b> <b>list</b> functionality to PowerPoint writer. Don't look for default template file for Powerpoint (# 4181). Add pptx to isTextFormat list. This is used to check standalone and not writing to the terminal. Obey slide level option (Jesse Rosenthal). Introduce tests. Docx writer: Ensure that distArchive is the one that comes with pandoc (# 4182). Previously a reference. docx in /. pandoc (or the user data dir) would be used instead, and this could cause problems because a user-modified docx sometimes lacks vital sections that we count on the distArchive to supply. Org writer: Do not wrap "-" to avoid accidental bullet lists (Alexander Krotov). Don't allow fn refs to wrap to beginning of line (# 4171, with help from Alexander Krotov). Otherwise they can be interpreted as footnote definitions. Muse writer (Alexander Krotov) : Don't wrap note references to the next line (# 4172). HTML writer: Use br elements in line blocks instead of relying on CSS (# 4162). HTML-based templates have had the custom CSS for div. line-block removed. Those maintaining custom templates will want to remove this too. We still enclose line blocks in a div with class line-block. LaTeX writer: Use r with babel (# 4161). This avoids a clash with a deprecated command defined in Babel. Allow fragile=singleslide attribute in beamer slides (# 4169). Use after in headerless tables (# 4207). FB 2 writer: Add cover image specified by cover-image meta (Alexander Krotov, # 4195). JATS writer (Hamish Mackenzie) : Support writing and elements with and inside them by using Divs with class set to one of fig, table-wrap or caption (Hamish Mackenzie). The title is included as a Heading so the constraint on where Heading can occur is also relaxed. Leave out empty alt attributes on links. Deduplicate image mime type code. Make optional in and (# 4178). Self closing tags for empty xref (# 4187). Improve support for code language. Custom writer: Use init file to setup Lua interpreter (Albert Krewinkel). The same init file (data/init) that is used to setup the Lua interpreter for Lua filters is also used to setup the interpreter of custom writers. lua. Define instances for newtype wrapper (Albert Krewinkel). The custom writer used its own ToLuaStack instance definitions, which made it difficult to share code with Lua filters, as this could result in conflicting instances. A Stringify wrapper is introduced to avoid this problem. Added tests for custom writer. Fixed definition lists and tables in data/sample. lua. Fixed regression: when target is PDF, writer extensions were being ignored. So, for example, pandoc -t latex-smart -o file. pdf did not work properly. Lua modules (Albert Krewinkel) : Add pandoc. utils module, to hold utility functions. Create a Haskell module Text. Pandoc. Lua. Module. Pandoc to define the pandoc lua module. Make a Haskell module for each Lua module. Move definitions for the pandoc. mediabag modules to a separate Haskell module. Move sha 1 from the main pandoc module to pandoc. utils. Add function pandoc. utils. hierarchicalize (convert list of Pandoc blocks into (hierarchical) list of Elements). Add function pandoc. utils. normalize_date (parses a date and converts it (if possible) to "YYYY-MM-DD" format). Add function pandoc. utils. to_roman_numeral (allows conversion of numbers below 4000 into roman numerals). Add function pandoc. utils. stringify (converts any AST element to a string with formatting removed). data/init. lua: load pandoc. utils by default Turn pipe, read into full Haskell functions. The pipe and read utility functions are converted from hybrid lua/haskell functions into full Haskell functions. This avoids the need for intermediate _pipe/_read helper functions, which have dropped. pandoc. lua: re-add missing MetaMap function. This was a bug introduced in version 2. 0. 4. Text. Pandoc. Class: Add insertInFileTree [API change]. This gives a pure way to insert an ersatz file into a FileTree. In addition, we normalize paths both on insertion and on lookup. Text. Pandoc. Shared: export blocksToInlines' (API change, Maura Bieg). Text. Pandoc. MIME: Add opus to MIME type table as audio/ogg (# 4198). Text. Pandoc. Extensions: Alphabetical order constructors for Extension. This makes them appear in order in [...] list-extensions. Allow lenient decoding of latex error logs, which are not always properly UTF 8 -encoded (# 4200). Update latex template to work with recent versions of beamer. The old template produced numbered sections with some recent versions of beamer. Thanks to Thomas Hodgson. Updated reference. docx (# 4175). Instead of just "Hello, world", the document now contains exemplars of most of the styles that have an effect on pandoc documents. This makes it easier to see the effect of style changes. Removed default. theme data file (# 4096). It is no longer needed now that we have [...] print-highlight-style. Added stack. lts 9. yaml for building with lts 9 and ghc 8. 0. 2. We still need this for the alpine static linux build, since we don't have ghc 8. 2. 2 for that yet. Removed stack. pkg. yaml. We only really need stack. yaml; we can put flag settings for pandoc-citeproc there. Makefile: Add 'trypandoc' and 'pandoc-templates' targets to make releases easier. MANUAL. txt: Add note on what formats have +smart by default. Use native syntax for custom-style (# 4174, Mauro Bieg). Introduce dedicated Extensions section, since some extensions affect formats other than markdown (Mauro Bieg, # 4204). Clarify default html output for [...] section-divs (Richard Edwards). filters. md: say that Text. Pandoc. JSON comes form pandoc-types. Closes jgm/pandoc-website# 16. epub. md: Delete removed -S option from command (# 4151, Georger Araújo) ...|$|E
50|$|Note {{that the}} <b>definitions</b> <b>listed</b> above are the strict, {{traditional}} definitions, {{which may not}} be followed in common use. For example, formal is often used to mean any of the first four, and informal to indicate what is classified here as casual.|$|R
50|$|Some <b>definitions</b> <b>list</b> sorrel as a self color, used to {{describe}} only horses whose mane, tail, and legs are {{the same color as}} the rest of the coat, with the exception of white markings. Other definitions are broader and include reddish-brown horses with flaxen manes and tails.|$|R
5000|$|A new list element type, the [...] element type, {{were to be}} {{included}} to specifically designate a list as a navigation list. This would have been useful in creating nested menus, which are currently created by {{a wide variety of}} means like nested unordered <b>lists</b> or nested <b>definition</b> <b>lists.</b>|$|R
5000|$|Disability {{discrimination}} act - general <b>definition,</b> and <b>list</b> of acts {{by country}} ...|$|R
50|$|In Spanish, {{the usage}} of latino is {{frequently}} not correlative to its primary usage in the United States. According to the Real Academia Española, the primary use of latino in Spanish is {{to refer to the}} people of the Lazio (Latium) region of Italy. The fifth <b>definition</b> <b>listed</b> is for the grouping of Romance language-speaking people of Europe and the Americas.|$|R
2500|$|All variant <b>definitions</b> are <b>listed</b> in {{the table}} below, so there are 8 volcanoes included: ...|$|R
5000|$|There are no {{globally}} accepted {{definitions of}} AO, but some suggested <b>definitions</b> are <b>listed</b> below: ...|$|R
25|$|Some {{familiar}} collection types, including lists, sets, and multisets, are monads. The <b>definition</b> for <b>lists</b> {{is given}} here.|$|R
3000|$|... [...]) is the {{solution}} space of the multi-objective problem iMTSP. The relevant <b>definitions</b> are <b>listed</b> as follows: [...]...|$|R
3000|$|Some {{special cases}} of the Hermite-based {{generalized}} Apostol-Bernoulli polynomials (some of which are <b>definition)</b> are <b>listed</b> below: [...]...|$|R
50|$|Some {{familiar}} collection types, including lists, sets, and multisets, are monads. The <b>definition</b> for <b>lists</b> {{is given}} here.|$|R
40|$|Bibliography on inert {{ingredients}} used in pesticide productsBibliography on inert (other) {{ingredients in}} pesticide products. Includes {{information from the}} Environmental Protection Agency (<b>definitions,</b> <b>lists</b> of inert ingredients, strategies for risk assessment, disclosure documents); documents on inerts from the Office of the NYS Attorney General; documents from environmental groups, and commentaries on the risk, regulations and policies on inerts. New York State Department of Health and Department of Environmental Conservatio...|$|R
50|$|In epidemiology, a {{clinical}} case definition, {{a clinical}} definition, {{or simply a}} case <b>definition</b> <b>lists</b> the clinical criteria by which public health professionals determine whether a person's illness is included as a case in an outbreak investigation—that is, whether a person is considered directly affected by an outbreak. Absent an outbreak, case definitions {{are used in the}} surveillance of public health in order to categorize those conditions present in a population (e.g., incidence and prevalence).|$|R
30|$|The {{following}} section lists the notation and definitions {{used for the}} remainder of this paper. The notation and definitions in this section match those from the survey paper by Pan [84], if present in both papers, to maintain consistency across both surveys. To provide illustrative examples of the <b>definitions</b> <b>listed</b> below, a machine learning application of software module defect classification is used where a learner is trained to predict whether a software module is defect prone or not.|$|R
2500|$|In an extensional definition, a set member can {{be listed}} {{two or more}} times, for example, {11, 6, 6}. [...] However, per extensionality, two {{definitions}} of sets which differ only in {{that one of the}} <b>definitions</b> <b>lists</b> set members multiple times, define, in fact, the same set. [...] Hence, the set {11, 6, 6} is exactly identical to the set {11, 6}. Moreover, the order in which the elements of a set are listed is irrelevant (unlike for a sequence or tuple). [...] We can illustrate these two important points with an example: ...|$|R
