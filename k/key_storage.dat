184|271|Public
5000|$|Latest {{cryptography}} standards (AES, flashless SHE, elliptical curve cryptography, <b>key</b> <b>storage)</b> ...|$|E
5000|$|... 5. An {{overview}} of <b>key</b> <b>storage</b> and storage security concepts {{as well as}} information on the associated risks ...|$|E
5000|$|... 2010 — MIFARE SAM AV2 is {{introduced}} as secure <b>key</b> <b>storage</b> for readers AES, Triple DES, PKI Authentication.|$|E
5000|$|PKCS #5. RSA {{standard}} that governs password-based cryptography, for example to encrypt private <b>keys</b> for <b>storage.</b>|$|R
5000|$|... {{providing}} protected or {{read-only memory}} by setting <b>storage</b> <b>keys,</b> ...|$|R
5000|$|Optimize {{metadata}} storage (e.g. encapsulated, database or <b>key</b> value <b>storage)</b> and caching/indexing (when authoritative metadata is encapsulated {{with the}} metadata inside the object) independently {{from the data}} storage (e.g. unstructured binary storage) ...|$|R
50|$|The KSV-21 Enhanced Crypto Card is a US National Security Agency-approved PC {{card that}} {{provides}} Type 1 encryption functions and <b>key</b> <b>storage</b> to the STE secure telephones and other devices.|$|E
5000|$|Networking {{features}} with 64-bit support including Wind River MACsec, Wind River’s {{implementation of}} IEEE 802.1A, Point-to-Point Protocol (PPP) over L2TP, PPP over virtual {{local area network}} (VLAN) and Diameter secure <b>key</b> <b>storage</b> ...|$|E
5000|$|A secure <b>key</b> <b>storage</b> {{to support}} OpenPGP (popular with individuals) and S/MIME (popular with businesses) email {{encryption}} standards. Nitrokey {{can also be}} used with various 3rd party applications such as TrueCrypt and VeraCrypt for disk encryption.|$|E
40|$|Abstract:- We {{propose a}} hash-chain based {{authentication}} management protocol, {{which is an}} integrated solution to achieve (i) self-organization and (ii) low computational complexity, for MANETs. We introduce a propagated trust relation model. Under this model, we propose fully self-organized procedures of key chain generation, <b>key</b> chain <b>storage,</b> <b>key</b> chain renewal, key chain distribution and key chain revocation. Our protocol {{does not require a}} centralized security infrastructure, even in the initialization phase during the formation of the network...|$|R
5000|$|... {{initializing}} the CAW {{with the}} <b>storage</b> <b>key</b> and {{the address of}} the first CCW ...|$|R
5000|$|Binding encrypts data using TPM bind key, {{a unique}} RSA key descended from a <b>storage</b> <b>key.</b>|$|R
50|$|Hardware {{security}} {{as a discipline}} originated out of cryptographic engineering and involves hardware design, access control, secure multi-party computation, secure <b>key</b> <b>storage,</b> ensuring code authenticity, measures {{to ensure that the}} supply chain that built the product is secure among other things.|$|E
50|$|Software-based full memory {{encryption}} {{is similar}} to CPU-based <b>key</b> <b>storage</b> since key material is never exposed to memory, but is more comprehensive since all memory contents are encrypted. There are multiple academic papers describing methods of encrypting memory {{and at least one}} commercial product from PrivateCore.|$|E
50|$|These PUFs {{are present}} in all ICs having SRAM memory on board. Several {{research}} papers explore SRAM-based PUF technology {{on topics such as}} behavior, implementation, or application for anti-counterfeiting purposes. Several of these further permit the implementation of secure secret <b>key</b> <b>storage</b> without storing the key in digital form.|$|E
30|$|To {{improve the}} {{resilience}} of the random keys scheme in against node capture attacks, random pairwise keys schemes have been proposed [3, 4], in which a key is shared by two sensors only. These schemes have good resilience against node capture attacks since the compromise of a sensor only affects the links incident to that sensor. The difference between [3] and [4] is that sensors in [3] are paired based on ids while in [4] are on virtual grid locations. Similar to the random keys schemes, random pairwise keys schemes do not scale well to large sensor networks. Neither do they have good key-sharing probability due to {{the conflict between the}} high <b>keying</b> <b>storage</b> redundancy requirement and the memory constraint.|$|R
5000|$|Hibernation is {{a threat}} to the use of an {{encryption}} key. When an encryption key is loaded into RAM and the machine is hibernated at that time, all memory, including the encryption key, is stored on the harddisk (outside of the encryption <b>key's</b> safe <b>storage</b> location).|$|R
5000|$|Power offPoOps initiates {{an orderly}} {{power-off}} sequence. Although {{the contents of}} storage are preserved, the associated <b>storage</b> <b>keys</b> may be lost.|$|R
5000|$|Windows DNS Server [...] {{component}} of Microsoft DNS. The same software can be configured to support authoritative, recursive and hybrid mode. The software is integrated with Active Directory {{which makes it}} the default DNS software for many enterprise networks {{that are based on}} Active Directory. It also allows creating zones by the standard DNS zone file. The software comes packaged as a role in windows server. The server software is shipped with a cmdline interface dnscmd, a DNS management GUI wizard, and a DNS PowerShell package. In Windows Server 2012, the Windows DNS added support for DNSSEC, with full-fledged online signing, with Dynamic DNS and NSEC3 support, along with RSASHA and ECDSA signing algorithms. It provides an inbuilt <b>key</b> <b>storage</b> provider and support for any third party CNG compliant <b>key</b> <b>storage</b> provider. User interface and PowerShell support for managing DNS and DNSSEC were improved as well.In the Windows Server 2016, the DNS Server supports DNS policies using which the admins can have more control over the name resolution process.|$|E
5000|$|Most {{implementations}} of SSL {{assume that}} the client computer is a secure environment for key negotiation, <b>key</b> <b>storage,</b> and encryption. This is untrue in principle and in practice, as malicious technologies such as Spyware, KeyJacking, and Man in the Browser {{have proven to be}} able to circumvent SSL by obtaining sensitive data prior to encryption. [...] Furthermore, the reliance on the host PC for PKI certificate validation renders the infrastructure vulnerable to man-in-the-middle attacks.|$|E
5000|$|An {{approach}} to mitigating the cold boot attack {{is known as}} [...] "frozen cache" [...] (sometimes known as [...] "cache as RAM"), which disables the CPU's L1 cache and uses it for <b>key</b> <b>storage.</b> Disabling the CPU cache in this manner is disastrous for performance {{to the point that}} early experiments appear to indicate such a system would be too slow to be usable for most purposes. Multicore CPUs may mitigate this issue, since only one core would need to have its cache disabled, but it appears examination of this approach has stalled.|$|E
40|$|What {{does the}} user {{get out of}} it? – Unclassified keys: • This allows the {{receiver}} to remain unclassified even after keying. – OverTheAir Rekeying (OTAR) capability: • This simplifies <b>key</b> distribution, <b>storage,</b> expiration and disposal issues and helps to maintain Precise Positioning Service (PPS) for isolated terminals...|$|R
50|$|Construction of {{the nearby}} Pok Fu Lam Reservoir—the first <b>key</b> water <b>storage</b> {{facility}} in the colony—was finished in 1863. In order to accomplish this, the streams flowing from the mountains that {{are the source of}} the waterfall were dammed. This greatly reduced the flow intensity of the waterfall.|$|R
50|$|Nokia Xseries (stands for Xpress) is {{more for}} younger users. Most of the phones {{included}} in the line are feature phones and smartphones that include features focusing social entertainment and music with special dedicated <b>keys,</b> inbuilt <b>storage</b> and other facilities. It succeeded the Nokia XpressMusic brand of phones.|$|R
5000|$|The KOV-14 Fortezza Plus is a US National Security Agency-approved PC card which {{provides}} encryption functions and <b>key</b> <b>storage</b> to the Secure Terminal Equipment and other devices. [...] It is a tamper-resistant module {{based on the}} Mykotronx Krypton chip, including all of the cryptographic functionality of the original Fortezza card plus the Type 1 algorithms/protocols BATON and Firefly, the SDNS signature algorithm, and the STU-III protocol. It was developed by Mykotronx {{as part of the}} NSA's MISSI program. As of 2008, the KOV-14 is beginning to be phased out and replaced by the backwards compatible KSV-21 PC card.|$|E
50|$|Windows Vista {{features}} an update to the Crypto API known as Cryptography API: Next Generation (CNG). It has better API factoring {{to allow the}} same functions to work using {{a wide range of}} cryptographic algorithms, and the inclusion of a number of newer algorithms {{that are part of the}} National Security Agency (NSA) Suite B. It is also flexible, featuring support for plugging in custom cryptographic APIs into the CNG runtime. However, CNG <b>Key</b> <b>Storage</b> Providers still do not support symmetric keys. CNG works in both user and kernel mode, and also supports all of the algorithms from the CryptoAPI. The Microsoft provider that implements CNG is housed in Bcrypt.dll.|$|E
5000|$|Several senior Hamas {{military}} commanders and politburo members were killed, {{as well as}} approximately 50 explosives experts. Hamas experienced [...] "widespread desertion" [...] {{in the face of}} the Israeli advance. Hamas also lost a very large amount of weaponry and equipment; <b>key</b> <b>storage</b> facilities were discovered under mosques and public buildings. A former Shin Bet deputy director who co-authored a report on the war noted, [...] "Hamas had planned to stand and fight, but the Iz al-Qassam Brigades proved unequal to the task ... and consequently they failed to match the public image Hamas has tried so hard to present of stalwart, proficient Islamic warriors." ...|$|E
50|$|It is {{generally}} not advisable to use this method of memory protection where adequate facilities exist on a CPU, as this takes valuable processing power from the computer. However, it {{is generally}} used for debugging and testing purposes to provide an extra fine level of granularity to otherwise generic storage violations and can indicate precisely which instruction is attempting to overwrite the particular section of storage which may have the same <b>storage</b> <b>key</b> as unprotected <b>storage.</b>|$|R
30|$|The private {{template}} scheme, {{based on}} iris, was proposed by Davida et al. [77, 78] {{in which the}} biometric template itself (or a hash value of it) serves as a secret <b>key.</b> The <b>storage</b> of helper data which are error correction check bits are required to correct faulty bits of given iris-codes.|$|R
40|$|The <b>key</b> to <b>storage</b> {{manageability}} is adaptation. In traditional storage systems, adaptation {{is performed}} by a human administrator, who must assess problems, and then manually adjust various knobs and levers to bring {{the behavior of the}} system back to an acceptable level. Future storage systems must themselves adapt, and in doing so, reduce the need for manual intervention...|$|R
50|$|A secure <b>key</b> <b>storage</b> device can be {{used for}} {{authentication}} in consumer electronics, network authentication, license management, supply chain management, etc. Generally the device to be authenticated needs some sort of wireless or wired digital connection to either a host system or a network. Nonetheless, the component being authenticated need not be electronic in nature as an authentication chip can be mechanically attached and read through a connector to the host e.g. an authenticated ink tank for use with a printer. For products and services that these secure coprocessors can be applied to, they can offer a solution that can be much more difficult to counterfeit than most other options {{while at the same time}} being more easily verified.|$|E
50|$|Key {{distribution}} and <b>key</b> <b>storage</b> are more problematic {{in the cloud}} due to the transitoriness of the agents on it. Secret sharing {{can be used to}} store keys at many different servers on the cloud. In secret sharing, a secret is used as a seed to generate a number of distinct secrets, and the pieces are distributed so that some subset of the recipients can jointly authenticate themselves and use the secret information without learning what it is. But rather than store files on different servers, the key is parceled out and its secret shares stored at multiple locations in a manner that a subset of the shares can regenerate the key.|$|E
5000|$|... cryptlib {{provides}} other capabilities including full X.509/PKIX certificate handling (all X.509 versions from X.509v1 to X.509v4) {{with support}} for SET, Microsoft AuthentiCode, Identrus, SigG, S/MIME, SSL, and Qualified certificates, PKCS #7 certificate chains, handling of certification requests and CRLs (certificate revocation lists) including automated checking of certificates against CRLs and online checking using RTCS and OCSP, and issuing and revoking certificates using CMP and SCEP. It also implements {{a full range}} of certification authority (CA) functions provides complete CMP, SCEP, RTCS, and OCSP server implementations to handle online certificate enrolment/issue/revocation and certificate status checking. Alongside the certificate handling, it provides a sophisticated <b>key</b> <b>storage</b> interface that allows the use {{of a wide range of}} key database types ranging from PKCS #11 devices, PKCS #15 key files, and PGP/OpenPGP key rings through to commercial-grade RDBMS' and LDAP directories with optional SSL protection.|$|E
50|$|The Nokia Xseries {{is a line}} {{of mobile}} phones from Nokia {{introduced}} in September 2009 as the successor of the XpressMusic series. It was targeted towards a young audience, and are more focused on music and entertainment with special dedicated <b>keys,</b> inbuilt <b>storage</b> and other facilities. The X2-02, released in January 2012, was the last handset of the series.|$|R
40|$|Due to the {{hierarchical}} structure and syntactic flexibility of XML, mining keys from XML data {{is a more}} complex and difficult task than from relational databases. In discovering keys from XML data there are some challenges in practice such as unclearness of <b>keys,</b> <b>storage</b> of enormous <b>keys,</b> efficient mining algorithms, etc. In this paper, in order {{to fill the gap}} between theory and practice, we propose a novel approximate measure of the support and confidence for XML keys {{on the basis of the}} number of null values on key paths. In the mining process, inference rules are used to derive new keys. Through the two-phase reasoning, a target set of approximate keys and its reduced set are obtained. Our research conducted experiments over ten benchmark XML datasets from XMark and four files in the UW XML Repository. The results show that the approach is feasible and efficient, with which effective keys in various XML data can be discovered...|$|R
50|$|Because {{of these}} {{properties}} PUFs {{can be used}} as a unique and untamperable device identifier. PUFs can also be used for secure <b>key</b> generation and <b>storage</b> as well as for a source of randomness.|$|R
