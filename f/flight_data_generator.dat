0|5904|Public
40|$|Abstract Currently, {{there are}} very few {{programs}} with the capability to create synthetic, but realistic data. This kind of data is useful for testing and evaluating data mining and data matching systems without endangering the rights of actual persons. This paper is a report on efforts to expand upon an existing <b>data</b> <b>generator</b> program such that it can then produce temporal or longitudinal data, i. e. data that follows some timebased or time-related pattern. At the Research School of Computer Science (RSCS) at the Australian National University (ANU), a flexible <b>data</b> <b>generator</b> has been developed for the creation of synthetic personal information. It is for this <b>data</b> <b>generator</b> that the module for longitudinal data generation is created. With this prototype, the <b>data</b> <b>generator</b> can then create personal data that reflects time-related trends, such as credit history, address changes, and transaction records. Keeping true to the programming of the <b>data</b> <b>generator,</b> the longitudinal <b>data</b> <b>generator</b> has been developed using the Python programming language...|$|R
40|$|Abstract [...] Test data {{generation}} {{is basically the}} process of identifying a set of data which satisfy the criteria set for testing. Lot of research have been done by many researchers and they developed many test <b>data</b> <b>generators</b> like random test <b>data</b> <b>generators,</b> symbolic test <b>data</b> <b>generators</b> and dynamic test <b>data</b> <b>generators.</b> This paper applied the optimization study of the test case generation based on the Genetic Algorithm and generates test cases which are far more reliable. 4. [REPLACE] New population {{generation is}} replaced. 5. [TEST] If the specified condition is satisfied stop and return the solution [1]. Keywords [...] Test case generation, Genetic Algorithms, fitness functions, optimizatio...|$|R
40|$|All <b>Flight</b> Analysis <b>data</b> {{products}} were successfully generated and {{delivered to the}} 45 SW in time to support the launch. The IV&V effort allowed <b>data</b> <b>generators</b> to work through issues early. Data consistency proved through the IV&V process provided confidence that the delivered data was of high quality. Flight plan approval was granted for the launch. The test flight was successful and had no safety related issues. The flight occurred within the predicted flight envelopes. Post flight reconstruction results verified the simulations accurately predicted the FTV trajectory...|$|R
40|$|DRAFT <b>Data</b> about <b>flight</b> is {{critical}} to the operation of the NAS and to the development of application systems that use <b>flight</b> <b>data</b> and <b>flight</b> <b>data</b> structures. Historically, each application system has developed its own view of <b>flight</b> <b>data</b> and its structure. This document reviews a number of flight-based activities in the NAS. It then describes a <b>flight</b> <b>data</b> model, created with the ERwin relational data modeling product. The model is proposed as a common view of <b>flight</b> <b>data</b> to improve <b>flight</b> <b>data</b> processing and the sharing of <b>flight</b> <b>data</b> among application systems and among operational decision makers in the NAS. Appendices contain the details of the data model produced from reports of the ERwin <b>flight</b> <b>data</b> model. 09 / 07 / 00 DRAFT i...|$|R
40|$|The Aviation Performance Measuring System (APMS) is a method-embodied in software-that uses {{mathematical}} algorithms {{and related}} procedures to analyze digital <b>flight</b> <b>data</b> extracted from aircraft <b>flight</b> <b>data</b> recorders. APMS {{consists of an}} integrated set of tools used to perform two primary functions: a) <b>Flight</b> <b>Data</b> Importation b) <b>Flight</b> <b>Data</b> Analysis...|$|R
5000|$|... foomatic-db-hpijs: Foomatic XML <b>data</b> <b>generators</b> for HP's HPIJS driver.|$|R
5000|$|Pathwise test <b>data</b> <b>generators</b> require two inputs {{from the}} user: ...|$|R
40|$|The Lander Trajectory Reconstruction (LTR) {{computer}} {{program is a}} tool for analysis of the planetary entry trajectory and atmosphere reconstruction process for a lander or probe. The program {{can be divided into}} two parts: (1) the <b>data</b> <b>generator</b> and (2) the reconstructor. The <b>data</b> <b>generator</b> provides the real environment in which the lander or probe is presumed to find itself. The reconstructor reconstructs the entry trajectory and atmosphere using sensor data generated by the <b>data</b> <b>generator</b> and a Kalman-Schmidt consider filter. A wide variety of vehicle and environmental parameters may be either solved-for or considered in the filter process...|$|R
5000|$|Test <b>Data</b> <b>Generators</b> {{based on}} their {{approaches}} are typically classified into ...|$|R
40|$|Abstract — <b>Flight</b> <b>Data</b> Recorders (Black Boxes) {{generate}} {{data that}} is collected on an embedded memory device. A well-known difficulty with these devices {{is that the}} embedded memory device runs out of space. The worry of getting into this problematical situation compels the software of the <b>flight</b> <b>data</b> recorder to operate in a watchful mode- it constantly makes efforts to minimize the use of memory space; otherwise a larger <b>flight</b> <b>data</b> recorder will be needed; however a larger <b>flight</b> <b>data</b> recorder can be very problematic because <b>flight</b> <b>data</b> recorders have very rigorous requirements; therefore an enlargement is very expensive and costly. In this paper it is suggested to send the data to a remote cloud, so the <b>flight</b> <b>data</b> recorder memory device will be in actual fact unbounded...|$|R
40|$|Generating {{data sets}} for the {{performance}} testing of database systems on a particular hardware configuration and application domain is a very time consuming and tedious process. It is time consuming, {{because of the large}} amount of data that needs to be generated and tedious, because new <b>data</b> <b>generators</b> might need to be developed or existing once adjusted. The difficulty in generating this data is amplified by constant advances in hardware and software that allow the testing of ever larger and more complicated systems. In this paper, we present an approach for rapidly developing customized <b>data</b> <b>generators.</b> Our approach, which is based on the Parallel <b>Data</b> <b>Generator</b> Framework (PDGF), deploys a new concept of so called meta generators. Meta generators extend the concept of column-based generators in PDGF. Deploying meta generators in PDGF significantly reduces the development effort of customized <b>data</b> <b>generators,</b> it facilitates their debugging and eases their maintenance. 1...|$|R
40|$|Abstract. We need to {{generate}} {{various kinds of}} XML data for diverse purposes. Existing XML <b>data</b> <b>generators</b> are developed {{to generate}} XML data that is suitable for particular applications, and their functionalities are limited in terms of generating XML data. This paper introduces a new versatile XML <b>data</b> <b>generator</b> called VeXGene that not only improves the drawbacks of existing XML <b>data</b> <b>generators</b> but also adds new data generation functions. For generating XML data, VeXGene uses raw data files and structure definition files. The raw data file is a text file that has user-supplied data. VeXGene can also generate XML data without accessing raw data files...|$|R
40|$|Purpose – Extensive {{enlargement}} {{and safety}} of <b>Flight</b> <b>Data</b> Recorder memory. Design/methodology/approach – Moving the memory of <b>Flight</b> <b>Data</b> Recorders from an internal embedded device to a cloud. Findings – Our implementation has made the embedded memory device of <b>Flight</b> <b>Data</b> Recorder effectively unlimited and hence much more information can be stored. Research limitations/implications – The possibility of a <b>flight</b> <b>data</b> recorder to be damaged or lost in a crash is not so high, but our implementation can be very helpful in cases such as aerial disappearances. Practical implications – Larger and protected memory for <b>Flight</b> <b>Data</b> Recorders. Social implications – Faster finding of reasons for crashes and enabling to take immediate actions so as to remedy the failures. Originality/value – The use of Internet and cellphones in airplanes is nothing special in our time. It is suggested to take this technology for <b>Flight</b> <b>Data</b> Recorders as well...|$|R
5000|$|Private label cards (depending on {{the terms}} of {{agreement}} between the company's financial terminal <b>data</b> <b>generator</b> ...|$|R
40|$|The {{hundreds}} of parameters that are recorded by <b>Flight</b> <b>Data</b> Recorders (FDR) during flight facilitates {{the investigation of}} incidents and also provides the opportunity to use the recorded data to predict future aircraft behaviour. Current researches are oriented {{in the direction of}} data detection responsible for a typical behavior of <b>flight,</b> <b>data</b> reconstruction and <b>flight</b> simulation. This paper presents a mathematical model for aircraft used in <b>flight</b> <b>data</b> interpretation, and an application that can give the graphical representation of any <b>flight</b> <b>data</b> parameter. Also, using a preprocessed data set, application produces a flash animation of the aircraft flight...|$|R
40|$|Abstract—Developing, for example, {{a simple}} booking web service with modern tools {{can be a}} matter of a few weeks work. Testing such a system should not need to take more time than that. Automatically {{generating}} tests from specified properties of the system using the tool QuickCheck provides professional developers with the required test efficiency. But how good is the quality of these automatically generated tests? Do they cover the cases that one would have written in manual tests? The quality depends on the specified properties and <b>data</b> <b>generators</b> and so far there has not been an objective way to evaluate the quality of these QuickCheck generators. In this paper we present a method to assess the quality of QuickCheck test <b>data</b> <b>generators</b> by formulating requirements on them. Using this method we can give feedback to developers of such <b>data</b> <b>generators</b> in an early stage. The method supports developers in improving <b>data</b> <b>generators,</b> which may lead to an increase of the effectiveness in testing while maintaining the same efficiency. I...|$|R
40|$|Over {{the past}} several years, {{airlines}} have initiated or participated {{in a number of}} safety data programs. Each involves collection of voluntary safety reports or the monitoring of <b>flight</b> <b>data.</b> These initiatives grew from recognition that mitigating safety risks requires monitoring a variety of data streams – reports, observations, and <b>flight</b> <b>data.</b> They have spawned technologies within air carriers, including Airline Safety Action Programs (ASAP), Line Operational Safety Audits (LOSA), improved analysis of training and checking data through the Advanced Qualification Program (AQP), and Flight Operational Quality Assurance (FOQA) programs. NASA has supported development of an Aviation Performance Measuring System (APMS) to facilitate development of advanced concepts and prototype software for the analysis of <b>flight</b> <b>data,</b> in order to further FOQA programs toward the proactive management of safety risk. This paper will discuss the functions that can be served by <b>flight</b> <b>data</b> analysis, describe the development of tools for those functions, and review applications of these tools which advance knowledge gained from <b>flight</b> <b>data.</b> Sophisticated and labor-efficient processing and analysis of <b>flight</b> <b>data</b> will play a key role i...|$|R
40|$|Approved {{for public}} release; {{distribution}} in unlimited. Aircraft accident investigation centers upon {{the analysis of}} all available information about the accident flight in the period {{leading up to the}} final catastrophe. Key among the sources of information is data captured and recorded in the <b>flight</b> <b>data</b> recorder and cockpit voice recorder, which are {{often referred to as the}} aircraft "black boxes". For some accidents, this <b>flight</b> <b>data</b> may be lost entirely or partially damaged and largely unusable. The aircraft <b>flight</b> <b>data</b> recorders are the only place where <b>flight</b> <b>data</b> is recorded. This single recording point is a vulnerability to the availability of <b>flight</b> <b>data</b> that can be addressed by creating another place where the data is stored. This thesis examines the feasibility of and discusses the technical framework necessary for a system that transmits <b>flight</b> <b>data</b> from an aircraft to a ground recording station. The focus will be upon the requirements for security and assurance of the information flow, so that the confidentiality, integrity, availability and authenticity of the data are ensured. Civilian, Federal Cyber Service Corps, USAF (Ret...|$|R
40|$|The thesis {{discusses}} {{the basics of}} flight simulation, systems for <b>flight</b> <b>data</b> visualization and management of <b>flight</b> <b>data.</b> The aim {{of the work is}} designing a system for simulator management, providing a capability for displaying and controlling a current state of simulators, <b>flight</b> and navigation <b>data.</b> ...|$|R
40|$|We {{present a}} novel {{counterexample}} generator for the interactive theorem prover Isabelle {{based on a}} compiler that synthesizes test <b>data</b> <b>generators</b> for functional programming languages (e. g. ML, Haskell) from specifications in Isabelle. In contrast to naive type-based test <b>data</b> <b>generators,</b> the smart generators take the preconditions into account and only generate tests that fulfill the preconditions. The smart generators are constructed by a compiler that reformulates the preconditions as logic programs and analyzes them with an enriched mode inference. From this inference, the compiler can construct the desired generators in the functional programming language. Applying these test <b>data</b> <b>generators</b> reduces the number of tests significantly and enables us to find errors in specifications where naive random and exhaustive testing fail...|$|R
40|$|Synthetically {{generated}} {{data has}} always been important for evaluating and understanding new ideas in database research. In this paper, we describe a <b>data</b> <b>generator</b> for generating synthetic complex-structured XML data that allows for {{a high level of}} control over the characteristics of the generated <b>data.</b> This <b>data</b> <b>generator</b> is certainly not the ultimate {{solution to the problem of}} generating synthetic XML data, but we have found it very useful in our research on XML data management, and we believe that it can also be useful to other researchers. Furthermore, we hope that this paper starts a discussion in the XML community about characterizing and generating XML data, and that it may serve as a first step towards developing a commonly accepted XML <b>data</b> <b>generator</b> for our community. ...|$|R
40|$|A {{technique}} for estimating aerodynamic parameters {{in real time}} from <b>flight</b> <b>data</b> without air flow angle measurements is described and demonstrated. The method is applied to simulated F- 16 <b>data,</b> and to <b>flight</b> <b>data</b> from a subscale jet transport aircraft. Modeling results obtained with the new approach using <b>flight</b> <b>data</b> without air flow angle measurements were compared to modeling results computed conventionally using <b>flight</b> <b>data</b> that included air flow angle measurements. Comparisons demonstrated that the new technique can provide accurate aerodynamic modeling results without air flow angle measurements, which are often difficult and expensive to obtain. Implications for efficient flight testing and flight safety are discussed...|$|R
50|$|ASPM data {{fall into}} two categories, airport <b>data</b> and {{individual}} <b>flight</b> <b>data.</b> Airport data give airport capacity and throughput for every 15 minutes, and individual <b>flight</b> <b>data</b> give each airport's individual flight's scheduled and actual gate departure time, runway departure time, runway arrival time and gate arrival time, etc.|$|R
40|$|A parameter-estimation {{algorithm}} {{was used}} to extract the longitudinal aerodynamic derivatives from <b>flight</b> <b>data</b> for the XC- 142 A airplane in a cruise condition. The <b>flight</b> <b>data</b> were the response to a tail-plane doublet input. Results of {{this study showed that}} a set of derivatives were determined which yielded a calculated aircraft response in close agreement with the measured response. This calculated response was in much closer agreement with the <b>flight</b> <b>data</b> than the response obtained by using derivatives which were calculated from empirical methods. There were large differences between some of the important derivatives extracted from <b>flight</b> <b>data</b> and those calculated from empirical methods. The reasons for these differences were not identified. Prepared at Langley Research Center. Cover title. Bibliography: p. 11. A parameter-estimation algorithm {{was used to}} extract the longitudinal aerodynamic derivatives from <b>flight</b> <b>data</b> for the XC- 142 A airplane in a cruise condition. The <b>flight</b> <b>data</b> were the response to a tail-plane doublet input. Results of this study showed that a set of derivatives were determined which yielded a calculated aircraft response in close agreement with the measured response. This calculated response was in much closer agreement with the <b>flight</b> <b>data</b> than the response obtained by using derivatives which were calculated from empirical methods. There were large differences between some of the important derivatives extracted from <b>flight</b> <b>data</b> and those calculated from empirical methods. The reasons for these differences were not identified. Mode of access: Internet. System requirements: Adobe Acrobat Reader. Mode of access: World Wide Web...|$|R
40|$|This {{document}} {{presents the}} methods of preprocessing <b>flight</b> <b>data.</b> The <b>data</b> acquired during <b>flight</b> test contain <b>data</b> spikes and- noise, due to various reasons and requires processing. of data to remove spikes and noise before they are used for any analysis. For this purpose a finite difference method for editing the <b>flight</b> <b>data</b> 'to remove the spikes and Fast Fourier Transfort (FFT) method for filtering the <b>flight</b> <b>data</b> to remove the noise have been used. A software package "PREVRD' incorporating these methods has been developed. The spectral analysis via FFT to select cut-off frequency for filtering has also been incorporated in the PREPRO. The package is validated. using test example and is used successfully for processing PRITHVI post <b>flight</b> <b>data...</b>|$|R
40|$|This book {{focuses on}} {{different}} facets of <b>flight</b> <b>data</b> analysis, including the basic goals, methods, and implementation techniques. As mass <b>flight</b> <b>data</b> possesses the typical characteristics of time series, the {{time series analysis}} methods and their application for <b>flight</b> <b>data</b> have been illustrated from several aspects, such as data filtering, data extension, feature optimization, similarity search, trend monitoring, fault diagnosis, and parameter prediction, etc. An intelligent information-processing platform for <b>flight</b> <b>data</b> has been established to assist in aircraft condition monitoring, training evaluation and scientific maintenance. The book {{will serve as a}} reference resource for people working in aviation management and maintenance, as well as researchers and engineers in the fields of data analysis and data mining...|$|R
40|$|For a high {{performance}} fighter aircraft, extensive flight testing {{is required to}} be carried out for flight envelope expansion and certification. The gathered <b>flight</b> <b>data</b> is used for a variety of tasks, such as, air data calibration, performance analysis, handling qualities evaluation, model identification, aero database update and so on. The <b>flight</b> <b>data</b> management task becomes even more arduous in view of the large number of flight conditions, maneuvers and store configurations to be test flown. On top of that, flight testing is carried out with a number of prototypes, which adds to the complexity. <b>Flight</b> <b>data</b> received from different sources need to be time synchronized and processed for maneuver extraction. It therefore becomes necessary to arrange and streamline the vast amount of <b>flight</b> test <b>data</b> in a suitable format that would enable the analyst to retrieve the data according to his requirements. A quick and easy access to <b>flight</b> <b>data,</b> to extract relevant information for the task at hand, is therefore highly desirable. All this can be achieved only through a well designed Automated <b>Flight</b> <b>Data</b> Management System (AFDMS) ...|$|R
40|$|A {{study was}} {{conducted}} to correlate Apollo ablation and thermal response <b>flight</b> <b>data</b> using advanced state-of-the-art analytical procedures. The agreement between <b>flight</b> <b>data</b> and predictions is consistently excellent for in-depth temperature distributions, char density profiles, and surface ablation, thus validating the analytical procedures...|$|R
30|$|Nowadays {{a number}} of {{software}} packages support CityGML, from <b>data</b> <b>generators</b> to visualisers. In this section they are overviewed considering their ADE support.|$|R
40|$|The aim of {{this thesis}} is to {{research}} the current possibilities and limitations of automatic generation of synthetic XML and JSON documents used {{in the area of}} Big Data. The first part of the work discusses the properties of the most used XML <b>data</b> <b>generators,</b> Big <b>Data</b> and JSON <b>generators</b> and compares them. The next part of the thesis proposes an algorithm for data generation of semistructured data. The main focus of the algorithm is on the parallel execution of the generation process while preserving the ability to control the contents of the generated documents. The <b>data</b> <b>generator</b> can also use samples of real data in the generation of the synthetic data and is also capable of automatic creation of simple references between JSON documents. The last part of the thesis provides the results of experiments with the <b>data</b> <b>generator</b> exploited for the purpose of testing database MongoDB, describes its added value and compares it to other solutions. Powered by TCPDF (www. tcpdf. org...|$|R
40|$|Turbulent CFD {{simulations}} {{are compared}} against surface temperature {{measurements of the}} space shuttle orbiter windward tiles at reentry flight conditions. Algebraic turbulence models are used within both the LAURA and DPLR CFD codes. The <b>flight</b> <b>data</b> are from temperature measurements obtained by seven thermocouples during the STS- 128 mission (September 2009). The <b>flight</b> <b>data</b> indicate boundary layer transition onset over the Mach number range 13. 5 { 15. 5, depending upon the location on the vehicle. But the boundary layer flow appeared to be transitional down through Mach 12, based upon the <b>flight</b> <b>data</b> and CFD trends. At Mach 9 the simulations match the <b>flight</b> <b>data</b> on average within 20 F/ 11 C, where typical surface temperatures were approximately 1600 F/ 870 C...|$|R
40|$|This paper {{presents}} a synthetic <b>data</b> <b>generator</b> that outputs timestamped transactional data with embedded temporal patterns {{controlled by a}} set of input parameters. In particular, calendar schema, which is determined by a hierarchy of input time granularities, is used as a framework of possible temporal patterns. An example of calendar schema is (year, month, day), which provides a framework for calendar-based temporal patterns of the form - 38352, where each is either an integer or the symbol. For example, is such a pattern, which corresponds to the time intervals consisting of all the 16 th days of all months in year 2000. This paper also evaluates the <b>data</b> <b>generator</b> through a series of experiments. The synthetic <b>data</b> <b>generator</b> is intended to provide support for data mining community in evaluating various aspects (especially the temporal aspects and the scalability) of data mining algorithms...|$|R
25|$|Data {{obtained}} from the aircraft's <b>flight</b> <b>data</b> recorder.|$|R
40|$|The {{results of}} flight path {{reconstruction}} using UD factorization-based Kalman filtering algorithm are presented. The algorithm was implemented using PC-MATLAB functions and validated for simulated {{as well as}} real <b>flight</b> <b>data.</b> It is of considerable relevance to analysis of aircraft accident <b>data</b> and general <b>flight</b> <b>data</b> for aerospace vehicles...|$|R
40|$|Abstract. The {{purpose of}} this {{research}} is to estimate the dimensional stability derivatives in linear dynamic model of a fixed-wing model-scale unmanned aerial vehicle (UAV) by real <b>flight</b> <b>data</b> logged by an onboard flight computer. The paper described the experimental setup, operation procedure of raw <b>flight</b> <b>data,</b> process of nonlinear least squares estimation, and cause-effect examination of impulse responses. The simulation-based results of the estimated model indicated a very good accuracy with real <b>flight</b> <b>data.</b> The linear longitudinal and lateral models are very helpful for designing the stability-augmentation system or autopilot for the UAV...|$|R
40|$|A {{method for}} {{identifying}} global aerodynamic models from <b>flight</b> <b>data</b> in an efficient manner is explained and demonstrated. A novel experiment design technique {{was used to}} obtain dynamic <b>flight</b> <b>data</b> over a range of flight conditions with a single flight maneuver. Multivariate polynomials and polynomial splines were used with orthogonalization techniques and statistical modeling metrics to synthesize global nonlinear aerodynamic models directly and completely from <b>flight</b> <b>data</b> alone. Simulation <b>data</b> and <b>flight</b> <b>data</b> from a subscale twin-engine jet transport aircraft were used to demonstrate the techniques. Results showed that global multivariate nonlinear aerodynamic dependencies could be accurately identified using <b>flight</b> <b>data</b> from a single maneuver. Flight-derived global aerodynamic model structures, model parameter estimates, and associated uncertainties were provided for all six nondimensional force and moment coefficients for the test aircraft. These models were combined with a propulsion model identified from engine ground test data to produce a high-fidelity nonlinear flight simulation very efficiently. Prediction testing using a multi-axis maneuver showed that the identified global model accurately predicted aircraft responses...|$|R
