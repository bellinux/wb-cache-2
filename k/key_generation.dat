1646|407|Public
25|$|There {{are several}} iOS and Android OpenPGP-compliant {{applications}} such as iPGMail for iOS and OpenKeychain for Android, which enable <b>key</b> <b>generation</b> and encryption/decryption of email and files on Apple's iOS and Google's Android.|$|E
25|$|A GSM {{transmission}} is organised as sequences of bursts. In a typical channel {{and in one}} direction, one burst is sent every 4.615 milliseconds and contains 114 bits available for information. A5/1 is used to produce for each burst a 114 bit sequence of keystream which is XORed with the 114 bits prior to modulation. A5/1 is initialised using a 64-bit key together with a publicly known 22-bit frame number. Older fielded GSM implementations using Comp128v1 for <b>key</b> <b>generation,</b> had 10 of the key bits fixed at zero, resulting in an effective key length of 54 bits. This weakness was rectified {{with the introduction of}} Comp128v2 which yields proper 64 bits keys. When operating in GPRS / EDGE mode, higher bandwidth radio modulation allows for larger 348 bits frames, and A5/3 is then used in a stream cipher mode to maintain confidentiality.|$|E
2500|$|In {{order to}} reduce {{encryption}} or signature-verification time, {{it is useful to}} use a small public exponent (...) [...] In practice, common choices for [...] are 3, 17 and 65537 [...] These values for e are Fermat primes, sometimes referred to as [...] and [...] respectively [...] They are chosen because they make the modular exponentiation operation faster. Also, having chosen such , it is simpler to test whether [...] and [...] while generating and testing the primes in step 1 of the <b>key</b> <b>generation.</b> Values of [...] or [...] that fail this test can be rejected there and then. (Even better: if e is prime and greater than 2 then the test [...] can replace the more expensive test [...]) ...|$|E
40|$|The {{probabilistic}} model of <b>keys</b> <b>generation</b> of QKD systems is proposed. The model includes {{all phases of}} <b>keys</b> <b>generation</b> starting from photons generation to states detection taking characteristics of fiber-optics components into account. The paper describes the tree of events of QKD systems. Equations are found for estimation {{of the effectiveness of}} the process of sifted <b>keys</b> <b>generation</b> as well as for bit-error probability and for the rate of private <b>keys</b> <b>generation.</b> Comment: 4 pages, 1 figur...|$|R
40|$|The present work {{deals with}} modern {{computing}} systems security issues, focusing on biometric based asymmetric <b>keys</b> <b>generation</b> process. Conventional PKI systems {{are based on}} private/public keys generated through RSA or similar algorithms. The present solution embeds biometric information on the private/public <b>keys</b> <b>generation</b> process. In addition the corresponding private key depends on physical or behavioural biometric features {{and it can be}} generated when it is needed. Starting from fingerprint acquisition, the biometric identifier is extracted, cyphered, and stored in tamper-resistant smartcard to overcome the security problems of centralized databases. Biometric information is then used for user authentication and for public/private <b>keys</b> <b>generation.</b> The initial trials have shown that the asymmetric <b>keys</b> <b>generation</b> distinctive power depends on biometric authentication accuracy, assuring unique asymmetric keys for each authenticated user...|$|R
40|$|Abstract. The paper designs {{an image}} {{security}} system. It includes four parts: <b>keys</b> <b>generation,</b> permutation, diffusion and decryption. Using six decimal numbers as the key, {{it can get}} three new keys: key 1, key 2 and key 3 from the origin <b>key</b> in <b>keys</b> <b>generation.</b> The permutation used a new chaotic map to shuffles the image pixels by key 1 and key 2. The diffusion used the logistic map to flat the histogram of the ciphered image. The key 3 is {{the parameters of the}} logistic map. The results of simulation show the validity of security system. Analysis shows that it can be used in real-time image encryption applications with high speed...|$|R
5000|$|Distributed <b>key</b> <b>generation</b> (DKG) is an {{encryption}} {{process in}} which multiple parties contribute to the calculation of a shared public and private key set. Unlike most public key encryption models, distributed <b>key</b> <b>generation</b> does not rely on Trusted Third Parties. [...] Instead, the participation of a threshold of honest parties determines whether a key pair can be computed successfully. [...] Distributed <b>key</b> <b>generation</b> prevents single parties from having access to a private key. The involvement of many parties requires Distributed <b>key</b> <b>generation</b> to ensure secrecy {{in the presence of}} malicious contributions to the key calculation.|$|E
50|$|A. Juels and J. Guajardo {{proposed}} a method (KEGVER) through which {{a third party}} can verify RSA <b>key</b> <b>generation.</b> This is devised {{as a form of}} distributed <b>key</b> <b>generation</b> in which the secret key is only known to the black box itself. This assures that the <b>key</b> <b>generation</b> process was not modified and that the private key cannot be reproduced through a kleptographic attack.|$|E
50|$|The {{distributed}} <b>key</b> <b>generation</b> protocol {{specified by}} Gennaro, Jarecki, Krawczyk, and Rabin assumes {{that a group}} of players has already been established by an honest party prior to the <b>key</b> <b>generation.</b> It also assumes the communication between parties is synchronous.|$|E
5000|$|Cryptographic <b>key</b> {{management}} (<b>generation,</b> entry, output, {{storage and}} destruction of keys) ...|$|R
5000|$|Key {{management}} how {{to manage}} cryptographic <b>keys,</b> including <b>generation,</b> exchange and storage.|$|R
5000|$|After the <b>keys</b> <b>generation,</b> the enciphering of [...] is done using GOST 28147-89 in {{the mode}} of simple {{substitution}} on keys [...]Let's denote the enciphering transformation as E (Note: the E transformation enciphers 64-bit data using 256-bit key). For enciphering, the [...] is split into four 64-bit blocks: , and each of these blocks is enciphered as: ...|$|R
5000|$|For encryption, {{decryption}} and <b>key</b> <b>generation,</b> {{the following}} functions: ...|$|E
5000|$|PuTTYgen: an RSA, DSA, ECDSA and EdDSA <b>key</b> <b>generation</b> utility ...|$|E
5000|$|... #Subtitle level 2: Mobile Signature with On Board <b>Key</b> <b>Generation</b> ...|$|E
3000|$|GM generates group session <b>keys,</b> index <b>generation</b> <b>keys,</b> and {{document}} encryption keys {{for each group}} and stores them in a key matching table. In PKIS-II, if a session-change happens, for example of a subgroup g 1 from the first session to the second session, then the group session key is changed from [...]...|$|R
3000|$|TrapGen([...] w, ik [...]). This {{algorithm}} takes {{a keyword}} w and index <b>generation</b> <b>key</b> ik. It encrypts the keyword w with index <b>generation</b> <b>key</b> ik and returns the encryption value, {{which is the}} trapdoor T [...]...|$|R
40|$|The article systematizes {{the basic}} {{scientific}} principles about statistical testing of random and pseudorandom sequences that {{are widely used}} in cryptographic systems for <b>keys</b> <b>generation</b> or forming some additional information (random numbers, initialization vectors and so on). The article includes {{a brief review of}} the known approaches to randomness testing and statistical test suites developed in the last decades. We point out that the perspective research area could be statistical testing multidimensional arrays...|$|R
5000|$|... <b>key</b> <b>generation</b> {{algorithm}} uses iterative constant , i=1,2,…32.Sets {{the shared}} key ….|$|E
50|$|Distributed <b>key</b> <b>generation</b> is {{also useful}} in {{server-side}} password authentication. If password hashes are stored {{on a single}} server, a breach in the server would result in all the password hashes being available for attackers to analyze offline. Variations of distributed <b>key</b> <b>generation</b> can authenticate user passwords across multiple servers and eliminate single points of failure.|$|E
50|$|The RSA {{algorithm}} involves four steps: <b>key</b> <b>generation,</b> key distribution, encryption and decryption.|$|E
30|$|To enable error-tolerant {{searchable}} encryption, we need {{three main}} primitives: the <b>key</b> materials <b>generation,</b> the send request and the receive request.|$|R
40|$|Hierarchical Identity-Based Encryption (HIBE) is a {{generalization}} of identity-based encryption that mirrors an organizational hierarchy, {{and allows the}} root Private Key Generator (PKG) to distribute the workload of <b>key</b> <b>generations</b> to lower-level PKGs. In Indocrypt 2 ̆ 708, Ren and Gu proposed a new HIBE scheme, and claimed that their scheme is fully chosen-ciphertext secure in the standard model. However, by giving a concrete attack, we show that Ren-Gu 2 ̆ 7 s HIBE is even not chosen-plaintext secure...|$|R
40|$|DSA, ?? ????????? ?? ?????? ???????????? ?????????? ???????? ?????. ???????? ??????????? ????????????? ??????????????? ???????. ??????? ?????????? ????????? ??????, ?????????? ????????? ??????? ?? ???? ?????????. ??? ???? ??? ???????? ???????? ??????? ????????. ????????, ?? ???????????? ?????????? ???????? ????? ???????? ??????? ?????????? ?????? ? ???????? ????????. ????????????? ??????????? ????????? ?????????? ????????? ??????? DSA ??????????? ?? ???????? ??????????. The {{modification}} of DSA techniques based on novel application of arithmetic of finite fields are presented. The mathematical {{background of the}} proposed approach is first presented. The techniques of public and secret <b>keys</b> <b>generation,</b> forming and verification of signature based of finite fields arithmetic are described. A numerical example for all mentioned procedures is given. It has been showed that using of finite fields arithmetic may greatly accelerate the processing of DSA signatures. The proposed DSA modification is oriented for hardware implementation...|$|R
50|$|Key {{operations}} include <b>key</b> <b>generation</b> algorithms, key exchange {{agreements and}} {{public key cryptography}} standards.|$|E
5000|$|A <b>key</b> <b>generation</b> {{algorithm}} {{selects a}} key from the key space uniformly at random.|$|E
50|$|Distributed <b>Key</b> <b>Generation</b> is {{commonly}} used to decrypt shared ciphertexts or create group digital signatures.|$|E
40|$|The {{polarization}} phenomenon for {{a single}} source is extended to a framework with multiple correlated sources. It is shown in addition to extracting the randomness of the source, the polar transforms takes the original arbitrary dependencies to extremal dependencies. Polar coding schemes for the Slepian-Wolf problem and for secret <b>key</b> <b>generations</b> are then proposed based on this phenomenon. In particular, constructions of secret keys achieving the secrecy capacity and compression schemes achieving the Slepian-Wolf capacity region are obtained with a complexity of O(n (n)) ...|$|R
40|$|Master's Thesis {{describes}} {{topic of}} intergenerational communication, {{which is important}} part of society. It's goal is to suggest an effective communication strategy on workplace for managers. Each country perceives age differently; therefore the thesis is in general focused on Czech corporate environment. The theoretical part defines the concept of communication, internal communication of companies and communication styles of <b>key</b> <b>generations</b> of the late 20 th century. The practical part includes questionnaire form with both open and closed questions and survey took place in selected organizations, operating in the Czech Republic...|$|R
50|$|During the {{activation}} of Scourges two extra heads with his Cyber <b>Key,</b> a <b>Generation</b> 1 transformation sound can be heard. Scourge was released as a larger Ultra Class toy.|$|R
5000|$|<b>Key</b> <b>generation</b> - This {{algorithm}} {{provides a}} private key {{along with its}} corresponding public key.|$|E
5000|$|Use of secure {{encryption}} methodologies and {{cryptographic key}} operations, including <b>key</b> <b>generation,</b> distribution, loading/injection, administration and usage.|$|E
5000|$|Algorithm. <b>Key</b> <b>Generation</b> for ACE {{encryption}} scheme.Input: a size parameter m , {{such that}} [...]Output: a public/private key pair.|$|E
50|$|The {{methods of}} {{reconciliation}} and <b>key</b> string <b>generation</b> {{depends on the}} specific RLWE-KEX scheme in question. Some method is based on modular arithmetic, while others may be based on high-dimension geometry.|$|R
40|$|In {{this paper}} a new Gray image {{encryption}} system is presented. It {{is based on}} permutation and substitution of image pixels using secret keys in time domain. The system is with multilevel to increase the security and to present an encrypted image with low pixel correlation, high entropy and uniform distributed histogram. The Tinkerbell map, Zaslavsky Map and Arnold Transform are employed in <b>keys</b> <b>generation</b> {{to be used in}} the permutation and substitution process. Test results are done with definite investigation to show that the proposed image encryption is very secure because of its vast key space and robust permutation-diffusion mechanism...|$|R
40|$|Abstract:- We {{propose a}} hash-chain based {{authentication}} management protocol, {{which is an}} integrated solution to achieve (i) self-organization and (ii) low computational complexity, for MANETs. We introduce a propagated trust relation model. Under this model, we propose fully self-organized procedures of <b>key</b> chain <b>generation,</b> <b>key</b> chain storage, key chain renewal, key chain distribution and key chain revocation. Our protocol {{does not require a}} centralized security infrastructure, even in the initialization phase during the formation of the network...|$|R
