438|187|Public
25|$|Most wikis {{offer at}} least a title search, and {{sometimes}} a <b>full-text</b> <b>search.</b> The scalability of the search depends on whether the wiki engine uses a database. Some wikis, such as PmWiki, use flat files. MediaWiki's first versions used flat files, but it was rewritten by Lee Daniel Crocker in the early 2000s (decade) to be a database application. Indexed database access is necessary for high speed searches on large wikis. Alternatively, external search engines such as Google Search can sometimes be used on wikis with limited searching functions {{in order to obtain}} more precise results.|$|E
25|$|Express: SQL Server Express Edition is a scaled down, free {{edition of}} SQL Server, which {{includes}} the core database engine. While there are no limitations {{on the number of}} databases or users supported, it is limited to using one processor, 1 GB memory and 10 GB database files (4 GB database files prior to SQL Server Express 2008 R2). It is intended as a replacement for MSDE. Two additional editions provide a superset of features not in the original Express Edition. The first is SQL Server Express with Tools, which includes SQL Server Management Studio Basic. SQL Server Express with Advanced Services adds <b>full-text</b> <b>search</b> capability and reporting services.|$|E
25|$|Several {{additional}} utilities {{were published}} in the May 1987 issue of Compute!'s Gazette along with SpeedScript 3.2. ScriptRead was developed to identify and preview SpeedScript documents on a disk, with the ability to scratch any files no longer needed. This was an important addition as on a single-drive system there would be no way to save work if the disk became full. SpeedSearch provided <b>full-text</b> <b>search</b> of all SpeedScript documents on a disk, returning a count of how many times the searched word or phrase was used in each document. Date and Time Stamper introduces a program to the disk drive that adds time stamps to files on disk, then executes SpeedScript.|$|E
40|$|Researchers have {{traditionally}} used bibliographic data-bases {{to search out}} information. Today, the full-text of resources is increasingly available for searching, and more researchers are performing <b>full-text</b> <b>searches.</b> This study compares differences {{in the number of}} articles discovered between metadata and <b>full-text</b> <b>searches</b> of the same literature cohort when searching for gene names in two biomedical literature domains. Three re-viewers additionally ranked 100 articles in each domain. Significantly more articles were discovered via full-text searching; however, the precision of <b>full-text</b> <b>searching</b> also is significantly lower than that of metadata search-ing. Certain features of articles correlated with higher relevance ratings. A significant feature measured was the number of matches of the search term in the full-text of the article, with a larger number of matches having a statistically significant higher usefulness (i. e., rele-vance) rating. By using the number of hits of the search term in the full-text to rank the importance of the article, performance of <b>full-text</b> <b>searching</b> was improved so that both recall and precision were as good as or better than that for metadata searching. This suggests that <b>full-text</b> <b>searching</b> alone may be sufficient, and that metadata searching as a surrogate is not necessary...|$|R
5000|$|The current version (1.0.1) cannot perform <b>full-text</b> <b>searches</b> inside {{articles}} of a dictionary. However, finding {{text in the}} currently displayed article is possible.|$|R
40|$|Abstract—Currently, <b>full-text</b> <b>searching</b> {{can benefit}} from the {{emerging}} NoSQL databases and traditional indexing tools in the big data era. However, there are some drawbacks of current solu-tions. On one hand, the indexing documents lack of the hierarchy. On the other hand, big data have become the bottleneck of <b>full-text</b> <b>searching.</b> In the context of big data, we design a <b>full-text</b> <b>searching</b> middleware over hierarchical documents. We discuss the architecture of this middleware in detail. In addition, we propose a structure-independent hierarchical document model to present the hierarchical document. Moreover, the transformation engine is designed to translate the rich files into models. The core log event listener is responsible for capturing the changed documents and push them to the indexing storage at the same time. The experimental results show that our middleware is more advantageous than RDBMS with indexes and RDBMS with Lucene solutions. Index Terms—Full-text searching; middleware; hierarchica...|$|R
5000|$|Lack of full-text indexing, poor {{performance}} on <b>full-text</b> <b>search</b> ...|$|E
50|$|In text retrieval, <b>full-text</b> <b>search</b> {{refers to}} {{techniques}} for searching a single computer-stored document or a collection {{in a full}} text database. <b>Full-text</b> <b>search</b> is distinguished from searches based on metadata or on parts of the original texts represented in databases (such as titles, abstracts, selected sections, or bibliographical references).|$|E
5000|$|Amazon CloudSearch {{provides}} basic <b>full-text</b> <b>search</b> and indexing {{of textual}} content.|$|E
50|$|The search {{function}} enables users to perform <b>full-text</b> <b>searches</b> of approximately 4 million resources from over 900 Australian government web sites, plus government publications held in Australian Libraries.|$|R
40|$|Here {{are some}} search hints: What is searched {{in the general}} keyword search. The word(s) you enter in the search box will be searched against the title, author, subject abstract, series, sponsor and {{identifier}} fields of each item's record. If your site is enabled for <b>full-text</b> <b>searching,</b> the text you entered will also be searched against {{the full text of}} all archived documents. For more information on <b>full-text</b> <b>searching</b> please contact your DSpace Administrator. What is not searched - Stop Words. The search engine ignores certain words that occur frequently in English, but do not add value to the search. These are [...] . ...|$|R
40|$|Phrase {{browsing}} interfaces {{based on}} hierarchies of phrases extracted automatically from document collections offer a useful compromise between automatic <b>full-text</b> <b>searching</b> and manually-created subject indexes. The literature contains descriptions of such systems that many find compelling and persuasive. However...|$|R
50|$|In 1998, {{the company}} {{developed}} support to <b>full-text</b> <b>search</b> email, including attachments.|$|E
5000|$|Online Knowledgebase Free Online Knowledgebase with <b>full-text</b> <b>search</b> {{and export}} as PDF {{functionality}} ...|$|E
5000|$|Osiris {{offers a}} <b>full-text</b> <b>search</b> engine that allows searching across all portals' content.|$|E
5000|$|With {{the help}} of the SQL-based Index Feeder, SkyFS {{supports}} fast metadata and <b>full-text</b> <b>searching</b> similar in concept to WinFS and Spotlight. This allows for instantaneous system-wide searches as well as [...] "search as you type" [...] file browsing.|$|R
40|$|Includes poster {{and written}} description. This poster {{reports on a}} recent {{quantitative}} study of Google Books??? coverage of Hawaiian and Pacific books. A total of 1, 500 books {{were randomly selected from}} the University of Hawai???i at Manoa???s Hawaiian, Pacific, and general stacks collections. Their level of access was then determined in Google Books by observing whether the books had a metadata record, were full-text searchable, and whether they were available in snippet, preview, or full-text views. Results show that Google Books has a sizable number of metadata records for Hawaiian and Pacific books, but has only a limited number available for <b>full-text</b> <b>searching.</b> In contrast, a larger number of books from the general stacks were available for <b>full-text</b> <b>searching...</b>|$|R
40|$|Phrase {{browsing}} interfaces {{based on}} hierarchies of phrases extracted automatically from document collections offer a useful compromise between automatic <b>full-text</b> <b>searching</b> and manually-created subject indexes. The literature contains descriptions of such systems that many find compelling and persuasive. However, evaluation studies have either been anecdotal, or focused on objective {{measures of the}} quality of automatically-extracted index terms, or restricted to questions of computational efficiency and feasibility. This paper reports on an empirical, controlled user study that compares hierarchical phrase browsing with <b>full-text</b> <b>searching</b> over a range of information seeking tasks. Users found the results located via phrase browsing to be relevant and useful but preferred keyword searching for certain types of queries. Users experiences were marred by interface details, including inconsistencies between the phrase browser and the surrounding digital library interface...|$|R
50|$|In March 2016, Espacenet began {{offering}} <b>full-text</b> <b>search</b> through its collection of English, French and German patent documents.|$|E
50|$|A {{database}} of all 4,400 abstracts from conferences since 1969, which permits a <b>full-text</b> <b>search</b> through {{the history of}} environmental psychology.|$|E
50|$|ShareOffice: An on-demand intranet/extranet solution. Features include <b>full-text</b> <b>search,</b> version history, server sync-up, email updates, audit trail/analytics, check-in/check-out, {{multilingual}} user interface.|$|E
40|$|This paper {{compares the}} {{performance}} of three different IMAP servers, each of which uses a different storage mechanism: Cyrus uses a database built on BerkeleyDB, Courier-IMAP uses maildirs, and UW-IMAP uses inbox files. We also use a mySQL database to simulate a relational-database-driven IMAP server. We find that Cyrus and mySQL outperform UW and Courier in most tests, often dramatically beating Courier. Cyrus is particularly efficient at scan operations such as retrieving headers, and it also does particularly well on searches on header fields. UW and Cyrus perform similarly on <b>full-text</b> <b>searches,</b> although Cyrus seems to scale slightly better as {{the size of the}} mailbox grows. mySQL excels at <b>full-text</b> <b>searches</b> and header retrieval, but it performs poorly when deleting messages. In general, we believe that a database system ofirs better email storage facilities than traditional file systems...|$|R
40|$|Current {{peer-to-peer}} (p 2 p) <b>full-text</b> keyword <b>search</b> techniques {{fall into}} the following categories: document-based partitioning, keyword-based partitioning, hybrid indexing, and semantic search. This paper provides a performance evaluation and comparison of these p 2 p <b>full-text</b> keyword <b>search</b> techniques on a dataset with 3. 7 million web pages and 6. 8 million search queries. Our evaluation results {{can serve as a}} guide for choosing the most suitable p 2 p <b>full-text</b> keyword <b>search</b> technique based on given system parameters, such as network size, the number of documents, and the number of queries per second. 1...|$|R
40|$|The Greenstone {{digital library}} {{software}} is an open-source {{system for the}} construction and presentation of information collections. Collections built with Greenstone offer effective <b>full-text</b> <b>searching</b> and metadata-based browsing facilities that are attractive and easy to use. Moreover, they are easily maintainable and can be augmented and rebuilt entirely automatically. The system is extensible: software "plugins" accommodate diffbrent document and metadata types...|$|R
5000|$|This search mode is {{the default}} search system {{implemented}} in most operating systems, word processing systems, many online <b>full-text</b> <b>search</b> interfaces.|$|E
50|$|The <b>full-text</b> <b>search</b> {{functionality}} {{has been}} {{integrated with the}} database engine. According to a Microsoft technical article, this simplifies management and improves performance.|$|E
5000|$|Both InnoDB and MyISAM support <b>full-text</b> <b>search,</b> with InnoDB gaining full-text index {{support in}} MySQL 5.6.4, {{but the results}} can be notably {{different}} ...|$|E
50|$|In {{a library}} catalog {{the words are}} authors, titles, subject headings, etc., and the {{pointers}} are call numbers. Internet search engines (such as Google) and <b>full-text</b> <b>searching</b> help provide access to information but are not as selective as an index, as they provide non-relevant links, and may miss relevant information {{if it is not}} phrased in exactly the way they expect.|$|R
40|$|Innovation is the {{underlying}} foundation of today's competitive economy and technological advancement. There is {{a plethora of}} text mining and visualization tools available on the market to facilitate the innovative process in uncovering "hidden nuggets" of information about emerging technologies. A high-level overview of some key text mining and visualization tools is {{presented in this paper}} to provide a comparison of text mining capabilities, perceived strengths, potential limitations, applicable data sources, and output of results, as applied to chemical, biological and patent information. Examples of tools to be discussed include sophisticated text mining software packages, some simpler <b>full-text</b> <b>searching</b> tools, and a few data visualization tools that could be integrated with the more sophisticated software packages and <b>full-text</b> <b>searching</b> tools. Included are comments on our impressions of applicability of these tools to different types of data sources, perceived strengths, potential limitations, and suggestions as to which user groups may benefit from these tools. Text mining Data visualization tools Patent information Competitive intelligence Intellectual property analysis Review...|$|R
5000|$|Ability {{to perform}} <b>full-text</b> index-based <b>search</b> in Windows Live Mail if Windows Search is {{installed}} ...|$|R
5000|$|Bitext aligners: {{tools that}} align a source text and its {{translation}} which {{can then be}} analyzed using a <b>full-text</b> <b>search</b> tool or a concordancer ...|$|E
50|$|Nextcloud is {{introducing}} new {{features such as}} monitoring capabilities, <b>full-text</b> <b>search</b> and Kerberos authentication as well as audio/video conferencing, expanded Federation and smaller UI improvements.|$|E
5000|$|Built-in rich {{full text}} search functionality, with fast and free use of {{keywords}} and phrases, result snippeting, highlighting, term proximity search and other <b>full-text</b> <b>search</b> options ...|$|E
30|$|In modern web sites, {{the problem}} of {{returning}} relevant content results to end users is addressed by using search engines frameworks. The open source information retrieval software library Apache Lucene [5] is currently used by {{a large number of}} web sites which require a powerful <b>full-text</b> <b>searching</b> mechanism. The same approach can be applied to return results from a registry of web map services.|$|R
40|$|Publisher 2 ̆ 7 s Description: Every page of over 180, 000 titles or 200, 000 volumes {{published}} {{during the}} 18 th Century. With <b>full-text</b> <b>searching</b> of approximately 33 million pages, the product allows researchers {{new methods of}} access to critical information {{in the fields of}} history, literature, religion, law, fine arts, science and more. This resource is based on the English Short Title Catalogue. [URL]...|$|R
40|$|This paper {{describes}} the Greenstone digital library software, a comprehensive, open-source {{system for the}} construction and presentation of information collections. Collections built with Greenstone offer effective <b>full-text</b> <b>searching</b> and metadata-based browsing facilities that are attractive and easy to use. Moreover, they are easily maintainable and can be augmented and rebuilt entirely automatically. The system is extensible: software "plugins" accommodate different document and metadata types...|$|R
