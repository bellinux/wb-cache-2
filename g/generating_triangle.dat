3|174|Public
40|$|This paper {{presents}} a fast algorithm for <b>generating</b> <b>triangle</b> strips from triangulated meshes, providing a compact representation suitable for transmission and {{rendering of the}} models. A data structure that allows efficient triangle strip generation is also described. The method is based on simple heuristics, significantly {{reducing the number of}} vertices used to describe the triangulated models. We demonstrate the effectiveness and speed of our method comparing it against the best available program...|$|E
40|$|In {{order to}} achieve high 3 D {{graphics}} performance in medical applications, {{it is essential to}} use triangle strips because they can greatly speed up the display of triangle meshes. This paper proposes a new approach to <b>generating</b> <b>triangle</b> strips {{on the basis of a}} local multi-criteria analysis of the triangles. The algorithm that is presented in this paper is not only very fast but also easy to implement, and it produces very few triangle strips...|$|E
40|$|The {{switched}} {{reluctance motor}} (SRM) is receiving attention because of its merits: high operating temperature capability, fault tolerance, inherent shoot-through preventing inverter topology, high power density, high speed operation, and small rotor inertia. Rotor position information plays {{a critical role in}} the control of the SRM. Conventionally, separate position sensors, are used to obtain this information. Position sensors add complexity and cost to the control system and reduce its reliability and flexibility. In order to overcome the drawbacks of position sensors, this dissertation proposed and investigated a position sensorless control system that meets the needs of an electric actuator application. It is capable of working from zero to high speeds. In the control system, two different control strategies are proposed, one for low speeds and one for high speeds. Each strategy utilizes a state observer to estimate rotor position and speed and is capable of 4 quadrant operation. In the low speed strategy a Luenberger observer, which has been named the inductance profile demodulator based observer, is used where a pulse voltage is applied to the SRM’s idle phases <b>generating</b> <b>triangle</b> shaped phase currents. The amplitude of thephase current is modulated by the SRM’s inductance. The current is demodulated an...|$|E
40|$|To <b>generate</b> a <b>triangle</b> of unit perimeter, break a {{stick of}} length 1 in two places at random, with the {{condition}} that triangle inequalities are satisfied. Is there a similarly natural method for <b>generating</b> <b>triangles</b> of unit area? Study of a product (rather than a sum) of random lengths is facilitated by closure of multiplication within the lognormal family of distributions. Our (necessarily incomplete) answers to the question each draw upon this property. Comment: 10 pages, 3 figure...|$|R
40|$|Most {{algorithms}} for polygon triangulation do {{not consider}} the quality of <b>generated</b> <b>triangles.</b> Such algorithms tend to generate low-quality mesh characterized by {{a large number of}} thin triangles. We present an approach for modifying the ear-cutting triangulation algorithm so that resulting mesh contains higher proportion of quality triangles. We also propose additional method of polygon decomposition that supports higher quality triangulation...|$|R
50|$|Irwin-Hall {{distribution}} — Using an Irwin-Hall {{distribution is}} {{an easy way to}} <b>generate</b> a <b>triangle</b> distribution.|$|R
5000|$|Furthermore, any Pythagorean {{triangle}} {{with legs}} x, y and hypotenuse z can <b>generate</b> a Pythagorean <b>triangle</b> with an integer altitude, by scaling {{up the sides}} by {{the length of the}} hypotenuse z. If d is the altitude, then the <b>generated</b> Pythagorean <b>triangle</b> with integer altitude is given by ...|$|R
40|$|We <b>generate</b> <b>triangles</b> {{randomly}} by uniformly {{choosing a}} subset of three vertices from the vertices of a regular polygon. We determine the expected area and perimeter {{in terms of the}} number of sides of the polygon. We use combinatorial methods combined with trigonometric summation formulas arising from complex analysis. We also determine the limit of these equations to compare with a classical result on triangles whose vertices are on a circle. ...|$|R
40|$|International audienceWe {{present a}} novel 3 D {{reconstruction}} {{system that can}} <b>generate</b> a stable <b>triangle</b> mesh using data from multiple RGB-D sensors in real time for dynamic scenes. The {{first part of the}} system uses moving least squares (MLS) point set surfaces to smooth and filter point clouds acquired from RGB-D sensors. The second part of the system <b>generates</b> <b>triangle</b> meshes from point clouds. The whole pipeline is executed on the GPU and is tailored to scale linearly with the size of the input data. Our contributions include changes to the MLS method for improving meshing, a fast triangle mesh generation method and GPU implementations of all parts of the pipeline...|$|R
40|$|Let { 0 =w_ 0 <w_ 1 <w_ 2 < [...] . <w_m} be the set {{of weight}}s of binary Steinhaus triangles of size n, and let W_i be {{the set of}} {{sequences}} in F_ 2 ^n that <b>generate</b> <b>triangles</b> of weight w_i. We obtain the values of w_i and the corresponding sets W_i for i∈{ 1, 2, 3,m}, and partial results about w_m- 1 and W_m- 1. Comment: 31 pages, 10 figure...|$|R
40|$|Let { 0 =w 0 <w 1 <w 2 <…<wm 0 =w 0 <w 1 <w 2 <…<wm} be the set {{of weight}}s of binary Steinhaus triangles of size n, and let Wibe {{the set of}} {{sequences}} in F 2 n that <b>generate</b> <b>triangles</b> of weight wi. In this paper we obtain the values of wi and the corresponding sets Wi for i¿{ 2, 3,m}i¿{ 2, 3,m}, and partial results for i=m- 1 i=m- 1. Peer ReviewedPostprint (author's final draft...|$|R
40|$|A {{method is}} {{presented}} for meshing 3 D CAD surfaces in parametric space using an advancing front approach and a metric map {{to govern the}} size and shape of the triangles in the parametric space. The creation of the metric map will be discussed. The advancing front mesher <b>generates</b> <b>triangles</b> based on the metric map, stretching them in order to capture the change in parameterization of the surface. The benefits of this algorithm include better quality elements without having to do costly real space calculations...|$|R
5000|$|The {{proportionality}} factor is generally a rational [...] where [...] reduces the <b>generated</b> Heronian <b>triangle</b> to its primitive and [...] scales up this primitive to the required size.|$|R
30|$|The newly <b>generated</b> <b>triangles</b> {{are again}} {{modified}} slightly expecting {{for a better}} rule base. A mutation probability and a mutation fraction are set by the designer as a design parameter. Maximum number of points that can be mutated is equal to mutation probability times {{the total number of}} points. In our case, the triangle centers and the boundary points may get mutated to give a better rule base. The above algorithm includes that if the center point of a triangle gets mutated then the boundary points of the triangle will also get mutated to give a new triangle.|$|R
5000|$|... #Caption: Kobon <b>triangles</b> <b>generated</b> with 3, 4 and 5 {{straight}} line segments.|$|R
40|$|Consider an {{algorithm}} for <b>generating</b> a <b>triangle</b> mesh interpolating a fixed set of 3 D point samples, {{where the}} <b>generated</b> <b>triangle</b> set {{varies depending on}} some underlying parameters. In this paper we treat such an algorithm {{as a means of}} sampling the space of possible interpolant meshes, and then define a more robust algorithm based on drawing multiple such samples from this process and averaging them. As mesh connectivity graphs cannot be trivially averaged, we compute triangle statistics and then attempt to find a set of compatible triangles which maximize agreement between the sample meshes while also forming a manifold mesh. Essentially, each sample mesh “votes ” for triangles, and hence we call our result a consensus mesh. Finding the optimal consensus mesh is combinatorially intractable, so we present an efficient greedy algorithm. We apply this strategy to two mesh generation processes- ball pivoting and localized tangent-space Delaunay triangulations. We then demonstrate that consensus meshing enables a generic decomposition of the meshing problem which supports trivial parallelization. 1...|$|R
40|$|AbstractA {{method for}} {{automatic}} generation of triangular finite element meshes for starshaped domains is introduced. The mesh is simply obtained by inputting, besides the data defining {{the boundary of}} the domain, a positive integer parameter p for specification of the wished degree of refinement. It is proved that, for a very wide class of starshaped two dimensional domains, the following necessary condition for convergence of the finite element method is satisfied:There exists a strictly positive constant c, independent of p, such that: MINTπ(T) m(T) ⪢c ∀p, p= 1, 2,… π(T) and h(T) being respectively {{the diameter of the}} inscribed circle and the largest edge of a <b>generated</b> <b>triangle</b> T...|$|R
40|$|Since the {{introduction}} of techniques for isosurface extraction from volumetric datasets, {{one of the hardest}} problems has been {{to reduce the number of}} <b>generated</b> <b>triangles</b> (or polygons). This paper presents an algorithm that considerably reduces the number of <b>triangles</b> <b>generated</b> by a Marching Cubes algorithm, while presenting very close or shorter running times. The algorithm first assumes discretization of the dataset space and replaces cell edge interpolation by midpoint selection. Under these assumptions the extracted surfaces are composed of polygons lying within a finite number of incidences, thus allowing simple merging of the output facets into large coplanar triangular facets. Lastly, the vertices which survived the decimation process are located on their exact positions and normals are computed. An experimental evaluation of the proposed approach on datasets relevant to biomedical imaging and chemical modeling is reported. 2000 Elsevier Science B. V. All rights reserved. Keywords: Volume rendering; Isosurface extraction; Marching cubes; Surface simplification 1...|$|R
40|$|We {{propose a}} fast and simple method for {{generating}} a low-stretch mesh parameterization. Given a triangle mesh, we {{start from the}} Floater shape preserving parameterization and then improve the parameterization gradually. At each improvement step, we optimize the parameterization generated at the previous step by minimizing a weighted quadratic energy where the weights are chosen {{in order to minimize}} the parameterization stretch. This optimization procedure does not <b>generate</b> <b>triangle</b> flips if the boundary of the parameter domain is a convex polygon. Moreover already the first optimization step produces a high-quality mesh parameterization. We compare our parameterization procedure with several state-of-art mesh parameterization methods and demonstrate its speed and high efficiency in parameterizing large and geometrically complex models...|$|R
40|$|We {{propose to}} use a moving mesh approach, a popular grid {{adaption}} technique in computational mechanics, for fast generating low-stretch mesh parameterizations. Given a triangle mesh approximating a surface, we construct an initial parameterization of the mesh and then improve the parameterization gradually. At each improvement step, we optimize the parameterization generated at the previous step by minimizing a weighted quadratic energy where the weights are chosen {{in order to minimize}} the parameterization stretch. This optimization procedure does not <b>generate</b> <b>triangle</b> flips if the boundary of the parameter domain is a convex polygon. Moreover already the first optimization step produces a high-quality mesh parameterization. We compare our parameterization procedure with several state-of-art mesh parameterization methods and demonstrate its speed and high efficiency in parameterizing large and geometrically complex models. ...|$|R
2500|$|When [...] {{is chosen}} such that , it <b>generates</b> a right <b>triangle</b> {{that is always}} similar to the Pythagorean triple with sides , , [...]|$|R
40|$|DStrips is {{a simple}} and {{efficient}} method to dynamically manage and <b>generate</b> <b>triangle</b> strips for real-time viewdependent multiresolution meshing and rendering. Progressive view-dependent triangle mesh simplification and rendering is an important concept for interactive visualization environments. To minimize the rendering cost, triangle meshes are simplified to the maximal tolerated perceptual error. A further savings can be gained by using hardware optimized rendering primitives such as triangle strips. However, triangle strips have been rarely used successfully in interactive multiresolution meshes due to the costs involved with maintaining the coherency of the strips in the changing mesh. This paper introduces a new dynamic triangle stripping data structure and algorithm, DStrips, that is practical for use with multiresolution meshes. DStrips is aimed at preserving pre-computed triangle strips through changes in the mesh and <b>generating</b> reasonably good <b>triangle</b> strips in real-time. Furthermore, this data structure and algorithm can be easily adapted to any multiresolution mesh which has a face-to-edge/edge-to-face mapping. The presented approach is implemented {{on top of a}} real-time view-dependent meshing and rendering framework based on a half-edge data structure using progressive edge collapses and vertex splits. Direct comparisons are made to previous methods in triangle stripification of dynamic and static meshes...|$|R
2500|$|When [...] {{the common}} ratio is chosen such that [...] it <b>generates</b> a right <b>triangle</b> {{that is always}} similar to the Kepler triangle.|$|R
50|$|If the six {{connectors}} that join any pair of orthocentric {{points are}} extended to six lines that intersect each other, they generate seven intersection points. Four of these points are the original orthocentric points and the additional three points are the orthogonal intersections {{at the feet}} of the altitudes. The joining of these three orthogonal points into a <b>triangle</b> <b>generates</b> an orthic <b>triangle</b> that is common to all the four possible triangles formed from the four orthocentric points taken three at a time.|$|R
40|$|Interactive {{rendering}} of trimmed NURBS models {{is of great}} importance for CAD systems. For this the model needs to {{be transformed into a}} polygonal representation. This transformation can be either performed in a preprocessing step, at the cost of losing the capability to edit the surfaces, or on the fly during rendering. Since the number of frames per second is usually critical, efficient on the fly tessellation of trimmed NURBS surfaces is very important for interactive rendering and editing of such models. In this paper we present an efficient – with respect to both runtime and to the number of <b>generated</b> <b>triangles</b> – tessellation algorithm for trimmed NURBS surfaces that is capable of guaranteeing a specified geometric approximation error. When affordable by the subsequent steps in the pipeline, an approximate error of the tessellation can also be used leading to fewer triangles...|$|R
40|$|Abstract. In {{order to}} detect the arc plasma, an {{in-depth}} analysis {{on the relationship between}} the technology and film properties is conducted in this article. In addition, a fast scanning Langmuir probe diagnostic system suitable for transient plasma diagnosis is also designed, coupled with the design scheme and schematic diagram. Regard the integrated circuit of MAX 038 as the core，and utilize FET to input high-fidelity operational amplifier OPA 604 as well as high power amplifier PA 93 to complete the intelligent saw-tooth wave sweep frequency power with the output amplitude of ± 100 V, output frequency ranging from 10 Hz to 10 MHz as well as the adjustable frequency and duty cycle. Then test the output waveform and the results show that the power module can precisely <b>generate</b> <b>triangle</b> wave, saw-tooth wave, rectangular wave (including square wave) and sine wave signal...|$|R
40|$|Abstract. In {{this paper}} we {{introduce}} a new compressed representation for multiresolution models (MRM) of triangulated surfaces of 3 D-objects. Associated with the representation we present compression and decompression algorithms. Our representation allows to extract the surface at variable resolution in time linear in the output size. It applies to MRMs generated by di erent simpli cation algorithms like local vertex deletion or edge and triangle collapse. The time required to transmit models over communication lines and the space needed to store the MRMs is signi cantly reduced. 1 Introduction and previous work Triangle meshes {{are one of the}} most popular representations of surfaces for computer graphics applications. On the one hand, rendering of triangles is widely supported by hardware and, therefore, fast. On the other hand, there is an increasing set of data acquisition techniques which <b>generate</b> <b>triangle</b> meshes a...|$|R
30|$|Multi-view dynamic {{three-dimensional}} reconstruction has typically required {{the use of}} custom shutter-synchronized camera rigs in order to capture scenes containing rapid movements or complex topology changes. In this paper, we demonstrate that multiple unsynchronized low-cost RGB-D cameras {{can be used for}} the same purpose. To alleviate issues caused by unsynchronized shutters, we propose a novel depth frame interpolation technique that allows synchronized data capture from highly dynamic 3 D scenes. To manage the resulting huge number of input depth images, we also introduce an efficient moving least squares-based volumetric reconstruction method that <b>generates</b> <b>triangle</b> meshes of the scene. Our approach does not store the reconstruction volume in memory, making it memory-efficient and scalable to large scenes. Our implementation is completely GPU based and works in real time. The results shown herein, obtained with real data, demonstrate the effectiveness of our proposed method and its advantages compared to state-of-the-art approaches.|$|R
40|$|In {{this paper}} we {{introduce}} a new compressed representation for multiresolution models (MRM) of triangulated surfaces of 3 D-objects. Associated with the representation we present compression and decompression algorithms. Our representation allows us to extract the surface at variable resolution in time linear in the output size. It applies to MRMs generated by different simplification algorithms like local vertex deletion or edge and triangle collapse. The time required to transmit models over communication lines and the space needed to store the MRMs is significantly reduced. 1 Introduction and previous work Triangle meshes {{are one of the}} most popular representations of surfaces for computer graphics applications. On the one hand, rendering of triangles is widely supported by hardware and, therefore, fast. On the other hand, there is an increasing set of data acquisition techniques which <b>generate</b> <b>triangle</b> meshes as output. However, most of these techniques generate much more triangl [...] ...|$|R
40|$|Bachelor`s thesis {{deals with}} design and {{realization}} of one possible solution of function generator {{with use of}} integrated circuit XR 2206. This function generator operates in frequency range 10 Hz – 100 kHz and {{it is designed to}} <b>generate</b> square, <b>triangle</b> and sine waveforms with variable duty and output amplitude to 10 Vpp. Function generator contains inputs for amplitude and frequency modulation...|$|R
50|$|Like the Euclidean square tiling {{there are}} 9 uniform colorings for this tiling, with 3 uniform colorings <b>generated</b> by <b>triangle</b> {{reflective}} domains. A fourth {{can be constructed}} from an infinite square symmetry (*∞∞∞∞) with 4 colors around a vertex. The checker board, r{∞,∞}, coloring defines the fundamental domains of (∞,4,4), (*∞44) symmetry, usually shown as black and white domains of reflective orientations.|$|R
40|$|A {{method is}} {{presented}} for meshing 3 D CAD surfaces in parametric space using an advancing front approach and a metric map {{to govern the}} size and shape of the triangles in the parametric space. The creation of the metric map will be discussed. The advancing front mesher <b>generates</b> <b>triangles</b> based on the metric map, stretching them in order to capture the change in parameterization of the surface. The benefits of this algorithm include better quality elements without having to do costly real space calculations. Keywords: Triangulation, free surface meshing, Riemannian metric, CAE, finite elements 1. Introduction 1. 1 Importance of work The finite element method is a powerful tool for today's engineering community. One of the barriers to automating finite element analysis is robust automatic mesh generation on CAD surfaces. There are many manual, semi-automatic, and automatic methods available today, and all have their own advantages and drawbacks 1. Current commercial codes tend to use [...] ...|$|R
40|$|Figure 1 : Texture {{mapping of}} the Mannequin Head model with three mesh parameterizations {{used in our}} method. (a) Texture and model. (b) Floater's shape {{preserving}} parameterization [6] is used as an initial mesh parameterization. (c) After a single optimization pass. (d) Our optimal low-stretch parameterization. We propose a fast and simple method for generating a low-stretch mesh parameterization. Given a triangle mesh, we start from the Floater shape preserving parameterization and then im-prove the parameterization gradually. At each improvement step, we optimize the parameterization generated at the previous step by minimizing a weighted quadratic energy where the weights are chosen {{in order to minimize}} the parameterization stretch. This op-timization procedure does not <b>generate</b> <b>triangle</b> ips if the bound-ary of the parameter domain is a convex polygon. Moreover al-ready the rst optimization step produces a high-quality mesh pa-rameterization. We compare our parameterization procedure with several state-of-art mesh parameterization methods and demon-strate its speed and high efciency in parameterizing large and geometrically complex models...|$|R
5000|$|... #Caption: Sierpinski <b>triangle</b> <b>generated</b> by Rule 90, or by {{marking the}} {{positions}} of odd numbers in Pascal's triangle. Gould's sequence counts the number of live cells in each row of this pattern.|$|R
40|$|A {{triangular}} {{cellular array}} whose cell-states satisfy the local {{rule of the}} cellular automaton that <b>generates</b> Pascal's <b>triangle</b> modulo 2 is subjected to a feedback inspired by conditions for rotational symmetry of its state-pattern. We discuss observations and conjectures about the fact that, in order to stabilize effectively in a rotationally symmetric pattern, the underlying recursion (feedback) procedure must have an essentially random nature. status: publishe...|$|R
5000|$|Starting at {{waveform}} generation, each {{voice has}} two voltage controlled oscillators (VCOs). Each {{of which is}} capable of <b>generating</b> sawtooth, <b>triangle,</b> pulse or noise waveforms. Furthermore, the [...] "duty cycle" [...] of the pulse width can be modulated as well. Although perhaps better known for subtractive synthesis, the Xpander is also capable of frequency modulation (FM) synthesis by modulating VCO #1 with VCO #2.|$|R
