39|440|Public
50|$|ProR is {{designed}} for integration with other Eclipse-based tools. There is an <b>extension</b> <b>point</b> available, which {{makes it possible to}} integrate other available renderers and editors, or to react to Drag & Drop events from outside.|$|E
50|$|Proponents of {{benefits}} <b>extension</b> <b>point</b> out that corporations {{are sitting on}} approximately 1.8 trillion in cash while not hiring. MSNBC reported in June 2010, that, for 99ers, a job can feel like a mirage: The Economic Policy Institute's March 2010 report cites an average of five applicants for each job opening.|$|E
50|$|For developers, {{the most}} common <b>extension</b> <b>point</b> is an {{interface}} representing a contract. To comply with that a service object implementing the contract must be created, which is the required method in Visual Studio. The Integrated development environment and the underlying packages define hundreds of extension points {{in the form of}} contract interfaces.|$|E
30|$|JUnit, since version 4, {{provides}} <b>extension</b> <b>points</b> {{that allow}} {{the introduction of new}} functionality. Some of the most important JUnit <b>extension</b> <b>points</b> are represented by the classes Runner and Rule.|$|R
5000|$|... 1. Develop and {{integrate}} the application with G Suite using the G Suite APIs or <b>extension</b> <b>points</b> such as Gmail contextual gadgets.|$|R
3000|$|Mechanism for {{customization}} and Use of Plugin Architecture: All the GSD tools {{implement a}} [...] "plugin architecture" [...] {{for use in}} customising, modifying and extending the GSD tool. This means that other programs and components can be easily integrated with it [26]. For example, Hudson is easily extensible using plugins. A series of <b>extension</b> <b>points</b> are provided in Hudson that allows developers to extend its functionality [42]. These <b>extension</b> <b>points</b> are where the GDS tools can be customised to support tenant isolation.|$|R
50|$|As of OS X 10.11, Notes {{received}} a significant functional overhaul (in-line with the iOS 9 version), with major features including iCloud sync, {{the ability to}} view sketches created on the iOS counterpart, advanced text formatting options, several styles of lists, rich web and map link previews, support for more file type attachments, a corresponding dedicated attachment browser, and a system share <b>extension</b> <b>point</b> for saving web links, images, etc.|$|E
50|$|Starting with iOS 9, Notes {{received}} a significant functional overhaul; iCloud sync (instead of IMAP; in-line with the OS X 10.11 version), {{the ability to}} create sketches (and later, support for Apple Pencil), advanced text formatting options, several styles of lists, rich web and map link previews, support for more file type attachments, a corresponding dedicated attachment browser, and a system share <b>extension</b> <b>point</b> for saving web links, images, etc.|$|E
5000|$|... 202 Road <b>extension</b> <b>point</b> in the estuary, {{along the}} Port Arthur South, Guo waterways, MA North line, end zone at Port Arthur. Elevated across the board, using two dynamic two drag rail {{transportation}} vehicles, is actually completely unrelated with the 202 tram independent light rail line, due to rail traffic engineering {{to avoid the}} cumbersome approval process and to the existing tram relatively simple procedure Line extension project in the name, it had this name.|$|E
40|$|Eclipse is a Java {{integrated}} {{development environment}} (IDE) and tool integration platform that offers numerous <b>extension</b> <b>points</b> for customization through a plug-in architecture. This paper describes the design of an Eclipse plug-in called E-R Modeler. As a database design toolkit, the E-R Modeler provides an E-R (Entity-Relationship) diagram development environment that supports XML and DDL (Database Definition Language) generation tools. It also provides database connection and schema creation capabilities. As an Eclipse plug-In, it offers multiple <b>extension</b> <b>points</b> for other applications to build upon...|$|R
5000|$|Note however {{that these}} token {{elements}} {{may be used}} as <b>extension</b> <b>points,</b> allowing markup in host languages.MathML in HTML5 allows most inline HTML markup in mtext, and ...|$|R
5000|$|Flexibility: Provide {{a highly}} {{flexible}} framework for business processes {{based on a}} new disposition framework which allows having functional <b>extension</b> <b>points</b> to allow external systems to bind with metasfresh ERP.|$|R
5000|$|Five main {{extension}} {{points were}} created to allow developers to add features and functionalities to MediaWiki. Hooks are run every time a certain event happens; for instance, the [...] hook occurs after a save article request has been processed. This can be used, for example, by an extension that notifies selected users whenever a page edit occurs on the wiki from new or anonymous users. New tags can be created to process data with opening and closing tags (...) [...] Parser functions {{can be used to}} create a new command (...) [...] New special pages can be created to perform a specific function. These pages are dynamically generated. For example, a special page might show all pages that have one or more links to an external site or it might create a form providing user submitted feedback. Skins allow users to customize {{the look and feel of}} MediaWiki. A minor <b>extension</b> <b>point</b> allows the use of Amazon S3 to host image files.|$|E
50|$|For example, in GUI {{frameworks}} which {{employ the}} MVC pattern, {{there is an}} intrinsic and explicit set of objects, (the model, the view, and the controller,) that together support the abstraction of a 'visual user interface component': changes made in the model (typically through another process) must {{be reflected in the}} GUI (by the view); and changes made by user through the GUI (thus the 'View') need to be reflected in the model; and the interaction is managed by the controller (which is typically the <b>extension</b> <b>point</b> of the GUI framework). Here, the various properties of the model (typically the value of the data element backing the GUI representation) are of interest to other objects in the 'binding context' of the model's properties: the model is the 'bound property' of the GUI widget and the binding context is the widget itself, and the interested observer is the controller. By exposing a standard bound property interface, the model allows for the controller to register interest in the model's value property.|$|E
30|$|Another JUnit <b>extension</b> <b>point</b> {{is known}} as Rule and it allows the {{addition}} of new behaviors mainly {{before and after the}} execution of each test. To introduce a new Rule, it is necessary to create a class that implements the TestRule interface. To use it, a public attribute should be declared in the test class and annotated with @Rule, as shown in Listing 1.|$|E
50|$|Partial methods allow code {{generators}} {{to generate}} method declarations as <b>extension</b> <b>points</b> {{that are only}} included in the compilation if someone actually implements them in another portion of a partial class.|$|R
50|$|Chameleo is a media {{platform}} with support for rich video playback. Chameleo {{is designed to}} make it easy to extend a media player with custom features through <b>extensions</b> and <b>extensions</b> <b>points.</b>|$|R
5000|$|OpenSocial Gateway Server—an {{open source}} {{implementation}} of the server interface to container-specific information, including the OpenSocial REST APIs, with clear <b>extension</b> <b>points</b> so others can connect it to their own backends.It helps truly for open social sources ...|$|R
30|$|Because {{the user}} must be online to interact, the use case Go Online must precede all the others. In the diagram, this is {{represented}} by the dependency relationships connecting Make a Call and Go Offline to Go Online. The <b>extension</b> <b>point</b> defines that Handle Conference Call is performed whenever a user makes a call to other user, other than the ones that he/she is currently talking to.|$|E
30|$|Framework-specific model {{language}} (FSML) {{contrasts with}} other approaches {{because it does}} not control dependencies. Instead, FSML relies on strict framework instantiation model to assure the architectural conformance. Each FSML contains rules and information required to correctly use a framework. The approach maps every framework <b>extension</b> <b>point</b> and its instantiation rules to verify the architecture on framework-based systems [25, 37]. Unlike DCL 2.0, this technique does not address violations among component relations.|$|E
30|$|Unpretentiously, it {{is hoped}} that the interdependent part {{proposed}} by the actor’s social complexity by SMiLe is configured as an <b>extension</b> <b>point</b> of the iStar framework through textual markings in the modeling, without interfering in the graphic. This will allow the composition and reuse of the actor’s social complexities. This proposal would increase the framework’s abstraction power, which could win new adherents, and further enhance the loyalty of those who are part of their community.|$|E
50|$|Its {{objectives}} {{are similar to}} those of Universal Plug and Play (UPnP) but, in addition, DPWS is fully aligned with Web Services technology and includes numerous <b>extension</b> <b>points</b> allowing for seamless integration of device-provided services in enterprise-wide application scenarios.|$|R
50|$|Applications use GVfs indirectly, {{by means}} of GIO loading the GVfs module that {{implements}} the GIO <b>extension</b> <b>points.</b> The GVfs main daemon gvfsd spawns further mount daemons for each individual connection. The GVfs support for volume monitoring is included in a separate loadable module.|$|R
50|$|RSpec also {{provides}} a number of utilities and <b>extension</b> <b>points</b> to support extending RSpec to meet domain-specific needs. For instance, using Metadata associated with groups and examples {{for the purpose of}} reporting, using global configuration to assign before and after blocks to every example group, using macros etc.|$|R
40|$|AbstractWe deduce a set {{of known}} {{characterizations}} of threshold graphs (Theorem 3) from {{a set of}} characterizations of Ferrers digraphs (Theorem 1) by investigating the connection between symmetric Ferrers digraphs and threshold graphs. A direct proof of Theorem 3 is easier than the one provided in here, but {{the purpose of this}} paper is to view Theorem 1 as an extension of Theorem 3 to the directed case (this <b>extension</b> <b>point</b> of view still holds on an algorithmic ground) ...|$|E
40|$|In this lab, we {{are going}} to do {{exercises}} on Eclipse plug-in development. Specifically, {{we are going}} to work on the tasks of creating Eclipse plug-in projects, creating extension points and extensions, and running and installing the developed plug-ins. At the end of the lab, we will create two plug-ins with one extending the <b>extension</b> <b>point</b> declared by the other. As part of the exit exercise, we will also run these two plug-ins and install them in Eclipse. Instructions...|$|E
40|$|RAP {{enables you}} to bring your {{existing}} RCP applications to the web Based on server-side Equinox + client side Javascript rendering (qooxdoo) Provides the Eclipse way for developing web applications RAP uses OSGi bundles and <b>extension</b> <b>point</b> mechanism You can reuse existing tooling like PDE or JDT Applications can be deployed as standard JEE web applications (war) Enables single-sourcing of RCP and RAP applications © 2007 Innoopract Informationssysteme GmbH – available under the Eclipse Public License (EPL) Current status- RW...|$|E
30|$|In this study, it is {{important}} to note that the use of plugins in the case study experiments is basically a mechanism for customizing, modifying and extending the GSD tools (e.g., Hudson and Bugzilla) to support the implementation of multitenancy architectures and is not a limitation to providing insights about the trade-offs across the different multitenancy patterns. Most open-source tools are easily extensible using plugins by relying on a series of <b>extension</b> <b>points</b> provided to extend its functionality. For example, the <b>extension</b> <b>points</b> provided within Hudson plugin was customised to implement the three multitenancy patterns (i.e., shared component, tenant-isolated component, dedicated component) and thus support multitenancy isolation. During execution, the plugin is loaded into a separate class loader which does not conflict with the core functionality of the GSD tool.|$|R
40|$|International audienceGovernance {{means that}} {{specifications}} are enforced dynamically at application run-time. Governance framework {{is a technique}} to design and implement an extensible interaction specification {{for a family of}} open systems. This specification can be refined for particular applications. We based this proposal on object-oriented framework concepts and adapted them for distributed agents and interactions. A governance framework structures the extensions of open system instances as variations in interactions among agents, defined as templates. Templates are used to gather core implementation and <b>extension</b> <b>points.</b> <b>Extension</b> <b>points</b> are “hooks” that will be customized to implement an instance of the governance framework. During framework instantiation, templates are refined to concrete interaction specification. As a proof of concept experiment, in this paper we propose a framework for instantiating supply chain management applications as open systems...|$|R
40|$|AspectM, an aspect-oriented {{modeling}} language, pro-vides {{not only}} basic modeling constructs {{but also an}} exten-sion mechanism called metamodel access protocol (MMAP) that allows a modeler to modify the metamodel. MMAP consists of metamodel <b>extension</b> <b>points,</b> <b>extension</b> opera-tions, and primitive predicates for defining pointcut desig-nators. In this paper, a reflective model editor for support-ing MMAP is proposed. A new modeling construct can be introduced by extending the metamodel. This mechanism, a kind of edit-time structural reflection, enables a modeler to represent domain-specific crosscutting concerns. ...|$|R
30|$|The empty, or contracted, {{urinary bladder}} lies entirely within the bony pelvis and is {{considered}} extraperitoneal. The full bladder extends above {{the protection of the}} pelvic inlet into the peritoneum to about the level of the umbilicus. The bladder dome, also the most mobile part of the bladder, is particularly susceptible to injury at its posterior-superior <b>extension</b> <b>point</b> [1]. The rupture mechanism {{has been described as a}} burst rupture due to increased intrabladder pressure. The dome is unique in its isolated peritoneal reflection so that rupture in this area most likely results in intraperitonal urinary contamination [4].|$|E
40|$|Abstract This article {{presents}} {{a framework for}} the development of adaptive proxies for context-aware mobile applications. The framework is in charge of collecting clients ’ current context (device and network), and trigger the appropriate adaptations. MoCA’s ProxyFramework offers mechanisms for cache management, as well as for adaptation management. Developers need only create their application-specific adaptations (developing adapters modules) and define trigger conditions, priorities and selectors. This is done by specifying rules in XML format, which define the actions to be applied at the moment of a context change. The other <b>extension</b> <b>point</b> of the ProxyFramework is the caching policy to be used. Keywords: Mobile Computing, Context-awareness, Proxy, Framework 1...|$|E
40|$|Abstract. This article {{presents}} {{a framework for}} the development of adaptive proxies. The framework is in charge of collecting clients current context (device and network), and trigger the appropriate adaptations. MoCA’s ProxyFramework offers mechanisms for cache management, as well as for adaptation management. It is possible to specify priorities and associate selectors to each adaptation. It is also possible to start an action at the moment of a context change. Developers need only to create their application-specific adaptations (developing adapters modules) and define trigger conditions, priorities and selectors, in the form of rules in XML format. In addition to the adapters, another <b>extension</b> <b>point</b> is the caching policy to be used...|$|E
40|$|Predefined {{automatically}} applicable composite operations such as refactorings are {{a prerequisite}} for efficient software modeling. Some modeling environments provide an initial set of basic refactorings, but they hardly offer <b>extension</b> <b>points</b> for user-specified refactorings. Even if <b>extension</b> <b>points</b> exist, {{the introduction of new}} refactorings requires programming skills and deep knowledge of the respective metamodel of the used modeling language. We present EMF Modeling Operations, a Java TM based framework for specifying and executing composite operations within the user’s modeling language and editor of choice. The user demonstrates a composite operation on a concrete example from which a generic and executable operation specification is semi-automatically derived. Furthermore, we show how the resulting specification may be used to enable an a-posteriori detection of applications of the specified operations between two successive versions of a model, also in absence of a directly recorded change log. ...|$|R
40|$|Predefined {{composite}} {{operations are}} handy for efficient modeling, e. g., for the automatic execution of refactorings, {{and for the}} introduction of patterns in existing models. Some modeling environments provide an initial set of basic refactoring operations, but hardly offer any <b>extension</b> <b>points</b> for the user. Even if <b>extension</b> <b>points</b> exist, {{the introduction of new}} composite operations requires programming skills and deep knowledge of the respective metamodel. In this paper, we introduce a method for specifying composite operations within the user’s modeling language and environment of choice. The user models the composite operation by-example, which enables the semi-automatic derivation of a generic composite operation specification. This specification may be used in further modeling scenarios, like model refactoring and model versioning. We implemented the approach in the Operation Recorder and performed an evaluation by defining multiple complex refactorings for UML diagrams...|$|R
40|$|Abstract. Governance {{means that}} {{specifications}} are enforced dynamically at application runtime. Governance framework {{is a technique}} to design and implement an extensible interaction specification {{for a family of}} open systems. This specification can be refined for particular applications. We based this proposal on object-oriented framework concepts and adapted them for distributed agents and interactions. A governance framework structures the extensions of open system instances as variations in interactions among agents, defined as templates. Templates are used to gather core implementation and <b>extension</b> <b>points.</b> <b>Extension</b> <b>points</b> are ”hooks ” that will be customized to implement an instance of the governance framework. During framework instantiation, templates are refined to concrete interaction specification. As a proof of concept experiment, in this paper we propose a framework for instantiating supply chain management applications as open systems. Keywords: Interaction protocol, Reuse, Law-enforcement. ...|$|R
