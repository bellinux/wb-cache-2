1|10000|Public
40|$|In this paper, we analyze toolkit {{designs for}} {{building}} graphical applications with rich user interfaces, comparing polylithic and monolithic toolkit-based solutions. Polylithic toolkits encourage <b>extension</b> <b>by</b> <b>composition</b> and follow a design philosophy similar to 3 D scene graphs supported by toolkits including Java 3 D and OpenInventor. Monolithic toolkits, {{on the other}} hand, encourage extension by inheritance, and are more akin to 2 D Graphical User Interface toolkits such as Swing or MFC. We describe Jazz (a polylithic toolkit) and Piccolo (a monolithic toolkit), each of which we built to support interactive 2 D structured graphics applications in general, and Zoomable User Interface applications in particular. We examine the trade offs of each approach in terms of performance, memory requirements, and programmability. We conclude that a polylithic approach is most suitable for toolkit builders, visual design software where code is automatically generated, and application builders where there is much customization of the toolkit...|$|E
40|$|Maude's {{language}} {{design and}} implementation make systematic use {{of the fact that}} rewriting logic is reflective. This makes the metatheory of rewriting logic accessible to the user in a clear and principled way, and makes possible many advanced metaprogramming applications, including user-definable strategy languages, language <b>extensions</b> <b>by</b> new module <b>composition</b> operations, development of theorem proving tools, and reifications of other languages and logics within rewriting logic. A naive implementation of reflection can be computationally very expensive. We explain the semantic principles and implementation techniques through which efficient ways of performing reflective computations are achieved in Maude through its predefined META-LEVEL module...|$|R
40|$|AbstractConstruction of (colored) knot polynomials for double-fat graphs {{is further}} {{generalized}} {{to the case}} when “fingers” and “propagators” are substituting R-matrices in arbitrary closed braids with m-strands. Original version of [25] corresponds to the case m= 2, and our generalization sheds additional light {{on the structure of}} those mysterious formulas. Explicit expressions are now combined from Racah matrices of the type R⊗R⊗R¯⟶R¯ and mixing matrices in the sectors R⊗ 3 ⟶Q. Further <b>extension</b> is provided <b>by</b> <b>composition</b> rules, allowing to glue two blocks, connected by an m-strand braid (they generalize the product formula for ordinary composite knots with m= 1) ...|$|R
40|$|Construction of (colored) knot polynomials for double-fat graphs {{is further}} {{generalized}} {{to the case}} when "fingers" and "propagators" are substituting R-matrices in arbitrary closed braids with m-strands. Original version of arXiv: 1504. 00371 corresponds to the case m= 2, and our generalizations sheds additional light {{on the structure of}} those mysterious formulas. Explicit expressions are now combined from Racah matrices of the type R⊗ R⊗R̅⟶R̅ and mixing matrices in the sectors R^⊗ 3 ⟶ Q. Further <b>extension</b> is provided <b>by</b> <b>composition</b> rules, allowing to glue two blocks, connected by an m-strand braid (they generalize the product formula for ordinary composite knots with m= 1). Comment: 10 pages + table in Appendi...|$|R
40|$|AbstractMaude's {{language}} {{design and}} implementation make systematic use {{of the fact that}} rewriting logic is reflective. This makes the metatheory of rewriting logic accessible to the user in a clear and principled way, and makes possible many advanced metaprogramming applications, including user-definable strategy languages, language <b>extensions</b> <b>by</b> new module <b>composition</b> operations, development of theorem proving tools, and reifications of other languages and logics within rewriting logic. A naive implementation of reflection can be computationally very expensive. We explain the semantic principles and implementation techniques through which efficient ways of performing reflective computations are achieved in Maude through its predefined META-LEVEL module. We are indebted to José F. Quesada for his excellent work on the MSCP context-free parser for Maude, that [...] -besides being used for different parsing functions in Maude [...] -is used as a key component of the built-in function meta-parse in META-LEVEL. We cordially thank Carolyn Talcott for many discussions on metalevel issues that have contributed to the development of our ideas...|$|R
40|$|Biological data {{analysis}} is frequently performed with command line software. While this practice provides considerable flexibility for computationally savy individuals, such as investigators trained in bioinformatics, this also creates {{a barrier to}} {{the widespread use of}} {{data analysis}} software by investigators trained as biologists and/or clinicians. Workflow systems such as Galaxy and Taverna have been developed to try and provide generic user interfaces that can wrap command line analysis software. These solutions are useful for problems that can be solved with workflows, and that do not require specialized user interfaces. However, some types of analyses can benefit from custom user interfaces. For instance, developing biomarker models from high-throughput data is a type of analysis that can be expressed more succinctly with specialized user interfaces. Here, we show how Language Workbench (LW) technology can be used to model the biomarker development and validation process. We developed a language that models the concepts of Dataset, Endpoint, Feature Selection Method and Classifier. These high-level language concepts map directly to abstractions that analysts who develop biomarker models are familiar with. We found that user interfaces developed in the Meta-Programming System (MPS) LW provide convenient means to configure a biomarker development project, to train models and view the validation statistics. We discuss several advantages of developing user interfaces for data analysis with a LW, including increased interface consistency, portability and <b>extension</b> <b>by</b> language <b>composition.</b> The language developed during this experiment is distributed as an MPS plugin (available at [URL]...|$|R
40|$|Local {{biological}} {{communities are}} made up of species, each of which has its own particular relationship with the environment. To the extent that these autecological niches limit species' distributions, and <b>by</b> <b>extension</b> community <b>composition,</b> models of species' ecological niches can predict species composition at particular sites, or at least provide a null hypothesis of potential species composition in the absence of effects of species interactions. We developed distributional predictions (ecological niche models) for 89 species occurring in dry tropical forest in the Balsas Basin of south-western Mexico using an interpolation technique, and predicted the species likely to occur at 8 sites across the region. Onsite field inventory data were then used to test the community predictions, all of which were statistically significant. These results suggest that inventory efforts can be made more efficient by development beforehand of hypotheses that focus onsite collecting and inventory...|$|R
5000|$|... #Caption: Two of {{the most}} {{commonly}} found SPAS-12 variants: the folding-stock version (with an eight-round magazine <b>extension)</b> <b>by</b> F.I.E Corp and the fixed-stock version (with a six-round magazine <b>extension)</b> <b>by</b> American Arms Inc.|$|R
5000|$|A Picard-Vessiot {{extension}} is Liouvillian if {{and only}} if the connected component of its differential Galois group is solvable [...] More precisely, <b>extensions</b> <b>by</b> algebraic functions correspond to finite differential Galois groups, <b>extensions</b> <b>by</b> integrals correspond to subquotients of the differential Galois group that are 1-dimensional and unipotent, and <b>extensions</b> <b>by</b> exponentials of integrals correspond to subquotients of the differential Galois group that are 1-dimensional and reductive (tori).|$|R
40|$|The {{objective}} {{of this research is}} to analyze the effect of extension strategy and the environmental concern on knowledge about environmental issues of house wives on the slums in West Jakarta. The sample of the research was 40 housewives, which selected randomly. The data were analyzed by using ANOVA with 2 x 2 factorial design. The result of the research reveals that: 1) the knowledge about environmental issues of housewiveswho received <b>extension</b> strategy <b>by</b> out group <b>extension</b> agents have not more highly than when they received <b>extension</b> <b>by</b> in group <b>extension</b> agents; 2) The housewives who have high environmental concern and receive <b>extension</b> <b>by</b> out group <b>extension</b> agents have more highly knowledge about environmental issues than when they received <b>extension</b> <b>by</b> in group <b>extension</b> agents; 3) The housewives who have low environmental concern and received <b>extension</b> <b>by</b> out group <b>extension</b> agents have lower knowledge about environmental issues than when they received <b>extension</b> <b>by</b> ingroup <b>extension</b> agents; 4) There are interaction effects between extension strategy and the environmental concern towards the housewives knowledge about environmental issues...|$|R
40|$|Object-oriented {{frameworks}} {{are very}} popular for the efficiency they provide in reusing software. However, their use by instantiation, their enrichment <b>by</b> <b>composition,</b> and their <b>extension</b> <b>by</b> specialization, are all complicated operations requiring to be simplified by {{the introduction of}} new techniques and models. General Terms Documentation, Design. Keywords Framework, structural and behavioral dependencies, modeling. 1. PROBLEM Since the emergence of software engineering, people have tended to reuse pieces of software of various size. Of course, the bigger the reused code, the more intricate it is, but the more benefit one can get. So, we chose to focus on object oriented frameworks. Despite the existence of examples and cookbooks, framework instantiation is made complicated by the dependencies between components. Writing an application may require the usage of several frameworks. Here, we will only study the framework composition problem which occurs when two frameworks put [...] ...|$|R
5000|$|<b>Extensions</b> <b>by</b> {{unconstrained}} predicate {{or function}} symbols are conservative.|$|R
5000|$|... #Caption: The {{cafeteria}} in {{the underground}} <b>extension</b> <b>by</b> Rafael Moneo ...|$|R
5000|$|In practice, an <b>extension</b> <b>by</b> {{definitions}} [...] of T is not {{distinguished from}} the original theory T. In fact, the formulas of [...] {{can be thought of}} as abbreviating their translations into T. The manipulation of these abbreviations as actual formulas is then justified by the fact that <b>extensions</b> <b>by</b> definitions are conservative.|$|R
5000|$|Le Havre has {{experienced}} many territorial <b>extensions</b> <b>by</b> annexing neighbouring communes: ...|$|R
5000|$|... #Caption: The {{building}} of old Astronomical Observatory (south <b>extension</b> <b>by</b> Marcin Knackfuss) ...|$|R
5000|$|Good Shepherd Church, Pakila, Helsinki, {{restoration}} and <b>extension</b> (<b>by</b> Juha Leiviskä) (2002) ...|$|R
5000|$|Lancaster Castle Gaol (<b>extensions</b> <b>by</b> Joseph Gandy of 1818-21) - Lancaster, England ...|$|R
5000|$|... {{where all}} maps are induced <b>by</b> <b>extension</b> <b>by</b> zero is also exact.|$|R
5000|$|... {{and what}} we obtain is an <b>extension</b> <b>by</b> {{definitions}} [...] of T. Then in [...] we can prove that for every x, there exists a unique y such that x.y=y.x=e. Consequently, the first-order theory [...] obtained from [...] by adding a unary function symbol [...] and the axiomis an <b>extension</b> <b>by</b> definitions of T. Usually, [...] is denoted [...]|$|R
50|$|Adaptive {{representation}} is an <b>extension</b> <b>by</b> Francis Heylighen to Kant's theory of knowledge.|$|R
5000|$|... #Caption: Two-storey <b>extension</b> <b>by</b> Richard Toy at St. Martins at St. Chads Church.|$|R
5000|$|Consequently, {{the ideal}} {{embedding}} {{is given by}} ,and the class <b>extension</b> <b>by</b> [...]|$|R
5000|$|... #Caption: Exterior {{view of the}} museum's <b>extension</b> <b>by</b> British {{architect}} David Chipperfield (2010) ...|$|R
5000|$|... #Caption: Finnish Language Workers' Institute, Helsinki, 1927 and <b>extension</b> <b>by</b> Aulis Blomstedt, 1959.|$|R
50|$|On January 20, 2014, Mercier {{was signed}} to a three-year {{contract}} <b>extension</b> <b>by</b> Genève-Servette.|$|R
50|$|On March 18, 2013, Wieser {{was signed}} to a three-year {{contract}} <b>extension</b> <b>by</b> Davos.|$|R
50|$|On May 24, 2016 Wick {{was signed}} to a three-year {{contract}} <b>extension</b> <b>by</b> Geneva.|$|R
50|$|OTcl {{may also}} {{refer to the}} {{unrelated}} IXI Object Tcl <b>extension</b> <b>by</b> Dean Sheenan.|$|R
5000|$|... #Caption: Finnish Language Adult Education Centre, Helsinki (1927), and <b>extension</b> <b>by</b> Aulis Blomstedt (1959) ...|$|R
5000|$|The {{limit of}} a functor [...] can be {{expressed}} as a Kan <b>extension</b> <b>by</b> ...|$|R
5000|$|On November 16, 2012, he {{was signed}} to a 5-year {{contract}} <b>extension</b> <b>by</b> Kloten.|$|R
2500|$|If [...] we may define its <b>extension</b> <b>by</b> zero [...] in {{the natural}} way, namely ...|$|R
50|$|On June 21, 2017, Emmerton {{was signed}} to a one-year {{contract}} <b>extension</b> <b>by</b> HC Ambri-Piotta.|$|R
50|$|On April 29, 2016, Schappi {{was signed}} to a two-year {{contract}} <b>extension</b> <b>by</b> the Lions.|$|R
5000|$|... #Caption: Highway {{bridge with}} steel hollow box sections, {{performed}} for lifetime <b>extension</b> <b>by</b> welding aftertreatment ...|$|R
