8|575|Public
5000|$|Agnus's timings are {{measured}} in [...] "color clocks" [...] of 280 ns. This {{is equivalent to}} two low resolution (140 ns) pixels or four high resolution (70 ns) pixels. Like Denise, these timings were designed for display on household TVs, and can be synchronized to an <b>external</b> <b>clock</b> <b>source.</b>|$|E
5000|$|Once the probes are connected, {{the user}} {{programs}} the analyzer {{with the names}} of each signal, and can group several signals together for easier manipulation. Next, a capture mode is chosen, either [...] "timing" [...] mode, where the input signals are sampled at regular intervals based on an internal or <b>external</b> <b>clock</b> <b>source,</b> or [...] "state" [...] mode, where {{one or more of the}} signals are defined as [...] "clocks", and data are taken on the rising or falling edges of these clocks, optionally using other signals to qualify these clocks.|$|E
40|$|We {{present a}} {{distributed}} clock synchronization algorithm. It performs clock synchronization on an Ethernet-based real-time token local area network, {{without the use}} of an <b>external</b> <b>clock</b> <b>source.</b> It is used to enable the token schedulers in each node to agree upon a common time. Its intended use is in resource-lean systems, where heavyweight protocols like NTP cannot be used. We present a short overview of the working of the protocol, as well as experimental results. 1...|$|E
40|$|This article {{describes}} an inexpensive way of clock generation for FPGA-based circuit cores, which reduces {{the number of}} <b>external</b> <b>clock</b> <b>sources</b> and eases synchronization problems. We introduce {{a modified version of}} the BRESENHAM line drawing algorithm and use it outside its original application domain for the rational division of clocks. An optimized hardware design for BRESENHAM-based clock division is presented and the quality of its output is evaluated. The optimal initialization conditions in terms of phase shift and jitter are identified and formally proven. Finally, the complexity characteristics of a generic synthesizable VHDL design based on this algorithm are examined and verified by synthesis examples. Special attention is paid to implementation results in conjunction with different FPGA families...|$|R
50|$|It {{can also}} {{transmit}} MIDI Machine Control and MIDI beat clock, and slave to <b>external</b> beat <b>clock</b> <b>sources</b> such as other Roland grooveboxes. It {{can be used}} as a sequencer to drive external synthesizer units. It is the successor to the Roland MC-303 and Roland MC-505. The predecessor to the Roland MC-909 and the Roland MC-808.|$|R
40|$|This {{application}} note delivers {{a system that}} is designed to replace external voltage-controlled crystal oscillator (VCXO) circuits by utilizing functionality within each serial gigabit transceiver. Note: In this {{application note}}, transceiver refers to these types of transceivers: A common design requirement is to frequency or phase lock a transceiver output to an input source (known as loop, recovered, or slave timing). Traditionally, an <b>external</b> <b>clock</b> cleaning device or VCXO and PLL components are used to provide a high-quality clock reference for the transceiver, since FPGA logic-based clocks are generally too noisy. While effective, <b>external</b> <b>clock</b> components carry a power and cost penalty that is additive as each individual clock channel is generated. When using many channels or in low-cost systems, the cost can be signif icant. Additionally, adding many <b>external</b> <b>clock</b> <b>sources</b> provides more opportunity for crosstalk and interference at the board level. The system described in this application note provides a method to effectively replace these <b>external</b> <b>clock</b> components using a combination of unique Xilinx transceiver features in conjunction with a high-performance FPGA logic based digital PLL (DPLL). Each transceiver has a phase interpolator (PI) circuit in the high-speed analog PLL output circuits that provides, on...|$|R
40|$|Abstract: High-speed {{applications}} using ultra-fast data converters {{in their}} design often require an extremely clean clock signal {{to make sure}} an <b>external</b> <b>clock</b> <b>source</b> does not contribute undesired noise to the overal dynamic performance of the system. It is therefore crucial to select suitable system components, which help generate a low phase-jitter clock. The following application note serves as a valuable guide for selecting the appropriate components to design a low-phase noise PLL-based clock generator, suitable for ultra-fast data converters...|$|E
40|$|We propose {{an idea of}} an {{electronic}} multi-channel arbitrary digital sequence generator with temporal granularity equal to a single clock cycle. We implement the generator with 32 channels using a low-cost ARM microcontroller and demonstrate its capability to produce temporal delays ranging from tens of nanoseconds to hundreds of seconds, with 12 ns timing granularity and linear scaling of delay {{with respect to the}} number of delay loop iterations. The generator is optionally synchronized with an <b>external</b> <b>clock</b> <b>source</b> to provide 100 ps jitter and overall sequence repeatability within the whole temporal range. The generator is fully programmable and able to produce digital sequences of high complexity. The concept of the generator can be implemented using different microcontrollers and applied for controlling of various optical, atomic, and nuclear physics measurement setups. Comment: 5 pages, 4 figure...|$|E
30|$|In this work, {{the design}} of a bridge architecture, named as iBRIDGE, is {{proposed}} to overcome the speed gap between commercially available CMOS image sensors and microcontrollers. The iBRIDGE can be configured to work with any DVP-based SD and/or HD image sensor. By using the proposed bridge, a slow and low-power microcontroller (or image processor) with little memory capacity can communicate with high-speed image sensors to capture images of large size. The pixel data can also be accessed in a random access fashion through a parallel memory access interface at a desired speed. The control and status registers provide a comprehensive control of the image sensor. The I 2 C communication protocol is built into the iBRIDGE core. The design is power-efficient as the iBRIDGE forces the image sensor to sleep mode when in data-access mode. An integrated clock generator provides the necessary clock signals eliminating the need for <b>external</b> <b>clock</b> <b>source.</b> When implemented using CMOS 0.18 [*]um Artisan library cells, the design costs 4, 735 gates and 0.12 [*]mm 2 silicon area. The synthesis results show that the iBRIDGE supports a data rate up to 254 [*]MHz and suitable for rapid prototyping in different high-speed and low-power embedded system applications.|$|E
40|$|A {{multi-channel}} time-tagging Time-to-Digital Converter (TDC) ASIC with {{a resolution}} of 24. 4 ps (bin size) has been implemented and fabricated in a 130 nm CMOS technology. An on-chip PLL is used to generate an internal timing reference from an <b>external</b> 40 MHz <b>clock</b> <b>source.</b> The circuit {{is based on a}} 32 element Delay Locked Loop (DLL) which performs the time interpolation. The 32 channel architecture of the TDC is suitable for both triggered and non-triggered applications. The prototype contains test structures such as a substrate noise generator. The paper describes the circuit architecture and its principles of operation...|$|R
50|$|Decoding of N {{elementary}} streams is synchronized {{by adjusting}} the decoding of streams to a common master time base rather than {{by adjusting the}} decoding of one stream to match that of another. The master time base {{may be one of}} the N decoders' <b>clocks,</b> the data <b>source’s</b> <b>clock,</b> or it may be some <b>external</b> <b>clock.</b>|$|R
2500|$|The <b>External</b> <b>Clock</b> Input jack (EXT CLOCK INPUT) was {{eliminated}} {{along with the}} LM-1's ability {{to be driven by}} an <b>external</b> <b>clock</b> oscillator.|$|R
40|$|We present {{investigations}} of optical phenomena and applications using highlynonlinear materials and geometries. We fabricated chalcogenide nanowires with extremely high aspect ratios and core diameters {{as small as}} 500 nm and lengths up to 10 cm. We showed the viability of these nanowires for nonlinear optical devices through demonstrations of nonlinear light-matter interactions in two power regimes. However, the limited durability of chalcogenide nanowires limits their viability for practical optical devices. We next investigate microspheres fabricated from amorphous arsenic triselenide (As 2 Se 3). We developed a novel method of fabrication, {{which was based on}} heating using platinum coils in normal lab conditions and produced high optical quality samples with diameters ranging from 50 [mu]m to 500 [mu]m. We then developed a new method of coupling to high refractive index resonators using silicon waveguides. We demonstrated loaded Q's of 2. 3 × 106 with light centered at 1550 nm. Nevertheless, thermal instabilities limit the practicality of using these resonators for enhanced nonlinear optical interactions. We next developed a novel temporal-imaging system that can be easily synchronized to an <b>external</b> <b>clock</b> <b>source</b> for use in a time-lens based on four-wave mixing for optical processing applications. Spectrally broadening the output of a repetition-rate-agile picosecond time-lens source via self-phase modulation in Corning® Vascade LS+ fiber resulted in a system that has the bandwidth to support optical measurement and processing with sub-picosecond resolutions. As a proof of concept, we implemented our temporal-imaging system in two time-lens systems: a time-to-frequency converter and a temporal-magnification system. We also showed that the timing jitter limits the resolution of our temporal-imaging system to 270 fs. Lastly, we used this temporal-imaging system to create an ultra-high-bandwidth fullfield, amplitude and phase, arbitrary waveform characterization system based on a temporal-phase measurement using heterodyning. We showed single-shot full-field reconstruction with 2. 2 -ps resolution over a record length of 250 ps...|$|E
40|$|The {{advent of}} modern-day {{wireless}} communications systems {{as well as}} other high speed applications imposes exceedingly challenging demands on state-of-the-art Analog-to-Digital Converters (ADCs). The evolution of receiver architectures necessitates very high Signal-to-Noise Ratio (SNR) at intermediate frequencies that up until recently were impossible to achieve. Recent breakthroughs in converter architectures and silicon processes have however enabled the attainment of the required signal purity at input frequencies in excess of 100 MHz. The predominant mechanism limiting high SNR at very high input frequencies in sampled systems is the timing (aperture) uncertainty of the sampling instant, commonly referred to as jitter. In order to achieve the required performance, today's best ADCs must feature jitter significantly below 1 ps RMS. The ADS 5420, a 14 -bit 65 MSps ADC from Texas Instruments, is specifically designed for high-IF sampling application and features industry-leading levels of jitter. This application note proposes an innovative, reliable characterization technique that allows to measure ultra-low jitter levels while also discriminating noise contributions due to jitter from other phenomena (voltage reference and substrate noise, high-amplitude distortion) in ADCs. The jitter estimated with this method closely matches the one inferred from the SNR at high input frequencies, where noise is dominated by the aperture uncertainty. The document outlines therefore a standardized way for measuring and specifying jitter in ADCs, i. e. it proposes the unified test procedure that is notoriously absent in industry today. Moreover, at the sub-picosecond resolution level required by the 14 -bit high-IF ADC under test, any off-chip disturbances substantially affect the accuracy of the measurement also. In order to characterize the uncertainty, we show how the phase noise spectrum of the <b>external</b> <b>clock</b> <b>source</b> can be measured and converted into jitter by way of a rigorous formula...|$|E
3000|$|... 6 The <b>external</b> <b>clock</b> was {{provided}} by Jackson labs equipment along with an external GPS antenna to fine tune the <b>external</b> <b>clock</b> {{in the construction of}} two-antenna single node.|$|R
50|$|The {{internal}} clock frequency {{is generated by}} dividing an <b>external</b> <b>clock</b> signal by two. The Alpha 21164 therefore requires an <b>external</b> <b>clock</b> signal of 600 MHz for a 300 MHz Alpha 21164.|$|R
50|$|AMD Eyefinity is {{implemented}} by multiple on-die display controllers. The 5000-series designs host two internal <b>clocks</b> and one <b>external</b> <b>clock.</b> Displays connected over VGA, DVI, or HDMI each require their own internal clock. But all displays connected over DisplayPort can be driven from only one <b>external</b> <b>clock.</b> This <b>external</b> <b>clock</b> is what allows Eyefinity to fuel {{up to six}} monitors from a single card.|$|R
5000|$|Various crystal or RC {{oscillator}} configurations, or an <b>external</b> <b>clock</b> ...|$|R
5000|$|... #Caption: Hitachi 63C09E, a 3MHz <b>external</b> <b>clock</b> {{version of}} the 6309 ...|$|R
40|$|In {{this paper}} {{we present a}} wide area {{distributed}} sys-tem using a content-based publish/subscribe communi-cation middleware which can deterministically detect and report failures with respect to timely message deliv-ery. Our approach does not require <b>external</b> <b>clock</b> syn-chronization nor does it impose any constraints on the publish/subscribe middleware. We show that our sys-tem performs better and is safer than when using NTP for <b>external</b> <b>clock</b> synchronization. 1...|$|R
25|$|The motor can {{be easily}} {{synchronized}} to an internal or <b>external</b> <b>clock,</b> leading to precise speed control.|$|R
50|$|In computing, {{the clock}} {{multiplier}} (or CPU multiplier or bus/core ratio) measures {{the ratio of}} an internal CPU clock rate to the externally supplied clock. A CPU with a 10x multiplier will thus see 10 internal cycles (produced by PLL-based frequency multiplier circuitry) for every <b>external</b> <b>clock</b> cycle. For example, a system with an <b>external</b> <b>clock</b> of 133 MHz and a 10x clock multiplier will have an internal CPU clock of 1.33 GHz. The external address and data buses of the CPU (often collectively termed front side bus or FSB in PC contexts) also use the <b>external</b> <b>clock</b> as a fundamental timing base; however, they could also employ a (small) multiple of this base frequency (typically two or four) in order to transfer data faster.|$|R
50|$|External network clocking: If you use an <b>external</b> <b>clock</b> to {{synchronize}} {{your network}} components you can 'feed' this clock into all shelves.|$|R
50|$|<b>Clock</b> <b>sources</b> {{used for}} {{synchronization}} in telecommunications networks are rated by quality, commonly called a stratum. Typically, a network element uses {{the highest quality}} stratum available to it, which can be determined by monitoring the synchronization status messages (SSM) of selected <b>clock</b> <b>sources.</b>|$|R
5000|$|The MOS Technology 6512 was a 6502 with a 2-phase {{clock input}} for an <b>external</b> <b>clock</b> oscillator, {{instead of an}} {{on-board}} clock oscillator.|$|R
5000|$|Wide {{operating}} frequency range, using a single-phase <b>clock</b> <b>source.</b>|$|R
50|$|Clock {{requirements}} {{were met}} by connecting an 8 MHz crystal directly to two pins. Alternatively, out of phase signals from an <b>external</b> <b>clock</b> generator could be used.|$|R
50|$|The ACIA has an {{internal}} baud rate generator, {{eliminating the need}} for multiple component support circuits. The transmitter rate can be selected under program control to be 1 of 15 different rates from 50 to 19,200 bits per second, or at 1/16 times an <b>external</b> <b>clock</b> rate. The receiver rate may be selected under program control to be either the Transmitter rate or at 1/16 times the <b>external</b> <b>clock</b> rate. The ACIA has programmable word lengths of 5, 6, 7 or 8 bits; even, odd or no parity 1, 1½ or 2 stop bits.|$|R
50|$|The {{game was}} {{originally}} planned around a Motorola 6809E processor, but {{problems with the}} <b>external</b> <b>clock</b> for this CPU led to its abandonment {{in favor of a}} Zilog Z80.|$|R
2500|$|Cloudflare was {{affected}} by the 2016 leap second. Its DNS resolver implementation calculated a negative number when subtracting two timestamps obtained from the Go programming language's time.Now (...) function, which uses a real-time <b>clock</b> <b>source.</b> [...] This {{could have been avoided}} by using a monotonic <b>clock</b> <b>source,</b> but the Go language does not presently have a built-in API for that.|$|R
50|$|Synchronous and {{asynchronous}} transmissions are {{two different}} methods of transmission synchronization. Synchronous transmissions are synchronized by an <b>external</b> <b>clock,</b> while asynchronous transmissions are synchronized by special signals along the transmission medium.|$|R
50|$|A {{general rule}} is that DCE devices provide the clock signal (internal clocking) and the DTE device synchronizes on the {{provided}} <b>clock</b> (<b>external</b> <b>clocking).</b> D-sub connectors follow another rule for pin assignment.|$|R
5000|$|<b>External</b> <b>clock</b> {{synchronization}} {{by choosing}} a [...] "preferred" [...] reference frame (like the CMB) {{and using the}} clocks of this frame to synchronize the clocks in all other frames ("absolute" [...] synchronization).|$|R
5000|$|Bit 74 ("Binary group flag 1") was {{previously}} unassigned, but {{is used to}} indicate that the time code is synchronized to an <b>external</b> <b>clock.</b> If zero, the timecode start time is arbitrary.|$|R
50|$|Since the DDR2 {{internal}} clock runs at half the DDR <b>external</b> <b>clock</b> rate, DDR2 memory operating {{at the same}} <b>external</b> data bus <b>clock</b> rate as DDR results in DDR2 being able to provide the same bandwidth but with higher latency. Alternatively, DDR2 memory operating at twice the <b>external</b> data bus <b>clock</b> rate as DDR may provide twice the bandwidth with the same latency. The best-rated DDR2 memory modules are {{at least twice as}} fast as the best-rated DDR memory modules.|$|R
50|$|CMOS {{implementations}} of the Z8030 and Z8530. Plug {{compatible with}} the early versions, adding the 2x speed when used with the <b>external</b> <b>clock,</b> {{and a number of}} bug fixes and improvements in the link layer protocols.|$|R
