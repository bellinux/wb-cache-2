17|41|Public
50|$|LMDS and BRS {{wireless}} modems {{utilize the}} DOCSIS+ key-management protocol to obtain authorization and traffic encryption material from a WMTS, {{and to support}} periodic reauthorization and <b>key</b> <b>refresh.</b> The key-management protocol uses X.509 digital certificates, RSA public key encryption, and Triple DES encryption to secure key exchanges between the wireless modem and the WMTS.|$|E
40|$|Time-driven Key Sequencing (TKS) {{is a key}} {{management}} technique that synchronizes the session key used {{by a set of}} communicating principals based on time of day. This relatively low cost method of session key synchronization has been used in specialized distributed systems with low-end communicating devices where sessions are sparse and each session spans a short time period comprising a small number of messages. In this paper, we describe how TKS may be useful in several scenarios involving high speed computer networks. More importantly, we present a performance model of TKS and conduct a detailed analysis to determine the impact of clock drift and network latency on the required <b>key</b> <b>refresh</b> rate. We give the exact conditions for determining the range of adequate <b>key</b> <b>refresh</b> rates, and demonstrate that the derived conditions are sufficient to ensure that data are both protected and deliverable. Interestingly, these conditions may be used to obtain a <b>key</b> <b>refresh</b> rate that can tolerate a maximum amount of clock drift after other parameters in the system are fixed. 1...|$|E
30|$|We {{develop in}} this paper a key {{management}} framework well adapted to WSNs challenges especially scalability. We focus on establishing a <b>key</b> <b>refresh</b> scheme with minimum costs that allows {{to deal with the}} resistance against the hardest attack: node compromising.|$|E
40|$|We {{say that}} a {{cryptographic}} scheme is Continuous Leakage-Resilient (CLR), if it allows users to <b>refresh</b> their secret <b>keys,</b> using only fresh local randomness, such that: • The scheme remains functional after any number of <b>key</b> <b>refreshes,</b> although the public key never changes. Thus, the “outside world ” is neither affected by these <b>key</b> <b>refreshes,</b> nor needs to know about their frequency. • The scheme remains secure even if the adversary can continuously leak arbitrary information about the current secret-key of the system, {{as long as the}} amount of leaked information is bounded in between any two successive <b>key</b> <b>refreshes.</b> There is no bound on the total amount of information that can be leaked during the lifetime of the system. In this work, we construct a variety of practical CLR schemes, including CLR one-way relations, CLR signatures, CLR identification schemes, and CLR authenticated key agreement protocols. For each of the above, we give general constructions, and then show how to instantiate them efficiently using a well established assumption on bilinear groups, called the K-Linear assumption (for any constant K ≥ 1). Our constructions are highly modular, and we develop many interesting techniques and building-block...|$|R
50|$|BPI/SEC is {{intended}} to prevent cable users from listening to each other. It does this by encrypting data flows between the CMTS and the cable modem. BPI and BPI+ use 56-bit DES encryption, while SEC adds support for 128-bit AES. All versions provide for periodic <b>key</b> <b>refreshes</b> (at a period configured by the network operator) {{in order to increase}} the level of protection.|$|R
40|$|Abstract. The {{problem of}} {{establishing}} symmetric keys in {{wireless sensor networks}} has been extensively studied, but other aspects of key management have received comparatively little attention. In this paper we consider the problem of <b>refreshing</b> <b>keys</b> that are shared among several nodes in a WSN, {{in order to provide}} forward security. We discuss several applications that lead to sensor networks with very different properties, and we propose <b>key</b> <b>refreshing</b> schemes that are useful in each of these environments, together with resynchronisation methods that allow nodes possessing different versions of a key to arrive at a common version...|$|R
40|$|Proc. IEEE First International Workshop on Assurance in Distributed Systems and Networks, Vienna, Austria, July 2002. The {{article of}} record as {{published}} {{may be found}} at [URL] Key Sequencing (TKS) is a key management technique that synchronizes the session key used {{by a set of}} communicating principals based on time of day. This relatively low cost method of session key synchronization has been used in specialized distributed systems with low-end communicating devices where sessions are sparse and each session spans a short time period comprising a small number of messages. In this paper, we describe how TKS may be useful in several scenarios involving high speed computer networks. More importantly, we present a performance model of TKS and conduct a detailed analysis to determine the impact of clock drift and network latency on the required <b>key</b> <b>refresh</b> rate. We give the exact conditions for determining the range of adequate <b>key</b> <b>refresh</b> rates, and demonstrate that the derived conditions are sufficient to ensure that data are both protected and deliverable. Interestingly, these conditions may be used to obtain a <b>key</b> <b>refresh</b> rate that can tolerate a maximum amount of clock drift after other parameters in the system are fixed...|$|E
30|$|To {{avoid the}} single point of failure, no {{important}} system secret must be allocated {{to a single}} node and DCA key pairs must be generated in a distributed way. Also, a <b>key</b> <b>refresh</b> protocol is required {{to ensure that the}} lifetimes of critical keys are restricted. In addition, intra DCA data must be secured with encryption or digital signatures.|$|E
30|$|In general, {{existing}} {{symmetric key}} management solutions for WSNs focus {{particularly on the}} efficiency of key establishment after the deployment of the network. However, they do not deal with <b>key</b> <b>refresh</b> which makes key management dynamic and adds a further difficulty {{to the task of}} attackers. Furthermore, existing solutions neglect the effect of captured node attacks.|$|E
30|$|Our {{future work}} {{should focus on}} the {{attribute}} revocation and <b>key</b> <b>refreshing</b> in our KP-ABS scheme. Once key exposure happens, although the system can trace the traitor, however, user’s private keys still need to be refreshed for the safe of privacy. Consequently, research on the attribute based refreshing mechanisms should be taken into our future research direction. Besides, outsourcing ABS [9] with untrusted attribute authorities also merits attention.|$|R
30|$|Our {{future work}} {{should focus on}} the {{attribute}} revocation and <b>key</b> <b>refreshing</b> in the attribute based encryption. Since users with the same set of attributes share the same private key, once a single user’s private key has been leaked, a group of users’ privacy and privilege will be damaged. Consequently, protecting users’ privacy and <b>refreshing</b> private <b>keys</b> at a lower cost when private key leakage happens is a problem urgently to be solved and should be taken into our future research direction.|$|R
40|$|Abstract — Security is an {{important}} issue for networks, especially for those security-sensitive applications. In the entire environment of security, it is necessary to ensure privacy. This Paper provides share <b>key</b> <b>refreshing</b> technique for maintaining the security of the system, even when some nodes are in control of attacker. It provides an automated recovery of the security of individual components, avoiding the use of expensive and inconvenient manual processes. The technique can be used with threshold cryptography, by providing periodic refreshments of the sensitive data held by the servers. This way, the proactive approach guarantees uninterrupted security as long as not too many servers are broken into at the same time. In this paper a solution is provided to enhance security among communication channel. Towards this a share <b>key</b> <b>refreshing</b> technique is represented in the form of algorithm in which some trusted nodes share the private key, which is a part of private-public key pair. It is distributed on some trusted systems according to threshold cryptography. Now once shares are distributed they must be refreshed otherwise attacker can easily obtain those shares and generate the key. Once shares are distributed they must be refreshed after some period of time. We also present implementation details for this scheme...|$|R
30|$|In both cases, it is {{the base}} station that decides if it issues a <b>key</b> <b>refresh</b> or not. We suppose that the base station has more means and {{resources}} to detect malicious/captured nodes. Captured nodes may also send REFRESH-REQ messages only to consume energy and to evict honest nodes from the network. If the base station detects this behavior, it may issue a REFRESH message that evicts the node that sends the REFRESH-REQ from the network.|$|E
40|$|We {{report the}} results of the {{implementation}} of a quantum key distribution (QKD) network using standard fibre communication lines in Moscow. The developed QKD network is based on the paradigm of trusted repeaters and allows a common secret key to be generated between users via an intermediate trusted node. The main feature of the network is the integration of the setups using two types of encoding, i. e. polarisation encoding and phase encoding. One of the possible applications of the developed QKD network is the continuous key renewal in existing symmetric encryption devices with a <b>key</b> <b>refresh</b> time of up to 14 s. Comment: 5 pages, 3 figure...|$|E
40|$|International audienceEnsuring key {{management}} in Wireless Sensor Networks has a vital importance, especially when sensor nodes have {{to communicate in}} hostile environments. In this paper, we propose a new simple and resource-aware {{key management}} scheme. The scheme {{is based on the}} idea that the initial pre-distributed key is not pre-loaded in all nodes to improve its resilience to node compromising attacks. Each node has to store an initial key, a set of prime number groups and a pseudo-random function. This pre-distributed secret in- formation is used to establish pairwise keys between adja- cent nodes after their deployment. Moreover, the proposed scheme is dynamic since it allows a flexible <b>key</b> <b>refresh...</b>|$|E
30|$|Key {{exposure}} {{protection is}} another issue remains to be tackled in attribute based cryptosystem. Although many schemes have achieved forward and backward security in terms of attribute revocation (Hur 2013; Yu et al. 2010), however, the system is still at risk when key exposure happens. If the private key owned by a non-revoked user leaks, any user can use the private key to decrypt the corresponding ciphertext since the leaked private key is still a valid one. Consequently, all the potential threat calls for frequent <b>key</b> <b>refreshing</b> in attribute based cryptosystem. When key exposure happens, effective and efficient key updating mechanism should be implemented to keep the system from potential threat.|$|R
30|$|Besides efficiency, key {{exposure}} {{protection is}} another issue urgently to be solved in ABE. Many existing schemes have guaranteed forward and backward security when attribute revocation happens by introducing a proxy re-encryption server (Hur and Noh 2011; Yu et al. 2010). However, these schemes only focus on the key regeneration of the revoked users, but neglect the key updating for non-revoked users. If a non-revoked user’s private key leaks, the confidentiality of the system will be threatened since the leaked private key is still a valid one. In fact, in attribute based cryptosystem, <b>key</b> <b>refreshing</b> is more important since either attribute revocation or private key exposure protection calls for frequent key-updating. Xu and Martin (2012) proposed an ABE scheme with secure <b>key</b> <b>refreshing</b> in, but their scheme has to regenerate the master key and public parameters in the system, this will bring about much more computation overheads when key updating happens. Key-insulation (Dodis et al. 2002) is a promising tool to guarantee forward and backward security as well as achieving high efficiency of key updating. In this mechanism, the lifetime {{of the system is}} divided into discrete periods. The public key remains unchanged throughout the lifetime, while temporary secret keys are updated periodically. Key-insulation mechanism can provide full security when user’s private key exposure happens and it has been designed for effective key exposure protection in identity based cryptosystem (Zhu et al. 2014), certificateless cryptosystem (Chen et al. 2015), etc. The advantage of key-insulation mechanism can also be combined into attribute based cryptosystem and propose a key-insulated ABE scheme with efficient and secure key updating.|$|R
40|$|Resource {{and cost}} {{constraints}} remain {{a challenge for}} wireless sensor network security. In this paper, we propose {{a new approach to}} protect confidentiality against a parasitic adversary, which seeks to exploit sensor networks by obtaining measurements in an unauthorized way. Our low-complexity solution, GossiCrypt, leverages on the large scale of sensor networks to protect confidentiality efficiently and effectively. GossiCrypt protects data by symmetric key encryption at their source nodes and re-encryption at a randomly chosen subset of nodes en route to the sink. Furthermore, it employs <b>key</b> <b>refreshing</b> to mitigate the physical compromise of cryptographic keys. We validate GossiCrypt analytically and with simulations, showing it protects data confidentiality with probability almost one. Moreover, compared with a system that uses public-key data encryption, the energy consumption of GossiCrypt is from tens to thousands of times lower...|$|R
40|$|Abstract—Hierarchical Sensor Network {{organization}} {{is widely used}} to achieve energy efficiency in Wireless Sensor Networks(WSN). To achieve security in hierarchical WSN, {{it is important to}} be able to encrypt the messages sent between sensor nodes and its cluster head. The key management task is challenging due to resource constrained nature of WSN. In this paper we are proposing two key management schemes for hierarchical networks which handles various events like node addition, node compromise and <b>key</b> <b>refresh</b> at regular intervals. The Tree-Based Scheme ensures in-network processing by maintaining some additional intermediate keys. Whereas the CRT-Based Scheme performs the key management with minimum communication and storage at each node...|$|E
30|$|Several key {{management}} protocols for WSNs were proposed {{to respond to}} the security requirements of these environments. Unfortunately, node compromising is rarely or not enough investigated and most of these protocols have a weak resilience to this attack. In this paper, we present a symmetric-based {{key management}} solution for WSNs called STKM (Spanning Tree Key Management for WSN). STKM is a simple and robust solution to secure node-to-node and node-to-base station communications. STKM assumes a random deployment of nodes. It builds a tree that spans all the sensor nodes. This tree allows <b>key</b> <b>refresh</b> with small costs. Simulation results show that STKM is very resilient to node compromise while preserving energy consumption at the level of sensor nodes.|$|E
40|$|Quantum {{cryptography}} {{is going}} to find practically useful applications. Recently some first quantum cryptographic solutions became available on the market. For clients {{it is important to be}} able to compare the quality and properties of the proposed products. To this end one needs to elaborate on specifications and standards of solutions in quantum cryptography. We propose and discuss a list of characteristics for the specification, which includes numerical evaluations of the security of solution and can be considered as a standard for quantum key distribution solutions. The list is based on the average time of key generation depending on some parameters. In the simplest case for the user the list includes three characteristics: the security degree ε, the length of keys m and the <b>key</b> <b>refresh</b> rate R...|$|E
40|$|Abstract. We {{present a}} general method to compile any {{cryptographic}} algorithm into one which resists side channel attacks {{of the only}} computation leaks information variety for an unbounded number of executions. Our method uses as a building block a semantically secure subsidiary bit encryption scheme with the following additional operations: <b>key</b> <b>refreshing,</b> oblivious generation of cipher texts, leakage resilience re-generation, and blinded homomorphic evaluation of one single complete gate (e. g. NAND). Furthermore, the security properties of the subsidiary encryption scheme should withstand bounded leakage incurred while performing each of the above operations. We show how to implement such a subsidiary encryption scheme under the DDH intractability assumption {{and the existence of}} a simple secure hardware component. The hardware component is independent of the encryption scheme secret key. The subsidiary encryption scheme resists leakage attacks where the leakage is computable in polynomial time and of length bounded by a constant fraction of the security parameter. ...|$|R
40|$|Due {{to their}} limited capabilities, {{wireless}} sensor nodes {{are subject to}} physical attacks {{that are hard to}} defend against. In this paper, we first identify a typical attacker called parasitic adversary, who seeks to exploit sensor networks by obtaining measurements in an unauthorized way. As a countermeasure, we first employ a randomized key refreshing: with low communication cost, it aims at confining (but not eliminating) the effects of the adversary. Moreover, our low-complexity solution, GossiCrypt, leverages on the large scale of sensor networks to protect data confidentiality, efficiently and effectively. GossiCrypt applies symmetric key encryption to data at their source nodes and re-encryption at a randomly chosen subset of nodes en route to the sink. The combination of randomized <b>key</b> <b>refreshing</b> and GossiCrypt protects data confidentiality with a probability of almost 1; we show this analytically and with simulations. In addition, the energy consumption of GossiCrypt is lower than a public-key based solution by several orders of magnitude...|$|R
40|$|Since {{wireless}} sensor networks {{continue to}} grow in usage and many sensor-based systems reside in adversarial environments, security consideration is really vital for these systems. But {{one of the main}} challenges for the efficient distribution of security keys in {{wireless sensor networks}} is the resource scarcity. This paper presents an efficient Self Key Establishment protocol for Wireless sensor networks, nicknamed SKEW, in support of innetwork processing. We show that SKEW manages keys with less storage, communication, key transmission frequency, and computational overheads in comparison with similar protocols for the same purpose. All of these benefits are attained by usage of a very few number of messages for key distribution. Since SKEW preserves the network security even before start up time, it can well serve as a base security protocol for all types of security protocols in wireless sensor networks. In this protocol, none of the sensors in the network can send any packets without encryption. It also uses a <b>key</b> <b>refreshing</b> mechanism that prolongs the network security. Smart dust networks and pervasive computing environments can particularly benefit from the proposed protocol...|$|R
40|$|Publish/subscribe systems {{provide an}} efficient, event-based, wide-area {{distributed}} communications infrastructure. Large scale publish/subscribe systems {{are likely to}} employ components of the event transport network owned by cooperating, but independent organisations. As {{the number of participants}} in the network increases, security becomes an increasing concern. This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types. <b>Key</b> <b>refresh</b> allows us to ensure forward and backward security when event brokers join and leave the network. We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions. We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks...|$|E
40|$|International audienceSeveral {{protocols}} {{have been}} proposed to deal withthe group key management problem in mobile ad hoc networks. Most of these protocols organize the network into clusters toreduce the cost of <b>key</b> <b>refresh</b> or rekeying. Rekeying constitues achallenging issue in group key management because it must belaunched whenever {{the constitution of the}} group is altered followinga leave or a join operation. However, cluster maintenancemay also generate sinifficative communication overhead. So, theclustering algorithm {{is an important factor in}} the performanceof any key management solution. A clustering algorithm thatensures stable clusters in spite of mobility is very appreciablein mobile ad hoc networks. In fact, all the overhead due to thetraffic generated by cluster adjustments and the related rekeyingprocedures will be saved. As far as we know, no existing clusteringalgorithm takes into account self-stabilization while relying on themobility resilience of graph alliances. In this paper, we propose afully distributed and self-stabilizing clustering algorithm for keymanagement in MANETs where each cluster is an alliance...|$|E
40|$|Abstract [...] Although WiMAX is {{considered}} to be the last mile protocol but its security still remains a question because it neither encrypts the MAC (Media access control) headers nor the media MAC management messages. Therefore, an attacker can easily launch passive attacks to monitor WiMAX traffic and can retrieve valuable information from unencrypted MAC management messages. This research paper focuses on the analysis of security threats and their mitigation at MAC Layer of WiMAX. PKM (Privacy and Key management) protocol is used in this regard to gain authorization and traffic keying material between the Base Station to Subscriber Station, and to maintain periodic reauthorization and <b>key</b> <b>refresh.</b> The 128 bit key based AES (Advance Encryption Standard) encryption is also implemented. The target is to encrypt communication between WIMAX based BS (Base station) and MS/SS(Mobile station/subscriber station) using AES where encryption is applied on all the packets exchanged. All the simulations are made in OMNET++ and visual C++ language to visualize encrypted packet transmission between BS and SS...|$|E
40|$|We {{present a}} general method to compile any {{cryptographic}} algorithm into one which resists side channel attacks {{of the only}} computation leaks information variety for an unbounded number of executions. Our method uses as a building block a semantically secure subsidiary bit encryption scheme with the following additional operations: <b>key</b> <b>refreshing,</b> oblivious generation of cipher texts, leakage resilience re-generation, and blinded homomorphic evaluation of one single complete gate (e. g. NAND). Furthermore, the security properties of the subsidiary encryption scheme should withstand bounded leakage incurred while performing each of the above operations. We show how to implement such a subsidiary encryption scheme under the DDH intractability assumption {{and the existence of}} a simple secure hardware component. The hardware component is independent of the encryption scheme secret key. The subsidiary encryption scheme resists leakage attacks where the leakage is computable in polynomial time and of length bounded by a constant fraction of the security parameter. 30 th Annual Cryptology Conference, Santa Barbara, CA, USA, August 15 - 19, 2010. ProceedingsIsrael Science Foundation (710267) United States-Israel Binational Science Foundation (710613) National Science Foundation (U. S.) (6914349) Weizmann KAMAR Gran...|$|R
30|$|In intra-WBAN {{communication}} {{each time}} a <b>key</b> is <b>refreshed,</b> the whole process is repeated, i.e., the features are extracted and quantized, and then the keys are generated after the feature exchange process between the communicating sensors. Also in intra-WBAN communication, the key establishment latency (join and leave latency) occurs very rarely, as the node leaving and joining occurs only when the node failure happens, e.g., due to power failure or malfunctioning. Hence, due to these properties of intra-WBAN communication, its communication and computation costs are relatively minimal.|$|R
3000|$|... generates ICK and Knet by extracting nonceCHa, and {{the keys}} are {{verified}} by checking the MAC value. Master <b>key</b> KM is <b>refreshed</b> by RBS. RBS sends random integer r to CH for the refreshment of KM; CH generates new KM by applying hash function on r {{and the old}} KM.|$|R
40|$|MANET or Mobile Adhoc Network {{has drawn}} {{considerable}} research attention and application {{over the last}} few years. With the increase of applicability, and adaptability of the network in Private virtual network or wireless personal area network, the attacks and intrusion of MENT data has also increased which has lead to design various protocol extensions over the conventional 802. 11 MAC security extensions for providing more security to such a network. MANET sessions are generally short and busty which requires the security extension to be designed in such a manner that the keys are short lived and refreshed frequently {{in order to make it}} impossible for intruder to hack any data. Therefore conventional public key cryptography with centralized key distribution mechanisms are not well suited for MANET. Therefore in this work we propose a unique decentralized dynamic key generation and security extension for MANET where keys are generated depending upon the state of a node and it’s link status like its energy, relative mobility, QOS parameters like delay, bandwidth, power loss based on fuzzy inference rule set. This key is further combined with a user level password for authentication and digital content encryption. As the state of the nodes differs almost in every session and sometimes in the middle of a session, hacking such key is theoretically “impossible” as the <b>key</b> <b>refresh</b> time is minimum here. The proposed technique is simulated with OMNET++ environment. Result shows significant proof of real time adaptability of the technique...|$|E
40|$|Abstract: Problem statement: In a {{heterogeneous}} environment, for a secure multicast communication, the group members {{have to share}} a secret key {{which is used to}} encrypt/decrypt the secret messages among the members. The Secure Group Communication of large scale multicast group in a dynamic environment is more complex than securing one-to-one communication due to the inherent scalability issue of group key management. Since the group members are dynamic in nature such as joining or leaving the group, the key updating is performed among the valid members without interrupting the multicast session so that non group members can’t have access to the future renewed keys. Approach: The main aim is to develop a scheme which can reduce the cost of computational overhead, number of messages needed during the time of <b>key</b> <b>refreshing</b> and the number of keys stored in servers and members. The cost of establishing the key and renewal is proportionate {{to the size of the}} group and subsequently fetches a bottleneck performance in achieving scalability. By using a Cluster Based Hierarchical Key Distribution Protocol, the load of key management can be shared among dummy nodes of a cluster without revealing the group messages to them. Results: Especially, the existing model incurs a very less computational and communication overhead during renewal of keys. The proposed scheme yields better scalability because of the fact that the Key computational cost, th...|$|R
40|$|Group key {{agreement}} protocols {{are crucial}} for achieving secure group communications. They {{are designed to}} provide a set of users with a shared secret key to achieve cryptographic goal over a public network. When group membership changes, the session <b>key</b> should be <b>refreshed</b> efficiently and securely. Most previous group key agreement protocols need at least two rounds to establish or <b>refresh</b> session <b>keys.</b> In this paper, a dynamic authenticated group key agreement (DAGKA) protocol based on identity-based cryptography is presented. By making use of the members' values stored in previous sessions, our Join and Leave algorithms reduce the computation and communication costs of members. In the proposed protocol, Setup and Join algorithms need one round. The session <b>key</b> can be <b>refreshed</b> without message exchange among remaining users in Leave algorithm, which makes the protocol more practical. Its security is proved under decisional bilinear Diffie-Hellman (DBDH) assumption in random oracle model. National High-Tech Research & Development Program of China 2009 AA- 01 Z 414; National Natural Science Foundation of China 60903210, 10871222; Chinese Academic of Sciences YYYJ- 1013 Group key agreement protocols are crucial for achieving secure group communications. They are {{designed to provide a}} set of users with a shared secret key to achieve cryptographic goal over a public network. When group membership changes, the session <b>key</b> should be <b>refreshed</b> efficiently and securely. Most previous group key agreement protocols need at least two rounds to establish or <b>refresh</b> session <b>keys.</b> In this paper, a dynamic authenticated group key agreement (DAGKA) protocol based on identity-based cryptography is presented. By making use of the members' values stored in previous sessions, our Join and Leave algorithms reduce the computation and communication costs of members. In the proposed protocol, Setup and Join algorithms need one round. The session <b>key</b> can be <b>refreshed</b> without message exchange among remaining users in Leave algorithm, which makes the protocol more practical. Its security is proved under decisional bilinear Diffie-Hellman (DBDH) assumption in random oracle model...|$|R
5000|$|In 1968, she {{operated}} out of <b>Key</b> West; conducted <b>refresher</b> training out of Guantanamo Bay; and, in August, {{participated in}} support operation {{for the practice}} firing of Polaris missiles by nuclear submarine [...] Later in the year, she conducted special operations in the Bahamas and acted as school ship for the Fleet Sonar School at Key West.|$|R
40|$|This paper {{presents}} the implementation and performance {{evaluation of a}} real, secure object-based storage system compliant to the T 10 OSD standard. In contrast to previous work, our system implements the entire three security methods of the OSD security protocol defined in the standard, namely CAPKEY, CMDRSP and ALLDATA, and an Oakley-based authentication protocol by which the Metadata Server (MDS) and client {{can be sure of}} each other’s identities. Moreover, our system supports concurrent operations from multiple clients to multiple OSDs. The MDS, a combination of security manager and storage/policy manager, performs access control, global namespace management, and concurrency control. We also evaluate the performance and scalability of our implementation and compare it with iSCSI, NFS and Lustre storage configurations. The overhead of access control is small: compared with the same system without any security mechanism, bandwidth for reads and writes with the CAPKEY and CMDRSP methods decreases by less than 5 %, while latency for metadata operations with any of the security methods increases by less than 0. 3 ms (5 %). The system with the ALLDATA method suffers a higher performance penalty: large sequential accesses run at 46 % and 52 % of the maximum bandwidth of unsecured storage for reads and writes respectively. The aggregate throughput scales with the number of OSDs (up to 8 in our experiments). The overhead of the SET KEY commands for partition and working <b>keys</b> <b>refreshed</b> frequently is less than 2 ms. Corresponding author...|$|R
40|$|Abstract: Using Data-Dependent (DD) Permutations (DDP) as main {{cryptographic}} primitive, a new 64 -bit {{block cipher}} is presented, ten-round DDP- 64. Since {{the sum of}} all outputs of the conventional DDP is a linear Boolean function, non-linear DDP-based operation F is used additionally in DDP- 64. The DDP- 64 is a pure DDP-based cipher, i. e. it uses only permutations and the XOR operation. The designed cipher uses very simple key scheduling that defines high performance, {{especially in the case of}} frequent <b>key</b> <b>refreshing.</b> A novel feature of DDP- 64 is the use of the switchable operation preventing the weak keys. The offered high level security strength does not sacrifice the implementation performance of DDP- 64. Design and hardware implementation architectures of this cipher are presented. The synthesis results for both Field Programmable Gate Arrays (FPGA) and Application Specific Integrated Circuits (ASIC) implementations prove that DDP- 64 is very flexible and powerful new cipher, especially for high speed WLANs and WPANs. The achieved hardware performance up to 6. 5 Gbps and the implementation area cost of DDP- 64 are compared with other ciphers, used in security layers of wireless protocols (Bluetooth, WAP, OMA, UMTS and IEEE 802. 11). From these comparisons, it is proven that DDP- 64 is a flexible new cipher with better performance in most of the cases, suitable for wireless communications networks of present and future. Keywords: Data-dependent permutations, hardware implementation, fast encryption, block cipher, security...|$|R
