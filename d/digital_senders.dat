0|10|Public
50|$|Early <b>digital</b> video <b>sender</b> models {{typically}} transmitted in DVD quality, {{but more}} recent models {{are capable of}} achieving 720p and 1080p high-definition resolutions.|$|R
40|$|This article {{outlines}} Pace University Library 2 ̆ 7 s {{commitment to}} address the needs of the university distance education populace. Discussion focuses on one of the programs offered by Pace University, e-MBA (executive MBA). Pace University Library offers many services to meet the research needs of its remote users. These include remote access to electronic resources, Interlibrary Loan, a toll-free number, and an online form for submission of reference queries. To improve document delivery services, the library subsidizes SUMO uncover, and also uses <b>Digital</b> <b>sender</b> to e-mail or fax documents to students. Pace University LIbrary continuously looks at new methods to effectively serve its distance education populace...|$|R
50|$|<b>Digital</b> video <b>senders</b> {{are quickly}} {{becoming}} {{the most popular}} solution and combine {{the use of a}} system on chip (used for audio and video encoding/decoding) with a means of transmitting the signal, such as spread-spectrum, Wi-Fi and ultra-wideband.|$|R
50|$|Modern {{cryptographic}} systems include symmetric-key algorithms (such as DES and AES) and public-key algorithms (such as RSA). Symmetric-key algorithms use {{a single}} shared key; keeping data secret requires keeping this key secret. Public-key algorithms use a public key {{and a private}} key. The public key is made available to anyone (often {{by means of a}} <b>digital</b> certificate). A <b>sender</b> encrypts data with the public key; only the holder of the private key can decrypt this data.|$|R
30|$|Applications of {{asymmetric}} encryption in Blockchain systems mainly include information encryption and digital signature. In information encryption, the sender node uses the receiver node’s public key to encrypt the information, and broadcasts {{the information to}} the network; only nodes which hold the receiver’s private key can decrypt the information. In <b>digital</b> signature, the <b>sender</b> encrypts a message using its private key, and broadcasts the message to the network. The receiver decrypts the message with the sender’s public key, to verify that the message is sent by the sender. Many {{asymmetric encryption}} algorithms [6] are available, such as SHA 256, RIMPED 160, RSA, Elgamal, Rabin, D-H, and ECC.|$|R
50|$|To send {{a message}} using EPKE, the sender of the message first signs the message using their own private key, this ensures {{non-repudiation}} of the message. The sender then encrypts their digitally signed message using the receiver's public key thus applying a digital envelope to the message. This step ensures confidentiality during the transmission of the message. The receiver of the message then uses their private key to decrypt the message thus removing the digital envelope and then uses the sender's public key to decrypt the <b>sender's</b> <b>digital</b> signature. At this point, if the message has been unaltered during transmission, the message will be clear to the receiver.|$|R
50|$|Due to the {{computationally}} complex {{nature of}} RSA-based asymmetric encryption algorithms, the time taken to encrypt large documents or files to be transmitted can be relatively long. To {{speed up the}} process of transmission, instead of applying the <b>sender's</b> <b>digital</b> signature to the large documents or files, the sender can rather hash the documents or files using a cryptographic hash function and then digitally sign the generated hash value, therefore enforcing non-repudiation. Hashing is a much faster computation to complete as opposed to using an RSA-based digital signature algorithm alone. The sender would then sign the newly generated hash value and encrypt the original documents or files with the receiver's public key. The transmission would then take place securely and with confidentiality and non-repudiation still intact. The receiver would then verify the signature and decrypt the encrypted documents or files with their private key.|$|R
50|$|Digital {{signatures}} employ asymmetric cryptography. In {{many instances}} {{they provide a}} layer of validation and security to messages sent through a non-secure channel: Properly implemented, a digital signature gives the receiver reason to believe the message was sent by the claimed <b>sender.</b> <b>Digital</b> seals and signatures are equivalent to handwritten signatures and stamped seals. Digital signatures are equivalent to traditional handwritten signatures in many respects, but properly implemented digital signatures {{are more difficult to}} forge than the handwritten type. Digital signature schemes, in the sense used here, are cryptographically based, and must be implemented properly to be effective. Digital signatures can also provide non-repudiation, meaning that the signer cannot successfully claim they did not sign a message, while also claiming their private key remains secret; further, some non-repudiation schemes offer a time stamp for the digital signature, so that even if the private key is exposed, the signature is valid. Digitally signed messages may be anything re-presentable as a bitstring: examples include electronic mail, contracts, or a message sent via some other cryptographic protocol.|$|R
40|$|In {{wireless}} <b>digital</b> communications, the <b>sender</b> {{and receiver}} typically know the modulation scheme {{with which they}} will be communicating. Automatic modulation identification {{is the ability to}} identify the modulation in a communication system with little to no prior knowledge of the modulation scheme. Many techniques for modulation identification operate on many assumptions including that the input signal is base-banded, the carrier frequency is known and that the signal is narrow-band (i. e. neighboring signals in the wide-band are excluded). This work provides the blind processing of an arbitrary wide-band signal to allow such assumptions. The challenges of such a front-end or pre-processor include detecting signals which can appear at any frequency, with any band-width at any given time and for any arbitrary duration. This work takes as its input a wide-band signal with a random number of sub-signals, each turning on and o at random times and each at random locations in the frequency domain. The output of the system is a collection of signals corresponding to each sub-signal brought down to base-band, isolated in the frequency and time domains, nominally sampled and with estimates of key parameters...|$|R
40|$|Our {{world of}} people and objects {{is on the verge}} of {{transforming}} to a world of highly-interconnected wireless devices. Incredible advances in wireless communications, hardware design, and power storage have facilitated hasty spread of wireless technologies in human life. In this new world, individuals are often identified and reached via one or multiple wireless devices that they always carry (e. g., smartphones, smart wearable, implantable medical devices, etc.), and their biometrics identities are replaced by their digital fingerprints. In near future, vehicles will be controlled and monitored via wireless monitoring systems and various physical objects (e. g., home appliance and retail store items) will be connected to the Internet. The list of these changes goes on. Unfortunately, as different aspects of our lives are being immerged in and dependent to wireless devices and services, we will become more vulnerable to wireless service/connection interruptions due to adversarial behavior and our privacy will become more potent to be exposed to adversaries. An adversary can learn the procedures of a wireless system and analyze its stages, and accordingly, launch various attacks against the operations of the system or the privacy of the people. Existing data confidentiality and integrity services (e. g., advanced encryption algorithms) have been able to prevent the leakage of users' messages. However, in wireless networks, even when upper-layer payloads are encrypted, the users' privacy and the operation of a wireless network can be threatened by the leakage of transmission attributes at the physical (PHY) layer. Examples of these attributes are payload size, frequency offset (FO), modulation scheme, and the transmission rate. These attributes can be exploited by an adversary to launch passive or active attacks. A passive attacker may learn about the interests, sexual orientation, political views, and patentable ideas of the user through analyzing these features, whereas an active attacker exploits captured attributes to launch selective packet jamming/dropping and disrupt wireless services. These call for novel privacy preserving techniques beyond encryption. In this dissertation, we study the vulnerability of current wireless systems to the leakage of transmission attributes at the PHY layer and propose several schemes to prevent it. First, we design and experimentally demonstrate with USRPs an energy-efficient and highly disruptive jamming attack on the FO estimation of an OFDM system. OFDM is the core multiplexing scheme in many modern wireless systems (e. g., LTE/ 5 G and 802. 11 a/n/ac) and is highly susceptible to FO. FO is the difference in the operating frequencies of two radio oscillators. This estimation is done by the receiver using the publicly-known frame preamble. We show that the leakage of FO value via the preamble can facilitate an optimally designed jamming signal without needing to know the channel between the transmitter and the legitimate receiver. Our results show that the jammer can guarantee a successful attack even when its power is slightly less than the transmitter's power. We then propose four mitigation approaches against the proposed FO attack. Next, we consider certain transmission attributes that are disclosed via unencrypted PHY/MAC headers. Example of these attributes are payload size, transmission rate, and MAC addresses. Beyond unencrypted headers, the adversary can estimate the frame size and transmission rate through identifying the payload's modulation scheme and measuring the transmission time. To prevent the leakage of these attributes, we propose Friendly CryptoJam scheme, which consists of three components: First, a modulation-aware encryption scheme to encrypt the headers. Second, an efficient modulation obfuscation techniques. Specifically, the proposed modulation obfuscation scheme embeds the modulation symbols of a frame's payload into the constellation of the highest-order modulation scheme supported by the system. Together with effective PHY/MAC header encryption at the modulation level, the proposed obfuscation scheme hides the transmission rate, payload size, and other attributes announced in the headers while avoiding any BER performance loss. Compared with prior art, Friendly CryptoJam enjoys less complexity and less susceptibility to FO estimation errors. The third component is a novel PHY-level identification method. To facilitate PHY/MAC header encryption when a MAC layer sender identifier cannot be used (e. g., due to MAC address encryption), we propose two preamble-based sender identification methods, one for OFDM and one for non-OFDM systems. A sender identifier is special message that can be embedded in the frame preamble. The extent of the applications of our embedding scheme goes beyond identifier embedding and include embedding part of the data frame, the <b>sender's</b> <b>digital</b> signature, or any meta-data that the sender provides. Our message embedding method can further be used to mitigate the FO estimation attack because the jammer can no longer optimize its jamming signal with respect to a fixed preamble signal. In addition, we considered friendly jamming technique in a multi-link/hop network to degrade the channels of the eavesdroppers and prevent successful decoding of the headers, while minimizing the required jamming power by optimally placing the friendly jamming devices...|$|R

