99|10000|Public
500|$|Several gaming and {{technology}} sites reported an [...] "overheating bug" [...] with StarCraft II {{that in some}} cases resulted in permanent damage to video cards. The source of the problem {{is the fact that the}} frame rate is not locked on menu screens. This causes the graphics card to continuously render the image, resulting in excessive heat. Blizzard has acknowledged the problem, and posted a temporary workaround. [...] They also recommended ensuring computer systems are well ventilated and contacting the videocard manufacturer for hardware-related issues. In response to the reports, Blizzard's Public Relations Manager, Bob Colayco said: [...] "There is no code <b>in</b> <b>our</b> <b>software</b> that will cause video cards to overheat. When we saw this issue first reported, we conducted thorough additional testing and determined that for those players experiencing this problem, the cause is most likely hardware-related." [...] CrunchGear has also suggested that the problem is not with StarCraft II, but rather due to poorly maintained hardware and inadequate cooling. They do however agree that the overheating only occurs on non-framerate locked screens and provide the fix that Blizzard has offered to users. [...] Other articles recommend that users regularly clean the dust out of their computer to improve the cooling efficiency of their systems. Blizzard posted a message on their forums regarding the issue that has since been removed. The message was: [...] "Screens that are light on detail may make your system overheat if cooling is overall insufficient. This is because the game has nothing to do so it is primarily just working on drawing the screen very quickly." ...|$|E
30|$|We chose a {{homogeneous}} fragment {{of the recording}} (approximately 50 vibratory cycles) corresponding to a second of the middle portion of each vocal register and we proceeded to its analysis with the program included <b>in</b> <b>our</b> <b>software</b> tool.|$|E
40|$|Undergraduates <b>in</b> <b>our</b> <b>Software</b> Engineering course {{were able}} to code well but they wrote {{technical}} documents poorly. We found that using writing class techniques {{such as the use}} of graded, instructor commented drafts and template documents will considerably improve the quality of student technical writing projects...|$|E
30|$|The {{successful}} {{outcomes and}} corroboration <b>in</b> <b>our</b> initial <b>software</b> and physical modeling simulations, {{the ability to}} adopt and use multiple estimators and interpolation techniques, {{and an ability to}} be employed across a variety of environmental settings provides a new alternative to integrating legacy and HRT data.|$|R
40|$|This paper {{explores the}} {{evolution}} of collaborative, multi-user, musical interfaces developed for the Bricktable interactive surface. Two key types of applications are addressed: user interfaces for artistic installation and interfaces for musical performance. <b>In</b> describing <b>our</b> <b>software,</b> we provide insight on the methodologies and practicalities of designing interactive musical systems for tabletop surfaces. Additionally, subtleties of working with custom-designed tabletop hardware are addressed...|$|R
30|$|To {{control the}} thermal drift, furthermore, the diluted {{polystyrene}} beads solution was {{dropped on the}} surface and heated at ~ 150  °C for 5  min to melt on the cover-slip surface. The fixed beads were tracked simultaneously and served as the indicator of the drift. We subtracted these drift signals <b>in</b> <b>our</b> LabVIEW <b>software.</b>|$|R
40|$|<b>In</b> <b>our</b> <b>Software</b> Defined Radio (SDR) project {{we aim at}} {{combining}} {{two different}} types of standards, Bluetooth and HiperLAN/ 2 on one common flexible hardware platform. The HiperLAN/ 2 hardware is that complex compared to the Bluetooth hardware, that Bluetooth capability may be added to the HiperLAN/ 2 platform at limited cost. The question is how to do this...|$|E
40|$|<b>In</b> <b>our</b> <b>Software</b> Defined Radio SDR project {{we aim at}} {{combining}} {{two different}} types of standards, Bluetooth and HiperLAN/ 2 on one common hardware platform. Goal of our project is to generate knowledge about designing the front end of an SDR system (from the antenna signal to the channel bit stream) where especially an approach from both analog and digital perspective is essential...|$|E
40|$|Welcome to the Publication Taxonomy an {{exploratory}} listing project by the Hybrid Publishing Consortium. The Hybrid Publishing Consortium is the technology research {{arm of the}} Hybrid Publishing Lab and {{is made up of}} a team of six interdisciplinary researchers, developing open source software for multi-format publishing. Creating {{an exploratory}} taxonomy of publication types plays a role <b>in</b> <b>our</b> <b>software</b> design process helping us understand the boundaries of publishing forms...|$|E
40|$|We {{propose to}} design and {{implement}} a computer application that enables users to create sound experiences and musical compositions in a completely new way. <b>In</b> particular, <b>our</b> <b>software</b> will enable users to design dynamic temporal networks in which the nodes correspond to sound clips, and directed edges represent time and other relationships between nodes. Furthermore, we will embed functionality in the application so as to enable different instances of <b>our</b> <b>software</b> to interact with other musicians’ networks so as to create a truly interactive, collaborative music experience. We will also release <b>our</b> <b>software</b> to any interested parties so they can extend it {{as they see fit}} (and set up their own musical networks at home) ...|$|R
30|$|This SOM-hybrid ANN {{was built}} and tested in NeuralWare’s NeuralWorks Professional II/PLus [51], then {{deployed}} using NeuralWare’s Designer Pack, and embedded <b>in</b> <b>our</b> own <b>software</b> environment that has specifically {{been developed for}} the exploitation of high-dimensional data such as large hyperspectral images. Our own algorithm research and data analysis environment builds on NeuralWare and Khoros [52] functions and extends standard neural network capabilities.|$|R
40|$|The rapid {{expansion}} of information technologies in almost all sectors of the society induces <b>software</b> <b>in</b> <b>our</b> days. <b>Software</b> reliability prediction becomes a very important research subject because itnot just improves software quality but also can reduces development cost. In this study, I developed a neural network based ensemble {{and used it to}} predict response time of real-world web services...|$|R
40|$|In {{this paper}} we {{contrast}} two offerings of a TCP/IP course. The first offering had two hands-on exercises {{while the second}} offering had eight laboratory exercises. The evidence {{seems to indicate that}} the students learned more and enjoyed the course more when they had more hands-on exercises. These laboratory exercises used computers that had been removed from service <b>in</b> <b>our</b> <b>software</b> design laboratory, thus they were very economical for our purpose...|$|E
40|$|We {{present the}} {{decisions}} made <b>in</b> <b>our</b> <b>software</b> implementation of decoder {{for a class}} of algebraic geometry codes. The decisions are concerned with generic programming approach and show some metaprogramming techniques which, we believe, are of considerable importance for similar problems {{from the field of}} error-correcting codes or, more generally, computational algebraic geometry. We also describe some features of C++ 11 which are aimed to improve generic programming capabilities of the C++ programming language...|$|E
40|$|<b>In</b> <b>our</b> <b>Software</b> Defined Radio (SDR) project {{we aim at}} {{combining}} two di#erent {{types of}} standards, Bluetooth and HiperLAN/ 2 on one common hardware platform. HiperLAN/ 2 is a high-speed Wireless LAN (WLAN) standard, whereas Bluetooth is a low-cost and low-speed Personal Area Network (PAN) standard. An SDR system is a flexible radio system that is re-programmable and re-configurable by software in order to cope with its multiservice, multi-standard and multi-band environment...|$|E
40|$|Collection of {{artifacts}} from the Noteworks GROCS project in 2008. We propose to design and implement a computer application that enables users to create sound experiences and musical compositions in a completely new way. <b>In</b> particular, <b>our</b> <b>software</b> will enable users to design dynamic temporal networks in which the nodes correspond to sound clips, and directed edges represent time and other relationships between nodes. Furthermore, we will embed functionality in the application so as to enable different instances of <b>our</b> <b>software</b> to interact with other musicians’ networks so as to create a truly interactive, collaborative music experience. We will also release <b>our</b> <b>software</b> to any interested parties so they can extend it {{as they see fit}} (and set up their own musical networks at home) ...|$|R
30|$|Incorporate other {{architectural}} views <b>in</b> <b>our</b> process. <b>Software</b> architecture can {{be composed}} of four views: structural, behavioral, deployment, and configuration. The structural view was already addressed {{in the work of}} (Pimentel et al. 2012) and our process addressed the behavioral view. It is important to derive systematically the other architectural views, for example deployment and configuration in order to obtain a complete system specification.|$|R
5000|$|The {{creative}} process within Neon Dreams {{is a very}} democratic one, as Adrian explains. [...] "A song generally stems from one person's idea and then we all run with it. We're not a traditional band {{in the sense that}} we don't sit down with a bunch of guitars and jam things out in a circle. We all start <b>in</b> <b>our</b> programming <b>software,</b> then we bring ideas in." ...|$|R
40|$|Abstract — To {{meet the}} {{challenge}} of increasing design complexity, designers are turning to system level design languages (SLDLs) to model systems at a higher level of abstraction. This paper presents a method of automatically generating embedded software from system specification written in SLDL. Several refinement steps and intermediate models are introduced <b>in</b> <b>our</b> <b>software</b> generation flow. We demonstrate the effectiveness of the proposed method by a tool which can generate efficient ANSI C code from system models written in SLDL. I...|$|E
40|$|MALDI-TOF {{is a well}} {{established}} technology for mass spectrometric profiling of proteomic data. Here, we introduce the MALDIquant R package that implements an analysis pipeline for quantitative analysis of clinical MALDI-TOF data. We provide {{a brief overview of}} its current and planned capabilities. We provide an outline of the standard steps in the analysis of MALDI-TOF data and specifically discuss baseline correction algorithms implemented <b>in</b> <b>our</b> <b>software.</b> MALDIquant is freely available from the R archive CRAN and is distributed under the GNU General Public License. 1...|$|E
40|$|Abstract: Control {{software}} for experimental autonomous robots is typically complex {{and subject to}} frequent changes – posing numerous challenges for software engineers. When based on general-purpose robotics frameworks, significant parts of such systems are modular and data-flow-oriented – a natural fit for visualization in graph structures. In this paper, we present approaches to visualize different aspects of robotics software which proved helpful or even essential in our development process. Furthermore, we briefly introduce central abstractions <b>in</b> <b>our</b> <b>software</b> framework which greatly facilitate generic solutions. ...|$|E
40|$|Software {{localization}} is {{an important}} process for international acceptance of software products. However, software development and localization does not always come together without friction. <b>In</b> <b>our</b> empirical <b>software</b> engineering research, we examine the interplay of software development and software localization by gathering and analyzing qualitative and quantitative data from professionals <b>in</b> relevant roles. <b>Our</b> aim is to co-validate issues and inform practice {{about the development of}} international software...|$|R
40|$|Trees are a {{valuable}} way of displaying structure in datasets, especially for classification problems. Improved classification {{results can be}} achieved using forests of trees. Adding various visualization methods and interactive tools for analysis of individual trees and of whole forests gives complementary insight into the data. This paper describes different views and methods to analyze tree forests as implemented <b>in</b> <b>our</b> prototype <b>software,</b> KLIMT (KLassification - Interactive Methods for Trees) ...|$|R
40|$|We {{introduce}} Cimple, a {{joint project}} between the University of Illinois and the University of Wisconsin. Cimple aims {{to develop a}} software platform that can be rapidly deployed and customized to manage data-rich online communities. We first describe the envisioned working of such a <b>software</b> platform and <b>our</b> prototype, DBLife, which is a community portal being developed for the database research community. We then describe the technical challenges <b>in</b> Cimple and <b>our</b> solution approach. Finally, we discuss managing uncertainty and provenance, a crucial task <b>in</b> making <b>our</b> <b>software</b> platform practical. ...|$|R
40|$|Original article can {{be found}} at : [URL] Copyright Eszterhazy Karoly College [Full text of this article is not {{available}} in the UHRA]There are many ways to construct hierarchical decompositions of transformation semigroups. The holonomy algorithm is especially suitable for computational implementations and it is used <b>in</b> <b>our</b> <b>software</b> package. The structure of the holonomy decomposition is determined by the action of the semigroup on certain subsets of the state set. Here we focus on this structure, the skeleton, and investigate some of its properties that are crucial for understanding and for efficient calculations...|$|E
40|$|Abstract. The UChile Robotics Team is {{an effort}} of the Department of Electrical Engineering of the Universidad de Chile. The team partici-pates in the RoboCup Standard Platform League since 2008. This year our focus is on {{improving}} our software architecture by doing it flexible, open source and more efficient. This mainly includes: {{the use of the}} ROS framework, the integration of XABSL to develop our behaviors; the addi-tion of an extra vision thread for processing images from the both NAO’s cameras in parallel; the use of OpenSurf and OpenCV <b>in</b> <b>our</b> <b>software.</b> ...|$|E
40|$|This {{abstract}} sketches {{the approach}} and the employed means for constructing measures of melodic similarity <b>in</b> <b>our</b> <b>software</b> toolbox SIMILE. For different tasks related to melodic similarity different hybrid algorithms {{proved to be}} optimal. The hybrid algorithms consist of several single algorithms mostly known in the literature that are taken together in a linear combination. One special linear combination is chosen to serve for the given task in this contest. The single measures contained in this hybrid algorithm are explained briefly and references to more detailed publications are given...|$|E
40|$|Abstract. Recombination {{plays an}} {{important}} role in creating genetic diversity within species, and inferring past recombination events is central to many problems in genetics. Given a set M of sampled sequences, finding an evolutionary history for M with the minimum number of recombination events is a computationally very challenging problem. In this paper, we present a novel branch and bound algorithm for tackling that problem. Our method is shown to be far more efficient than the only preexisting exact method, described <b>in</b> [1]. <b>Our</b> <b>software</b> implementing the algorithm discussed in this paper is publicly available. ...|$|R
40|$|In {{this paper}} we present the ongoing {{work in the}} develop-ment of a {{real-time}} communication software infrastructure. This software allows the use of standard Ethernet equip-ment for providing deterministic real-time communication comparable to specialized industrial networks like CAN. <b>In</b> addition, <b>our</b> <b>software</b> stack allows the multiplexing of strict real-time traffic with soft real-time QoS traffic and best ef-fort traffic. In practice, the system allows to multiplex in a single wire three different independent traffic classes with different characteristics (three different networks over one wire). Since our host OS, RTLinux-GPL, lacks networking capabilities, <b>our</b> <b>software</b> stack provides even low-level components like Ethernet drivers. Nevertheless we will concentrate in this paper in describing the main real-time parts: software TDMA multiplexing and QoS scheduling. ...|$|R
30|$|<b>In</b> <b>our</b> {{proposed}} framework, <b>software</b> designers {{join the}} system {{development at the}} architecture stage, shown in Figure 2. However, because the development environment {{is the same for}} everyone involved, the software designers will consider that they co-design with the hardware team at the physical implementation (FPGA) stage.|$|R
40|$|Abstract: We {{describe}} the basic ideas and ingredients of adaptive FEM and their implementation <b>in</b> <b>our</b> <b>software</b> toolbox AMDiS. This software is primarily developed to solve realistic computations in materials science. The design of AMDiS {{is based on}} a natural hierarchy of locally refined meshes and an abstract concept of general finite element spaces which is combined with an object oriented data structure. In this way dimension independent programming is possible and complex applications can be implemented on an abstract level, keeping the numerical issues away from the user. Key-Words: Finite element method, adaptivity, scientific software concepts. ...|$|E
40|$|Abstract- In {{the game}} “Math Facts”, {{students}} are given up to sixty seconds to answer up to twenty elementary math problems. MathFax is an online adaptation of that game. Proposed by a local elementary school and developed by students <b>in</b> <b>our</b> <b>Software</b> Engineering class, MathFax goes far beyond the rudimentary paper and pencil version. It was developed for use on a WAMP server and offers many features: creating users, classes and tests and viewing test results. The paper describes these features in depth, details the database and discusses {{the current status of}} and future work for MathFax...|$|E
40|$|In this paper, we {{show how}} {{we built a}} bridge between Human Computer Interaction (HCI) and Direct Marketing (DM). Here we address some major issues {{in the area of}} the Multichannel Adaptive Context-sensitive Intermediation and tackle them <b>in</b> <b>our</b> <b>software</b> architecture. We present a {{prototype}} based on this architecture. But our main objective, here, is to show a major issue in the field of Multi-channel Adaptive Context-sensitive systems, which is the management of different –and sometimes conflicting – contexts (e. g., from the user i. e. context-aware for HCI community and from the organisation, its policies, rules, etc.). ...|$|E
40|$|Computer {{and video}} games have grown {{to be a major}} {{industry}} but, until recently, have largely been ignored by academia. The last couple of years, however, have seen the emergence of new academic programs, conferences, and journals dedicated to games studies. For the past three years we have used computer games as projects <b>in</b> <b>our</b> introductory <b>software</b> engineering course. Small teams of students build three games across the semester. In this paper we describe the course and discuss its success...|$|R
40|$|Recombination {{plays an}} {{important}} role in creating genetic diversity within species, and inferring pasi recombination events is central to many problems in genetics. Given a set M of sampled sequences, finding an evolutionary history for M with the minimum number of recombination events is a computationally very challenging problem. In this paper, we present a novel branch and bound algorithm for-tackling that problem. Our method is shown to be far more efficient than the only preexisting exact method, described <b>in</b> [1], <b>Our</b> <b>software</b> implementing the algorithm discussed in this paper is publicly available. © Springer-Verlag Berlin Heidelberg 2005...|$|R
40|$|As {{software}} complexity {{is increasing}} exponentially <b>in</b> <b>our</b> modern era, <b>software</b> architecture becomes increasingly important. The separation of concerns through architecture allows each programmer {{the opportunity to}} limit their need of understanding to only the portion of code {{for which they are}} responsible for, thus saving large amounts of time...|$|R
