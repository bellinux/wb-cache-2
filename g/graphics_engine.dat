642|292|Public
5|$|According to John Carmack, {{the lead}} <b>graphics</b> <b>engine</b> {{developer}} at id Software, {{the technology of}} Doom 3 was supported by three primary features: unified lighting and shadowing, complex animations and scripting that showed real-time with fully dynamic per-pixel lighting and stencil shadowing, and GUI surfaces that add extra interactivity to the game. The key advance of the id Tech 4 <b>graphics</b> <b>engine</b> developed for Doom 3 is the unified lighting and shadowing. Rather than computing or rendering lightmaps during map creation and saving that information in the map data, most light sources are computed in real-time. This allows lights to cast shadows even on non-static objects such as monsters and machinery, which was impossible with static non-directional lightmaps. A shortcoming {{of this approach is}} the engine's inability to render soft shadows and global illumination.|$|E
5|$|Before {{its main}} release, Dynasty Warriors 4 was already looking {{promising}} after GameSpot UKâ€™s preview {{two months before}} the game was released. Although still very similar to previous titles in the series, the <b>graphics</b> <b>engine</b> had been tweaked and the gameplay been expanded, featuring more characters and stages.|$|E
5|$|In 2000, Gathering of Developers {{released}} a trilogy of computer games {{based on the}} film, which greatly expanded on the myths first suggested in the film. The <b>graphics</b> <b>engine</b> and characters were all derived from the producer's earlier game Nocturne.|$|E
50|$|DevMaster.net's 3D Game and <b>Graphics</b> <b>Engines</b> Database, {{also known}} as the 3D Engines Databases, is the most {{comprehensive}} web directory and product ranking site for 3D Engines - covering full-featured game engines, toolsets, and libraries as well as more general purpose3D <b>graphics</b> <b>engines</b> libraries (or APIs).|$|R
5000|$|... #Subtitle level 3: 1970s and 1980s: Early FPS <b>graphics</b> <b>engines</b> ...|$|R
5000|$|... a 2D <b>graphic</b> <b>engine,</b> {{to program}} {{vectorial}} PDF graphics by script, ...|$|R
5|$|Director Hifumi Kono was not {{interested}} in developing a sequel to the original Clock Tower at first, but was swayed after seeing the technical possibilities of the next generation consoles. Kono had difficulty in choosing the platform to develop on, but eventually settled for the new PlayStation despite its uncertain future. Clock Tower {{was one of the first}} games developed by Human Entertainment to utilize a 3D <b>graphics</b> <b>engine.</b> The team felt challenged to create high-quality graphics after being impressed by the visuals of Resident Evil (1996), which was announced during development.|$|E
5|$|The {{success of}} the game led to a sequel, Halo2, which was {{announced}} on August 8, 2002, at Microsoft's New York City X02 press event. It featured improved graphics, new weapons, and a multiplayer mode on Xbox Live. Halo3 was announced at the 2006 Electronic Entertainment Expo. The initial conception for the third game was done before Halo2 was released in 2004. It utilized a proprietary, in-house <b>graphics</b> <b>engine,</b> and employed advanced graphics technologies.|$|E
5|$|As the Game Boy Advance {{was able}} to handle newer, {{enhanced}} graphics, Ruby and Sapphire were the first games in the series that allowed up to four people to share information at one time, {{as opposed to the}} previous limit of two. However, the development team used a more basic <b>graphics</b> <b>engine</b> {{in order to keep the}} game simple and not overly confusing. The team wanted the games to appeal to a large audience, so the game was designed to be easy enough for younger generations of children to play, but new features were added to bring the veteran gamers back.|$|E
50|$|Use of {{real-time}} computer <b>graphics</b> <b>engines</b> {{to create a}} cinematic production is called machinima.|$|R
5000|$|... #Caption: An in game view {{highlighting}} the <b>graphic</b> <b>engine,</b> containing ships, planets, and stars.|$|R
5000|$|IBrowse, Voyager, AWeb, {{and also}} Amaya through the X11 Amiga {{compatibility}} <b>graphic</b> <b>engine</b> library Cygnix ...|$|R
5|$|Halo 2 {{was officially}} {{announced}} in September 2002 with a cinematic trailer, subsequently packaged with Halo: Combat Evolved DVDs. A real-time gameplay video was shown at E3 2003, {{which was the}} first actual gameplay seen by the public; it showcased new features such as dual-wielding and improved graphics. Many elements of the trailer, however, were not game-ready; the entire <b>graphics</b> <b>engine</b> used in the footage had to be discarded, and the trailer's environment never appeared in the final game due to limitations on how big the game environments could be. The restructuring of the engine meant that there was no playable build of Halo 2 for nearly a year, and assets and environments produced by art and design teams could not be prototyped.|$|E
5|$|Halo 3 {{utilizes}} a proprietary, in-house <b>graphics</b> <b>engine.</b> As detailed on the Bungie website, {{it employs}} advanced graphics {{technologies such as}} high dynamic range, global lighting and depth of field effects within cutscenes. Motion blurring was absent from the beta, but {{was added to the}} final game. Most of the dynamic objects in the game cast real-time shadows on themselves and the environment around them, including the game's plant life. Halo 3 uses normal, bump, and parallax mapping to give surfaces more detail without dramatically increasing the number of polygons. Players can see distances of up to ten miles (16km) away, all fully three-dimensional. Real time reflections were written into the engine; however, they are often unused as Bungie considered it a waste of resources.|$|E
5|$|A port to iOS devices {{done by the}} 2K China {{studio was}} {{released}} on August 27, 2014. The iOS version is content complete and functionally equivalent to the original Xbox 360 and Windows version, featuring either the use of touch-screen virtual gamepad controls {{or the use of}} a Bluetooth-enabled controller, and with a <b>graphics</b> <b>engine</b> optimized for iOS devices. The game was later delisted from the App Store in September 2015; the game had become unplayable for many that upgraded to iOS 8.4 on their devices, and while a patch had been discussed, a 2K representative stated that the decision to remove the game came from the developer. 2K later clarified that they will be working on resolving the issues with the game's compatibility with the new firmware and will re-release the title once that has been completed. However, by January 2017, 2K officially stated that it will no longer support the title, the game will remain on the App Store, but will not receive additional updates.|$|E
50|$|Platform <b>graphics</b> <b>engines</b> include GTK, Qt, SDL, Cairo with Magic User Interface and Win32 (not yet public).|$|R
50|$|Use {{of object}} {{oriented}} <b>graphic</b> <b>engines</b> dramatically changes {{the look and}} feel of a GUI to match actual styleguides.|$|R
50|$|ImplicitCAD Script-based {{modeller}} with an custom <b>graphic</b> <b>engine.</b> It {{does have}} an internal object model. Syntax similar but different from OpenScad. No GUI.|$|R
5|$|Human Entertainment {{soon began}} work on a sequel, Clock Tower (1996), also known as Clock Tower 2 in Japan. With a team of about 30 people, it was their first game to utilize a 3D <b>graphics</b> <b>engine,</b> {{although}} team veterans preferred to have used 2D graphics instead. With the announcement of Capcom's Resident Evil (1996) during development, the team was impressed and challenged themselves to create higher quality graphics. ASCII Entertainment marketed Clock Tower in North America {{as one of the}} first true horror games for the PlayStation console. It was released in Japan on 13 December 1996, North America on 1 October 1997, and finally in Europe in February 1998. The game sold close to half a million copies. Kono attributed some of this success to Resident Evil generating interest in horror games.|$|E
5|$|In {{the idea}} of Matt Bozon, who created the game's {{universe}} based on Erin's character, at the beginning, the game was planned for the SNES or PC. He and Erin pitched the game with help from veteran programmer Jimmy Huey, who worked with WayForward at the time. After the completion of Xtreme Sports, Voldi Way, the founder and owner of WayForward, greenlit a Game Boy Color version of the game. As Huey had already built a <b>graphics</b> <b>engine</b> for Xtreme Sports, this engine was adapted to suit Shantaes needs. This allowed the game to showcase rare effects on GBC games, like parallax scrolling and transparency effects. In {{the first four months}} of development, the team created most of the animation, and Huey programmed an art-capturing tool that allowed to take full-colored animation frames, turn them into three-colour chunks and reassemble the whole on the GBC's screen.|$|E
5|$|Pathways was Bungie's fourth title (and third {{commercial}} title) {{after their}} previous game, Minotaur: The Labyrinths of Crete, sold around 2,500 copies. In {{the summer of}} 1992, Jones was living in dorms at the University of Chicago when he saw Wolfenstein 3D, a shooter game with three-dimensional (3D) graphics. Inspired, Jones created a rough 3D-graphics engine for the Mac that simulated walls with trapezoids and rectangles. Originally, Bungie intended Pathways to be a straightforward 3D version of Minotaur, but they quickly found that the top-down perspective of their previous game did not mesh with the 3D presentation. An additional consideration was that the developers {{wanted to create a}} game that did not rely on then-rare networks and modems, an issue in marketing Minotaur. The rest of 1992 was spent tweaking the <b>graphics</b> <b>engine.</b>|$|E
5000|$|The games {{uses the}} same <b>graphic</b> <b>engine</b> as Brothers in Arms: Road to Hill 30, {{which is based on}} the Unreal Engine 2.0 ...|$|R
50|$|The game's <b>graphic</b> <b>engine</b> {{allows for}} more {{realistic}} damage effects and a blurred vision effect if the player comes {{into contact with}} a hard object.|$|R
25|$|On computers, chess {{pieces are}} often 2D symbols on a 2D board, {{although}} some programs have 3D <b>graphics</b> <b>engines</b> with more traditional designs of chess pieces.|$|R
5|$|Reviewers {{appreciated}} the PS2 version for including the asked-for save feature, but complained the ported game retained the AI and level design {{issues associated with}} the Windows version. IGN remarked that it looked less impressive than the computer versions. The lower resolution, flat textures, washed out colors, and sparser environments made the game average looking. The PS2 version also exhibited clipping issues; character models and projectiles would pass through objects on occasion. The game reviewer, however, praised the console version for presenting a smooth animation, rarely dropping frames. On the contrary, other reviewers stated the frame rate dropped when there are several objects on the screen, presenting a heavy load on the <b>graphics</b> <b>engine.</b> The lack of replay value for the console version after completing the single player mode was a common complaint among the reviewers.|$|E
5|$|The {{game was}} {{developed}} on Criterion's proprietary game engine RenderWare. The <b>graphics</b> <b>engine</b> was improved to give between 50â€“100% faster rendering than in Burnout 2. The increased performance {{allowed them to}} add features like real-time radiosity lighting and better environment mapping effects on vehicles. Programmers at the studio were adamant about making the game run at a frame rate of sixty frames per seconds to offer instant response and feedback while driving fast. Since the crash sequences were slower, the higher frame rate was less considered less critical than the spectacle of the vehicle collisions. They opted to run the game at thirty frames per second during these instances and dramatically {{increased the number of}} particles and debris that were rendered. From an early stage in development, the team wanted to include support for online network play in Burnout 3. They had never explored online play before, so they used Burnout 2 as a test-bed for the feature before integrating it into Burnout 3.|$|E
5|$|The <b>graphics</b> <b>engine</b> used {{to power}} the game was christened the Diesel Engine. Grin {{developed}} this engine for flexibility and scalability, allowing the engine to be easily upgraded with new features. Based on DirectX, this meant the engine could be used across Windows and Xbox platforms. Grin worked closely with NVIDIA to incorporate then new technologies such as pixel and vertex shaders to render complex scenes. Ballistics was marketed by NVIDIA as a flagship title for their new series of GeForce 3 graphics cards. The game came bundled with various versions of the GeForce 3, with distribution of the bundled game handled by Interplay OEM. Later versions of the Diesel Engine would be used in Grin games such as the Windows version of Tom Clancy's Ghost Recon Advanced Warfighter.|$|E
5000|$|... #Caption: The player {{character}} {{riding a}} horse through {{the realm of}} Hibernia. The early 2001-era <b>graphic</b> <b>engine</b> and HUD design {{can be seen in}} this shot.|$|R
500|$|Machinima ( [...] or [...] ) {{is the use}} of {{real-time}} computer <b>graphics</b> <b>engines</b> to create a cinematic production. Most often video games are used to generate the computer animation.|$|R
40|$|Triangles meshes are {{the most}} popular {{standard}} model to represent polygonal surfaces in Computer Graphics. Drawing these meshes as a set of independent triangles involves sending a vast amount of information sent to the <b>graphic</b> <b>engine.</b> The use of primitives such as fan and strip of triangles, which make use of the connectivity information between the triangles in the mesh, reduces dramatically the amount of information sent to the <b>graphic</b> <b>engine.</b> The Multiresolution Triangle Strips scheme takes advantage of this characteristic in order to represent a multiresolution model as a set of multiresolution triangle strips...|$|R
5|$|The {{upgraded}} engine offered better {{speed efficiency}} and new graphical features. While both the original Tomb Raider and Tomb Raider II used a grid system where developers could build the levels {{with a set}} of blocks, Tomb Raider IIIs system incorporated triangular polygons, allowing developers to achieve greater detail and more complex architectural structures. The triangles also allowed developers to implement the game's quicksand and rippling water features. The dynamic lighting system was improved with coloured lighting and better water reflection, making Tomb Raider III more atmospheric than its predecessors. The team also implemented new weather effects such as rain, snow, and wind. The game features more particle effects, offering more realistic explosions and smoke. All the textures used in the game were drawn in true colour before being rendered by the <b>graphics</b> <b>engine,</b> resulting in a better output quality.|$|E
5|$|Clock Tower was {{developed}} {{by a team of}} about 30 people and was the first game at Human Entertainment to utilize a 3D <b>graphics</b> <b>engine,</b> although team veterans preferred to have used 2D graphics instead. At first, director Hifumi Kono was not interested in working on a sequel to the first Clock Tower, but after seeing the technical possibilities with newly released hardware of the time, he agreed. For Kono, {{one of the most difficult}} parts of developing Clock Tower was choosing the platform. At the time, the PlayStation and Sega Saturn were already on the market. The Saturn was seen as an icon of next-generation gaming with games like Virtua Fighter (1994). The PlayStation was new to the industry, and despite having a preliminary lead in popularity over the Saturn, its future was uncertain. Meanwhile, the Nintendo 64 was scheduled to arrive on the market soon, coming off the success of the Super Nintendo. Kono eventually settled on the PlayStation, and in retrospect considers it the best choice he could have made since the console's future success helped Clock Tower sell better than expected.|$|E
5|$|The {{majority}} of material created for previous games, {{such as the}} BLiTZ system and the design of maps, was carried over. Alongside this, improvements {{were made to the}} game's graphics and some elements were expanded, such as map layouts, mission structure, and the number of playable units per mission. A part of this upgrade involved creating unique polygon models for each character's body. In order to achieve this, the cooperative elements incorporated into the second game were removed, as they took up a large portion of memory space needed for the improvements. They also adjusted the difficulty settings and ease of play so they could appeal to new players while retaining the essential components of the series' gameplay. The newer systems were decided upon early in development. The character designs were done by Raita Honjou, who had worked on the previous Valkyria Chronicles games. When creating the Nameless Squad, Honjou was faced with the same problem he had had during the first game: the military uniforms essentially destroyed character individuality, despite him needing to create unique characters the player could identify while maintaining a sense of reality within the Valkyria Chronicles world. The main color of the Nameless was black. As with the previous Valkyria games, Valkyria Chronicles III used the CANVAS <b>graphics</b> <b>engine.</b> The anime opening was produced by Production I.G.|$|E
2500|$|On April 20, 2011, Home {{released}} version 1.50, which dramatically {{improved the}} physics and <b>graphics</b> <b>engines.</b> [...] was also released; {{the second and}} final part of Sodium to be released.|$|R
50|$|The {{individual}} computers may be shared- or local-memory multiprocessors, vector supercomputers, specialized <b>graphics</b> <b>engines,</b> or scalar workstations and PCs, {{that may}} be interconnected {{by a variety of}} networks, such as Ethernet or FDDI.|$|R
5000|$|... jMonkeyEngine {{was built}} to fulfill the lack of full {{featured}} <b>graphics</b> <b>engines</b> written in Java. The project has a distinct two-part story, as the current core development team includes none of the original creators.|$|R
