16|70|Public
5000|$|... #Caption: IBM 2250 Model 4 display station, {{including}} {{light pen}} and programmed <b>function</b> <b>keyboard.</b>|$|E
5000|$|... #Caption: Photo an IBM 2250 Mod 4 display station, {{including}} a light pen and programmed <b>function</b> <b>keyboard,</b> channel coupled to Brown's IBM 360 mainframe, running HES, the predecessor to FRESS.|$|E
5000|$|The 2250 {{was housed}} in a desk with an {{alphanumeric}} (QWERTY) keyboard and a separate programmed <b>function</b> <b>keyboard</b> which had keys, indicator lights and switches. A plastic overlay label could be placed over the <b>function</b> <b>keyboard.</b> Punches on {{the top edge of}} the overlay could be sensed by the computer so the keys, lights and switches could be reprogrammed simply by changing overlays. The 2250s CRT measured 21" [...] diagonal, but the useful display area was 12 inch by 12 inch. A light pen was provided as a pointing device, serving the function of the modern computer mouse.|$|E
25|$|The device sports three USB ports, a {{small but}} fully <b>functioning</b> <b>keyboard,</b> a touchpad, stereo speakers, and a 2 cell 2.1Ah battery.|$|R
50|$|Interactive {{computer}} tools - display screens, digital drawing tablets, lightpens and <b>function</b> <b>keyboards</b> - drew {{interest in}} creative applications. Museums and art organizations saw potential applications early. The Metropolitan Museum held {{a conference on}} the potential applications of computers in Museums in 1968.|$|R
5000|$|Compact keyboards, such {{as those}} used in laptops, often have a Fn key to save space by {{combining}} two functions that are normally on separate keys. On laptops, pressing [...] plus one of the function keys, e.g., F2, often control hardware <b>functions.</b> <b>Keyboards</b> that lack a dedicated numeric keypad may mimic its functionality by combining the Fn key with other keys.|$|R
50|$|In 1973 the IBM Los Gatos Scientific Center {{developed}} a portable computer prototype called SCAMP (Special Computer APL Machine Portable) {{based on the}} IBM PALM processor with a Philips compact cassette drive, small CRT and full <b>function</b> <b>keyboard.</b>|$|E
5000|$|... #Caption: Photo of the Hypertext Editing System (HES) console in use at Brown University, circa October 1969. The photo shows HES on an IBM 2250 Mod 4 display station, {{including}} lightpen and programmed <b>function</b> <b>keyboard,</b> channel {{coupled to}} Brown's IBM 360 mainframe.|$|E
50|$|The Lighted Program <b>Function</b> <b>Keyboard</b> (LPFK) is a {{computer}} input device manufactured by IBM that presents an array of buttons associated with lights.Each button is associated to a function in supporting software, {{and according to the}} availability of that function in current context of the application, the light is switched on or off, giving the user a graphical feedback on the set of available functions. Usually the button to function mapping is customizable.|$|E
5000|$|... #Caption: <b>Functions</b> as <b>keyboard</b> for the Acorn System 2 and as {{case for}} the Acorn Atom.|$|R
40|$|Each page of filer shows various keypad designations {{corresponding}} to variety of software packages. Filer has various templates bound together {{so they are}} indexed easily and stand up for ready viewing. Template filers are made of inexpensive materials. Templates of various manufacturers can be added in pages appropriately die cut to receive them. Microcomputer operators using variety of software packages assisted by simple filer that illustrates various <b>keyboard</b> <b>functions</b> {{corresponding to}} different software packages. <b>Keyboard</b> <b>functions</b> change, depending on selected software. Filer has set of templates showing <b>keyboard</b> <b>functions</b> for various software packages. Templates set up quickly as desktop references to key functions...|$|R
50|$|Software using Gold key <b>keyboard</b> <b>functions</b> was {{developed}} across multiple generations of DEC computers.|$|R
5000|$|Grab is an {{application}} created by Apple Inc. for Mac OS X, {{used to take}} screenshots. Grab is also present in OS X's progenitors NeXTSTEP and OpenStep. It supports capturing a marquee selection, whole window, whole screen, and timed screen. Grab {{can be found in}} the Utilities folder under Applications, or by typing in /Applications/Utilities/Grab.app in Finder. The Grab utility can also be found in the Finder as a menu item by selecting [...] "Services", then going to [...] "Grab". The only image format for screenshots taken by Grab is TIFF. It can also be found using the Spotlight <b>function</b> (<b>keyboard</b> shortcut CMD SPACE) ...|$|E
5000|$|In 1973 the IBM Palo Alto Scientific Center {{developed}} a portable computer prototype called SCAMP (Special Computer APL Machine Portable) {{based on the}} IBM PALM processor with a Philips compact cassette drive, small CRT and full <b>function</b> <b>keyboard.</b> SCAMP emulated an IBM 1130 minicomputer in order to run APL\1130. In 1973 APL was generally available only on mainframe computers, and most desktop sized microcomputers such as the Wang 2200 or HP 9800 offered only BASIC. Because SCAMP {{was the first to}} emulate APL\1130 performance on a portable, single user computer, PC Magazine in 1983 designated SCAMP a [...] "revolutionary concept" [...] and [...] "the world's first personal computer".|$|E
50|$|Successful {{demonstrations of}} the 1973 SCAMP {{prototype}} {{led to the}} first commercial IBM 5100 portable microcomputer launched in 1975. The product incorporated an IBM PALM processor, 5 inch CRT, full <b>function</b> <b>keyboard</b> {{and the ability to}} be programmed in both APL and BASIC for engineers, analysts, statisticians and other business problem-solvers. IBM referred to its PALM processor as a microprocessor, though they used that term to mean a processor that executes microcode to implement a higher-level instruction set, rather than its conventional definition of a complete processor on a single silicon integrated circuit. In the late 1960s such a machine would have been nearly as large as two desks and would have weighed about half a ton.|$|E
50|$|An overlay {{keyboard}} is {{a specialized}} keyboard with no pre-set keys. Each key can be programmed {{with a wide}} range of different <b>functions.</b> Overlay <b>keyboards</b> are often used as a quick and easy way to input items with just two buttons.|$|R
50|$|Hollywood's {{focus is}} on ease of use and {{platform}} independence. It was mainly designed {{for the creation of}} games and multimedia applications. The language set comprises roughly 700 different commands from the following fields of application: 2D graphics, sound, file system operations, text output, animations, sprites, layers, transition effects, image manipulation, saving of images and video files, time and date <b>functions,</b> input <b>functions</b> (<b>keyboard,</b> joystick, mouse) as well as mathematical operations and string functions. Programming in Hollywood is done via so called Hollywood scripts (using the file extension *.hws). These scripts are compiled dynamically and can be converted into stand-alone executables. All Hollywood programs run inside a sandbox, which makes it impossible for them to crash.|$|R
50|$|Initial reviews {{have been}} mixed. The <b>keyboard</b> <b>functions</b> as advertised, {{but it has}} been criticized for inordinately high CPU usage, slow {{response}} time, and buggy configuration software.|$|R
5000|$|In 1972-1973 a {{team led}} by Dr. Paul Friedl at the IBM Los Gatos Scientific Center {{developed}} a portable computer prototype called SCAMP (Special Computer APL Machine Portable) based on the IBM PALM processor with a Philips compact cassette drive, small CRT and full <b>function</b> <b>keyboard.</b> SCAMP emulated an IBM 1130 minicomputer in order to run APL\1130. In 1973 APL was generally available only on mainframe computers, and most desktop sized microcomputers such as the Wang 2200 or HP 9800 offered only BASIC. Because it was the first to emulate APL\1130 performance on a portable, single-user computer, PC Magazine in 1983 designated SCAMP a [...] "revolutionary concept" [...] and [...] "the world's first personal computer". The prototype is in the Smithsonian Institution.|$|E
5000|$|In 1973 the IBM Los Gatos Scientific Center {{developed}} a portable computer prototype called SCAMP (Special Computer APL Machine Portable) {{based on the}} IBM PALM processor with a Philips compact cassette drive, small CRT and full <b>function</b> <b>keyboard.</b> SCAMP emulated an IBM 1130 minicomputer in order to run APL\1130. In 1973 APL was generally available only on mainframe computers, and most desktop sized microcomputers such as the Wang 2200 or HP 9800 offered only BASIC. Because SCAMP {{was the first to}} emulate APL\1130 performance on a portable, single user computer, PC Magazine in 1983 designated SCAMP a [...] "revolutionary concept" [...] and [...] "the world's first personal computer". This seminal, single user portable computer now resides in the Smithsonian Institution, Washington, D.C.. Successful demonstrations of the 1973 SCAMP prototype led to the IBM 5100 portable microcomputer launched in 1975 with the ability to be programmed in both APL and BASIC for engineers, analysts, statisticians and other business problem-solvers. In the late 1960s such a machine would have been nearly as large as two desks and would have weighed about half a ton.|$|E
40|$|The {{computerised}} core {{surveillance system}} SCORPIO is described. Main modules {{in the system}} arc an interactive communication system with a <b>function</b> <b>keyboard</b> and a fully graphic colour screen; a strategy generator which proposes how to operate the reactor in the near future; a fast core simulator with predictive capability; a data base and a limit check module which calculates margins to the operational limits. The predictive {{part of the system}} is completed, and is already installed at a pressurised-water reactor plant. The core follow module is under development, and installation of this module will take place in 1987. Results from the validation of the strategy generator and the simulator are also described...|$|E
50|$|Puffin {{comes with}} Adobe Flash Player to play flash content. It {{also comes with}} virtual trackpad, gamepad, and on screen <b>keyboard</b> <b>functions.</b> It was {{released}} sometime before October 2013.|$|R
50|$|In both Microsoft Windows and Apple Macintosh {{operating}} systems, {{in other}} similar desktop environments {{and in some}} applications, common <b>functions</b> are assigned <b>keyboard</b> shortcuts (for example Control-C or Command-C copies the current selection).|$|R
30|$|Here, we only {{focused on}} the {{keyboard}} portion of the keyboard-mounted mouse. In the future, we must equip the mouse function on the 3 -D keyboard, and we must make the mechanism and algorism for switching the <b>function</b> between <b>keyboard</b> and mouse, or between different sets of keys. We also need experiments that evaluate the operability of our new device in tasks using both the keyboard and mouse.|$|R
40|$|A collaborating {{group of}} Yale and IBM {{scientists}} {{have developed a}} versatile data acquisition system, based on an IBM System/ 360 Model 44 Computer, which is now in routine use. Data acquisition is performed via an interface which features modular and digitally compatible ADCs, scalers and monitor registers, and which allows the experimenter to define up to sixteen independent events. The software system makes possible the processing of all incoming events by Fortran programs. Communication between the experimenter and computer is carried out {{by means of a}} display terminal which includes a 1024 - 1024 random point plotting CRT with a built-in characteric generator, and a <b>function</b> <b>keyboard.</b> Facilities are also included for control and monitoring of the experiment hardware and accelerator conditions. A multiprogramming supervisor enables several independent jobs to be run simultaneously, with inter-job communication facilities to enable analysis of data to be carried out concurrently with its acquisition...|$|E
40|$|The Small Interactive Image Processing System (SMIP) is {{designed}} to facilitate the acquisition, digital processing and recording of image data as well as pattern recognition in an interactive mode. Objectives of the system are ease of communication with the computer by personnel who are not expert programmers, fast response to requests for information on pictures, complete error recovery as well as simplification of future programming efforts for extension of the system. The SMIP system is intended for operation under OS/MVT on an IBM 360 / 75 or 91 computer equipped with the IBM- 2250 Model 1 display unit. This terminal is used as an interface between user and main computer. It has an alphanumeric keyboard, a programmed <b>function</b> <b>keyboard</b> and a light pen which are used for specification of input to the system. Output from the system is displayed on the screen as messages and pictures...|$|E
40|$|The {{transformation}} of a preexisting software system {{into a larger}} and more versatile system with different mission requirements is discussed. The history of this transformation is used to illustrate the use of structured real time programming techniques and tools to produce maintainable and somewhat transportable systems. The predecessor system is a single ground diagnostic system; its purpose is to exercise a computer controlled hardware set prior to its deployment in its functional environment, as well as test the equipment set by supplying certain well known stimulas. The successor system (FTE) is required to perform certain testing and control functions while this hardware set is in its functional environment. Both systems must deal with heavy user input/output loads and a new I/O requirement {{is included in the}} design of the FTF system. Human factors are enhanced by adding an improved console interface and special <b>function</b> <b>keyboard</b> handler. The additional features require the inclusion of much new software to the original set from which FTF was developed. As a result, it is necessary to split the system into a duel programming configuration with high rates of interground communications. A generalized information routing mechanism is used to support this configuration...|$|E
50|$|In light-show mode {{users of}} the Kaleidica are able to move the mouse in-sync with music and {{simultaneously}} manipulate a variety of <b>functions</b> using the <b>keyboard.</b> Subtle and vigorous effects {{can be achieved by}} manipulating blend, rotation, image-brush size, skew, etc.|$|R
40|$|The {{design of}} a {{computer}} <b>keyboard</b> with dual <b>function</b> is proposed. This computer keyboard called Dual <b>Keyboard</b> can <b>function</b> both as a normal keyboard and as a pressure sensitive keyboard. The proposed device has a switch that decides the <b>function.</b> The <b>keyboard</b> makes use of sensors placed beneath the keys to measure the pressure applied on the key by the user. This device has many applications. In this study, it is applied to mitigate Denial of Service (DoS) attack...|$|R
30|$|TrackPoint is one {{of several}} {{interfaces}} that have integrated devices that mount mouse <b>functions</b> on the <b>keyboard.</b> The TrackPoint has a mouse trackpad that is placed {{in the center of the}} keyboard [2]. By using the TrackPoint, mouse-cursor movement can be controlled by using the fingertips. Another keyboard can sense hand movement with a built-in infrared sensor, and some mouse functions are possible via finger motion as if the keyboard is a touchpad mouse [3]. One keyboard can act as a touchpad mouse through touch sensors that are placed on the keyboard surface [4, 5]. These studies considered mouse functions such as cursor movement and scrolling, but studies that examine clicking and dragging functions have not yet been conducted. In order to mount mouse <b>function</b> onto the <b>keyboard,</b> part of the keyboard needs to be made into something like a touchpad mouse. However, mouse function via touchpad has been reported to take more time than that using a conventional mouse [6]. Thus, improving efficiency of typing and mouse operation by integrating the devices, a more useful approach might be to mount the <b>keyboard</b> <b>function</b> onto a mouse that is operated by the hand and fingers.|$|R
40|$|It is {{generally}} agreed upon by experts that EEG monitoring of brain function during open heart surgery {{is of the}} utmost importance in preventing postoperative neurological and psychopathological consequences. Up to now, however, this monitoring has not been performed on a large scale: (1) it is a very time-consuming task for the clinical neurophysiologist; (2) the anesthetist does not generally possess enough knowledge of this part of neurophysiology to get more than only a rough impression of the alterations of brain function during these procedures. To improve this situation we developed an automatic method to monitor brain function: the results of period-amplitude analysis of the EEG are continuously related to a number of important parameters — blood pressure, temperature, anesthesia. The way this is done resembles to a large degree the procedure which the neurophysiologist uses to judge the EEG during monitoring. The system generates warning and alerting signals, which also indicate the kind of disturbance when a marginal situation occurs. The anesthetist may take measures within 1 min to restore the condition. This is in complete agreement with the needs of anesthesiology. By means of a special <b>function</b> <b>keyboard</b> the anesthetist uses the system interactively and introduces all the necessary information which is needed for the proper functioning of the warning system (kind and quantity of different anesthetics and other drugs). At the end of the procedure the total information about the EEG, patient parameters and anesthetic measures are plotted in graphical form and printed as a table for documentation purposes which to a large degree may do away with the usual documentation. The introduction of this automatic monitoring system opens the way to a large scale use of EEG monitoring during open heart surgery...|$|E
5000|$|All {{of these}} {{controls}} can be programmed with the included [...] "Nostromo Array Programming Software" [...] to emulate any <b>keyboard</b> <b>function</b> or <b>keyboard</b> macro. They {{can also be}} programmed to change the device's [...] "state". The n52 has 4 different color-coded states, indicated by 3 LEDs below the fifteenth button. If a user changes {{the state of the}} device from the normal one, the red, green, or blue LED lights up, and all other controls now represent a different function. The state-button can be set to act as a temporary shift button that works while it is pressed, a toggle button, or it can be set to work until it is pressed again. In total, this allows up to 104 different functions. The software can recognize games by their executable filenames, and automatically load the appropriate profile when that game is started. User-created profiles, which are technically single files, can be submitted to Belkin via e-mail, making them available for others to download.|$|R
5000|$|The biographical {{movements}} are also framed in current technology; the section titles are different keyboard commands, such as [...] "... return" [...] and [...] "... command ... shift". The <b>functions</b> of the <b>keyboard</b> commands {{relate to the}} changes happening in McLuhan's biographical narrative.|$|R
50|$|The {{number of}} {{floating}} dialog boxes has been reduced, with their <b>functions</b> available using <b>keyboard</b> shortcuts {{or in the}} docked toolbars in the editing window. The tool bar controls {{at the top of}} the window always display the controls relevant to the current tool.|$|R
5000|$|The soft reboot <b>function</b> via <b>keyboard</b> was {{originally}} designed by David Bradley. Bradley, {{as the chief}} engineer of the IBM PC project and developer of the machine's ROM-BIOS, had originally used , but found it was too easy to bump {{the left side of}} the keyboard and reboot the computer accidentally. According to his own account, Hallerman, who was the chief programmer of the project, therefore suggested switching the key combination to [...] as a safety measure, a combination impossible to press with just one hand on the original IBM PC keyboard.|$|R
50|$|Apple {{revived the}} Control Strip as a {{component}} of its Touch Bar in October 2016. By default, the rightmost portion of the Touch Bar displays a subset of system controls previously available on the <b>keyboard's</b> <b>function</b> keys. When Control Strip is expanded the full set of system controls is displayed.|$|R
