431|2121|Public
5|$|Track {{and field}} events {{are divided into}} three broad categories: track events, field events, and {{combined}} events. The majority of athletes tend to specialise in just one event (or <b>event</b> <b>type)</b> {{with the aim of}} perfecting their performances, although the aim of combined events athletes is to become proficient in a number of disciplines. Track events involve running on a track over a specified distances and—in the case of the hurdling and steeplechase events—obstacles may be placed on the track. There are also relay races in which teams of athletes run and pass on a baton to their team member {{at the end of a}} certain distance.|$|E
25|$|The {{two types}} differ {{only in the}} nature of the inciting <b>event.</b> <b>Type</b> I CRPS {{develops}} following an initiating noxious event that may or may not have been traumatic, while type II CRPS develops after a nerve injury.|$|E
2500|$|... 1985– Copps Coliseum, {{sports and}} {{entertainment}} arena with a capacity of up to 19,000 (depending on <b>event</b> <b>type</b> and configuration) opens its doors for business. It is named after the former Hamilton mayor, Victor K. Copps.|$|E
40|$|Most {{previous}} event extraction {{studies have}} {{relied heavily on}} features derived from annotated event mentions, thus {{cannot be applied to}} new <b>event</b> <b>types</b> without annotation effort. In this work, we take a fresh look at event extraction and model it as a grounding problem. We design a transferable neural architecture, mapping <b>event</b> mentions and <b>types</b> jointly into a shared semantic space using structural and compositional neural networks, where the <b>type</b> of each <b>event</b> mention can be determined by the closest of all candidate types. By leveraging (1) available manual annotations for a small set of existing <b>event</b> <b>types</b> and (2) existing event ontologies, our framework applies to new <b>event</b> <b>types</b> without requiring additional annotation. Experiments on both existing <b>event</b> <b>types</b> (e. g., ACE, ERE) and new <b>event</b> <b>types</b> (e. g., FrameNet) demonstrate the effectiveness of our approach. Without any manual annotations for 23 new <b>event</b> <b>types,</b> our zero-shot framework achieved performance comparable to a state-of-the-art supervised model which is trained from the annotations of 500 event mentions...|$|R
5000|$|The {{standard}} {{defines the}} structure of meaning of event and master data through an Abstract Data Model, a Data Definition Layer and a Core <b>Event</b> <b>Types</b> module. The Core <b>Event</b> <b>Types</b> module specifies the events that are created by EPCIS Capturing Applications and published to an EPCIS infrastructure using the EPCIS Capture Interface described above. These events are returned to EPCIS Accessing Applications in response to requests invoked through the EPCIS Query Control Interface or in response to standing requests made by an EPCIS Accessing Application. The five <b>event</b> <b>types</b> defined within the Core <b>Event</b> <b>Types</b> module are: ...|$|R
40|$|<b>Event</b> <b>types</b> (ET) have {{received}} considerable attention in formal semantics, but their importance in experimental linguistics has developed only recently. The {{aim of this}} work is to compare the performance of human annotators and corpusbased models in ET classification of Italian verbs 1 <b>Event</b> <b>Types</b> in experimental linguistics <b>Event</b> <b>types</b> (ET) {{play a crucial role}} in verb semantics, contributing to the temporal constitution of the sentence. We refer here to Vendler’s (1967) standard classification of predicates into state...|$|R
5000|$|PTYPE - 1-number numeric <b>event</b> <b>type</b> (1=ETH; 2=REV; 3=REG; 4=GEN) ...|$|E
5000|$|... as record field IDs and <b>event</b> <b>type</b> {{and class}} IDs in AppleEvents ...|$|E
5000|$|Event Structure: {{defining}} the <b>event</b> <b>type</b> of the expression and any subeventual structure it may have; with subevents; ...|$|E
40|$|Abstract. We {{address the}} problem of {{analyzing}} spatial correlation between <b>event</b> <b>types</b> in large point data sets. Collocation rules are unsatisfactory, when confidence is not a sufficiently accurate interestingness measure, and Monte Carlo testing is infeasible, when the number of <b>event</b> <b>types</b> is large. We introduce an algorithm for mining correlation patterns, based on a non-parametric bootstrap test that, however, avoids the actual resampling by scanning each point and its distances to the events in the neighbourhood. As a real data set we analyze a large place name data set, the set of <b>event</b> <b>types</b> consisting of different linguistic features that appear in the place names. Experimental results show that the algorithm can be applied to large data sets with hundreds of <b>event</b> <b>types.</b> ...|$|R
50|$|EPCISEvent: a {{base class}} for all <b>event</b> <b>types.</b>|$|R
5000|$|The {{intrinsic}} likelihood/probability {{of representative}} threat <b>event</b> <b>types</b> is considered.|$|R
50|$|An {{important}} novelty in MQL5 is Depth of Market {{and a new}} <b>event</b> <b>type</b> {{of handling}} Depth of Market information.|$|E
5000|$|Note the {{addition}} below {{is not an}} <b>Event</b> <b>type</b> but analysis that {{can be carried out}} from the Event logs: ...|$|E
5000|$|... the {{argument}} to [...] is an agent, representing a procedure with two arguments; the procedure finds {{the country at}} the corresponding coordinates and displays it. The whole agent is [...] "subscribed" [...] to the <b>event</b> <b>type</b> [...] for acertain button, so that whenever an instance of the <b>event</b> <b>type</b> occurs on that button — because a user has clicked the button — the procedure will be executed with the mouse coordinates being passed as arguments for [...] and [...]|$|E
40|$|Separating {{crosscutting}} concerns {{while preserving}} modular reasoning is challenging. Type-based interfaces (<b>event</b> <b>types)</b> separate modularized crosscutting concerns (observers) and traditional object-oriented concerns (subjects). <b>Event</b> <b>types</b> paired with <b>event</b> specifications {{have been shown}} to be effective in enabling modular reasoning about subjects and observers. Similar to class subtyping there are benefits to organizing <b>event</b> <b>types</b> into subtyping hierarchies. However, unrelated behaviors of observers and their arbitrary execution orders could cause unique, somewhat counterintuitive, reasoning challenges in the presence of event subtyping. These challenges threaten both tractability of reasoning and reuse of <b>event</b> <b>types.</b> This work makes three contributions. First, we pose and explain these challenges. Second, we propose an event-based calculus to show how these challenges can be overcome. Finally, we present modular reasoning rules of our technique, and show its applicability to other event-based techniques including join point types...|$|R
50|$|New <b>event</b> <b>types</b> {{added to}} MQL5 {{represent}} another {{significant difference between}} the languages. These <b>event</b> <b>types</b> allow flexible management of testing and optimization of trading robots in the MetaTrader 5 strategy tester - TesterInit, TesterPass and TesterDeinit. Detailed information on {{the difference between the two}} languages can be found in the documentation on the developer's website.|$|R
40|$|This paper defines Ptolemy. The {{novelty of}} Ptolemy {{is the notion}} of <b>event</b> <b>types</b> and {{quantification}} based on <b>event</b> <b>types.</b> We give the syntax, operational semantics and type rules for the langauge, and discuss its meta-theory. 1. Ptolemy’s Design In this section, we describe Ptolemy, a language with quantified, <b>typed</b> <b>events</b> that extends implicit invocation (II) languages with ideas from aspect-oriented (AO) languages. Ptolemy features new mechanisms for declaring <b>event</b> <b>types</b> and <b>events.</b> Our description includes syntax, examples, semantics, and type checking rules. 1. 1 Overview Ptolemy is inspired by II languages such as Rapide [8] and AO lan-guages such as AspectJ [5]. It also incorporates some ideas from Eos [11] and Caesar [9]. As a small, core language, its techni...|$|R
5000|$|Event {{handling}} systems that use both the <b>event</b> <b>type</b> {{and the type}} of the receptor object in order to call the correct event handling routine.|$|E
50|$|Scripts. A {{script is}} a program {{intended}} for a single execution of an action. The start event is the only <b>event</b> <b>type</b> processed by the script.|$|E
5000|$|Conservative {{updating}} {{changes the}} update, {{but not the}} query algorithms. To count [...] instances of <b>event</b> <b>type</b> , one first computes an estimate , then updates [...] for each row [...]|$|E
40|$|<b>Event</b> <b>types</b> {{have been}} widely {{addressed}} in linguistics literature, but have received little attention in psycholinguitics, neurolinguistics and computational linguistics research. This thesis dissertation explores the nature of <b>event</b> <b>types</b> from a cognitive point of view: many descriptions and diagnostics on <b>event</b> <b>types</b> are available, but few studies {{have dealt with the}} problem of how <b>event</b> <b>types</b> are represented and processed in the mental lexicon. An important prerequisite for this sort of research is the building of a corpus of stimuli that meets our needs (web-based pre-tests were run to test the reliability of the stimuli, which should be balanced to control the variables known to aect processing costs) and an analysis of pre-existing literature in experimental psycholinguistics of <b>event</b> <b>types.</b> Our main concern was to explore new experimental settings in verb semantics psycholinguistics and to adapt them to this specic type of investigation: the choice of the method was narrowed down to the semantic priming paradigm, although the set of stimuli could also be suitable for other experimental settings, such as reading-time studies. The semantic priming paradigm was exploited to contrast processing effects on achievement verbs and activity verbs, which dier with respect to two superordinate features: durativity and resultativity. A series of priming experiments were run to explore differences and interactions between such features and the tense morphology and to evaluate the dierent contribution of the experimental setting in the observation and measurement of the effect: experiment 1 and experiment 2 followed a similar design and contrasted the eects of different neutral primes; experiment 3 focused on the interaction between <b>event</b> <b>types</b> and Italian tense morphology...|$|R
5000|$|... it hard-wires {{the events}} into the language, so that adding new <b>event</b> <b>types</b> {{requires}} {{changes to the}} language ...|$|R
5000|$|The {{following}} {{lists the}} official Basel II defines the seven <b>event</b> <b>types</b> with some examples for each category: ...|$|R
50|$|The OPC Alarms and Events {{specification}} is also {{maintained by}} the OPC Foundation, and defines the exchange of alarm and <b>event</b> <b>type</b> message information, as well as variable states and state management.|$|E
50|$|There is no universally {{standardized}} {{color scheme}} for poker chip values, and schemes not only vary nationally and regionally, but even from venue to venue, or by <b>event</b> <b>type</b> {{within a single}} venue.|$|E
5000|$|The {{simplest}} is {{the point}} query, which asks for the count of an <b>event</b> <b>type</b> [...] The estimated count is given by the least value in the table for , namely , where [...] is the table.|$|E
5000|$|They {{must learn}} how their {{experiences}} {{are representative of}} certain <b>event</b> <b>types</b> that {{are present in the}} language ...|$|R
50|$|The five <b>event</b> <b>types</b> below were {{competed for}} both class A and class B, {{for a total}} of ten events.|$|R
5000|$|The writing {{side of the}} API has {{methods that}} {{correspond}} to the reading side for “StartElement” and “EndElement” <b>event</b> <b>types.</b>|$|R
50|$|The {{two types}} differ {{only in the}} nature of the inciting <b>event.</b> <b>Type</b> I CRPS {{develops}} following an initiating noxious event that may or may not have been traumatic, while type II CRPS develops after a nerve injury.|$|E
5000|$|Consider the {{situation}} {{when there are}} 2 elements nested together. Both have event handlers registered on the same <b>event</b> <b>type,</b> say [...] "click". When the user clicks on the inner element, there are two possible ways to handle it: ...|$|E
50|$|Different {{event types}} have a {{different}} set of displayed field and a different text of a notification. Each <b>event</b> <b>type</b> can be supplemented with a photo which is displayed in a tooltip. Calendars can also be imported using widespread iCal files.|$|E
40|$|The {{notion of}} {{event-driven}} process chains (EPC) {{is widely used}} to model processes. It is an ongoing discussion of how to reach executable workflows from EPCs. While {{the transformation of the}} general structure and the functions is well-understood, the transformation of events is an open issue. This paper discusses dierent possible <b>event</b> <b>types</b> and their semantics. Furthermore, it presents a transformation of the introduced <b>event</b> <b>types</b> to workflow constructs respecting the semantics of each event...|$|R
40|$|In this paper, basic {{unsteady}} flow <b>types</b> and transient <b>event</b> <b>types</b> are categorized, and then unsteady friction models are tested for each <b>type</b> of transient <b>event.</b> One {{important feature of}} any unsteady friction model {{is its ability to}} correctly model frictional dissipation in {{unsteady flow}} conditions under a wide a range of possible transient <b>event</b> <b>types.</b> This is of importance to the simulation of transients in pipe networks or pipelines with various devices in which a complex series of unsteady flow types are common. Two common one-dimensional unsteady friction models are considered, namely, the constant coefficient instantaneous acceleration-based model and the convolution-based model. The modified instantaneous acceleration-based model, although an improvement, is shown to fail for certain transient <b>event</b> <b>types.</b> Additionally, numerical errors arising from the approximate implementation of the instantaneous acceleration-based model are determined, suggesting some previous good fits with experimental data are due to numerical error rather than the unsteady friction model. The convolution-based model is successful for all transient <b>event</b> <b>types.</b> Both approaches are tested against experimental data from a laboratory pipeline. John P. Vítkovský, Anton Bergant, Angus R. Simpson and Martin F. Lamber...|$|R
30|$|MAC {{package and}} event package are complementary. An event package is {{responsible}} to define <b>event</b> <b>types,</b> while an MAC package uses various <b>event</b> <b>types</b> to create command flow and sequentially to execute the events in command flow. In order to prove practicable, we define three command flows, i.e., connection contention mechanism, bandwidth request and grant mechanism, and data transmit and receive mechanism. The design of command flow is based on hybrid multi-hop relay network (HMRN), and HMRN is described in topology package.|$|R
