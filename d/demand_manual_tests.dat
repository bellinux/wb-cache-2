0|1670|Public
50|$|Rational Quality Manager {{provides}} a full-featured <b>manual</b> <b>test</b> editor. Existing <b>manual</b> <b>test</b> scripts can be imported from Rational Manual Tester. Reuse and automation capabilities {{can be added}} to <b>manual</b> <b>tests</b> by using keywords.|$|R
40|$|Aim: To assess inter-rater {{reliability}} of ankle <b>manual</b> <b>tests.</b> We also correlated the <b>manual</b> <b>tests</b> with the Cumberland Ankle Instability Tool (CAIT). Method: One ankle {{from each of}} 60 participants was assessed using four different <b>manual</b> <b>tests</b> (anterior drawer in supine and crook lying, talar tilt, inversion tilt). Three different raters, varying in experience, tested each participant. The CAIT questionnaire was also administered. The study received ethics approval from the University of Sydney Human Research Ethics Committee. Intraclass correlation coefficients(ICC), standard error of the mean (SEM) and percent close agreement (PCA) {{were used to determine}} {{reliability of}} the four tests. Pearson’s correlation coefficients were used to determine relationships between the <b>manual</b> <b>tests</b> and CAIT scores...|$|R
50|$|In 2007 a <b>manual</b> <b>testing</b> {{solution}} was introduced.|$|R
40|$|<b>Manual</b> <b>testing</b> of web-based {{business}} applications causes {{delay in}} software delivery time {{because it is}} time-consuming, slow, error prone and less reliable. Automated testing is faster as compared to <b>manual</b> <b>testing</b> because it requires less human effort and thus reduces the error and maintenance cost. Based on the research findings from literature review, {{it was concluded that}} Selenium performs better as compared to other automated testing tools for testing a Single Page Application (SPA). This thesis focused on using Selenium as an automated testing tool for testing SPA. Furthermore, best practices of automated testing were utilized which resulted in faster software testing time. Interviews were conducted to assess the time taken per release during <b>manual</b> <b>testing</b> phase. Historical data from the past three years were also collected and analyzed to measure time difference in <b>manual</b> <b>testing</b> and automated testing. A significant effect was observed in testing time with the introduction of automated testing as compared to <b>manual</b> <b>testing.</b> Findings from the thesis conclude that automated testing leads to achieve shorter testing time and increased chances of detecting errors in a SPA web application...|$|R
50|$|These {{last two}} types are also done in <b>manual</b> <b>testing.</b>|$|R
50|$|TestComplete: TestComplete is an {{automated}} testing tool, with support for functional <b>testing,</b> regression <b>testing,</b> <b>manual</b> <b>testing,</b> unit testing, distributed testing and HTTP performance testing.|$|R
50|$|Special {{chemistry}} - elaborate {{techniques such}} as electrophoresis, and <b>manual</b> <b>testing</b> methods.|$|R
5000|$|Course Supplements: Any {{materials}} {{the instructor}} needs - slides, solution <b>manuals,</b> <b>test</b> banks, etc.|$|R
5000|$|Longer Time to Market (as {{compared}} to <b>manual</b> <b>testing</b> or record and replay technique) ...|$|R
40|$|In {{this thesis}} we {{investigate}} {{the use of}} pairwise testing for PLC embedded software. We compare these automatically generated tests with tests created manually by industrial engineers. The tests were evaluated in terms of fault detection, code coverage and cost. In addition, we compared pairwise testing with randomly generated tests {{of the same size}} as pairwise tests. In order to automatically create test suites for PLC software a previously created tool called Combinatorial Test Tool (CTT) was extended to support pairwise testing using the IPOG algorithm. Once test suites were created using CTT they were executed on real industrial programs. The fault detection was measured using mutation analysis. The results of this thesis showed that <b>manual</b> <b>tests</b> achieved better fault detection (8 % better mutation score in average) than tests generated using pairwise testing. Even if pairwise testing performed worse in terms of fault detection than <b>manual</b> <b>testing,</b> it achieved better fault detection in average than random tests of the same size. In addition, <b>manual</b> <b>tests</b> achieved in average 97. 29 % code coverage compared to 93. 95 % for pairwise testing, and 84. 79 % for random testing. By looking closely on all <b>tests,</b> <b>manual</b> <b>testing</b> performed equally good as pairwise in terms of achieved code coverage. Finally, the number of <b>tests</b> for <b>manual</b> <b>testing</b> was lower (12. 98 tests in average) compared to pairwise and random testing (21. 20 test in average). Interestingly enough, {{for the majority of the}} programs pairwise testing resulted in fewer <b>tests</b> than <b>manual</b> <b>testing...</b>|$|R
5000|$|<b>Manual</b> <b>test</b> {{execution}}: <b>manual</b> {{execution of}} the test cases using keyword documentation as execution guideline.|$|R
50|$|Test {{automation}} tools can be expensive, and {{are usually}} employed in combination with <b>manual</b> <b>testing.</b> Test automation can be made cost-effective in the long term, especially when used repeatedly in regression testing. A good candidate for test automation is a test case for common flow of an application, as it is required to be executed (regression testing) every time an enhancement {{is made in the}} application. Test automation reduces the effort associated with <b>manual</b> <b>testing.</b>|$|R
50|$|It {{does not}} have any bias: unlike <b>manual</b> <b>testing,</b> it does not {{overlook}} bugs because there is misplaced trust in some code.|$|R
5000|$|HP Business Process Testing {{software}}: Automated and <b>manual</b> <b>testing</b> {{software for}} test design, test creation, test maintenance, test execution, and test data management ...|$|R
5000|$|Runtime error {{detection}} - Monitoring an application {{the execution of}} automated or <b>manual</b> <b>tests</b> to expose problems such as race conditions, exceptions, and resource leaks.|$|R
40|$|An {{automated}} hemagglutination-inhibition (HI) {{test for}} the “shipping fever” strain (SF- 4) of parainfluenza 3 antibody in bovine sera was developed and compared to manual tube and microtiter test procedures. The automated system operating at 60 samples per hr provided the most test results per specified time period, and the <b>manual</b> tube <b>test</b> provided the least. The <b>manual</b> microtiter <b>test</b> and the automated system at 40 samples per hr, falling between the two above procedures, were comparable {{in the number of}} sera that could be titrated in 1 day by one technician. There was little difference between automated and <b>manual</b> <b>test</b> reproducibility when measured at the twofold titer one-dilution difference level. However, the automated system titrated a higher number of sera at the same titer on repeat runs than either of the <b>manual</b> <b>test</b> procedures. The automated one-quartile difference reproducibility (each twofold dilution subdivided into 4 units—“quartiles”) was equal to the <b>manual</b> <b>test</b> one-dilution difference reproducibility. The standard deviation of the per cent variation from the mean of paired serum titers for 40 -sample-per-hr runs ranged from ± 3. 49 to ± 5. 36 %. The manual and automated systems were of comparable sensitivity in their detection of negative sera...|$|R
5000|$|... 'Test definitions' {{to define}} testsThe {{structure}} {{and flow of}} a WET test is controlled by a test definitions file. This flow closely mimics the regular <b>manual</b> <b>testing</b> process.|$|R
40|$|Testing is {{the primary}} way to find bugs in software. Test-ing using {{manually}} generated test cases {{is the primary}} technique used in industry to improve reliability of software [...] infact, <b>manual</b> <b>testing</b> accounts for 50 - 80 % of the typical cost of software development. However, <b>manual</b> <b>test</b> input gen-eration is expensive, error-prone, and usually not exhaustive. With the increasing power of computers and advances in theorem proving and constraint solving technologies, therehas been {{a renewed interest in}} automated testing. A simple and often effective technique for automated testing i...|$|R
40|$|Abstract—Regression testing {{analyzes}} whether {{software maintenance}} has inadvertently broken existing functionality. Since it is costly—especially for manual testing—it is typically {{limited to a}} subset of test cases. Since impact analysis of code modifications on test cases is far from trivial for real world software, regression test selection is hard. However, if it misses affected test cases, bugs may remain unnoticed. In response, the research community has proposed numerous test selection approaches. Regression test selection is especially relevant for <b>manual</b> <b>tests,</b> since their execution costs {{limit the number of}} tests that can be executed in practice. However, evaluations of existing work focus on automated tests. Its applicability to <b>manual</b> <b>tests</b> is thus unclear. We present an industrial case study that demonstrates the challenges that regression test selection techniques face when applied to <b>manual</b> system <b>tests.</b> Furthermore, we sketch how, given these challenges, <b>manual</b> regression <b>test</b> selection can be improved. Keywords-regression test selection, software maintenance I...|$|R
40|$|Abstract: Today, Software {{testing is}} an {{essential}} part of successful software development process. The input executes the program and produces the expected output. The outcome of the software product depends on software <b>testing.</b> <b>Manual</b> <b>testing</b> is difficult to produce expected output. The <b>manual</b> <b>testing</b> takes long time to test. The major problem in <b>manual</b> <b>testing</b> is code coverage is not done at regular interval. Many techniques are used to automatically produce inputs in recent years. The test suite generation method is used to produce test suites with high code coverage. We produce a hybrid approach which provides the methodology to improve coverage level of branches in code at regular intervals. The main objective of the proposed system is to increase the coverage level with minimum test suite in a short time. The hybrid approach combines two techniques for improving the accuracy of branch coverage. The test cases are generated by using EVOSUITE tool. Optimization technique is based on coverage level of branch statements...|$|R
40|$|In some domains, such as {{the mobile}} {{application}} domain, functional tests may not be feasible to automate due to limited test automation technology (multimedia support, etc.) or high cost to port automated tests for different phone models and operating systems. In this context, test teams {{should be able to}} estimate the effort required to manually execute tests on schedule. Although several effort estimation approaches have been proposed over the years, none of them are appropriate for estimating <b>manual</b> <b>test</b> execution effort. The main reason for that is the lack of size measures for test projects. In this paper, we present execution points, a measure for the size and execution complexity of tests that is calculated based on test specifications. We also show how to estimate <b>manual</b> <b>test</b> execution effort and capacity based on this measure. Finally, results from an empirical study suggested the viability of our proposed measure. Key Words <b>Manual</b> <b>test</b> execution, size measure, effort estimation, capacity estimation 1...|$|R
50|$|HP ALM {{includes}} {{quality assurance}} features for risk-based test planning and management, version control, baselining, quality release and cycle management, test scheduling and execution, integrated <b>manual</b> <b>testing</b> and defect management.|$|R
50|$|As {{a relief}} from the <b>demanding</b> <b>manual</b> labour {{required}} of physically able inmates, patients were allowed {{a wide range of}} social and leisure activities including sports, dances and fetes. The Main Hall provided a focus for these activities, having a proscenium stage, orchestra pit and two Gaumont-Kazee cinema projectors with Rank audio visual rectifiers.|$|R
40|$|With safety {{critical}} software, {{it is important}} that the application is safe and stable. While this software can be quality tested with <b>manual</b> <b>testing,</b> automated testing has the potential to catch errors that <b>manual</b> <b>testing</b> will not. In addition there is also the possibility to save time and cost by automating the testing process. This matters when it comes to avionics components, as much time and cost is spent testing and ensuring the software does not crash or behave faulty. This research paper will focus on exploring the usefulness of automated testing when combining it with fuzz testing. It will also focus on how to fuzzy test applications classified into DAL-classifications...|$|R
40|$|In the {{development}} of test methods for solid dosage forms, <b>manual</b> <b>test</b> procedures for assay and content uniformity often precede {{the development}} of automated test procedures. Since the mode of extraction for automated test methods is often slightly {{different from that of}} the <b>manual</b> <b>test</b> method, additional validation of an automated test method is usually required. In addition to compliance with validation guidelines, developers of automated test methods are often asked to demonstrate equivalence between the <b>manual</b> and automated <b>test</b> methods. There are problems associated with using the traditional zero-difference hypothesis tests (such as the Student’s t-test) for demonstrating equivalence. The use of the Westlake Interval and Schuirmann’s Two Onesided test as more rigorous methods of demonstrating equivalence is discussed...|$|R
40|$|Extreme programmers have {{confidence}} in their code if it passes their unit tests. More experienced extreme programmers only {{have confidence}} in their code if they also {{have confidence in}} their tests. A technique used by extreme programmers to gain confidence in their tests {{is to make sure}} that their tests spot deliberate errors in the code. This sort of <b>manual</b> <b>test</b> testing is either time consuming or very superficial...|$|R
30|$|There are Relation Extraction {{works for}} Portuguese that also <b>demand</b> <b>manual</b> {{evaluation}} of the automatically extracted relations, {{due to the lack}} of a reference corpus. Freitas and Quental [42] evaluates manually a random sample of the extracted relations, following a rating system for the relations (3 : correct; 2 : partially correct; 1 : correct in general terms; 0 : wrong).|$|R
40|$|Modern {{software}} {{is becoming more}} and more complex and <b>manual</b> <b>testing</b> cannot keep up with the need for high-quality reliable software: often due to the complexity of event-driven software, <b>manual</b> <b>testing</b> is done. This comes with many disadvantages in comparison with automated testing. The increased importance of having a secure, reliable online presence requires testing of JavaScript web applications. This thesis explores the current state of Automated Testing for JavaScript web applications, presents a new Automated Testing Framework and gives an outlook on future research. It intends to resolve some of the complexity issues to allow for automated testing. Electrical Engineering, Mathematics and Computer ScienceSoftware TechnologySoftware Technolog...|$|R
50|$|Gedis GmbH {{is another}} Rohde & Schwarz system house. This {{subsidiary}} specializes in {{automatic test equipment}} (ATE) for testing electronic assemblies and modules. Its product portfolio ranges from compact <b>manual</b> <b>test</b> systems to turnkey, automatic in-line systems.|$|R
5000|$|Proof <b>test</b> - A <b>manual</b> <b>test</b> {{that allows}} the {{operator}} {{to determine whether the}} valve is in the [...] "as good as new" [...] condition by testing for all possible failure modes and requires a plant shutdown ...|$|R
40|$|Two {{methods of}} {{performing}} serological screening tests for syphilis are compared. One {{consisted of the}} Venereal Diseases Reference Laboratory (VDRL) slide test, the cardiolipin Wassermann reaction (CWR), and the Reiter protein complement fixation test (RPCFT) performed manually; {{the other was a}} fully automated system using two Technicon AutoAnalyzers (AAII), one for the automated reagin test (ART) and the other for automated complement fixation tests. The absorbed fluorescent treponemal antibody test (FTA-ABS) was used as a final arbiter in all cases found to be seropositive by either method. A pooled antigen consisting of a mixture of cardiolipin and Reiter protein was used for the automated complement fixation test, thus increasing the scope and capacity of the system. The AutoAnalyzer was shown to be capable of performing 400 cardiolipin and Reiter complement fixation tests and 700 automated reagin tests in an 8 -hour day. Modification of the complement fixation test method {{to take advantage of the}} highly sensitive colorimeter resulted in a significant increase in sensitivity and a corresponding saving in reagents. Of the 7843 sera tested, 258 gave a positive result in one or more of the screening tests. The automated test detected many more Reiter positive sera (127) than the <b>manual</b> <b>test</b> (83). Conversely, fewer CWR positive sera were detected by the automated test (60) than by the <b>manual</b> <b>test</b> (82). There was little difference between the number of positive sera detected by the ART (73) and the VDRL slide test (71). In 19 instances the automated tests detected positive sera which registered as completely negative in the <b>manual</b> <b>tests,</b> and four seropositive cases which the automated tests had failed to detect were detected by the <b>manual</b> <b>tests,</b> and four seropositive cases which the automated tests had failed to detect were detected by the <b>manual</b> <b>tests.</b> It was concluded that a combination of the ART and automated Reiter protein complement fixation test (ARPCFT) would be ideal for use in a large-scale screening programme for the detection of syphilis...|$|R
50|$|ASTM D5773, Standard Test Method of Cloud Point of Petroleum Products (Constant Cooling Rate Method) is an {{alternative}} to the <b>manual</b> <b>test</b> procedure. It uses automatic apparatus and {{has been found to be}} equivalent to test method D2500.|$|R
50|$|Also, due to {{the very}} {{detailed}} description of the way of executing the keyword (in the keyword documentation) the test can be performed by almost anyone. Thus keyword-driven testing can be used for both <b>manual</b> <b>testing</b> and automated testing.|$|R
50|$|Some test {{management}} tools are already supporting Agile testing by getting teams involved {{earlier in the}} SDLC to continuously build test scenarios as stories evolve. Teams often look for a solution that can deliver a combination of automated and <b>manual</b> <b>testing.</b>|$|R
40|$|Abstract- In the past, most {{software}} {{tests were}} performed using manual methods. This required a large staff of test personnel to perform expensive and time-consuming <b>manual</b> <b>test</b> procedures. Owing {{to the size}} and complexity of today’s advanced software applications, <b>manual</b> <b>testing</b> {{is no longer a}} viable option for most <b>testing</b> situations. The <b>manual</b> <b>testing</b> approach has inherent risks and costs associated with it, as it relies on humans to verify the validity of functionality within an application. Automation is key to improving the speed, accuracy, and flexibility of the software testing process, enabling the company to find and fix more defects earlier. By having an automated functional testing process, owners of software applications can be assured that regression testing can be completed in a more cost effective manner with fewer errors. Rational Robot is an automated functional regression tool. This helps to execute the tests much faster than we could manually. The key to doing this is to have a way to capture interactions with an application and make those interactions available to be repeated later. This paper demonstrates how to use IBM Rational Robot to record, edit, and execute functional tests. I...|$|R
5000|$|... {{differential}} testing - the Weber, Rinne, Bing and Schwabach <b>tests</b> {{are simple}} <b>manual</b> <b>tests</b> of auditory function conducted {{with a low}} frequency (usually 512 Hz) tuning fork that can provide a quick indication of type of hearing loss: unilateral/bilateral, conductive, or other ...|$|R
