37|500|Public
25|$|Elite {{was one of}} {{the first}} home {{computer}} games to use wire-frame 3D graphics with <b>hidden</b> <b>line</b> <b>removal.</b> It added graphics and twitch gameplay aspects to the genre established by the 1974 game Star Trader. Another novelty was the inclusion of The Dark Wheel, a novella by Robert Holdstock which gave players insight into the moral and legal codes to which they might aspire.|$|E
50|$|Faceted mode. In {{this mode}} each surface is drawn {{as a series}} of planar regions, usually rectangles. <b>Hidden</b> <b>line</b> <b>removal</b> is {{typically}} used with such a representation. Static <b>hidden</b> <b>line</b> <b>removal</b> does not update which lines are hidden during rotation, but only once the screen is refreshed. Dynamic <b>hidden</b> <b>line</b> <b>removal</b> continuously updates which curves are hidden during rotations.|$|E
5000|$|Generate precise 2D {{projections}} with <b>hidden</b> <b>line</b> <b>removal</b> using optional PHL V5 component.|$|E
40|$|Using {{algorithms}} {{from computer}} graphics, namely <b>hidden</b> <b>line</b> and surface <b>removal,</b> techniques {{have been constructed}} to derive the 3 -axis visible or millable set of a computer model from a given orientation or simulate and verify machining toolpaths. In this paper, an approach that reduces the accessibility problem of 5 -axis milling using a flat end tool into a 3 -axis accessibility problem is discussed. Using this approach, global detection of possible gouging into other parts, while a 5 -axis flat end mill is in use, is made feasible and collisions can be avoided. Key Words: NURBs, accessibility, 5 -axis machining. 1 Introduction Several methods are in use, when freeform computer models are realized using milling machines. Possibly the most common approach utilizes a ball end tool with three degrees of freedom, namely translation in x, y, and z [1, 2, 4, 5, 6, 7]. The ball end center of the tool follows an offset [8] to the model by the tool radius while the ball end surface is tangent to [...] ...|$|R
40|$|This paper {{describes}} {{a new approach}} to the <b>hidden</b> <b>line</b> problem in computer graphics. We assume that a 3 D visible grid surface scene is given. A raster space (image space) method for effective solving of <b>hidden</b> <b>line</b> problem is defined for this well established instance of <b>hidden</b> <b>line</b> problem. The solution of the visibility problem relies mainly on a special Bresenham-like linear interpolator and on a new enumeration of edges resp. facets. ...|$|R
40|$|Abstract — Ruling <b>line</b> <b>removal</b> is an {{important}} pre-processing step in document image processing. Several algorithms have been proposed for this task. However, {{it is important to}} be able to take full advantage of the existing algorithms by adapting them to the specific properties of a document image collection. In this paper, a system is presented, appropriate for fine-tuning the parameters of ruling <b>line</b> <b>removal</b> algorithms or appropriately adapt them to a specific document image collection, in order to improve the results. The application of our method to an existed <b>line</b> <b>removal</b> algorithms is presented...|$|R
50|$|Using a {{wire-frame}} model allows {{visualization of}} the underlying design structure of a 3D model. Traditional two-dimensional views and drawings can be created by appropriate rotation of the object and selection of <b>hidden</b> <b>line</b> <b>removal</b> via cutting planes.|$|E
5000|$|Hidden-surface {{algorithms}} can be {{used for}} <b>hidden</b> <b>line</b> <b>removal,</b> but not the other way around. Reif and Sen [...] proposed an O(log4 n)-time algorithm for the hidden-surface problem, using O((n + v)/log n) CREW PRAM processors for a restricted model of polyhedral terrains, where v is the output size.|$|E
50|$|Elite was {{developed}} in conjunction with programmer Ian Bell while both were undergraduate students at Cambridge University. Elite was first released in September 1984 and {{is known as the}} first game to have 3D <b>hidden</b> <b>line</b> <b>removal.</b> In 1987, Braben published Zarch for the Acorn Archimedes, ported in 1989 as Virus for the Atari ST, Commodore Amiga and PC.|$|E
5000|$|Rendering (Normal Shading, Wireframe, Shade <b>Hide</b> <b>Lines</b> Option) ...|$|R
40|$|The NPLOT (NASTRAN Plot) is an {{interactive}} computer graphics program for plotting undeformed and deformed NASTRAN finite element models. Developed at NASA's Goddard Space Flight Center, the program provides flexible element selection and grid point, ASET and SPC degree of freedom labelling. It is {{easy to use and}} provides a combination menu and command driven user interface. NPLOT also provides very fast <b>hidden</b> <b>line</b> and haloed <b>line</b> algorithms. The <b>hidden</b> <b>line</b> algorithm in NPLOT proved to be both very accurate and several times faster than other existing <b>hidden</b> <b>line</b> algorithms. A fast spatial bucket sort and horizon edge computation are used to achieve this high level of performance. The <b>hidden</b> <b>line</b> and the haloed line algorithms are the primary features that make NPLOT different from other plotting programs...|$|R
5000|$|Represent {{dimensions}} by visible outlines {{rather than}} by <b>hidden</b> <b>lines.</b>|$|R
5000|$|CGM HLR: CGM HLR is a <b>hidden</b> <b>line</b> <b>removal</b> (HLR) {{solution}} from Spatial {{based on}} CATIA V6 technology. CGM HLR is an ACIS-dependent development technology - an ACIS license is required. Though 3D {{is now the}} de facto CAD standard in most engineering disciplines, 2D still has a place in industries such as technical illustration, manufacturing, and architecture. Since 3D models are the typical primary output for CAD design, users in these industries require an efficient and accurate method of generating 2D computational drawings directly from the 3D models. <b>Hidden</b> <b>line</b> <b>removal</b> (HLR) is {{an important aspect of}} creating an accurate 2D representation from a 3D model. Using HLR, the converted model only displays those parts visible from a given perspective; hidden (or occluded) edges normally included in a 3D model representation are removed, or drawn in a line style that indicates their obscured position.|$|E
50|$|In general back-face culling can {{be assumed}} to produce no visible {{artifact}} in a rendered scene if it contains only closed and opaque geometry. In scenes containing transparent polygons, rear facing polygons may become visible {{through the process of}} alpha composition. In wire-frame rendering, back-face culling can be used to partially address problem of <b>hidden</b> <b>line</b> <b>removal,</b> but only for closed convex geometry.|$|E
50|$|Wireframe mode. In this {{representation}} {{the surface}} is drawn {{as a series of}} lines and curves, without <b>hidden</b> <b>line</b> <b>removal.</b> The boundaries and flow lines (isoparametric curves) may each be shown as solid or dashed curves. The advantage of this representation is that a great deal of geometry may be displayed and rotated on the screen with no delay needed for graphics processing.|$|E
50|$|CEDAR-FOX {{performs}} {{variety of}} operations on document {{to make them}} ready for comparison. They include thresholding, <b>line</b> <b>removal,</b> <b>line</b> segmentation, word segmentation and transcript mapping.|$|R
40|$|A vehicle {{geometric}} definition {{based upon}} quadrilateral surface elements to produce realistic pictures of an aerospace vehicle. The PCSYS {{programs can be}} used to visually check geometric data input, monitor geometric perturbations, and to visualize the complex spatial inter-relationships between the internal and external vehicle components. PCSYS has two major component programs. The between program, IMAGE, draws a complex aerospace vehicle pictorial representation based on either an approximate but rapid <b>hidden</b> <b>line</b> algorithm or without any <b>hidden</b> <b>line</b> algorithm. The second program, HIDDEN, draws a vehicle representation using an accurate but time consuming <b>hidden</b> <b>line</b> algorithm...|$|R
40|$|The {{elimination}} of lines not normally viewed during a visual {{perception of a}} three-dimensional object that is being simulated on a computer graphics display is called <b>hidden</b> <b>line</b> elimination (Fig. 1). My project consists of a PL- 1 computer program which implements an algorithm for <b>hidden</b> <b>line</b> elimination written by A. Montanari and R. Galemberti published in the April 1969 issue of the Communications of the ACM...|$|R
50|$|Elite {{was one of}} {{the first}} home {{computer}} games to use wire-frame 3D graphics with <b>hidden</b> <b>line</b> <b>removal.</b> It added graphics and twitch gameplay aspects to the genre established by the 1974 game Star Trader. Another novelty was the inclusion of The Dark Wheel, a novella by Robert Holdstock which gave players insight into the moral and legal codes to which they might aspire.|$|E
50|$|Problem {{sizes for}} <b>hidden</b> <b>line</b> <b>removal</b> are {{the total number}} n of {{the edges of the}} model and the total number v of the visible {{segments}} of the edges. Visibility can change at the intersection points of the images of the edges. Let k denote the total number of the intersection points of the images of the edges. Both k = Θ(n2) and v = Θ(n2) in the worst case but usually v < k.|$|E
50|$|Solid {{objects are}} usually modeled by polyhedra in a {{computer}} representation. A face of a polyhedron is a planar polygon bounded by straight line segments, called edges. Curved surfaces are usually approximated by a polygon mesh. Computer programs for line drawings of opaque objects {{must be able to}} decide which edges or which parts of the edges are hidden by an object itself or by other objects. This problem is known as <b>hidden</b> <b>line</b> <b>removal.</b>|$|E
40|$|All of the {{information}} necessary to perform the polygon set operations (union, intersection, and difference) and therefore polygon clipping can be generated by a single application of a process called polygon comparison. This process accepts two or more input polygons and generates one or more polygons as output. These output polygons contain unique homogenous areas, each falling within the domain {{of one or more}} input polygons. Each output polygon is classified by the list of input polygons in which its area may be found. The union contour of all input is also generated, completing all of {{the information}} necessary to perform the polygon set operations. This paper introduces a polygon comparison algorithm which features reduced complexity due to its use of a graph data representation. The paper briefly introduces some of the possible approaches to the general problem of polygon comparison including the polygon set and clipping problems. The new algorithm is then introduced and explained in detail. The algorithm is sufficiently general to compare sets of concave polygons with holes. More than two polygons can be compared at one time, all information for future comparisons of subsets of the original input polygon sets is available from the results of the initial application of the process. The algorithm represents polygons using a graph of the boundaries of the polygons. These graphs are imbedded in a two dimensional geometric space. The use of the graph representation simplifies the comparison process considerably by eliminating many special cases from explicit consideration. Polygon operations like the ones described above are useful in a variety of application areas, especially those which deal with problems involving two dimensional or projected two dimensional geometric areas. Examples include VLSI circuit design, cartographic and demographic applications, and polygon clipping for graphic applications such as viewport clipping, <b>hidden</b> surface and <b>line</b> <b>removal,</b> detailing, and shadowin...|$|R
40|$|Abstract—The human {{vision system}} can {{interpret}} a single 2 D line drawing as a 3 D object without much difficulty {{even if the}} <b>hidden</b> <b>lines</b> of the object are invisible. Many reconstructionmethods have been proposed to emulate this ability, but they cannot recover the complete object if the <b>hidden</b> <b>lines</b> of the object are not shown. This paper proposes a novel approach to reconstructing a complete 3 D object, including {{the shape of the}} back of the object, from a <b>line</b> drawing without <b>hidden</b> <b>lines.</b> First, we develop theoretical constraints and an algorithm for the inference of the topology of the invisible edges and vertices of an object. Then, we present a reconstruction method based on perceptual symmetry and planarity of the object. We show a number of examples to demonstrate the success of our approach. Index Terms— 3 D reconstruction, <b>hidden</b> topology, <b>line</b> drawings, visual perception. Ç...|$|R
40|$|The human {{vision system}} can {{interpret}} a single 2 D line drawing as a 3 D object without much difficulty {{even if the}} <b>hidden</b> <b>lines</b> of the object are invisible. Several reconstruc-tion approaches have tried to emulate this ability, but they cannot recover the complete object if the <b>hidden</b> <b>lines</b> of the object are not shown. This paper proposes a novel approach for reconstructing complete 3 D objects from <b>line</b> drawings without <b>hidden</b> <b>lines.</b> First, we develop some constraints and properties for the inference of the topology of the in-visible edges and vertices of an object. Then we present a reconstruction method based on perceptual symmetry and planarity of the object. We give a number of examples to demonstrate the ability of our approach. 1...|$|R
50|$|In 3D {{computer}} graphics, shown surface determination (also {{known as}} {{hidden surface removal}} (HSR), occlusion culling (OC) or visible surface determination (VSD)) is the process used to determine which surfaces and parts of surfaces are not visible from a certain viewpoint. A hidden surface determination algorithm is {{a solution to the}} visibility problem, {{which was one of the}} first major problems in the field of 3D computer graphics. The process of hidden surface determination is sometimes called hiding, and such an algorithm is sometimes called a hider. The analogue for line rendering is <b>hidden</b> <b>line</b> <b>removal.</b> Hidden surface determination is necessary to render an image correctly, so that one may not view features hidden behind the model itself, allowing only the naturally viewable portion of the graphic to be visible.|$|E
50|$|Dilution of {{precision}} is an algorithmic trick used to handle difficult problems in <b>hidden</b> <b>line</b> <b>removal,</b> caused when {{horizontal and vertical}} edges lie {{on top of each}} other due to numerical instability. Numerically, the severity escalates when a CAD model is viewed along the principal axii or when a geometric form is viewed end-on. The trick is to alter the view vector by a small amount, thereby hiding the flaws. Unfortunately, this mathematical modification introduces new issues of its own, namely that the exact nature of the original problem has been destroyed, and visible artifacts of this kludge will continue to haunt the algorithm. One such issue is that edges that were well defined and hidden will now be problematic. Another common issue is that the bottom edges on circles viewed end-on will often become visible and propagate their visibility throughout the problem.|$|E
50|$|Spasim was {{originally}} {{developed in the}} spring of 1974. Players moved through a wire-frame 3D universe, with gameplay resembling the 2D game Empire ire. Graphically, Spasim lacked even <b>hidden</b> <b>line</b> <b>removal,</b> but did feature online multiplayer over the worldwide university-based PLATO network. Spasim had a documented debut at the University of Illinois in 1974. The game was a rudimentary space flight simulator, which featured a first-person perspective. Futurewar (1978) by high-school student Erik K. Witz and Nick Boland, also based on PLATO, is sometimes claimed to be the first true FPS. The game included a vector image of a gun and other armaments that pointed at the monsters. Set in A.D. 2020, Futurewar anticipated Doom, although as to Castle Wolfensteins transition to a futuristic theme, the common PLATO genesis is coincidental. A further notable PLATO FPS was the tank game Panther, introduced in 1975, generally acknowledged as a precursor to Battlezone.|$|E
30|$|Geometrical attacks: {{these include}} scaling, shearing, rotation, {{combinations}} {{of them and}} local distortions such as Stirmark attack or <b>line</b> <b>removal.</b>|$|R
40|$|Abstract — The human {{vision system}} can {{interpret}} a single 2 D line drawing as a 3 D object without much difficulty {{even if the}} <b>hidden</b> <b>lines</b> of the object are invisible. Many reconstruction methods have been proposed to emulate this ability, but they cannot recover the complete object if the <b>hidden</b> <b>lines</b> of the object are not shown. This paper proposes a novel approach to reconstructing a complete 3 D object, including {{the shape of the}} back of the object, from a <b>line</b> drawing without <b>hidden</b> <b>lines.</b> First, we develop theoretical constraints and an algorithm for the inference of the topology of the invisible edges and vertices of an object. Then we present a reconstruction method based on perceptual symmetry and planarity of the object. We show a number of examples to demonstrate the success of our approach. Index Terms — 3 D reconstruction, <b>hidden</b> topology, <b>line</b> draw-ings, visual perception. I...|$|R
3000|$|... 1. Local {{geometrical}} attacks: According to [14], {{this type}} of attack includes row/column <b>line</b> <b>removal,</b> jitter, and cropping. The performance of the proposed scheme against these attacks is summarized in Figures  10, 11, and 12, respectively, where Nikolaidis denotes the NIKO-SFND in [14], as for all other figures below. The BERs shown in figures are averaged over 10 test images and the search space (ϕ, σx, σy) (see Section  5.2) is adopted in evaluating the attack of row/column <b>line</b> <b>removal.</b> It {{can be seen that}} the proposed scheme significantly outperforms the three comparison approaches in counteracting the attacks of row/column <b>line</b> <b>removal</b> and cropping, whereas it is remarkably weaker than the compared schemes. The weakness to jitter attacks {{comes from the fact that}} jitter attacks are outside the scope of the proposed scheme.|$|R
40|$|Abstract. The 3 D {{model of}} mine {{transforms}} into various 2 D views with <b>hidden</b> <b>line</b> <b>removal</b> technique, and outputs these 2 D views {{as the standard}} engineering drawings to guide the production and construction of mine. Due to the complexity and specificity of mine environment, those 2 D views that the general blanking algorithms generated {{have a lot of}} uncertainties, so they don’t meet the requirements of practical application. In order to meet the requirements of mining applications, according to the characteristics of mine environment, the paper designs and implements a <b>hidden</b> <b>line</b> <b>removal</b> algorithm, and applies it to 2 D views automatic generations of digital mine, both the blanking result and accuracy satisfy the requirements of mining applications...|$|E
40|$|This report {{documents}} {{a computer}} program for 3 -D graphical display of panel models of submerged bodies. The program {{is an integral part}} of the IMD hydrodynamic software package and is mainly applied to check the correctness of the created model. <b>Hidden</b> <b>line</b> <b>removal</b> algorithm has been incorporated in the program. Peer reviewed: NoNRC publication: Ye...|$|E
40|$|A {{parallel}} object-space {{hidden surface}} removal algorithm for polyhedral scenes is presented. The uniform grid technique is used to achieve parallelism for the <b>hidden</b> <b>line</b> <b>removal.</b> A conflict-detection and back-off strategy is then used to obtain parallelism for the visible region reconstruction from the visible segments. The algorithm has been implemented on a Sequent Balance 21000 shared-memory parallel computer. An average speedup of 10 has been obtained using 15 processors...|$|E
40|$|The <b>hidden</b> <b>line</b> and <b>hidden</b> surface {{problems}} are simpler when restricted to special classes of objects. An {{example is the}} class of grid surfaces, that is, graphs of bivariate functions represented by their values {{on a set of}} grid points. Projected grid surfaces have geometric properties which permit <b>hidden</b> <b>line</b> or <b>hidden</b> surface elimination to be done more easily than in the general case. These properties are discussed in this paper, and an algorithm is given which exploits the...|$|R
50|$|However, {{not all the}} Legitimists found {{themselves}} in these two sides: others converted to survivantism (survival of Louis XVII and his <b>hidden</b> <b>line).</b>|$|R
40|$|This paper {{proposes a}} {{statistical}} approach to degraded handwritten form image preprocessing including binarization and form <b>line</b> <b>removal.</b> The degraded image is modeled by a Markov Random Field (MRF) where the prior is learnt from a training set {{of high quality}} binarized images, and the probabilistic density is learnt on-the-fly from the gray-level histogram of input image. We also modified the MRF model to implement form <b>line</b> <b>removal.</b> Test results of our approach show excellent performance on the data set of handwritten carbon form images...|$|R
