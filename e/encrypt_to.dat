25|3378|Public
2500|$|Similarly, in {{position}} 6, K encrypts to L. As the Enigma machine is self-reciprocal, {{this means that}} at the same position L would also <b>encrypt</b> <b>to</b> K. Knowing this, we can apply the argument once more to deduce a value for P(K, which might be: ...|$|E
2500|$|Sanborn gave The New York Times another clue in November 2014: {{the letters}} [...] "MZFPK", the 70th-74th letters in passage four, become [...] "CLOCK" [...] after decryption. The 74th letter is K {{in both the}} {{plaintext}} and ciphertext, meaning {{that it is possible}} for a character to <b>encrypt</b> <b>to</b> itself. This means it does not have a weakness, where a character could never be encrypted as itself, that was known to be inherent in the German Enigma machine. It is believed that the [...] "BERLINCLOCK" [...] plaintext may be a direct reference to the Berlin Clock [...]|$|E
2500|$|For each {{transmitted}} message, {{the sending}} operator would follow a standard procedure. From September 1938, {{he would use}} an initial position to encrypt the indicator and send it in clear, followed by the message key that had been enciphered at that setting. If the ground setting (...) was GKX for example, he would then use Enigma with the rotors set to GKX to encrypt the message setting, which he might choose to be RTQ; which might <b>encrypt</b> <b>to</b> LLP. (Before May 1940, the encrypted message setting was repeated, but that makes no difference to Herivel's insight.) The operator would then turn his rotors to RTQ and encrypt the actual message. Thus, the preamble to the message would be the unencrypted ground setting (GKX), followed by the encrypted message setting (LLP). A receiving Enigma operator could use the information to recover the message setting and then decrypt the message.|$|E
50|$|Commercial games {{could be}} {{acquired}} via internet download (<b>encrypted</b> <b>to</b> the GP32's ID) or in a retail box. The retail boxes contained SmartMedia Cards with the games which were <b>encrypted</b> <b>to</b> run only from these cards (SMC ID). They could alternatively be downloaded from a Korean portal after submitting the GP32's ID, {{they were then}} <b>encrypted</b> <b>to</b> run only on that GP32. Downloading the games effectively reduced {{the cost to the}} consumer, who was no longer paying for the manufacture of the cartridge. Downloading a game online could range from US$10 to US$30.|$|R
50|$|Many {{such systems}} are <b>encrypted</b> <b>to</b> prevent eavesdroppers from {{listening}} in.|$|R
5000|$|Message is sent <b>encrypted</b> <b>to</b> {{the memory}} of the {{receiving}} device ...|$|R
50|$|On October 19, 2015, the {{intermediate}} certificates became cross-signed by IdenTrust, causing all certificates issued by Let's <b>Encrypt</b> <b>to</b> be trusted by all major browsers.|$|E
5000|$|... both {{occurrences of}} [...] "crypto" [...] {{line up with}} [...] "abcdea". The two {{instances}} will <b>encrypt</b> <b>to</b> the same ciphertext and the Kasiski examination will be effective.|$|E
5000|$|Similarly, in {{position}} 6, K encrypts to L. As the Enigma machine is self-reciprocal, {{this means that}} at the same position L would also <b>encrypt</b> <b>to</b> K. Knowing this, we can apply the argument once more to deduce a value for P(K, which might be: ...|$|E
50|$|Communication {{between two}} hosts using a network may be <b>encrypted</b> <b>to</b> {{maintain}} privacy.|$|R
30|$|Tunability: the {{algorithm}} is not tunable; a fixed {{number of bits}} need <b>to</b> be <b>encrypted</b> <b>to</b> guarantee confidentiality.|$|R
30|$|Encryption ratio: 20 % of {{the data}} is <b>encrypted</b> <b>to</b> achieve an {{acceptable}} level of visual degradation. However, only resolution and layer progressions are considered.|$|R
5000|$|... {{the first}} {{instance}} of [...] "crypto" [...] lines up with [...] "abcdef" [...] and the second instance lines up with [...] "cdefab". The two instances will <b>encrypt</b> <b>to</b> different ciphertexts and the Kasiski examination will reveal nothing. However, with a 5-character keyword [...] "abcde" [...] (5 divides 20): ...|$|E
50|$|To {{avoid these}} problems, {{practical}} RSA implementations typically embed {{some form of}} structured, randomized padding into the value m before encrypting it. This padding ensures that m does not fall into the range of insecure plaintexts, and that a given message, once padded, will <b>encrypt</b> <b>to</b> one {{of a large number}} of different possible ciphertexts.|$|E
50|$|Unlike the Playfair cipher, a four-square cipher {{will not}} show {{reversed}} ciphertext digraphs for reversed plaintext digraphs (e.g. the digraphs AB BA would <b>encrypt</b> <b>to</b> some pattern XY YX in Playfair, {{but not in}} four-square). This, of course, is only true if the two keywords are different. Another difference between four-square and Playfair which makes four-square a stronger encryption {{is the fact that}} double letter digraphs will occur in four-square ciphertext.|$|E
50|$|During the 2010 FIFA World Cup games, the {{channels}} France 2 and France 3 were <b>encrypted</b> <b>to</b> prevent watching the matches elsewhere than in France.|$|R
5000|$|To decrypt {{a message}} <b>encrypted</b> <b>to</b> , the {{receiver}} requires the private key, [...] from the PKG {{and the public}} value [...] The decryption procedure is as follows: ...|$|R
3000|$|..., an 1024 -bit {{message is}} <b>encrypted</b> <b>to</b> an 2048 -bit ciphertext. Under the above condition, {{the number of}} {{watermarked}} DCT coefficients in one ciphertext is at most [...]...|$|R
5000|$|... q {{is chosen}} {{this way to}} ensure the {{uniqueness}} of the ciphertext. If it is any smaller, more than one plaintext may <b>encrypt</b> <b>to</b> the same ciphertext. Since q is larger than the sum of every subset of w, no sums are congruent mod q and therefore none of the private key's sums will be equal. r must be coprime to q or else it will not have an [...] inverse mod q. The existence of the inverse of r is necessary so that decryption is possible.|$|E
5000|$|Sanborn gave The New York Times another clue in November 2014: {{the letters}} [...] "MZFPK", the 70th-74th letters in passage four, become [...] "CLOCK" [...] after decryption. The 74th letter is K {{in both the}} {{plaintext}} and ciphertext, meaning {{that it is possible}} for a character to <b>encrypt</b> <b>to</b> itself. This means it does not have a weakness, where a character could never be encrypted as itself, that was known to be inherent in the German Enigma machine. It is believed that the [...] "BERLINCLOCK" [...] plaintext may be a direct reference to the Berlin Clock.|$|E
5000|$|To counter this problem, cryptographers {{proposed}} {{the notion of}} [...] "randomized" [...] or probabilistic encryption. Under these schemes, a given plaintext can <b>encrypt</b> <b>to</b> one {{of a very large}} set of possible ciphertexts, chosen randomly during the encryption process. Under sufficiently strong security guarantees the attacks proposed above become infeasible, as the adversary will be unable to correlate any two encryptions of the same message, or correlate a message to its ciphertext, even given access to the public encryption key. This guarantee is known as semantic security or indistinguishability, and has several definitions depending on the assumed capabilities of the attacker (see semantic security).|$|E
40|$|Abstract:- In this paper, {{we propose}} an {{encryption}} algorithm <b>to</b> <b>encrypt</b> plaintext <b>to</b> cipher text. We apply the basic computing operations, e. g., inserting dummy symbols, rotating, transposition, shifting and complement, {{in the proposed}} algorithm <b>to</b> <b>encrypt</b> plaintext <b>to</b> cipher text. The cipher text contains the plaintext, relative data and tables of encryption and transmits through the network. Since the tables of cipher text are produced randomly, {{it is difficult to}} do cryptanalysis...|$|R
2500|$|Likewise, we {{can also}} observe that T <b>encrypts</b> <b>to</b> L at {{position}} 8. Using , we can deduce the steckered value for L as well using a similar argument, to get, say, ...|$|R
3000|$|Because the GM {{encryption}} {{scheme is}} a probabilistic encryption scheme, the same plaintext m_i can be <b>encrypted</b> <b>to</b> different ciphertexts E(m_i,r_i). Therefore, Bob does not discover {{the law of}} E(m_i,r_i); [...]...|$|R
50|$|Block ciphers {{traditionally}} {{work over}} a binary alphabet. That is, both the input and the output are binary strings, consisting of n zeroes and ones. In some situations, however, one {{may wish to}} have a block cipher that works over some other alphabet; for example, encrypting 16-digit credit card numbers {{in such a way}} that the ciphertext is also a 16-digit number might facilitate adding an encryption layer to legacy software. This is an example of format-preserving encryption. More generally, format-preserving encryption requires a keyed permutation on some finite language. This makes format-preserving encryption schemes a natural generalization of (tweakable) block ciphers. In contrast, traditional encryption schemes, such as CBC, are not permutations because the same plaintext can <b>encrypt</b> <b>to</b> multiple different ciphertexts, even when using a fixed key.|$|E
5000|$|Semantic {{security}} {{is not the}} only consideration. There are situations under which malleability may be desirable. The above homomorphic properties can be utilized by secure electronic voting systems. Consider a simple binary ("for" [...] or [...] "against") vote. Let m voters cast a vote of either 1 (for) or 0 (against). Each voter encrypts their choice before casting their vote. The election official takes the product of the m encrypted votes and then decrypts the result and obtains the value n, which is the sum of all the votes. The election official then knows that n people voted for and m-n people voted against. The role of the random r ensures that two equivalent votes will <b>encrypt</b> <b>to</b> the same value only with negligible likelihood, hence ensuring voter privacy.|$|E
50|$|For each {{transmitted}} message, {{the sending}} operator would follow a standard procedure. From September 1938, {{he would use}} an initial position to encrypt the indicator and send it in clear, followed by the message key that had been enciphered at that setting. If the ground setting (link=no) was GKX for example, he would then use Enigma with the rotors set to GKX to encrypt the message setting, which he might choose to be RTQ; which might <b>encrypt</b> <b>to</b> LLP. (Before May 1940, the encrypted message setting was repeated, but that makes no difference to Herivel's insight.) The operator would then turn his rotors to RTQ and encrypt the actual message. Thus, the preamble to the message would be the unencrypted ground setting (GKX), followed by the encrypted message setting (LLP). A receiving Enigma operator could use the information to recover the message setting and then decrypt the message.|$|E
50|$|The {{music was}} encoded with the ePAC encoder from Lucent Technologies. Since it was {{directly}} downloaded to the user's PC, {{the music was}} <b>encrypted</b> <b>to</b> help protect it against Internet piracy.|$|R
5000|$|Likewise, we {{can also}} observe that T <b>encrypts</b> <b>to</b> L at {{position}} 8. Using , we can deduce the steckered value for L as well using a similar argument, to get, say, ...|$|R
5000|$|Below: Drop-like {{medallion}} {{from the}} Royal Tomb {{with the name}} of the architect, Mohammad Ali, and the word for architect (me'mar) <b>encrypted</b> <b>to</b> be read in the reverse reflection of a mirror.|$|R
5000|$|The German Enigma used a {{combination}} key {{to control the}} operation of the machine: rotor order, which rotors to install, which ring setting for each rotor, which initial setting for each rotor, and the settings of the stecker plugboard. The rotor settings were trigrams (for example, [...] "NJR") to indicate the way the operator was to set the machine. German Enigma operators were issued lists of these keys, one key for each day. For added security, however, each individual message was encrypted using an additional key modification. The operator randomly selected a trigram rotor setting for each message (for example, [...] "PDN"). This message key would be typed twice ("PDNPDN") and encrypted, using the daily key (all the rest of those settings). At this point each operator would reset his machine to the message key, which would then be used {{for the rest of the}} message. Because the configuration of the Enigma's rotor set changed with each depression of a key, the repetition would not be obvious in the ciphertext since the same plaintext letters would <b>encrypt</b> <b>to</b> different ciphertext letters. (For example, [...] "PDNPDN" [...] might become [...] "ZRSJVL.") ...|$|E
3000|$|<b>Encrypt</b> <b>To</b> send {{a message}} M∈ Z_q^k_ 2 × k_ 1, pick X←_R D^k_ 1 as a random value such that V^t· X= 0 [...] q (X can be {{generated}} by the pseudorandom generator. If the sender and the receiver are at the same local, X is deleted once the ciphertext is completed successfully).|$|E
3000|$|Very few {{works have}} been {{reported}} on the unpredictability of the encrypted part. Security of the selective encryption algorithm {{depends on how much}} and which parts of a message we have to <b>encrypt</b> <b>to</b> ensure that brute force on the encryption key space is easier than brute force attack on the plaintext itself. Otherwise, the attacker could bypass encryption and concentrate his effort on predicting the plaintext. It is hard to find an absolute measure for security. Instead, we define indirect measures that could approximate the security of a selective encryption algorithm. Examples of such measures are entropy, unicity distance guesswork, and [...]...|$|E
30|$|In the {{proposed}} scheme, plaintext documents are <b>encrypted</b> <b>to</b> ciphertext controlled by access policy {{before they are}} outsourced to CSC. Both CSC and adversary can not get the private information in those ciphertext.|$|R
3000|$|... ○ Client-to-server communication: Most data stores allow remote {{connections}} {{of users}} and applications so that stored {{data can be}} obtained. This data flow must also be <b>encrypted</b> <b>to</b> guarantee private and secure communication.|$|R
50|$|ElGamal {{encryption}} is probabilistic, {{meaning that}} a single plaintext can be <b>encrypted</b> <b>to</b> many possible ciphertexts, with the consequence that a general ElGamal encryption produces a 2:1 expansion in size from plaintext to ciphertext.|$|R
