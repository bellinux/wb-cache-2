111|159|Public
25|$|Before Microsoft {{added support}} for long filenames and creation/access time stamps, bytes 0x0C–0x15 of the <b>directory</b> <b>entry</b> {{were used by}} other {{operating}} systems to store additional metadata, most notably the operating systems of the Digital Research family stored file passwords, access rights, owner IDs, and file deletion data there. While Microsoft's newer extensions are not fully compatible with these extensions by default, most of them can coexist in third-party FAT implementations (at least on FAT12 and FAT16 volumes).|$|E
25|$|Several {{operating}} systems developed by Technical Systems Consultants (originally of West Lafayette Indiana, and later of Chapel Hill, North Carolina) used singly linked lists as file structures. A <b>directory</b> <b>entry</b> {{pointed to the}} first sector of a file, and succeeding portions of the file were located by traversing pointers. Systems using this technique included Flex (for the Motorola 6800 CPU), mini-Flex (same CPU), and Flex9 (for the Motorola 6809 CPU). A variant developed by TSC for and marketed by Smoke Signal Broadcasting in California, used doubly linked lists in the same manner.|$|E
2500|$|A {{checksum}} {{also allows}} verification {{of whether a}} long file name matches the 8.3 name; such a mismatch could occur if a file was deleted and re-created using DOS in the same directory position. The checksum is calculated using the algorithm below. (Note that pFCBName is a pointer to the name as it appears in a regular <b>directory</b> <b>entry,</b> i.e. the first eight characters are the filename, and the last three are the extension. The dot is implicit. Any unused space in the filename is padded with space characters (ASCII 0x20). For example, [...] "Readme.txt" [...] would be [...] "README␠␠TXT".) ...|$|E
25|$|Additionally, <b>directory</b> <b>entries</b> of deleted files will {{be marked}} 0xE5 since DOS 3.0. DOS 5.0 and higher {{will start to}} reuse these entries only when {{previously}} unused <b>directory</b> <b>entries</b> have been used up in {{the table and the}} system would otherwise have to expand the table itself.|$|R
5000|$|... {{an event}} {{interface}} that allows clients {{to determine when}} <b>directory</b> <b>entries</b> have been modified ...|$|R
5000|$|<b>Directory</b> <b>entries,</b> {{both in the}} Root Directory Region and in subdirectories, are of the {{following}} format: ...|$|R
2500|$|If a {{filename}} {{contains only}} lowercase letters, or {{is a combination}} of a lowercase basename with an uppercase extension, or vice versa; and has no special characters, and fits within the 8.3 limits, a VFAT entry is not created on Windows NT and later versions of Windows such as XP. Instead, two bits in byte 0x0C of the <b>directory</b> <b>entry</b> are used to indicate that the filename should be considered as entirely or partially lowercase. Specifically, bit 4 means lowercase extension and bit 3 lowercase basename, which allows for combinations such as [...] "example.TXT" [...] or [...] "HELLO.txt" [...] but not [...] "Mixed.txt". Few other operating systems support it. This creates a backwards-compatibility problem with older Windows versions (Windows 95 / 98 / 98 SE / ME) that see all-uppercase filenames if this extension has been used, and therefore can change the name of a file when it is transported between operating systems, such as on a USB flash drive. Current 2.6.x versions of Linux will recognize this extension when reading (source: kernel 2.6.18 /fs/fat/dir.c and fs/vfat/namei.c); the mount option shortname determines whether this feature is used when writing.|$|E
5000|$|The link utility is a Unix {{command line}} program {{that creates a}} hard link from an {{existing}} <b>directory</b> <b>entry</b> to a new <b>directory</b> <b>entry.</b> It does no more than call the link (...) system function. It does not perform error checking before attempting to create the link. It returns an exit status that indicates whether the link was created (0 if successful, >0 if an error occurred). Creating a link to a <b>directory</b> <b>entry</b> that is itself a directory requires elevated privileges.|$|E
5000|$|... #Caption: City <b>directory</b> <b>entry</b> for Joseph W. Postlewaite, 1859 ...|$|E
5000|$|Removal of the {{physical}} [...] "." [...] and [...] ".." [...] <b>directory</b> <b>entries</b> that appear in subdirectories ...|$|R
50|$|In a {{flat file}} system, {{there are no}} subdirectories, <b>directory</b> <b>entries</b> for all files are stored in a single directory.|$|R
50|$|The {{number of}} <b>directory</b> <b>entries</b> {{is equal to}} 2global depth, and the initial number of bucketsis equal to 2local depth.|$|R
5000|$|... #Caption: Memphis City <b>Directory</b> <b>entry</b> for Forrest's slave-trading business, 1855-1856 ...|$|E
5000|$|The central <b>directory</b> <b>entry</b> is an {{expanded}} {{form of the}} local header: ...|$|E
50|$|A <b>directory</b> <b>entry</b> (dentry) {{occupies}} 11 bytes, {{which consists}} of the following attributes.|$|E
2500|$|... 32-byte <b>directory</b> <b>entries,</b> {{both in the}} Root Directory Region and in subdirectories, are of the {{following}} format (see also 8.3 filename): ...|$|R
5000|$|After all {{the central}} <b>{{directory}}</b> <b>entries</b> comes {{the end of}} central directory (EOCD) record, which {{marks the end of}} the [...]ZIP file: ...|$|R
5000|$|The {{number of}} root <b>directory</b> <b>entries</b> {{available}} for FAT12 and FAT16 is determined when the volume is formatted, and {{is stored in}} a 16-bit field. For a given number [...] and sector size , the number [...] of root directory sectors is , and [...] is normally chosen to fill these sectors, i.e., [...] FAT12 and FAT16 media typically use 512 root <b>directory</b> <b>entries</b> on non-floppy media. Some third-party tools, like mkdosfs, allow the user to set this parameter.|$|R
50|$|VFAT, {{a variant}} of FAT with an {{extended}} directory format, was introduced in Windows 95 and Windows NT 3.5. It allowed mixed-case Unicode long filenames (LFNs) in addition to classic 8.3 names by using multiple 32-byte <b>directory</b> <b>entry</b> records for long filenames (in {{such a way that}} only one will be recognised by old 8.3 system software as a valid <b>directory</b> <b>entry).</b>|$|E
5000|$|This is {{an example}} of a simple <b>directory</b> <b>entry</b> with several attributes, {{represented}} as a record in LDIF: ...|$|E
50|$|If the {{undeletion}} program cannot detect clear {{signs of}} the above requirements not being met, it will restore the <b>directory</b> <b>entry</b> as being in use and mark all consecutive clusters, beginning with the one as recorded in the old <b>directory</b> <b>entry,</b> as used in the File Allocation Table. It is then up to the user to open the recovered file and to verify that it contains the complete data of the formerly deleted file.|$|E
3000|$|... lf may stream <b>directory</b> <b>entries</b> {{and does}} not require to include the code for {{printing}} them in a myriad of different ways, and [...]...|$|R
5000|$|The <b>directory</b> <b>entries</b> {{for the two}} {{partitioned}} {{data sets}} match - that is, the names are the same, {{and the number of}} entries are equal.|$|R
5000|$|This is {{an example}} of an LDIF record that modifies {{multiple}} single-valued attributes for two different <b>directory</b> <b>entries</b> (this format is used by Microsoft's LDIFDE tool): ...|$|R
5000|$|Enabling PSE (by setting bit 4, PSE, of {{the system}} {{register}} [...] ) changes this scheme. The entries in the page directory have an additional flag, in bit 7, named [...] (for Page Size). This flag was ignored without PSE, but now, the page <b>directory</b> <b>entry</b> with PS set to 1 does not point to a page table, but to a single large 4 MiB page. The page <b>directory</b> <b>entry</b> with PS set to 0 behaves as without PSE.|$|E
50|$|The file {{is divided}} into 5 sections: Start, Global, <b>Directory</b> <b>Entry,</b> Parameter Data, and Terminate {{indicated}} by the characters S, G, D, P, or T in column 73. The characteristics and geometric information for an entity is split between two sections; one in a two record, fixed-length format (the <b>Directory</b> <b>Entry,</b> or DE Section), {{the other in a}} multiple record, comma delimited format (the Parameter Data, or PD Section), {{as can be seen in}} a more human-readable representation of the file.|$|E
50|$|Normal {{files are}} {{progressively}} indexed. Single-block files (under 513 bytes) have no index block; the <b>directory</b> <b>entry</b> points {{directly to the}} block of file data. Files with between 2 and 256 blocks (513 bytes to 128 kB) of data have a single index block, to which the <b>directory</b> <b>entry</b> points, which contains a list of up to 256 data block addresses. Larger files have a master index block containing a list of up to 256 index block addresses. When the Apple IIgs was introduced, a new storage format was introduced for files with two forks, as was typical for IIgs system and program files; the <b>directory</b> <b>entry</b> points to an informational block that tells the computer the storage format of the two forks. These files cannot be read or written natively by ProDOS 8, though the volume itself remains compatible.|$|E
30|$|The {{central part}} of the system is a file system {{exported}} through a novel file system protocol, ZX [8]. Such protocol is used to export not just regular files, but also services exported as files (as in Plan 9 [9]). File system services in Clive are split into finders and file tree servers. A finder accepts find requests to find <b>directory</b> <b>entries</b> for files of interest. A file tree implements operations on (found) <b>directory</b> <b>entries.</b> This will be seen in file processing examples discussed later.|$|R
40|$|LDAP (Lightweight Directory Access Protocol) {{directories}} {{have recently}} proliferated {{with the growth}} of the Internet, and are being used {{in a wide variety of}} network-based applications to store data such as personal profiles, address books, and network and service policies. These systems provide a means for managing heterogeneity in a way far superior to what conventional relational or object-oriented databases can offer. To achieve fast performance for declarative query answering, it is desirable to use client caching based on semantic information (instead of individual <b>directory</b> <b>entries).</b> We formally consider the problem of reusing cached LDAP <b>directory</b> <b>entries</b> for answering declarative LDAP queries. A semantic LDAP directory cache contains <b>directory</b> <b>entries,</b> which are semantically described by a set of query templates. We show that, for conjunctive queries and LDAP directory caches with positive templates, the complexity of cache-answerability is NP-complete in the size of the query [...] . ...|$|R
50|$|May 2013: OrangeFS {{available}} on AWS marketplace. OrangeFS 2.9 Beta Version available, adding two new security modes and allowing distribution of <b>directory</b> <b>entries</b> among multiple data servers.|$|R
50|$|Examining {{the initial}} {{case of an}} {{extendible}} hash structure, if each <b>directory</b> <b>entry</b> points to one bucket, then the local depth should be equal to the global depth.|$|E
5000|$|Directory—the {{directory}} {{provides the}} entry positions {{to the fields}} in the record, along with the field tags. A <b>directory</b> <b>entry</b> has four parts and cannot exceed nine characters in length: ...|$|E
50|$|Directory {{entries are}} stored {{following}} {{the location of}} the root <b>directory</b> <b>entry,</b> where evaluation of filenames is begun. Both directories and files are stored as extents, which are sequential series of sectors.|$|E
5000|$|SAVENAME (PTS-DOS only) : Specifies, if {{the first}} {{character}} of deleted files should be stored in the reserved area of <b>directory</b> <b>entries</b> in the FAT file system.|$|R
50|$|November 2014: OrangeFS 2.9.0 {{released}} adding {{support for}} distributed metadata for <b>directory</b> <b>entries</b> using an extensible hashing algorithm modeled after giga+, posix backward compatible capability base security supporting multiple modes.|$|R
5000|$|ACCDATE (MS-DOS 7.0 {{and higher}} only, ignored under DR-DOS 7.02 and higher): Configures which drives should store file access date stamps in the {{reserved}} area of <b>directory</b> <b>entries</b> in FAT file systems.|$|R
