35|733|Public
50|$|DCS {{systems can}} {{normally}} also support such as Foundation Fieldbus, profibus, HART, Modbus, PC Link and other digital communication bus that carries not only {{input and output}} signals but also advanced messages such as <b>error</b> <b>diagnostics</b> and status signals.|$|E
50|$|Left corner parsers use LR {{bottom-up}} {{techniques for}} recognizing the left end of alternative grammar rules. When the alternatives have been narrowed {{down to a}} single possible rule, the parser then switches to top-down LL(1) techniques for parsing {{the rest of that}} rule. LC parsers have smaller parse tables than LALR parsers and better <b>error</b> <b>diagnostics.</b> There are no widely used generators for deterministic LC parsers. Multiple-parse LC parsers are helpful with human languages with very large grammars.|$|E
50|$|In summer 1965, four {{undergraduate}} {{students of the}} University of Waterloo, Gus German, James G. MitchellRichard Shirley and Robert Zarnke, led by Peter Shantz, developed a Fortran compiler for the IBM 7040 computer called WATFOR. Its objectives were fast compilation speed and effective <b>error</b> <b>diagnostics</b> at both compile and execution time. It {{eliminates the need for}} a separate linking step and, as a result, FORTRAN programs which contain no syntax errors are placed into immediate execution. Professor J. Wesley Graham (1932-1999) provided leadership throughout the project.|$|E
5000|$|The {{server-based}} diagnostics {{that result}} with an XML/JSON solution if incorrect data is attempted to be inserted (e.g., range check or regular-expression pattern violations) are cryptic to the end-user: {{to convey the}} error accurately, one would, at the least, need to associate a detailed and user-friendly <b>error</b> <b>diagnostic</b> with each attribute.|$|R
40|$|Introduction: <b>Diagnostic</b> <b>errors</b> have {{a natural}} complexity. Medical diagnoses make up a large {{proportion}} of all medical errors and cause much suffering and harm. Compared to other types of <b>error,</b> <b>diagnostic</b> <b>errors</b> receive little attention-a major factor in continuity of unacceptable rates of <b>diagnostic</b> <b>error.</b> Case: A 55 -year-old woman presented to the emergency department (ED) complaining of bone pain which has been started a month ago and increased gradually in the upper right thigh. Following the emergency evaluation she was sent home with pain medication. On the second visit, a femur neck fracture was seen in the x-ray. She underwent hemiarthroplasty and was discharged. Over several weeks she was reevaluated by many Physicians, because of her worsening pain. In the third visit after the surgery, her x-ray showed bone destruction and following bone biopsy, malignant paraganglioma was diagnosed. Discussion and solution: In all cases in which patient comes to us with skeletal pain, getting a comprehensive history and a full physical examination are prior to lab tests and x-rays. Bone metastasis which can develop severe pain and pathological fractures, is common in patients with malignant paraganglioma. Effective steps for <b>diagnostic</b> <b>error</b> prevention are: Considering the <b>diagnostic</b> <b>error</b> in the normal range of quality assurance surveillance and review, identifying the elements leading to <b>diagnostic</b> <b>errors</b> and getting feedback on the diagnoses Physicians make, in order to improve their skills. Conclusion: It is an every health system priority to identify, analyze, and prevent <b>diagnostic</b> <b>errors</b> in order to improve patient safet...|$|R
50|$|SQL Return Codes {{are used}} {{on a day-to-day basis}} for the {{diagnosis}} of programming failures as a result of SQL calls by DB2 computer programs. An important feature of DB2 programs is the error processing. The <b>error</b> <b>diagnostic</b> containing the SQL Return Code is held in the field SQLCODE within the DB2 SQLCA block.|$|R
50|$|An example {{web service}} {{operation}} in C for retrieving the lodging rate {{of a hotel}} given a number of guests can be declared in annotated form as//gsoap ns service namespace: tempuri//gsoap ns service style: document//gsoap ns service encoding: literalint ns__get_rate(char* hotel, int guests, float *rate);The last parameter of the function is always the service return value, which can be denoted as void for one-way operations and should be a struct/class to bundle multiple service return parameters. The function's int return value is used for <b>error</b> <b>diagnostics.</b>|$|E
40|$|We {{consider}} {{the problem of}} fault-tolerant quantum computation {{in the presence of}} slow <b>error</b> <b>diagnostics,</b> either caused by measurement latencies or slow decoding algorithms. Our scheme offers a few improvements over previously existing solutions, for instance it does not require active error correction and results in a reduced error-correction overhead when <b>error</b> <b>diagnostics</b> is much slower than the gate time. In addition, we adapt our protocol to cases where the underlying error correction strategy chooses the optimal correction amongst all Clifford gates instead of the usual Pauli gates. The resulting Clifford frame protocol is of independent interest as it can increase error thresholds and could find applications in other areas of quantum computation. Comment: 11 pages, 6 figures. Comments welcome! v 2 : Included version accepted to the Quantum journa...|$|E
40|$|Program {{language}} structures, translation, loading, execution, {{and storage}} allocation; compilation of simple expressions and statements; organization of compiler including compile-time and run-time symbol tables, lexical scan, syntax scan, object code generation, <b>error</b> <b>diagnostics,</b> object code optimization techniques, and overall design; use of compiler writing languages and bootstrapping. Prerequisite According {{to the course}} listing, the prerequisites are: CSC 4101 or equivalent. Credit will not be given for both this course and CSC 7001. Office Hour...|$|E
40|$|This {{cross-sectional}} survey explored paediatric physician perspectives regarding <b>diagnostic</b> <b>errors.</b> All paediatric {{consultants and}} specialist registrars in Ireland {{were invited to}} participate in this anonymous online survey. The response rate for the study was 54 % (n= 127). Respondents had a median of nine years clinical experience (IQR 4 - 20 years). A <b>diagnostic</b> <b>error</b> was reported at least monthly by 19 (15. 0 %) respondents. Consultants reported significantly less <b>diagnostic</b> <b>errors</b> compared to trainees (p value = 0. 01). Cognitive error was the top ranked contributing factor to <b>diagnostic</b> <b>error,</b> with incomplete history and examination considered to be the principal cognitive error. Seeking a second opinion and close follow-up of patients to ensure that the diagnosis is correct were the highest ranked clinician-based solutions to <b>diagnostic</b> <b>error.</b> Inadequate staffing levels and excessive workload were the most highly ranked system-related and situational factors. Increased access to and availability of consultants and experts was the most highly ranked system-based solution to <b>diagnostic</b> <b>error.</b> Conclusions: We found a low level of self-perceived <b>diagnostic</b> <b>error</b> in an experienced group of paediatricians, at variance with the literature and warranting further clarification. The results identify perceptions on the major cognitive, system-related and situational factors contributing to <b>diagnostic</b> <b>error</b> and also key preventative strategies...|$|R
5000|$|Extended {{error log}} {{to capture a}} series of <b>errors</b> for <b>diagnostic</b> {{purposes}} ...|$|R
50|$|An {{important}} feature of DB2 computer programs is error handling. The SQL communications area (SQLCA) structure was once used exclusively within a DB2 program to return error information to the application program after every SQL statement was executed. The primary, but not singularly useful, <b>error</b> <b>diagnostic</b> is held in the field SQLCODE within the SQLCA block.|$|R
40|$|AbstractThis paper {{describes}} the basic concepts of <b>error</b> <b>diagnostics</b> and an associated rule system whose application helps to identify potential hardware/software locations of errors which caused a failure observed while executing tests of embedded systems. Further on, an overview over the “Avionics Smoke Detection System” is given, where the main algorithms have been applied. The methods, techniques and tools described here {{rely on the}} preceding investigations performed with respect to signal flow and the observation of causal chains in distributed test benches during test suite executions. These results have been elaborated in the KATO project within the German aerospace research programme LUFO III...|$|E
40|$|This paper {{examines}} {{the adequacy of}} the augmented Solow model for explaining international variation in the standard of living and growth rates. Robust estimation and measurement <b>error</b> <b>diagnostics</b> are used to assess the model in a variety of dimensions. The main findings are that the speed of conditional convergence is highly uncertain, that technology parameters obtained from the augmented Solow model cannot be trusted, and that the model does not work well when attention is restricted to either the OECD or developing countries. Not only that, the equation for steady state human capital is rejected by the data. growth, development, convergence, human capital...|$|E
40|$|This {{research}} studies two related functions over e-Work networks, prognostics {{with respect to}} conflict and error (CE) prediction, and detection with respect to CE diagnostics. Traditional prognostics and diagnostics approaches face two challenges: (1) How to model a system for effective conflict and error prediction and detection (CEPD); (2) Centralized CEPD algorithms are difficult {{to develop and implement}} for large systems. An agent-based approach is developed to model systems and corresponding decentralized CEPD logic is proposed for prognostics and diagnostics. A preliminary case study with an e-Work network is applied to illustrate and validate the proposed methodology. Keywords: Conflict detection, e-Work, <b>error</b> <b>diagnostics,</b> prognostics...|$|E
40|$|<b>Diagnostic</b> <b>errors</b> {{are common}} and costly, but {{difficult}} to detect. “Trigger” tools have promise to facilitate detection, {{but have not}} been applied specifically for inpatient <b>diagnostic</b> <b>error.</b> We performed a scoping review to collate all individual “trigger” criteria {{that have been developed}} or validated that may indicate that an inpatient <b>diagnostic</b> <b>error</b> has occurred. We searched three databases and screened 8568 titles and abstracts to ultimately include 33 articles. We also developed a conceptual framework of <b>diagnostic</b> <b>error</b> outcomes using real clinical scenarios, and used it to categorize the extracted criteria. Of the multiple criteria we found related to inpatient <b>diagnostic</b> <b>error</b> and amenable to automated detection, the most common were death, transfer to a higher level of care, arrest or “code”, and prolonged length of hospital stay. Several others, such as abrupt stoppage of multiple medications or change in procedure, may also be useful. Validation for general adverse event detection was done in 15 studies, but only one performed validation for <b>diagnostic</b> <b>error</b> specifically. Automated detection was used in only two studies. These criteria may be useful for developing <b>diagnostic</b> <b>error</b> detection tools...|$|R
40|$|We {{combine the}} type error slicing and {{heuristics}} based approaches to type <b>error</b> <b>diagnostic</b> improvement {{within the context}} of type based security analysis on a let-polymorphic call by value lambda calculus extended with lists, pairs and the security specific constructs declassify and protect. We define and motivate four classes of heuristics that help diagnose inconsistencies among the constraints, and show their effect on a selection of security incorrect programs...|$|R
50|$|In telecommunications, {{asynchronous}} operation or asynchronous working {{is where a}} sequence of operations is executed such that the operations are executed out of time coincidence with any event. It can also be an operation that occurs without a regular or predictable time relationship to a specified event; e.g., the calling of an <b>error</b> <b>diagnostic</b> routine that may receive control {{at any time during}} the execution of a computer program.|$|R
40|$|The IBM-PC {{version of}} the Aircraft Noise Prediction Program (ANOPP) Propeller Analysis System (PAS) {{is a set of}} {{computational}} programs for predicting the aerodynamics, performance, and noise of propellers. The ANOPP-PAS is a subset of a larger version of ANOPP which can be executed on CDC or VAX computers. This manual provides a description of the IBM-PC {{version of the}} ANOPP-PAS and its prediction capabilities, and instructions on how to use the system on an IBM-XT or IBM-AT personal computer. Sections within the manual document installation, system design, ANOPP-PAS usage, data entry preprocessors, and ANOPP-PAS functional modules and procedures. Appendices to the manual include a glossary of ANOPP terms and information on <b>error</b> <b>diagnostics</b> and recovery techniques...|$|E
40|$|A {{cross-validation}} {{method is}} supplied to judge between various strategies in multipole refinement procedures. Its application enables straightforward detection {{of whether the}} refinement of additional parameters leads to an improvement in the model or an overfitting of the given data. For all tested data sets {{it was possible to}} prove that the multipole parameters of atoms in comparable chemical environments should be constrained to be identical. In an automated approach, this method additionally delivers parameter distributions of k different refinements. These distributions can be used for further <b>error</b> <b>diagnostics,</b> e. g. to detect erroneously defined parameters or incorrectly determined reflections. Visualization tools show the variation in the parameters. These different refinements also provide rough estimates for the standard deviation of topological parameters...|$|E
40|$|It {{is widely}} {{believed}} that formal verification can play {{an essential role in}} the design and development of highconfidence computer-based systems. While a number of powerful formal verification techniques exist, their acceptance in the industrial sector has been limited in part by a perceived lack of usability. Research related to improving usability has targeted various stages of formal verification, including writing more understandable and less error-prone specifications, visualizing system dynamics via graphical languages such as statecharts and message sequence charts, shortening verification time (efficiency is a usability issue too), and generating meaningful <b>error</b> <b>diagnostics.</b> In this paper, we are interested in the latter stages of model checking: manipulating and interpreting the output of a model checker, in particular its proof structure. Mode...|$|E
40|$|OBJECTIVE: To {{test the}} {{previously}} described misdiagnosis severity score (MSS) by comparing it with doctors' {{perceptions of the}} severity of <b>diagnostic</b> <b>errors.</b> METHODS: 14 scenarios of <b>diagnostic</b> <b>errors</b> were described on a questionnaire. These were given to 12 accident and emergency (A&E) consultants who were asked to indicate their assessment {{of the severity of}} the errors on a scale of 1 to 10. RESULTS: There was a highly significant concordance between doctors' rankings of the <b>diagnostic</b> <b>errors,</b> and between the MSS and the mean severity as assessed by the A&E consultants. CONCLUSIONS: It is reasonable to use the MSS as a measure of the severity of <b>diagnostic</b> <b>errors...</b>|$|R
40|$|Objectives—To {{describe}} the <b>diagnostic</b> <b>errors</b> occurring in a busy district general hospital accident and emergency (A&E) department over four years. Method—All <b>diagnostic</b> <b>errors</b> discovered by or notified to one A&E consultant were noted on a computerised database. Results— 953 <b>diagnostic</b> <b>errors</b> were noted in 934 patients. Altogether 79. 7 % were missed fractures. The most common reasons for error were misreading radio-graphs (77. 8 %) {{and failure to}} perform radiography (13. 4 %). The majority of errors were made by SHOs. Twenty two <b>diagnostic</b> <b>errors</b> resulted in complaints and legal actions and three patients who had a <b>diagnostic</b> <b>error</b> made, later died. Conclusions—Good clinical skills are es-sential. Most abnormalities missed on radiograph were not diYcult to diagnose. Junior doctors in A&E should receive spe-cific training and be tested {{on their ability to}} interpret radiographs correctly before being allowed to work unsupervised. (Emerg Med J 2001; 18 : 263 – 269...|$|R
50|$|In 2004, {{the total}} cost for {{information}} technology (IT) in health sector was estimated at approximately RMB 3.5 billions (US$423.5 million), which increased 25% compared with 2003. Most of the resources were committed to HIS. Construction of HIS has taken good effect, which changed the style of hospital management, offered tremendous opportunities to reduce clinical errors (e.g. medication <b>errors,</b> <b>diagnostic</b> <b>errors),</b> to support health care professionals (e.g. availability of timely, up-to-date patient information), {{to increase the efficiency}} of care (e.g. less waiting times for patients), or even {{to improve the quality of}} patient care. Today, HIS is not only a symbol of modern management, but also one of core competence of a hospital.|$|R
40|$|Approved {{for public}} release; {{distribution}} in unlimited. Compiler writers continue {{to search for}} a reliable method of syntactic error recovery. Spurious error reports and confusing diagnostics are common problems confronting the programmer. Innumerable error possibilities have made recovery design a frustrating task. This thesis implements a method of syntactic error recovery using recursive calls on the error recovery routine. Parsing is accomplished by traversing transition diagrams which are created from syntax charts. Key language symbols and dynamically generated recovery positions are used in restoring the parse. High-quality <b>error</b> <b>diagnostics</b> give a clear, accurate, and thorough description of each error, providing an excellent instructional software tool. Approach and implementation issues are discussed, and sample output listings are included. [URL] Commander, United States Nav...|$|E
40|$|In this paper, we {{show how}} to use GEAR, a game-based model checker, for property-driven {{functional}} healing of high-assurance systems. Designers and engineers can interactively investigate the winning strategies resulting from the games. These reveal in-depth information about {{the connection between the}} property, the system, and the proof, both as explanation in case of a successful proof, and as detailed, fine-granular <b>error</b> <b>diagnostics</b> in the case of failure. This results in an interactive use of the tool where debugging and redesign are carried out by playing against undesired behavior. The benefits of the approach are illustrated on a case study that concerns the design of the task-level control part of the processes of the ExoMars Rover [Kap 05], which wa...|$|E
40|$|Since version 1. 5, {{generics}} (parametric polymorphism) {{are part}} of the Java language. However, adding parametric polymorphism to a language that is built on inclusion polymorphism can be confusing to a novice programmer, because the typing rules are suddenly different and, in the case of Generic Java, quite complex. Indeed, the main Java compilers, Eclipse’s ejc compiler and Sun’s javac, do not even accept the same set of programs. Moreover, experience with these compilers shows that the error messages provided by them leave more than a little to be desired. To alleviate the latter problem, we describe how to adapt the type inference process of Java to obtain better <b>error</b> <b>diagnostics</b> for generic method invocations. The extension has been implemented into the Jastad extensible Java compiler. 1...|$|E
50|$|Provide <b>error</b> {{detection}} and <b>diagnostic</b> capability.|$|R
40|$|OBJECTIVE: In this article, we {{describe}} {{some of the}} cognitive and system-based sources of detection and interpretation <b>errors</b> in <b>diagnostic</b> radiology and discuss potential approaches to help reduce misdiagnoses. CONCLUSION: Every radiologist worries about missing a diagnosis or giving a false-positive reading. The retrospective error rate among radiologic examinations is approximately 30 %, with real-time errors in daily radiology practice averaging 3 - 5 %. Nearly 75 % of all medical malpractice claims against radiologists are related to <b>diagnostic</b> <b>errors.</b> As medical reimbursement trends downward, radiologists attempt to compensate by undertaking additional responsibilities to increase productivity. The increased workload, rising quality expectations, cognitive biases, and poor system factors all contribute to <b>diagnostic</b> <b>errors</b> in radiology. <b>Diagnostic</b> <b>errors</b> are underrecognized and underappreciated in radiology practice. This {{is due to the}} inability to obtain reliable national estimates of the impact, the difficulty in evaluating effectiveness of potential interventions, and the poor response to systemwide solutions. Most of our clinical work is executed through type 1 processes to minimize cost, anxiety, and delay; however, type 1 processes are also vulnerable to errors. Instead of trying to completely eliminate cognitive shortcuts that serve us well most of the time, becoming aware of common biases and using metacognitive strategies to mitigate the effects have the potential to create sustainable improvement in <b>diagnostic</b> <b>errors...</b>|$|R
40|$|Using the CKxD 3 -xBr {{molecules}} {{as examples}} the F and G sum rules are {{shown to be}} useful indicators of errors in gas-phase fundamental vibrational intensity data. The recently measured intensities for CH 3 Br, CH 2 DBr, and CHD 2 Br are shown to be nicely consistent with the sum rule restrictions although the CD 3 Br data apparently contain considerable experimental <b>error.</b> <b>Diagnostic</b> capabilities of these sum rules for localizing {{the sources of the}} experimental error are discussed. © 1978 American Institute of Physics...|$|R
40|$|NAMMU is a {{software}} package for modelling groundwater flow and transport in porous media in one, {{two and three}} dimensions. The package {{can be used to}} model steady-state and time-dependent behaviour, including unsaturated flow and the transport of heat and mass. An option is available for modelling radioactive decay and transport of chains of radionuclides. The software is based on an efficient implementation of the finite-element method that provides many options for modelling complex geological strata. This User Guide introduces the package using a number of realistic examples. It discusses the principles of modelling and gives practical advice on how best to use the package. The input language is summarized, and the output from the program is described, including the <b>error</b> <b>diagnostics.</b> i Copyright and Ownership of NAMM...|$|E
40|$|Abstract- A {{commonly}} appearing {{problem in}} most of the econometric data research is the correlated input variables or problem of multicollinearity. This problem arises due to the choice of several input variables which are having high correlation among themselves and it leads to the less précised estimates and huge forecasting errors. This problem can be identified by several approaches like variance inflation factor, correlation matrix etc and it can be removed efficiently by removing or changing the set of input variables in the data. In the current publication, a stepwise procedure is adopted to remove the variables without compromising on model efficiency. The efficiency of the model can be measured or compared by using <b>error</b> <b>diagnostics</b> like RMSE, AIC, BIC etc. For empirical investigation, we used agriculture production of Rice for the past 15 years in the country...|$|E
40|$|This {{technical}} paper presents an online Java compilation plug-in for the Moodle Learning Management System. The system {{allows students to}} compile and execute Java programs directly through the Moodle interface {{so that they can}} concentrate on the programming concepts rather than learning to operate new technologies. The system provides students with <b>error</b> <b>diagnostics</b> on compilation and execution so that they can more easily resolve their programming problems. Teachers can view compilation and execution data in order to analyze students’ programming performance, enabling them to not only provide more appropriate feedback but also to understand where student misconceptions occur. The technical aspects of the system are discussed in detail to support implementation and development by others. The rationale for the design in terms of providing a secure and cognitively efficient means of teaching computing programming is articulated. 10 page(s...|$|E
40|$|SIMPLE is a translator. {{writing system}} {{composed}} of a simple precedence syntax analyzer and a semantic constructor and is implemented in PL/I. It provides an <b>error</b> <b>diagnostic</b> and recovery mechanism for any system implemented using SIMPLE. The removal of precedence conflicts is discussed in detail with several examples. The utilization of SIMPLE is illustrated by defining a command language meta system {{for the construction of}} scanners {{for a wide variety of}} command oriented languages. This meta system is illustrated by defining commands from several text editors...|$|R
50|$|A {{systematic}} review {{of studies of}} the autopsy calculated that in about 25% of autopsies a major <b>diagnostic</b> <b>error</b> will be revealed. However, this rate has decreased over time and the study projects that in a contemporary US institution, 8.4% to 24.4% of autopsies will detect major <b>diagnostic</b> <b>errors.</b>|$|R
40|$|<b>Diagnostic</b> <b>errors</b> {{are major}} {{contributors}} to harmful patient outcomes, yet they remain a relatively understudied and unmeasured area of patient safety. Although they {{are estimated to}} affect about 12 million Americans each year in ambulatory care settings alone, both the conceptual and pragmatic scientific foundation for their measurement is under-developed. Health care organizations {{do not have the}} tools and strategies to measure diagnostic safety and most have not integrated <b>diagnostic</b> <b>error</b> into their existing patient safety programs. Further progress toward reducing <b>diagnostic</b> <b>errors</b> will hinge on our ability to overcome measurement-relate...|$|R
