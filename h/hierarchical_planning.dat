235|294|Public
50|$|A <b>hierarchical</b> <b>planning</b> {{approach}} was adopted for the Gulf of Aqaba, whereby their components were evaluated and subdivided into zones, cities and centers. In accordance with this approach, the Gulf of Aqaba zone was subdivided into four cities: Taba, Nuweiba, Dahab and Sharm El Sheikh. Sharm El Sheikh {{city has been}} subdivided into five homogeneous centers, namely Nabq, Ras Nusrani, Naama Bay, Umm Sid and Sharm El Maya.|$|E
40|$|<b>Hierarchical</b> <b>planning</b> {{systems have}} become popular for {{multilevel}} decision problems. After reviewing {{the concept of}} <b>hierarchical</b> <b>planning</b> and citing some examples, the authors describe a method for analytic evaluation of a <b>hierarchical</b> <b>planning</b> system. They show that multilevel decision problems can be nicely modeled as multistage stochastic programs. Then any <b>hierarchical</b> <b>planning</b> system can be measured against the yardstick of optimality in this stochastic program. They demonstrate this approach on a hierarchical system that can {{be shown to be}} asymptotically optimal for a job shop design/scheduling problem...|$|E
40|$|A novel {{method for}} {{communicating}} commands in <b>hierarchical</b> <b>planning</b> control is presented. This new method {{can be used}} to guarantee that plans created will be optimal within and across the planning graphs throughout the hierarchy. Boundary conditions are specified so that optimality is guaranteed. Specific <b>hierarchical</b> <b>planning</b> examples are given for off-road autonomous ground vehicles...|$|E
40|$|Many {{techniques}} {{have been described}} for viewing and exploring large information spaces. Often times these large data sets are represented in some hierarchical form. It is presumable that the same techniques that are effective for viewing general hierarchical structures would also be apt at displaying the <b>Hierarchical</b> <b>Plans</b> generated by many Artificial Intelligence Planning Systems. By surveying the current techniques available for visualizing general hierarchical information structures, hopefully a foundation will be laid for deriving equally effective techniques for the visualization of <b>hierarchical</b> <b>plans</b> and possibly plan search spaces...|$|R
40|$|We have {{developed}} a domain-independent systematic methodology for plan merging at the various levels of plan abstraction. This method manifests itself in the <b>hierarchical</b> <b>plan</b> graph where each level contains a complete, partially merged plan. The principle advantage {{of this approach is}} that, once external interactions between nodes on a given level have been established, the continued merging of the plan fragments in one node can take place independently of plan fragments in other nodes on that level. This provides a decomposition or divide-andconquer approach to plan merging. Another advantage to this decomposition approach is that replanning effort is minimized {{in the presence of the}} selection of alternative actions at some level of the <b>hierarchical</b> <b>plan</b> graph. Only those plan fragments which are in the same branch as the alternative selection need be considered for replannmg. Also, an algorithm ts proposed which takes a bilateral approach to breaking cyclic dependencies between nodes in the <b>hierarchical</b> <b>plan</b> graph. We demonstrate the utility of this <b>hierarchical</b> approach to <b>plan</b> merging through examples in the process planning domain. ...|$|R
40|$|Abstract. We present LUiGi-H a {{goal-driven}} autonomy (GDA) agent. Like other GDA agents it introspectively reasons {{about its}} own expec-tations to formulate new goals. Unlike other GDA agents, LUiGi-H uses cases consisting of <b>hierarchical</b> <b>plans</b> and semantic annotations of the ex-pectations of those plans. Expectations indicate conditions {{that must be}} true when parts of the plan are executed. Using an ontology, semantic an-notations are defined via inferred facts enabling LUiGi-H to reason with GDA elements {{at different levels of}} abstraction. We compared LUiGi-H against an ablated version, LUiGi, that uses non-hierarchal cases. Both agents have access to the same base-level (i. e. non-hierarchical plans), while only LUiGi-H makes use of <b>hierarchical</b> <b>plans.</b> In our experiments, LUiGi-H outperforms LUiGi. ...|$|R
40|$|The target this {{document}} {{is to show}} the process of Decisions Make in the different stages of the SN/CM, {{from the point of}} view of a structure Decentralized vs. Centralized (different grades). It’s obviously a simplification and there are many clarifies that they have to see with the type SN/C, where they have to see his different Stages and Hierarchic Levels. In the SN/C it’s difficult to detect and to transmit the Information that it finds dispersed and fragmented that goes from the Supplier of raw material up to the final consumer. For which it tries to study in depth the Methodologies of Modeling in the <b>Hierarchical</b> <b>Planning</b> of the SN/CM and in particular to propose a Preliminary Methodology for the Supply Chain <b>Hierarchical</b> <b>Planning</b> in the Uncertainty Context. More specifically, it: 1. considered decisional visions in the <b>Hierarchical</b> <b>Planning</b> of the Supply Network/Chain 2. performed a literature review of the uncertainty in the Supply Chain 3. studied sources of uncertainty along the Supply Chain 4. took into consideration models of classification for the <b>Hierarchical</b> <b>Planning</b> in the Supply Network/Chain under uncertainty 5. designed a preliminary methodology for the <b>Hierarchical</b> <b>Planning</b> of the Supply Network/Chain...|$|E
40|$|In <b>hierarchical</b> <b>planning,</b> {{landmarks}} are abstract tasks the {{decomposition of}} which are mandatory when {{trying to find a}} solution to a given problem. In this paper, we present novel domain-independent strategies that exploit landmark information to speed up the planning process. The empirical evaluation shows that the landmark-aware strategies outperform established search strategies for <b>hierarchical</b> <b>planning.</b> ...|$|E
40|$|The {{methodology}} of <b>hierarchical</b> <b>planning</b> and control in systems with network representation of technological processes and limited resources is considered. ??????????? ??????????? ?????????????? ???????????? ? ?????????? ? ????????, ??????? ??????? ????????????? ??????????????? ????????? ? ???????????? ???????...|$|E
40|$|Given a <b>hierarchical</b> <b>plan</b> (or schedule) with {{uncertain}} task times, {{we propose}} a deterministic polynomial (time and memory) algorithm for estimating {{the probability that}} its meets a deadline, or, alternately, that its makespan {{is less than a}} given duration. Approximation is needed as it is known that this problem is NP-hard even for sequential plans (just, a sum of random variables). In addition, we show two new complexity results: (1) Counting the number of events that do not cross deadline is #P-hard; (2) Computing the expected makespan of a <b>hierarchical</b> <b>plan</b> is NP-hard. For the proposed approximation algorithm, we establish formal approximation bounds and show that the time and memory complexities grow polynomially with the required accuracy, the number of nodes in the plan, and with the size of the support of the random variables that represent the durations of the primitive tasks. We examine these approximation bounds empirically and demonstrate, using task networks taken from the literature, how our scheme outperforms sampling techniques and exact computation in terms of accuracy and run-time. As the empirical data shows much better error bounds than guaranteed, we also suggest a method for tightening the bounds in some cases. Comment: A jornal version of an IJCAI- 2015 paper: "Estimating the Probability of Meeting a Deadline in <b>Hierarchical</b> <b>Plans...</b>|$|R
40|$|Human-computer {{collaboration}} {{provides a}} practical and useful application for plan recognition techniques. We describe a plan recognition algorithm which is tractable {{by virtue of}} exploiting properties of the collaborative setting, namely: the focus of attention, the use of partially elaborated <b>hierarchical</b> <b>plans,</b> {{and the possibility of}} asking for clarification. We demonstrat...|$|R
40|$|SummaryPlanning allows {{actions to}} be {{structured}} {{in pursuit of}} a future goal. However, in natural environments, planning over multiple possible future states incurs prohibitive computational costs. To represent plans efficiently, states can be clustered hierarchically into “contexts”. For example, representing a journey through a subway network as a succession of individual states (stations) is more costly than encoding a sequence of contexts (lines) and context switches (line changes). Here, using functional brain imaging, we asked humans to perform a planning task in a virtual subway network. Behavioral analyses revealed that humans executed a hierarchically organized plan. Brain activity in the dorsomedial prefrontal cortex and premotor cortex scaled with the cost of <b>hierarchical</b> <b>plan</b> representation and unique neural signals in these regions signaled contexts and context switches. These results suggest that humans represent <b>hierarchical</b> <b>plans</b> using a network of caudal prefrontal structures. Video Abstrac...|$|R
40|$|International audienceReachability {{analysis}} {{is a crucial}} part of the heuristic computation for many state of the art classical and temporal planners. In this paper, we study the difficulty that arises in assessing the reachability of actions in planning problems containing sets of interdependent actions, notably including problems with required concur-rency as well as <b>hierarchical</b> <b>planning</b> problems. We show the limitation of state-of-the-art techniques and propose a new method suitable for both temporal and <b>hierarchical</b> <b>planning</b> problems. Our proposal is evaluated on FAPE, a constraint-based temporal planner...|$|E
40|$|The {{improved}} {{method for}} <b>hierarchical</b> <b>planning</b> is proposed. Efficiency increasing of planning {{is achieved by}} physical links of processor?s compute node and ability to support duplex communication. ????????? ??????????????????? ?????? ?????????????? ????????????. ????????? ????????????? ???????????? ??????????? ?? ???? ?????????? ??????? ????? ? ??????????? ??????????????? ???? ?, ??????????? ????????? ??????????? ?????? ???????? ??????????...|$|E
40|$|A problem domain can be {{represented}} as a hierarchy of abstraction spaces in which successively finer levels of detail are introduced. The problem solver ABSTRIPS, a modification of STRIPS, can define an abstraction space hierarchy from the STRIPS representation of a problem domain, and it can utilize the hierarchy in solving problems. Examples of the system's performance are presented that demonstrate the significant increases in problem-solving power that this approach provides. Then some further Implications of the <b>hierarchical</b> <b>planning</b> approach are explored. Key Words: Problem solving, heuristic search, representation, abstraction space, robot planning, <b>hierarchical</b> <b>planning...</b>|$|E
40|$|As agents with {{increasingly}} complex plans are deployed in dynamic, resource-constrained, shared environments for accomplishing {{a variety of}} tasks, the problem of coordinating them assumes greater significance. Various agent plans might conflict with respect to resources, services, and states of the world. Besides obvious scalability issues, it might be wasteful and sometimes myopic to coordinate all possible agent behaviors. In this paper, we describe the integration of a multilevel plan coordination system, a reactive <b>hierarchical</b> <b>plan</b> execution system, and a graphical user interface, which form a system capable of coordinating and caching for later reuse the <b>hierarchical</b> <b>plans</b> of agents in a multiagent domain. We have layerd our intregrated system on tof of the Control of Agent-Based Systems (CoABS) Grid, a scalable, distributed network infrastructure that enables heterogeneous agents to interoperate in dynamic, mixed-initiative teams with human users...|$|R
40|$|Early {{views of}} Natural Language il~slr~tclio~s {{corresponded to the}} early views of plates: in-structions were {{interpreted}} as speci~’ing nodes of a <b>hierarchical</b> <b>plan</b> that, when completely expanded (instructions having been recognized as only being partial specifications of activity), acts as a control structure guiding the behavior of an agent [...] This view, for example, enable...|$|R
40|$|Interacting {{agents that}} {{interleave}} planning, plan coordination, and <b>plan</b> execution for <b>hierarchical</b> <b>plans</b> (e. g. HTNs or procedures for PRS) should reason about abstract plans and their concurrent execution {{before they are}} fully refined. Poor decisions made at abstract levels can lead to costly backtracking or even failure. We claim that better decisions require information at abstract levels that summarizes the preconditions and effects that must or may apply when a plan is refined. Here we formally characterize concurrent <b>hierarchical</b> <b>plans</b> and a method for deriving summary information for them, and we illustrate how summary conditions {{can be used to}} coordinate the concurrent interactions of plans at different levels of abstraction. The properties of summary conditions and rules determining what interactions can or might hold among asynchronously executing plans are proven to support the construction of sound and complete coordination mechanisms for concurrent hier [...] ...|$|R
40|$|Project {{management}} {{is a business}} process for successfully delivering one-of-a kind products and services under real-world time and resource constraints. Developing a project plan, a crucial element of project management, is a difficult task that requires significant experience and expertise. Interestingly, artificial intelligence researchers have developed both mixed-initiative and automated <b>hierarchical</b> <b>planning</b> systems for reducing planning effort and increasing plan evaluation measures. However, they have thus far not been used in project planning, {{in part because the}} relationship between project planning and <b>hierarchical</b> <b>planning</b> has not been established. In this paper, we identify this relationship and explain how project planning representations called work breakdown structures (WBS) are similar to plan representations employed by hierarchical planners. We exploit this similarity and apply well-known <b>hierarchical</b> <b>planning</b> techniques, including an integrated (case-based) plan retrieval module, to assist a project planner efficiently create WBSs. Our approach uses stored episodes (i. e., cases) of previous project planning experiences to support the development of new plans. We present an architecture for knowledgebased project planning system that implements this approach. ...|$|E
40|$|Goal-driven {{autonomy}} (GDA) agents reason about goals while introspectively examining {{if their}} {{course of action}} matches their expectations. Many GDA agents adopt a <b>hierarchical</b> <b>planning</b> model to generate plans but limit reasoning with expec-tations to individual actions or projecting the ex-pected state. In this paper we present a relaxation of this limitation. Taking advantage of <b>hierarchical</b> <b>planning</b> principles, our GDA agent elicits expec-tations that not only validate the next action but the overall plan trajectory without requiring validation against the complete state. We report on (1) a for-malization of GDA’s expectations that covers tra-jectories, (2) an implementation of these ideas and (3) benchmarking on two domains used in the GDA literature. ...|$|E
40|$|We were {{especially}} impressed with your recent {{work on the}} Godel planning system, and would welcome a talk focused on those particular issues. … Invitation from Paul Bello Shivashankar, Alford, Kuter, & Nau. The Godel planning system: A more perfect union of domain-independent and <b>hierarchical</b> <b>planning.</b> IJCAI, 2013. What’s a Godel? What’s a planning system? 3 The audience won’t understand Godel unless I explain the “big picture” … We {{were especially}} impressed with your recent work on the Godel planning system, and would welcome a talk focused on those particular issues. … Shivashankar, Alford, Kuter, & Nau. The Godel planning system: A more perfect union of domain-independent and <b>hierarchical</b> <b>planning.</b> IJCAI, 2013. Invitation from Paul Bello What’s...|$|E
40|$|Unexpected {{events in}} <b>hierarchical</b> {{production}} <b>planning,</b> such as rush orders, labor problems, lack of {{availability of materials}} and faulty machines have to be managed efficiently because they represent a risk for business continuity, based on their impact and duration. The use of inter-enterprise architecture offers multiple benefits for collaborative networks, including: business strategy and information technology alignment, joint process integration and synchronization, supply chain cost reduction, risk and redundancy minimization and customer services improvement. Therefore, the use of inter-enterprise architecture {{to address the problem}} of unexpected events in <b>hierarchical</b> production <b>planning</b> supporting operational risk management is proposed. This paper presents a model for inter-enterprise architecture that addresses the problem of handling unexpected events in <b>hierarchical</b> production <b>planning</b> and how the inter-enterprise framework is embedded into the model...|$|R
40|$|We {{present an}} overall {{planning}} {{system in which}} specifications {{can be described in}} terms of events and states. The underlying feature of this system is temporal logic, and its expressive power alloys one to deal with simultaneous actions and interacting actions. Moreover, one can represent both goal-oriented positive constraints and prevention-oriented negative constraints. The planning system can generate <b>hierarchical</b> <b>plans</b> and the overall model is capable of handling interacting agents. <br /...|$|R
40|$|Part 1 : Risks in Collaborative NetworksInternational audienceUnexpected {{events in}} <b>hierarchical</b> {{production}} <b>planning,</b> such as rush orders, labor problems, lack of {{availability of materials}} and faulty machines have to be managed efficiently because they represent a risk for business continuity, based on their impact and duration. The use of inter-enterprise architecture offers multiple benefits for collaborative networks, including: business strategy and information technology alignment, joint process integration and synchronization, supply chain cost reduction, risk and redundancy minimization and customer services improvement. Therefore, the use of inter-enterprise architecture {{to address the problem}} of unexpected events in <b>hierarchical</b> production <b>planning</b> supporting operational risk management is proposed. This paper presents a model for inter-enterprise architecture that addresses the problem of handling unexpected events in <b>hierarchical</b> production <b>planning</b> and how the inter-enterprise framework is embedded into the model...|$|R
40|$|The {{illusion}} that reactive and <b>hierarchical</b> <b>planning</b> methods {{are at odds}} with each other needs to be dropped. By exploiting each method's strengths, a synthesis of hierarchical and reactive paradigms can yield robust, flexible, and generalizable navigation. Psychological and neuroscientific studies support this claim...|$|E
40|$|AI {{planning}} research typically {{assumes that}} complete action models are given. On the other hand, popular approaches in reinforcement learning such as Q-learning completely eschew models and planning. Neither {{of these approaches}} is satisfactory to achieve robust human-level AI that includes planning and learning in rich structured domains. In this paper, we introduce the idea of planning with partial models. While complete action models may be exponentially large, some domains may still have polynomial size partial models which are adequate for <b>hierarchical</b> <b>planning.</b> We describe algorithms for planning with partial models {{in the context of}} serializable domains, and for learning them from observation. Empirically, we demonstrate the effectiveness of partial models for learning and <b>hierarchical</b> <b>planning</b> in versions of the taxi domain. ...|$|E
40|$|High-level actions (HLAs) lie at {{the heart}} of <b>hierarchical</b> <b>planning.</b> Typically, an HLA admits {{multiple}} refinements into primitive action sequences. Correct descriptions of the effects of HLAs may be essential to their effective use, yet the literature is mostly silent. We propose an angelic seman-tics for HLAs, the key concept of which is the set of states reachable by some refinement of a high-level plan, represent-ing uncertainty that will ultimately be resolved in the plan-ning agent’s own best interest. We describe upper and lower approximations to these reachable sets, and show that the re-sulting definition of a high-level solution automatically sat-isfies the upward and downward refinement properties. We define a STRIPS-like notation for such descriptions. A sound and complete <b>hierarchical</b> <b>planning</b> algorithm is given and its computational benefits are demonstrated...|$|E
50|$|Bonnie Meyer {{and others}} {{tried to use}} {{organization}} {{as a measure of}} reading ease. While this did not result in a formula, they showed that people read faster and retain more when the text is organized in topics. She found that a visible plan for presenting content greatly helps readers to assess a text. A <b>hierarchical</b> <b>plan</b> shows how the parts of the text are related. It also aids the reader in blending new information into existing knowledge structures.|$|R
40|$|This paper proposes an {{integrated}} optimization model of aggregate production planning (APP), family disaggregation planning, and family scheduling problems in <b>hierarchical</b> production <b>planning</b> (HPP) systems considering sequence-dependent family setup times. The model obtains the optimal production plan for each product type and product family in each period, {{together with the}} globally optimal production sequence of product families in all planning periods. The proposed model is tested with randomly generated experimental data consistent with what is prevalent in the manufacturing industry and its results are {{compared with those of}} the traditional HPP models. Our results show that the integrated model realizes greater cost savings. Production <b>planning</b> <b>Hierarchical</b> production <b>planning</b> Aggregate production planning Sequence-dependent family setup time Global optimization...|$|R
40|$|We present {{our work}} on using statistical, corpus-based machine {{learning}} techniques to simultaneously recognize an agent’s current goal schemas {{at various levels}} of a <b>hierarchical</b> <b>plan.</b> Our recognizer {{is based on a}} novel type of graphical model, a Cascading Hidden Markov Model, which allows the algorithm to do exact inference and make predictions at each level of the hierarchy in time quadratic to the number of possible goal schemas. We also report results of our recognizer’s performance on a plan corpus...|$|R
40|$|This paper gives {{a general}} {{framework}} which {{allows one to}} study various hierarchical structures of an organization. It provides a unified view of <b>hierarchical</b> <b>planning,</b> principal-agent relationships, and hierarchical negotiations. The main idea is to describe an organization as a superposition of interfering individual decision processes resulting {{in a pair of}} functional equations. Diverse specifications of these equations allow one to characterize the above mentioned hierarchical phenomena as well as to describe their interior structure. As an example, the equations can be used to differentiate between diverse kind of <b>hierarchical</b> <b>planning</b> or between team or non-team situations within hierarchical bargaining. Since management can be considered as a planning and leadership activity to control the interrelationship of individual decision processes, the paper provides {{a better understanding of the}} general structure of the management process...|$|E
40|$|The way {{in which}} {{knowledge}} about design {{can be incorporated into}} knowledge-based design systems is discussed and demonstrated within the framework of an overall logical/ linguistic model of the design process. The technique of <b>hierarchical</b> <b>planning</b> is discussed within this framework. The domain under consideration is that of spatial layout in building...|$|E
40|$|As the {{manufacturing}} tasks become more individualized and more flexible, the machines in smart factory {{are required to}} do variable tasks collaboratively without reprogramming. This paper {{for the first time}} discusses the similarity between smart manufacturing systems and the ubiquitous robotic systems and makes an effort on deploying ubiquitous robotic technology to the smart factory. Specifically, a component based framework is proposed in order to enable the communication and cooperation of the heterogeneous robotic devices. Further, compared to the service robotic domain, the smart manufacturing systems are often in larger size. So a <b>hierarchical</b> <b>planning</b> method was implemented to improve the planning efficiency. A test bed of smart factory is developed. It demonstrates that the proposed framework is suitable for industrial domain, and the <b>hierarchical</b> <b>planning</b> method is able to solve large problems intractable with flat methods...|$|E
40|$|The judicious use of {{abstraction}} can help planning agents to identify key interactions between actions, and resolve them, without getting {{bogged down in}} details. However, ignoring the wrong details can lead agents into building plans that do not work, or into costly backtracking and replanning once overlooked interdependencies come to light. We claim that associating systematicallygenerated summary information with plans’ abstract operators can ensure plan correctness, even for asynchronously-executed plans that must be coordinated across multiple agents, while still achieving valuable efficiency gains. In this paper, we formally characterize <b>hierarchical</b> <b>plans</b> whose actions have temporal extent, and describe a principled method for deriving summarized state and metric resource information for such actions. We provide sound and complete algorithms, along with heuristics, to exploit summary information during <b>hierarchical</b> refinement <b>planning</b> and plan coordination. Our analyses and experiments show that, under clearcut and reasonable conditions, using summary information can speed planning as much as doubly exponentially even for plans involving interacting subproblems...|$|R
40|$|Abstract – In multi-agent systems {{evolving}} {{in complex}} and dynamic environments, the agents need to plan {{their tasks and}} to monitor its execution {{in order to deal}} with unpredictable situations. They must have plans that remain subject to continual updating, even during its execution. To cope with this issue, we proposed in previous works, SHPlNet, a model allowing to represent plans less sensitive to execution contexts, and to support run-time validation and verification. This paper aims to present a theoretical framework for the verification and validation of soundness and invalidity properties of partial <b>hierarchical</b> <b>plans</b> by analyzing their abstract level representation...|$|R
40|$|Integrating {{top-down}} planning with a {{bottom-up approach}} that learns to locally combine actions This paper describes two open problems {{in planning and}} presents preliminary ideas {{that could lead to}} potential solutions. The problems on which the paper focuses are (1) combining top-down and bottom-up reasoning to create <b>hierarchical</b> <b>plans,</b> and (2) representing domain knowledge in domains that are unpredictable or too complex to described or reasoned about precisely. The first problem is particularly relevant for plan repair and replanning. The second is relevant in situations with environmental unpredictability or imperfect information about the world. Combining top-down and bottom-up approache...|$|R
