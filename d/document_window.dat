14|90|Public
5|$|MacPaint uses two offscreen memory buffers {{to avoid}} flicker when {{dragging}} shapes or images across the screen. One of these buffers contained the existing pixels of a document, {{and the other}} contained the pixels of its previous state. The second buffer {{was used as the}} basis of the software's undo feature. In April 1983, the software's name was changed from MacSketch to MacPaint. The original MacPaint was programmed as a single-document interface. The palette positions and sizes were unalterable, as was the <b>document</b> <b>window.</b> This was different from other Macintosh software at the time, which allowed the users to move windows and resize them.|$|E
5|$|MacPaint 2.0 was {{released}} on January 11, 1988 by Claris. It added many improvements to the software, including the capability to open and use up to nine documents simultaneously. The original MacPaint operated as a single-document application with a non-movable window. MacPaint 2.0 eliminated this limitation, introducing a fully functioning <b>document</b> <b>window,</b> which could be sized up to 8 x 10". Several other features were introduced, such as a Zoom tool, MagicEraser tool for undo actions and stationary documents. MacPaint 2.0 was developed by David Ramsey, a developer at Claris. MacPaint 2.0 was sold for US$125, with a US$25 upgrade available for existing users of MacPaint. Claris discontinued technical support for the original MacPaint in 1989. Claris stopped selling MacPaint in early 1998 because of diminishing sales. There has been an unofficial update called MacPaint X which is 3.0 beta, mainly for people who wished {{to be able to}} use the program.|$|E
50|$|Programs {{like the}} OS/2 E editor {{and some other}} IBM editors, can process command-lines {{normally}} meant for the shell, the output being placed directly in the <b>document</b> <b>window.</b>|$|E
50|$|Latest {{major version}} adds reminders, {{multiple}} <b>document</b> <b>windows,</b> hoist, and workspaces.|$|R
5000|$|Macromedia Studio for Windows: {{a hybrid}} interface; TDI unless <b>document</b> <b>windows</b> are un-maximized. (They are maximized by default.) ...|$|R
40|$|National audienceWe {{present the}} Hotkey Palette, a quasi-modal {{interface}} enabling quick retrieval of chosen <b>documents</b> and <b>windows</b> by defining and triggering keyboard shortcuts {{either on the}} physical keyboard or with an on-screen keyboard. The Hotkey Palette improves on previous work by providing flexible contextualization of shortcuts that leverages document hierarchies, and by merging <b>document</b> and <b>window</b> retrieval in a single interface. The paper describes the design {{and implementation of the}} interface and presents novel use cases for <b>document</b> and <b>window</b> management...|$|R
50|$|Each <b>document</b> <b>window</b> {{contains}} a toolbar, which gives one-click access to commonly used {{functions such as}} inserting objects (text boxes, shapes, tables, charts, and comments), uploading the document to iWork.com, and adding additional pages. In addition, the <b>document</b> <b>window</b> {{contains a}} contextual format bar that allows one-click formatting of text and adjustments to images. When text is selected, the format bar enables users to choose fonts, text size and color, adjust line spacing and alignment. When an image is selected, the format bar displays tools to adjust opacity, show and hide shadow and reflection effects, and mask the image. A separate Inspector window provides almost all formatting options available for any element in the open document.|$|E
50|$|Many output formats for XSL-FO processors, {{specifically}} PDF, have bookmarking features. These {{allow the}} format to specify {{a string of}} text in a separate window that can be selected by the user. When selected, the <b>document</b> <b>window</b> scrolls immediately to a specific region of the document.|$|E
50|$|In OneNote, {{users can}} enter typed text via keyboard, create tables, and insert pictures. However, unlike a word processor, users can write {{anywhere}} on a virtually unbounded <b>document</b> <b>window</b> by just clicking there. Also, users {{do not need}} to explicitly save their work - OneNote saves data automatically as the user works.|$|E
50|$|SYDI-Server is {{the most}} {{developed}} script within the SYDI project. It is used to <b>document</b> <b>Windows</b> servers or clients. It collects information with Windows Management Instrumentation (WMI) and by reading the Windows registry. SYDI-Server finds basic hardware settings, installed software, domain membership, network settings etc.|$|R
40|$|Abstract: We {{present the}} Hotkey Palette, a quasi-modal {{interface}} enabling quick retrieval of chosen <b>documents</b> and <b>windows</b> by defining and triggering keyboard shortcuts {{either on the}} physical keyboard or with an on-screen keyboard. The Hotkey Palette improves on previous work by providing flexible contextualization of shortcuts that leverages document hierarchies, and by merging <b>document</b> and <b>window</b> retrieval in a single interface. The report describes the design {{and implementation of the}} interface and presents novel use cases for <b>document</b> and <b>window</b> management. on-screen keyboard, document retrieval, interface customization, window manage-Key-words: men...|$|R
5000|$|... #Caption: Screenshot of Arachnophila 5.5 having {{opened a}} blank HTML <b>document,</b> on <b>Windows</b> 8.1 ...|$|R
5000|$|Multiple files can {{be edited}} using tabbed {{document}} interface or Multiple document interface or any mixture of them. A special feature in Vedit {{is that a}} <b>document</b> <b>window</b> can be 'full size'. The size of such window is adjusted automatically (as with maximized windows), but overlapping windows can be used at the same time.|$|E
50|$|Mac OS and its GUI are document-centric {{instead of}} window-centric or application-centric. Every <b>document</b> <b>window</b> is an object {{with which the}} user can work. The menu bar changes to reflect {{whatever}} application the front window belongs to. Application windows can be hidden and manipulated as a group, and the user may switch between applications (i.e., groups of windows) or between individual windows, automatically hiding palettes, and most programs will stay running even with no open windows. Indeed, prior to Mac OS X, it was purposely impossible to interleave windows from multiple applications.|$|E
50|$|MacPaint uses two offscreen memory buffers {{to avoid}} flicker when {{dragging}} shapes or images across the screen. One of these buffers contained the existing pixels of a document, {{and the other}} contained the pixels of its previous state. The second buffer {{was used as the}} basis of the software's undo feature. In April 1983, the software's name was changed from MacSketch to MacPaint. The original MacPaint was programmed as a single-document interface. The palette positions and sizes were unalterable, as was the <b>document</b> <b>window.</b> This was different from other Macintosh software at the time, which allowed the users to move windows and resize them.|$|E
50|$|On {{the evening}} of July 24, 2006, vandals {{destroyed}} <b>documents,</b> <b>windows,</b> and the memorial's crypt of the National Monument for the Jewish Martyrs of Anderlecht. The crypt included an urn containing ashes from Auschwitz, which vandals damaged and emptied. The memorial, in the Anderlecht quarter of Brussels, was a previous target of desecration. There were no reported arrests but the investigation continues, according to authorities.|$|R
50|$|Tex-Edit Plus {{supports}} AppleScript, grep expressions, Apple's Automator, Apple's Text-to-speech capabilities, and {{can save}} documents as audio files. To place images between text lines, e.g. screenshots etc., one can simply paste {{pictures from the}} clipboard and save them with the <b>document.</b> All <b>document</b> <b>windows</b> can save their size and screen position - so that Tex-Edit Plus {{can also be used}} as a much better notetaking (memo) tool than Stickies etc.|$|R
2500|$|The Visual Studio 2010 IDE was {{redesigned}} which, {{according to}} Microsoft, clears the UI organization and [...] "reduces clutter and complexity." [...] The new IDE better supports multiple <b>document</b> <b>windows</b> and floating tool windows, while offering better multi-monitor support. The IDE shell has been rewritten using the Windows Presentation Foundation (WPF), whereas the internals have been redesigned using Managed Extensibility Framework (MEF) that offers more extensibility points than previous {{versions of the}} IDE that enabled add-ins to modify {{the behavior of the}} IDE.|$|R
50|$|In {{the opinion}} of many of its users, WriteNow {{represented}} the ideal Macintosh application. It had a simple, intuitive graphical user interface (GUI), no copy protection, and it worked in practically every revision of the Macintosh operating system, including in the Mac 68k emulator on PowerPC Macs and in the Classic Environment under Mac OS X. Its biggest claim to fame, however, was its speed. It was written in assembly language (Motorola 680x0) {{by a group of}} developers who had a reputation for producing extremely efficient code. The user interface was unusual in that, while the typical word processor had a ruler embedded in the main <b>document</b> <b>window,</b> WriteNow used a separate, fixed window that could be sent into the background, freeing screen space on the compact Mac's small nine-inch screen to display an additional line or two of text.|$|E
50|$|MacPaint 2.0 was {{released}} on January 11, 1988 by Claris. It added many improvements to the software, including the capability to open and use up to nine documents simultaneously. The original MacPaint operated as a single-document application with a non-movable window. MacPaint 2.0 eliminated this limitation, introducing a fully functioning <b>document</b> <b>window,</b> which could be sized up to 8 x 10". Several other features were introduced, such as a Zoom tool, MagicEraser tool for undo actions and stationary documents. MacPaint 2.0 was developed by David Ramsey, a developer at Claris. MacPaint 2.0 was sold for US$125, with a US$25 upgrade available for existing users of MacPaint. Claris discontinued technical support for the original MacPaint in 1989. Claris stopped selling MacPaint in early 1998 because of diminishing sales. There has been an unofficial update called MacPaint X which is 3.0 beta, mainly for people who wished {{to be able to}} use the program.|$|E
40|$|We present PaperTab, a paper {{computer}} with multiple 10. 7 ” functional touch sensitive flexible electrophoretic displays. PaperTab merges {{the benefits of}} working with electronic documents with the tangibility of paper documents. In PaperTab, each <b>document</b> <b>window</b> is represented as a physical, functional, flexible e-paper screen called a displaywindow. Each displaywindow is an Android computer that can show documents at varying resolutions. The location of displaywindows is tracked on the desk using an electro-magnetic tracker. This allows for context-aware operations between displaywindows. Touch and bend sensors in each displaywindow allow users to navigate content...|$|E
5000|$|... no {{work can}} be done with the {{underlying}} <b>document</b> in that <b>window.</b>|$|R
25|$|Another {{branch in}} the {{three-dimensional}} desktop environment is the three-dimensional GUIs {{that take the}} desktop metaphor a step further, like the BumpTop, where users can manipulate <b>documents</b> and <b>windows</b> {{as if they were}} physical documents, with realistic movement and physics.|$|R
50|$|Kate {{features}} multiple <b>document</b> interface, <b>window</b> splitting, project {{editing and}} sessions to facilitate editing multiple documents. Using sessions, one can customize Kate for different projects by saving {{the list of}} open files, the list of enabled plug-ins and the window configuration.|$|R
40|$|Abstract. Including LATEX {{source of}} {{mathematical}} expressions, within the PDF document of a text-book or research paper, has definite benefits regarding ‘Accessibility ’ considerations. Here we describe three {{ways in which}} this can be done, fully compatibly with international standards ISO 32000, ISO 19005 - 3, and the forthcoming ISO 32000 - 2 (PDF 2. 0). Two methods use embedded files, also known as ‘attachments’, hold-ing information in either LATEX or MathML formats, but use different PDF structures to relate these attachments to regions of the <b>document</b> <b>window.</b> One uses structure, so is applicable to a fully ‘Tagged PDF ’ con-text, while the other uses /AF tagging of the relevant content. The third method requires no tagging at all, instead including the source coding as the /ActualText replacement of a so-called ‘fake space’. Information provided this way is extracted via simple Select/Copy/Paste actions, and is available to existing screen-reading software and assistive technologies. ...|$|E
40|$|Including LaTeX {{source of}} {{mathematical}} expressions, within the PDF document of a text-book or research paper, has definite benefits regarding `Accessibility' considerations. Here we describe three {{ways in which}} this can be done, fully compatibly with international standards ISO 32000, ISO 19005 - 3, and the forthcoming ISO 32000 - 2 (PDF 2. 0). Two methods use embedded files, also known as `attachments', holding information in either LaTeX or MathML formats, but use different PDF structures to relate these attachments to regions of the <b>document</b> <b>window.</b> One uses structure, so is applicable to a fully `Tagged PDF' context, while the other uses /AF tagging of the relevant content. The third method requires no tagging at all, instead including the source coding as the /ActualText replacement of a so-called `fake space'. Information provided this way is extracted via simple Select/Copy/Paste actions, and is available to existing screen-reading software and assistive technologies. Comment: This is a post-print version of original in volume: S. M. Watt et al. (Eds.) : CICM 2014, LNAI 8543, pp. 184 - 199, 2014; available at [URL] along with supplementary PDF. This version, with supplement as attachment, is enriched to validate as PDF/A- 3 u modulo an error in white-space handling in the pdfTeX version used to generate i...|$|E
5000|$|A Single-Document Interface (SDI) {{is a type}} of GUI. Any program {{not capable}} of {{displaying}} more than one <b>document</b> per <b>window</b> is considered to use an SDI interface. Examples of this include Windows Notepad, Internet Explorer 6 or earlier, and the Windows command prompt.|$|R
40|$|We {{explore how}} the {{availability}} of a sensemaking tool influences users' knowledge externalization strategies. On a large display, users were asked to solve an intelligence analysis task with or without a bidirectionally linked concept-graph (BLC) to organize insights into concepts (nodes) and relations (edges). In BLC, both nodes and edges maintain "deep links" to the exact source phrases and sections in associated documents. In our control condition, we were able to reproduce previously described spatial organization behaviors using <b>document</b> <b>windows</b> on the large display. When using BLC, however, we found that analysts apply spatial organization to BLC nodes instead, use significantly less display space and have significantly fewer open windows. Comment: To appear in EuroVis Workshop on Visual Analytics (2017...|$|R
5000|$|World Trade Organization negotiators {{on trade}} facilitation: as {{examples}} of relevant standards and recommendations particularly for aligned <b>documents</b> and Single <b>Windows</b> ...|$|R
5000|$|Texas Instruments {{explains}} [...] "SNRBoost" [...] {{quite well}} in these <b>Documents</b> Using <b>Windowing</b> With SNRBoost3G Technology (PDF) and Understanding Low-Amplitude Behavior of 11-bit ADCs (PDF) while Analog Devices explains their [...] "Noise Shaping Requantizer", quite {{well in this}} Document AD6677 80 MHz Bandwidth IF Receiver (on Page 23).|$|R
40|$|We {{describe}} how the frames of <b>document</b> <b>windows</b> {{can be used}} as areas for visualizing information about a document. A number of design examples are presented as illustrations of how users can be supported with contextual information about a document {{in a way that does}} not interfere with the visual presentation of the document itself. A ChangeIndicator is used as an example of how information can be mapped to basic design variables of a frame, such as its color. More complex visualizations can be achieved by mapping information about parts of documents to parts or details of the frame. This is illustrated with a ReadabilityViewer. Finally, the ScrollSearcher is presented as an example of how the results of processes and functions can be visualized in the frames of a document...|$|R
5000|$|... {{the parent}} window is frozen when the dialog box opens, and one cannot {{continue}} to work with the underlying <b>document</b> in that <b>window</b> ...|$|R
25|$|The Fax {{service and}} model are fully account-based. Fax-aware {{applications}} such as Windows Fax and Scan can send multiple documents in a single fax submission. The Fax Service API generates TIFF files for each document and merges them into a single TIFF file. Users can right-click a <b>document</b> in <b>Windows</b> Explorer and select Send to Fax Recipient.|$|R
50|$|Factional agendas {{underpin}} {{the writing}} of the canonical texts, and the various NT <b>documents</b> are <b>windows</b> into the conflict and debates of that period. According to Timothy Johnson, mutual slandering among competing sects was quite strong in the period when these works were composed. The New Testament moreover is an ensemble of texts written over decades, and reflects the different milieux of composition.|$|R
40|$|In TREC- 7, we {{participated in}} the main task of {{automatic}} ad-hoc retrieval {{as well as the}} high precision and filtering tracks. For ad-hoc, three experiments were done with query types of short (title section of a topic), medium (description section) and long (all sections) lengths. We used a sequence of five methods to handle the short and medium length queries. For long queries we employed a re-ranking method based on evidence from matching query phrases in <b>document</b> <b>windows</b> in both stages of a 2 -stage retrieval. Results are well above median. For high precision track, we employed our interactive PIRCS system for the first time. In adaptive filtering, we concentrate on dynamically varying the retrieval status value threshold for deciding selection and during the course of filtering. Query weights were trained but expansion was not done. We also submitted results for batch filtering and standard routing based on methods evolved from previous TREC experiments. 1. Introduction We continue [...] ...|$|R
5000|$|There {{are a few}} {{settings}} for activating and switching between spaces. A checkbox {{at the bottom of}} the panel allows switching spaces automatically when switching between applications bound to spaces. This is achieved either by clicking on application icons in the dock, or by pressing ⌘ (Command) + Tab, and Spaces will jump directly to the space that the chosen application has been assigned to. A limitation of Spaces lies in the fact that some applications featuring tool palettes and/or multiple open <b>document</b> <b>windows</b> (such as Adobe Creative Suite or Microsoft Office applications) cannot be consistently bound to a specific (numbered) space. In such cases, the [...] "switching" [...] function responds to the most recently active document, regardless of which space it has been opened upon, so it is usually more efficient to avoid assigning such applications to a specific space and to run them unassigned, opening documents in the desired space.|$|R
