18|249|Public
5000|$|With <b>file</b> <b>export</b> lossy data conversion, {{software}} packages allow either a <b>File</b> <b>Export</b> {{to the new}} data storage format, or a File Save to the new data storage format. The former leaves the original content in its original format and creates a new lossy version in the named file. The latter changes {{the format of the}} existing file.|$|E
5000|$|MIDI, Csound, LilyPond and MusicXML <b>file</b> <b>export</b> (including PostScript and PDF {{output file}} {{generation}} of score) ...|$|E
5000|$|... darktable can be {{controlled}} by scripts written in Lua version 5.2. Lua {{can be used to}} define actions which darktable should perform whenever a specified event is triggered. One example might be calling an external application during <b>file</b> <b>export</b> in order to apply additional processing steps outside of darktable.|$|E
5000|$|Importing and <b>exporting</b> [...]REG <b>files,</b> <b>exporting</b> data in {{the binary}} hive format ...|$|R
5000|$|Following table {{contains}} list of ODF specification version attribute office:version="1.X" [...] used in <b>files</b> <b>exported</b> from OpenDocument software.|$|R
5000|$|... ++IUCLID Chemical Data Sheets, OECD-IUCLID <b>Export</b> <b>Files,</b> EUSES <b>Export</b> Files; ...|$|R
50|$|The only output was print, or an {{untagged}} file {{image of}} the printed output, which required extensive editing to import into a word processing program. Except for a limited export in the MS-DOS version to other outline processors such as ThinkTank, there was no <b>file</b> <b>export</b> conserving the outline structure, nor did anyone external develop a conversion.|$|E
40|$|Beginning in 2014, Emory University’s Robert W. Woodruff Library {{initiated}} {{a project to}} connect entry card swipe data to demographic data within a locally created system. The system provides data visualizations as well as <b>file</b> <b>export</b> functionality. This project has involved developing a process for collecting and analyzing the data and presenting the results {{it in a way}} that can enable data-driven decision making...|$|E
40|$|PrimerZ ([URL] is a web {{application}} dedicated primarily to primer design for genes and human SNPs. PrimerZ accepts genes by gene name or Ensembl accession code, and SNPs by dbSNP rs or AFFY_Probe IDs. The promoter and exon sequence information of all gene transcripts fetched from the Ensembl database ([URL] are processed before being {{passed on to}} Primer 3 ([URL] for individual primer design. All results returned from Primer 3 are organized and integrated in a specially designed web page for easy browsing. Besides the web page presentation, csv text <b>file</b> <b>export</b> is also provided for enhanced user convenience...|$|E
5000|$|...slk <b>file</b> <b>exports</b> {{opened with}} Excel have {{a limit of}} 255 {{characters}} in a cell. This limit is not present in LibreOffice.|$|R
5000|$|NIAONiao can import MIDI files, VSQX files, and UST <b>files,</b> <b>export</b> tracks as the [...] "Niao" [...] {{file format}} (*.nn), and can render vocal tracks {{directly}} as WAV, MP3, or MIDI files.|$|R
5000|$|Version 2010 [...] adds hide/show pushpinsets, hide/show {{information}} balloons, import/export GPX <b>files,</b> <b>export</b> to GPS navigation device, {{export to}} mobile phone, and 348 new pushpin symbols were added, the majority restored former pins as mentioned above.|$|R
40|$|We {{present a}} new {{computing}} environment for authoring mixed natural and computer language documents. In this environment a single hierarchically-organized plain text source file may contain {{a variety of}} elements such as code in arbitrary programming languages, raw data, links to external resources, project management data, working notes, and text for publication. Code fragments may be executed in situ with graphical, numerical and textual output captured or linked in the <b>file.</b> <b>Export</b> to LATEX, HTML, LATEX beamer, DocBook and other formats permits working reports, presentations and manuscripts for publication to be generated from the file. In addition, functioning pure code files can be automatically extracted from the file. This environment is implemented as an extension to the Emacs text editor and provides a rich set of features for authoring both prose and code, as well as sophisticated project management capabilities...|$|E
40|$|Available at: [URL] This kit {{provides}} {{a template for}} observing videos of horse training systems and evaluating them relative to the ISES (International Society for Equitation Science) Principles of Equitation Science. Included in this release are: an ethogram for Equitation Science First Principles of Horse Training, a pictogram ethogram quick reference card, CowLog (an Open Source web-based app for logging behaviours) and full instructions for using IPTEK. See: Steve North, Ann Hemingway, Andrew McLean, Harriet Laurie and Caroline Ellis-Hill. 2016. Evaluating a natural horsemanship program {{in relation to the}} ISES first principles of horse training. In proceedings of The 12 th International Society for Equitation Science Conference (ISES 2016). June 23 - 25. IFCE (Institut Français du Cheval et de L’équitation), Saumur, France. DOI: 10. 5281 /zenodo. 54733. [URL] Changes in this release: Switched from the Windows version of CowLog to the web-based version. This version can be run locally on a device, but it still requires an Internet connection to save the output file. This is because file saving uses a remote PHP <b>file</b> (<b>export.</b> php) hosted by the original developer...|$|E
40|$|The {{ability to}} {{calculate}} molecular properties such as molecular weights, isoelectric points, and extinction coefficients {{is vital for}} scientists using and/or synthesizing peptides and peptoids for research. A suite of two web utilities: Peptide Calculator and Peptoid Calculator, available free at [URL] are presented. Both tools allow the calculation of peptide/peptoid chemical formulae and molecular weight, ChemDraw structure <b>file</b> <b>export</b> and automatic assignment of mass spectral peaks to deletion sequences and metal/protecting group adducts. Peptide Calculator also provides a calculated isoelectric point, molar extinction coefficient, graphical peptide charge summary and β-strand contiguity profile (for aggregation-prone sequences), indicating potential regions of synthesis difficulty. In addition to the unique automatic spectral assignment features offered across both utilities, Peptoid Calculator represents a first-of-a-kind resource for researchers {{in the field of}} peptoid science. With a constantly expanding database of over 120 amino acids, non-natural peptide building blocks and peptoid building blocks, it is anticipated that Pep-Calc. com will act as a valuable asset to those working on the synthesis and/or application of peptides and peptoids in the biophysical and life sciences fields...|$|E
40|$|Description Analyzes {{shooting}} {{data with}} respect to group shape,precision, and accuracy. This in-cludes graphical methods,descriptive statistics, and inference tests using standard,but also non-parametric and robust statistical methods. Works with <b>files</b> <b>exported</b> by OnTarget PC and OnTarget TDS or with custom data files in text format with a similar structure...|$|R
5000|$|SmartGuyz ScreenCam 3 (March 2009) New {{features}} including rewrite for Windows Vista and Windows XP (including 64-bit versions), {{support for}} SWF7 and large <b>file</b> <b>exports,</b> tweaks to the capture engine, in-editor (post video capture) audio dubbing, better playback controls, enhancements to word editor, cursor, note styles, GUI refresh.|$|R
5000|$|Tekla Structures {{was used}} {{extensively}} for the steel design of Capital Gate at Abu Dhabi, UAE. <b>Files</b> <b>exported</b> from Tekla facilitated faster steel fabrication. One of the architects, Jeff Schofield, stated that [...] "it {{was the right}} time in history {{and we had the}} right technology to make this happen".|$|R
40|$|We present recent {{developments}} in the openSMILE feature extraction toolkit. Version 2. 0 now unites feature extraction paradigms from speech, music, and general sound events with basic video features for multi-modal processing. De-scriptors from audio and video can be processed jointly in a single framework allowing for time synchronization of param-eters, on-line incremental processing as well as off-line and batch processing, and the extraction of statistical function-als (feature summaries), such as moments, peaks, regression parameters, etc. Postprocessing of the features includes sta-tistical classifiers such as support vector machine models or <b>file</b> <b>export</b> for popular toolkits such as Weka or HTK. Avail-able low-level descriptors include popular speech, music and video features including Mel-frequency and similar cepstral and spectral coefficients, Chroma, CENS, auditory model based loudness, voice quality, local binary pattern, color, and optical flow histograms. Besides, voice activity detection, pitch tracking and face detection are supported. openSMILE is implemented in C++, using standard open source libraries for on-line audio and video input. It is fast, runs on Unix and Windows platforms, and has a modular, component based architecture which makes extensions via plug-ins easy. openSMILE 2. 0 is distributed under a research license and can be downloaded fro...|$|E
40|$|MPScope is a {{software}} suite {{to control and}} analyze data from custom-built multiphoton laser scanning fluorescence microscopes. The acquisition program MPScan acquires, displays and stores movies, linescans, image stacks or arbitrary regions from up to four imaging channels and up to two analog inputs, while plotting the intensity of regions of interest in real-time. Bidirectional linescans allow 256 × 256 pixel frames to be acquired at up to 10 fps with typical galvanometric scanners. A fast stack mode combines movie acquisition with continuous z-focus motion and adjustment of laser intensity for constant image brightness. Fast stacks can be automated by custom programs running in an integrated scripting environment, allowing a 1 mm 3 cortical volume to be sampled in 1 billion voxels in approximately 1 h. The analysis program MPView allows viewing of stored frames, projections, automatic detection of cells and plotting of their average intensity across frames, direct frame transfer to Matlab, AVI movie creation and <b>file</b> <b>export</b> to ImageJ. The combination of optimized code, multithreading and COM (Common Object Model) technologies enables MPScope to fully take advantage of custom-built two-photon microscopes and to simplify their realization...|$|E
40|$|Abstract. Conventional Web {{archives}} {{are created}} by periodically crawling a Web site and archiving the responses from the Web server. Although easy to implement and commonly deployed, this form of archiving typically misses updates {{and may not be}} suitable for all preservation scenarios, for example a site that is required (perhaps for records compliance) to keep a copy of all pages it has served. In contrast, transactional archives work in conjunction with a Web server to record all content that has been served. Los Alamos National Laboratory has developed SiteStory, an open-source transactional archive written in Java that runs on Apache Web servers, provides a Memento compatible access interface, and WARC <b>file</b> <b>export</b> features. We used Apache’s ApacheBench utility on a pre-release version of SiteStory to measure response time and content delivery time in different environments. The performance tests were designed to determine the feasibility of SiteStory as a production-level solution for high fidelity automatic Web archiving. We found that SiteStory does not significantly affect content server performance when it is performing transactional archiving. Content server performance slows from 0. 076 seconds to 0. 086 seconds per Web page access when the content server is under load, and from 0. 15 seconds to 0. 21 seconds when the resource has many embedded and changing resources...|$|E
40|$|Description Analyzes {{shooting}} {{data with}} respect to group shape, precision, and accuracy. This includes graphical methods, descriptive statistics, and inference tests using standard, but also non-parametric and robust statistical methods. Implements distributions for radial error in bivariate normal variables. Works with <b>files</b> <b>exported</b> by OnTarget PC/TDS or Taran, {{as well as with}} custom data files in text format...|$|R
50|$|Password Safe cannot {{directly}} import a XML <b>file</b> <b>exported</b> by KeePass V1 or V2, as {{the fields}} are too different. However, the Help file provides instructions for processing an <b>exported</b> XML <b>file</b> {{with one of}} multiple XSLT files (included with Password Safe) which will produce a Password Safe compatible XML file that can then be imported.|$|R
5000|$|To {{clear for}} export: To <b>file</b> Shipper’s <b>Export</b> Declaration and get export permit ...|$|R
40|$|Conventional Web {{archives}} {{are created}} by periodically crawling a web site and archiving the responses from the Web server. Although easy to implement and common deployed, this form of archiving typically misses updates {{and may not be}} suitable for all preservation scenarios, for example a site that is required (perhaps for records compliance) to keep a copy of all pages it has served. In contrast, transactional archives work in conjunction with a Web server to record all pages that have been served. Los Alamos National Laboratory has developed SiteSory, an open-source transactional archive written in Java solution that runs on Apache Web servers, provides a Memento compatible access interface, and WARC <b>file</b> <b>export</b> features. We used the ApacheBench utility on a pre-release version of to measure response time and content delivery time in different environments and on different machines. The performance tests were designed to determine the feasibility of SiteStory as a production-level solution for high fidelity automatic Web archiving. We found that SiteStory does not significantly affect content server performance when it is performing transactional archiving. Content server performance slows from 0. 076 seconds to 0. 086 seconds per Web page access when the content server is under load, and from 0. 15 seconds to 0. 21 seconds when the resource has many embedded and changing resources. Comment: 13 pages, Technical Repor...|$|E
40|$|Large {{amounts of}} data are stored in {{relational}} DBMSs. How-ever, statistical analysis is frequently performed outside the DBMS using statistical tools, such as the well-known R package, leading to slow processing when data sets cannot fit in main memory and going through a <b>file</b> <b>export</b> bottle-neck. In this article, we propose algorithms for large data set processing of principal component analysis (PCA) and stochastic search variable selection (SSVS) that can work en-tirely inside a DBMS, using SQL queries and User-Defined Functions (UDFs). Both of our algorithms consist of two main phases: a first phase to compute sufficient statistics in one pass with SQL queries and a second one to derive the model from such such sufficient statistics, in main mem-ory with UDFs. PCA is efficiently solved with SVD via UDFs in main memory after sufficient statistics are derived. On the other hand, the traditional SSVS algorithm requires multiple passes to compute a model. In contrast, our im-proved Bayesian algorithm performs a single table scan on the input data set and then the UDF performs thousands of iterations on small matrices. In addition, we incorporate optimizations that exploit DBMS multi-threaded process-ing capabilities to compute multidimensional aggregates in data summarization. Specifically, we present low-level opti-mizations to distribute the workload among multiple cores, accessing records by block and caching in main memory. Experiments with large data sets results demonstrate the efficiency of our optimizations to compute sufficient statis-tics and show our algorithms have linear scalability {{on the size of}} the data set. Finally, a detailed comparison against R, the standard open-source package for statistical research, shows correctness and superior speed of our DBMS-based algorithms to process very large datasets. ∗This work was partially supported by NSF grants CCF 0937562 and IIS 0914861...|$|E
40|$|Background: Answering {{questions}} such as “Which genes are related to breast cancer? ” usually requires retrieving relevant publications through the PubMed search engine, reading these publications, and creating gene lists. This process is not only time-consuming, but also prone to errors. Results: We report GLAD 4 U (Gene List Automatically Derived For You), a new, free web-based gene retrieval and prioritization tool. GLAD 4 U takes advantage of existing resources of the NCBI to ensure computational efficiency. The quality of gene lists created by GLAD 4 U for three Gene Ontology (GO) terms and three disease terms was assessed using corresponding “gold standard ” lists curated in public databases. For all queries, GLAD 4 U gene lists showed very high recall but low precision, leading to low F-measure. As a comparison, EBIMed’s recall was consistently lower than GLAD 4 U, but its precision was higher. To present the most relevant genes {{at the top of}} a list, we studied two prioritization methods based on publication count and the hypergeometric test, and compared the ranked lists and those generated by EBIMed to the gold standards. Both GLAD 4 U methods outperformed EBIMed for all queries based on a variety of quality metrics. Moreover, the hypergeometric method allowed for a better performance by thresholding genes with low scores. In addition, manual examination suggests that many false-positives could be explained by the incompleteness of the gold standards. The GLAD 4 U user interface accepts any valid queries for PubMed, and its output page displays the ranked gene list and information associated with each gene, chronologically-ordered supporting publications, along with a summary of the run and links for <b>file</b> <b>export</b> and functional enrichment and protein interaction network analysis. Conclusions: GLAD 4 U has a high overall recall. Although precision is generally low, the prioritization methods successfully rank truly relevant genes at the top of the lists to facilitate efficient browsing. GLAD 4 U is simple to use, and its interface can be found at...|$|E
50|$|Songs can be {{exported}} {{as either}} a MIDI or audio <b>file.</b> <b>Exporting</b> to a MIDI file allows the user to edit the background generated by Band-in-a-Box in a MIDI sequencer, like RealBand or PowerTracks. Songs created in Band-in-a-Box can be burned to a CD or put on to an MP3 player to share with others when saved as audio files.|$|R
30|$|Step 5 : Once the {{waveform}} is captured, it {{is recorded}} in a <b>file</b> and <b>exported</b> for processing.|$|R
40|$|Summary: High-throughput {{fingerprinting}} techniques employing {{capillary electrophoresis}} place new {{demands on the}} editing of fingerprint files for the downstream contig assembly program, FPC. A cross-platform software application, GenoProfiler, was developed for automated editing of sized fingerprinting profiles generated by the ABI Genetic Analyzers. The batch-processing module extracts the sized fragment information directly from the ABI raw trace files, or from data <b>files</b> <b>exported</b> from GeneMapper or other size calling software, removes the background noise and undesired fragments, and generates fragment size files compatible with the FPC software...|$|R
40|$|Abstract {{copyright}} UK Data Service {{and data}} collection copyright owner. This data draws, from London's only surviving medieval Sheriffs' Court roll, on all court session dates, litigants' surnames (sometimes with occupation or location of residence), litigants' dispute types, and individual court roll entry types. It adds to the original data tagging of entries by case, so as that all entries pertaining to any one case may be collated and court process and procedure may be studied, and tagging of cases involving female litigants, so that female court usage may be studied. Only court roll entries for appointment of attorney have been excluded from data collection, as these were not explicitly part of the litigation process. The study of cases by writ-type, e. g. frequency of debt cases or debt cases involving women, also has potential socio-economic value. This data may prove of exceptional importance {{in the study of}} medieval women, due to the relative frequency with which female litigants, a typically under-represented group, are recorded as having appeared before the Sheriffs' Court. Main Topics : This data is a detailed index of entries and cases appearing on the City of London's only surviving medieval Sheriffs' Court roll; covering Trinity term, 1 July - 26 September, 1320. The Sheriffs' Court of London was the court of first resort for most medieval Londoners wishing to initiate a lawsuit in matters of trespass, debt, account, surety of peace ('de minis'), breach of contract {{and a variety of other}} principally 'civil' disputes. Although notably, property-ownership disputes, such as disseisin, were not heard in the Sheriffs' Court. The entries on the Sheriffs' Court roll pertain to cases at all stages of legal proceedings, from mesne process - the process of bringing a defendant before the court to join issue - to the pleading of cases before the court and ultimately to final process - whereby the judgments were executed. Original-document entries contain cursory to full details of the dispute (depending on the stage of legal proceedings), the litigants and sureties first and last names and, additionally, often persons occupation or location of residence. The data deposited here is a '. tab' <b>file</b> <b>export</b> of a MsAccess table, listing, for each court roll entry [excepting appointments of attorney]: a full document reference (including document membrane number); the date of the court session a which the entry was recorded; the surname/s of the plaintiff/s and defendant/s; the writ-type (indicating what kind of case it was, e. g. debt/trespass/contract/etc.); the entry type (e. g. order to arrest/essoin/pleaded case/judgment/etc); an indication of whether the case involved a female litigant; and, where applicable, further notes about entry. Each entry in the deposited data also contains a unique entry ID number and metadata field with a 'Case' number, allowing the collation of entries pertaining to each of the more than 500 individual lawsuits, or 'cases', recorded on the roll. <br...|$|E
40|$|Authors: Spencer Reisbick & Patrick Willoughby ### Abstract This {{protocol}} {{describes an}} approach to preparing a series of Gaussian 09 computational input files for an ensemble of conformers generated in Spartan’ 14. The resulting input files are necessary for computing optimum geometries, relative conformer energies, and NMR shielding tensors using Gaussian. Using the conformational search feature within Spartan’ 14, an ensemble of conformational isomers was obtained. To convert the structures into a format that is readable by Gaussian 09, the conformers were first exported to a single “. sdf” file. A Python script was used to (i) read the structural information of each conformer within the “. sdf” file and (ii) write the corresponding atomic coordinates into a series Gaussian 09 input files. This approach decreases the amount of active effort required to compute NMR chemical shifts of a structure that populates an ensemble of conformers. ### Introduction NMR spectroscopy is the most useful tool for determining the structure of an unknown organic molecule. By coupling this approach with other analytical techniques (e. g. mass spectrometry) the structure of an unknown organic molecule can be elucidated. However, molecules of greater complexity continue to be isolated and/or prepared, and their associated analytical data are increasingly convoluted. Consequently, the assigned structures of these newly isolated compounds are sometimes incorrect, which leads to years of misguided effort “chasing molecules that were never there” (1). Modern computational chemistry software packages (e. g., Spartan (2, 3), Gaussian 09 (4), and Jaguar (5, 6)) have enabled the routine use of density functional theory (DFT) calculations for predicting spectroscopic properties of organic molecules. For example, one of us recently reported a protocol that described an approach using Gaussian 09 to compute NMR data for molecules that adopt conformational isomers (7). An important, {{early part of this}} protocol required the use of the software application, MacroModel (8) (part of the Schrödinger suite) to carry out a stochastic conformational search using the OPLS molecular mechanics force field. For each structure resulting from this conformational search, free energies and NMR shielding tensors were calculated. Using the free energy data, a Boltzmann factor was determined for each conformer, which was, in turn, converted into the relative mole fraction. The computed NMR data are averaged (using the mole fraction of each conformation), referenced, and scaled to generate a set of Boltzmann-weighted average chemical shifts. Due to the widespread use of Spartan for molecular mechanics calculations, we have prepared an addendum to this protocol that utilizes the structures resulting from a Spartan Conformer Distribution calculation. As discussed in our original protocol,(7) molecules of increasing complexity are often accompanied by many conformational isomers. We have developed a Python script (e. g., “write-g 09 -inputs-sdf. py”) that generates two Gaussian 09 input files for each structure resulting from the conformational search. For convenience, we have provided an additional script (e. g., “write-g 03 -inputs-sdf. py”) that prepares Gaussian 03 input files. These input files include an “-opt_freq” file for determining the optimal geometry and free energy along with an “-nmr” file for calculating NMR shielding tensor data. The Python script expedites the DFT computations by greatly simplifying the preparation of the Gaussian input files. More specifically, the script extracts structural information from a “. sdf” file generated in Spartan, and the coordinates of each conformation are written into the Gaussian input files. The “. sdf” file type is routinely used for storing molecular information for multiple structures and can be produced by myriad software applications. The script provided in this protocol will be useful for writing Gaussian input files from “. sdf” files prepared in other chemistry software applications. ### Equipment **Software required to carryout Python scripts** 1. Command-line interface application (Terminal in Mac OS X or Linux; or Command Prompt in Windows) - Python, version 2 or 3 (included with Mac OS X and Linux operating systems) - Python script editor (e. g., IDLE (see [[URL] - Text editing application (e. g., TextEdit in Mac OS X or Notepad in Windows) **Software requirements for calculations** 1. This protocol has been written for use with Spartan’ 142, 3; however, we have tested earlier versions of Spartan (e. g., Spartan’ 08) and found that they are also compatible with the following Procedure. - The approach described in the Procedure is amenable to any software application that is capable of performing a conformational search and exporting the family of conformers as a “. sdf” file (e. g., MacroModel 8 and ChemBio 3 D 9). **Hardware requirements for use of Python scripts** 1. Most standard personal computers built after 2008 are capable of executing the Python scripts included in this protocol. **Hardware requirements for conformational search calculation** 1. A CPU with 4 GB of RAM and a dual-core processor is capable of performing the conformational search calculation for generating a family of conformers of the candidate structure. The hardware requirements for carrying out the DFT calculations in Gaussian 09 are described in ref. 7. ### Procedure **Create input geometry and carry out a molecular mechanics conformational search in Spartan ● TIMING 30 min (Steps 1 – 8) ** 1. Draw cis- 3 -methylcyclohexanol in the Spartan workspace. In Spartan select File → New to open the Model Kit toolbar. Change the Rings drop down menu to Cyclohexane and click inside the workspace to add a parent cyclohexane molecule. Select the Csp 3 button within the Model Kit toolbar and click one of the yellow open valences on the cyclohexane ring. This operation will attach the methyl group. Select the Osp 3 button within the Model Kit toolbar and click a yellow open valence on the cyclohexane ring that is both two carbons separated from and cis to the previously added methyl group. This will add an oxygen atom to the cyclohexane ring to give cis- 3 -methylcyclohexanol. Ensure that the overall structure is cis- 3 -methylcyclohexanol before continuing. - Quick and Crude Molecular Mechanics Geometry Optimization. Cleanup the preliminary geometry by clicking the Minimize button or selecting Build → Minimize. - Perform the conformational search. Select Setup → Calculations. A window will open. Change the Calculate: drop down menu selection to Conformer Distribution. Change the two drop down menus to the right so that they display Molecular Mechanics and MMFF. Check the box next to Maximum: and change the conformers examined to “ 1000 ”. Click Submit and a Save As window will appear. Change the computational filename to “cis- 3 -methylcyclohexanol”, change the directory (i. e. folder) to a location that is convenient for storing the associated computational files, and click Save. Click OK in the window that appears, which indicates that the conformational search has started. - After the conformational search has finished, a window confirming that the job has completed will appear. Click OK in this window. When prompted to open a new document select No. Select File → Close to clear the workspace. - Select File → Open and locate the conformational search output file “cis- 3 -methylcyclohexanol. spartan. ” - Ensure that all expected conformers have been found by the calculation. Select Display → Spreadsheet to open a window containing an entry for each structure found during the conformational search. A conformational search of cis- 3 -methylcyclohexanol is expected to yield six unique conformers. - Export the library of conformers as a single “. sdf” file. Select File → Save As… to open a Save As window. Enter “cis- 3 -methylcyclohexanol” as the filename, change the Save as type: drop down menu selection to MDL SD (*. sdf) and click Save. If a popup window appears with the title Select molecules, click Write all molecules followed by OK. Click OK in the popup window that confirms the <b>file</b> <b>export.</b> This step will export all structures from the conformational search to a single “. sdf” file—“cis- 3 -methylcyclohexanol. sdf”—located in the same directory as the conformational search output file. - Examine the resulting “. sdf” file to ensure that the results of the conformational search were correctly exported (Optional). Open the “. sdf” file in a text-editing application (e. g., TextEdit in Mac OS X or Notepad in Windows) and check that an entry is included for all unique conformations. A unique entry typically begins with the text “Spartan” followed by a series of numbers. Additionally, structures are usually systematically labeled, for example, the first conformation is by default titled “M 0001 ”. **Create Gaussian input files for each conformer ● TIMING 15 min (Steps 9 – 12) ** - 9. Download the “write-g 09 -inputs-sdf. py” (or “write-g 03 -inputs-sdf. py” if using Gaussian 03) Python script from [Supplementary Data 1]([URL] to the directory containing the “. sdf” file created in Step 7 (see Step 3 for directory location). If using Python version 2, download the “write-g 09 -inputs-sdf. py” script located in the Python-Version- 2 directory within [Supplementary Data 1]([URL] ▲ CRITICAL STEP Users must download the Python script from [Supplementary Data 1]([URL] that is compatible with the particular versions of both Python (i. e., either version 2 or 3) and Gaussian (i. e., either version 09 or 03) that are to be used. - 10. Editing the “write-g 09 -inputs-sdf. py” Python script to change the memory and number of processors used in Gaussian calculations (optional). To accommodate different users’ needs, we have prepared the “write-g 09 -inputs-sdf. py” Python script so that it is convenient to change the amount of memory and the number of the processors allocated to the computationally intensive Gaussian 09 jobs. Open the “write-g 09 -inputs-sdf. py” Python script in IDLE or any other Python script editor. Adjust the amount of memory used in the Gaussian 09 optimization/frequency and NMR jobs by changing the number to the right of “%mem=” on line 86 and 113, respectively. Adjust the number of core processors used in the Gaussian 09 optimization/frequency and NMR jobs by changing the number to the right of “%nproc=” on line 87 and 114, respectively. Save the edited script file in the same directory as the “. sdf” file created in Step 9. - 11. In a command line interface application (i. e. Terminal for Mac OS X or Linux or Command Prompt for Windows) navigate to the directory that contains the “. sdf” file, the “write-g 09 -inputs-sdf. py” Python script and the associated computational files. - 12. Execute the “write-g 09 -inputs-sdf. py” Python script (or the edited script that may have been created in Step 10 by entering the following command: *> python write-g 09 -inputs-sdf. py cis- 3 -methylcyclohexanol. sdf* - The script will request the name of the candidate structure by displaying the following prompt: - Enter the name of the candidate structure: - Enter “cis- 3 -methylcyclohexanol” as the candidate structure name. Avoid using spaces when entering the name of the candidate structure. If the script executes successfully, the following message will be displayed: *The script successfully performed the task of creating Gaussian input files for each unique structure within the cis- 3 -methylcyclohexanol. sdf file and moved these input files to the cis- 3 -methylcyclohexanol-gaussian_files directory*. For each unique conformation within the associated “. sdf” file, the script will create two Gaussian input files. The script also creates a new directory labeled “cis- 3 -methylcyclohexanol-gaussian_files” and moves all of the Gaussian input files into this newly created directory. The Gaussian input files labeled “cis- 3 -methylcyclohexanol-opt_freq-conf-#. com” are the input files for geometry optimization and frequency calculation. The Gaussian input files labeled “cis- 3 -methylcyclohexanol-nmr-conf-#. com” are the input files for NMR shielding tensor calculations. ? TROUBLESHOOTING **Perform DFT calculations in Gaussian 09 (cf. Procedure in ref. 7) ● TIMING 1 h (Step 13) ** - 13. To obtain the computed NMR data for the candidate structure, consult the Procedure in ref. 7 for instructions on using the resulting input files from Step 12 within Gaussian 09 to calculate (i) DFT-optimized conformer geometries, (ii) free energies using the “opt_freq-conf” input files, and (iii) NMR shielding tensors using the “nmr-conf” input files. Additionally, the Procedure in ref. 7 includes Python scripts and detailed instructions for (i) assembling the free energy and NMR shielding tensor data into well-organized spreadsheet files, (ii) referencing and scaling the NMR data, (iii) determining the Boltzmann weighting factors of all conformers, and (iv) applying these weighting factors to generate the set of Boltzmann-weighted chemical shifts for the candidate structure. Details with regard to the choice of computational methodology (e. g., DFT functional and basis set preferences) are discussed in ref. (7). Additionally, the previously reported protocol (7) highlights methods for determining the “best fit” for a candidate structure when comparing experimental spectral data to the computed NMR chemical shifts. Alternative approaches to determining the “best fit” have recently been reported by Goodman (10, 11) and Sarotti (12, 13), and more traditional approaches are described in several excellent reviews (14, 15). ### Timing A novice user can complete the Procedure described above in less than one hour. The time required to complete the molecular mechanics conformational search will increase with molecular complexity. However, in our experience this increase has not been substantial. Subsequent Gaussian computations will require significantly more computational time to complete, but the amount of active effort by the user is minimized because several steps have been automated with the use of Python scripts. A summary of the time required to complete various steps in the Procedure is shown below. - Steps 1 – 4 : < 10 min of active effort; ca. 1 – 30 minutes to complete the conformational search depending on the structural complexity of the candidate structure. - Steps 5 – 8 : 15 min - Steps 9 – 12 : 15 min - Step 13 : ca. < 60 min for the 3 -methylcyclohexanols; timing depends on the number of conformational isomers and the structural complexity of the candidate structure. ### Troubleshooting See [Supplementary Table]([URL] for Troubleshooting. ### Anticipated Results Following successful completion of the steps of the Procedure, six conformations of cis- 3 -methylcyclohexanol will be generated from the conformational search in Spartan, and the structure coordinates for each conformation will be exported to a “. sdf” file. Following execution of the Python script, “write-g 09 -inputs-sdf. py”, the directory “cis- 3 -methylcyclohexanol-gaussian_files” will be created, which will contain two Gaussian 09 input files for each conformation of the candidate structure. Once submitted to Gaussian 09, the input files having “opt_freq” in their title will instruct Gaussian to perform a geometry optimization and frequency calculation of the included structural coordinates. Additionally, the input files having “nmr” in their title will instruct Gaussian to calculate NMR shielding tensors of the optimized geometry. For reference, we have provided the Spartan conformational search files and the “. sdf” file as [Supplementary Data 2]([URL] and [Supplementary Data 3]([URL] respectively. Additionally, the Gaussian 09 input files resulting from use of the Python script are included in [Supplementary Data 4]([URL] ### References 1. Nicolaou, K. C. & Snyder, S. A. Chasing molecules that were never there: misassigned natural products and the role of chemical synthesis in modern structure elucidation. *Angew. Chem. Int. Ed*. 44, 1012 – 1044 (2005). - Hehre, W. J. A guide to molecular mechanics and quantum chemical calculations. Wavefunction, Inc., Irvine, CA, 2003. - Shao, Y., Molnar, L. F., Jung, Y., Kussmann, J. R., Ochsenfeld, C., Brown, S. T., Gilbert, A. T. B., Slipchenko, L. V., Levchenko, S. V., O Neill, D. P., DiStasio, R. A., Jr, Lochan, R. C., Wang, T., Beran, G. J. O., Besley, N. A., Herbert, J. M., Yeh Lin, C., Van Voorhis, T., Hung Chien, S., Sodt, A., Steele, R. P., Rassolov, V. A., Maslen, P. E., Korambath, P. P., Adamson, R. D., Austin, B., Baker, J., Byrd, E. F. C., Dachsel, H., Doerksen, R. J., Dreuw, A., Dunietz, B. D., Dutoi, A. D., Furlani, T. R., Gwaltney, S. R., Heyden, A., Hirata, S., Hsu, C. -P., Kedziora, G., Khalliulin, R. Z., Klunzinger, P., Lee, A. M., Lee, M. S., Liang, W., Lotan, I., Nair, N., Peters, B., Proynov, E. I., Pieniazek, P. A., Min Rhee, Y., Ritchie, J., Rosta, E., David Sherrill, C., Simmonett, A. C., Subotnik, J. E., Lee Woodcock, H., III, Zhang, W., Bell, A. T., Chakraborty, A. K., Chipman, D. M., Keil, F. J., Warshel, A., Hehre, W. J., Schaefer, H. F., III, Kong, J., Krylov, A. I., Gill, P. M. W. & Head-Gordon, M. Advances in methods and algorithms in a modern quantum chemistry program package. *Phys. Chem. Chem. Phys*. 8, 3172 (2006). - Gaussian 09, Revision A, Frisch, M. J., Trucks, G. W., Schlegel, H. B., Scuseria, G. E., Robb, M. A., Cheeseman, J. R., Scalmani, G., Barone, V., Mennucci, B., Petersson, G. A., Nakatsuji, H., Caricato, M., Li, X., Hratchian, H. P., Izmaylov, A. F., Bloino, J., Zheng, G., Sonnenberg, J. L., Hada, M., Ehara, M., Toyota, K., Fukuda, R., Hasegawa, J., Ishida, M., Nakajima, T., Honda, Y., Kitao, O., Nakai, H., Vreven, T., Montgomery, J. A., Jr., Peralta, J. E., Ogliaro, F., Bearpark, M., Heyd, J. J., Brothers, E., Kudin, K. N., Staroverov, V. N., Kobayashi, R., Normand, J., Raghavachari, K., Rendell, A., Burant, J. C., Iyengar, S. S., Tomasi, J., Cossi, M., Rega, N., Millam, N. J., Klene, M., Knox, J. E., Cross, J. B., Bakken, V., Adamo, C., Jaramillo, J., Gomperts, R., Stratmann, R. E., Yazyev, O., Austin, A. J., Cammi, R., Pomelli, C., Ochterski, J. W., Martin, R. L., Morokuma, K., Zakrzewski, V. G., Voth, G. A., Salvador, P., Dannenberg, J. J., Dapprich, S., Daniels, A. D., Farkas, Ö., Foresman, J. B., Ortiz, J. V., Cioslowski, J., Fox, D. J. Gaussian, Inc., Wallingford CT, 2009. - Jaguar, version 8. 0. [URL] (Schrödinger, LLC, New York, NY, 2013). - Bochevarov, A. D., Harder, E., Hughes, T. F., Greenwood, J. R., Braden, D. A., Philipp, D. M., Rinaldo, D., Halls, M. D., Zhang, J., Friesner, R. A. Jaguar: a high-performance quantum chemistry software program with strengths in life and materials sciences. *Int. J. Quantum Chem*. 113, 2110 – 2142 (2013). - Willoughby, P. H., Jansma, M. J. & Hoye, T. R. A guide to small-molecule structure assignment through computation of (1 H and 13 C) NMR chemical shifts. *Nature Protocols* 9, 643 – 660 (2014) - MacroModel, version 10. 0. [URL] (Schrödinger, LLC, New York, NY, 2013). - ChemBio 3 D Ultra 13. 0 Suite. [URL] - Smith, S. G. & Goodman, J. M. Assigning the stereochemistry of pairs of diastereoisomers using GIAO NMR shift calculation. *J. Org. Chem*. 74, 4597 – 4607 (2009). - Smith, S. G. & Goodman, J. M. Assigning stereochemistry to single diastereoisomers by GIAO NMR calculation: the DP 4 probability. *J. Am. Chem. Soc*. 132, 12946 – 12959 (2010). - Sarotti, A. M. & Pellegrinet, S. C. A multi-standard approach for GIAO 13 C NMR calculations. *J. Org. Chem*. 74, 7254 – 7260 (2009). - Sarotti, A. M. Successful combination of computationally inexpensive GIAO 13 C NMR calculations and artificial neural network pattern recognition: a new strategy for simple and rapid detection of structural misassignments. *Org. & Biomol. Chem*. 11, 4847 – 4859 (2013). - Lodewyk, M. W., Siebert, M. R. & Tantillo, D. J. Computational prediction of 1 H and 13 C chemical shifts: a useful tool for natural product, mechanistic, and synthetic organic chemistry. *Chem. Rev*. 112, 1839 – 1862 (2012). - Tantillo, D. J. Walking in the woods with quantum chemistry—applications of quantum chemical calculations in natural products research. *Nat. Prod. Rep*. 30, 1079 – 1086 (2013). ### Associated Publications 1. **A guide to small-molecule structure assignment through computation of (1 H and 13 C) NMR chemical shifts**. Patrick H Willoughby, Matthew J Jansma, and Thomas R Hoye. *Nature Protocols* 9 (3) 643 - 660 [doi: 10. 1038 /nprot. 2014. 042]([URL] - **Analysis of Seven-Membered Lactones by Computational NMR Methods: Proton NMR Chemical Shift Data are More Discriminating than Carbon**. Daniel J. Marell, Susanna J. Emond, Aman Kulshrestha, and Thomas R. Hoye. *The Journal of Organic Chemistry* 79 (2) 752 - 758 17 / 01 / 2014 [doi: 10. 1021 /jo 402627 s]([URL] - **Case Study of Empirical and Computational C...|$|E
50|$|XMind Free is the {{open-source}} package, and {{it supports}} the users to create mind maps in 10+ different structures freely. The drill down design allows the users {{to focus on}} a part of the mind map, and the local networking sharing feature enables users to share XMind files within the same local area network. The free edition also supports the import of MindManager and FreeMind <b>files,</b> <b>export</b> to image and text files. XMind 6 and later can also save the mind map to Evernote.|$|R
5000|$|Later {{versions}} of the software introduced new file formats. To support the new features, especially typographic, introduced with InDesign CS, both the program and its document format are not backward-compatible. Instead, InDesign CS2 has the backward-compatible INX (.inx) format, an XML-based document representation. InDesign CS versions updated with the 3.1 April 2005 update can read InDesign CS2-saved <b>files</b> <b>exported</b> to the [...]inx format. The InDesign Interchange format does not support versions earlier than InDesign CS. With InDesign CS 5, Adobe replaced INX with InDesign Markup Language (IDML), another XML-based document representation.|$|R
5000|$|Export reconstructed data as a time-sequence of <b>exported</b> <b>files.</b>|$|R
5000|$|... #Subtitle level 2: OpenDocument Format {{version in}} <b>exported</b> <b>files</b> ...|$|R
