5332|5719|Public
5|$|For graphs G and H, the {{question}} of whether G has a homomorphism to H corresponds to a CSP instance with only one kind of constraint, as follows. The variables are the vertices of G and the domain for <b>each</b> <b>variable</b> is the vertex set of H. An evaluation is a function that assigns to <b>each</b> <b>variable</b> an element of the domain, so a function f from V(G) to V(H). Each edge or arc (u,v) of G then corresponds to the constraint ((u,v), E(H)). This is a constraint expressing that the evaluation should map the arc (u,v) to a pair (f(u),f(v)) that is in the relation E(H), that is, to an arc of H. A solution to the CSP is an evaluation that respects all constraints, so it is exactly a homomorphism from G to H.|$|E
5|$|A third, more {{graphical}} way {{of describing}} a 2-satisfiability instance is as an implication graph. An implication graph is a directed graph {{in which there}} is one vertex per variable or negated variable, and an edge connecting one vertex to another whenever the corresponding variables are related by an implication in the implicative normal form of the instance. An implication graph must be a skew-symmetric graph, meaning that it has a symmetry that takes <b>each</b> <b>variable</b> to its negation and reverses the orientations of all of the edges.|$|E
5|$|In {{computer}} science, 2-satisfiability, 2-SAT or just 2SAT is a computational {{problem of}} assigning values to variables, {{each of which}} has two possible values, in order to satisfy a system of constraints on pairs of variables. It is a special case of the general Boolean satisfiability problem, which can involve constraints on more than two variables, and of constraint satisfaction problems, which can allow more than two choices for the value of <b>each</b> <b>variable.</b> But in contrast to those more general problems, which are NP-complete, 2-satisfiability can be solved in polynomial time.|$|E
30|$|The {{principle}} of each factor’s varimax should follow that {{the variance of}} <b>each</b> <b>variable’s</b> square will be a maximum, and no correlation is allowed between its factors.|$|R
30|$|Sample size: A {{sample size}} of 693 {{patients}} was defined. The sample was calculated according to published recommendations of 10 – 15 events for <b>each</b> dichotomous <b>variable,</b> and 10 – 15 (n- 1) for <b>each</b> categorical <b>variable.</b>|$|R
5000|$|... with vector [...] {{of reduced}} form errors that each depends on all {{structural}} errors, where the matrix A must be nonsingular for the reduced form to exist and be unique. Again, <b>each</b> endogenous <b>variable</b> depends on potentially <b>each</b> exogenous <b>variable.</b>|$|R
5|$|The set of all {{solutions}} to a 2-satisfiability instance has {{the structure of}} a median graph, in which an edge corresponds to the operation of flipping the values of a set of variables that are all constrained to be equal or unequal to each other. In particular, by following edges in this way one can get from any solution to any other solution. Conversely, any median graph can be represented as the set of {{solutions to}} a 2-satisfiability instance in this way. The median of any three solutions is formed by setting <b>each</b> <b>variable</b> to the value it holds in the majority of the three solutions. This median always forms another solution to the instance.|$|E
5|$|These {{non-human}} antibodies {{are recognized}} as foreign by the human immune system and may be rapidly cleared from the body, provoke an allergic reaction, or both. To avoid this, parts of the antibody can be replaced with human amino acid sequences, or pure human antibodies can be engineered. If the constant region is replaced with the human form, the antibody is termed chimeric and the substem used was -xi-. Part of the variable regions may also be substituted, in which case it is called humanized and -zu- was used; typically, everything is replaced except the complementarity determining regions (CDRs), the three loops of amino acid sequences at the outside of <b>each</b> <b>variable</b> region that bind to the target structure, although some other residues may have to remain non-human {{in order to achieve}} good binding. Partly chimeric and partly humanized antibodies used -xizu-. These three substems did not indicate the foreign species used for production. Thus, the human/mouse chimeric antibody basiliximab ends in -ximab just as does the human/macaque antibody gomiliximab. Purely human antibodies used -u-.|$|E
25|$|Reflexivity. For <b>each</b> <b>variable</b> x, x = x.|$|E
50|$|Since each {{inequality}} can {{be replaced}} by an equality and a slack <b>variable,</b> this means <b>each</b> primal <b>variable</b> corresponds to a dual slack <b>variable,</b> and <b>each</b> dual <b>variable</b> corresponds to a primal slack variable. This relation allows us to speak about complementary slackness.|$|R
50|$|Attention {{should also}} {{be paid to the}} {{implementation}} of the consistency check, as it is usually carried out after each read operation or at the end of <b>each</b> <b>variable's</b> life period. Carefully implementing this check can minimize the CPU time and code size for this application.|$|R
30|$|The process generates ten PV for <b>each</b> {{indicator}} <b>variable.</b>|$|R
25|$|For <b>each</b> <b>variable,</b> the {{denominator}} is the {{determinant of}} the matrix of coefficients, while the numerator is the determinant of a matrix in which one column {{has been replaced by}} the vector of constant terms.|$|E
25|$|To <b>each</b> <b>variable</b> in {{the primal}} space {{corresponds}} an inequality to satisfy in the dual space, both indexed by output type. To each inequality to satisfy in the primal space corresponds a {{variable in the}} dual space, both indexed by input type.|$|E
25|$|A Venn diagram is a {{representation}} of a Boolean operation using shaded overlapping regions. There is one region for <b>each</b> <b>variable,</b> all circular in the examples here. The interior and exterior of region x corresponds respectively to the values 1 (true) and 0 (false) for variable x. The shading indicates {{the value of the}} operation for each combination of regions, with dark denoting 1 and light 0 (some authors use the opposite convention).|$|E
5000|$|Homogeneity of variances: <b>Each</b> {{dependent}} <b>variable</b> {{must demonstrate}} similar levels of variance across <b>each</b> independent <b>variable.</b> Violation of this assumption can be conceptualised as a correlation existing between the variances {{and the means}} of dependent variables. This violation is often called 'heteroscedasticity' and can be tested for using Levene's test.|$|R
30|$|M co-efficients of <b>each</b> {{clinical}} <b>variable</b> {{used in the}} model.|$|R
2500|$|There {{are ways}} of using probabilities that are {{definitely}} not Monte Carlo simulations [...] for example, deterministic modeling using single-point estimates. <b>Each</b> uncertain <b>variable</b> within a model is assigned a “best guess” estimate. [...] Scenarios (such as best, worst, or most likely case) for <b>each</b> input <b>variable</b> are chosen {{and the results}} recorded.|$|R
25|$|To {{develop a}} Bayesian network, we often first develop a DAG G such {{that we believe}} X {{satisfies}} the local Markov property with respect to G. Sometimes this is done by creating a causal DAG. We then ascertain the conditional probability distributions of <b>each</b> <b>variable</b> given its parents in G. In many cases, in particular in the case where the variables are discrete, if we define the joint distribution of X to be the product of these conditional distributions, then X is a Bayesian network with respect to G.|$|E
25|$|The {{study found}} {{significant}} differences in overall wing size and in the physical dimensions of wings. Males tended to have larger wings than females, and were heavier than females, on average. Both males and females had similar thorax dimensions (wing muscles are contained in the thorax). Female monarchs tended to have thicker wings, which is thought to convey greater tensile strength. This would make female wings {{less likely to be}} damaged during migration. Also, females had lower wing loading than males (wing loading is a value derived from the ratio of wing size to body weight), which would mean females require less energy to fly. A table with the average measurements of <b>each</b> <b>variable</b> is shown.|$|E
25|$|The eigendecomposition of a {{symmetric}} positive semidefinite (PSD) matrix yields an orthogonal {{basis of}} eigenvectors, {{each of which}} has a nonnegative eigenvalue. The orthogonal decomposition of a PSD matrix is used in multivariate analysis, where the sample covariance matrices are PSD. This orthogonal decomposition is called principal components analysis (PCA) in statistics. PCA studies linear relations among variables. PCA is performed on the covariance matrix or the correlation matrix (in which <b>each</b> <b>variable</b> is scaled to have its sample variance equal to one). For the covariance or correlation matrix, the eigenvectors correspond to principal components and the eigenvalues to the variance explained by the principal components. Principal component analysis of the correlation matrix provides an orthonormal eigen-basis for the space of the observed data: In this basis, the largest eigenvalues correspond to the principal components that are associated with most of the covariability among a number of observed data.|$|E
30|$|The {{frequency}} of occurrence of species at <b>each</b> phenological <b>variable</b> within <b>each</b> angle was calculated and the following parameters were estimated for each study site: the mean angle a, the angular dispersal, confidence limits of the frequency distribution for <b>each</b> phenological <b>variable,</b> and vector r, a measure of concentration around the mean angle.|$|R
25|$|<b>Each</b> action <b>variable</b> is a {{separate}} integer, {{a separate}} quantum number.|$|R
5000|$|There {{are ways}} of using probabilities that are {{definitely}} not Monte Carlo simulations [...] - [...] for example, deterministic modeling using single-point estimates. <b>Each</b> uncertain <b>variable</b> within a model is assigned a “best guess” estimate. Scenarios (such as best, worst, or most likely case) for <b>each</b> input <b>variable</b> are chosen {{and the results}} recorded.|$|R
500|$|... {{for every}} compactly {{supported}} continuous function f. [...] As a measure, the n-dimensional delta function {{is the product}} measure of the 1-dimensional delta functions in <b>each</b> <b>variable</b> separately. Thus, formally, with , one has ...|$|E
500|$|An {{important}} {{example of}} a function of several variables {{is the case of}} a scalar-valued function [...] on a domain in Euclidean space Rn (e.g., on R2 or R3). In this case f has a partial derivative ∂f/∂x'j with respect to <b>each</b> <b>variable</b> x'j. At the point a, these partial derivatives define the vector ...|$|E
500|$|This {{immediately}} {{leads to}} a linear time algorithm for testing satisfiability of 2-CNF formulae: simply perform a strong connectivity analysis on the implication graph and check that <b>each</b> <b>variable</b> and its negation belong to different components. However, as Aspvall et al. also showed, it also {{leads to a}} linear time algorithm for finding a satisfying assignment, when one exists. Their algorithm performs the following steps: ...|$|E
5000|$|The data class exposes <b>each</b> {{attribute}} (<b>variable</b> or property) {{through a}} getter.|$|R
30|$|Step-II: Step-wise regression: Forward {{logistic}} {{selection and}} backward elimination methods are applied and {{different combinations of}} the ratios which are significantly different in mean by T-test are tested and the final set of ratio are {{selected on the basis}} of the statistical significance of the estimated parameters, the sign of <b>each</b> <b>variable’s</b> coefficient and the model’s classification results.|$|R
50|$|Hungarian {{notation}} {{was designed}} to be language-independent, and found its first major use with the BCPL programming language. Because BCPL has no data types other than the machine word, nothing in the language itself helps a programmer remember variables' types. Hungarian notation aims to remedy this by providing the programmer with explicit knowledge of <b>each</b> <b>variable's</b> data type.|$|R
500|$|Next to 2-satisfiability, {{the other}} major {{subclass}} of satisfiability problems that can be solved in polynomial time is Horn-satisfiability. In this class of satisfiability problems, the input is again a formula in conjunctive normal form. It can have arbitrarily many literals per clause but at most one positive literal. [...] found a generalization of this class, renamable Horn satisfiability, that can still be solved in polynomial time {{by means of an}} auxiliary 2-satisfiability instance. A formula is renamable Horn when it is possible to put it into Horn form by replacing some variables by their negations. To do so, Lewis sets up a 2-satisfiability instance with one variable for <b>each</b> <b>variable</b> of the renamable Horn instance, where the 2-satisfiability variables indicate whether or not to negate the corresponding renamable Horn variables.|$|E
500|$|... {{consider}} {{a model of}} classroom scheduling [...] in which a set of n teachers must be scheduled to teach each of m cohorts of students. The number of hours per week that teacher i spends with cohort j is described by entry Rij of a matrix R given as input to the problem, and each teacher also has a set of hours during {{which he or she}} is available to be scheduled. As they show, the problem is NP-complete, even when each teacher has at most three available hours, but it can be solved as an instance of 2-satisfiability when each teacher only has two available hours. (Teachers with only a single available hour may easily be eliminated from the problem.) In this problem, <b>each</b> <b>variable</b> vij corresponds to an hour that teacher i must spend with cohort j, the assignment to the variable specifies whether that hour is the first or the second of the teacher's available hours, and there is a 2-satisfiability clause preventing any conflict of either of two types: two cohorts assigned to a teacher {{at the same time as}} each other, or one cohort assigned to two teachers at the same time.|$|E
500|$|... apply 2-satisfiability to {{a problem}} of sports scheduling, in which the pairings of a {{round-robin}} tournament have already been chosen and the games must be assigned to the teams' stadiums. In this problem, it is desirable to alternate home and away games to the extent possible, avoiding [...] "breaks" [...] in which a team plays two home {{games in a row}} or two away games in a row. At most two teams can avoid breaks entirely, alternating between home and away games; no other team can have the same home-away schedule as these two, because then it would be unable to play the team with which it had the same schedule. Therefore, an optimal schedule has two breakless teams and a single break for every other team. Once one of the breakless teams is chosen, one can set up a 2-satisfiability problem in which <b>each</b> <b>variable</b> represents the home-away assignment for a single team in a single game, and the constraints enforce the properties that any two teams have a consistent assignment for their games, that each team have at most one break before and at most one break after the game with the breakless team, and that no team has two breaks. Therefore, testing whether a schedule admits a solution with the optimal number of breaks can be done by solving a linear number of 2-satisfiability problems, one for each choice of the breakless team. A similar technique also allows finding schedules in which every team has a single break, and maximizing rather than minimizing the number of breaks (to reduce the total mileage traveled by the teams).|$|E
40|$|CEA; Communaute Urbaine de Bordeaux; Conseil Regional dAquitaine; GDR Informatique Mathmatique (CNRS); INRIA; TotalHolographic {{reductions}} between some Holant problems and some #CSP(H d) problems are built, where H d is some complex value binary function. By {{the complexity of}} these Holant problems, for each integer d≥ 2, #CSP(H d) is in P when <b>each</b> <b>variables</b> appears at most d times, while it is #P-hard when <b>each</b> <b>variables</b> appears at most d+ 1 times. #CSP(H d) counts weighted summation of graph homomorphisms from input graph G to graph H d, and the maximum occurrence of variables is the maximum degree of G. We conjecture the converse of holographic reduction holds for most of #Bi-restriction Constraint Satisfaction Problems, which {{can be regarded as}} a generalization of a known result about counting graph homomorphisms. It is proved that the converse of holographic reduction holds for some classes of problems. © 2010 Springer-Verlag Berlin Heidelberg...|$|R
5000|$|In {{addition}} {{we assume}} that for <b>each</b> condition <b>variable</b> , there is a queue ...|$|R
5000|$|The {{sum of the}} {{contrast}} coefficients per <b>each</b> code <b>variable</b> must equal zero.|$|R
