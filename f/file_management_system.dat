58|10000|Public
500|$|Features from COMTRAN {{incorporated}} into COBOL included formulas, the [...] clause, an improved IF statement, which obviated {{the need for}} GO TOs, and a more robust <b>file</b> <b>management</b> <b>system.</b>|$|E
5000|$|... #Subtitle level 2: The System 5000 Turnkey <b>File</b> <b>Management</b> <b>System</b> ...|$|E
5000|$|An {{integrated}} <b>file</b> <b>management</b> <b>system</b> {{which allows}} files {{to be offered}} for download.|$|E
30|$|Articles {{that focus}} on {{studying}} or proposing normal <b>file</b> <b>management</b> <b>systems.</b>|$|R
50|$|Many organisations {{are still}} {{applying}} the conventional <b>file</b> <b>management</b> <b>systems,</b> {{due to the}} difficulty in building a proper and complete archives for data management.|$|R
40|$|The desktop metaphor {{with its}} {{hierarchical}} structure of folders {{is the basis}} of almost all graphical <b>file</b> <b>management</b> <b>systems.</b> Despite this popularity, these systems suffer from several problems, including the restrictiveness of the single inheritance structure of hierarchical <b>file</b> <b>management.</b> Although various alternative systems have been proposed, none of these have gained popularity. We argue that the reason for this failure is that these systems have generally proposed complete alternatives to the hierarchical system, thus ignoring many of its positive aspects. In this paper we describe a 3 D graphical <b>file</b> <b>management</b> which complements conventional 2 D hierarchical folder structures by allowing visualisation of alternative file relationships...|$|R
50|$|A <b>file</b> <b>management</b> <b>system</b> that {{provides}} storage {{and access to}} source and object code.|$|E
50|$|Also like CP-V, {{the design}} was an {{integrated}} <b>file</b> <b>management</b> <b>system.</b> Files were equally and compatibly available to programs executing in any mode. The files could be sorted in indexed, keyed, relative, or consecutive order.|$|E
50|$|PeopleDoc {{started as}} Novapost in 2007, {{on the campus}} of the HEC Business School in Paris with an idea to replace postmail: a {{platform}} intended to provide a single digital <b>file</b> <b>management</b> <b>system</b> that organizes and tracks organizationsâ€™ employee and policy information.|$|E
40|$|The {{objective}} of the Distributed Access View Integrated Database (DAVID) project {{is the development of}} an easy to use computer system with which NASA scientists, engineers and administrators can uniformly access distributed heterogeneous databases. Basically, DAVID will be a database <b>management</b> <b>system</b> that sits alongside already existing database and <b>file</b> <b>management</b> <b>systems.</b> Its function is to enable users to access the data in other languages and file systems without having to learn the data manipulation languages. Given here is an outline of a talk on the DAVID project and several charts...|$|R
5000|$|Diskpart.exe, Defrag.exe and fsutil.exe (Disk <b>management,</b> Defragmentation and <b>file</b> <b>system</b> <b>management)</b> ...|$|R
5000|$|The Apple III System Utilities program shipped {{with each}} Apple III computer. It {{provides}} the user interface {{of the operating}} system itself, for <b>system</b> configuration and <b>file</b> <b>management.</b> The <b>System</b> Utilities program is menu-driven and performed tasks in three categories: ...|$|R
50|$|The most {{important}} extension is the disk handler. In Atari DOS 2.0, {{this was the}} <b>File</b> <b>Management</b> <b>System</b> (FMS), an implementation of a file system loaded from a floppy disk. This meant at least an additional 32 KB Random access memory was needed to run with DOS loaded.|$|E
50|$|ROFS is a <b>file</b> <b>management</b> <b>system</b> for {{handling}} a virtual disc image, {{an extension of}} the CD-ROM standard. It has no limitations on file name format, or number of directories or files, and has been designed with compatibility with ADX and Sofdec in mind. It is now known as CRI ROFS.|$|E
50|$|When Dataproducts {{was first}} formed, Informatics was {{created as a}} {{subsidiary}} that did contract software work and was headed by Walter F. Bauer. In 1964, Informatics acquired Advanced Information Systems from Hughes Dynamics. The AIS <b>file</b> <b>management</b> <b>system</b> led to MARK IV, a fourth-generation programming language {{that was the first}} software product to have cumulative sales of $10 million and later $100 million. DataProducts spun Informatics off as a public corporation in 1968. Beginning in 1983, Sterling Software made an unsolicited offer that became a takeover attempt and finally resulted in a merger in 1985.|$|E
5000|$|File and Folder {{actions for}} file {{transfers}} with FTP and SFTP and local <b>file</b> <b>system</b> <b>management</b> ...|$|R
50|$|GetSimple CMS {{is a free}} web Content <b>Management</b> <b>System</b> {{with the}} primary goal to be simple and easy to use. It {{is based on the}} {{programming}} language PHP and uses XML files to store the content. As a flat <b>file</b> Content <b>Management</b> <b>System,</b> it is in contrast to other CMS software, that tend to use MySQL databases.|$|R
40|$|The {{document}} {{is the product}} of two years of research and work field with different public institutions of Chile. During that period, the author advised various agencies of State Administration on the design and implementation of their <b>file</b> <b>management</b> <b>systems</b> so that they can become active agents fulfilling the Transparency Law and also, to adjust with the Chilean record regulations. Introduces in detail all the steps needed to design the institutional records <b>management</b> <b>system,</b> considering as a theoretical base the life cycle of documents, as well as the practical aspects that will allow the operation: processes, procedures, technical instruments (classification chart and documents withholding chart or retention schedule, etc.), technological and human resources, as well as indicators to measure the performance of the system. Finally delivers the components and necessary guidelines to implement, and later, evaluate the system desig...|$|R
50|$|Windows Explorer {{was first}} {{included}} with Windows 95 {{as a replacement}} for File Manager, which came with all versions of Windows 3.x operating systems. Explorer could be accessed by double-clicking the new My Computer desktop icon, or launched from the new Start Menu that replaced the earlier Program Manager. There is also a shortcut key combination: Windows key + E. Successive versions of Windows (and in some cases, Internet Explorer) introduced new features and capabilities, removed other features, and generally progressed from being a simple file system navigation tool into a task-based <b>file</b> <b>management</b> <b>system.</b>|$|E
5000|$|... mobilEcho, {{created by}} GroupLogic, Inc. is a mobile <b>file</b> <b>management</b> <b>system</b> for iPhone and iPad. It was first {{introduced}} on May 23, 2011 at TechCrunch Disrupt in New York City. mobilEcho (mE) is information technology (IT) software for securely integrating iPhones, iPads and Android phones and tablets with corporate file servers and networks. mobilEcho is installed on corporate file servers by IT departments and installed on iPhones, iPads and Android phones and tablet computers by users; it allows for storage and secure transfer of files back and forth directly between servers and iPhones, iPads and Android phones and tablets.|$|E
50|$|When {{the work}} evolves to a stage where it {{requires}} an external review or {{is ready to}} be pushed on to the next process, the user checks in his or her files. This check-in process hands files off to TACTIC, which acts as a gatekeeper to the repository where all the files are kept. TACTIC also acts as a librarian, sorting the files it receives into the appropriate location in the repository. If specified by the system, file names will also be renamed accordingly to make their locations more identifiable (a function cognate to card cataloguing). TACTIC's automated <b>file</b> <b>management</b> <b>system</b> ensures that files are uniformly named and appear in predictable and reliable locations, effectively eliminating human error in the repository.|$|E
40|$|This report {{contains}} {{copies of}} {{nearly all of the}} technical papers and viewgraphs presented at the National Space Science Data Center (NSSDC) Conference on Mass Storage Systems and Technologies for Space and Earth Science Applications. This conference served as a broad forum for the discussion of a number of important issues in the field of mass storage systems. Topics include magnetic disk and tape technologies, optical disk and tape, software storage and <b>file</b> <b>management</b> <b>systems,</b> and experiences {{with the use of a}} large, distributed storage system. The technical presentations describe, among other things, integrated mass storage systems that are expected to be available commercially. Also included is a series of presentations from Federal Government organizations and research institutions covering their mass storage requirements for the 1990 s...|$|R
40|$|The {{study of}} {{algorithms}} and data structures for low-level <b>file</b> <b>system</b> <b>management</b> is a well-explored research topic. File system data structures must be persistent across reboots. This has constrained {{the research of}} low-level <b>file</b> <b>system</b> <b>management</b> to algorithms which operate on diskbased structures. The advent of low latency, non-volatile memories such as Magnetic Random Access Memory (MRAM) justify revisiting the study of data structures and algorithms for low-level <b>file</b> <b>system</b> <b>management.</b> The Linking <b>File</b> <b>System</b> (LiFS) is a project which has taken advantage of MRAM technology to offer highperformance, enhanced semantic organization of files. We have taken this further, and have implemented an allocator and a file offset indexing algorithm which makes use of MRAM-based Red-Black Trees. We compare our algorithmâ€™s performance with earlier disk-based and MRAMbased techniques. We discuss the relative benefits and weaknesses of each approach...|$|R
40|$|CEM is {{an email}} <b>management</b> <b>system</b> which stores its email in a concept lattice {{rather than in}} the usual tree structure. By using such a {{conceptual}} multi-hierarchy, the system provides more flexibility in retrieving stored emails. The paper presents the underlying mathematical structures, discusses requirements for their maintenance and presents their implementation. 1 Motivation The way standard email <b>management</b> <b>systems</b> store mails is directly derived from the tree structure of <b>file</b> <b>management</b> <b>systems.</b> This has the advantage that trees have a simple structure which can easily be explained to novice users. The disadvantage is that at the moment of storing an email the user already has to foresee the way she is going to retrieve the mail later. The tree structure forces her to decide at that moment which criteria to consider as primary and which as secondary. For instance, when storing an email regarding the organization of a conference, one has to decide whether to organize one' [...] ...|$|R
5000|$|IBM's COMTRAN language, {{invented by}} Bob Bemer, was {{regarded}} as a competitor to FLOW-MATIC by a short-range committee made up of colleagues of Grace Hopper.Some of its features were not incorporated into COBOL so that it would not look like IBM had dominated the design process, and Jean Sammet said in 1981 {{that there had been a}} [...] "strong anti-IBM bias" [...] from some committee members (herself included).In one case, after Roy Goldfinger, author of the COMTRAN manual and intermediate-range committee member, attended a subcommittee meeting to support his language and encourage the use of algebraic expressions, Grace Hopper sent a memo to the short-range committee reiterating Sperry Rand's efforts to create a language based on English.In 1980, Grace Hopper commented that [...] "COBOL 60 is 95% FLOW-MATIC" [...] and that COMTRAN had had an [...] "extremely small" [...] influence. Furthermore, she said that she would claim that work was influenced by both FLOW-MATIC and COMTRAN only to [...] "keep other people happy they wouldn't try to knock us out".Features from COMTRAN incorporated into COBOL included formulas, the [...] clause, an improved [...] statement, which obviated the need for GO TOs, and a more robust <b>file</b> <b>management</b> <b>system.</b>|$|E
40|$|Computer {{users have}} been facing a {{progressively}} serious problem, namely, how to efficiently manage computer files {{so as to}} not only facilitate themselves to use the files, but also save the scare storage resource. Although {{there are a lot}} of file management systems available so far, none of them, to the best of our knowledge, can automatically address the deletion/preservation problem of files. To fill this gap, this study explores the value of artificial intelligence techniques in file management. Specifically, this paper develops an intelligent agent based personal <b>file</b> <b>management</b> <b>system,</b> where Case Based Reasoning (CBR) is employed to guide file deletion and preservation. Through some practical experiments, we validate the effectiveness and efficiency of the developed <b>file</b> <b>management</b> <b>system...</b>|$|E
40|$|The {{preliminary}} {{design of a}} virtual environment based <b>file</b> <b>management</b> <b>system</b> is described. 1. Background Current virtual environments model real or imagined scenes at various scales. It is the premise of this paper that VE {{can also be used}} in more abstract settings, in particular in a <b>file</b> <b>management</b> <b>system.</b> 1. 1. Pre-Virtual Environment 3 -Dimensional Models of Linear Systems Long before virtual reality, people used 3 -dimensional schemes for visualizing abstractions which are essentially linear in nature. For example, the traditional physical card catalog in a library was essentially a linear alphabetical list of records arranged spatially in drawers, cabinets, and rows of cabinets for efficient access. The home of William Faulkner in Oxford, Mississippi, has been preserved as a museum by the University of Mississippi. Visitors to his home can look into his study in which he wrote much of the novel The Fable. Evidence of some of the development of this novel remains on the walls [...] ...|$|E
25|$|Oracle Secure Enterprise Search (SES), Oracle's enterprise-search offering, gives users {{the ability}} to search for content across {{multiple}} locations, including websites, XML files, <b>file</b> servers, content <b>management</b> <b>systems,</b> enterprise resource planning <b>systems,</b> customer relationship <b>management</b> <b>systems,</b> business intelligence systems, and databases.|$|R
5000|$|Already {{established}} {{as a leader in}} the key-to-disk data entry system market by the 1300 series, in the early 1970s Inforex tried to expand by creating a new product category: turnkey <b>file</b> <b>management</b> <b>systems.</b> The impetus came on a request from Westinghouse, who were trying to keep track of 750,000 engineering drawings (known then as [...] "blueprints" [...] after the ink color used by the large-format printers) via a manual system. In that era, most business applications were written in COBOL, and could take up to two years to develop from the time a user department requested the application. The System 5000 anticipated by more than a decade early PC applications like PFS:File and dBASE II. The entire system was driven by simple two-letter commands entered on video terminals.|$|R
30|$|This section {{describes}} {{the design and}} implementation of the integrated main memory and <b>file</b> <b>system</b> <b>management</b> for NV memory. The implementation is described for the Linux kernel.|$|R
40|$|The BIBCON <b>file</b> <b>management</b> <b>system,</b> {{designed}} for use on IBM 360 systemÂ equipment, performs two basic functions: (1) Â it creates MARC structured, bibliographic records from untagged input data; (2) from these records it produces page image output for book catalogs. The system accepts data from several different input devices and can produce a variety of output formats by line printer, photocomposition, or computer output microform (COM) ...|$|E
40|$|Abstract:-This paper designs {{a set of}} Java Sockets {{based on}} {{application}} programming interface (API) to realize the remote <b>file</b> <b>management</b> <b>system</b> (RFMS) running on different operating systems, and realizes a Client/Server structure based on RFMS with graphic interface. This set of API {{is similar to the}} local file operation classes of the Sun JDK, with which the programmers can realize a RFMS satisfying their requirements conveniently and rapidly...|$|E
40|$|The paper {{describes}} {{an approach to}} digital design grounded in processes of Indigenous collective memory making. We claim the research should be understood as performative knowledge making, and accounting {{it should also be}} performative. Accordingly we present four texts generated in the course of our research as an exhibit. They attest design processes for a <b>file</b> <b>management</b> <b>system</b> TAMI. We briefly theorise our approach as exemplifying Suchman 2 Ì† 7 s 2 Ì† 7 located accountability 2 Ì† 7...|$|E
5000|$|<b>File</b> <b>system</b> <b>management,</b> <b>file</b> modification, and {{streaming}} text {{operations are}} implemented with the Scripting Runtime Library [...] This provides {{objects such as}} FileSystemObject, File, and TextStream, which expose the Windows file system to the programmer.|$|R
40|$|Abstract. Integrated circuit {{cards or}} smart cards are now well-known. Applications such as {{electronic}} purses (cash units stored in cards), subscriber identification cards used in cellular telephone or access keys for pay-TV and information highways emerge {{in many places}} with millions of users. More services are required by applications providers and card holders. Mainly, new integrated circuit cards evolve towards non-predefined multi-purpose, open and multi-user applications. Today, operating systems implemented into integrated circuit cards cannot respond to these new trends. They have evolved from simple operating systems defining an hardware abstraction level up to <b>file</b> <b>management</b> <b>systems</b> or database <b>management</b> <b>systems</b> where the card behavior was defined once at the manufacturing level or by the card issuer. The needs for open and flexible card life cycle enabling to accommodate executable code loaded by different service providers require {{a new generation of}} smart cards. Operating systems based on object-oriented technologies are key components for future integrated circuit cards applications...|$|R
5000|$|... 2001: LSC, Inc., an Eagan, Minnesota {{company that}} {{developed}} Storage and Archive <b>Management</b> <b>File</b> <b>System</b> (SAM-FS) and Quick File System QFS file systems for backup and archive ...|$|R
