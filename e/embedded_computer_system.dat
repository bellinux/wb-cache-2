46|10000|Public
50|$|A modern chart {{recorder}} is an <b>embedded</b> <b>computer</b> <b>system</b> with an analog to digital converter, a microcontroller, and a hard-copy printing device; such instruments allow great flexibility in signal processing, variable chart speed on process upsets, {{and can also}} communicate their measurements to remote points.|$|E
50|$|A {{computer}}-on-module (COM) {{is a type}} of single-board computer (SBC), a subtype of an <b>embedded</b> <b>computer</b> <b>system.</b> An {{extension of}} the concept of system on chip (SoC) and system in package (SiP), COM lies between a full-up computer and a microcontroller in nature. It is very similar to a system on module (SOM).|$|E
50|$|The {{goal was}} to replace {{specialised}} languages PROL2 (ПРОЛ2) (assigned for developing onboard complex software for <b>embedded</b> <b>computer</b> <b>system</b> Biser-4 (Бисер-4) on board of Buran), DIPOL (ДИПОЛЬ) (assigned for developing software for ground maintenance computer system of Buran) and LAKS (ЛАКС) (assigned for modelling) used in the Buran project with one universal programming language.|$|E
5000|$|Comparison of <b>embedded</b> <b>computer</b> <b>systems</b> {{on board}} the Mars rovers ...|$|R
40|$|Ada {{has been}} {{designed}} explicitly for <b>embedded</b> <b>computer</b> <b>systems</b> programming. As {{a significant number of}} <b>embedded</b> <b>computer</b> <b>systems</b> are distributed, the presence in Ada of constructs for concurrent programming has raised considerable expectation about the possibility of programming distributed systems in Ada. In fact, many attempts in this direction have been made, but they have been obstacled by difficulties raised by the language definition...|$|R
50|$|This format {{was created}} for <b>embedded</b> <b>computer</b> <b>systems</b> by a {{consortium}} including Motorola and Ampro. EBX systems typically were embedded PowerPC or PowerQUICC based.|$|R
50|$|In the 1970s, the US Department of Defense (DoD) was {{concerned}} {{by the number of}} different programming languages being used for its <b>embedded</b> <b>computer</b> <b>system</b> projects, many of which were obsolete or hardware-dependent, and none of which supported safe modular programming. In 1975, a working group, the High Order Language Working Group (HOLWG), was formed with the intent to reduce this number by finding or creating a programming language generally suitable for the department's and the UK Ministry of Defence requirements. After many iterations beginning with an original Straw man proposal the eventual programming language was named Ada. The total number of high-level programming languages in use for such projects fell from over 450 in 1983 to 37 by 1996.|$|E
40|$|Hardware/Software Interface {{plays an}} {{important}} role in co-design of the <b>embedded</b> <b>computer</b> <b>system.</b> It links the software part and the hardware part of the system. The design process supports software interface implementation and hardware interface synthesis. This report shows how the hardware and software interfaces can be implemented by using bus extended technology in <b>embedded</b> <b>computer</b> <b>system,</b> which includes the primitive interface, the synchronous interface and the data communication protocol between the hardware and the software...|$|E
40|$|Abstract:- An <b>embedded</b> <b>computer</b> <b>system</b> is {{proposed}} for ubiquitous communication systems in this paper. The theme includes subjects on systems of ubiquitous communication and embedded computer {{to the next}} generation. Fundamental concept and design of the ubiquitous communication system is first described, which is thought of cellular phone services supported by enhanced reliable data and high quality pictures. Configuration and characteristics of an <b>embedded</b> <b>computer</b> <b>system</b> (or the ubiquitous computer) is secondly described to support the services, which is also thought of enhancement of presently applied ubiquitous tag system. A prototype model is designed and fabricated to evaluate basic capabilities for a future communication and computer services. Key-Words:- Ubiquitous communication, embedded computer, high quality pictures...|$|E
40|$|Database query {{languages}} on relations (for example SQL) make {{it possible}} to join two relations. This operation is very common in desktop/server database systems but unfortunately query processing <b>systems</b> in networked <b>embedded</b> <b>computer</b> <b>systems</b> currently do not support this operation; specifically, the query processing systems TAG, TinyDB, Cougar do not support this. We show how a prioritized medium access control (MAC) protocol can be used to efficiently execute the database operation join for networked <b>embedded</b> <b>computer</b> <b>systems</b> where all <b>computer</b> nodes are in a single broadcast domain...|$|R
50|$|The {{language}} and design methodology {{were created by}} Rainer Dömer and Daniel Gajski at the Centre for <b>Embedded</b> <b>Computer</b> <b>Systems</b> at University of California, Irvine in 2001.|$|R
50|$|The <b>embedded</b> <b>computer</b> <b>systems</b> {{on board}} the Mars rovers sent by NASA must {{withstand}} the high radiation levels and large temperature changes in space. For this reason their computational resources are limited compared to systems commonly used on Earth.|$|R
40|$|This project aims {{to develop}} an {{instrument}} {{that is capable of}} moving vertically in a controlled manner along a taut string from the sea surface to a predetermined depth while measuring pertinent seawater parameters. The main focus will be to specify, design and implement an <b>embedded</b> <b>computer</b> <b>system</b> that realizes the instrument. </p...|$|E
40|$|This work {{presents}} {{a model for}} patient monitoring in Intensive Care Units (ICU), using a WWW application tool- Micro WEB-Server (MWS) – an <b>embedded</b> <b>computer</b> <b>system,</b> in order to monitor physiological data, obtained by standard monitors, captured, made available via WEB and temporarily stored (previous 24 hours data). Monitors are connected to, also standard sensors connected to the patient. For the present model, the following data were chosen: (a) bod...|$|E
40|$|Real-time {{programming}} is a software engineering discipline {{that has been}} around ever {{since the dawn of}} digital computing. The dream of real-time programmers is to unlock the virtually unlimited potential of software for embedded computer systems [...] digital computers that are supposed to behave like analog devices. The perfect <b>embedded</b> <b>computer</b> <b>system</b> is invisibly hybrid, it works according to the largely unidentified laws of embedded software but acts according to the laws of physics. The critical interface between embedded software and physics is real-time and yet, while physical processes evolve in real-time, software processes do not. Only the <b>embedded</b> <b>computer</b> <b>system</b> as a whole [...] embedded software and hardware [...] determines a complex notion of so-called soft-time to which the software processes adhere: mapping soft-time to real-time is the art of real-time programming. We discuss various realtime programming models that support the development of real-time programs based on different abstractions of soft-time. We informally introduce a real-time process model to study (1) the compositionality of the real-time programming models and (2) the semantics of real-time programs developed in these models...|$|E
40|$|Software {{quality metrics}} was {{extended}} to cover distributed <b>computer</b> <b>systems.</b> Emphasis is placed on studying <b>embedded</b> <b>computer</b> <b>systems</b> and on viewing them within a system life cycle. The hierarchy of quality factors, criteria, and metrics was maintained. New software quality factors were added, including survivability, expandability, and evolvability...|$|R
50|$|His {{research}} has been recognized by Best Paper Awards and Best Paper Award Nominations at several conferences. Dutt currently serves as Associate Editor of Association for Computing Machinery Transactions on <b>Embedded</b> <b>Computer</b> <b>Systems</b> (TECS) and of IEEE Transactions on VLSI Systems (TVLSI).|$|R
40|$|EMBEDDED COMPUTER SYSTEMS are now everywhere: from {{alarm clocks}} to PDAs, from mobile phones to cars, {{almost all the}} devices we use are {{controlled}} by <b>embedded</b> <b>computer</b> <b>systems.</b> An important class of <b>embedded</b> <b>computer</b> <b>systems</b> is that of real-time systems, which have to fulfill strict timing requirements. As realtime systems become more complex, they are often implemented using distributed heterogeneous architectures. The main objective of this thesis is to develop analysis and synthesis methods for communication-intensive heterogeneous hard real-time systems. The systems are heterogeneous {{not only in terms}} of platforms and communication protocols, but also in terms of scheduling policies. Regarding this last aspect, in this thesis we consider time-driven systems, event-driven systems, and a combination of both, called multi-cluster systems. The analysis takes int...|$|R
40|$|Abstract: 2 ̆ 2 This paper {{describes}} {{the design and}} implementation of a novel <b>embedded</b> <b>computer</b> <b>system</b> with a visual interface [...] VuMan 2. VuMan 2 is the most recent wearable computer artifact designed and implemented at Carnegie Mellon University. VuMan 22 ̆ 7 s capabilities and an evaluation of its design process are presented. Our learning experience and experimental results should contribute {{to a better understanding}} of new emerging information technology concepts as well as the process of embedded systems design. 2 ̆...|$|E
40|$|This paper {{describes}} the <b>embedded</b> <b>computer</b> <b>system</b> {{used in the}} towfish of the KiwiSAS-IV synthetic aperture sonar being developed by the Acoustics Research Group at the University of Canterbury. The sonar is designed for high-resolution seafloor imagery and bathymetry, requiring eighteen receiver channels to be simultaneously sampled and twenty four independent waveforms to be generated. The computer system is based on Compact PCI backplane and allows data to be streamed in real-time up the tow-cable to computers on the towboat for storage, image reconstruction, and display...|$|E
40|$|We {{describe}} {{methods used}} to measure and control tunes in the Fermilab Main Injector (FMI). Emphasis is given to software implementation of the operator interface, to the front-end <b>embedded</b> <b>computer</b> <b>system,</b> and handling of hys-teresis of main dipole and quadrupole magnets. Techniques are developed to permit control of tune of the Main Injec-tor through several acceleration cycles: from 8. 9 GeV/c to 120 GeV/c, from 8. 9 GeV/c to 150 GeV/c, and from 150 GeV/c to 8. 9 GeV/c. Systems which automate the complex interactions between tune measurement and the variety of ramping options are described. Some results of tune mea-surements and their comparison with the design model are presented. ...|$|E
50|$|Daniel Gajski is a Professor of the School of Information and Computer Science and the School of Engineering at University of California, Irvine, United States. He was {{previously}} the Director for the Center for <b>Embedded</b> <b>Computer</b> <b>Systems</b> (CECS), {{now known as}} the Center for Embedded and Cyber-physical Systems.|$|R
40|$|Abstract — In {{recent years}} {{designers}} of <b>embedded</b> <b>computer</b> <b>systems</b> face a tremendous growth in complexity of their systems. This, {{together with the}} fact that the used system clock frequencies rise and that the real time required to see features start up and work correctly in an embedded system also increases, let skyrocket the simulation times of event based simulation engines. Performing these simulations on register transfer level (RTL), however, is crucial to achieve functional verification of <b>embedded</b> <b>computer</b> <b>systems.</b> The acceleration of such event based simulations thus is the aim of the work presented in this paper. To this end a methodology called clock suppression is presented and thoroughly discussed. To underpin the feasibility and performance of this approach, evaluation results of simulation experiments for several designs will be shown. I...|$|R
40|$|Abstract: 2 ̆ 2 IASys is an {{integrated}} approach to system-level synthesis which allows a complete <b>computer</b> <b>system</b> {{to be specified}} using a set of high-level building blocks rather than behavioral level specifications. By reusing domain-specific design knowledge, alternative hardware and software configurations can be rapidly specified and synthesized. Thirty-two different <b>embedded</b> <b>computer</b> <b>systems</b> were synthesized generating a design space with variations of 45...|$|R
40|$|Abstract- Data sorting is used indispensably in {{computer}} system and affects performance of entire processing. Recently, its importance is increased {{in many areas}} from database server system to <b>embedded</b> <b>computer</b> <b>system.</b> Data sorting algorithms and implementation methods have been conducted in many ways that reduces complexity for operation purposes, along with hardware/software structures. In this paper, we propose new sorting architecture that uses 8 -way merge sort algorithm to sort streaming data from database. By using pipelined merge sort algorithm, we can organize parallel sorter architecture. Through functional simulation, we analyze relation between amount of data and required clock cycle to sort the data. Also, we can calculate size of memory to implement sorter architecture...|$|E
40|$|Hardware-software {{codesign}} {{is presented}} for a safety-critical <b>embedded</b> <b>computer</b> <b>system.</b> The system is applied for endoscope control and navigation. The embedded system architecture provides high performance computing for real-time implementation of machine vision algorithms and fault-tolerance for patient safety. It consists of five processor cores, local memory, I/O interface and multi-port shared memory. The {{hardware and software}} system architectures are co-designed. A virtual hardware is developed to execute the application and system software tasks. The system is designed and modeled sing VHDL and Eaglei toolset. We have limited system verification to co-verification of system hardware architecture and fault-tolerance strategies. Co-verification {{results indicate that the}} system performance degrades gracefully under various fault scenarios...|$|E
40|$|In the <b>embedded</b> <b>computer</b> <b>system</b> domain, MPSoC {{systems have}} become {{increasingly}} popular due to the ever-increasing performance demands of modern embedded applications. The number of processing elements in these MPSoCs also steadily increases. Whereas current MPSoCs still contain {{a limited number of}} processing elements, future MPSoCs will feature tens up to hundreds of (heterogeneous) processing elements that are all integrated on a single chip. On these future large-scale MPSoC systems, the mapping of applications onto the hardware resources plays an important role to fully explore the parallelism of applications. In this article, a hierarchical run-time adaptive resource allocation framework which uses an intelligent task remapping approach is proposed to improve the system performance for large-scale MPSoCs...|$|E
40|$|<b>Embedded</b> <b>computer</b> <b>systems</b> should fulfill {{real-time}} requirements {{which need}} to be checked in order to assure system quality. This paper stands to propose some ideas for testing the temporal behavior of real-time systems. The goal is to achieve white-box temporal testing using evolutionary techniques to detect system failures in reasonable time and little effort. 1...|$|R
50|$|The High Order Language Working Group (HOLWG) was {{a working}} group {{instrumental}} in developing the Ada computer programming language. The group was established in 1975 {{with the goal of}} establishing a single high level programming language appropriate for United States Department of Defense (DoD) real-time <b>embedded</b> <b>computer</b> <b>systems.</b> Colonel William A. Whitaker chaired the group.|$|R
25|$|Embedded {{operating}} systems {{are designed to}} be used in <b>embedded</b> <b>computer</b> <b>systems.</b> They are designed to operate on small machines like PDAs with less autonomy. They are able to operate with a limited number of resources. They are very compact and extremely efficient by design. Windows CE and Minix 3 are some examples of embedded {{operating systems}}.|$|R
40|$|In the {{researching and}} using process {{of a certain}} large weapon system, the {{practical}} navigation data {{was the most important}} and effective way for the system analysis and the fault reoccurrence. Aiming at the characteristics of the weapon launching and control system such as multiple data types, complex data property, and complex data management, the <b>embedded</b> <b>computer</b> <b>system</b> based on VxWorks is used in this article to realize the review of multiple kinds of data by the timer interrupt mode, and through relative experiments, the result showed that the real-time review system of the large-capacity practical navigation data designed in this article was effective and reliable, completely fulfilling the design requirements. </p...|$|E
40|$|A modular and {{reconfigurable}} <b>embedded</b> <b>computer</b> <b>system</b> {{for designing}} and prototyping electronic musical interfaces is presented. The system {{is based on}} an ARM 7 microcontroller that configures peripheral devices, collates input signals, and processes/synthesizes audio. Peripheral devices, each equipped with its own processor, are fully reconfigurable enabling processing and conversion of both analog and digital signals. Communication between the ARM and the peripheral devices is accomplished using the I 2 C protocol, allowing for multi-master-slave operation. Although the system operates without the use of a personal computer, a serial interface was implemented to facilitate prototyping with a computer terminal running a text or graphicsbased user interface. Applications for this platform include a standalone electronic musical instrument and an augmented acoustic trumpet. 1...|$|E
40|$|Current Ada {{language}} implementations and runtime environments are immature, unproven {{and are a}} key {{risk area}} for real-time <b>embedded</b> <b>computer</b> <b>system</b> (ECS). A test-case environment is provided in which {{the concerns of the}} real-time, ECS community are addressed. A priority driven executive is selected to be implemented in the Ada programming language. The model selected is representative of real-time executives tailored for embedded systems used missile, spacecraft, and avionics applications. An Ada-based design methodology is utilized, and two designs are considered. The first of these designs requires the use of vendor supplied runtime and tasking support. An alternative high-level design is also considered for an implementation requiring no vendor supplied runtime or tasking support. The former approach is carried through to implementation...|$|E
40|$|Design-Aids for Real-Time Systems (DARTS) is a {{tool that}} assists in {{defining}} <b>embedded</b> <b>computer</b> <b>systems</b> through tree structured graphics, military standard documentation support, and various analyses including automated Software Science parameter counting and metrics calculation. These analyses provide both static and dynamic design quality feedback which can potentially aid in producing efficient, high quality software systems...|$|R
50|$|The {{technology}} of Dolphin {{was based on}} development work at Norsk Data during the late 1980s. Dolphin Interconnect Solutions was founded in 1992 as a spin-off from Dolphin Server Technology which was in turn a spin-off from Norsk Data in 1989. Dolphin Interconnect Solutions develops technology for low latency, very high speed communication, between servers and/or <b>embedded</b> <b>computer</b> <b>systems.</b>|$|R
5000|$|Th. Dana-Picard (2007): Motivating {{constraints}} of a pedagogy <b>embedded</b> <b>Computer</b> Algebra <b>System,</b> International Journal of Science and Mathematics Education 5 (2), 217-235; ...|$|R
