0|276|Public
50|$|As {{a memory}} aid in coding, and {{certainly}} for readability, {{there are a}} large number of constants, such as True and <b>False</b> for <b>logical</b> <b>values,</b> vbOKCancel and vbYesNo for MsgBox codes, vbBlack and vbYellow for color values, vbCR for the carriage return character, and many others.|$|R
40|$|Information Abstract — The paper {{presents}} an approach for handling uncertain information in deductive databases using multivalued logics. Uncertainty means that database facts may be assigned <b>logical</b> <b>values</b> {{other than the}} conventional ones- true and <b>false.</b> The <b>logical</b> <b>values</b> represent various degrees of truth, which may be combined and propagated by applying the database rules. A corresponding multivalued database semantics is defined. We show that it extends successful conventional semantics as the well-founded semantics, and has a polynomial time data complexity. Keywords—Reasoning under uncertainty, multivalued logics, deductive databases, logic programs, multivalued semantics. I...|$|R
40|$|This paper {{presents}} a new five-valued knowledge representation of bipolar information. This representation {{is related to}} a five-valued logic that uses two <b>logical</b> <b>values</b> of truth (true, <b>false)</b> and three <b>logical</b> <b>values</b> of uncertainty (incomplete, inconsistent and fuzzy). The new approach {{is based on the}} concept of saturation function and ignorance function. In the framework of five-valued representation new formulae for union and intersection are constructed. Also, the paper {{presents a}} short application related to fuzzy preference modeling and decision making...|$|R
40|$|The essay “The Threefold Role of the <b>Logical</b> <b>Value</b> of Norms” {{is a work}} of {{philosophy}} of deontic logic. In this essay, the author investigates the concept of <b>logical</b> <b>value</b> of norms. Starting from the analysis of five predicates (properties) which the deontic logicians ante litteram (i. e. those logicians who have investigated the logic of normative entities before the deontic logic was founded in 1951 by Georg Henrik von Wright) have considered to be <b>logical</b> <b>values</b> of norms, the author distinguishes three different roles played by the <b>logical</b> <b>value</b> of norms: (i) firstly, the <b>logical</b> <b>value</b> of norms is the predicate that allows to define the meaning of deontic logical connectives; (ii) secondly, the <b>logical</b> <b>value</b> of norms is that “hereditary predicate” that is transmitted from the (deontic) premises to the deontic conclusion in a deontic syllogism; (iii) thirdly, the <b>logical</b> <b>value</b> of norms is the predicate (analogous to truth) that allows to apply the logical principles to norms...|$|R
50|$|The {{condition}} expression(s) has {{to evaluate}} to a <b>LOGICAL</b> <b>value.</b>|$|R
2500|$|A {{frequently}} adopted convention {{treats the}} constant <b>logical</b> <b>values</b> as operators of arity zero, thus: ...|$|R
50|$|Remark: Physical CHS {{values of}} {{function}} 48h may/should differ from <b>logical</b> <b>values</b> of function 08h.|$|R
5000|$|A {{frequently}} adopted convention {{treats the}} constant <b>logical</b> <b>values</b> as operators of arity zero, thus: ...|$|R
50|$|Gray code {{is another}} code that always changes one <b>logical</b> <b>value,</b> but {{never more than}} one.|$|R
5000|$|Other {{properties}} of implication (the following expressions are always true, for any <b>logical</b> <b>values</b> of variables): ...|$|R
50|$|Logical {{identity}} is an operation on one <b>logical</b> <b>value</b> p, {{for which the}} output value remains p.|$|R
50|$|Some {{support is}} {{provided}} for <b>logical</b> <b>values,</b> relational operators (the Fortran syntax can be used) and logical expressions.|$|R
5000|$|Enumeration, boolean and <b>logical</b> <b>values</b> {{are given}} in capital letters with a leading and {{trailing}} dot such as [...] ".TRUE.".|$|R
50|$|Inspection of the tabular derivations for NAND and NOR, {{under each}} {{assignment}} of <b>logical</b> <b>values</b> to the functional arguments p and q, produces the identical patterns of functional values for ¬(p ∧ q) as for (¬p) ∨ (¬q), and for ¬(p ∨ q) as for (¬p) ∧ (¬q). Thus {{the first and}} second expressions in each pair are logically equivalent, and may be substituted for each other in all contexts that pertain solely to their <b>logical</b> <b>values.</b>|$|R
50|$|In {{logic and}} mathematics, a truth value, {{sometimes}} called a <b>logical</b> <b>value,</b> is a value indicating {{the relation of}} a proposition to truth.|$|R
40|$|Abstract- In this paper, {{we propose}} a novel Petri Net model for solving test {{generation}} and site of fault and fired <b>logical</b> <b>value</b> for combinational circuits. In {{order to improve}} the logic fault efficiency, the transitions of general Petri Nets (PNs) are modified according to the critical of truth table, called Logic Petri Net LPN. The LPN model can transfer complexity circuit problem to a local adjacent place and transition relational problem. Therefore, the site of fault and fired <b>logical</b> <b>value</b> problem is simplified and clearly. The LPN model has the properties of Boolean algorithm, collapsing fault with clear physical concepts, fast calculation speed, and high veracity. The approach contains site of a fault and fired <b>logical</b> <b>value</b> reasoning algorithm and test vector generation reasoning algorithm. Two examples are shown to demonstrate the effectiveness of our approach. I...|$|R
50|$|Logical {{conjunction}} is {{an operation}} on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true if both of its operands are true.|$|R
5000|$|The {{first version}} of FORTRAN (1957) and its {{successor}} FORTRAN II (1958) had no <b>logical</b> <b>values</b> or operations; even the conditional [...] statement took an arithmetic expression and branched {{to one of three}} locations according to its sign; see arithmetic IF. FORTRAN IV (1962), however, followed the ALGOL 60 example by providing a Boolean data type (...) , truth literals ( [...] and [...] ), Boolean-valued numeric comparison operators ( [...] , , etc.), and logical operators ( [...] , , [...] ). In [...] statements, a specific control character (...) was provided for the parsing or formatting of <b>logical</b> <b>values.</b>|$|R
50|$|Logical {{disjunction}} is {{an operation}} on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true if {{at least one of}} its operands is true.|$|R
3000|$|... (B. 2) Foo et al. in [48] {{have defined}} {{a method for}} digital audio {{watermarking}} based on the time-frequency domain. Here the audio frames are changed, so that the <b>logical</b> <b>value</b> of 1 is assigned. If the original frame is lengthened or shortened, the <b>logical</b> <b>value</b> 1 is assigned, otherwise the [...] "normal frames" [...] correspond to the <b>logical</b> <b>value</b> 0. The watermark is a sequence obtained as a binary code of the alphabet letters, converted to the ASCII code (the example with the binary code 010001100101001101010111 for the letters FSW is used). The crucial part of this method is the selection of frames that will be lengthened or shortened (the frame size of 1024 samples is used). The frames with signal energy level above the masking threshold are selected (the psychoacoustic model is {{used to determine the}} masking threshold in each subband). The frames length is changed by adding or removing samples with amplitudes that do not exceed the masking threshold. Four samples are added or removed within the frame of 1024 samples. It ensures that a perceptual distortion will not appear. In order to preserve the total length of the watermarked audio signal, the same number of the lengthened and shortened frames is used. The pair of frames called Diamond frames is used to represent the binary 1, while the <b>logical</b> <b>values</b> 0 are assigned to the unaltered frames.|$|R
50|$|Exclusive {{disjunction}} is {{an operation}} on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true if one but not both of its operands is true.|$|R
50|$|Logical {{conjunction}} is {{an operation}} on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true {{if and only if}} both of its operands are true.|$|R
50|$|The NAND {{operation}} {{is a logical}} operation on two <b>logical</b> <b>values.</b> It produces a value of true, if — and only if — {{at least one of}} the propositions is false.|$|R
50|$|W. A. Carnielli (with C. Caleiro, M. E. Coniglio and J. Marcos). Two’s company: The humbug of many <b>logical</b> <b>values.</b> In: Logica Universalis (Editor J.-Y. Béziau). Basel: Birkhäuser, 2005, p. 169-189.|$|R
50|$|In {{order to}} justify his claim that true and false are the only <b>logical</b> <b>values,</b> Suszko (1977) observes that every {{structural}} Tarskian many-valued propositional logic can be provided with a bivalent semantics.|$|R
50|$|That is, {{a statement}}-form is {{intensional}} if it has, {{as one of}} its instances, a statement for which there are two co-extensive expressions (in the relevant language) such that one of them occurs in the statement, and if the other one is put in its place (uniformly, so that it replaces the former expression wherever it occurs in the statement), the result is a (different) statement with a different <b>logical</b> <b>value.</b> An intensional statement, then, is an instance of such a form; it has the same form as a statement in which substitution of co-extensive terms fails to preserve <b>logical</b> <b>value.</b>|$|R
50|$|Logical {{equality}} is an operation on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true {{if and only if}} both operands are false or both operands are true.|$|R
5000|$|This {{definition}} allows predicates (i.e. functions returning <b>logical</b> <b>values)</b> {{to directly}} act as if-clauses. A function returning a Boolean, {{which is then}} applied to two parameters, returns either the first or the second parameter: ...|$|R
50|$|Logical {{equality}} (also {{known as}} biconditional) is an operation on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true if both operands are false or both operands are true.|$|R
50|$|Logical {{negation}} is {{an operation}} on one <b>logical</b> <b>value,</b> typically {{the value of}} a proposition, that produces a value of true if its operand is false and a value of false if its operand is true.|$|R
40|$|The article {{presents}} {{the analysis of}} utterances found on Polish Internet sites concerning lack of reply: what is it, what does it tell us, and what <b>logical</b> <b>value</b> does it have? The result of this work is the introduction of reliable criteria, enabling us to give correct replies in a given situation. The {{article presents}} the analysis of utterances found on Polish Internet sites concerning lack of reply: what is it, what does it tell us, and what <b>logical</b> <b>value</b> does it have? The result of this work is the introduction of reliable criteria, enabling us to give correct replies in a given situation. ...|$|R
50|$|Intensional {{languages}} {{cannot be}} given an adequate semantics {{in terms of the}} extensions of expressions in them, since the extensions themselves do not suffice to determine a <b>logical</b> <b>value.</b> (If they did, then one could not change the <b>logical</b> <b>value</b> by substituting co-extensive expressions.) On the other hand, {{for the first half of}} the 20th century the only known systems of formal semantics worked by assigning extensions to expressions and used a Tarski-style truth-definition of statements constructed from the primitive expressions of the language under analysis. Hence, these semantical methods were pathetically inadequate for understanding the semantics of any but a few small artificial languages or mutilated fragments of natural languages.|$|R
50|$|In {{ordinary}} language terms, if both p and q are true, {{then the}} conjunction p ∧ q is true. For all other assignments of <b>logical</b> <b>values</b> to p and to q the conjunction p ∧ q is false.|$|R
50|$|Logical {{equality}} (also {{known as}} biconditional) is an operation on two <b>logical</b> <b>values,</b> typically {{the values of}} two propositions, that produces a value of true {{if and only if}} both operands are false or both operands are true.|$|R
5000|$|... z {{is a free}} {{variable}} and x and y are bound variables; consequently the <b>logical</b> <b>value</b> of this expression depends {{on the value of}} z, but there is nothing called x or y on which it could depend.|$|R
5000|$|The {{extension}} {{of a whole}} statement, {{as opposed to a}} word or phrase, is defined (since Frege 1892) as its truth value. So the {{extension of}} [...] "Lassie is famous" [...] is the <b>logical</b> <b>value</b> 'true', since Lassie is famous.|$|R
