11|100|Public
25|$|The area {{reduction}} in small wires is generally 15–25% and in larger wires is 20–45%. The exact die sequence {{for a particular}} job {{is a function of}} area reduction, <b>input</b> <b>wire</b> size and output wire size. As the area reduction changes, so does the die sequence.|$|E
5000|$|The second bank of five rotors was {{termed the}} control rotors. These were also 26-contact rotors. The control rotors {{received}} four signals at each step. After {{passing through the}} control rotors, the outputs were divided into ten groups of various sizes, ranging from 1 - 6 wires. Each group corresponded to an <b>input</b> <b>wire</b> for the next bank of rotors.|$|E
40|$|In this paper, {{we examine}} {{a form of}} garbled (or encrypted) circuit {{introduced}} by Beaver, Micali, and Rogaway {{as part of their}} design of a constant-round secure function evaluation (SFE) protocol [5]. We show that a subtle flaw in their construction allows even a simple passive adversary (also known as an "honest-but-curious adversary") to discover private data when evaluating such a garbled circuit. In particular, information leaks from the garbled circuit at places where multiple gates share a common <b>input</b> <b>wire,</b> and is extracted by exploiting dependencies between the gate labels of the multiple gates that share that <b>input</b> <b>wire.</b> In addition to showing how this flaw manifests itself and how it can be exploited, we pinpoint the errors in the corresponding security proof [19]. Finally, we introduce a new type of gate called a "splitter" which corrects the security flaw by removing all instances of shared input wires, and using this we can correct the problems in the proof as well, giving a secure garbled circuit. This correcte...|$|E
50|$|As with a two-winding {{transformer}} balun, {{the ratio}} of voltage to current changes {{in proportion to the}} square of number of windings between the two <b>input</b> <b>wires</b> divided by the number of windings between the two output wires.|$|R
50|$|Johnson Matthey Battery Systems {{can supply}} both {{off-board}} and on-board battery chargers, which include an enclosure, the mains <b>input</b> <b>wiring</b> and safety circuits, {{as well as}} the umbilical cabling, and can also arrange them to be CE mark approved.|$|R
5000|$|Take any three wires {{with the}} same weights and input them into a full adder. The result will be an output wire of the same weight and an output wire with a higher weight for each three <b>input</b> <b>wires.</b>|$|R
40|$|A {{distributed}} parallel {{technique for}} shared counting that is constructed, {{in a manner}} similar to counting network, from simple one-input two-output computing elements called balancers that are connected to one another by wires to form a balanced binary tree. One can view a balancer as a toggle mechanism, that given a stream of input tokens, repeatedly sends one token to the left output wire and one to the right, effectively balancing the number of tokens that have been output. However, to overcome the problem of sequential bottleneck in the root of the tree, a ”prism ” mechanism is created in front of the toggle bit to diffract each independent pair, one to the left and one to the right, without even having to toggle the shared bit. By distributing the prism over many locations and ensuring that each pair of tokens use different locations, we can get a highly parallel balancer with very low contention. The diffraction mechanism uses randomization to ensure high collision/diffraction rates on the prism, and the tree structure guarantees correctness of the output values. Diffracting trees thus combine the high degree parallelism and fault tolerance of the counting networks with the logarithmic depth, and the beneficial utilization of collisions of a combing tree. 9. 2 Trees That Count A counting tree balancer is a computing element with one <b>input</b> <b>wire</b> and two output wires. We denote by x the number of input tokens ever received on the balancer’s <b>input</b> <b>wire,</b> and by yi,i ∈ { 0, 1 } the number of tokens ever output o...|$|E
40|$|It {{is shown}} that a weak {{threshold}} network (in particular, threshold network) of width w and depth d cannot be constructed from balancers of width p 0 �p 1 �:::�pm; 1, if w does not divide P d, where P is the least common multiple of p 0 �p 1 �:::�pm; 1. This holds regardless {{of the size of}} the network, as long as it is nite, and it implies alower bound of log P w on its depth. More strongly, alower bound of log pmax w is shown on the length of every path from an <b>input</b> <b>wire</b> to any output wire that exhibits the threshold property, where pmax is the maximum among p 0 �p 1 �:::�pm; 1...|$|E
40|$|It {{is shown}} that a {{threshold}} network of width w and depth d cannot be constructed from balancers of width p 0; p 1; : : :; p m 01, if w does not divide P d, where P is the least common multiple of p 0; p 1; : : :; p m 01. This holds regardless {{of the size of}} the network, as long as it is finite, and it implies a lower bound of log P w on the depth of the network. More strongly, a lower bound of log pmax w is shown on the length of every path from an <b>input</b> <b>wire</b> to a certain output wire that exhibits the threshold property, where p max is the maximum among p 0; p 1; : : :; p m 0...|$|E
40|$|Introduction Balancing {{networks}} were devised by Aspnes et al. [4] as a novel class of distributed data structures that provide highly-concurrent, low-contention solutions to a varietyofmultiprocessor synchronization problems. A balancing network is constructed from elementary switches with # <b>input</b> <b>wires</b> and # output wires, called (## #) -balancers. A (## #) -balancer accepts {{a stream of}} tokens on its # <b>input</b> <b>wires.</b> The #-th token to enter the balancer leaves on output wire # mod #, where # = 0 # 1 ####. One {{can think of a}} balancer as having a " state variable tracking which output wire the next token should exit from. A token traversal amounts to a Fetch&Increment operation to the toggle variable. This operation includes reading {{the current state of the}} toggle...|$|R
40|$|The {{single wire}} {{replacement}} attempts {{to replace a}} target wire by another wire without changing the circuit functionality. Due to the large searching space required, {{there is very little}} success in directly extending the single wire replacement technique to replace multi-ple wires at the same time. The objective in this paper is to propose a new logic transfor-mation, called the alternative node (Alnode) technique, which attempts to replace multiple wires at a time. Basically, the transformation simultaneously replaces multiple <b>input</b> <b>wires</b> of a gate by a new set of <b>input</b> <b>wires.</b> To accomplish the transformation, we propose sev-eral speedup theorems for replacing multiple wires. In this paper, we also demonstrate that the Alnode technique can be applied to achieve power reduction for domino logic and wire length minimization in layouts. The experimental results are encouraging. ...|$|R
5000|$|Moreover, the {{underlying}} operations {{in a digital}} multiplier arefull adders, whereas a stochasticcomputer only requires an AND gate. Additionally,a digital multiplier would naively require [...] input wires,whereas a stochastic multiplier would only require 2 input wires.(If the digital multiplier serialized its output, however, it would alsorequire only 2 <b>input</b> <b>wires.)</b> ...|$|R
40|$|The scheme from [GVW 13] {{works as}} follows: (pp, msk) ← Setup($) for ℓ-bit input x’es, depth d circuits: (Note that for this scheme {{we need a}} bound on depth of circuit, because at input the error expands as we get to output. Thus to get a bound on the error, we need a bound on the depth.) We need to {{generate}} two matrices for each <b>input</b> <b>wire</b> and a matrix for the output wire. For the input wires we use the lattice-trapdoor-sampling procedure T Gen (that returns a nearly matrix A ∈ Z n×m q random: together with a trapdoor t for A), for the putput wire we just choose the matrix at • For i = 1, 2, [...] ., ℓ and b ∈ { 0, 1 }, set (Ai,b, ti,b) ← TGen (n, q, m, error distrib). • For the output wire, choose a random matrix, Aout, 1 ∈R Z n×m q. The public parameters are pp = {Ai,b, Aout, 1 } i∈[ℓ],b= 0, 1, and the master secret key is msk...|$|E
40|$|It {{is shown}} that a weak {{threshold}} network (in particular, threshold network) of width w and depth d cannot be constructed from balancers of width p 0; p 1; : : :; p mΓ 1, if w does not divide P d, where P is the least common multiple of p 0; p 1; : : :; p mΓ 1. This holds regardless {{of the size of}} the network, as long as it is finite, and it implies a lower bound of log P w on its depth. More strongly, a lower bound of log pmax w is shown on the length of every path from an <b>input</b> <b>wire</b> to any output wire that exhibits the threshold property, where p max is the maximum among p 0; p 1; : : :; p mΓ 1. Keywords: Distributed computing, parallel processing, impossibility results. 1 Introduction Consider a distributed application which involves solving a system of equations by successive relaxation, where each process holds part of the data. Interleaving of steps by different processes is necessary in order to ensure that a correct ? Some of the results in this [...] ...|$|E
40|$|Knotted wire fences are {{fabricated}} on specialised machines. The {{input material}} is typically galvanised steel wire. However, {{the quality of the}} <b>input</b> <b>wire</b> used by the Fence Producer is beyond control of the Machine Manufacturer. The problem is that wire strand breakages have been reported during fabrication and subsequent field erection. This is an issue for the Fence Producer because of the lost productivity, and the potential for reputation (brand) damage for both the Manufacturer and Producer. While existing standards do exist for wire, even wire that meets these standards is known to fail during fence fabrication. Thus {{there is a need to}} better understand how the quality of wire affects the manufacturability of fences, and to identify, or if necessary create, a test for wire quality that is able to be conducted by Fence Producers. In this research, samples were obtained from known good and failed fences and wire coils, and subjected to a variety of physical and metallurgical tests. These were then statistically examined and compared to the known fate of the fence, to determine the sensitivity of the test. Four potential tests were evaluated: Tensile strength (UTS), ductility, 3 -point bending, microstructural, impact energy, plus a fifth novel new test called linear torsional ductility (LTD). From these tests, it was evident that the linear torsional ductility test was the most sensitive and reliable indicator for wire quality. This paper is part of a collection, with companion papers examining material properties of wire, microstructure, impact energy for wire, knot performance, and the testing of whole fences...|$|E
40|$|SummaryRecent {{progress}} {{in understanding the}} diversity of midbrain dopamine neurons has highlighted the importance—and the challenges—of defining mammalian neuronal cell types. Although neurons may be best categorized using inclusive criteria spanning biophysical properties, <b>wiring</b> of <b>inputs,</b> <b>wiring</b> of outputs, and activity during behavior, linking all of these measurements to cell types within the intact brains of living mammals has been difficult. Here, using an array of intact-brain circuit interrogation tools, including CLARITY, COLM, optogenetics, viral tracing, and fiber photometry, we explore the diversity of dopamine neurons within the substantia nigra pars compacta (SNc). We identify two parallel nigrostriatal dopamine neuron subpopulations differing in biophysical properties, <b>input</b> <b>wiring,</b> output wiring to dorsomedial striatum (DMS) versus dorsolateral striatum (DLS), and natural activity patterns during free behavior. Our results reveal independently operating nigrostriatal information streams, with implications for understanding the logic of dopaminergic feedback circuits and the diversity of mammalian neuronal cell types...|$|R
40|$|A {{smoothing}} {{network is}} a distributed data structure that accepts tokens on <b>input</b> <b>wires</b> and routes them to output wires. It ensures that however imbalanced the traffic on <b>input</b> <b>wires,</b> {{the numbers of}} tokens emitted on output wires are approximately balanced. We study randomized smoothing networks, whose initial states are chosen at random. Randomized smoothing networks require no global initialization, and also require no global reconfiguration after faults. This paper makes the following contributions. We show that the well-known block smoothing network (which is isomorphic to the butterfly network), when started in a random initial state, is O (√ log(w)) -smooth with high probability, where w {{is the number of}} input/output wires. We show that as a corollary, the bitonic and periodic networks are also O (√ log(w)) -smooth with high probability, when started in random initial states. In contrast, it is known that these networks are (log w) -smooth in the worst case. 1...|$|R
40|$|A {{smoothing}} {{network is}} a distributed data structure that accepts tokens on <b>input</b> <b>wires</b> and routes them to output wires. It ensures that however imbalanced the traffic on <b>input</b> <b>wires,</b> {{the numbers of}} tokens emitted on output wires are approximately balanced. Prior work on smoothing networks always assumed that such networks were properly initialized. In a real distributed system, however, network switches may be rebooted or replaced dynamically, {{and it may not}} be practical to determine the correct initial state for the new switch. Prior analyses do not work under these new assumptions. This paper makes the following contributions. First, we show that some well-known 1 -smoothing networks, known as counting networks, when started in an arbitrary initial state (perhaps chosen by an adversary), remain remarkably smooth, degrading from 1 -smooth to �-smooth, where is the number of input/output wires. Second, we show that the same networks can be made eventually 1 -smooth by “piggy-backing ” a small amount of additional information on messages when (and only when) trouble is detected. 1...|$|R
40|$|This {{document}} describes two front-end modules {{developed for}} the proposed MIPP upgrade (P- 960) experiment at Fermilab. The scintillation counter module was {{developed for the}} Plastic Ball detector time and charge measurements. The module has eight LEMO 00 input connectors terminated with 50 ohms and accepts negative photomultiplier signals in the range 0. 25 [...] . 1000 pC with the maximum input voltage of 4. 0 V. Each input has a passive splitter with integration and differentiation times of {approx} 20 ns. The integrated portion of the signal is digitized at 26. 55 MHz by Analog Devices AD 9229 12 -bit pipelined 4 -channel ADC. The differentiated signal is discriminated for time measurement and sent {{to one of the}} four TMC 304 inputs. The 4 -channel TMC 304 chip allows high precision time measurement of rising and falling edges with {approx} 100 ps resolution and has internal digital pipeline. The ADC data is also pipelined which allows deadtime-less operation with trigger decision times of {approx} 4 {micro}s. The wire chamber module was developed for MIPP EMCal detector charge measurements. The 32 -channel digitizer accepts differential analog signals from four 8 -channel integrating wire amplifiers. The connection between wire amplifier and digitizer is provided via 26 -wire twist-n-flat cable. The wire amplifier integrates <b>input</b> <b>wire</b> current and has sensitivity of 275 mV/pC and the noise level of {approx} 0. 013 pC. The digitizer uses the same 12 -bit AD 9229 ADC chip as the scintillator counter module. The wire amplifier has a built-in test pulser with a mask register to provide testing of the individual channels. Both modules are implemented as a 6 Ux 220 mm VME size board with 48 -pin power connector. A custom europack (VME) 21 -slot crate is developed for housing these front-end modules...|$|E
50|$|Notes::The {{first version}} of the popular Mackie 1604 mixer, the CR1604, used a tip negative, ring {{positive}} jack wiring scheme on the main left and right outputs.:Early QSC amplifiers used a tip negative, ring positive <b>input</b> <b>wiring</b> scheme.:Whirlwind Line Balancer/Splitters do not use the sleeve as a conductor on their unbalanced 6.35 mm/ in TRS phone input. Tip and ring are wired to the transformer's two terminals; the sleeve is not connected.|$|R
50|$|When an {{engineer}} needs to connect several devices {{to the same}} set of <b>input</b> <b>wires</b> (e.g., a computer bus), but retain the ability to send and receive data or commands to each device independently of the others on the bus, they can use a chip select. The chip select is a command pin on many integrated circuits which connects the I/O pins on the device to the internal circuitry of that device.|$|R
5000|$|In this optimization, Alice {{generates a}} global random (k-1)-bit value [...] {{which is just}} known to her. During garbling for any wire , she only generates alabel [...] and computes the other label [...] as [...] With this convention, the label for the output wire of the XOR gates with <b>input</b> <b>wires</b> , [...] and output wire [...] can be simply {{computed}} as [...] The proof of security for this optimization is given in the Free-XOR paper.|$|R
5000|$|Outputs were {{balanced}} XLRs {{for live}} and studio applications (pins 1 & 2 ground, pin 3 hot), however the XLR pad <b>input</b> <b>wiring</b> on the SDS-V was unconventional - the User Manual states that pin 2 {{is hot and}} pins 1 & 3 are ground. Each module also had a 1/4" [...] jack trigger input allowing triggering from various sources including the SDS-6 and even audio (for example from a drum machine).|$|R
2500|$|By {{the early}} 2000s, the CD player had largely {{replaced}} the audio cassette player as standard equipment in new automobiles, with 2010 being {{the final model}} year for any car in the United States to have a factory-equipped cassette player. [...] With the increasing popularity of portable digital audio players, such as mobile phones, and solid state music storage, CD players are being phased out of automobiles in favor of minijack auxiliary <b>inputs,</b> <b>wired</b> connection to USB devices and wireless Bluetooth connection.|$|R
2500|$|The {{lines on}} the left of each gate {{represent}} <b>input</b> <b>wires</b> or ports. The value of the input is represented by a voltage on the lead. For so-called [...] "active-high" [...] logic, 0 is represented by a voltage close to zero or [...] "ground", while 1 is represented by a voltage close to the supply voltage; active-low reverses this. [...] The line {{on the right of}} each gate represents the output port, which normally follows the same voltage conventions as the input ports.|$|R
5000|$|By {{the early}} 2000s, the CD player had largely {{replaced}} the audio cassette player as standard equipment in new automobiles, with 2010 being {{the final model}} year for any car in the United States to have a factory-equipped cassette player. [...] With the increasing popularity of portable digital audio players, such as mobile phones, and solid state music storage, CD players are being phased out of automobiles in favor of minijack auxiliary <b>inputs,</b> <b>wired</b> connection to USB devices and wireless Bluetooth connection.|$|R
5000|$|The {{lines on}} the left of each gate {{represent}} <b>input</b> <b>wires</b> or ports. The value of the input is represented by a voltage on the lead. For so-called [...] "active-high" [...] logic, 0 is represented by a voltage close to zero or [...] "ground", while 1 is represented by a voltage close to the supply voltage; active-low reverses this. The line {{on the right of}} each gate represents the output port, which normally follows the same voltage conventions as the input ports.|$|R
40|$|We {{present a}} novel {{counting}} network construction, where {{the number of}} <b>input</b> <b>wires</b> w is smaller {{than or equal to}} the number of output wires t. The depth of our network is Θ(lg 2 w), which depends only on w. In contrast, the amortized contention of the network depends on the number of concurrent processes n and the parameters w and t. This offers more flexibility than all previously known networks, with the same number w of <b>input</b> and output <b>wires,</b> whose contention depends only on two parameters, w and n. As a result, when choosing n, t ≥ w lg w, the contention of our network is O(n lg w/w), which improves by a logarithmic factor of w over all previously known networks with w wires...|$|R
40|$|AbstractWe {{present a}} novel {{counting}} network construction, where {{the number of}} <b>input</b> <b>wires</b> w is smaller {{than or equal to}} the number of output wires t. The depth of our network is Θ(lg 2 w), which depends only on w. In contrast, the amortized contention of the network depends on the number of concurrent processes n and the parameters w and t. This offers more flexibility than all previously known networks, with the same number w of <b>input</b> and output <b>wires,</b> whose contention depends only on two parameters, w and n. In case n>wlgw, by choosing t>wlgw the contention of our network is O(nlgw/w), which improves by a logarithmic factor of w over all previously known networks with w wires...|$|R
40|$|Abstract A {{smoothing}} {{network is}} a distributed data structure that accepts tokens on <b>input</b> <b>wires</b> and routes them to output wires. It ensures that however imbalanced the traffic on <b>input</b> <b>wires,</b> {{the numbers of}} tokens emitted on output wires are approximately balanced. Prior work on smoothing networks always assumed that such networks were properly initialized. In a real distributed system, however, network switches may be rebooted or replaced dynamically, {{and it may not}} be practical to determine the correct initial state for the new switch. Prior analyses do not work under these new assumptions. This paper makes the following contributions. First, we show that some well-known 1 -smoothing networks, known as counting networks, when started in an arbitrary initial state (perhaps chosen by an adversary), remain remarkably smooth, degrading from 1 -smooth to (log n) -smooth, where n is the number of input/output wires. For the networks that we consider, we show that the above (log n) bound for the smoothness is tight. Our second contribution is to show how any balancing network can be made self-stabilizing with the addition of local stabilization actions and state, which restore the network back to a “legal state ” even if it starts out in an illegal state...|$|R
40|$|This {{assignment}} is an asymptotic analysis of some sorting networks {{in terms of}} time and energy. Here, a sorting network is n <b>input</b> <b>wires</b> of some fixed bit width (assumed to represent integers) that traverses a series of comparators leading to n output <b>wires</b> and any <b>input</b> will be output in sorted order. A comparator is a module of hardware logic of unit area with two <b>input</b> <b>wires</b> and two output wires, where the values input are output in sorted order. The time to perform one operation in time t and energy e as given by the invariant value of et 2, say et 2 = 1, where an operation is either a signal traversing a wire of unit length or a single comparison. For example, a comparison can be made in one unit of time consuming one unit of energy, or half a unit of time consuming 4 units of energy. We assume that the values of t and e can vary for each wire and comparator. We look at some existing sorting networks to cast into our definition of a sorting network. A sorting network (as defined in [1]) for bubble sort is given in [1]. Figure 47 on page 224 is a bubble sort network on 6 inputs, shown below...|$|R
40|$|In recent years, {{a number}} of {{nanoscale}} devices have been demonstrated that act as wires and gates. In theory, these devices can interconnect to form general purpose architectures. Unfortunately, our ability to place individual devices is poor, and device reliability may be substantially {{lower than that of}} current CMOS technology. Nanoscale architectures must be designed with these limitations in mind. Designs must account for extremely high levels of variation in both device placement and operation. It remains uncertain exactly what these robust nanoscale architectures will look like. At a minimum, however, they will require control over individual nanoscale wires. A device which controls a set of parallel nanowires with a second set of <b>input</b> <b>wires</b> is called a nanowire decoder. In order to interface nanotechnology with existing lithographically produced technology, the decoder’s <b>input</b> <b>wires</b> can be large, mesoscale wires. In this paper we provide a general model for nanowire decoders. We use this model to give the conditions that the decoders must meet. We also describe how to create fault-tolerant decoders for use in both memories and circuits. Finally we discuss the overhead and testing procedures required to ensure that stochastically assembled decoders behave deterministically. The problems we address are very relevant to current research in nanoscale computing. They also highlight the more general issues of stochastic assembly and fault-tolerance. Both issues will likely remain a fundamental characteristic nanoscale computing, and as such become a primary focus of the budding field of computational nanotechnology. ...|$|R
40|$|We prove new upper bounds on the {{tolerable}} {{level of}} noise in a quantum circuit. We consider circuits consisting of unitary k-qubit gates each of whose <b>input</b> <b>wires</b> {{is subject to}} depolarizing noise of strength p, as well as arbitrary one-qubit gates that are essentially noise-free. We assume that {{the output of the}} circuit is the result of measuring some designated qubit in the final state. Our main result is that for p> 1 -Θ(1 /√(k)), the output of any such circuit of large enough depth is essentially independent of its input, thereby making the circuit useless. For the important special case of k= 2, our bound is p> 35. 7...|$|R
50|$|In more detail, the {{garbled circuit}} is {{computed}} as follows. The main ingredient is a double-keyed symmetric encryption scheme. Given a {{gate of the}} circuit, each possible value of its <b>input</b> <b>wires</b> (either 0 or 1) is encoded with a random number (label). The values resulting from {{the evaluation of the}} gate at each of the four possible pair of input bits are also replaced with random labels. The garbled truth table of the gate consists of encryptions of each output label using its inputs labels as keys. The position of these four encryptions in the truth table is randomized so no information on the gate is leaked.|$|R
5000|$|The station {{eventually}} obtained authorization for 24-hour operation ("Class B" [...] status) in 1984. That {{site was}} subject to a late 1979 fire when a Harris MW-5 transmitter melted down. The MW-5 used a step up transformer to raise the three phase input power (at 240 volts) to 17,000 volts. The primary wiring had been bundled closely to the secondary wiring and tightly lashed together. When an insulation breakdown allowed the <b>input</b> <b>wiring</b> to arc, the high temperatures allowed the secondary wires to short to the inputs. This caused extremely high circulating currents and a meltdown of the transformer frame (made of metal castings and laminations).|$|R
40|$|A K-smoothing {{network is}} a distributed, low-contention data {{structure}} where tokens arrive arbitrarily on w <b>input</b> <b>wires</b> and reach w output wires via their completely asynchronous propagation through the network. The maximum discrepancy among {{the numbers of}} tokens arriving at the ouput wires, called smoothness, is at most K. It has been a longstanding open problem to construct a K-smoothing network with (i) optimal K, (ii) optimal Θ(lg w) depth (called smalldepth), (iii) no use of the AKS sorting network, and (iv) no reliance on global initialization. In this work, we present a very simple, randomized network which meets all four desiderata: • It is the cascade of a reasonably small number (about 150) of copies of the simple block network [6]; hence...|$|R
