33|24|Public
5000|$|An <b>in-circuit</b> <b>emulator</b> (ICE) {{replaces the}} {{microprocessor}} with a simulated equivalent, providing full control over {{all aspects of}} the microprocessor.|$|E
5000|$|... "Soft" [...] {{refers to}} software, and the [...] "ICE" [...] {{part of the}} name is an allusion to <b>in-circuit</b> <b>emulator.</b>|$|E
50|$|The MPLAB ICE2000 is a {{discontinued}} <b>in-circuit</b> <b>emulator</b> for PIC and dsPIC devices. It {{has been}} superseded by the REAL ICE.|$|E
50|$|A ceibo <b>emulator</b> is an <b>in-circuit</b> <b>emulators</b> for {{microcontrollers}} and microprocessors.|$|R
5000|$|OEMâ€”Targeted at early-access {{embedded}} development such as driver-development, base porting, and hardware-dependent {{application and}} middleware development. Contained Professional features, and stop-mode debugging using Lauterbach and Sophia <b>in-circuit</b> <b>emulators.</b>|$|R
50|$|He {{graduated}} EWU with a BS in Computer Science in May 1983, {{and took}} a job as a software engineer at Intel, working on software for <b>in-circuit</b> <b>emulators,</b> and major systems programming for Unix and VMS applications.|$|R
5000|$|A special reset {{function}} which clears {{only the}} program counter {{so that a}} single Z80 CPU {{could be used in}} a development system such as an <b>in-circuit</b> <b>emulator.</b>|$|E
50|$|An <b>in-circuit</b> <b>emulator</b> (ICE) {{provides}} {{a window into}} the embedded system. The programmer uses the emulator to load programs into the embedded system, run them, step through them slowly, and view and change data used by the system's software.|$|E
50|$|The ZeBu {{emulator}} supports operational modes for hardware {{description language}} (HDL) acceleration, ANSI C++/SystemC/SystemVerilog transaction-based co-emulation, where the testbench described at high-level of abstraction drives the design mapped in ZeBu via communication protocol interfaces called transactors, and an <b>in-circuit</b> <b>emulator</b> mode.|$|E
50|$|Bond-out {{processors}} {{can handle}} complex breakpoints (even in ROM), real-time traces of processor activity, and no use of target resources. But this extra functionality {{comes at a}} high cost, as bond-outs have to be produced for <b>in-circuit</b> <b>emulators</b> only.|$|R
50|$|Lauterbach GmbH is a German {{electronic}} {{design automation}} {{firm specializing in}} <b>in-circuit</b> <b>emulators</b> and logic analyzers used for debugging embedded systems. The firm was founded in 1979 by Lothar Lauterbach. In 2009 the firm was renamed from Lauterbach Datentechnik GmbH to Lauterbach GmbH.|$|R
50|$|The REAL ICE {{emulator}} {{is similar}} to the ICD, with the addition of better debugging features, and various add-on modules that expand its usage scope. The ICE is a family of discontinued <b>in-circuit</b> <b>emulators</b> for PIC and dsPIC devices, and is currently superseded by the REAL ICE.|$|R
50|$|The MPLAB ICE4000 is a {{discontinued}} <b>in-circuit</b> <b>emulator</b> for PIC and dsPIC devices. It {{has been}} superseded by the REAL ICE. The ICE4000 {{is no longer}} directly advertised on Microchip's website, and Microchip states {{that it is not}} recommended for new designs.|$|E
50|$|Software {{development}} requires {{use of a}} cross compiler, {{which runs}} on a computer but produces executable code for the target device. Debugging requires use of an <b>in-circuit</b> <b>emulator,</b> JTAG or SWD. Software developers often {{have access to the}} complete kernel (OS) source code.|$|E
50|$|Bond-out {{processors}} have internal {{signals and}} bus {{brought out to}} external pins. The term bond-out derives from connecting (or bonding) the emulation circuitry to these external pins. These devices {{are designed to be}} used within an <b>in-circuit</b> <b>emulator</b> and are not typically used in any other kind of system.|$|E
50|$|For {{debugging}} {{electronic hardware}} (e.g., computer hardware) {{as well as}} low-level software (e.g., BIOSes, device drivers) and firmware, instruments such as oscilloscopes, logic analyzers or <b>in-circuit</b> <b>emulators</b> (ICEs) are often used, alone or in combination. An ICE may perform many of the typical software debugger's tasks on low-level software and firmware.|$|R
50|$|In {{addition}} to the discrete devices, WDC offers device designs {{in the form of}} IP cores to be used inside other chips (such as ASICs), and provides ASIC and embedded systems consulting services revolving around their processor designs. WDC also produces C compilers, assembler/linker packages, simulators, development/evaluation boards, and <b>in-circuit</b> <b>emulators</b> for their processors.|$|R
50|$|TI also {{combines}} {{a version of}} its own compiler and tools with its Eclipse-based Code Composer Studio IDE ("CCS"). It sells full-featured versions, and offers a free version for download which has a code size limit of 16 KB. CCS supports <b>in-circuit</b> <b>emulators,</b> and includes a simulator and other tools; it can also work with other processors sold by TI.|$|R
5000|$|The MPLAB REAL ICE (<b>In-Circuit</b> <b>Emulator)</b> is a {{high-speed}} emulator for Microchip devices. It debugs and programs PIC and dsPIC microcontrollers {{in conjunction with}} the MPLAB IDE, while the target device is [...] "in-circuit". The REAL ICE is significantly faster than the ICD 2, for programming and debugging.|$|E
50|$|A Verilog {{hardware}} description {{model is}} available for designing the W65C02S core into an application-specific integrated circuit (ASIC) or a field-programmable gate array (FPGA). As is common in the semiconductor industry, WDC offers a development system, which includes a developer board, an <b>in-circuit</b> <b>emulator</b> (ICE) and a software development system.|$|E
50|$|Recent {{microcontrollers}} {{are often}} integrated with on-chip debug circuitry that when accessed by an <b>in-circuit</b> <b>emulator</b> (ICE) via JTAG, allow debugging of the firmware with a debugger. A real-time ICE may allow viewing and/or manipulating of internal states while running. A tracing ICE can record executed program and MCU states before/after a trigger point.|$|E
50|$|In addition, Intel sold a {{range of}} larger-scale {{development}} systems which ran their proprietary operating systems and hosted development tools assemblers and later compilers targeting their processors. These included the Microprocessor Development System (MDS), Personal Development System (PDS), <b>In-Circuit</b> <b>Emulators</b> (ICE), device programmers and so on. Most of these were rendered obsolete when the IBM PC became a de facto standard, and by other standardised technologies such as JTAG.|$|R
5000|$|DIL headers - Has pins {{with the}} same {{spacings}} as standard DIL ICs. Generally used where for some reason it is desired to replace an IC with a connection to an external device (e.g., <b>in-circuit</b> <b>emulators).</b> Can also be used like a PCB transition header, especially on stripboard. (Fitting a standard-spacing header to stripboard is tricky, {{because you have to}} cut the tracks between two holes rather than on a hole.) ...|$|R
50|$|Holtek also {{supplies}} its IDE-3000 {{development system}} {{to support its}} microcontroller devices. This is a suite of hardware and software development tools which includes real time hardware emulation and software simulation as well as tools for device programming of OTP and flash type devices. Some of Holtek's ICE <b>In-Circuit</b> <b>Emulators</b> also include an integrated device programmer {{eliminating the need for}} separate programming tools. The separate programming tools can be operated in a stand-alone mode without a PC connection.|$|R
5000|$|The 2650 {{was also}} used in some large items of {{equipment}} such as the Tektronix 8540, a microprocessor software development system which supported various <b>in-circuit</b> <b>emulator,</b> trace memory and logic analyser cards for real-time debugging of microprocessor systems, as practiced in the 1980s. The 2650 provided the base operating system functions, data transfer, and interface to a host computer or serial computer terminal.|$|E
50|$|<b>In-circuit</b> <b>emulator</b> (ICE) {{is a tool}} {{used for}} {{low-level}} debugging. On Intel 80386, asserting the undocumented pin at location B6 causes the microprocessor to halt execution and enter ICE mode. The microprocessor saves its entire state to an area of memory isolated from normal system memory. The layout of this area is suitable for LOADALL instruction, and this instruction is used by ICE code to return to normal execution.|$|E
50|$|More {{recently}} the term also covers Joint Test Action Group (JTAG) based hardware debuggers which provide equivalent access using on-chip debugging hardware with standard production chips. Using standard chips instead of custom bond-out versions makes the technology ubiquitous and low cost, and eliminates most {{differences between the}} development and runtime environments. In this common case, the <b>in-circuit</b> <b>emulator</b> term is a misnomer, sometimes confusingly so, because emulation is no longer involved.|$|E
40|$|Cycle simulators, <b>in-circuit</b> <b>emulators,</b> and {{hardware}} accelerators {{have made it}} possible to rapidly model the functionality of large digital designs. But these techniques provide limited visibility of internal design nodes, making debugging hard. Simulators run slowly when all nodes are traced. Emulators provide full visibility only with limited depth, or with greatly reduced speed. This paper discusses software techniques for increasing design visibility while reducing tracing overhead in simulation, and achieving 100 % visibility in emulation without reducing speed or compromising depth...|$|R
50|$|Developing OSes {{is usually}} a {{complicated}} process which sometimes requires extra hardware such as <b>In-Circuit</b> <b>Emulators</b> to probe the hardware on which the OS is running. Using Adeos, OS development is eased since any undesired behavior may be controlled by an appropriate domain handler. It can also provide a default domain handler for OS development under which developers may have controlled {{direct access to the}} hardware they are meant to control. As Adeos is itself a kernel-module, such development domain handlers may be developed independently from Adeos.|$|R
50|$|The company {{serves a}} niche-market of <b>in-circuit</b> <b>emulators,</b> {{especially}} on systems using JTAG, which it sells under {{the brand name}} TRACE32. It is the global market leader {{in the area of}} hardware assisted debug tools for embedded systems, with over 80000 development seats sold. They have delivered 65000 debug licenses for the popular ARM microprocessor alone, and they support all available ARM cores. This exclusivity has enabled them to grow strongly in sales in recent years (over 90 million USD in 2011, 83 million USD in 2007 before the financial crisis).|$|R
5000|$|In 1999 Voja AntoniÄ‡ {{created a}} logic analyzer, probe, serial {{interface}} receiver and frequency counter device based on Microchip Technology PIC16F84 microcontroller. It eventually became Microchip's [...] "application note 689" [...] (AN689) but was subsequently removed. Although {{the work was}} published, compensation for his efforts, Microchip <b>in-circuit</b> <b>emulator</b> [...] "MPLAB-ICE 1000" [...] was never sent to Mr. AntoniÄ‡. Microchip claimed that it was prevented by ongoing sanctions against Yugoslavia.|$|E
50|$|In-target probe, or ITP is {{a device}} used in {{computer}} hardware and microprocessor design, {{to control a}} target microprocessor or similar ASIC at the register level. It generally allows full control of the target device and allows the computer engineer access to individual processor registers, program counter, and instructions within the device. It allows the processor to be single-stepped or for breakpoints to be set. Unlike an <b>in-circuit</b> <b>emulator</b> (ICE), an In-Target Probe uses the target device to execute, rather than substituting for the target device.|$|E
50|$|All R8C have an {{internal}} ring oscillator {{and can be}} used without an external resonator. Common interfaces are UART and some devices have CAN interfaces. Some devices have {{an internal}} data flash which is meant as a replacement for a serial EEPROM, although it handles less write cycles as a real serial EEPROM. R8C devices have OCD (On Chip Debugging, see <b>In-circuit</b> <b>emulator).</b> When debugging with the Renesas E8 debugger or E8a debugger, UART 1 cannot be used. The debug interface uses only four wires: Vcc, GND, Reset and Mode.|$|E
40|$|The {{increasing}} {{complexity of}} VLSI circuits and the reduced accessibility of modern packaging and mounting technologies restrict {{the usefulness of}} conventional in-circuit debugging tools, such as <b>in-circuit</b> <b>emulators</b> for microprocessors and microcontrollers. However, this same trend enables {{the development of more}} complex products, which in turn require more powerful debugging tools. These conflicting demands could be met if the standard scan test infrastructures now common in most complex components were able to match the debugging requirements of design verification and prototype validation. This paper analyses the main debug requirements in the design of microprocessor-based applications and the feasibility of their implementation using the mandatory, optional and additional operating modes of the standard IEEE 1149. 1 test infrastructure...|$|R
40|$|This thesis dwells on {{the issue}} of using {{personal}} computers in real-time control and data acquisition applications. A data acquisition and control system is designed to acquire temperature, humidity, air volume and solar radiation data and control the inside temperature, air volume and maximizes solar radiation inside an ecologically closed test structure. The focus is on an Intel 8088 or 80286 based personal computer. A personal computer is used for development of the software and the final real-time system runs on a PC as well. This eliminates the need of expensive cross compilers and <b>in-circuit</b> <b>emulators.</b> A control and data acquisition task is selected and a solution using an IBM compatible personal computer is demonstrated. Various advantages and disadvantages for selecting the personal computer and development software and environment are discussed. Solutions to various problems encountered are discussed...|$|R
5000|$|Intel {{produced}} {{a series of}} development systems for the 8080 and 8085, known as the MDS-80 Microprocessor System. The original development system had an 8080 processor. Later 8085 and 8086 support was added including ICE (<b>in-circuit</b> <b>emulators).</b> It is a large and heavy desktop box, about a 20" [...] cube (in the Intel corporate blue color) which includes a CPU, monitor, and a single 8-inch floppy disk drive. Later an external box was made available with two more floppy drives. It runs the ISIS operating system and can also operate an emulator pod and an external EPROM programmer. This unit uses the Multibus card cage which was intended just for the development system. A surprising number of spare card cages and processors were being sold, leading {{to the development of}} the Multibus as a separate product.|$|R
