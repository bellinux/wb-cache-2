215|191|Public
25|$|Further, KeePass {{tracks the}} {{creation}} time, modification time, last access time, and <b>expiration</b> <b>time</b> of each password stored. Files can be attached and stored with a password record, or text notes can be entered with the password details. Each password record {{can also have}} an associated icon.|$|E
25|$|A {{standard}} practice in implementing name resolution in applications {{is to reduce}} the load on the Domain Name System servers by caching results locally, or in intermediate resolver hosts. Results obtained from a DNS request are always associated with the time to live (TTL), an <b>expiration</b> <b>time</b> after which the results must be discarded or refreshed. The TTL is set by the administrator of the authoritative DNS server. The period of validity may vary from a few seconds to days or even weeks.|$|E
25|$|The newer day passes can be {{used only}} on the {{appropriate}} day because the machine encodes the date and <b>expiration</b> <b>time</b> in the magnetic strip, which is read when swiped through the magnetic reader. Swiping the pass also sets a time waiting period on reuse so the pass cannot be immediately handed to a different passenger and used for free boarding. This also {{makes it difficult for}} passengers to use counterfeit passes when boarding the bus, Light Rail, and Metro Subway.|$|E
40|$|Caching data {{together}} with <b>expiration</b> <b>times</b> beyond which {{the data is}} no longer valid is a standard method for promoting information coherence in distributed systems, including the Internet and the WWW. We use the framework of competitive analysis of online algorithms, and study {{upper and lower bounds}} for page eviction strategies in the case where data has <b>expiration</b> <b>times.</b> We show that suitable adaptations of LRU and its ramifications (marking algorithms) are asymptotically optimal, and in the worst case within a multiplicative factor 2 of the lower bounds. Our results confirm the effectiveness of the apparent wide practice of LRU, even in this generalized scenario. A key technical ingredient of our analysis is a new "covering" invariant that appears to capture the subtleties introduced by <b>expiration</b> <b>times.</b> The additional difficulty of dealing with <b>expiration</b> <b>times</b> is also reflected in our analysis of the randomized online marking algorithm, as well as the offline version of the problem for which we obtain a factor 3 approximation...|$|R
40|$|Motivated by the {{increasing}} prominence of loosely-coupled systems, such as mobile and sensor networks, which are characterised by intermittent connectivity and volatile data, we study the tagging of data with so-called <b>expiration</b> <b>times.</b> More specifically, when data are inserted into a database, {{they may be}} tagged with time values indicating when they expire, i. e., when they are regarded as stale or invalid and thus are no longer {{considered part of the}} database. In a number of applications, <b>expiration</b> <b>times</b> are known and can be assigned at insertion time. We present data structures and algorithms for online management of data tagged with <b>expiration</b> <b>times.</b> The algorithms are based on fully functional, persistent treaps, which are a combination of binary search trees with respect to a primary attribute and heaps with respect to a secondary attribute. The primary attribute implements primary keys, and the secondary attribute stores <b>expiration</b> <b>times</b> in a minimum heap, thus keeping a priority queue of tuples to expire. A detailed and comprehensive experimental study demonstrates the well-behavedness and scalability of the approach as well as its efficiency with respect to a number of competitors. Comment: switched to TimeCenter latex styl...|$|R
25|$|If {{the time}} to crack a {{password}} {{is estimated to be}} 100 days, password <b>expiration</b> <b>times</b> fewer than 100 days may help ensure insufficient time for an attacker.|$|R
25|$|The Domain Name System {{specifies}} a set {{of various}} types of resource records (RRs), which are the basic information elements of the domain name system. Each record has a type (name and number), an <b>expiration</b> <b>time</b> (time to live), a class, and type-specific data. Resource records of the same type are described as a resource record set (RRset). The order of resource records in a set, which is returned by a resolver to an application, is undefined, but often servers implement round-robin ordering to achieve load balancing. The Domain Name System Security Extensions (DNSSEC), however, work on the complete set of resource record in canonical order.|$|E
25|$|MAX uses a proof-of-payment system; riders {{must carry}} a valid ticket or pass at all times. Tickets or passes are {{purchased}} before boarding and retained {{as proof of}} payment. Passengers must board the train before the time on ticket or pass expires, and are allowed to ride past {{the time on the}} ticket, provided the train was boarded before the <b>expiration</b> <b>time.</b> After validation, tickets are valid for 2½ hours and passes are valid until end of service day, and can be used an unlimited number of times, for travel in any direction, on MAX, WES, TriMet buses, Portland Streetcar, and C-Tran buses (except express routes).|$|E
5000|$|<b>Expiration</b> <b>time</b> (...) - The [...] "exp" [...] (<b>expiration</b> <b>time)</b> claim {{identifies}} the <b>expiration</b> <b>time</b> on or {{after which the}} JWT MUST NOT be accepted for processing.|$|E
3000|$|... {{indicates}} {{the total number}} of timer <b>expiration</b> <b>times</b> for an event record since it has been updated last time. Notice that for an event record the ERS resets the value of corresponding [...]...|$|R
50|$|Having more {{assurance}} points {{allows users}} more privileges such as writing a {{name in the}} certificate and longer <b>expiration</b> <b>times</b> on certificates. A user with at least 100 assurance points is a Prospective Assurer, and may—after passing an Assurer Challenge—verify other users; more assurance points allow the Assurer to assign more assurance points to others.|$|R
40|$|Smart Queue enriches the {{traditional}} FIFO-queue (First In First Out) for asynchronous messaging and event handling by supporting fault tolerance in environments with failure prone transmission, handling <b>expiration</b> <b>times,</b> and alike. It {{enables us to}} collect functionality concerned with asynchronous messaging at one place (or at least a well-defined number of places) and therefore improves aspect-orientation...|$|R
5000|$|Appropriate {{ratio of}} {{inspiration}} to <b>expiration</b> <b>time</b> (<b>expiration</b> <b>time</b> increased in COPD) ...|$|E
5000|$|For stocks without dividend, the {{chooser option}} can be {{replicated}} using one call option with strike price [...] and <b>expiration</b> <b>time</b> , and one put option with strike price [...] and <b>expiration</b> <b>time.</b>|$|E
50|$|By default, read {{requests}} have an <b>expiration</b> <b>time</b> of 500 ms, write requests {{expire in}} 5 seconds.|$|E
25|$|Several {{vulnerability}} {{issues were}} discovered and exploited by malicious users. One such issue is DNS cache poisoning, in which data is distributed to caching resolvers under {{the pretense of}} being an authoritative origin server, thereby polluting the data store with potentially false information and long <b>expiration</b> <b>times</b> (time-to-live). Subsequently, legitimate application requests may be redirected to network hosts operated with malicious intent.|$|R
40|$|In {{this paper}} we {{consider}} online auction mechanisms for {{the allocation of}} M items that are identical to each other {{except for the fact}} that the items have dierent <b>expiration</b> <b>times,</b> and each item must be allocated before it expires. A computational application is the allocation of time slots in a scheduling problem, and an economic application is the allocation of transportation tickets...|$|R
50|$|Several {{vulnerability}} {{issues were}} discovered and exploited by malicious users. One such issue is DNS cache poisoning, in which data is distributed to caching resolvers under {{the pretense of}} being an authoritative origin server, thereby polluting the data store with potentially false information and long <b>expiration</b> <b>times</b> (time-to-live). Subsequently, legitimate application requests may be redirected to network hosts operated with malicious intent.|$|R
50|$|These {{cookies are}} however reset if the <b>expiration</b> <b>time</b> is reached or the user {{manually}} deletes the cookie.|$|E
50|$|For {{interaction}} between two Apple users, the Messages app {{allows users to}} send short picture, video or audio clips with a 2-minute <b>expiration</b> <b>time.</b>|$|E
5000|$|When an API is {{protected}} a dynamic token, {{there is a}} time-based nonce inserted into the token. The token as a time to live (TTL) after which the client must acquire a new token. The API method has time check algorithm and if token is expired, the request is forbidden. [...] "An example of such token is JSON Web Token. The [...] "exp" [...] (<b>expiration</b> <b>time)</b> claim identifies the <b>expiration</b> <b>time</b> on or after which the JWT MUST NOT be accepted for processing." ...|$|E
30|$|The trial {{user account}} is free {{for use with}} set <b>expiration</b> and <b>time</b> limits on the surveys and respondents.|$|R
50|$|The {{drawbacks}} of {{the mechanical}} clocks include accuracy and matching of the two clocks, and matching of the indicators (flags) of <b>time</b> <b>expiration.</b> Additional <b>time</b> cannot easily be added for more complex time controls, especially those that call for an increment or delay on every move, such as some forms of byoyomi. However, a malfunctioning analog clock is a less serious event than a malfunctioning digital clock.|$|R
50|$|In general, options {{based on}} the same {{underlying}} but with different strike values and <b>expiration</b> <b>times</b> will yield different implied volatilities. This is generally viewed as evidence that an underlying's volatility is not constant but instead depends on factors such as the price level of the underlying, the underlying's recent price variance, and the passage of time. There exist few known parametrisation of the volatility surface (Schonbusher, SVI and gSVI) as well as their de-arbitraging methodologies. See stochastic volatility and volatility smile for more information.|$|R
5000|$|Suppose that [...] is {{the time}} value of cash flows X at the {{contract}} <b>expiration</b> <b>time</b> [...] The forward price is then given by the formula: ...|$|E
5000|$|... account modules {{check that}} the {{specified}} account is a valid authentication target under current conditions. This may include conditions like account <b>expiration,</b> <b>time</b> of day, and that the user {{has access to the}} requested service.|$|E
50|$|Changes to entries can be tracked, {{including}} {{a history of}} previous passwords, the creation time, modification time, last access time, and <b>expiration</b> <b>time</b> of each password stored. Text notes can be entered with the password details.|$|E
5000|$|Collaborative Learning Through Computer Conferencing, {{also known}} as the Najaden Papers, edited by Anthony Kaye in the NATO ASI Series, and {{published}} by Springer-Verlag (...) [...] Provides several case studies of online learning in action, and an overview by Jacob Palme providing a comprehensive inventory of the functionalities available in computer conferencing systems, including SuperKOM. This last paper describes in detail the underlying functions of what would now be called a virtual learning environment, including, for example, roles, voting, <b>expiration</b> <b>times,</b> exams, moderation, deferred operations.|$|R
5000|$|Firefox 53.0.1 was {{released}} on April 27, 2017 for Android only, fixing some stability issues, including a rare condition that could prevent opening restored tabs. [...] Firefox 53.0.2 {{was released}} on May 5, 2017 for both desktop and Android, fixing some security and stability issues, including making form validation errors and date picker panel visible to the user (desktop) and a fix for issues with Android integration. Firefox 53.0.3 {{was released on}} May 19, 2017 for desktop only, fixing some stability issues and bumping preloaded security information <b>expiration</b> <b>times.</b>|$|R
50|$|Occasionally, the Bonus Biography {{description}} {{would be}} finished by stating the subject's name {{prior to the}} <b>expiration</b> of <b>time.</b> When that happened, a single toss-up question would be asked {{for the remainder of}} the points.|$|R
50|$|The Professional and Lite {{versions}} {{are also available}} in demo versions. The demo versions provide most program features and have no <b>expiration</b> <b>time,</b> but have a limit of 40 activities (though any number of project phases).|$|E
5000|$|The first cookie, , is set {{to expire}} {{sometime}} on 15 January 2013. It will {{be used by the}} client browser until that time. The second cookie, , does not have an expiration date, making it a session cookie. It will be deleted after the user closes their browser. The third cookie, , has its value changed to [...] "deleted", with an <b>expiration</b> <b>time</b> in the past. The browser will delete this cookie right away because its <b>expiration</b> <b>time</b> is in the past. Note that cookie will only be deleted if the domain and path attributes in the [...] field match the values used when the cookie was created.|$|E
50|$|Further, KeePass {{tracks the}} {{creation}} time, modification time, last access time, and <b>expiration</b> <b>time</b> of each password stored. Files can be attached and stored with a password record, or text notes can be entered with the password details. Each password record {{can also have}} an associated icon.|$|E
40|$|A common {{assumption}} {{in financial}} engineering {{is that the}} market price for any derivative coincides with an objectively defined risk-neutral price - a plausible assumption only if traders collectively possess objective knowledge about the price dynamics of the underlying security over short time scales. Here we assume that traders have an objective knowledge about the underlying security's price trajectories only for large time scales. We show that avoidance of arbitrage that is still feasible uniquely determines the prices of options with large <b>expiration</b> <b>times,</b> and we derive limit theorems useful for estimation of model parameters and present-value analysis of derivative portfolios. Comment: 48 page...|$|R
40|$|Fission-based 99 Mo/ 99 m Tc {{generators}} {{have undergone}} evolutionary changes {{since they were}} first manufactured at the Lucas Heights Laboratories in the late 1960 s for the Australian nuclear medicine community. This study is aimed at understanding the chemistries which influence the behaviour of the heterogeneous molybdenum-alumina system in a chromatographic generator. The quality of sodium pertechnetate derived from a dry-bed generator is enhanced {{when compared with the}} traditional wet-bed technologies. Data is presented which compare the extent of 99 Mo desorption from both wet and dry-bed chromatographic generators. The <b>expiration</b> <b>times</b> for sodium pertechnetate based on 99 Mo breakthrough are significantly greater for the recently developed dry-bed generators...|$|R
50|$|In 2004, {{the human}} rights {{organization}} Gypsy International Recognition and Compensation Action (GIRCA) filed suit against IBM in Switzerland. However, the case was dismissed in 2006 due to an <b>expiration</b> of <b>time</b> under the statute of limitations.|$|R
