345|1771|Public
5|$|Putnam has {{consistently}} {{adhered to the}} idea of semantic holism, in spite of the many changes in his other positions. The problems with this position have been described by Michael Dummett, Jerry Fodor, Ernest Lepore, and others. In the first place, they suggest that, if semantic holism is true, it is impossible to understand how a speaker of a language can learn the meaning of an expression, for any expression of the language. Given the limits of our cognitive abilities, we {{will never be able to}} master the whole of the English (or any other) language, even based on the (false) assumption that languages are static and immutable entities. Thus, if one must understand all of a natural language to understand a single word or <b>expression,</b> <b>language</b> learning is simply impossible. Semantic holism also fails to explain how two speakers can mean the same thing when using the same linguistic expression, and therefore how any communication at all is possible between them. Given a sentence P, since Fred and Mary have each mastered different parts of the English language and P is related in different ways to the sentences in each part, the result is that P means one thing for Fred and something else for Mary. Moreover, if a sentence P derives its meaning from its relations with all of the sentences of a language, as soon as the vocabulary of an individual changes by the addition or elimination of a sentence, the totality of relations changes, and therefore also the meaning of P. As this is a common phenomenon, the result is that P has two different meanings in two different moments in the life of the same person. Consequently, if I accept the truth of a sentence and then reject it later on, the meaning of that which I rejected and that which I accepted are completely different and therefore I cannot change my opinions with regard to the same sentences.|$|E
25|$|For the {{object-oriented}} programming language, see Gello <b>Expression</b> <b>Language.</b>|$|E
25|$|A Rights <b>Expression</b> <b>Language</b> or REL is a machine-processable {{language}} {{used to express}} intellectual property rights (such as copyright) and other terms and conditions for use over content. RELs {{can be used as}} standalone expressions (ie metadata usable for search, compatibility tracking) or within a DRM system.|$|E
40|$|Abstract. Rights <b>expression</b> <b>languages</b> {{declare the}} {{permitted}} and pro-hibited actions {{to be performed}} on a resource. Along this work, six rights <b>expression</b> <b>languages</b> are compared, abstracting their commonalities and outlining their underlying pattern. Linked Data, which can be object of protection by the intellectual property laws or its access be restricted by an access control system, can be the asset in rights expressions. The requirements for a pattern for licensing Linked Data resources are listed...|$|R
40|$|Abstract. In {{this paper}} {{we show that}} the family of pattern <b>expression</b> <b>languages</b> is closed under the {{intersection}} with regular languages. Since this family is not closed under complement but is closed under reverse, a natural question arises, that is, whether particular languages such as those containing words of type ww R are pattern <b>expression</b> <b>languages</b> or not. We give a proof for a negative answer to this question, and we provide several examples of languages {{which can not be}} specified by pattern expressions. ...|$|R
5000|$|The new unified EL is a {{union of}} the JSP and JSF <b>expression</b> <b>languages.</b> In {{addition}} to the features already available in the JSP EL, the unified EL has the following features: ...|$|R
25|$|Hume, {{a strict}} {{functional}} language for embedded systems based on processes as stateless automata over {{a sort of}} tuples of one element mailbox channels where the state is kept by feedback into the mailboxes, and a mapping description from outputs to channels as box wiring, with a Haskell-like <b>expression</b> <b>language</b> and syntax.|$|E
25|$|Data {{from the}} American Speech-Language-Hearing Association (ASHA) {{indicate}} that treatment {{for individuals with}} right hemisphere damage tends to focus on areas other than communication, including swallowing, memory, and problem solving. Deficits in language <b>expression,</b> <b>language</b> comprehension, and pragmatics are addressed much less frequently (in 22%, 23%, and 5% of individuals, respectively). The lack of research focusing on communication treatment is cited as a possible explanation for these low percentages. Small-scale and pilot {{studies have been conducted}} in recent years to fill the identified gaps in the treatment literature. Emerging evidence is discussed below.|$|E
6000|$|Is our {{contemporary}} average citizen {{the best that}} could have been made out of the vague extensive possibilities that resided in him {{when he was a child}} of two? It has been shown already that in height and weight he, demonstrably, is not, and it has been suggested, I hope almost as convincingly, that in that complex apparatus of acquisition and <b>expression,</b> <b>language,</b> he is also needlessly deficient. And even upon this defective foundation, it is submitted, he still fails, morally, mentally, socially, aesthetically, to be as much as he might be. [...] "As much as he might be," [...] is far too ironically mild. The average citizen of our great state to-day is, I would respectfully submit, scarcely more than a dirty clout about his own buried talents.|$|E
50|$|Since version 2.0, Xtext has {{facilitated}} {{the development of}} domain-specific languages for the Java virtual machine, referring to and compiling to Java artifacts with tight integration into Eclipse's Java Development Toolkit. A reusable <b>expression</b> <b>languages</b> library enables rich behavior within the DSL.|$|R
50|$|While regex {{algorithms}} can {{be written}} in an efficient way, most regular expression engines in existence extend the regular <b>expression</b> <b>languages</b> with additional constructs that cannot always be solved efficiently. Such extended patterns essentially force the implementation of regular expression in most programming languages to use backtracking.|$|R
40|$|In this paper, {{we present}} our {{experiences}} concerning {{the enforcement of}} access rights extracted from ODRL-based digital contracts. We introduce the generalized Contract Schema (CoSa) which is an approach to provide a generic representation of contract information on top of rights <b>expression</b> <b>languages.</b> We give {{an overview of the}} design and implementation of the xoRELInterpreter software component. In particular, the xoRELInterpreter interprets digital contracts that are based on rights <b>expression</b> <b>languages</b> (e. g. ODRL or XrML) and builds a runtime CoSa object model. We describe how the xoRBAC access control component and the xoRELInterpreter component are used to enforce access rights that we extract from ODRL-based digital contracts. Thus, our approach describes how ODRL-based contracts {{can be used as a}} means to disseminate certain types of access control information in distributed systems...|$|R
50|$|The new <b>expression</b> <b>language</b> {{worked well}} for the {{purposes}} of JSF. But developers had problems when integrating the JSP EL with the JSF EL because of conflicts. Because of these incompatibilities, the unified <b>expression</b> <b>language</b> initiative was started to unify these expression languages. As of JSP 2.1, the expression languages of JSP 2.0 and JSF 1.1 have been merged into a single unified <b>expression</b> <b>language</b> (EL 2.1).|$|E
50|$|The <b>expression</b> <b>language</b> {{started out}} {{as part of the}} JavaServer Pages Standard Tag Library (JSTL) and was {{originally}} called SPEL (Simplest Possible <b>Expression</b> <b>Language),</b> then just <b>Expression</b> <b>Language</b> (EL). It was a scripting language which allowed access to Java components (JavaBeans) through JSP. Since JSP 2.0, it has been used inside JSP tags to separate Java code from JSP, and to allow easier access to Java components (than in Java code).|$|E
50|$|MVFLEX <b>Expression</b> <b>Language</b> (MVEL) is {{a hybrid}} dynamic/statically typed, {{embeddable}} <b>Expression</b> <b>Language</b> and runtime for the Java Platform. Originally {{started as a}} utility language for an application framework, the project is now developed completely independently.|$|E
5000|$|Oral {{traditions and}} <b>expressions,</b> {{including}} <b>language</b> {{as a vehicle}} of the intangible cultural heritage; ...|$|R
40|$|Abstract. Linked Data {{resources}} can be referenced by rights expres-sions or access control policies. Based {{on the common}} model found in six existing rights <b>expression</b> <b>languages</b> and revolving around the n-ary relation pattern, the License Linked Data Resources pattern {{is presented as a}} solution to describe existing licenses and ad-hoc rights expressions alike and valid for open and not open scenarios...|$|R
40|$|This paper {{presents}} a simple programming logic LES, which is particularly {{well suited for}} reasoning about so-called <b>expression</b> <b>languages,</b> i. e. languages that incorporate imperative features into expressions rather than distinguishing between expressions and statements. An axiomatization of a simple programming language is presented using this formalism. It is shown that this axiomatization is relatively complete, roughly {{in the sense of}} [Coo 76]...|$|R
5000|$|The Ignition <b>Expression</b> <b>Language</b> is {{a simple}} {{language}} that was invented by Inductive Automation. An <b>expression</b> <b>language</b> is a very simple kind of language where everything is an expression - which {{is a piece of}} code that returns a value. This means that there are no statements and no variables, just operators, literals, and functions. Consider an example from the <b>expression</b> <b>language</b> found in Microsoft_excel. Excel can calculate a cell's value dynamically by typing an expression such as [...] "=SUM(C5:C10)", which performs the arithmetic sum of those 6 cells. The <b>expression</b> <b>language</b> in Ignition functions similarly. It is used to define dynamic values for tags and component properties.|$|E
50|$|Version 2.0 of the JSP {{specification}} {{added support}} for the <b>Expression</b> <b>Language</b> (EL), used to access data and functions in Java objects. In JSP 2.1, it was folded into the Unified <b>Expression</b> <b>Language,</b> which is also used in JavaServer Faces.|$|E
50|$|The <b>expression</b> <b>language</b> is Haskell-like.|$|E
5000|$|Domain 1: Oral Traditions and <b>Expressions,</b> {{including}} <b>Language</b> as a Vehicle of the Intangible Cultural Heritage ...|$|R
50|$|In {{predicate}} transformers semantics, expressions {{are restricted}} to terms of the logic (see above). However, this restriction seems too strong for most existing programming <b>languages,</b> where <b>expressions</b> may have side effects (call to a function having a side effect), may not terminate or abort (like division by zero). There are many proposals to extend weakest-preconditions or strongest-postconditions for imperative <b>expression</b> <b>languages</b> and in particular for monads.|$|R
50|$|Grammatical {{case is a}} {{category}} of inflectional morphology. The comitative case {{is an expression of}} the comitative semantic relation through inflectional affixation, by prefixes, suffixes and circumfixes. Although all three major types of affixes are used in at least a few languages, suffixes are the most common <b>expression.</b> <b>Languages</b> which use affixation to express the comitative include Hungarian, which uses suffixes; Totonac, which uses prefixes; and Chuckchi, which uses circumfixes.|$|R
50|$|GELLO is a {{class-based}} {{object-oriented programming}} language and {{a relative of}} the Object Constraint Language (OCL). OCL is a well-developed constraint language that makes it attractive for use as an <b>expression</b> <b>language.</b> The intention was for GELLO to evolve as a standard query and <b>expression</b> <b>language</b> for decision support.|$|E
5000|$|XPath 2.0 <b>expression</b> <b>language</b> {{including}} {{variables to}} model dynamic data ...|$|E
5000|$|GELLO - a {{standard}} <b>expression</b> <b>language</b> used for {{clinical decision support}} ...|$|E
5000|$|... #Subtitle level 3: Domain 1: Oral Traditions and <b>Expressions,</b> {{including}} <b>Language</b> as a Vehicle of the Intangible Cultural Heritage ...|$|R
40|$|We propose LicenseScript, a {{language}} for {{digital rights management}} (DRM) based on multiset rewriting and logic programming. LicenseScript enjoys a precise syntax and semantics, and it is rich enough to embed other rights <b>expression</b> <b>languages</b> (REL). We show that LicenseScript is expressive and flexible by exploring several application domains representing different aspects of DRM. We present an implementation. Finally, we extend {{the core of the}} language to account for multiple devices in authorized domains. ...|$|R
40|$|Abstract: In recent years, China’s piano music {{creation}} gains further development. Grace note {{becomes one}} of main <b>expression</b> <b>languages</b> of piano music style. To further know application features of grace note in piano paraphrase, this paper first sets forth application form of grace note in piano paraphrase and then deeply analyzes its art features. On this basis, this paper analyzes grace note teaching features in piano paraphrase so as to provide reference for teachers...|$|R
5000|$|In version 0.9 OpenSocial {{added support}} for a {{tag-based}} language. [...] This language {{is referred to as}} OSML and allows tag-based access to data from the OpenSocial APIs that previously required an asynchronous client-side request. It also defined a rich tag template system and adopted an <b>expression</b> <b>language</b> loosely based on the Java <b>Expression</b> <b>Language.</b>|$|E
50|$|Creative Commons Rights <b>Expression</b> <b>Language</b> (ccREL) is a {{proposed}} Rights <b>Expression</b> <b>Language</b> (REL) for descriptive metadata to be appended to media that is licensed under {{any of the}} Creative Commons licenses. According to the draft submitted to the W3C, it is {{to come in the}} forms of RDFa for (x)HTML pages and XMP for standalone media.|$|E
5000|$|... javax/el: This package {{defines the}} classes and {{interfaces}} for Java EE's <b>Expression</b> <b>Language.</b> The <b>Expression</b> <b>Language</b> (EL) {{is a simple}} language originally designed to satisfy {{the specific needs of}} web application developers. It is used specifically in JSF to bind components to (backing) beans and in CDI to name beans, but can be used throughout the entire platform.|$|E
2500|$|Robredo also {{authored}} the People Empowerment Bill (HB 4911), {{which sought}} to allow more participation from Filipinos in decision and policy-making, and the Participatory Budget Process Bill (HB 3905) {{which sought to}} increase participation in budget-related decisions in government projects by locals. [...] She also wrote the Comprehensive Anti-Discrimination Bill (HB 3432) to prohibit {{discrimination on the basis}} of ethnicity, race, religion or belief, sex, gender, sexual orientation, gender identity and <b>expressions,</b> <b>language,</b> disability, HIV status, etc.|$|R
40|$|Abstract. We {{present the}} Obligation Specification Language (OSL), a policy {{language}} for distributed usage control. OSL supports the formalization {{of a wide}} range of usage control requirements. We also present translations between OSL and two rights <b>expression</b> <b>languages</b> (RELs) from the DRM area. These translations make it possible to use DRM mechanisms to enforce OSL policies. Furthermore, the translations enhance the interoperability of DRM mechanisms and allow us to apply OSL-specific monitoring and analysis tools to the RELs. ...|$|R
5000|$|Robredo also {{authored}} the People Empowerment Bill (HB 4911), {{which sought}} to allow more participation from Filipinos in decision and policy-making, and the Participatory Budget Process Bill (HB 3905) {{which sought to}} increase participation in budget-related decisions in government projects by locals. [...] She also wrote the Comprehensive Anti-Discrimination Bill (HB 3432) to prohibit {{discrimination on the basis}} of ethnicity, race, religion or belief, sex, gender, sexual orientation, gender identity and <b>expressions,</b> <b>language,</b> disability, HIV status, etc.|$|R
