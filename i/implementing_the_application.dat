48|10000|Public
50|$|The hospital’s {{application}} specialist {{together with}} the software vendor is involved in all the activities required for <b>implementing</b> <b>the</b> <b>application</b> software. Trainers train and retrain new employees in the hospital.|$|E
50|$|Vlad Trifa is a {{computer}} scientist, researcher and entrepreneur who {{played a key role}} in defining and <b>implementing</b> <b>the</b> <b>application</b> layer of the Internet of Things. He is particularly known for his early contributions to the Web of Things alongside with other researchers such as Dominique Guinard, Erik Wilde and Friedemann Mattern. Vlad is widely published author and a recognized expert in distributed embedded sensing and interactive devices, and their integration with enterprise applications using Web technologies.|$|E
40|$|The {{implementation}} phase at FAST method is established after the Construction Phase is already completed with a reference used in <b>implementing</b> <b>the</b> <b>application</b> based on use case, class diagram andactivity diagram fully designed at the previous phase. The testing conducted useswhite box testing. Of the advantages {{is when the}} application is tested, it can find out codes and strategies that take a role in developing the functions of each application module effectively. This seems to support the information system development with FAST method which one of its benefits to give a performance and accurate information. At this phase there are several things to test, namely: unit testing, static and dynamic analysis, scope of statement and mutation test. The case study used in <b>implementing</b> <b>the</b> <b>application</b> is the form supporting data at Lampung State Polytechnic...|$|E
5000|$|Vulnerabilities {{in native}} libraries, {{such as the}} C {{standard}} library, which {{may be used to}} <b>implement</b> <b>the</b> <b>application</b> and/or runtime ...|$|R
30|$|The {{authors are}} {{currently}} working on <b>implementing</b> <b>the</b> <b>applications</b> presented in this paper. In future, more energy-related application scenarios {{are expected to be}} explored on Blockchain.|$|R
25|$|The {{practice}} of abortion—the termination of a pregnancy—has been known since ancient times. Various {{methods have been}} used to perform an abortion, including the administration of abortifacient herbs, the use of sharpened <b>implements,</b> <b>the</b> <b>application</b> of abdominal pressure, and other techniques.|$|R
30|$|The {{number of}} adder stages {{implemented}} directly impacts {{the performance of}} our application. By computing the contribution of multiple projections in parallel, we exploit the fine-grained parallelism inherent in the backprojection algorithm. Fine-grained parallelism {{is directly related to}} the performance gains achieved by <b>implementing</b> <b>the</b> <b>application</b> in hardware, where many small execution units can be implemented that all run at the same time on different pieces of data.|$|E
40|$|The {{goal of the}} Demaq {{project is}} to {{investigate}} a novel {{way of thinking about}} distributed applications that are based on the asynchronous exchange of XML messages. Unlike today's solutions that rely on imperative programming languages and multi-tiered application servers, Demaq uses a declarative language for <b>implementing</b> <b>the</b> <b>application</b> logic as a set of rules. A rule compiler transforms the application specifications into execution plans against the message history, which are evaluated using our optimized runtime engine. This allows us to leverage existing knowledge about declarative query processing for optimizing distributed applications...|$|E
40|$|A {{methodology}} {{aimed at}} prototyping real-time image processing VLSI systems is presented. The prototyping methodology includes the emulation {{of the application}} in its target environment (i. e. in real time and on real-world scenes) and the automatic derivation of a VLSI chip-set <b>implementing</b> <b>the</b> <b>application.</b> Our methodology {{is based on a}} custom emulator called the Data-Flow Functional Computer (DFFC) which is dedicated to real-time image processing. Our method encompasses in a coherent environment: 1) the validation of the high level specification, 2) the simultaneous validation of an implementation of the design suitable for integration and 3) a method for integrating the validated emulator architecture as a VLSI system. The results of the successful prototyping of a defect detector algorithm are presented...|$|E
40|$|The article {{presents}} the evaluation Recovery system of Information (SRI) {{using the method}} of the simulation. The indicating use of the recovery and precision are good to measure {{the recovery of the}} excellent information and to reduce the noise. Being based on <b>the</b> <b>application</b> of these indicators, the SRI of the Greater National University of San Marcos has <b>implemented</b> <b>the</b> <b>application.</b> <b>The</b> evaluation concludes that the rate average of recovery has an acceptable level of performance whereas the rate of precision presents difficulties...|$|R
40|$|The aim of {{my thesis}} is to analyze, propose and <b>implement</b> <b>the</b> <b>application</b> of IPTV Manager. The {{analysis}} probes {{the requirements for}} <b>the</b> <b>application</b> and its results are displayed in UML diagrams. The proposal is mainly focused on application's architecture and on the choice of modern technologies that faciliate its realisation. The security of <b>the</b> <b>application</b> is highly emphasized in the proposal and in the implementation itself...|$|R
40|$|Network-on-chip (NoC) are {{considered}} {{the next generation of}} communication infrastructure, which will be omnipresent in most of industry, office and personal electronic systems. In platform-based methodo-logy, an application is implemented by a set of collaborating intellectual properties (IPs) blocks. In this paper, we use two multi-objective evolutionary algorithms {{to address the problem of}} selecting the most adequate set of IPs (from an available library) that best <b>implements</b> <b>the</b> <b>application.</b> <b>The</b> IP selection op-timization is driven by the minimization of hardware area, total execution time and power consumption...|$|R
40|$|The English {{version of}} this {{specification}} is the only normative version. Non-normative translations may also be available. Copyright © 2013 - 2014 FIDO Alliance All Rights Reserved. The FIDO family of protocols introduce a new security concept, Application Facets, to describe the scope of user credentials and how a trusted computing base which supports application isolation may make access control decisions about which keys {{can be used by}} which applications and web origins. This document describes the motivations for and requirements for <b>implementing</b> <b>the</b> <b>Application</b> Facet concept and how it applies to the FIDO protocols. Status of This Document This section describes the status of this document {{at the time of its}} publication. Other documents may supersede this document. A list o...|$|E
40|$|JavaScript {{programs}} are highly event-driven, resulting in ‘asynchronous spaghetti ’ code {{that is difficult}} to maintain as the magnitude programs written in the language grows. To reduce the effects of this callback hell, various concepts have been employed by a number of JavaScript libraries and frameworks. In this paper we investigate the expressiveness of two such techniques, namely reactive extensions and promises. We have done this by means of a case study consisting of an online collaborative drawing editor. The editor supports advanced drawing features which we try to model using the aforementioned techniques. We then present a discussion on our overall experience in <b>implementing</b> <b>the</b> <b>application</b> using the two concepts. From this, we propose a roadmap of how to improve support of programming eventdriven web applications in JavaScript...|$|E
40|$|Basically, here we {{have used}} VGA for {{implementing}} basic graphics applications that can be either used in a single user game or either in advertisements that deals with real-time application. Further expanding the logic with the coding part even double user game could be developed. So, we thought of using VGA as a standard for this implementation {{as it is the}} basic graphics array and compatible with other graphical arrays. Here, we used HDL language on Quartus-II software for interfacing the required peripheral to the NIOS-II Soft-core processor through FPGA Cyclone-II Processor. Where, we made use of the Innovative Algorithm for <b>implementing</b> <b>the</b> <b>application</b> of VGA with the help of C language on NIOS-II Soft-core processor that will contain the logic part. Finally, the results that we obtained for VGA application implementation...|$|E
40|$|This bachelor's thesis {{deals with}} display of {{accelerated}} 3 D graphics {{in a web}} browser environment. Existing technologies such as WebGL are presented and discussed. Further, {{in the second part}} of <b>the</b> thesis, an <b>application</b> for browsing medical volumetric data is designed and <b>implemented.</b> <b>The</b> <b>application</b> is built with the WebGL technology and Javascript graphics engine called O 3 D API...|$|R
40|$|The aim of {{this work}} is to design {{generalized}} Reversi (also known as Othello) and <b>implement</b> <b>the</b> <b>application</b> for editing and testing strategies of artificial intelligence. In {{the beginning of the}} work full rules of the game and solved problems are presented. After that follows detailed description of implemented strategies, programmer and user manual. At the conclusion of the work there is the report about using <b>the</b> <b>application</b> and possible extensions of <b>the</b> <b>application...</b>|$|R
40|$|The {{goal of the}} {{bachelor}} thesis is to design and <b>implement</b> <b>the</b> <b>application</b> for movie and serial management using <b>the</b> <b>application</b> program interface of web servers. The thesis describes the used technologies and possibilities of data acquisition from the API. Furthermore, the database design itself is discussed. The result is an application implemented under. NET technology in C# using the Model-View-ViewModel pattern and the Microsoft SQL Server as database server...|$|R
40|$|The AVIV retargetable code {{generator}} produces optimized machine code for target processors with different instruction set architectures. AVIV optimizes for minimum code size. Retargetable code generation requires {{the development of}} heuristic algorithms for instruction selection, resource allocation, and scheduling. AVIV addresses these code generation subproblems concurrently, whereas most current code generation systems address them sequentially. It accomplishes this by converting the input application to a graphical (Split-Node DAG) representation that specifies all possible ways of <b>implementing</b> <b>the</b> <b>application</b> on the target processor. The information embedded in this representation is then used {{to set up a}} heuristic branch-and-bound step that performs functional unit assignment, operation grouping, register bank allocation, and scheduling concurrently. While detailed register allocation is carried out as a second step, estimates of register requirements are generated during the fi [...] ...|$|E
30|$|In 2011, the European Council {{adopted the}} new EU Regulation 1169 / 2011 (Regulation (EU) 2011) on food {{information}} to consumers, which extends the mandatory indication of {{country of origin}} or place of provenance to the unprocessed meat of swine, poultry, sheep and goats. In addition, by 2013, the European Commission had to adopt acts <b>implementing</b> <b>the</b> <b>application</b> of “voluntary origin labeling” of foods and make {{a report on the}} mandatory indication of the country of origin or place of provenance for the following products: (1) meat used as an ingredient; (2) types of meat other than beef, swine, sheep, goat and poultry; (3) milk; (4) unprocessed foods; (5) single-ingredient products; and (6) ingredients that constitute over 50 % of a food product. However, until now, the European Commission has not adopted any action to implement these provisions.|$|E
40|$|For {{the last}} several decades the {{predominant}} architectural style for the implementation of data-centric applications has had a relational database at the core, procedural code <b>implementing</b> <b>the</b> <b>application</b> services and an object-oriented API. More recently the API has transitioned, via a slight detour through SOAP-based web services, to a RESTful style, however what lies beneath that interface has been slower to take a new approach. In this paper we argue that upgrading that which is under the covers to an XML-centric technology stack will result in a system that is easier to build, test and maintain. Further, these technologies are a step toward making construction of such systems available to nonprogrammers. We present an XML RESTful Services framework that provides mechanisms to address all of the key aspects of systems built in the RESTful architectural style...|$|E
40|$|This thesis {{describes}} the programming models OpenCL and CUDA for Parallel Programming adapters {{and in case}} of OpenCL even for other computing platforms. There was <b>implemented</b> <b>the</b> <b>application</b> which calculates <b>the</b> electric potential in the crystalline lattice. The algorithm was programmed using two technologies for the GPU - OpenCL and CUDA. Their computational time were compared together with computational time of the CPU...|$|R
40|$|This {{bachelor}} thesis {{deals with}} describing protocol FTP {{and its use}} in mobile facilities which work with the operating system of Microsoft Windows Mobile. Furthermore, it handles {{with the possibility of}} making applications for this system in programming language Java and summarizes features of its mobile version J 2 ME. This knowledge is afterwards used to project and <b>implement</b> <b>the</b> <b>application</b> FTP server...|$|R
5000|$|An MBean can {{notify the}} MBeanServer of its {{internal}} changes (for <b>the</b> attributes) by <b>implementing</b> <b>the</b> [...] <b>The</b> <b>application</b> interested in <b>the</b> MBean's changes registers a listener (...) to the MBeanServer. Note that JMX {{does not guarantee}} that the listeners will receive all notifications.|$|R
40|$|In this MA thesis, I {{propose a}} unified {{analysis}} {{for all the}} uses of enclitic -NYA in the nominal domain in Bahasa Indonesia. My analysis starts out by <b>implementing</b> <b>the</b> <b>application</b> of Predicate Inversion (Den Dikken's (1998) and Bennis et al's (1998)) on the Bahasa Indonesia N-NYA N construction {{as well as the}} nominal possessive construction. I argue that in both cases -NYA is not a nominal 'copula' rather I -NYA is a determiner element. This conclusion is based on the obligatory occurence of -NYA in definite NPs, where it introduces the definiteness of noun phrases. Following Abney's (1987) claim that determiner categories are projected under the highest functional head in noun phrases, D head, I propose that -NYA sits in the position. Further, I extend my analysis of -NYA as a determiner in all other nominal constructions...|$|E
40|$|College {{students}} receive {{a wealth of}} information through electronic communications that they are unable to process efficiently. This information overload negatively impacts their affect, which is officially defined in the field of psychology as the experience of feeling or emotion. To address this problem, we postulated that we could create an application that organizes and presents incoming content in a manner that optimizes users’ ability to process information. First, we conducted surveys that quantitatively measured each participant’s psychological affect while handling electronic communications, which was used to tailor the features of the application to what the user’s desire. After designing and <b>implementing</b> <b>the</b> <b>application,</b> we again measured the user's affect using this product. Our goal was to find that the program promoted a positive change in affect. Our application, Brevitus, was able to match Gmail on affect reduction profiles, while succeeding in implementing certain user interface specifications...|$|E
40|$|IkamvaYouth is a {{non-profit}} organization in South Africa that would benefit from a streamlined system that expedites registration and optimizes communication for volunteers and learners. IkamvaYouth currently has multiple mediums for registering users, which is hard to track and manage. Our solution {{is to make a}} product for volunteers and learners. The learners will be able to identify the nearest branch. The volunteers will be able to identify the nearest branch and register for a position at that branch. The primary considerations for an application in South Africa is that it is practical and usable. The solution provide is based on web technologies to deal with the devices in South Africa, particularly focusing on data usage. The final step of the project entails the deployment of the application by Global Social Benefit Fellowship students who will be <b>implementing</b> <b>the</b> <b>application</b> in South Africa with the organization...|$|E
5000|$|No {{congestion}} control - UDP {{itself does not}} avoid congestion. Congestion control measures must be <b>implemented</b> at <b>the</b> <b>application</b> level.|$|R
40|$|With {{the rapid}} {{development}} of mobile devices and wireless technologies, mobile social networks become increasingly available. People can <b>implement</b> many <b>applications</b> on <b>the</b> basis of mobile social networks. Secure computation, like exchanging information and file sharing, {{is one of}} such applications. Fairness in secure computation, which means that either all parties <b>implement</b> <b>the</b> <b>application</b> or none of them does, is deemed as an impossible task in traditional secure computation without mobile social networks. Here we regard <b>the</b> <b>applications</b> in mobile social networks as specific functions and stress on the achievement of fairness on these functions within mobile social networks {{in the presence of}} two rational parties. Rational parties value their utilities when they participate in secure computation protocol in mobile social networks. Therefore, we introduce reputation derived from mobile social networks into the utility definition such that rational parties have incentives to <b>implement</b> <b>the</b> <b>applications</b> for a higher utility. To the best of our knowledge, the protocol is the first fair secure computation in mobile social networks. Furthermore, it finishes within constant rounds and allows both parties to know the terminal round...|$|R
40|$|We {{provide a}} {{performance}} comparison of generated Infopipes that have been translate the Spi/XIP variant of Infopipe specification into executable code. Infopipes are an abstraction to support information flow applications. These tools are evaluated through a realistic application: a continuous image streaming program. We <b>implement</b> <b>the</b> <b>application</b> in C and compare its performance to both a hand-written application and one that uses SunRPC. 1...|$|R
40|$|This paper {{describes}} {{our experiences}} building a secure rlogin environment. With minimal {{changes to the}} rlogin server {{and the use of}} a secure network layer protocol, we remove the vulnerability of hostname-based authentication and IP source address spoofing. We investigate how applications such as rlogin interact with this new layer, and propose extensions to the rlogin server that can utilize these services. We believe rlogin presents a situation where the application layer seems the most appropriate location for enforcing security policy, instead of in a lower layer. Our layered approach to rlogin security achieves functionality similar to the Kerberos klogin client and the encrypted telnet packages, without their complexity or loss of generality. <b>Implementing</b> <b>the</b> <b>application</b> layer rlogin server extensions required fewer than ninety lines of code. Even if our rlogin application layer extensions are omitted, rlogin connections still benefit from secure network layer services. ...|$|E
40|$|This paper {{describes}} the operationalization process (i. e. the step from application descriptions to executable applications) followed in DTC (structured Documents, document Transformations and software Components), {{an approach to}} develop applications using generalized markup technologies. DTC encourages the definition of XML-based domain-specific languages (DSLs) for describing each relevant aspect of the application. These DSLs are composed to obtain a single application DSL. Structured documents describing the application are the input for an operationalization process that yields a component-based artifact <b>implementing</b> <b>the</b> <b>application.</b> Operationalization process is performed {{in terms of a}} flexible architecture, where software components interact for assembling the application software in a collaborative, domain-dependent, way. Main benefits of our approach are software reuse and maintenance. These benefits are obtained through: a) the separation between high-level application description and application implementation and b) the provision of a flexible architecture, technologically neutral, enabling multiple implementation strategies...|$|E
40|$|Western {{manufacturing}} {{is under}} pressure to produce high quality customized products particularly in large manufacturing such as the car industry at low costs. Here the development of such product customization requires the adoption of innovative agile manufacturing techniques. To date this innovation {{has focused on the}} improved process development between the different stages of manufacturing Product Lifecycle Management (PLM). However in terms of <b>implementing</b> <b>the</b> <b>application,</b> data management techniques have lagged behind often leaving these processes disjointed and lacking in automation. This paper proposes an improved model based on innovation in the manufacturing PLM. Building on existing work in the use of ontologies for knowledge management, the paper applies these techniques to PLM. The implementation has been applied to develop a case study around a Ford production line. The prototype presents an innovative approach to PLM and tested using a state of the art Web Service infrastructure implemented on a Ford Powertrain test rig...|$|E
40|$|This {{bachelor}} thesis {{deals with}} the identification using HTTP requests in network traffic. It explains principles of HTTP communications and identification. Additionally <b>the</b> <b>application</b> design is created, which identifies web browser and then this <b>application</b> is <b>implemented.</b> <b>The</b> <b>application</b> is designed as a separate module which can be integrated into projects Moderní prostředky pro boj s kybernetickou kriminalitou na Internetu nové generace. Then are executed experiments with that tool to verify the functionality and utility of this tool...|$|R
50|$|Spewak’s {{approach}} to Enterprise Architecture Planning {{is similar to}} that taken by DOE in that the business mission is the primary driver. That is followed by the data required to satisfy the mission, followed by <b>the</b> <b>applications</b> that are built using that data, and finally by <b>the</b> technology to <b>implement</b> <b>the</b> <b>applications.</b> This hierarchy of activity is represented in the figure on the right, in which <b>the</b> layers are <b>implemented</b> in order, from top to bottom.|$|R
40|$|The {{goal of this}} bachelor's {{thesis is}} to develop a system that will work as {{on-board}} computer for cars with diagnostic connector OBD 2 and communication protocol KWP- 1281. The main goal is to get information about the fuel consumption and show it properly on smartphone with OS Android. <b>The</b> system is <b>implemented</b> on platform FITkit and smartphone with OS Android. Java language was used to <b>implement</b> <b>the</b> <b>application</b> for Android, C language was used to <b>implement</b> <b>the</b> program for FITkit...|$|R
