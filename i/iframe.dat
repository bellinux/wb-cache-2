104|44|Public
25|$|HTML in e-mails is now {{rendered}} {{using the}} Microsoft Word rendering engine which disallows several HTML tags like object, script, <b>iframe</b> etc. {{along with several}} CSS properties.|$|E
25|$|The botnet propagates {{itself in}} a {{somewhat}} unusual way, as it actively searches and infects vulnerable websites running Active Server Pages. Once it finds a potential target the botnet performs a SQL Injections on the website, inserting an <b>IFrame</b> which redirects the user visiting the site to a site hosting Malware.|$|E
25|$|Many forum {{packages}} offer a way {{to create}} Custom BBCodes, or BBcodes that are not built into the package, where the administrator of the board can create complex BBCodes to allow the use of JavaScript or <b>iframe</b> functions in posts, for example embedding a YouTube or Google Video complete with viewer directly into a post.|$|E
50|$|In 2013 Laliberté invented <b>iFramed,</b> {{an online}} system for {{creating}} advertising campaigns on social media. This {{consists of a}} back office platform for the advertiser and a smartphone and tablet application which allows users to upload branded content onto their social media accounts. It also provides users with a permanent personal digital copyright watermark on their content. Users can then be paid for sharing this content on social media when they select an <b>iFramed</b> sponsor or advertiser and permit <b>iFramed</b> to overlay the sponsor or advertiser’s logo or message on it. Once the content is posted, the user receives a financial credit to their <b>iFramed</b> account. <b>iFramed</b> users can also choose to support affinity groups such as charities, schools, local sports teams, and community initiatives by donating their credits automatically and instantly to these organizations.|$|R
5000|$|Investel {{filed for}} a patent for <b>iFramed</b> in Canada under {{application}} number 2,863,124, in the US under application number 502660891, and internationally under the Patent Cooperation Treaty, application number PCT/CA2014/050628. In June 2016 <b>iFramed</b> was granted patent number 2,887,596 in Canada.|$|R
25|$|Facebook uses <b>iframes</b> {{to allow}} {{third-party}} developers to create applications that are hosted separately from Facebook, but operate within a Facebook session and are accessed through a user's profile. Since <b>iframes</b> essentially nest independent websites within a Facebook session, their content {{is distinct from}} Facebook formatting.|$|R
25|$|Version 23, {{released}} in August 2013, followed {{the lead of}} its competitors by blocking <b>iframe,</b> stylesheet, and script resources served from non-HTTPS servers embedded on HTTPS pages by default. Additionally, JavaScript could also no longer be disabled through Firefox's preferences, and JavaScript was automatically re-enabled for users who upgraded to 23 or higher with it disabled. The change was made due to its use across the majority of websites, the potential repercussions on non-experienced users who are unaware of its impact, along with the availability of extensions such as NoScript, which can disable JavaScript in a more controlled fashion. The following release added the ability to disable JavaScript through the developer tools for testing purposes.|$|E
25|$|Like {{many other}} Google web applications, Google Maps uses JavaScript extensively. As the user drags the map, the grid squares are {{downloaded}} from the server and {{inserted into the}} page. When a user searches for a business, the results are downloaded in the background for insertion into the side panel and map; the page is not reloaded. Locations are drawn dynamically by positioning a red pin (composed of several partially transparent PNGs) {{on top of the}} map images. A hidden <b>IFrame</b> with form submission is used because it preserves browser history. The site also uses JSON for data transfer rather than XML, for performance reasons. These techniques both fall under the broad Ajax umbrella. The result is termed a slippy map and is implemented elsewhere in projects such as OpenLayers.|$|E
50|$|Sometimes <b>iframe</b> {{variants}} come in {{the form}} of JavaScript. <b>iframe</b> tags may not be seen in plain text in the source because it is encoded. If the encoded script code is decoded, it will contain code to invoke <b>iframe</b> via JavaScript.|$|E
50|$|The {{content of}} the element is used as {{alternative}} text to be displayed if the browser does not support <b>iframes.</b>|$|R
50|$|All Your <b>iFrames</b> Point to Us Niels Provos, Panayiotis Mavrommatis, Moheeb Rajab and Fabian Monrose, 17th USENIX Security Symposium, August 2008.|$|R
5000|$|Provos, N., Mavrommatis, P., Abu Rajab, M., Monrose, F. All Your <b>iFRAMEs</b> Point to Us. Google Technical Report. Google, Inc., 2008.|$|R
50|$|Each {{time this}} page is visited, the JavaScript code creates an <b>IFrame,</b> DFP decides which {{campaign}} wins and deliver the creative to the <b>IFrame.</b>|$|E
50|$|The <b>iframe</b> in HTML5 has a sandbox attribute. The attribute's {{value is}} a set of allowed {{capabilities}} for the iframe's content. If the value is empty or not set, the iframe's content will not execute JavaScript, and won't allow top-level navigation. By specifying allow-scripts in the space separated set of exceptions in the value, the <b>iframe</b> will allow JavaScript, but will still disallow top-level navigation, rendering framekillers in the <b>iframe</b> impotent.|$|E
5000|$|An <b>Iframe</b> {{virus is}} a {{malicious}} code that infects web pages on websites. These are considered as form of malware. Most of them use <b>iframe</b> HTML code, causing damage by injecting <b>iframe</b> tags into the website. [...] Code may be injected into HTML, PHP, ASP or tpl source files. The virus may make its presence known by scanning for home page files such as index.php, index.html or default.html and inject the <b>iframe</b> code in them. The <b>iframe</b> code is usually found {{near the beginning}} on the web page. They may also infect through themes or templates of content management systems. The virus will also modify [...]htaccess and hosts files, and create images.php files in directories named 'images'. The infection is not a server-wide exploit, it will only infect sites on the server that it has passwords to.|$|E
30|$|The {{customer}} uses a known, secured browser {{to access}} the bank's application through a URL. The main page contains two <b>iframes</b> as follows.|$|R
50|$|In August 2016, Investel filed {{a lawsuit}} in the Federal Court of Canada against Snapchat for patent {{infringement}} related to the <b>iFramed</b> patent.|$|R
5000|$|Frames allow {{a visual}} HTML Browser window to be split into segments, {{each of which}} can show a {{different}} document. This can lower bandwidth use, as repeating parts of a layout {{can be used in}} one frame, while variable content is displayed in another. This may come at a certain usability cost, especially in non-visual user agents, due to separate and independent documents (or websites) being displayed adjacent to each other and being allowed to interact with the same parent window. Because of this cost, frames (excluding the [...] element) are only allowed in HTML 4.01 Frame-set. <b>Iframes</b> can also hold documents on different servers. In this case the interaction between windows is blocked by the browser. Sites like Facebook and Twitter use <b>iframes</b> to display content (plugins) on third party websites. Google AdSense uses <b>iframes</b> to display banners on third party websites.|$|R
5000|$|User Interface flaws: Some {{password}} managers {{will ask}} the user to log in through an <b>iframe.</b> This is unfortunately insecure. It trains the user to fill in her password while the URL displayed by the browser {{is not the one}} of the password manager. A phisher can abuse this by creating a fake <b>iframe</b> and capturing the user's credentials. Instead of using an <b>iframe,</b> a more secure approach is to open a new tab where users can login to the password manager.|$|E
50|$|In HTML, longdesc is an {{attribute}} used within the image element, frame element, or <b>iframe</b> element. It {{is supposed to}} be a URL to a document that provides a long description for the image, frame, or <b>iframe</b> in question. Note that this attribute should contain a URL, and not as is commonly mistaken, the text of the description itself.|$|E
50|$|The {{original}} page or vulnerable page {{is loaded}} using <b>iframe</b> tag, after {{that all the}} unnecessary contents in that webpage displayed in <b>iframe</b> is removed by placing white background div tag elements by using absolute positioning property using css, thus all unnecessary information in the displayed vulnerable page is removed and only buttons or links are alone made visible to the user, more over some additional social engineering messages like click the below button so get access or get reward is displayed above the <b>iframe</b> tag, so the user is made to click the visible button without knowing what happens when he clicks the button.|$|E
50|$|GuardedID (a {{commercial}} product) includes client-side clickjack {{protection for}} users of Internet Explorer and Firefox without {{interfering with the}} operation of legitimate <b>iFrames.</b> GuardedID clickjack protection forces all frames to become visible.|$|R
50|$|Some Web sites employ <b>iFrames</b> {{in order}} to {{distribute}} content from one or more third-party Web sites. Since this technology may raise privacy issues with some users, Dooble provides a means of blocking external content.|$|R
5000|$|Example frame-ancestors policies: # Disallow embedding. All <b>iframes</b> etc. will be blank, or {{contain a}} browser {{specific}} error page. Content-Security-Policy: frame-ancestors 'none' [...] # Allow embedding of own content only. Content-Security-Policy: frame-ancestors 'self' [...] # Allow specific origins to embed this content Content-Security-Policy: frame-ancestors example.com wikipedia.org ...|$|R
5000|$|A basic {{technique}} for dynamic web application {{is to use}} a hidden <b>iframe</b> HTML element (an inline frame, which allows a website to embed one HTML document inside another). This invisible <b>iframe</b> is sent as a chunked block, which implicitly declares it as infinitely long (sometimes called [...] "forever frame"). As events occur, the <b>iframe</b> is gradually filled with [...] tags, containing JavaScript to be executed in the browser. Because browsers render HTML pages incrementally, each [...] tag is executed as it is received. Some browsers require a specific minimum document size before parsing and execution is started, which can be obtained by initially sending 1-2 kB of padding spaces.|$|E
5000|$|Integration into websites, live streams, {{broadcast}} {{channels and}} Bing.com with embeddable <b>iFrame</b> and API availability ...|$|E
5000|$|Others: overlay (analogous to SSI, but {{client-side}} {{and more}} powerful, with higher performance), <b>iframe,</b> browser, editor, etc.|$|E
5000|$|In September 2011 NetSurf 2.8 was released. It {{added support}} for frames and <b>iframes</b> in the browser's core {{rendering}} engine, making them {{available to all}} front ends. The release also included support for MIME type sniffing and improved the performance of loading the images used by a web page.|$|R
5000|$|Unlike <b>iframes</b> or XMLHttpRequest objects, [...] tags can {{be pointed}} at any URI, and JavaScript code in the {{response}} will be executed {{in the current}} HTML document. This creates a potential security risk for both servers involved, though the risk to the data provider (in our case, the Comet server) can be avoided using JSONP.|$|R
50|$|Like Mozilla's {{built-in}} image blocker, Adblock Plus blocks HTTP and HTTPS requests {{according to}} their source address and additional context information and can block <b>iframes,</b> scripts, and Flash. It also uses automatically generated user stylesheets to hide elements such as text ads on a page as they load instead of blocking them, known as element hiding.|$|R
5000|$|WebSpellChecker {{software}} {{are designed}} to be integrated and used among multiple HTML editable controls such as input, textarea, <b>iframe,</b> tags with a content editable attribute (div, span, p, etc.), <b>iframe</b> and also provided as plug-ins for the most popular WYSIWYG editors like CKEditor [...] 4+, TinyMCE 4+ and Froala. Recently WebSpellChecker released plug-in for WordPress [...] and application for Slack, which allow users spell checking during typing.WebSpellChecker mainly provides three products: WebSpellChecker (WSC), SpellCheckAsYouType (SCAYT) and Web API.|$|E
50|$|But {{in modern}} browsers, the {{functionality}} of layers {{is provided by}} using an absolutely-positioned , or, for loading the content from an external file, an <b>IFrame.</b>|$|E
50|$|Similar to Social.FM search boxes, {{website and}} blog {{operators}} could customize the Music <b>iFrame</b> to incorporate their desired color scheme, size, logo, and preferred artists.|$|E
50|$|While being a {{client-side}} and server-agnostic solution, the qooxdoo project does include optional RPC server implementations (currently in Java, PHP, Perl and Python) {{to demonstrate}} client-server communication. An abstract transport layer supports queues, timeouts and implementations via XMLHttpRequest, <b>Iframes</b> and Scripts. Like {{the rest of}} qooxdoo, this layer relies on event-based programming to simplify asynchronous communication.|$|R
40|$|Abstract—Pivot {{is a new}} JavaScript {{isolation}} {{framework for}} web applications. Pivot uses <b>iframes</b> as its low-level isolation containers, but it uses code rewriting to implement syn-chronous cross-domain interfaces atop the asynchronous cross-frame postMessage() primitive. Pivot layers a distributed scheduling abstraction across the frames, essentially treating each frame as a thread which can invoke RPCs that are serviced by external threads. By rewriting JavaScript call sites, Pivot can detect RPC invocations; Pivot exchanges RPC requests and responses via postMessage(), and it pauses and restarts frames using a novel rewriting technique that translates each frame’s JavaScript code into a restartable generator function. By leveraging both <b>iframes</b> and rewriting, Pivot {{does not need to}} rewrite all code, providing an order-of-magnitude performance improvement over rewriting-only solutions. Compared to iframe-only approaches, Pivot provides synchronous RPC semantics, which developers typically prefer over asynchronous RPCs. Pivot also allows developers to use the full, unrestricted JavaScript language, including powerful statements like eval(). I...|$|R
5000|$|Cross-origin {{resource}} sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts) {{on a web}} page to be requested from another domain outside the domain from which the first resource was served. A web page may freely embed cross-origin images, stylesheets, scripts, <b>iframes,</b> and videos. Certain [...] "cross-domain" [...] requests, notably Ajax requests, however are forbidden by default by the same-origin security policy.|$|R
