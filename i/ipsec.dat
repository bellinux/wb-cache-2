1340|6|Public
5|$|FreeBSD's TCP/IP stack {{is based}} on the 4.2BSD {{implementation}} of TCP/IP which greatly contributed to the widespread adoption of these protocols. FreeBSD also supports IPv6, SCTP, <b>IPSec,</b> and wireless networking (Wi-Fi). The IPv6 and <b>IPSec</b> stacks were taken from the KAME project. Also, FreeBSD supports IPX and AppleTalk protocols, but they are considered old and it is planned to drop support of them in the upcoming FreeBSD 11.0.|$|E
25|$|In December 1997, PGP Inc. was {{acquired}} by Network Associates, Inc. ("NAI"). Zimmermann and the PGP team became NAI employees. NAI was the first company to have a legal export strategy by publishing source code. Under NAI, the PGP team added disk encryption, desktop firewalls, intrusion detection, and <b>IPsec</b> VPNs to the PGP family. After the export regulation liberalizations of 2000 which no longer required publishing of source, NAI stopped releasing source code.|$|E
25|$|TLS {{can also}} be used to tunnel an entire network stack to create a VPN, as is the case with OpenVPN and OpenConnect. Many vendors now marry TLS's {{encryption}} and authentication capabilities with authorization. There has also been substantial development since the late 1990s in creating client technology outside of the browser to enable support for client/server applications. When compared against traditional <b>IPsec</b> VPN technologies, TLS has some inherent advantages in firewall and NAT traversal that make it easier to administer for large remote-access populations.|$|E
25|$|Support for {{wireless}} networks {{is built}} into the network stack itself, and does not emulate wired connections, {{as was the case with}} previous versions of Windows. This allows implementation of wireless-specific features such as larger frame sizes and optimized error recovery procedures. Windows Vista uses various techniques like Receive Window Auto-scaling, Explicit Congestion Notification, TCP Chimney offload and Compound TCP to improve networking performance. Quality of Service (QoS) policies can be used to prioritize network traffic, with traffic shaping available to all applications, even those that do not explicitly use QoS APIs. Windows Vista includes in-built support for peer-to-peer networks and SMB 2.0. For improved network security, Windows Vista supports for 256-bit and 384-bit Diffie-Hellman (DH) algorithms, as well as for 128-bit, 192-bit and 256-bit Advanced Encryption Standard (AES) is included in the network stack itself, while integrating <b>IPsec</b> with Windows Firewall.|$|E
25|$|OSPF {{does not}} use a {{transport}} protocol, such as UDP or TCP, but encapsulates its data directly in IP packets with protocol number 89. This {{is in contrast to}} other routing protocols, such as the Routing Information Protocol (RIP) and the Border Gateway Protocol (BGP). OSPF implements its own transport layer error detection and correction functions. OSPF uses multicast addressing for distributing route information within a broadcast domain. OSPF reserves the multicast addresses 224.0.0.5 (IPv4) and FF02::5 (IPv6) for all SPF/link state routers (AllSPFRouters) and 224.0.0.6 (IPv4) and FF02::6 (IPv6) for all Designated Routers (AllDRouters). For non-broadcast networks, special provisions for configuration facilitate neighbor discovery. OSPF multicast IP packets never traverse IP routers, they never travel more than one hop. The virtual link feature can be used to create an adjacency tunnel across multiple hops. The OSPF protocols gathers information regarding all link states in the domain in its link state database, and is thus not a link layer protocol itself, but is – based on the purpose of the protocol; to exchange and calculate optimal paths through the network for IP destination addresses – most correctly classified as an Internet layer protocol. The OSPF protocol, when running on IPv4, can operate securely between routers, optionally using a variety of authentication methods to allow only trusted routers to participate in routing. OSPFv3, running on IPv6, does not support protocol-internal authentication. Instead, it relies on IPv6 protocol security (<b>IPsec).</b>|$|E
2500|$|RFC 4312 The Camellia Cipher Algorithm and Its Use With <b>IPsec</b> ...|$|E
2500|$|The Internet {{protocol}} suite does not presume any specific hardware or software environment. [...] It only requires that hardware and a software layer exists that {{is capable of}} sending and receiving packets on a computer network. As a result, the suite has been implemented on essentially every computing platform. A minimal implementation of TCP/IP includes the following: Internet Protocol (IP), Address Resolution Protocol (ARP), Internet Control Message Protocol (ICMP), Transmission Control Protocol (TCP), User Datagram Protocol (UDP), and Internet Group Management Protocol (IGMP). In addition to IP, ICMP, TCP, UDP, Internet Protocol version 6 requires Neighbor Discovery Protocol (NDP), ICMPv6, and IGMPv6 and is often accompanied by an integrated <b>IPSec</b> security layer.|$|E
2500|$|On 11 December 2010, Gregory Perry, {{a former}} {{technical}} {{consultant for the}} Federal Bureau of Investigation (FBI), emailed de Raadt alleging that the FBI had paid some OpenBSD ex-developers 10 years previously to insert backdoors into the OpenBSD Cryptographic Framework. De Raadt made the email public on 14 December by forwarding it to the openbsd-tech mailing list and suggested an audit of the <b>IPsec</b> codebase. De Raadt's response was skeptical of the report and he invited all developers to independently review the relevant code. In the weeks that followed, bugs were fixed but no evidence of backdoors were found. De Raadt stated [...] "I believe that NetSec was probably contracted to write backdoors as alleged. If those were written, I don't believe they made it into our tree. They might have been deployed as their own product." ...|$|E
5000|$|RFC 5858: <b>IPsec</b> Extensions to Support Robust Header Compression over <b>IPsec</b> ...|$|E
5000|$|<b>IPSec</b> Simple Policy Update for {{simplified}} {{creation and}} maintenance of <b>IPSec</b> filters ...|$|E
5000|$|<b>IPsec</b> (Internet Protocol Security) {{using an}} <b>IPsec</b> profile, which is {{associated}} with a virtual tunnel interface in IOS software. All traffic sent via the tunnel is encrypted per the policy configured (<b>IPsec</b> transform set) ...|$|E
5000|$|The <b>IPsec</b> suite {{is an open}} standard. <b>IPsec</b> {{uses the}} {{following}} protocols to perform various functions: ...|$|E
50|$|FreeBSD, NetBSD and DragonFly BSD {{integrated}} <b>IPSec</b> and IPv6 code {{from the}} KAME project; OpenBSD integrated just IPv6 code rather than both (having {{developed their own}} <b>IPSec</b> stack). Linux also integrated code from the project in its native <b>IPsec</b> implementation.|$|E
5000|$|IP Security (<b>IPSec)</b> {{product in}} late 1994, {{known as the}} first <b>IPSec</b> VPN {{commercial}} product in IT history; ...|$|E
50|$|<b>IPsec</b> was {{developed}} in conjunction with IPv6 and was originally required to be supported by all standards-compliant implementations of IPv6 before RFC 6434 made it only a recommendation. <b>IPsec</b> is also optional for IPv4 implementations. <b>IPsec</b> is most commonly used to secure IPv4 traffic.|$|E
50|$|Security Gateway (SeGW) - Installed in an operator’s network, the Security Gateway {{establishes}} <b>IPsec</b> tunnels with HNBs using IKEv2 signaling for <b>IPsec</b> tunnel management. <b>IPsec</b> tunnels {{are responsible}} for delivering all voice, messaging and packet data services between HNB and the core network. The SeGW forwards traffic to HNB-GW.|$|E
50|$|There {{are several}} open source {{implementations}} of <b>IPsec</b> with associated IKE capabilities. On Linux, Libreswan, Openswan and strongSwan implementations provide an IKE daemon called pluto, which can configure (i.e., establish SAs) to the KLIPS or NETKEY kernel-based <b>IPsec</b> stacks. NETKEY is the Linux 2.6 kernel's native <b>IPsec</b> implementation.|$|E
50|$|In computing, Internet Protocol Security (<b>IPsec)</b> is {{a network}} {{protocol}} suite that authenticates and encrypts the packets of data sent over a network. <b>IPsec</b> includes protocols for establishing mutual authentication between agents {{at the beginning}} of the session and negotiation of cryptographic keys to use during the session. <b>IPsec</b> can protect data flows between a pair of hosts (host-to-host), between a pair of security gateways (network-to-network), or between a security gateway and a host (network-to-host).Internet Protocol security (<b>IPsec)</b> uses cryptographic security services to protect communications over Internet Protocol (IP) networks. <b>IPsec</b> supports network-level peer authentication, data-origin authentication, data integrity, data confidentiality (encryption), and replay protection.|$|E
5000|$|<b>IPsec</b> {{support is}} usually {{implemented}} in the kernel with key management and ISAKMP/IKE negotiation carried out from user space. The openly specified [...] "PF_KEY Key Management API, Version 2" [...] {{is often used to}} enable the application-space key management application to update the <b>IPsec</b> Security Associations stored within the kernel-space <b>IPsec</b> implementation.|$|E
50|$|Prior to Windows Vista, {{setting up}} and {{maintaining}} <b>IPsec</b> policy configuration in many scenarios required {{setting up a}} set of rules for protection and another set of rules for traffic exemptions. <b>IPsec</b> nodes in Windows Vista communicate while simultaneously negotiating protected communications and if a response is received and negotiation completes, subsequent communications are protected. This eliminates the need to set up <b>IPsec</b> filters for exemptions for the set of hosts that do not or cannot support <b>IPsec,</b> allows setting up required incoming protected initiated communication and optional outgoing communication. <b>IPsec</b> also allows securing traffic between domain controllers and member computers, while still allowing clear text for domain joins and other communication types. <b>IPsec</b> protected domain joins are allowed if using NTLM v2 and if both, the domain controllers and member computers are running Windows Server 2008 and Windows Vista respectively.|$|E
50|$|Internet Protocol Security (<b>IPsec)</b> is a {{protocol}} suite for secure Internet Protocol (IP) communications that works by authenticating and encrypting each IP packet of a communication session. <b>IPsec</b> includes protocols for establishing mutual authentication between agents {{at the beginning}} of the session and negotiation of cryptographic keys to be used during the session. <b>IPsec</b> can be used in protecting data flows between a pair of hosts (host-to-host), between a pair of security gateways (network-to-network), or between a security gateway and a host (network-to-host).Internet Protocol security (<b>IPsec)</b> uses cryptographic security services to protect communications over Internet Protocol (IP) networks. <b>IPsec</b> supports network-level peer authentication, data origin authentication, data integrity, data confidentiality (encryption), and replay protection.|$|E
5000|$|IP {{security}} (<b>IPsec)</b> {{can be used}} {{to encrypt}} traffic between network nodes, reducing or eliminating the amount of plain text information transmitted over the air. This security method addresses privacy concerns of wireless users, as it becomes much more difficult to observe their wireless activity. Difficulty of setting up <b>IPsec</b> is related to the brand of access point being used. Some access points may not offer <b>IPsec</b> at all, while others may require firmware updates before <b>IPsec</b> options are available. Methods to defeat this type of security are computationally intensive {{to the extent that they}} are infeasible using readily-available hardware, or they rely on social engineering to obtain information (keys, etc.) about the <b>IPsec</b> installation.|$|E
50|$|Most <b>IPsec</b> {{implementations}} {{consist of}} an IKE daemon that runs in user space and an <b>IPsec</b> stack in the kernel that processes the actual IP packets.|$|E
50|$|When this <b>IPsec</b> {{connection}} is active, the default IP address for outgoing connections is 192.0.0.1. Since this {{is covered by}} the <b>IPsec</b> tunnel, the packet will be encrypted and send to the remote <b>IPsec</b> gateway at 192.1.0.1. It will get decrypted and then sent to its original destination. Response packets follow a similar path in reverse.|$|E
50|$|Existing <b>IPsec</b> {{implementations}} usually include ESP, AH, and IKE version 2. Existing <b>IPsec</b> implementations on UNIX-like operating systems, for example, Solaris or Linux, usually include PF_KEY version 2.|$|E
50|$|Internet Protocol Security (<b>IPsec)</b> is a {{suite of}} {{protocols}} for securing Internet Protocol (IP) communications by authenticating and encrypting each IP packet in a data stream. <b>IPsec</b> also includes protocols for cryptographic key establishment. <b>IPsec</b> was originally designed as a base specification in IPv6 in 1995, and later adapted to IPv4, with which it has found widespread use in securing virtual private networks.|$|E
5000|$|<b>IPsec</b> {{is fully}} integrated, {{allowing}} connections {{to be allowed}} or denied based on security certificates, Kerberos authentication, etc. Encryption can also be required {{for any kind of}} connection. A connection security rule can be created using a wizard that handles the complex configuration of <b>IPsec</b> policies on the machine. Windows Firewall can allow traffic based on whether the traffic is secured by <b>IPsec.</b>|$|E
5000|$|<b>IPsec</b> {{configuration}} {{for server}} or domain isolation is simplified with the Simple Policy Update which reduces {{the number of}} <b>IPsec</b> filters from many hundreds of filters to only two filters.|$|E
50|$|According to 3GPP specifications, user {{authentication}} {{must be based}} on Digest AKA, somewhat analogous to the UMTS (Universal Mobile Telecommunications System) access authentication but for SIP. The 3GPP specification TS 33.203 exposed to signalling between the user agent and the P-CSCF should be based on <b>IPsec</b> ESP (Encapsulating Security Payload) in transport mode. However, the use of <b>IPSec</b> in this mode was not suitable for use in fixed networks. The problem lay in the intersection <b>IPsec</b> NAT (Network Address Translation), so TISPAN (Telecommunications and Internet Convergence Services and Protocols for Advanced Networks) mode selected UDP (User Datagram Protocol) encapsulation of <b>IPsec.</b>|$|E
5000|$|The FreeS/WAN {{project was}} one of the early proponents of OE. The effort is {{continued}} by the former freeswan developers now working on Libreswan. libreswan aims to support different authentication hooks for Opportunistic Encryption with <b>IPsec.</b> Version 3.16 released in December 2015 has support for Opportunistic <b>IPsec</b> using AUTH-NULL which is based on [...] The Libreswan Project is currently working on (forward) DNSSEC and Kerberos support for Opportunistic <b>IPsec.</b>|$|E
5000|$|<b>IPsec</b> virtual {{private network}} clients use NAT {{traversal}} {{in order to have}} Encapsulating Security Payload packets traverse NAT. <b>IPsec</b> uses several protocols in its operation which must be enabled to traverse firewalls and network address translators: ...|$|E
50|$|<b>IPsec</b> fully {{supports}} IPv6, AuthIP (which {{allows for}} a second authentication), integration with NAP for authenticating with a health certificate, Network Diagnostics Framework support for failed <b>IPsec</b> negotiation, new <b>IPsec</b> performance counters, and improved detection of cluster node failure and faster renegotiation of security associations. There is support for stronger algorithms for main mode negotiation (stronger DH algorithms and Suite B) and data integrity and encryption (AES with CBC, AES-GMAC, SHA-256, AES-GCM).|$|E
5000|$|<b>IPsec</b> is now fully {{integrated}} with Windows Firewall and offers simplified configuration and improved authentication. <b>IPsec</b> supports IPv6, including support for Internet key exchange (IKE), AuthIP and data encryption, client-to-DC protection, integration with Network Access Protection and Network Diagnostics Framework support. To increase security and deployability of <b>IPsec</b> VPNs, Windows Vista includes AuthIP which extends the IKE cryptographic protocol to add features like authentication with multiple credentials, alternate method negotiation and asymmetric authentication.|$|E
50|$|Internet Protocol Security (<b>IPsec)</b> was {{originally}} developed for IPv6, but found widespread deployment first in IPv4, {{for which it}} was re-engineered. <b>IPsec</b> was a mandatory specification of the base IPv6 protocol suite, but has since been made optional.|$|E
50|$|When {{the process}} is complete, L2TP packets between the {{endpoints}} are encapsulated by <b>IPsec.</b> Since the L2TP packet itself is wrapped and hidden within the <b>IPsec</b> packet, no information about the internal private network can be gathered from the encrypted packet. Also, {{it is not necessary}} to open UDP port 1701 on firewalls between the endpoints, since the inner packets are not acted upon until after <b>IPsec</b> data has been decrypted and stripped, which only takes place at the endpoints.|$|E
5000|$|Site-to-site <b>IPSec</b> VPN {{encrypted}} {{communication between}} offices ...|$|E
