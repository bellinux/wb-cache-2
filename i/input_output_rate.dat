0|10000|Public
5000|$|... "Elastic" [...] pipelines, which achieve high {{performance}} while gracefully handling variable <b>input</b> and <b>output</b> <b>rates</b> and mismatched pipeline stage delays.|$|R
40|$|Multirate Signal Processing studies Digital Signal Processing systems {{which include}} sample rate conversion. This {{technique}} {{is used for}} systems with different <b>input</b> and <b>output</b> sample <b>rates,</b> but may {{also be used to}} implement systems with equal <b>input</b> and <b>output</b> <b>rates.</b> We are going to study the architecture of multirate signal processing circuits that is Upsampler, Downsampler, Interpolator and Decimator in this paper...|$|R
40|$|Abstract — Multi-rate Signal Processing {{consists}} of using multiple sample rates within {{a system to}} achieve computational efficiencies that are impossible to obtain with a system that operates on a single fixed sample rate. In Multi-rate Signal processing studies used in Digital Signal processing systems include sample rate conversion. This technique is used for systems with different <b>input</b> and <b>output</b> sample <b>rates,</b> but may {{also be used to}} implement systems with equal <b>input</b> and <b>output</b> <b>rates.</b> This paper presents the proposed reconfigurable architecture of Multirate signal processing circuits such as Interpolator and Decimator with low complexity...|$|R
5000|$|Or most {{commonly}} when the output buffer is full - congestion (for example the combined rate of multiple <b>inputs</b> exceeds the <b>output</b> <b>rate)</b> ...|$|R
50|$|Unlike the POSIX {{terminal}} interface, the Seventh Edition Unix {{terminal interface}} recorded <b>input</b> and <b>output</b> baud <b>rates</b> {{directly in the}} data structure.|$|R
40|$|A {{time-division}} multiplexing {{system has been}} developed that is significantly different from commercially available equipments. Multiplexing is achieved by interleaving blocks of data from each source, preceded by a short coded bit pattern specifying the source of that particular block of data. Data blocks are transmitted as they become available from each particular source. Hence, synchronism of the <b>input</b> and <b>output</b> <b>rates</b> is not required. The prototype system can accommodate input rates as high as 461 kbit/sec on a single <b>input</b> channel, and <b>output</b> <b>rates</b> as high as 953 kbit/sec. The system makes possible use of an excess of 90 % of channel capacity for information transmittal...|$|R
40|$|We {{consider}} the busy period in a stochastic fluid flow model with infinite buffer where the <b>input</b> and <b>output</b> <b>rates</b> {{are controlled by}} a finite homogeneous Markov process. We derive an explicit expression for {{the distribution of the}} busy period and we obtain an algorithm to compute it which exhibits nice numerical properties...|$|R
40|$|Multirate {{single-stage}} and multistage {{structures for}} highspeed recursive digital filtering are introduced. They {{can be used}} for arbitrary bandwidths and to increase the speed to an arbitrary level. Most of the filtering is performed at a lower sampling rate than that of the <b>input</b> and <b>output</b> <b>rates</b> which results in a low computational complexity. Design examples are included for demonstration. 1...|$|R
40|$|We study {{boundary}} induced phase {{transitions in}} a driven lattice gas exhibiting metastability. The phase diagram for open systems, parameterized by the <b>input</b> and <b>output</b> <b>rates,</b> {{consists of two}} regions corresponding to the free flow and jammed phase. Both have been entirely characterized. The microscopic states in the high density phase are shown to have an interesting striped structure, which survives in the thermodynamic limit. Comment: 4 pages, 5 figure...|$|R
40|$|Digital circuit {{produces}} rational <b>output</b> pulse <b>rate</b> at {{fraction of}} continuous <b>input</b> pulse <b>rate.</b> <b>Output</b> pulses have average rate with least possible deviation from absolute correct time spacing. Circuit uses include frequency synthesizing, fraction generation, and approximation of irrational sequences...|$|R
30|$|We have {{extended}} LPEL {{to support this}} automatic DVFS strategy. Each SCC core runs an LPEL worker. We use the built-in monitoring framework of LPEL to observe the <b>input</b> and <b>output</b> <b>rates</b> of the program, {{as well as the}} number of workers waiting for new work. We then use this information to dynamically adjust the voltage and frequency so that the system can cope with the input rate and save energy at the same time.|$|R
40|$|Multirate Filtering {{techniques}} are used when conventional method becomes extremely costly and {{this technique is}} widely used in both sampling rate conversion system and in constructing filters with equal <b>input</b> and <b>output</b> <b>rates.</b> The basic concepts and building blocks in multirate digital signal processing are discussed here which includes down-sampler, up-sampler and analysis/synthesis representation. Applications of multirate digital filters in DS/CDMA code acquisition, Kalman filtering for optimal signal reconstruction from noisy subband system and lossy compression approach to transmultiplexed images are also reviewed...|$|R
30|$|As we {{mentioned}} before, we {{only need to}} observer <b>input</b> <b>rate,</b> <b>output</b> <b>rate,</b> and waiting workers. In addition, we also keep track of voltage and current of the SCC chip. We achieve this by memory mapping registers mentioned above. All of this information is collected and used by power manager (a part of conductor) at run-time. Power manager also writes all the information in to a log file for post-processing. Post-processing is only required to generate graphs and analyse the effects of different energy policies. Power consumption is calculated by multiplying the voltage and current consumption {{at any given moment}} (i.e. when each measurement is taken). Average power consumption of a benchmark execution is arithmetic mean of all the power readings.|$|R
40|$|A rate {{adaptation}} buffer {{is used in}} communications networks at the interface between two consecutive links, when {{the speed of the}} incoming link exceeds the speed of the outgoing link, in order to avoid excessive cell loss. In this paper we examine the performance of such a buffer in the case that the ratio between the <b>input</b> <b>rate</b> and the <b>output</b> <b>rate</b> takes an integer value, {{as well as in the}} more general case that this ratio takes any rational value greater than one (which allows among other things an evaluation of our results in case of a small mismatch between <b>input</b> and <b>output</b> <b>rates)</b> ...|$|R
50|$|Inspectors {{inspect the}} {{nameplate}} to ultimately determine what safety mechanisms that specific boiler contains. The nameplate also states what year the boiler was made, who certified the boiler, type of boiler, max operating temperature, max operating pressure, <b>input</b> firing <b>rate,</b> <b>output</b> firing <b>rate,</b> and blow off {{pressure of the}} relief or safety valve.|$|R
40|$|In this paper, {{we study}} the {{performance}} of packet concentrators with input queueing. A recent concentrator model given by Gunduzhan and Oruc considers packet concentrators with different <b>input</b> and <b>output</b> packet <b>rates</b> and gives a minimum crosspoint complexity construction for buffered sparse crossbar concentrators. We use this model {{as a basis for}} the performance evaluation of concentrators which queue packets at the inputs and have different <b>input</b> and <b>output</b> packet <b>rates.</b> It is shown that for input queueing, with constant size packets and independent batch arrivals, the best performance can be represented by a GI[x]/D/c queueing system. Using this result we provide explicit solutions for the probability distribution of queue occupancy and packet delay for binomial packet arrivals. Good tail approximations for quick calculations of buffer size and packet delay for a given probability of packet loss are also given...|$|R
40|$|As {{embedded}} DSP applications {{become more}} complex, {{it is increasingly}} important to provide high-level stream abstractions that can be compiled without sacrificing efficiency. In this paper, we describe scheduler support for StreamIt, a high-level language for signal processing applications. A StreamIt program consists {{of a set of}} autonomous tikers that communicate with each other via FIFO queues. As in Syn- chronous Dataflow (SDF), the <b>input</b> and <b>output</b> <b>rates</b> of each fiker are known at compile time. However, unlike SDF, the stream graph is represented using hierarchical structures, each of which has a single input and a single output...|$|R
40|$|The {{effect of}} a {{temporally}} correlated afferent current on the firing rate of a leaky integrate-and-fire (LIF) neuron is studied. This current is characterized in terms of rates, auto and cross-correlations, and correlation time scale τ_c of excitatory and inhibitory <b>inputs.</b> The <b>output</b> <b>rate</b> ν_out is calculated in the Fokker-Planck (FP) formalism {{in the limit of}} both small and large τ_c compared to the membrane time constant τ of the neuron. By simulations we check the analytical results, provide an interpolation valid for all τ_c and study the neuron's response to rapid changes in the correlation magnitude. Comment: 4 pages, 3 figure...|$|R
25|$|The console uses an {{external}} power supply with a 10A/100–120V or 5A/220-230V (AC) <b>input</b> and DC <b>output</b> <b>rated</b> at 203/175/150/130/115W (depending on revision). An estimated 2W of power are used while the older versions of console are in standby mode giving a yearly usage of approximately 17.5kWh. The new version uses around 0.5W while in standby. Saving the console size and weight, the power supply displaces 1300cm³.|$|R
40|$|We {{present the}} design and {{deployment}} results for PosNet - a large-scale, long-duration sensor network that gathers summary position and status information from mobile nodes. The mobile nodes have a fixed-sized memory buffer to which position data is added at a constant rate, and from which data is downloaded at a non-constant rate. We have developed a novel algorithm that performs online summarization of position data within the buffer, where the algorithm naturally accommodates data <b>input</b> and <b>output</b> <b>rate</b> mismatch, and also provides a delay-tolerant approach to data transport. The algorithm has been extensively tested in a large-scale long-duration cattle monitoring and control application. ...|$|R
40|$|The {{behaviour}} of the routers’ buffer {{may affect}} the quality of service (QoS) of network services under certain conditions, since it may modify some traffic characteristics, as delay or jitter, and may also drop packets. As a consequence, the characterization of the buffer is interesting, especially when multimedia flows are transmitted and even more if they transport information with real-time requirements. This work presents a new methodology with the aim of determining the technical and functional characteristics of real buffers (i. e., behaviour, size, limits, and <b>input</b> and <b>output</b> <b>rate)</b> of a network path. It permits the characterization of intermediate buffers of different devices in a network path across the Internet...|$|R
5000|$|As with static strip photography, videos can be {{produced}} both in [...] "tableau" [...] format (conventional almost square aspect ratio), or in [...] "strip" [...] format (very wide), and in fact can have exactly the same dimensions as the input video if input frames = input x-resolution (so the [...] array is square in the [...] dimensions); in this case if <b>input</b> and <b>output</b> frame <b>rate</b> are the same, then the <b>input</b> and <b>output</b> videos {{will have the same}} duration as well.|$|R
5000|$|The {{order of}} the fields within the [...] {{structure}} is not defined, and implementations are allowed to add non-standard fields. Indeed, implementations have to add non-standard fields for recording <b>input</b> and <b>output</b> baud <b>rates.</b> These are recorded in the structure, in an implementation-defined form, and accessed via accessor functions, rather than by direct manipulation of the field values, {{as is the case}} for the standardized structure fields.|$|R
50|$|The console uses an {{external}} power supply with a 10 A/100-120 V or 5 A/220-230 V (AC) <b>input</b> and DC <b>output</b> <b>rated</b> at 203/175/150/130/115 W (depending on revision). An estimated 2 W of power are used while the older versions of console are in standby mode giving a yearly usage of approximately 17.5 kWh. The new version uses around 0.5W while in standby. Saving the console size and weight, the power supply displaces 1300 cm³.|$|R
500|$|In a {{continuous}} distillation, {{the system is}} kept in a steady state or approximate steady state. [...] Steady state means that quantities related to the process do not change as time passes during operation. [...] Such constant quantities include feed <b>input</b> <b>rate,</b> <b>output</b> stream <b>rates,</b> heating and cooling rates, reflux ratio, and temperatures, pressures, and compositions at every point (location). [...] Unless the process is disturbed due to changes in feed, heating, ambient temperature, or condensing, steady state is normally maintained. [...] This is also the main attraction of continuous distillation, apart from the minimum amount of (easily instrumentable) surveillance; if the feed rate and feed composition are kept constant, product rate and quality are also constant. [...] Even when a variation in conditions occurs, modern process control methods are commonly able to gradually return the continuous process to another steady state again.|$|R
50|$|In a {{continuous}} distillation, {{the system is}} kept in a steady state or approximate steady state. Steady state means that quantities related to the process do not change as time passes during operation. Such constant quantities include feed <b>input</b> <b>rate,</b> <b>output</b> stream <b>rates,</b> heating and cooling rates, reflux ratio, and temperatures, pressures, and compositions at every point (location). Unless the process is disturbed due to changes in feed, heating, ambient temperature, or condensing, steady state is normally maintained. This is also the main attraction of continuous distillation, apart from the minimum amount of (easily instrumentable) surveillance; if the feed rate and feed composition are kept constant, product rate and quality are also constant. Even when a variation in conditions occurs, modern process control methods are commonly able to gradually return the continuous process to another steady state again.|$|R
40|$|This paper {{considers}} {{the problem of}} scheduling streaming applications on uniprocessors {{in order to minimize}} the num-ber of cache-misses. Streaming applications are represented as a directed graph (or multigraph), where nodes are com-putation modules and edges are channels. When a mod-ule fires, it consumes some data-items from its input chan-nels and produces some items on its output channels. In addition, each module may have some state (either code or data) which represents the memory locations that must be loaded into cache in order to execute the module. We con-sider synchronous dataflow graphs where the <b>input</b> and <b>output</b> <b>rates</b> of modules are known in advance and do not change during execution. We also assume that the state size of modules is known in advance...|$|R
40|$|We {{study the}} optimal control of storage {{which is used}} for arbitrage, i. e. for buying a {{commodity}} when it is cheap and selling it when it is expensive. Our particular concern is with the management of energy systems, although the results are generally applicable. We consider a model which may account for nonlinear cost functions, market impact, <b>input</b> and <b>output</b> <b>rate</b> constraints and inefficiencies or losses in the storage process. We develop an algorithm which is maximally efficient in then sense that it incorporates the result that, at each point in time, the optimal management decision depends only a finite, and typically short, time horizon. We give examples related to the management of a real-world system. Comment: 7 pages, 6 figure...|$|R
40|$|A one-dimensional, {{physically}} based, station precipitation {{model is}} proposed and tested. The model state variable is the liquid water equiv-alent mass in a unit area cloud column. Model inputs are the air tempera-ture, dew-point temperature, and pressure {{at the ground}} surface. The precipitation rate at the ground surface is the model output. Simplified cloud microphysics give expressions for the moisture <b>input</b> and <b>output</b> <b>rates</b> in and from the unit area column. Parameterization of the model physical quantities: updraft velocity, cloud top pressure, and average layer cloud-particle diameter is proposed, so that parameters, will re-main reasonably constant for different storms. Conceptual soil and channel routing models were used together with the proposed precipitation model in formulating a general Rainfall-Runoff model. Hourly data from eleven storms of different types and from two dif...|$|R
30|$|Our {{lightweight}} {{strategy for}} DVFS on RSPs, which {{is described in}} Section 5, reduces the frequency and voltage in case that the system has more than enough resources available {{to cope with the}} current input rate. It increase frequency and voltage in case when the load changes and the system becomes overloaded. To do so, we observe the <b>input</b> and <b>output</b> <b>rates</b> of the RSPs, as well as the number of workers waiting for new work to predict overload and underload situations. We then use this information for DVFS so that the system can cope with the input rate and save energy at the same time. Our evaluation in Section 6 indicates that our DVFS strategy for RSPs can reduce energy consumption significantly, even down to half of the non-regulated one. Section 7 concludes this research.|$|R
40|$|We {{investigate}} {{the effect of}} quenched spatial disordered hopping rates {{on the characteristics of}} the asymmetric simple exclusion process (ASEP) with open boundaries both numerically and by extensive simulations. Disorder averages of the bulk density and current are obtained in terms of various <b>input</b> and <b>output</b> <b>rates.</b> We study the binary and uniform distributions of disorder. It is verified that the effect of spatial inhomogeneity is generically to enlarge the size of the maximal current phase. This is in accordance with the mean field results obtained by Harris and Stinchcombe. Furthermore, we obtain the dependence of the current and the bulk density on the characteristics of the disorder distribution function. It is shown that the impact of disorder crucially depends on the particle input and out rates. In some situations, disorder can constructively enhance the current. Comment: 9 pages, 22 eps figures, Revte...|$|R
40|$|We {{analyze the}} {{transient}} behavior of stochastic fluid flow models {{in which the}} <b>input</b> and <b>output</b> <b>rates</b> are controlled by a finite homogeneous Markov process. Such models are used in asynchronous transfer mode (ATM) to evaluate the performance of fast packet switching and in manufacturing systems {{for the performance of}} producers and consumers coupled by a buffer. The transient analysis of such models has already been considered in earlier works and solutions have been obtained by the use of Laplace transform. We derive in this paper a new transient solution only based on recurrence relations. We show that this solution is particularly interesting for its numerical properties. The limiting behavior of the solution is also considered. We empirically show mat the algorithm for computing the transient solution can be stopped when some stationary behavior is detected. 0 1998 Elsevier Science B. V...|$|R
40|$|Stream {{programs}} {{represent an}} important class of high-performance computations. Defined by their regular processing of sequences of data, stream programs appear most commonly {{in the context}} of audio, video, and digital signal processing, though also in networking, encryption, and other areas. Stream programs can be naturally represented as a graph of independent actors that communicate explicitly over data channels. In this work we focus on programs where the <b>input</b> and <b>output</b> <b>rates</b> of actors are known at compile time, enabling aggressive transformations by the compiler; this model is known as synchronous dataflow. We develop a new programming language, StreamIt, that empowers both programmers and compiler writers to leverage the unique properties of the streaming domain. StreamIt offers several new abstractions, including hierarchical single-input single-output streams, composable primitives for data reordering, and a mechanism called teleport messaging that enables precise event handlin...|$|R
40|$|In this paper, {{we propose}} a fuzzy logic based control scheme for real time MPEG video to avoid long delay or {{excessive}} loss at the user-network interface (UNI) in an ATM network. The system {{consists of a}} shaper whose role is to smooth the MPEG output traffic to reduce the burstiness of the video stream. The <b>input</b> and <b>output</b> <b>rates</b> of the shaper buffer are controlled by two fuzzy logic based controllers. To avoid a long delay at the shaper, the first controller aims to tune the <b>output</b> <b>rate</b> of the shaper {{based on the number}} of available transmission credits at the UNI and the occupancy of the shaper's buffer in the video frame time-scale. Based on the average occupancy of the shaper's buffer and its variance, the second controller tunes the input rate to the shaper over a much larger time-scale by applying a closed loop MPEG encoding scheme. With this approach, the traffic enters the network at an almost constant bit rate (with a very small variation) allowing simple network management fu [...] ...|$|R
40|$|In {{this paper}} we {{characterize}} {{the features of}} good packet routing schemes for input queued sparse crossbar based packet concentrators and propose a polling based routing algorithm which achieves near optimal performance. It has been shown by {{the authors of this}} paper that the performance of an input queued packet concentrator with different <b>input</b> and <b>output</b> packet <b>rates</b> can be modeled by a GI queueing system. This result was shown to give the least packet loss for i. i. d batch arrivals for fixed length packets. We now address the issue of finding a routing scheme which tries to achieve this best possible performance specifically on a particular type of packet concentrator, the sparse crossbar concentrator with a crosspoint structure based on the buffered network model construction proposed by Oruc and Gunduzhan. We identify the constraints imposed on routing by the asymmetric crosspoint fabric of the sparse crossbar concentrator and the difference in <b>input</b> and <b>output</b> packet <b>rates.</b> A round-robin polling based heuristic algorithm is then proposed which is shown via simulation to achieve very good performance. In particular, we also show that when inputs are saturated this algorithm emulates the GI system, i. e., achieves the best possible performance...|$|R
40|$|In this paper, {{interval}} type- 2 {{fuzzy logic}} controller based {{maximum power point}} tracking method is proposed for photovoltaic systems. The proposed interval type- 2 fuzzy logic controller has two <b>inputs</b> and one <b>output.</b> <b>Rate</b> of change in photovoltaic system <b>output</b> power and <b>rate</b> of change in photovoltaic system terminal voltage are selected as input variables and change in duty cycle as output variable. Seven type- 2 membership functions are used for determined <b>input</b> and <b>output</b> variables of fuzzy logic controller. Since type- 2 fuzzy sets are used, effect of uncertainties on {{maximum power point tracking}} capability is removed. Operation point of the photovoltaic system is controlled via a boost type DC?DC converter. Simulation results show that the proposed maximum power point tracking method provides fast dynamic response, and it is also useful for rapidly changing atmospheric conditions...|$|R
