1|693|Public
40|$|Abstract- This paper advocates the {{operation}} of a toy car that is controlled by a mobile phone that makes {{a call to the}} mobile phone attached to the car. In the course of a call, if any button is pressed, a tone corresponding to the button pressed is heard {{at the other end of}} the call. This tone is called DTMF (dual-tonemultiple-frequency). The car perceives this DTMF tone with the help of the phone stacked in the car. The received tone is processed by the (ATmega 16) microcontroller with the help of DTMF decoder MT 887 o. The decoder decodes the DTMF tone into its <b>equivalent</b> <b>binary</b> <b>digit</b> and this binary number is sent to the microcontroller. The microcontroller is programmed to take a decision for any given input and outputs its decision to motor drivers in order to drive the motors in forward direction or backward direction or left and right direction. The mobile phone that makes a call to mobile phone stacked in the car act as a remote. For that reason this paper does not require the construction of receiver and transmitter units. D I...|$|E
25|$|In computers, {{the main}} numeral systems {{are based on}} the {{positional}} system in base2 (binary numeral system), with two <b>binary</b> <b>digits,</b> 0 and 1. Positional systems obtained by grouping <b>binary</b> <b>digits</b> by three (octal numeral system) or four (hexadecimal numeral system) are commonly used. For very large integers, bases232 or 264 (grouping <b>binary</b> <b>digits</b> by 32 or 64, the length of the machine word) are used, as, for example, in GMP.|$|R
50|$|In 1998 Simon Plouffe gave a ruler and compass {{algorithm}} {{that can}} be used to compute <b>binary</b> <b>digits</b> of certain numbers.The algorithm involves the repeated doubling of an angle and becomes physically impractical after about 20 <b>binary</b> <b>digits.</b>|$|R
50|$|The {{symbol for}} <b>binary</b> <b>digit</b> is either simply bit (recommended by the IEC 80000-13:2008 standard) or {{lowercase}} b (recommended by the IEEE 1541-2002 standard). A {{group of eight}} <b>binary</b> <b>digits</b> is commonly called one byte, but historically {{the size of the}} byte is not strictly defined.|$|R
5000|$|The bit (a {{portmanteau}} of <b>binary</b> <b>digit)</b> is a {{basic unit}} of information used in computing and digital communications. A <b>binary</b> <b>digit</b> can have only one of two values, and may be physically represented with a two-state device. These state values are most commonly represented as either a [...]|$|R
50|$|The octal and {{hexadecimal}} {{systems are}} often used in computing because of their ease as shorthand for <b>binary.</b> Every hexadecimal <b>digit</b> corresponds to a sequence of four <b>binary</b> <b>digits,</b> since sixteen is the fourth power of two; for example, hexadecimal 7816 is binary 2. A similar relationship holds between every octal digit and every possible sequence of three <b>binary</b> <b>digits,</b> since eight is the cube of two.|$|R
5000|$|Equivalently, {{expressed}} as strings of <b>binary</b> <b>digits,</b> the codewords are: ...|$|R
5000|$|... so the 8th to 11th <b>binary</b> <b>digits</b> in the <b>binary</b> {{expansion}} of ln(2) are 1, 0, 1, 1. Note {{that we have}} not calculated the values of the first seven <b>binary</b> <b>digits</b> - indeed, all information about them has been intentionally discarded by using modular arithmetic in the [...] "head" [...] sum.|$|R
5000|$|The {{symbol rate}} {{is related to}} gross bit rate {{expressed}} in bit/s.The term baud has sometimes incorrectly been used to mean bit rate, since these rates are the same in old modems {{as well as in}} the simplest digital communication links using only one bit per symbol, such that <b>binary</b> <b>digit</b> [...] "0" [...] is represented by one symbol, and <b>binary</b> <b>digit</b> [...] "1" [...] by another symbol. In more advanced modems and data transmission techniques, a symbol may have more than two states, so it may represent more than one bit. A bit (<b>binary</b> <b>digit)</b> always represents one of two states.|$|R
50|$|Append the {{remaining}} N <b>binary</b> <b>digits</b> to this representation of N+1.|$|R
5000|$|The Ehrenfeucht-Mycielski {{sequence}}, {{a sequence}} of <b>binary</b> <b>digits</b> with pseudorandom properties ...|$|R
5000|$|... 18 <b>binary</b> <b>digits</b> have [...] (1000000 octal, 40000 hexadecimal) {{distinct}} combinations.|$|R
5000|$|Append the {{remaining}} N <b>binary</b> <b>digits</b> of x to this representation of N.|$|R
40|$|AbstractA {{new family}} of {{increasing}} sequences of positive integers is proposed. The integers n {{for which the}} sum of <b>binary</b> <b>digits</b> {{is equal to the}} sum of <b>binary</b> <b>digits</b> of n 2 are an example of sequence of this family and this sequence is more accurately studied. Some structure and asymptotic properties are proved and a conjecture about its counting function is discussed...|$|R
50|$|The {{message is}} written with only four basic symbols {{representing}} the <b>binary</b> <b>digits</b> one and zero and {{open and close}} brackets. Numbers are represented as a string of <b>binary</b> <b>digits</b> between a pair of brackets and expressions are represented as a string of numbers between brackets. Identifiers for operations are arbitrarily-assigned numbers and their functions can be defined within the message itself.|$|R
2500|$|... 1995– Simon Plouffe discovers Bailey–Borwein–Plouffe formula {{capable of}} finding the nth <b>binary</b> <b>digit</b> of π.|$|R
5000|$|... {{which is}} maximum at [...] when , thus {{providing}} a minimum precision of [...] <b>binary</b> <b>digits.</b>|$|R
5000|$|<b>Binary</b> <b>digits</b> of pi from forty {{trillion}} minus {{three to}} forty trillion sixty-four (February 9, 1999): ...|$|R
5000|$|<b>Binary</b> <b>digits</b> of pi {{from one}} {{quadrillion}} minus {{three to one}} quadrillion sixty (September 11, 2000): ...|$|R
40|$|A {{new family}} of {{sequences}} is proposed. An example of sequence {{of this family}} is more accurately studied. This sequence is composed by the integers $n$ for which the sum of <b>binary</b> <b>digits</b> {{is equal to the}} sum of <b>binary</b> <b>digits</b> of $n^ 2 $. Some structure and asymptotic properties are proved and a conjecture about its counting function is discussed. Comment: 10 page...|$|R
50|$|Separate X {{into the}} highest power of 2 it {{contains}} (2N) {{and the remaining}} N <b>binary</b> <b>digits.</b>|$|R
50|$|The Baire space can be {{contrasted with}} Cantor space, {{the set of}} {{infinite}} sequences of <b>binary</b> <b>digits.</b>|$|R
5000|$|<b>Binary</b> <b>digits</b> of pi {{from five}} {{trillion}} minus {{three to five}} trillion seventy-six (completed August 30, 1998): ...|$|R
5000|$|The Ehrenfeucht-Mycielski {{sequence}} is a {{recursively defined sequence}} of <b>binary</b> <b>digits</b> with pseudorandom properties, defined by [...]|$|R
5000|$|The {{analysis}} for isolines over triangles is especially simple: there are 3 <b>binary</b> <b>digits,</b> so 8 possibilities: ...|$|R
5000|$|The key {{schedule}} of the RC5 cipher uses <b>binary</b> <b>digits</b> from both [...] {{and the golden}} ratio.|$|R
25|$|The {{algorithm}} {{involves the}} repeated doubling of an angle and becomes physically impractical after about 20 <b>binary</b> <b>digits.</b>|$|R
50|$|The winning {{strategy}} is as follows: Like in ordinary multi-heap Nim, {{one considers the}} binary representation of the heap sizes (or heap sizes modulo r + 1). In ordinary Nim one forms the XOR-sum (or sum modulo 2) of each <b>binary</b> <b>digit,</b> and the winning {{strategy is}} to make each XOR sum zero. In the generalization to index-k Nim, one forms the sum of each <b>binary</b> <b>digit</b> modulo k + 1.|$|R
5000|$|Von Neumann {{suggests}} (Sec. 5.6) {{keeping the}} computer {{as simple as}} possible, avoiding any attempt at improving performance by overlapping operations. Arithmetic operations are to be performed one <b>binary</b> <b>digit</b> at a time. He estimates addition of two <b>binary</b> <b>digits</b> as taking one microsecond and that therefore a 30-bit multiplication should take about 302 microseconds or about one millisecond, much faster than any computing device available at the time.|$|R
50|$|Other {{units of}} information, {{sometimes}} used in information theory, include the natural digit also called a nat or nit and defined as log2 e (≈ 1.443) bits, where e is {{the base of}} the natural logarithms; and the dit, ban, or hartley, defined as log2 10 (≈ 3.322) bits. This value, slightly less than 10/3, may be understood because 103 = 1000 ≈ 1024 = 210: three decimal digits are slightly less information than ten <b>binary</b> <b>digits,</b> so one decimal digit is slightly less than 10/3 <b>binary</b> <b>digits.</b> Conversely, one bit of information corresponds to about ln 2 (≈ 0.693) nats, or log10 2 (≈ 0.301) hartleys. As with the inverse ratio, this value, approximately 3/10, but slightly more, corresponds to the fact that 210 = 1024 ~ 1000 = 103: ten <b>binary</b> <b>digits</b> are slightly more information than three decimal <b>digits,</b> so one <b>binary</b> <b>digit</b> is slightly more than 3/10 decimal digits. Some authors also define a binit as an arbitrary information unit equivalent to some fixed but unspecified number of bits.|$|R
50|$|Bit-length is {{the number}} of <b>binary</b> <b>digits,</b> called bits, {{necessary}} to represent an integer in the binary number system.|$|R
50|$|Typical {{applications}} of this encoding are when the source information comprises long substrings {{of the same}} character or <b>binary</b> <b>digit.</b>|$|R
25|$|In 1998 Simon Plouffe gave a ruler and compass {{algorithm}} {{that can}} be used to compute <b>binary</b> <b>digits</b> of certain numbers.|$|R
5000|$|To start calculating <b>binary</b> <b>digits</b> from, say, the 8th {{place we}} {{multiply}} this identity by 27(since 7 = 8 - 1): ...|$|R
25|$|In his 1891 article, Cantor {{considered}} the set T of all infinite sequences of <b>binary</b> <b>digits</b> (i.e. each digit is zero or one).|$|R
50|$|Confusion {{means that}} each <b>binary</b> <b>digit</b> (bit) of the {{ciphertext}} should depend on several {{parts of the}} key, obscuring the connections between the two.|$|R
