45|10000|Public
5000|$|In Abstract Syntax Notation One (ASN.1), the {{ellipsis}} {{is used as}} {{an extension}} marker to indicate the possibility of type extensions in future revisions of a protocol specification. In a type constraint expression like A ::= INTEGER (0..127, ..., 256..511) an ellipsis is used to separate the extension root from extension additions. The <b>definition</b> <b>of</b> <b>type</b> A in version 1 system of the form A ::= INTEGER (0..127, ...) and the <b>definition</b> <b>of</b> <b>type</b> A in version 2 system of the form A ::= INTEGER (0..127, ..., 256..511) constitute an extension series of the same type A in {{different versions of the}} same specification. The ellipsis can also be used in compound type definitions to separate the set of fields belonging to the extension root from the set of fields constituting extension additions. Here is an example: B ::= SEQUENCE { a INTEGER, b INTEGER, ..., c INTEGER } ...|$|E
5000|$|Type {{safety is}} usually a {{requirement}} for any toy language proposed in academic programming language research. Many languages, on the other hand, are too big for human-generated type safety proofs, as they often require checking thousands of cases. Nevertheless, some languages such as Standard ML, which has rigorously defined semantics, have been proved to meet one <b>definition</b> <b>of</b> <b>type</b> safety. Some other languages such as Haskell are believed to meet some <b>definition</b> <b>of</b> <b>type</b> safety, provided certain [...] "escape" [...] features are not used (for example Haskell's unsafePerformIO, used to [...] "escape" [...] from the usual restricted environment in which I/O is possible, circumvents the type system and so {{can be used to}} break type safety.) Type punning is another example of such an [...] "escape" [...] feature. Regardless of the properties of the language definition, certain errors may occur at run-time due to bugs in the implementation, or in linked libraries written in other languages; such errors could render a given implementation type unsafe in certain circumstances. An early version of Sun's Java virtual machine was vulnerable to this sort of problem.|$|E
50|$|This {{class of}} stars was {{introduced}} with the Harvard sequence of stellar spectra {{and published in}} the Revised Harvard photometry catalogue. The <b>definition</b> <b>of</b> <b>type</b> B-type stars was the presence of non-ionized helium lines with the absence of singly ionized helium in the blue-violet portion of the spectrum. All of the spectral classes, including the B type, were subdivided with a numerical suffix that indicated {{the degree to which}} they approached the next classification. Thus B2 is two tenths of the way from type B (or B0) to type A.|$|E
5000|$|... #Subtitle level 2: <b>Definitions</b> <b>of</b> <b>types</b> <b>of</b> credit {{transactions}} ...|$|R
50|$|In certain cases, {{there can}} {{be more than one}} <b>definition</b> <b>of</b> a <b>type</b> or a template. A program {{consisting}} of multiple header files and source files will typically have more than one <b>definition</b> <b>of</b> a <b>type,</b> but not more than one definition per translation unit.|$|R
5000|$|Standardize <b>definitions</b> <b>of</b> reserve <b>types</b> {{and reserve}} {{calculations}} ...|$|R
5000|$|The Expert Committee on the Diagnosis and Classification of Diabetes Mellitus {{does not}} {{recognize}} the term [...] "latent autoimmune diabetes" [...] (LADA); rather, it includes LADA in the <b>definition</b> <b>of</b> <b>Type</b> 1 autoimmune diabetes: [...] "Type 1 diabetes results from a cellular-mediated autoimmune destruction of the beta-cells of the pancreas. In type 1 diabetes, the rate of beta-cell destruction is quite variable, being rapid in some individuals (mainly infants and children) and slow in others (mainly adults).” The National Institutes of Health (NIDDK) defines LADA as [...] "a condition in which Type 1 diabetes develops in adults." ...|$|E
50|$|In {{computer}} science, type {{safety is}} the extent to which a programming language discourages or prevents type errors. A type error is erroneous or undesirable program behaviour caused by a discrepancy between differing data types for the program's constants, variables, and methods (functions), e.g., treating an integer (int) as a floating-point number (float). Type safety is sometimes alternatively considered to be a property of a computer program rather than the language in which that program is written; that is, some languages have type-safe facilities that can be circumvented by programmers who adopt practices that exhibit poor type safety. The formal type-theoretic <b>definition</b> <b>of</b> <b>type</b> safety is considerably stronger than what is understood by most programmers.|$|E
40|$|Abstract—This {{study is}} based on the method of {{analyzing}} the steady-state errors of the traditional unity feedback control systems. The method in this study combines the concept of type number and the new error function offered by Kuo. In this study, the <b>definition</b> <b>of</b> <b>type</b> number will be revised. The new <b>definition</b> <b>of</b> <b>type</b> number is useful and correct in unity feedback control systems and nonunity feedback control systems. Thus, the steady-state errors of nonunity feedback control systems can be obtained directly by this method. Keywords-nonentity feedback; steady-state error; type numbe; error function I...|$|E
30|$|The <b>definition</b> <b>of</b> every <b>type</b> <b>of</b> floor {{field is}} now illustrated.|$|R
50|$|Locally, the makeup, {{names and}} <b>definitions</b> <b>of</b> these <b>types</b> <b>of</b> {{entities}} are fluid and sometimes interchangeable.|$|R
5000|$|... 3. Establish clear <b>definitions</b> <b>of</b> each <b>type</b> <b>of</b> project: breakthrough, platform, derivative, R&D, or partnered projects.|$|R
3000|$|In the {{singular}} limit, we have I_h=I_c=I_bif indicating {{the singular}} {{nature of the}} bifurcation. Note that the classic <b>definition</b> <b>of</b> <b>type</b> II excitability refers to the slow O(ε [...]) frequency band of the large relaxation oscillations which does not vary much (and not to the actual intermediate O(ε ^ 1 / 2) singular Andronov–Hopf bifurcation frequency).|$|E
40|$|We {{present a}} class of {{solvable}} SO(D) symmetric matrix models including chiral fermions. The SO(D) symmetry is spontaneously broken due to the phase of the fermion integral. This demonstrates the conjectured mechanism for the dynamical generation of four-dimensional space-time in the IIB matrix model, which was proposed as a nonperturbative <b>definition</b> <b>of</b> <b>type</b> IIB superstring theory in ten dimensions...|$|E
40|$|The paper {{considers}} the distinctive features {{of different types}} of single-phase damage in the distribution networks. By results of researches the algorithm is developed for <b>definition</b> <b>of</b> <b>type</b> of single-phase damage {{on the basis of the}} information on emergency operation parameters. The results can be used in devices of microprocessor relay protection when implementing a function fault location in distribution power networks. </p...|$|E
30|$|Now, we {{recall the}} <b>definitions</b> <b>of</b> Caputo <b>type</b> Hadamard {{fractional}} derivatives (see [17]).|$|R
30|$|Similarly by (2.19) we {{can give}} the {{following}} <b>definition</b> <b>of</b> Cauchy <b>type</b> means.|$|R
30|$|Now, let us {{recall the}} <b>definition</b> <b>of</b> topological <b>types</b> for an {{equilibrium}} point (x,y).|$|R
3000|$|The {{purpose of}} the <b>definition</b> <b>of</b> <b>type</b> is to compare the growth of class {{functions}} which {{all have the same}} order. For example, let f(s)=e^e ^s, g(s)=e^e^ 2 s, by a simple computation, we have ρ (f)= 1 = ρ (g), but T(f)= 1 and T(g)=∞. Thus, we can see that the growth of g(s) is faster than f(s) as [...] s → +∞.|$|E
40|$|Grammatical {{design is}} useful for the {{generation}} {{of a set of}} related designs. The concept of type aids designers in generating designs with a specified structure. However, existing studies in grammar are ambiguous in their <b>definition</b> <b>of</b> <b>type</b> in the language of designs generated by a grammar. Extending our previous study of defining style in grammar, this paper provides a formal definition of the concept of type in the language of designs generated by a grammar. This is done {{with the help of a}} description scheme which is developed by augmenting grammar primitives and spatial relations with descriptors. The description scheme allows the computation of descriptors for designs generated from grammar thus making possible the comparison of various design types in the language of a grammar.   Such a description scheme for defining design types is especially significant for less restricted grammars that generate a large number of designs that are varied in nature. A formal <b>definition</b> <b>of</b> <b>type</b> in grammars allows users to sift through designs with particular features, and thus select desired designs. ...|$|E
40|$|This paper {{gives an}} {{extensive}} {{overview of the}} problem of typing in general, typing in programming languages, typing in database systems, and specifically typing in object oriented database systems. The survey starts with the <b>definition</b> <b>of</b> <b>type</b> elaborated from a mathematical point of view and {{from the point of view}} of an object oriented class hierarchy. There follows a short description of possible methods for typing in database systems. Combining all these w...|$|E
40|$|The volume {{collects}} several seminal {{contributions in}} the field of traumatology. The Editor divides the papers into four main areas of research: neuroscience and trauma, trauma and psychopathology, developmental studies on trauma, trauma and psychotherapy. Each section is introduced by an overview of the key advancements in the field by the editor. This collection of papers is aimed at establishing the shared points as to the <b>definition</b> <b>of</b> <b>types</b> <b>of</b> trauma, their consequences and psyhopathological processes...|$|R
5000|$|A typedef {{can also}} be used to simplify the <b>definition</b> <b>of</b> array <b>types.</b> For example, ...|$|R
5000|$|Induction-induction allows <b>definition</b> <b>of</b> a <b>type</b> and {{a family}} <b>of</b> <b>types</b> at the same time. So, a type [...] {{and a family}} <b>of</b> <b>types</b> [...]|$|R
40|$|The IKKT or IIB matrix {{model has}} been {{proposed}} as a non-perturbative <b>definition</b> <b>of</b> <b>type</b> IIB superstring theories. It has the attractive feature that space [...] time appears dynamically. It is possible that lower dimensional universes dominate the theory, therefore providing a dynamical solution to the reduction of space [...] time dimensionality. We summarize recent works that show {{the central role of}} the phase of the fermion determinant in the possible realization of such a scenario. Comment: 3 pages, 2 figures, Lattice 2001 (surfaces...|$|E
40|$|Type III unprojection plays a very {{important}} role in the birational geometry of Fano threefolds (cf. [CPR], [Ki], [BZ]). According to [Ki] p. 43, it was first introduced by A. Corti on his calculations of Fano threefolds of genus 6 and 7. It seems that at present a general <b>definition</b> <b>of</b> <b>type</b> III unprojection is still missing. After proving in Section 2 some general facts about residual ideals, we propose a definition for the generic Type III unprojection (Definition 3. 3), and prove in Theorem 3. 5 that it gives a Gorenstein ring. ...|$|E
40|$|Monte Carlo {{simulations}} of the IIB matrix model, which is conjectured to be a nonperturbative <b>definition</b> <b>of</b> <b>type</b> IIB superstring theory in ten dimensions, are difficult {{due to a}} technical problem known as the complex action problem, which occurs also in many other interesting systems. We propose a new method to circumvent this problem, {{and apply it to}} the 6 D version of the IIB matrix model. Our preliminary results clearly show that the phase of the fermion integral plays {{a crucial role in the}} possible dominance of four-dimensional configurations...|$|E
25|$|The full {{list and}} <b>definitions</b> <b>of</b> BioSample <b>types</b> and {{attributes}} {{is available for}} preview and download.|$|R
30|$|To {{discuss the}} local {{stability}} of equilibria, we first give the following <b>definition</b> <b>of</b> stability <b>types.</b>|$|R
50|$|The full {{list and}} <b>definitions</b> <b>of</b> BioSample <b>types</b> and {{attributes}} {{is available for}} preview and download.|$|R
40|$|Diseases gain {{identity}} from clinical phenotype {{as well as}} {{genetic and}} environmental aetiology. The <b>definition</b> <b>of</b> <b>type</b> 1 diabetes is clinically exclusive, comprising patients who are considered insulin dependent at diagnosis, whilst the <b>definition</b> <b>of</b> <b>type</b> 2 diabetes is inclusive, only excluding those who are initially insulin dependent. Ketosis-prone diabetes (KPD) and latent autoimmune diabetes in adults (LADA) are each exclusive forms of diabetes which are, at least initially, clinically distinct from type 2 diabetes and type 1 diabetes, and each have a different natural history from these major types of diabetes. KPD can be diagnosed unequivocally as diabetes presenting with the categorical clinical feature, ketoacidosis. In contrast, LADA can be diagnosed by the co-occurrence of three traits, not {{one of which is}} categorical or exclusive to the condition: adult-onset non-insulin-requiring diabetes, an islet autoantibody such as glutamic acid decarboxylase autoantibodies (GADA) or cytoplasmic islet cell autoantibodies (ICA), and no need for insulin treatment for several months post-diagnosis. But while some would split diabetes into distinct subtypes, there is a strong case that these subtypes form a continuum of varying severity of immune and metabolic dysfunction modified by genetic and non-genetic factors. This article discusses the nature of disease classification in general, and KPD and LADA in particular, emphasizing the potential value and pitfalls in classifying diabetes and suggesting a need for more research in this area. Copyright © 2008 John Wiley & Sons, Ltd...|$|E
40|$|We {{study the}} {{spontaneous}} breakdown of SO(10) symmetry in the IIB matrix model using a mean-field approximation and its systematic improvements. Self-consistency equations allow various solutions which break the SO(10) symmetry. By calculating the free energy for each solution {{up to the}} third order approximation, {{we find that the}} free energy becomes minimum for a solution which preserves SO(4) symmetry. Furthermore the dynamical space-time is observed to collapse to four dimensions as we increase the order of the approximation. These results strongly suggest that four-dimensional space-time is generated dynamically in the IIB matrix model, which was proposed as a nonperturbative <b>definition</b> <b>of</b> <b>type</b> IIB superstring theory in ten dimensions...|$|E
40|$|Investigated {{features}} of a body build of 309 young men and girls of the Penza region {{in the age of}} 16 - 21 years. B. A. Nikitjuk andA. I. Kozlov methodwas applied to <b>definition</b> <b>of</b> <b>type</b> of a body build. The Penza youth is characterized by prevalence among young men of faces brachymorphic normotrohpical type, with distribution of hypodermic Adeps mainly below a girdle and on a trunk. Among girls there are people mesomorphic body builds hypotrophical type, distribution of hypodermic Adeps mainly below a girdle and on extremities is more often. In both groups on the average there are no surpluses of mass of a body...|$|E
40|$|Almost {{no object}} {{oriented}} programming languages offer distinct language constructs for the <b>definition</b> <b>of</b> <b>types</b> and their implementations; instead these are united into a single class concept. Similarly {{object oriented programming}} languages do not normally distinguish between object types, which may be independently instantiated, and attribute types, which may not. The pape...|$|R
5000|$|Stable and {{unambiguous}} <b>definitions</b> <b>of</b> the <b>types</b> <b>of</b> examined properties, expressed using international nomenclatures, and {{in accordance}} with international standards ...|$|R
40|$|Legea si Viata. - 2014. - Iunie. - P. 88 - 91. ?????? ????????? ??????????? ????? ???????????????? ???? ? ?? ?????????????? ? ?????????????? ????? ???????. ??????????, ??? ??? ????????????? ????????????????? ????? ? ????? ???????????? ?????? ????? ???????? ?????????? ????????????. The {{article is}} devoted to the <b>definition</b> <b>of</b> <b>types</b> <b>of</b> {{pre-emption}} rights and their characteristics in the succession law of Ukraine. It is noted that for the emergence of pre-emptive rights in the inheritance of the fact of opening the inheritance is not enough. ?????? ?????????? ?????????? ????? ?????????? ???? ? ????? ?????????????? ? ?????????? ????? ???????. ?????????????, ?? ??? ?????????? ??????????? ????? ? ????? ??????????? ?????? ????? ????????? ???????? ???????????...|$|R
