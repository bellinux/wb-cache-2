0|16|Public
40|$|The {{implementation}} of existing {{software for the}} numerical treatment of partial differential equations on a <b>heterogeneous</b> <b>multi-computer</b> system is discussed. The underlying concept {{is that of a}} user-friendly problem solving environment integrating various software packages from different vendors into one complex tool. Special attention is paid to improvements in user's efficiency. Enhancements leading from problem solving environments toward expert systems are outlined...|$|R
40|$|A <b>multi-computer</b> <b>network</b> {{system is}} used for con-trolling KEK proton synchrotron. The system is com-posed of 8 mini-computers [...] a central computer, 6 sat-ellite ones and a {{software}} development system. Data of the accelerator are taken by the satellite computers which are distributed around the accelerator and then transfered to the central computer through parallel data link lines. The central computer records these data and displays informations to operators. The soft-wares for the satellite computers are developed on the software development system or the central computer. Development of the system softwares and installation of hardwares are completed and some applications are running now...|$|R
40|$|Abstract. The {{layout design}} {{problem is a}} kind of nesting {{problems}} that is naturally NP-hard and very difficult to solve. Layout designing of machine is even more difficult because of its nesting items are actually machine parts that have both irregular shapes and complex constraints. A feasible way to solve machine layout problem is to employ ameliorative algorithms, such as simulated annealing algorithm. But these kinds of algorithms are usually CPU-time thirsty, sometime the computing time is unbearable. In this paper, the authors advocate to parallel the simulated annealing algorithm on a <b>multi-computer</b> <b>network</b> (a parallel cluster). We have combined Message Passing Interface (MPI) with Visual C++ t...|$|R
40|$|Adaptive routing {{has been}} {{proposed}} {{as a means of}} improving performance and fault-tolerance in <b>multi-computer</b> <b>networks.</b> While a number of algorithms have been proposed, few adaptive routers have been implemented in hardware. This paper presents the design and implementation of Ariadne — a prototype single chip, hardware router. The primary motiva-tion is tolerance to link and router failures, while rec-onciling conflicting demands on performance. This is achieved by implementing the rn-misroute back-tracking protocol (MB-m) using the pipelined circuit-swit thing (PCS) communication mechanism[lfl. Ari-adne implements two virtual data channels and one virtual control channel per physical link. The router is self-timed with single flit buffering at the input and output ports, and is fully adaptive. ...|$|R
40|$|This paper {{introduces}} the architecture and initial algorithms for Pixel-planes 5, a <b>heterogeneous</b> <b>multi-computer</b> designed both for high-speed polygon and sphere rendering (1 M Phong-shaded triangles/second) and for supporting algorithm and application research in interactive 3 D graphics. Techniques are described for volume rendering at multiple frames per second, font generation directly from conic spline descriptions, and rapid calculation of radiosity form factors. The hardware consists {{of up to}} 32 math-oriented processors, up to 16 rendering units, and a conventional 1280 x 1024 -pixel frame buffer, interconnected by a 5 gigabit ring network. Each rendering unit consists of a 128 x 128 -pixel array of processors-with-memory with parallel quadratic expression evaluation. Implemented on fast custom CMOS chips, this array has 208 bits/pixel on-chip and is connected to a video RAM memory system that provides 4, 096 bits of off-chip memory. Rendering units can be independently reassigned to any [...] ...|$|R
40|$|Parallel computation, {{a greater}} {{advancement}} in computational hardware {{as well as}} new achievement in current scientific computing such as image processing involves huge exhaustive computation and data processing leading towards parallel architectures. Parallel hardware organization basically a suitable interconnection among computational hardware, where current trends now involves clustered organization of distributed hardware to achieve parallel effects. Cluster environment consisting <b>multi-computer</b> <b>network</b> nodes provides flexible architecture towards high complex data parallelism as well as control parallelism operations. Further detail consists interlaced graphics mechanism with run-length encoding to achieve high compression benefits. Run-length compression speedup benefits have already described in the research IJCA- 2011 cluster based performance evaluation of run-length image compression, which is now updated to cover interlaced lossy compression schemes. In general interlacing provides a lossy compression formulation but acceptable in real-life scenarios. Finally, the interlaced methodology and cluster based analysis results will be discussed...|$|R
40|$|Recently, {{wormhole}} routers with multi-destination capability {{have been}} proposed to support fast multicast in a <b>multi-computer</b> <b>network.</b> In this paper, we develop a new multicasting model for such networks based {{on the concept of}} Euler path/circuit in graph theory. The model can support multiple concurrent multicasts freely from deadlock and can be applied to any network which is Eulerian or is Eulerian after some links being removed. No virtual channels are needed. In particular, we demonstrate the potential of this model by showing its fault-tolerant capability in supporting multicasting in the currently popular torus/mesh topology of any dimension with regular fault patterns (such as single node, block, L-shape, +-shape, U-shape, and H-shape) and even irregular fault patterns. The result has improved over existing fault-tolerant routing algorithms for meshes/tori in {{at least one of the}} following aspects: the number of faults tolerable, the shape of fault patterns, the number of deacti [...] ...|$|R
40|$|Abstract- OmniRPC is a Grid RPC {{system for}} {{parallel}} programming in cluster and grid environments. To support typical master-worker grid {{applications such as}} a parametric execution efficiently, OmniRPC provides an automaticinitializable remote module to send and store data to a remote executable invoked in the remote host. Since it may accept several requests for subsequent calls by keeping the connection alive, the data set by the initialization is re-used, resulting in efficient execution by {{reducing the amount of}} communication. It allows to use several authentication systems including “ssh ” and “globus GRAM”. For a cluster over a private network, an agent process running the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications into one connection to the client. Several algorithms and applications for a grid are designed or re-targeted by using OmniRPC. In this paper, we present a parallel method for large sparse generalized eigenvalue problems, a gridenabled Molecular Conformational Space Search Program (CONFLEX-G), and a grid-enabled <b>Heterogeneous</b> <b>Multi-Computer</b> System (HMCS-G) for computational astrophysics in order to demonstrate the effectiveness of OmniRPC. Keywords—Grid computing, remote procedure call, parametric execution I...|$|R
40|$|The {{problems}} {{to create the}} universal and specialized software for super-computer have been considered. The aim is to develop the organization principles of the local and remote processing in the batch mode and time-sharing mode in OS of super-computers and also the methods for structural organization of the dynamic control subsystems in OS of super-computers using asynchronous monitors and drivers. The methods for dynamic control subsystems in OS of super-computers have been developed. The original architecture of interacting super-computer on base of MPP with host computer of different type in the <b>heterogeneous</b> <b>multi-computer</b> complex has been proposed. The remote access subsystem to the super-computer, batch mode subsystem and time-sharing subsystem {{as a part of}} MPP OS have been developed and implemented. The implemented facilities of local and remote processing in OS of super-computer on base of MPP provide an invariance relativelly to the possible complete set of MPP peripheral devices. The developed program subsystems have been introduced as a part of MPP OS in the Institute of Fine Mechanics and Computer Engineering (Russian Academy of Sciences) and Central Research Institute of Mechanical EngineeringAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|Abstract-Until now, several {{continuous}} and discontinuous techniques {{have been given}} for processor allocation in mesh <b>multi-computers</b> <b>networks.</b> Continuous allocation methods always try to allocate a free continuous sub-mesh with the same requested dimensional structure to the parallel input job. For this reason, it produces the internal fragmentation in the processors network. Discontinuous allocation algorithms were produced {{with the aim of}} removing processors fragmentation. In discontinuous allocation algorithms, message interference between different jobs and struggle to get communication resources increases network communication overheads due to the increase in path length passed by the message. This communication overhead is highly dependent on to the manner of free sub-meshes allocation and the manner of recording by the algorithm. my paper, a discontinuous allocation algorithm called Quick Non-Contiguous Allocation (QNA) has been presented for a two-dimensional mesh network with C programming language. The efficiency of this algorithm and {{continuous and}} discontinuous allocation algorithms is determined and compared via simulator tool ProcSimity. Simulation results indicate improved performance parameters in the given algorithm...|$|R
40|$|This {{research}} {{is supported by}} the National Science Council of the Republic of China under Grant # NSC 86 - 2213 -E- 008 - 029 and Grant # NSC 86 - 2213 -E- 216 - 021. 1 Recently, wormhole routers with multi-destination capability have been proposed to support fast multicast in a <b>multi-computer</b> <b>network.</b> In this paper, we develop a new multicasting model for such networks based on the concept of Euler path/circuit in graph theory. The model can support multiple concurrent multicasts freely from deadlock and can be applied to any network which is Eulerian or is Eulerian after some links being removed. No virtual channels are needed. In particular, we demonstrate the potential of this model by showing its fault-tolerant capability in supporting multicasting in the currently popular torus/mesh topology of any dimension with regular fault patterns (such as single node, block, L-shape, +-shape, U-shape, and H-shape) and even irregular fault patterns. It is the first multicasting model known t [...] ...|$|R
40|$|In large multi-computers, {{using an}} {{allocation}} algorithm {{in particular and}} an efficient scheduled algorithm is very crucial to have maximum computing power Until now, several continuous and discontinuous techniques have been given for processor allocation in mesh <b>multi-computers</b> <b>networks.</b> Continuous allocation methods always try to allocate a free continuous submesh with the same requested dimensional structure to the parallel input job. For this reason, it produces the internal fragmentation in the processors network. Discontinuous allocation algorithms were produced {{with the aim of}} removing processors fragmentation. In discontinuous allocation algorithms, message interference between different jobs and struggle to get communication resources increases network communication overheads due to the increase in path length passed by the message. This communication overhead is highly dependent on to the manner of free sub-meshes allocation and the manner of recording by the algorithm. my paper, a discontinuous allocation algorithm called Quick Non-Contiguous Allocation (QNA) has been presented for a two-dimensional mesh network with C programming language. The efficiency of this algorithm and continuous and discontinuous allocation algorithms is determined and compared via simulator tool ProcSimity. Simulation results indicate improved performance parameters in the given algorithm. Since our country is studying on the production of a national supercomputer, results of this study can be an effective step to develop this objective...|$|R
40|$|Computer Science and Applied Mathematics: Algorithm-Structured Computer Arrays and Networks: Architectures and Processes for Images, Percepts, Models, Information {{examines}} the parallel-array, pipeline, and other <b>network</b> <b>multi-computers.</b> This book describes and explores arrays and networks, those built, being designed, or proposed. The problems of developing higher-level languages for systems and designing algorithm, program, data flow, and computer structure are also discussed. This text likewise describes several sequences of successively more general attempts {{to combine the}} power of arrays w...|$|R
40|$|High-speed {{computing}} experiments using <b>networked</b> <b>multi-computers</b> {{demonstrate the}} potential and viability of low-cost alternatives to special purpose parallel computing systems. However, {{to realize this}} goal, the application environment must provide support for parallel applications, high-performance computation, low-latency, and highbandwidth communication. To maximize performance, the software systems must be optimized for parallel applications, exploiting {{the characteristics of the}} hardware and network. In this position paper, we describe the design philosophy of xMPI, an implementation of MPI based on the x-kernel that is adapted for ATM networks. X-kernel is an embeddable network subsystem which provides a flexible protocol composition framework[3]. The x-kernel abstractions viz. messages, protocol and session objects, events and the uniform protocol interface allow customization of the operating system services...|$|R
40|$|Cloth {{simulation}} {{technique has}} been successfully applied to the computer graphic and 3 D apparel CAD filed for some years. However, although much effort had been devoted to improve {{the performance of the}} computational model, the computational requirement of the cloth simulation remains high and the running time is far away from the real time. Therefore in this dissertation, a new framework of the high-performance cloth simulation prototype system using parallel computing is developed. A simple mass spring model integrated with a set of force and velocity filter is used as cloth model. The dimension variation is monitored at every time step and the motion that cause the collisions are partially filtered. To improve the response speed of 3 D simulation result for the 2 D modification, a new methodology of reactive 2 D/ 3 D procedure to support the garment design modification is presented. Firstly, the designer initiates the modification by making adjustments on the 2 D garment pattern boundary curve. The constraint forces required to deform the original curve to its new position is calculated. The triangular mesh of the original 2 D pattern is deformed to fit the modified 2 D pattern while the topology of the mesh remains invariant. Finally, the field of the equilibrium state parameter of the 2 D pattern mesh is recalculated, based on which the corresponding 3 D garment fitting simulation result is generated directly from the original simulation result. Another important advantage of the proposed 2 D/ 3 D reactive algorithm is that it well suits for parallel implementation. To alleviate the collision detection computing cost using parallel computing, the voxel based collision handling method is extended in this study. A multi level voxel based structure is built in the preprocessing. In this stage, the triangular faces on the human body mesh are computed {{to be associated with the}} corresponding voxels. Due to the nature properties of the voxel based method, the voxelization information can be rapidly updated during the simulation. Hence the time consuming elementary intersection checking is constrained within a small number of voxels. Furthermore at every time step, a face cluster hierarchy is dynamically built and able to improve the computation complexity of self collision detection algorithm from O(n 2) to O(n⋅m). Finally, this thesis exploits the parallelism of the algorithm of cloth simulation on the <b>networked</b> <b>multi-computers.</b> The parallel algorithms of cloth simulation and collision detection are presented and a dynamic load balance algorithm is proposed on distributed memory and heterogeneous parallel architecture. The proposed dynamic load balance algorithm takes both the cloth deformation computation and collision detection computation into account and can be regarded as a general scheme for the complex 3 D scene simulation on the <b>networked</b> <b>multi-computers,</b> in which the simulated 3 D objects interact with the other objects very often and hence both the spatial collision detection and simulation computation are critical computation tasks...|$|R
40|$|Facial {{animation}} has {{a lengthy}} history in computer graphics. To date, most efforts have concentrated either on labor-intensive keyframe schemes, on manually animated parameterized methods using FACS-inspired expression control schemes, or on performance-based animation where facial motions are captured from human actors. As an alternative, we propose the fully automated animation of faces using behavioral animation methods. To this end, we employ a physics-based {{model of the}} face, which includes synthetic facial soft tissues with embedded muscle actuators. Despite its technical sophistication, this biomechanical face model can nonetheless be simulated in real time on a high-end personal computer. The model incorporates a motor control layer that automatically coordinates eye and head movements, as well as muscle contractions to produce natural expressions. Utilizing principles from artificial life, we augment the synthetic face with a perception model that affords it a visual awareness of its environment, and we provide a sensorimotor response mechanism that links percepts to meaningful actions (i. e., head/eye movement and facial expression). The latter is implemented as an ethologically inspired behavioral repertoire, which includes a rudimentary emotion model. We demonstrate a <b>networked,</b> <b>multi-computer</b> implementation of our behavioral facial animation framework. Each of several faces is computed in real time by a separate server PC which transmits its simulation results to a client PC dedicated to rendering the animated faces in a common virtual space. Performing the appropriate head/eye/face movements, the autonomous faces {{look at one another}} and respond in a natural manner to each other’s expressions...|$|R

