602|1837|Public
25|$|Each <b>hardware</b> <b>device</b> {{can have}} a default action {{occurring}} on discovery of a particular media type, or the AutoPlay dialog can prompt the user what action to take.|$|E
25|$|Independent of {{the host}} computer, a <b>hardware</b> <b>device</b> might have {{embedded}} firmware to control its operation. Firmware is used when the computer program is rarely or never expected to change, or when the program must not be lost when the power is off.|$|E
25|$|Knock-down {{fasteners}} are a <b>hardware</b> <b>device</b> {{made for}} the purpose of constructing butt joints that can be assembled and re-assembled repeatedly (hence knock-down). This type of fastener is very popular in flat-pack furniture, which is typified by items such as book cases and wall units that come in a package of pre-cut and pre-drilled components ready to assemble by a novice. They are also very common in modern modular kitchens.|$|E
50|$|A {{hardware}} browser is a {{tool for}} displaying related resources under the server or network <b>hardware</b> <b>devices,</b> and allows users {{to interact with the}} hardware. It is used to sense, detect, display and control <b>hardware</b> <b>devices</b> in the network. These <b>hardware</b> <b>devices</b> can be networked and upload information via the thing of Internet to exchange information, users can quickly and easily browse a variety of the <b>hardware</b> <b>devices,</b> and configure the <b>hardware</b> <b>devices.</b>|$|R
50|$|Read {{and write}} data from <b>hardware</b> <b>devices.</b>|$|R
30|$|The {{expression}} system is an intermediate interface between the memory system and robot <b>hardware</b> <b>devices.</b> This system executes behavior operations and/or emotion expressions {{in order to}} react to the user emotions. Both operations basically depend upon robot <b>hardware</b> <b>devices,</b> since every service robot has different hardware capacity to process expression operations.|$|R
25|$|Users can {{subscribe}} to any podcast by entering its RSS feed URL, {{but also by}} browsing the podcast directory within the iTunes Store. The front page of this displays high-profile podcasts from commercial broadcasters and independent podcasters and allows searching by category or popularity. Once subscribed, the podcast can be set to download manually, or automatically— and as with other audio, content can be listened to directly or synced to a portable <b>hardware</b> <b>device</b> like an MP3 player.|$|E
25|$|Note, too, {{that some}} {{nominally}} bi-endian CPUs require motherboard help to fully switch endianness. For instance, the 32-bit desktop-oriented PowerPC processors in little-endian mode act as little-endian {{from the point}} of view of the executing programs, but they require the motherboard to perform a 64-bit swap across all 8 byte lanes to ensure that the little-endian view of things will apply to I/O devices. In the absence of this unusual motherboard <b>hardware,</b> <b>device</b> driver software must write to different addresses to undo the incomplete transformation and also must perform a normal byte swap.|$|E
25|$|When a <b>hardware</b> <b>device</b> {{triggers}} an interrupt, {{the operating}} system's kernel decides {{how to deal}} with this event, generally by running some processing code. The amount of code being run depends on the priority of the interrupt (for example: a person usually responds to a smoke detector alarm before answering the phone). The processing of hardware interrupts is a task that is usually delegated to software called a device driver, which may be part of the operating system's kernel, part of another program, or both. Device drivers may then relay information to a running program by various means.|$|E
5000|$|Other <b>hardware</b> <b>devices</b> {{used for}} {{establishing}} networks or dial-up connections include: ...|$|R
40|$|A {{comprehensive}} model {{based on}} XML technologies to interface data acquisition <b>hardware</b> <b>devices</b> for configuration and control purposes is presented. The model builds upon {{the use of}} a unified syntax for describing <b>hardware</b> <b>devices,</b> configuration data, test results and control sequences. An implementation and an evaluation together with an application scenario are presented. 21 Refs...|$|R
50|$|XtratuM 1.0 was {{initially}} {{designed as a}} substitution of the RTLinux HAL (Hardware Abstraction Layer) to meet temporal and spatial partitioning requirements. The goal was tovirtualize the essential <b>hardware</b> <b>devices</b> to execute several OSes concurrently, {{with at least one}} of these OSes being a RTOS. The other <b>hardware</b> <b>devices</b> (including booting) were left to a specialdomain, named root domain.|$|R
25|$|A {{device driver}} is a {{specific}} type of computer software developed to allow interaction with hardware devices. Typically this constitutes an interface for communicating with the device, through the specific computer bus or communications subsystem that the hardware is connected to, providing commands to and/or receiving data from the device, and on the other end, the requisite interfaces to the operating system and software applications. It is a specialized hardware-dependent computer program which is also operating system specific that enables another program, typically an operating system or applications software package or computer program running under the operating system kernel, to interact transparently with a <b>hardware</b> <b>device,</b> and usually provides the requisite interrupt handling necessary for any necessary asynchronous time-dependent hardware interfacing needs.|$|E
500|$|The first EyeTV <b>hardware</b> <b>device</b> was {{introduced}} in November 2002. It was a small USB-powered device that contained a cable tuner and hardware encoder in order to convert television video into an MPEG-1 format for watching on a computer. It also had coaxial and RCA plugs to connect it with a VCR or camcorder. A 2002 article in Macworld {{said it was the}} [...] "first step" [...] in bridging computers and television, but at this point still had [...] "some kinks".|$|E
2500|$|Section 2 {{echoes the}} Court's {{language}} in Sony, stating specifically that one {{may not be}} held liable for copyright infringement [...] "based on the design, manufacture, or distribution of a <b>hardware</b> <b>device</b> or of a component of the device if the device is capable of substantial, commercially significant noninfringing use." ...|$|E
30|$|The {{physical}} layer comprises <b>hardware</b> <b>devices</b> such as sonar, timer, camera, and transceiver.|$|R
5000|$|Many <b>hardware</b> <b>devices</b> {{for color}} {{calibration}} lack drivers and proper supporting software on Linux.|$|R
50|$|There are {{numerous}} software applications and <b>hardware</b> <b>devices</b> {{specifically designed for}} PSP's various media-centric applications.|$|R
2500|$|Consequently, {{within these}} {{engineering}} disciplines, a system generally {{refers to a}} programmable hardware machine and its included program. And a systems engineer is defined as one concerned with the complete device, both hardware and software and, more particularly, all of the interfaces of the device, including that between hardware and software, and especially between the complete device and its user (the CHI). [...] The hardware engineer deals (more or less) exclusively with the hardware device; the software engineer deals (more or less) exclusively with the computer program; and the systems engineer is responsible for seeing that the program is capable of properly running within the <b>hardware</b> <b>device,</b> and that {{the system composed of}} the two entities is capable of properly interacting with its external environment, especially the user, and performing its intended function.|$|E
2500|$|To perform useful functions, {{processes}} need {{access to}} the peripherals connected to the computer, which are controlled by the kernel through device drivers. A device driver is a computer program that enables the operating system to interact with a <b>hardware</b> <b>device.</b> It provides the operating system with information of how to control and communicate with a certain piece of hardware. The driver is an important and vital piece to a program application. The design goal of a driver is abstraction; {{the function of the}} driver is to translate the OS-mandated function calls (programming calls) into device-specific calls. In theory, the device should work correctly with the suitable driver. Device drivers are used for such things as video cards, sound cards, printers, scanners, modems, and LAN cards. The common levels of abstraction of device drivers are: ...|$|E
2500|$|Forcing a {{complete}} dump of virtual memory will capture an active rootkit (or a kernel dump {{in the case}} of a kernel-mode rootkit), allowing offline forensic analysis to be performed with a debugger against the resulting dump file, without the rootkit being able to take any measures to cloak itself. This technique is highly specialized, and may require access to non-public source code or debugging symbols. Memory dumps initiated by the operating system cannot always be used to detect a hypervisor-based rootkit, which is able to intercept and subvert the lowest-level attempts to read memory—a <b>hardware</b> <b>device,</b> such as one that implements a non-maskable interrupt, may be required to dump memory in this scenario. [...] Virtual machines also make it easier to analyze the memory of a compromised machine from the underlying hypervisor, so some rootkits will avoid infecting virtual machines for this reason.|$|E
50|$|In 2014, {{the company}} {{launched}} into the lecture capture market with <b>hardware</b> <b>devices</b> for capturing video signals.|$|R
50|$|Input/output {{statements}} provide {{communication with}} <b>hardware</b> <b>devices</b> while {{running in a}} non-realtime environment under a monitor system.|$|R
50|$|In {{addition}} to <b>hardware</b> <b>devices,</b> Creative also released EAX emulation drivers for computers with only onboard audio.|$|R
2500|$|Section 2 {{would also}} amend Section 501 by adding that [...] "no person shall {{be liable for}} {{copyright}} infringement based on the design, manufacture, or distribution of a <b>hardware</b> <b>device</b> or of {{a component of the}} device if the device is capable of substantial, commercially significant noninfringing use." [...] In effect, this would reverse the Supreme Court’s decision in MGM Studios, Inc. v. Grokster, Ltd. (2005), which held that [...] "one who distributes a device with the object of promoting its use to infringe copyright ... is liable for the resulting acts of infringement," [...] which has gradually come to be interpreted to mean that any distribution of an object capable of infringement is liable for any resulting infringement. [...] With the Grokster decision null, the prevailing standard regarding secondary liability would return to the Court's decision in Sony v. Universal (also known as the Betamax case).|$|E
50|$|An IP PBX {{can exist}} as a {{physical}} <b>hardware</b> <b>device</b> or in software.|$|E
5000|$|Layer 2: <b>Hardware</b> <b>device</b> drivers, {{consisting}} of media, network, and SCSI driver components.|$|E
5000|$|Message-oriented {{middleware}} appliances - are <b>hardware</b> <b>devices</b> {{supporting the}} sending and receiving of messages between distributed systems.|$|R
5000|$|Parallel Extender - Talk to {{parallel}} ports. Communicate with obscure <b>hardware</b> <b>devices.</b> Lab equipment. Home brew controllers.|$|R
5000|$|... {{attempting}} to perform I/O operations on <b>hardware</b> <b>devices</b> {{to which it}} does not have permission to access ...|$|R
50|$|Protocol converter: a <b>hardware</b> <b>device</b> that {{converts}} between {{two different types}} of transmission, for interoperation.|$|E
5000|$|Version 2 {{marks the}} {{introduction}} of both a new Scratchamp <b>hardware</b> <b>device</b> and different software compatibility.|$|E
5000|$|Zeidman, Robert M., “Conveying Data From A <b>Hardware</b> <b>Device</b> To A Circuit Simulation,” U.S. Patent 8,380,481.|$|E
5000|$|Legacy Plug and Play (PnP) {{specifications}} supporting automated {{configuration of}} <b>hardware</b> <b>devices,</b> primarily {{those on the}} ISA bus ...|$|R
50|$|NComputing's <b>hardware</b> <b>devices</b> {{compete with}} {{traditional}} thin client {{companies such as}} Wyse, and Hewlett-Packard and Viewsonic SC-U25 Value VDI.|$|R
50|$|Apple II accelerators are {{computer}} <b>hardware</b> <b>devices</b> which enable an Apple II {{computer to}} operate faster than their intended clock rate.|$|R
