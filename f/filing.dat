10000|10000|Public
5|$|Additional Secretaries and Joint Secretaries are {{responsible}} for <b>filing</b> all affidavits and responses before the Supreme Court of India.|$|E
5|$|Income from {{self-employment}} {{and wages}} of single individuals {{in excess of}} $200,000 annually are subject to an additional tax of 0.9%. The threshold amount is $250,000 for a married couple <b>filing</b> jointly (threshold applies to joint compensation of the two spouses), or $125,000 for a married person <b>filing</b> separately.|$|E
5|$|A {{week after}} the crash, the {{families}} of various passengers aboard Flight 706 began <b>filing</b> lawsuits and court papers against Hughes Airwest and, later, {{the government of the}} United States. The first <b>filing</b> was by the family of Keith A. Gabel, which filed a motion to perpetuate testimony in the Central District of California on June 16, 1971. This motion requests that the court issue a court order for a person's deposition to be taken, and can be done prior to a lawsuit being filed under the Federal Rules of Civil Procedure.|$|E
40|$|National audienceSemantic <b>file</b> systems enhance {{standard}} <b>file</b> {{systems with}} the ability of <b>file</b> searching based on <b>file</b> semantics. In this paper, we propose to integrate the support for ontologies into a <b>file</b> system to build efficient semantic <b>file</b> systems whose <b>file</b> semantics can be shared between users, applications and semantic <b>file</b> systems themselves. We call it ontology-based <b>file</b> system. We identify three existing types of <b>file</b> semantics: property-based, content-based and context-based semantics and adopt multi-ontology layer approach to enhance <b>file</b> semantic systems with four <b>file</b> semantic characteristics: <b>file</b> semantic representability, <b>file</b> semantic extensibility, <b>file</b> semantic standardization, and interoperability...|$|R
5000|$|Virtual <b>file</b> system: {{abstract}} <b>file</b> {{system that}} transparently allows access to disk <b>files,</b> memory <b>files,</b> [...]zip <b>files</b> and [...]gz <b>files.</b>|$|R
50|$|There are {{two types}} of user defined {{policies}} in GPFS: <b>file</b> placement and <b>file</b> management. <b>File</b> placement policies direct <b>file</b> data as <b>files</b> are created to the appropriate storage pool. <b>File</b> placement rules are determined by attributes such as <b>file</b> name, the user name or the fileset. <b>File</b> management policies allow the <b>file's</b> data to be moved or replicated or <b>files</b> deleted. <b>File</b> management policies can be used to move data from one pool to another without changing the <b>file's</b> location in the directory structure. <b>File</b> management policies are determined by <b>file</b> attributes such as last access time, path name or size of the <b>file.</b>|$|R
5|$|Because he had wrongly {{described}} significant evidence (including {{the car and}} DeSimone's clothes), {{police had}} dismissed his statement, <b>filing</b> it along with six other confessions to the crime. Hodgson's legal team was never made aware of its existence.|$|E
5|$|In June 2008, the {{possibility}} of television returning to Mount Washington came to light, with the <b>filing</b> by New Hampshire Public Television to move WLED-TV from its current location near Littleton to the old WMTW mast on top.|$|E
5|$|In November 2004, Katherine Zappone and Ann Louise Gilligan {{were granted}} leave by the Ireland's High Court {{to pursue a}} claim to have their September 2003 Vancouver {{marriage}} recognised for the <b>filing</b> of joint tax returns in Ireland.|$|E
50|$|The Weird Eyes <b>File,</b> The Alien Fire <b>File,</b> The Skull Stone <b>File,</b> the Time Traveler <b>File,</b> The Thunderbolt <b>File,</b> The Star Ship <b>File.</b>|$|R
50|$|In computing, a <b>file</b> dialog (also called <b>File</b> Selector/Chooser, <b>file</b> requester, or {{open and}} save dialog) is a dialog box-type {{graphical}} control element that {{allows users to}} choose a <b>file</b> from the <b>file</b> system. <b>File</b> dialogs differ from <b>file</b> managers as they are not intended for <b>file</b> management (although some offer simple operations such as folder creation), rather they are intended for the opening and saving of <b>files.</b> Before <b>file</b> dialogs, most programs requested <b>files</b> as a command line argument or as an exact <b>file</b> path. Others required users to select a <b>file</b> from the <b>file</b> manager.|$|R
50|$|Bluetooth {{advertising}} {{can send}} <b>file</b> formats like image <b>files,</b> ring tone <b>files,</b> vCard, barcodes, audio <b>files,</b> Java applications, mobile applications, video <b>files,</b> text <b>files</b> and theoretically any <b>file</b> format mobile devices can handle.|$|R
5|$|In the 1920s, Wyatt gave Sadie signed legal {{papers and}} <b>filing</b> fees to {{a claim for}} an oil lease in Kern County, California. She gambled away the <b>filing</b> fees and lied to Wyatt about what {{happened}} to the lease, which later turned out to be valuable. Distrustful of her ability to manage her finances, Wyatt made an arrangement with her sister Henrietta Lenhardt. Wyatt put oil leases he owned in Henrietta's name with the agreement that the proceeds would benefit Sadie after his death. Henrietta's three children voided the agreement after their mother's death and did not pass on the royalties to her.|$|E
5|$|In {{the first}} week of January 2014, a <b>filing</b> with the U.S. District court in San Jose showed that legal {{executives}} from both parties agreed to meet prior to February 19, 2014, to engage in settlement discussions. Both Samsung and Apple were responding to a court order that instructed the completion of such a meeting before a new trial begins in March 2014. One of three Samsung chiefs met with Cook, but the <b>filing</b> did not reveal the name of the representative.|$|E
5|$|On March 18, {{two days}} before the <b>filing</b> deadline, Nixon filed in both the Republican and Democratic {{primaries}} under California's cross-filing system. Voorhis also filed in the two major party primaries. Under cross-filing, if the same candidate won both major party endorsements, he would be effectively elected, with only minor party candidates to stand against him. Day advanced the $200 (the current equivalent of $2,230) for Nixon's <b>filing</b> fees, later noting that he had great difficulty being reimbursed.|$|E
50|$|TerraAmazon accepts vector <b>files</b> only in shapefile (.shp) format. Raster <b>files</b> are {{accepted}} in the following formats: geotiff <b>files</b> (.tiff), jpg <b>files</b> (.jpg), Spring Grid <b>Files</b> (.spr), binary RAW <b>files</b> (.raw) and ESRI ASCII Grid <b>Files</b> (.txt).|$|R
40|$|Translating each of a UNIX {{software}} system 2 ̆ 7 s source <b>files</b> into an object <b>file,</b> and linking the object <b>files</b> into an executable <b>file,</b> {{can be a}} time-consuming process. Object <b>file</b> generation accounts {{for most of this}} time. Tools that recognize and avoid unnecessary object <b>file</b> regeneration are very popular. Many such tools are named MAKE. A {{software system}} often contains a parameter <b>file.</b> A parameter <b>file</b> is a source <b>file,</b> textually included by every other source <b>file,</b> which defines macros shared by multiple source <b>files.</b> Each object <b>file</b> depends on the parameter <b>file,</b> according to <b>file</b> dependencies. MAKE-like tools only understand <b>file</b> dependencies. So, when a software developer changes a macro in a parameter <b>file,</b> every object <b>file</b> is regenerated, regardless of whether its corresponding source <b>file</b> actually refers to the changed macro. Unnecessary object <b>file</b> regeneration can be avoided by replacing some <b>file</b> dependencies with macro dependencies, which express that an object <b>file</b> depends on a macro. DEP is a tool implementing a method for automatically detecting and maintaining a software system 2 ̆ 7 s <b>file</b> and macro dependencies. DEP works with any flavour of MAKE to minimize the cost of rebuilding an executable <b>file...</b>|$|R
40|$|From its inception, UNIX {{has been}} built around two {{fundamental}} entities: processes and <b>files.</b> In this chapter, {{we look at the}} implementation of <b>files</b> in Solaris and discuss the framework for <b>file</b> systems. 14. 1 <b>File</b> System Framework Solaris OS includes a framework, the virtual <b>file</b> system framework, under which multiple <b>file</b> system types are implemented. Earlier implementations of UNIX used a single <b>file</b> system type for all of the mounted <b>file</b> systems, typically, the UFS <b>file</b> system from BSD UNIX. The virtual <b>file</b> system framework was developed to allow Sun’s distributed computing <b>file</b> system (NFS) to coexist with the UFS <b>file</b> system in SunOS 2. 0; it became a standard part of System V in SVR 4 and Solaris OS. We can categorize Solaris <b>file</b> systems into the following types: Storage-based. Regular <b>file</b> systems that provide facilities for persistent storage and management of data. The Solaris UFS and PC/DOS <b>file</b> systems are examples. Network <b>file</b> systems. <b>File</b> systems that provide <b>files</b> that are accessible in a local directory structure but are stored on a remote network server; for example, NFS. Pseudo <b>file</b> systems. <b>File</b> systems that present various abstractions as <b>files</b> in a <b>file</b> system. The /proc pseudo <b>file</b> system represents the address space of a process as a series of <b>files.</b> 657 658 Chapter 14 <b>File</b> System Framework The framework provides a single set of well-defined interfaces that are <b>file</b> system independent; the implementation details of each <b>file</b> system are hidden behind these interfaces. Two key objects represent these interfaces: the virtual <b>file,</b> or vnode, and the virtual <b>file</b> system, or vfs objects. The vnode interfaces implement file-related functions, and the vfs interfaces implement <b>file</b> system management functions. The vnode and vfs interfaces direct functions to specific <b>file</b> systems, {{depending on the type of}} <b>file</b> system being operated on. Figure 14. 1 shows the <b>file</b> system layers. File-related functions are initiated through a system call or from another kernel subsystem and are directed to the appropriate <b>file</b> system by the vnode/vfs layer...|$|R
5|$|Organizations are now {{attempting}} to assist and empower female migrant workers through {{training and education}} on their labor-related rights. Legal clinics have begun to assist female migrants in <b>filing</b> claims against employers and local labor bureaus. One case of female worker exploitation in the Hua Yi garment factory in Beijing resulted in mistreatment by management as well as withholding pay for at least 24 women. After <b>filing</b> complaints, {{in collaboration with the}} Center for Women's Law Studies and Legal Services of Beijing University, the women received 170,000 Yuan in back wages and compensation.|$|E
5|$|She {{has also}} moved to shield social {{security}} information and other private information {{from public view}} for millions of online records and coordinated with the Ohio General Assembly to prevent the <b>filing</b> of private information.|$|E
5|$|The NFA {{claimed that}} the {{diversion}} to the parent company violated the beverage contracts between various parties. Negotiations between the two entities eventually failed, {{which led to a}} class action suit being filed in the United States District Court for the Southern District of California against Burger King Corporation, Coca-Cola and Dr. Pepper on behalf of all Burger King franchises in the United States in May 2009. In the <b>filing,</b> the NFA claimed the three defendants were in violation of a 1999 beverage contract that set specific beverage syrup usage goals. The four parties settled shortly after the <b>filing</b> when Burger King agreed to seek advertising funds from other sources.|$|E
50|$|On <b>file</b> systems without forks, one may instead use {{multiple}} separate <b>files</b> {{that are}} associated with each other, particularly sidecar <b>files</b> for metadata. However, the connection between these <b>files</b> is not automatically preserved by the <b>file</b> system, and must instead be handled by each program that works on <b>files.</b> Another alternative is a container <b>file,</b> which stores additional data within a given <b>file</b> format, or an archive <b>file,</b> which allows storing several <b>files</b> and metadata within a <b>file</b> (within a single fork). This requires that programs process the container <b>file</b> or archive <b>file,</b> rather than the <b>file</b> system handling forks. These alternatives require additional work by programs using the data, but benefit from portability to <b>file</b> systems that do not support forks.|$|R
50|$|Rather than storing data separately, it can {{be stored}} {{as part of the}} main <b>file.</b> This is {{particularly}} done for container <b>files,</b> which allow certain types of data to be stored in them. Instead of separate <b>files</b> on the <b>file</b> system, multiple <b>files</b> can be combined into an archive <b>file,</b> which keeps them together, but requires that software processes the archive <b>file,</b> rather than individual <b>files.</b> This is a generic solution, as archive <b>files</b> can contain arbitrary <b>files</b> from the <b>file</b> system.|$|R
5000|$|Simple <b>file</b> {{verification}} (SFV) is a <b>file</b> {{format for}} storing CRC32 checksums of <b>files</b> {{to verify the}} integrity of <b>files.</b> SFV is used to verify that a <b>file</b> has not been corrupted, {{but it does not}} otherwise verify the <b>file's</b> authenticity. The [...]sfv <b>file</b> extension is usually used for SFV <b>files.</b>|$|R
5|$|The debt {{payments}} weighed {{heavily on}} the Senators. For several years, Bryden tried to reschedule the debt on the arena. There were various attempts at <b>filing</b> tax losses to write off the debt, all rejected by the federal government. In 2002, Ogden went bankrupt. It had re-invented itself as Covanta Energy and failed {{not long after the}} Enron scandal. This led to the Senators <b>filing</b> for bankruptcy on January 9, 2003, when it could not arrange financing to pay all it owed to Covanta, becoming due because of Covanta's bankruptcy.|$|E
5|$|Waters v. Commissioner (taxpayer’s {{argument}} that income taxation of wages is unconstitutional {{was rejected by}} the United States Court of Appeals for the Eleventh Circuit; taxpayer required to pay damages for <b>filing</b> frivolous suit).|$|E
5|$|A {{few years}} later, an {{attorney}} from the International Trade Commission filed an opinion for another case {{that said he}} felt the related patents from Trend Micro were invalid. Fortinet made a new legal <b>filing</b> and in December 2010, the US Patent and Trademark Office declared the patents as invalid.|$|E
5000|$|Data Categorization (aged <b>files,</b> orphan <b>files,</b> <b>file</b> by <b>file</b> type) ...|$|R
50|$|DCF {{object is}} a {{standalone}} <b>file</b> with DCF filename (e.g. ABCD0001.JPG) or a <b>file</b> group that shares the same <b>file</b> number. DCF objects {{are used for}} the <b>files</b> related with each other, such as the image <b>file</b> and the related audio <b>file.</b> Related <b>files</b> are handled together {{for the convenience of}} users. A DCF object need not include an image <b>file.</b> A standalone <b>file</b> for which no other <b>file</b> with the same <b>file</b> number exists is still a DCF object. <b>Files</b> in directories that are not located under a DCF directory are not DCF object components.|$|R
50|$|DX10 {{was capable}} of {{extensive}} <b>file</b> management.The built-in <b>file</b> structures include key indexed <b>files,</b> relative record files,and sequential files.A group of <b>file</b> control utilities exists for copying and modifying <b>files,</b> andcontrolling <b>file</b> parameters.|$|R
5|$|After this {{bankruptcy}} <b>filing,</b> Greyhound dropped low-demand rural {{stops and}} started concentrating on dense, inter-metropolitan routes. It cut nearly 37 {{percent of its}} network. In some rural areas local operators took over the old stops (often with government subsidies) particularly in the Plains states, parts of the upper Midwest (such as Wisconsin), and the Pacific Northwest.|$|E
5|$|Besides {{the initial}} nine {{applicant}} cities, other cities also wished {{to bid for}} the 2012 Summer Olympics, but the bids were not internally selected by the NOC (in case {{of more than one}} bidding city from the same country), were not put forward to the IOC, or were withdrawn before <b>filing</b> the necessary paperwork.|$|E
5|$|Due to the {{top secret}} nature of the work, the Los Alamos Laboratory was isolated. Feynman indulged his curiosity by {{discovering}} the combination locks on cabinets and desks used to secure papers. He found that people tended to leave their safes unlocked, or leave them on the factory settings, or write the combinations down, or use easily guessable combinations like dates. Feynman played jokes on colleagues. In one case he found the combination to a locked <b>filing</b> cabinet by trying the numbers he thought a physicist would use (it proved to be 27–18–28 after the base of natural logarithms, e = 2.71828...), {{and found that the}} three <b>filing</b> cabinets where a colleague kept a set of atomic bomb research notes all had the same combination. He left a series of notes in the cabinets as a prank, which initially spooked his colleague, Frederic de Hoffmann, into thinking a spy or saboteur had gained access to atomic bomb secrets.|$|E
5000|$|Android, Apple Resources, ASP, [...]desktop <b>files,</b> Gettext (PO/POT), Microsoft.NET, Code <b>files</b> (C, Java, PHP, Qt Linguist), Joomla INI <b>files,</b> Mozilla DTD, Plain text, PO/POT <b>files,</b> Subtitles, Web pages, XLIFF <b>files,</b> XML <b>files,</b> YAML,… ...|$|R
40|$|Semantic <b>file</b> systems enhance {{standard}} <b>file</b> {{systems with}} ability of <b>file</b> searching based on <b>file</b> semantics. In this paper, we propose to integrate support for ontologies into a <b>file</b> system to build efficient semantic <b>file</b> systems whose <b>file</b> semantics can be shared by users, applications and semantic <b>file</b> systems themselves. We call it ontology-based <b>file</b> system. We identify three existent types of <b>file</b> semantics: property-based semantics, content-based semantics and context-based semantics and adopt multi-ontology layer approach to share them between agents. The challenges on ontology-based <b>file</b> system are also discussed...|$|R
50|$|In {{the lost}} <b>file</b> {{recovery}} technique the program finds deleted <b>file</b> entries, and if requested {{will do a}} <b>file</b> carve of selected <b>file</b> types. A variety of popular <b>file</b> types can be found and carved. There {{is no way to}} add unknown <b>file</b> types. The <b>file</b> name is found in the deleted <b>file</b> search, but not in the lost <b>file.</b> This is because in most <b>file</b> systems the <b>file</b> name and date/times are stored on disk and are only marked for re-use by the system, and not completely removed.|$|R
