69|64|Public
5000|$|Graphical REPLs. Some Lisp REPLs (the CLIM Listener is an example) accept also <b>graphical</b> <b>input</b> and output.|$|E
50|$|The Commodore 64 {{version was}} {{produced}} by Micro Projects Ltd, joint owned by Anthony Clarke and Jason Perkins, with <b>graphical</b> <b>input</b> by Mark Rodgers and music by Rob Hubbard.|$|E
50|$|Users {{generally}} operated RT-11 via {{a printing}} terminal or a video terminal, originally via a strap-selectable current-loop (for conventional teletypes) or RS-232 (later RS-422 as well) interface {{on one of}} the CPU cards; DEC also supported the VT11 and VS60 graphics display devices (vector graphics terminals with a graphic character generator for displaying text, and a light pen for <b>graphical</b> <b>input).</b> A third-party favorite was the Tektronix 4010 family.|$|E
5000|$|Audio, <b>graphical,</b> and <b>input</b> {{enhancements}} {{for game}} developers.|$|R
40|$|This thesis {{deals with}} the most {{important}} statistic methods, ways of calculating and syntax in the environment of R statistic programme. The initial parts of the bachelor thesis content a brief theoretical basis for the main chapters of the practical part. In the following chapters the use of R programme itself for calculating statistic tasks is explained. The particular parts of recording functions in R programme are presented, important arguments are described and both text and <b>graphical</b> <b>inputs</b> are displayed...|$|R
30|$|Distribution {{volumes of}} [N-methyl- 11 C]mirtazapine in brain regions were {{estimated}} using single- and two-tissue compartment models {{as well as}} a <b>graphical</b> plasma <b>input</b> model. The two-tissue compartment model provided a direct estimate of the binding potentials of [N-methyl- 11 C]mirtazapine in brain regions, while binding potentials of the single-tissue compartment model and the <b>graphical</b> plasma <b>input</b> model were estimated indirectly from ratios of distribution volumes in brain regions. We obtained also direct estimates of binding potentials using a graphical reference tissue model and two nonlinear reference tissue models.|$|R
5000|$|CoFluent Studio is {{a visual}} model-driven {{engineering}} (MDE) software for modeling and simulating complex multi-core hardware/software systems. <b>Graphical</b> <b>input</b> {{is based on}} the MCSE notations, a domain-specific language (DSL) for describing electronic system behavioral and architectural models with time and performance properties. MCSE is very similar to the MARTE unified modeling language (UML) profile and SysML. CoFluent Studio generates transaction-level modeling SystemC code for early architecture exploration and performance analysis. It {{is based on the}} Eclipse modeling framework (EMF) technology.|$|E
5000|$|The American {{headquarters}} {{are located}} in the Pearl District of Portland, Oregon, and those for Europe, Middle East, and Africa (EMEA) in Krefeld, Germany. Wacom is a Japanese portmanteau: Wa for [...] "harmony", [...] "circle" [...] or [...] "Japan" [...] and Komu for [...] "computer". Wacom tablets are notable for their use of a patented cordless, battery-free, and pressure-sensitive stylus or digital pen. In addition to manufacturing and selling tablets, Wacom also provides <b>graphical</b> <b>input</b> technology for some tablet computers, which it calls [...] "Penabled Technology".|$|E
50|$|Another usage regards {{programming}} languages as theoretical constructs {{for programming}} abstract machines, and computer languages as the subset thereof {{that runs on}} physical computers, which have finite hardware resources. John C. Reynolds emphasizes that formal specification languages are just as much programming languages as are the languages intended for execution. He also argues that textual and even <b>graphical</b> <b>input</b> formats that affect {{the behavior of a}} computer are programming languages, despite the fact they are commonly not Turing-complete, and remarks that ignorance of programming language concepts is the reason for many flaws in input formats.|$|E
50|$|Draw a Secret (DAS) is a <b>graphical</b> {{password}} <b>input</b> scheme {{developed by}} Ian Jermyn, Alain Mayer, Fabian Monrose, Michael K. Reiter and Aviel D. Rubin and {{presented in a}} paper at the 8th USENIX Security Symposium in Augusts 1999.|$|R
40|$|We have {{developed}} a mathematical framework for representing and testing hypotheses about gene, protein, and signaling molecule interactions. It takes a hierarchical, contradiction-based approach, and can make use of multiple data sources to assess hypothesis viability and to generate a viability partial order over the space of hypotheses. We {{have developed}} an event-based formal language {{for the expression of}} such hypotheses. This language seamlessly integrates regulatory diagrams (<b>graphical</b> <b>inputs)</b> and structured English (text input) to maximize flexibility. We {{have developed a}} mathematical formalism that allows us to make precise statements about hypothesis similarity and the convergence of iterative refinements of a base hypothesis. To this, we add mathematical machinery that allows us to make precise statements about control and regulation. 1...|$|R
40|$|This paper {{describes}} a new interactive environment for user interface specification {{which is based}} on an enhanced spreadsheet model of computation. This environment allows sophisticated graphical user interfaces with dynamic feedback to be implemented with little or no explicit programming. Its goal is to support user interface specification by non-programming experts in human factors, visual design, or the application domain. In addition, the system is designed to allow sophisticated end-users to modify and customize their own interfaces. The system is based on a data flow model of computation. This model is presented to the interface designer {{in the form of a}} spreadsheet enhanced with new constructs for easier programming and reuse. These constructs include an improved interactive programming environment, a prototype-instance based inheritance system, support for composition, abstraction, and customization using indirect references, the addition of support for <b>graphical</b> <b>inputs</b> and o...|$|R
50|$|XMLSpy {{was first}} {{released}} in 1999, producing an {{integrated development environment}} for XML. It is a licensed software product that uses key protection to prevent unlicensed usage. Version 3.5 was released in 2000, allowing <b>graphical</b> <b>input</b> for editing diagrams and access to remote files. Version 4.1, released in 2001, added the capability to create XML schemas. The 5.0 version {{of the program was}} released in 2002, adding a XSLT processor, XSLT debugger, a WSDL editor, HTML importer, and a Java as well as C++ generator. The versions XML document editor was redesigned to allow for easier use by businesses. XMLSpy 2006 was given the Platinum Award by SQL Pro Magazines Editors choice awards. XMLSpy 2007 added increased XPath capabilities, including better integration with Microsoft Word.|$|E
40|$|In {{this paper}} we propose and {{evaluate}} new graphical password schemes that exploit features of <b>graphical</b> <b>input</b> displays to achieve better security than text-based passwords. <b>Graphical</b> <b>input</b> devices enable the user to decouple the position of inputs from the temporal order in which those inputs occur, and we show that this decoupling {{can be used to}} generate password schemes with substantially larger #memorable# password spaces. In order to evaluate the security of one of our schemes, we devise a novel way to capture a subset of the #memorable" passwords that, we believe, is itself a contribution. In this work we are primarily motivated by devices such as personal digital assistants #PDAs# that o#er <b>graphical</b> <b>input</b> capabilities via a stylus, and we describe our prototype implementation of one of our password schemes on suchaPDA, namely the Palm Pilot TM. 1 Introduction For the vast majority of computer systems, passwords are the method of choice for authenticating users. It [...] ...|$|E
40|$|A {{family of}} {{programs}} {{has been developed}} to allow <b>graphical</b> <b>input</b> through continuous digitizing. Drawing data, sampled at a high and constant rate, is compressed and mapped into lines and splines, in two and three dimensions. This is achieved by inferring a particular user's intentions from measures of speed and pressure. Recent experiments have shown {{that even the most}} basic inference making cannot rely solely upon knowledge of the user's drawing style, but needs additional knowledge of the subject being drawn, the protocols of its domain, and the stage of development of the user's design. This requirement implies a higher level of machine intelligence than currently exists. An alternate approach is to increase the user's involvement in the recognition process. Contrary to previous efforts to move from sketch to mechanical drawing without human intervention, this paper reports on an interactive system for <b>graphical</b> <b>input</b> in which the user overtly partakes in training the machine and massaging the data at all levels of interpretation. The initial routines for data compression employ parallel functions for extracting such features as bentness, straightness, and endness. These are planned for implementation in microprocessors. Results offer a system for rapid (and enjoyable) <b>graphical</b> <b>input</b> with real-time interpretation, the beginnings of an intelligent tablet. 1...|$|E
5000|$|The RAND Tablet is a <b>graphical</b> {{computer}} <b>input</b> device {{developed by}} The RAND Corporation. The RAND Tablet is {{claimed to be}} the first digital graphic device marketed as being a low cost device. The creation of the tablet was performed by the Advanced Research Projects Agency. The RAND Tablet {{was one of the first}} devices to utilize a stylus as a highly practical instrument.|$|R
25|$|Large scale {{commercial}} {{software packages}} often provide facilities for generating the mesh, and the <b>graphical</b> display of <b>input</b> and output, which greatly facilitate the verification of both input data {{and interpretation of}} the results.|$|R
40|$|Two {{strategies}} for multimodal fusion This paper describes our {{transition from a}} speech-only dialogue system to a multimodal one. Our description focuses on the fusion of input modalities coming from different channels. Two strategies have been implemented for comparison purposes: the first solution is largely based on Johnston’s work [Johnston et al. 1997, Johnston 1998], and involves modifying our parser to cope with simultaneous multimodal inputs, and to include temporal constraints at unification level. The second implementation proposes an original solution to the problem, and involves combining inputs coming from different multimodal channels at dialogue level. This solution {{is based on an}} implementation of the ISU approach [Traum et al. 1999, Amores et al. 2001]. These two strategies have been implemented in an Information-State-Update-based system, combining both speech and <b>graphical</b> <b>inputs.</b> A multimodal “Smart House ” scenario where the user interacts with the system using a microphone and a touch-screen has been chosen. The paper includes a high-level description of the algorithms implemented and concludes with a theoretical analysis of the advantages and drawbacks of both approaches...|$|R
40|$|The PHIGS (Programmer s {{hierarchical}} interactive graphics system) is an interantional ISO {{standard of}} functional interface between an application {{program and a}} configuration of <b>graphical</b> <b>input</b> and output devices. This interface contains basic functions for dynamic interactive 2 D and 3 D graphics on wide variety of graphics equipment...|$|E
40|$|Silicon Compilation is a {{promising}} approach to designing today's complex ICs, which have rendered traditional design methods inadequate. Here we describe PICSIL, a <b>graphical</b> <b>input</b> language for a silicon compiler, based on Data Flow Diagrams. A PICSIL diagram is a network {{representation of a}} digital system. Several devices have been described in PICSIL. One is included here as a demonstration...|$|E
40|$|The aim of {{the work}} was the research/development and {{realisation}} of precise relief structure for testing imaging of scanning electron microscopes (SEM) using microlithographic techniques of recording in the silicon. Research includes analysis of <b>graphical</b> <b>input</b> with respect of their use for testing of SEM imaging metric, research of appropriate techniques and procedures suitable for the preparation of relief elements in the silicon with high accuracy and repeatability...|$|E
40|$|The present work {{deals with}} one of the major and not yet {{completely}} understood topics of supervised connectionist models. Namely, it investigates the relationships between the difficulty of a given learning task and the chosen neural network architecture. These relationships have been investigated and nicely established for some interesting problems in the case of neural networks used for processing vectors and sequences, but only a few studies have dealt with loading problems involving <b>graphical</b> <b>inputs.</b> In this paper, we present sufficient conditions which guarantee the absence of local minima of the error function in the case of learning directed acyclic graphs with recursive neural networks. We introduce topological indices which can be directly calculated from the given training set and that allows us to design the neural architecture with local minima free error function. In particular, we conceive a reduction algorithm that involves both the information attached to the nodes and the topology, which enlarges significantly the class of the problems with unimodal error function previously proposed in the literature...|$|R
40|$|Interactive user {{interfaces}} depend critically on underlying computing system facilities for input and output. However, most computing systems still have input-output facilities designed for batch processing. These facilities are not adequate for interfaces {{that rely on}} <b>graphical</b> output,interactive <b>input,</b> or software constructed with modern methodologies. This paper details the deficiencies of batch-style input-output for modern interactive systems, presents a new model for input-output that overcomes these deficiencies, and suggests software organizations {{to take advantage of}} the new model...|$|R
50|$|The {{predominant}} {{argument in}} favor of graphical over alphanumeric passwords is use of the Picture superiority effect which describes the improved performance of the human mind in recalling images and objects over strings of text. This effect is utilized through DAS, as complex drawings are less difficult for the human mind to memorize than a long string of alphanumeric characters. This allows for the user to input stronger and more secure sequences through <b>graphical</b> password <b>input</b> schemes than conventional text input with relative ease.|$|R
40|$|This paper {{describes}} the semantics of action, {{an approach to}} describing input devices which allow the full utilization of all useful device characteristics and provides {{a high degree of}} hardware device independence. Part one discusses the semantics of <b>graphical</b> <b>input</b> device. The second shows how to create hierarchies of devices which provide a large measure of hardware independence. The third part applies these concepts to some typical problems, to demonstrate their completeness...|$|E
40|$|We {{summarize}} {{our continuing}} efforts at model based testing of reactive systems {{on the grounds}} of Constraint Logic Programming. First experimental results give rise to optimism w. r. t. scalability of our approach, point at necessary improvements, and they help identify future areas of research. Among others, these include search strategies more powerful than backtracking alone, appropriate (<b>graphical)</b> <b>input</b> languages for test cases, and theoretical aspects such as the relationship between test cases (traces) and system specifications...|$|E
40|$|Optimal ascent and descent {{trajectories of}} a {{two-stage}} vehicle are investigated. Two new trajectory optimization methods are shortly described: One {{is a direct}} collocation code, {{the other one is}} a code based on parameterizing the control functions together with a multiple shooting approach. Both methods do not use adjoint differential equations. They are attached to an advanced user interface with <b>graphical</b> <b>input</b> and output. Numerical results for the ascent from Europe into a 28. 5 degree inclined circular orbit are given...|$|E
40|$|Abstract – This paper {{presents}} a new {{feature of the}} IDEA 1 Wireless Sensor Network (WSN) simulation platform: its ability to run simulations on heterogeneous sensor nodes that compose a network. This platform allows system-level simulations with hardware accurate models, with <b>graphical</b> <b>inputs</b> and outputs to easily simulate such distributed systems. When comparing IDEA 1 simulation results to physical measurements, difference is 6 percent. IDEA 1 is {{more than three times}} faster simulation compared to another simulator (NS 2). In the testbed we consider, the well-known IEEE 802. 15. 4 standard is considered and different microcontroller units (MCU) and radiofrequency units (transceivers) compose the heterogeneous nodes. Output curves, packet delivery rate (PDR), packet latency can be evaluated. Moreover, energy consumption of sensor nodes is detailed with a very fine granularity, at hardware and software level. Indeed, energy consumption of each internal block of each device on each node can be monitored with IDEA 1. Therefore, it is possible to simulate quickly and accurately heterogeneous (hardware different) nodes. Indeed, multitude of hardware platforms and communication standards lead to inter-communicating heterogeneous networks. This simulation platform can be used to explore design space in order to find the hardware devices and IEEE 802. 15. 4 algorithm that best fit a given application with a constrained energy budget...|$|R
50|$|Gameplay is {{very similar}} to the first game, with mostly text based screens (although they are more {{colourful}} than the original and usually contain at least basic <b>graphical</b> elements). <b>Input</b> is mostly by moving a cursor (using either joystick or mouse depending on system), rather than entering numbers. The game again starts the player, whichever team is chosen, in division four with a random allocation of players and the player must attempt to gain promotion to division one but now, as well as the FA Cup, the player can also compete in the League Cup so eventually attempt to win the treble.|$|R
50|$|TUTSIM was an {{interactive}} simulation language for continuous dynamical systems. Input {{had to be}} given in block diagram form or in bond graph form. The lack of a <b>graphical</b> UI required <b>inputs</b> in textual form by entering commands and arguments. For simulation, fixed step integration methods were provided. Simulation results were displayed in a graphical form or numerically in tables.|$|R
30|$|In this research, Plaxis {{software}} {{has been}} used for numerical modeling. PLAXIS is a three-dimensional finite element program especially developed for the analysis of foundation structures, including off-shore foundations. It combines simple <b>graphical</b> <b>input</b> procedures, which allow the user to automatically generate complex finite element models, with advanced output facilities and robust calculation procedures. The program is designed such that a user can analyze complex constructions after only a few hours of training. This program can model the soil behavior under loading as well as it happens in the nature.|$|E
40|$|A {{model to}} help {{characterize}} <b>graphical</b> <b>input</b> is presented. It is a refinement {{of a model}} first introduced by Buxton, Hill and Rowley (1985). The importance of the model {{is that it can}} characterize both many of the demands of interactive transactions, and many of the capabilities of input transducers. Hence, it provides a simple and usable means to aid finding a match between the two. After an introduction, an overview of approaches to categorizing input is presented. The model is then described and discussed in terms of a number of different input technologies and techniques...|$|E
40|$|Abstract. A Graphical Based Password is one {{alternative}} for textual password. <b>Graphical</b> <b>input</b> devices enable {{the user to}} decouple the position of inputs from the temporal order in which those inputs occur, and we show that this decoupling {{can be used to}} generate password schemes with substantially larger password spaces. Users click on one point per image for a sequence of images. The next image is based on the previous click-point. Performance was very good in terms of speed, accuracy, and number of errors. CCP also provides greater security than Pass Points because the number of images increases the workload for attackers...|$|E
40|$|Neurodynamical {{models of}} working memory (WM) should provide {{mechanisms}} for storing, maintaining, retrieving, and deleting information. Many models ad-dress only {{a subset of}} these aspects. Here we present a rather simple WM model where all of these performance modes are trained into a recurrent neural net-work (RNN) of the Echo State Network (ESN) type. The model is demonstrated on a bracket level parsing task with a stream of rich and noisy <b>graphical</b> script <b>input.</b> In terms of nonlinear dynamics, memory states correspond, intuitively, to attractors in an input-driven system. As a supplementary contribution, the article proposes a rigorous formal framework to describe such attractors, gen-eralizing from the standard definition of attractors in autonomous (input-free) dynamical systems...|$|R
40|$|We have {{constructed}} an inexpensive, video-based, motorized {{tracking system}} that learns to track a head. It uses real time <b>graphical</b> user <b>inputs</b> or an auxiliary infrared detector as supervisory signals to train a convolutional neural network. The inputs to the neural network consist of normalized luminance and chrominance images and motion information from frame di erences. Subsampled images {{are also used}} to provide scale invariance. During the online training phase, the neural network rapidly adjusts the input weights depending upon {{the reliability of the}} di erent channels in the surrounding environment. This quick adaptation allows the system to robustly track a head even when other objects are moving within a cluttered background. ...|$|R
40|$|This {{document}} {{provides a}} detailed discussion and {{a guide for}} the use of the RadCat 6. 0 <b>Graphical</b> User Interface <b>input</b> file generator for the RADTRAN code, Version 6. RadCat 6. 0 integrates the newest analysis capabilities of RADTRAN 6. 0, including an economic model, updated loss-of-lead shielding model, a new ingestion dose model, and unit conversion. As of this writing, the RADTRAN version in use is RADTRAN 6. 02...|$|R
