51|24|Public
25|$|The {{transport}} layer performs host-to-host communications {{on either the}} same or different hosts and on either the local network or remote networks separated by routers. It provides a channel for the communication needs of applications. UDP is the basic {{transport layer}} protocol, providing an unreliable <b>datagram</b> <b>service.</b> The Transmission Control Protocol provides flow-control, connection establishment, and reliable transmission of data.|$|E
50|$|<b>Datagram</b> <b>service</b> {{is often}} {{compared}} to a mail delivery service, the user only provides the destination address, but receives no guarantee of delivery, and no confirmation upon successful delivery. <b>Datagram</b> <b>service</b> is therefore considered unreliable. <b>Datagram</b> <b>service</b> routes datagrams without first creating a predetermined path. <b>Datagram</b> <b>service</b> is therefore considered connectionless. There is also no consideration given to {{the order in which}} it and other datagrams are sent or received. In fact, many datagrams in the same group can travel along different paths before reaching the same destination.|$|E
50|$|The {{internet}} {{layer is}} a <b>datagram</b> <b>service</b> provided by an IP. For example, UDP {{is run by}} a <b>datagram</b> <b>service</b> in the internet layer. IP is an entirely connectionless, best effort delivery, unreliable, message delivery service. TCP is a higher level protocol running on top of IP that can provide the addition of a connection-oriented service.|$|E
5000|$|<b>Datagram</b> {{distribution}} <b>service</b> for connectionless communication ...|$|R
50|$|<b>Datagram</b> {{distribution}} <b>service</b> (NetBIOS-DGM) for connectionless communication.|$|R
5000|$|<b>Datagram</b> {{distribution}} <b>service</b> for connectionless communication (port: 138/udp) ...|$|R
5000|$|Type 1 is an {{unacknowledged}} connectionless mode for a <b>datagram</b> <b>service.</b> It {{allows for}} sending frames ...|$|E
50|$|Datagram mode is connectionless; the {{application}} {{is responsible for}} error detection and recovery. In NBT, the <b>datagram</b> <b>service</b> runs on UDP port 138.|$|E
50|$|The Gateway-to-Gateway Protocol was {{designed}} as an Internet Protocol (IP) <b>datagram</b> <b>service</b> similar to the Transmission Control Protocol (TCP) and the User Datagram Protocol (UDP). However, it is classified as an Internet Layer protocol.|$|E
50|$|Ethernet (IEEE 802.3) {{networks}} are an exception; the IEEE 802.3x-1997 standard explicitly allowed using of the Ethernet II framing, where the 16-bit field after the MAC addresses does not carry {{the length of}} the frame followed by the IEEE 802.2 LLC header, but the EtherType value followed by the upper layer data. With this framing only <b>datagram</b> <b>services</b> are supported on the data link layer.|$|R
40|$|Integrated {{services}} networks, such asATM (Asynchronous Transfer Mode) networks, {{are expected}} to operate at gigabit per second rates and provide various virtual-circuit and <b>datagram</b> <b>services.</b> For this purpose, new control algorithms (e. g. scheduling, admission, routing) have been proposed. The algorithms are often adaptive, resulting in complex time-dependent interactions. This renders traditional evaluation tools ine ective � analytical approaches are typically too coarse, and simulation approaches are often too expensive. The goal of our research istodevelop accurate analytical models that account for the interaction and time-dependent nature of the control algorithms, {{while at the same}} time being inexpensive or easy to solve. This would allow the rapid and tractable evaluation of di erent design alternatives. In this dissertation, we develop both dynamic models and quasi-static models of integrated networks. Dynamic models can be used to evaluate both virtual-circuit and <b>datagram</b> <b>services.</b> We solve dynamic models using a new iterative method, referred to as the Z-iteration. Our method is both accurate and fast. It permits the jointevaluation of various scheduling, admission, and routing schemes used in integrated networks. We showresults comparing dynamic routing schemes on a network with NSFNET-backbone topology. Wealso illustrate the applicability of the Z-iteration to other high-performance systems. Quasi-static models are suitable for evaluating <b>datagram</b> <b>services</b> for which the quasi-static assumption is reasonable. We analyze a quasi-static model of a datagram network o ering di erent classes of service. We apply the Liapunov function method to derive stability conditions for the routes of the di erent tra c classes. We show howwith scheduling support for routing, the routes of the tra c classes can be isolated, thereby improving the overall network performance. Fast Evaluation and Dynamic Control o...|$|R
50|$|During May 1974, the Institute of Electrical and Electronic Engineers (IEEE) {{published}} a paper titled A Protocol for Packet Network Intercommunication. The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet-switching among the nodes. A central control component {{of this model}} was the Transmission Control Program that incorporated both connection-oriented links and <b>datagram</b> <b>services</b> between hosts. The monolithic Transmission Control Program was later divided into a modular architecture consisting of the Transmission Control Protocol at the connection-oriented layer and the Internet Protocol at the internetworking (datagram) layer. The model became known informally as TCP/IP, although formally it was henceforth termed the Internet Protocol Suite.|$|R
50|$|Historically, IP was the {{connectionless}} <b>datagram</b> <b>service</b> in {{the original}} Transmission Control Program introduced by Vint Cerf and Bob Kahn in 1974; the other being the connection-oriented Transmission Control Protocol (TCP). The Internet protocol suite is therefore {{often referred to as}} TCP/IP.|$|E
50|$|The SIGTRAN {{group was}} {{significantly}} influenced by telecommunications engineers intent on {{using the new}} protocols for adapting VoIP networks to the PSTN with special regard to signaling applications. Recently, SCTP is finding applications beyond its original purpose wherever reliable <b>datagram</b> <b>service</b> is desired.|$|E
50|$|DDP was the lowest-level data-link-independent {{transport}} protocol. It {{provided a}} <b>datagram</b> <b>service</b> with no guarantees of delivery. All application-level protocols, including the infrastructure protocols NBP, RTMP and ZIP, were built {{on top of}} DDP. AppleTalk's DDP corresponds closely to the Network layer of the Open Systems Interconnection (OSI) communication model.|$|E
40|$|Abstract. Several {{distributed}} {{real time}} applications require fault tolerance apart from guaranteed timeliness. It {{is essential to}} provide hard guarantees on recovery delays, due to component failures, which cannot be ensured in traditional <b>datagram</b> <b>services.</b> Several schemes exist which attempt to guar-antee recovery in a timely and resource eÆcient manner. These methods center around a priori reservation of network resources called spare resources along a backup route. In this {{paper we propose a}} method of segmented back-ups which improves upon the existing methods in terms of resource utilisa-tion, call acceptance rate and bounded failure recovery time. We demonstrate the eÆciency of our method using simulation studies. ...|$|R
5000|$|In May 1974, the Institute of Electrical and Electronic Engineers (IEEE) {{published}} a paper entitled [...] "A Protocol for Packet Network Intercommunication". The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet switching among network nodes. A central control component {{of this model}} was the [...] "Transmission Control Program" [...] that incorporated both connection-oriented links and <b>datagram</b> <b>services</b> between hosts. The monolithic Transmission Control Program was later divided into a modular architecture consisting of the Transmission Control Protocol and User Datagram Protocol at the transport layer and the Internet Protocol at the network layer. The model {{became known as the}} Department of Defense (DoD) Internet Model and Internet protocol suite, and informally as TCP/IP.|$|R
50|$|End-to-end {{transport}} level, including connection-oriented Transfer Control Protocol (TCP) and <b>datagram</b> (UDP). Commercial <b>services</b> on {{this level}} are rare.|$|R
50|$|At {{the middle}} layer level, VINES used fairly {{standard}} software. The unreliable <b>datagram</b> <b>service</b> and data-stream service operated essentially identically to UDP and TCP {{on top of}} IP. However VINES also added a reliable message service as well, a sort of hybrid of the two that offered guaranteed delivery of a single packet.|$|E
50|$|CYCLADES used a layered architecture, {{as did the}} Internet. The basic packet {{transmission}} like function, named CIGALE, was novel; however, it provided an unreliable <b>datagram</b> <b>service</b> (the word was coined by Louis Pouzin by combining data and telegram). Since the packet switches {{no longer had to}} ensure correct delivery of data, this greatly simplified their design.|$|E
50|$|The {{transport}} layer performs host-to-host communications {{on either the}} same or different hosts and on either the local network or remote networks separated by routers. It provides a channel for the communication needs of applications. UDP is the basic {{transport layer}} protocol, providing an unreliable <b>datagram</b> <b>service.</b> The Transmission Control Protocol provides flow-control, connection establishment, and reliable transmission of data.|$|E
40|$|ABSTRACT This paper {{identifies}} the basic services required from a communication subsystem to support transaction processing in a distributed, reliable, reconfigurable, and replicated database environment. These services include multicasting, remote procedure calls (RPC), inexpensive <b>datagram</b> <b>services,</b> and efficient local interprocess communication (IPC). We show {{the evolution of}} the various versions of Raid communication software and our experience with them. rile show how several ideas such as lightweight protocols, simple naming, memory mapping and shared memory, physical multicasting, direct control passing, and adaptability fulfill the needs for transaction processing. rüe present performance data on these ideas and study their impact on transaction processing. We also use the results of these studies to design and implement a new communication scheme. This scheme has reduced the overhead of communication in Raid distributed database system by up to 70...|$|R
5000|$|SCTP (Stream Control Transmission Protocol) is {{a common}} {{transport}} protocol that uses the services of Internet Protocol (IP) to provide a reliable <b>datagram</b> delivery <b>service</b> to the adaptation modules, such as the S1AP. SCTP provides reliable and sequenced delivery {{on top of the}} existing IP framework. The main features provided by SCTP are: ...|$|R
40|$|<b>Datagram</b> <b>services</b> {{provide a}} simple, flexible, robust, and {{scalable}} communication abstraction; their usefulness {{has been well}} demonstrated {{by the success of}} IP, UDP, and RPC. Yet, the overwhelming majority of network security protocols that have been proposed are geared towards connection-oriented communications. The few that do cater to datagram communications tend to either rely on long term host-pair keying or impose a session-oriented (i. e., requiring connection setup) semantics. Separately, the concept of flows has received {{a great deal of attention}} recently, especially in the context of routing and QoS. A flow characterizes a sequence of datagrams sharing some pre-defined attributes. In this paper, we advocate the use of flows as a basis for structuring secure datagram communications. We support this by proposing a novel protocol for datagram security based on flows. Our protocol achieves zero-message keying, thus preserving the connectionless nature of datagram, and makes use of [...] ...|$|R
5000|$|... (Note: SMB, {{an upper}} layer, is {{a service that}} runs {{on top of the}} Session Service and the <b>Datagram</b> <b>service,</b> and is not to be {{confused}} as a necessary and integral part of NetBIOS itself. It can now run atop TCP with a small adaptation layer that adds a packet length to each SMB message; this is necessary because TCP only provides a byte-stream service with no notion of packet boundaries.) ...|$|E
5000|$|NBF {{protocol}} uses 802.2 type 1 mode {{to provide}} the NetBIOS/NetBEUI name service and <b>datagram</b> <b>service,</b> and 802.2 type 2 mode {{to provide the}} NetBIOS/NetBEUI session service (virtual circuit). NBF protocol makes wide use of broadcast messages, which accounts for its reputation as a [...] interface. While the protocol consumes few network resources {{in a very small}} network, broadcasts begin to adversely impact performance and speed when the number of hosts present in a network grows.|$|E
50|$|MPLS {{operates}} at a layer that {{is generally considered}} to lie between traditional definitions of OSI Layer 2 (data link layer) and Layer 3 (network layer), and thus {{is often referred to}} as a layer 2.5 protocol. It was designed to provide a unified data-carrying service for both circuit-based clients and packet-switching clients which provide a <b>datagram</b> <b>service</b> model. It can be used to carry many different kinds of traffic, including IP packets, as well as native ATM, SONET, and Ethernet frames.|$|E
40|$|Several {{distributed}} real-time applications require fault-tolerance {{apart from}} guaranteed timeliness, at acceptable levels of overhead. These applications require hard guarantees on recovery delays, due to component failures, which cannot be ensured in traditional <b>datagram</b> <b>services.</b> Several schemes exist which attempt to guarantee failure recovery {{in a timely}} and resource ef- cient manner. These methods center around a priori reservation of network resources called spare resources along a backup channel, in addition to each primary communication channel. This backup channel is usually routed along a path disjoint with the primary channel. In this paper, we propose a distributed method of segmented backups for dependable real time communication in multihop networks, which improves upon existing methods in terms of network resource utilization, average call acceptance rate, scalability and provides better QoS guarantees on bounded failure recovery time and propagation delays, without any compromise in fault-tolerance levels. We also discuss the improved performance of our scheme with respect to failure recovery time and providing QoS guarantees. We further show that {{the complexity of the}} distributed algorithm is bounded and acceptable...|$|R
40|$|Current optical {{networks}} typically oer two {{degrees of}} service reliability: full protection in {{presence of a}} single fault in the network, and no protection at all. This situation reects the historical duality that {{has its roots in}} the once divided telephone and data environment. The circuit oriented service required protection, i. e., provisioning of readily available spare resources to replace working resources in case of a fault. The <b>datagram</b> oriented <b>service</b> relied upon restoration, i. e., dynamic search for and reallocation of aected resources via such actions as routing table updates...|$|R
50|$|WSP {{is based}} on HTTP 1.1 with few enhancements. WSP {{provides}} the upper-level application layer of WAP with a consistent interface for two session services. The first is a connection-oriented service that operates above a transaction layer protocol WTP and thesecond is a connection less service that operates above a secure or non-secure <b>datagram</b> transport <b>service.</b> Therefore, WSP exists for two reasons. First, in the connection-mode it enhances the HTTP 1.1's performance over wireless environment. Second, it provides a session layer so the whole WAP environment resembles ISO OSI Reference Model.|$|R
5000|$|Connectionless-mode Network Service (CLNS) {{or simply}} Connectionless Network Service is an OSI Network Layer <b>datagram</b> <b>service</b> {{that does not}} require a circuit to be {{established}} before data is transmitted, and routes messages to their destinations independently of any other messages. As such it is a [...] "best-effort" [...] rather than a [...] "reliable" [...] delivery service. CLNS is not an Internet service, but provides capabilities in an OSI network environment similar to those provided by the Internet Protocol (IP) and the User Datagram Protocol (UDP).|$|E
5000|$|For a brief period, the {{specification}} {{also included}} a connectionless <b>datagram</b> <b>service,</b> but this was dropped in the next revision. The [...] "fast select with restricted response facility" [...] is intermediate between full call establishment and connectionless communication. It is widely used in query-response transaction applications involving a single request and response limited to 128 bytes of data carried each way. The data is carried in an extended call request packet and the response is carried in an extended field of the call reject packet, with a connection never being fully established.|$|E
50|$|The Transmission Control Protocol (TCP) {{is one of}} {{the main}} {{protocols}} of the Internet protocol suite. It originated in the initial network implementation in which it complemented the Internet Protocol (IP). Therefore, the entire suite is commonly referred to as TCP/IP. TCP provides reliable, ordered, and error-checked delivery of a stream of octets between applications running on hosts communicating by an IP network. Major Internet applications such as the World Wide Web, email, remote administration, and file transfer rely on TCP. Applications that do not require reliable data stream service may use the User Datagram Protocol (UDP), which provides a connectionless <b>datagram</b> <b>service</b> that emphasizes reduced latency over reliability.|$|E
40|$|Several {{distributed}} real-time applications (e. g., medical imaging, {{air traffic}} control, and video conferencing) demand hard guarantees {{on the message}} delivery latency and the recovery delay from component failures. As these demands cannot be met in traditional <b>datagram</b> <b>services,</b> special schemes have been proposed to provide timely recovery for real-time communications in multihop networks. These schemes reserve additional network resources (spare resources) a priori along a backup channel that is disjoint with the primary. Upon a failure in the primary channel, its backup is activated, making the real-time connection dependable. In this paper, we propose a new method of providing backups called segmented backups, in which backup paths are provided for partial segments of the primary path rather than for its entire length, as {{is done in the}} existing schemes. We show that our method offers: 1) improved network resource utilization; 2) higher average call acceptance rate; 3) better quality-of-service guarantees on propagation delays and failure-recovery times; and 4) increased flexibility to control the level of fault tolerance of each connection separately. We provide an algorithm for routing the segmented backups and prove its optimality with respect to spare resource reservation. We detail necessary extensions to resource reservation protocol (RSVP) to support our scheme and argue that they increase the implementation complexity of RSVP minimally. Our simulation studies on various network topologies demonstrate that spare resource aggregation methods such as backup multiplexing are more effective when applied to our scheme than to earlier schemes...|$|R
40|$|This paper {{studies the}} usage of {{broadcast}} communication in distributed services. The approach taken is practical: all the algorithms are asynchronous, and tolerate realistic faults. We study four problems in a broadcast domain: clock synchronization, reliable and ordered broadcast, membership, and file replication. The clock synchronization algorithm shows {{for the first time}} how to utilize broadcast communication for synchronization. The master synchronizes any number of slaves while incurring a constant load. The approach taken in the file replication tool uses snooping in order to enhance the availability of file systems, at almost no cost. 1 Introduction This paper presents algorithms that use broadcast communication. The broadcast primitive enables the dissemination of messages to multiple destinations via a single transmission. The motivation behind this work is practical: most computer networks nowadays essentially provide a <b>datagram</b> broadcast <b>service.</b> Most transport protocols [...] ...|$|R
40|$|The {{existence}} of a network relies mainly upon {{the performance of the}} network. In order to improve the performance of a network, the total quality of connections plays a vital role. Quality of Service is the base of which the network's efficiency could be measured. At the transport layer two different protocols are available: TCP and UDP. TCP provides a reliable transfer (acknowledged) service with data checksum. The acknowledgement procedure is named "Changing Size Sliding Window". Timeout in acknowledgement waiting changes according to an adaptive algorithm based on measured communication delays. End-to-End flow control is provided by means of the Source Quence (SQ) method. Information data are organized as a continuous stream of bytes. On the other hand, UDP defines a <b>datagram</b> (unacknowledged) <b>service</b> with an optional checksum, but the successful transfer of transmitted messages is not guaranteed [Ale 91]...|$|R
