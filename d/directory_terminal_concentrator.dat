0|31|Public
50|$|A <b>terminal</b> <b>concentrator</b> {{was also}} {{developed}} that year, since time-sharing {{was still a}} prevalent mode of computer use. In 1975, the network shrank slightly due to budgetary constraints, but the setback was only temporary. At that point, the network provided remote login, remote batch and file transfer user application services.|$|R
50|$|The {{switching}} nodes {{were fed}} by Telenet Access Controller (TAC) <b>terminal</b> <b>concentrators</b> both colocated and {{remote from the}} switches. By 1980, there were over 1000 switches in the public network. At that time, the next largest network using Telenet switches was that of Southern Bell, which had approximately 250 switches.|$|R
40|$|This paper {{presents}} a genetic algorithm for finding a constrained minimum spanning tree. The problem {{is of relevance}} {{in the design of}} minimum cost communication networks, where {{there is a need to}} connect all the terminals at a user site to a <b>terminal</b> <b>concentrator</b> in a multipoint (tree) configuration, while ensuring that link capacity constraints are not violated. The approach used maintains a distinction between genotype and phenotype, which produces superior results to those found using a direct representation in a previous study...|$|R
25|$|In IBM ESA/390 terminology, {{a channel}} is a {{parallel}} data connection inside the tree-like or hierarchically organized I/O subsystem. In System/390 I/O cages, channels either directly connect to devices which are installed inside the cage (communication adapter such as ESCON, FICON, Open Systems Adapter) or they run {{outside of the}} cage, below the raised floor as cables of the thickness of a thumb and directly connect to channel interfaces on bigger devices like tape subsystems, direct access storage devices (DASDs), <b>terminal</b> <b>concentrators</b> and other ESA/390 systems.|$|R
50|$|In 2007, Microsoft {{released}} the Windows Vista Resource Kit. In 2008, Windows Server 2008 Resource Kits was released and Windows Vista Resource Kit, Second Edition was updated for Service Pack 1. The Windows Vista Resource Kit ships with several sample VBScripts and few PowerShell scripts. Microsoft has also released Resource Kits for Group Policy, Windows security, Active <b>Directory,</b> <b>Terminal</b> Services and Internet Information Services 7.|$|R
50|$|Interactive use of VS/9 {{was done}} through {{terminals}} {{connected to a}} <b>terminal</b> <b>concentrator</b> unit, which passed control signals {{to and from the}} terminals, {{in a manner similar to}} the way IBM would provide with its IBM 3270-style terminals. This provided, in general, for input to the terminal to be sent in response to an enter key, as opposed to the practice on PCs of taking input one character at a time. The concentrator unit was originally known as the Communications Control Module, or CCM. However, RCA had sold the patents and designs for its CCM terminal controller to Singer Corporation, so Univac developed an emulator device for the CCM which was known as the Multiterminal Connection Controller model 16, or MCC-16.|$|R
50|$|Strictly speaking, in Unices a {{terminal}} device comprises the underlying tty device driver, {{responsible for the}} physical control of the device hardware via I/O instructions and handling device interrupt requests for character input and output, and the line discipline. A line discipline is independent of the actual device hardware, and the same line discipline {{can be used for}} a <b>terminal</b> <b>concentrator</b> device responsible for multiple controlling terminals as for a pseudoterminal. In fact, the line discipline (or, in the case of BSD, AIX, and other systems, line disciplines) are the same across all terminal devices. It is the line discipline that is responsible for local echo, line editing, processing of input modes, processing of output modes, and character mapping. All these things are independent of the actual hardware, dealing as they do in the simple abstractions provided by tty device drivers: transmit a character, receive a character, set various hardware states.|$|R
25|$|Terminal Server is {{the server}} {{component}} of Terminal services. It handles {{the job of}} authenticating clients, as well as making the applications available remotely. It is also entrusted with the job of restricting the clients according {{to the level of}} access they have. The Terminal Server respects the configured software restriction policies, so as to restrict the availability of certain software to only a certain group of users. The remote session information is stored in specialized directories, called Session Directory which is stored at the server. Session directories are used to store state information about a session, and can be used to resume interrupted sessions. The terminal server also has to manage these <b>directories.</b> <b>Terminal</b> Servers {{can be used in a}} cluster as well.|$|R
5000|$|The system {{firmware}} (BFS or [...] "Basic Functional Software") was {{unrelated to}} the QL's Qdos operating system, although a subset of SuperBASIC was provided on Microdrive cartridge. The BFS provided application-switching, voice/data call management, call answering, phone number <b>directories,</b> viewdata <b>terminal</b> emulation and a simple calculator.|$|R
40|$|Abstract Topological {{design of}} {{centralized}} computer networks {{is an important}} problem that has been investigated by many researchers. Such networks typically involve {{a large number of}} <b>terminals</b> connected to <b>concentrators,</b> that are then connected to a central computing site. This paper focuses on the concentrator location problem among general topological network design problems. The concentrator location problem is defined as determining the following: (i) the number and locations of concentrators that are to be open, and (ii) the allocation of <b>terminals</b> to <b>concentrator</b> sites without violating the capacities of concentrators. An exact algorithm (fractional cutting plane algorithmlbranch-and-bound) is proposed for solving this problem. In this approach an integer programming problem is formulated. Then a class of valid inequalities is derived and a greedy algorithm for a separation problem is shown. A good lower bound is obtained by a lifting procedures. We show how to implement the algorithm using a commercial software for LP and branch-and-bound. Finally, the computational efficiency of our algorithm is demonstrated. 1...|$|R
40|$|In this paper, {{applications}} of heuristic techniques for solving the terminal assignment (TA) problem are investigated. The task {{here is to}} assign <b>terminals</b> to <b>concentrators</b> {{in such a way}} that each terminal is assigned to one (and only one) concentrator and the aggregate capacity of all terminals assigned to any concentrator does not overload that concentrator, i. e., is within the concentrator's capacity. Under these two hard constraints, an assignment with the lowest possible cost is sought. The proposed cost is taken to be the distance between a <b>terminal</b> and a <b>concentrator.</b> The heuristic techniques we investigate in this article include greedy-based algorithms, genetic algorithms (GA), and grouping genetic algorithms (GGA) [4]. We elaborate on the different heuristics we use, and compare the solutions yielded by them. 1 Introduction The objective of the terminal assignment (TA) problem involves determining minimum cost links to form a network by connecting a given collection of termi [...] ...|$|R
40|$|CDROMIn this paper, {{we focus}} on {{a variant of the}} Multisource Weber problem. In this {{classical}} continuouslocation problem, the location of a xed number of concentrators, and the allocation of terminalsto them, must be chosen to minimize the total cost of links between <b>terminals</b> and <b>concentrators.</b> In our variant, we have a third hierarchical level, two categories of link costs, and the number ofconcentrators to locate is unknown. This di cult problem arises in telecommunications, and wepropose some column generation approaches to deal with large scale instances...|$|R
40|$|The project {{objective}} was to design and implement a simulation model of a mail distribution system that communicated with the system’s hardware controller. Lockheed Martin Distribution Technologies (LMDT) sought to determine the feasibility of bridging this connection between a simulation and the hardware controller and producing an accurate simulation with real-time control. LMDT is ultimately interested in applying the connectivity methods described in this report to simulate, test, and develop future distribution products. The Capstone team considered four main options to obtain the desired connectivity. After careful examination of each alternative, the team decided to use MCM functions in AutoMod to send TCP/IP data from the simulation model through a <b>terminal</b> <b>concentrator</b> to convert the data to RS- 232 format, enabling the system controller to receive the information. As a first application of this simulation communication method, the team used the Desktop Tray Tagging System (DTTS), a mail distribution product manufactured by LMDT. Using MCM to connect the DTTS simulation to its system controller proved to be infeasible. Although the theory behind this connection method is sound, limitations in AutoMod’s MCM functionality prevented the final step of connection between the simulation and the system controller. This paper outlines the steps taken {{to come to this}} conclusion, and recommends additional routes LMDT may want to explore in the future...|$|R
40|$|This work {{deals with}} a multi-period capacitated {{location}} problem inspired by telecommunication access network planning problems, where demands and costs vary from one period to another. On each concentrator site, several capacitated concentrators can be installed at each period. Similarly, several capacitated modules can be installed at each period between each <b>terminal</b> and <b>concentrator</b> sites. We assume that equipments can never be removed. An integer linear model is proposed, {{and some of its}} dynamic properties are investigated. Then, a polyhedral analysis of the problem is performed, and some original facet-defining inequalities are introduced. The different improvements proposed are validated on numerical examples...|$|R
40|$|In this paper, {{we focus}} on {{a variant of the}} multi-source Weber problem. In the multi-source Weber problem, the {{location}} of a fixed number of concentrators, and the allocation of terminals to them, must be chosen to minimize the total cost of links between <b>terminals</b> and <b>concentrators.</b> In our variant, we have a third hierarchical level, two categories of link costs, and the number of concentrators is unknown. To solve this difficult problem, we propose several heuristics, and use a new stabilized column generation approach, based on a central cutting plane method, to provide lower bounds. Location Combinatorial optimization Column generation Central cutting plane Multi-source Weber problem...|$|R
25|$|The {{airport was}} {{previously}} Wichita Mid-Continent Airport. The name {{was to be}} changed on March 31, 2015 {{by the city of}} Wichita, but the official change occurred within the Federal Aviation Administration (FAA) on November 13, 2014 for a deadline to publish new aeronautical charts and airport <b>directories.</b> The new <b>terminal</b> opened on Wednesday, June 3, 2015.|$|R
5000|$|... macOS's Finder {{displays}} {{instances of}} [...] ":" [...] in file and directory names with a [...] "/". This {{is because the}} classic Mac OS used the [...] ":" [...] character internally as a path separator. Listing these files or <b>directories</b> using a <b>terminal</b> emulator displays a [...] ":" [...] rather than the [...] "/" [...] character, though.|$|R
40|$|The Barge <b>Terminal</b> <b>Directory</b> {{has been}} {{prepared}} by the Iowa Department of Transportation’s Modal Division to provide quick access to information on Iowa’s river terminals and fleeting/harbor services. The information is to assist those who may need barge transportation services. The information in the directory {{was provided by the}} terminal operators. The Modal Division would appreciate any help on corrections, additions or deletions...|$|R
40|$|A {{currently}} popular systems {{research project}} is to explore the possibilities and problems for computer system organization that arise from the rapidly falling cost of computing hardware. Interconnecting fleets of mini- or micro-computers and putting intelligence in <b>terminals</b> and <b>concentrators</b> to produce so-called "distributed systems " has recently been a booming development activity. While these efforts range from ingenious to misguided, many seem to miss a {{most important aspect of}} the revolution in hardware costs: that more than any other factor, the en_ ~ cost of acquiring and operating a free-standing, complete computer system has dropped and continues to drop rapidly. Where a decade ago the capital outlay required to install a computer system ranged from $ 150, 000 up into the millions, today the low end of that range is below $ 15, 000 and dropping. The consequence of this particular observation for system structure comes from the next level of analysis. In most organizations, decisions to make capital acquisitions tend to be more centralized for larger capita] amounts...|$|R
40|$|Given a {{collection}} of terminals, each with a demand, a col-lection of concentrators, each with a capacity, and costs of connecting the <b>terminals</b> to the <b>concentrators,</b> the <b>terminal</b> assignment problem seeks a set of such connections of mini-mum cost and without the total demand at any concentrator exceeding its capacity. One genetic algorithm for this prob-lem encodes candidate solutions as strings of concentrator labels; in three other GAs, chromosomes are permutations of terminal labels decoded by a greedy decoder. In comparisons on 40 instances of the problem, the string-coded GA consis-tently performs poorly, while among the three permutation-coded GAs, one that applies only mutation almost always outperforms the other two, which use crossover operators as well as mutation...|$|R
40|$|Includes bibliographical {{references}} (pages 74 - 75) Using leased telephone lines, we form a {{distributed network}} of terminals {{connected to a}} central computer. Combining several low speed <b>terminals</b> onto a <b>concentrator</b> utilizing a high speed telephone line, can significantly reduce the telephone line lease costs. Several algorithms exist which can optimize the topological configuration of a point-to-point network by strategically locating high speed data multiplexors for a given set of terminals. In reality, a network topology is constantly changing {{and it would be}} economically undesirable to reconfigure a network to its optimal configuration for every change in the network. The concept of a network cost threshold value is introduced (See more in text. ...|$|R
40|$|Abstract A {{stochastic}} {{version of}} a concentrator location problem is dealt with in which traffic demand at each terminal location is uncertain. The concentrator location problem is defined as to determine the following: (i) the numbers and locations of concentators {{that are to be}} open, and (ii) the allocation of <b>terminals</b> to <b>concentrator</b> sites. The problem is formulated as a stochastic multi-stage integer linear program, with first stage binary variables concerning network design and continuous recourse variables concerning expansion of capacity. Given a first stage decision, the series of realization of traffic demand may possibly imply a violation of the capacity constraint of the concentrator. Therefore from the second stage to the last stage, recourse action is taken to correct the violation. The objective function minimizes the cost of connecting terminals and the cost of opening concentrators and the expected recourse cost of capacity expansion. We propose a new algorithm which combines an L-shaped method and a branch-and-bound method. Under some assumptions it decomposes the problem into a set of problems as many as the number of stages in parallel. Finally we demonstrate the computational efficiency of our algorithm for the multi-stage model. 1...|$|R
2500|$|The {{terminal}} {{has undergone}} updates that include new electronic <b>terminal</b> <b>directories</b> to better assist passengers. A unique {{feature of this}} is that passengers can scan their boarding passes, and the screen will direct them to the gate from which their plane departs. [...] The passenger can also choose to view the information in other languages. Passengers may select a restaurant on the touch screen and a menu will show what items the restaurant serves. Mini tablet devices and phone/tablet apps have been installed in food court areas, where travelers may order food and have it delivered to their table.|$|R
40|$|Abstract- This paper {{describes}} {{the results of}} research work aimed at providing an efficient solution to the aggregation of low bit rate traffic in control applications. It includes the proposal and analysis of an architecture that integrates Terminal Adapters and a Concentrator connected to a remote Control Application through a communication network. The ATM technology was selected to implement the proposed system due to its properties of multiplexing efficiency and control of packet delay. Scheduling Algorithms for the <b>Terminal</b> Adapter and <b>Concentrator</b> have been developed {{in order to satisfy}} two main goals: to guarantee committed delays for time sensitive services, and to increase the network transmission efficiency. The results, obtained by simulation, show that the system performance complies with the requirements of the majority of control applications. I...|$|R
40|$|This paper {{describes}} {{the results of}} research work aimed at providing an efficient solution to the aggregation of low bit rate traffic in control applications. It includes the proposal and analysis of an architecture that integrates Terminal Adapters and a Concentrator connected to a remote Control Application through a communication network. The ATM technology was selected to implement the proposed system due to its properties of multiplexing efficiency and control of packet delay. Scheduling Algorithms for the <b>Terminal</b> Adapter and <b>Concentrator</b> have been developed {{in order to satisfy}} two main goals: to guarantee committed delays for time sensitive services, and to increase the network transmission efficiency. The results, obtained by simulation, show that the system performance complies with the requirements of the majority of control applications. Institute of Electrical and Electronics Engineers (IEEE) ...|$|R
40|$|Centralized {{computer}} networks are hierarchical communication infrastructures {{in which a}} central computer services {{a large number of}} terminals or workstations. For a large network, some concentrators are commonly used to increase the cost efficiency. Several terminals are connected to a concentrator via low capacity lines, and each concentrator is connected to the central computer via a high capacity line. A concentrator is generally subject to technological constraints on the amount of traffic it can manage, and each terminal has its capacity requirement. The problem then is to determine the number and location of concentrators and to allocate the <b>terminals</b> to these <b>concentrators</b> at minimum cost. This is known as the concentrator location problem. If the number and location of concentrators are already known beforehand, the problem then reduces to determining the allocation of terminals only. This is known as the terminal assignment problem. These problems are NP-complete. Therefore, finding a polynomial time algorithm to solve them to optimality is highly unlikely. This study aims to develop some efficient algorithms based on simulated annealing to solve these problems. The results are compared to those given by some existing heuristics...|$|R
40|$|The {{following}} {{problem is}} considered. Given {{the locations of}} the Central Processing Unit (ar;the terminals which have to communicate with it, to determine the number and locations of the concentrators and to assign the <b>terminals</b> to the <b>concentrators</b> {{in such a way that}} the total cost is minimized. There is alao a fixed cost associated with each concentrator. There is ail upper limit to the number of terminals which can be connected to a <b>concentrator.</b> The <b>terminals</b> can be connected directly to the CPU also In this paper it is assumed that the concentrators can bo located anywhere in the area A containing the CPU and the terminals. Then this becomes a multimodal optimization problem. In the proposed algorithm a stochastic automaton is used as a search device to locate the minimum of the multimodal cost function. The proposed algorithm involves the following. The area A containing the CPU and the terminals is divided into an arbitrary number of regions (say K). An approximate value for the number of concentrators is assumed (say m). The optimum number is determined by iteration later The m concentrators can be assigned to the K regions in (mk) ways (m > K) or (km) ways (K>m). (All possible assignments are feasible, i. e. a region can contain 0, 1,…, to concentrators). Each possible assignment is assumed to represent a state of the stochastic variable structure automaton. To start with, all the states are assigned equal probabilities. At each stage of the search the automaton visits a state according to the current probability distribution. At each visit the automaton selects a 'point' inside that state with uniform probability. The cost associated with that point is calculated and the average cost of that state is updated. Then the probabilities of all the states are updated. The probabilities are taken to bo inversely proportional to the average cost of the states After a certain number of searches the search probabilities become stationary and the automaton visits a particular state again and again. Then the automaton is said to have converged to that state Then by conducting a local gradient search within that state the exact locations of the concentrators are determined This algorithm was applied to a set of test problems and the results were compared with those given by Cooper's (1964, 1967) EAC algorithm and on the average it was found that the proposed algorithm performs better...|$|R

