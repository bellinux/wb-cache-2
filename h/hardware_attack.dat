14|131|Public
5000|$|In cryptography, a [...] custom <b>hardware</b> <b>attack</b> uses {{specifically}} designed application-specific integrated circuits (ASIC) to decipher encrypted messages.|$|E
5000|$|Rockenfield uses ddrum drums, Paiste cymbals, Pearl and Gibraltar <b>hardware,</b> <b>Attack</b> drumheads and Easton Ahead drumsticks. His kit often {{carries his}} {{signature}} [...] "chain" [...] motif.|$|E
50|$|In 2006, another custom <b>hardware</b> <b>attack</b> {{machine was}} {{designed}} based on FPGAs. COPACOBANA (COst-optimized PArallel COdeBreaker) {{is able to}} crack DES at considerably lower cost. This advantage is mainly due to progress in integrated circuit technology. In July 2012, security researchers David Hulton and Moxie Marlinspike unveiled a cloud computing tool for breaking the MS-CHAPv2 protocol by recovering the protocol's DES encryption keys by brute force. This tool effectively allows members {{of the general public}} to recover a DES key from a known plaintext-ciphertext pair in about 24 hours.|$|E
40|$|In {{this report}} we discuss several <b>hardware</b> <b>attacks</b> against smart cards. We {{describe}} {{a number of}} successful attacks against cards such as pay-TV cards and pre-paid phone cards and how these attacks has since been mitigated. We have also looked into a class of attacks called Optical Fault Induction Attacks and described how they work and what a designer can do to prevent them. 1...|$|R
5000|$|... it {{includes}} tweaks {{for increasing the}} costs involved {{in the construction of}} dedicated <b>hardware</b> to <b>attack</b> the algorithm ...|$|R
40|$|International audienceSmart card {{are often}} the target of {{software}} or <b>hardware</b> <b>attacks.</b> Recently several logical attacks have been developed that allows to dump the EEPROM memory. This kind of attack are particularly affordable for students who can learn reverse engineering techniques on devices known to be tamper resistant. This tutorial will demonstrate how with a few material a graduate student {{within a couple of}} hours is able to reverse an application...|$|R
5000|$|The {{earliest}} custom <b>hardware</b> <b>attack</b> {{may have}} been the Bombe used to recover Enigma machine keys in World War II. In 1998, a custom <b>hardware</b> <b>attack</b> was mounted against the Data Encryption Standard cipher by the Electronic Frontier Foundation. Their [...] "Deep Crack" [...] machine cost U.S. $250,000 to build and decrypted the DES Challenge II-2 test message after 56 hours of work. The only other confirmed DES cracker was the COPACOBANA machine (Cost-Optimized PArallel COde Breaker) built in 2006. Unlike Deep Crack, COPACOBANA consist of commercially available, reconfigurable integrated circuits. COPACOBANA costs about $10,000 to build and will recover a DES key in under 6.4 days on average. The cost decrease by roughly a factor of 25 over the EFF machine is an impressive example for the continuous improvement of digital hardware. Adjusting for inflation over 8 years yields an even higher improvement of about 30x. Since 2007, SciEngines GmbH, a spin-off company of the two project partners of COPACOBANA has enhanced and developed successors of COPACOBANA. In 2008 their COPACOBANA RIVYERA reduced the time to break DES to the current record of less than one day, using 128 Spartan-3 5000's. It is generally believed that large government code breaking organizations, such as the U.S. National Security Agency, make extensive use of custom hardware attacks, but no examples have been declassified [...]|$|E
50|$|SciEngines GmbH is {{a privately}} owned company founded 2007 as a {{spin-off}} of the COPACOBANA project by the Universities of Bochum and Kiel, both in Germany. The project intended {{to create a}} platform for an affordable Custom <b>hardware</b> <b>attack.</b> COPACOBANA is a massively-parallel reconfigurable computer. It can be utilized to perform a so-called Brute force attack to recover DES encrypted data. It consists of 120 commercially available, reconfigurable integrated circuits (FPGAs). These Xilinx Spartan3-1000 run in parallel, and create a massively parallel system. Since 2007, SciEngines GmbH has enhanced and developed successors of COPACOBANA. Furthermore the COPACOBANA has become a well known reference platform for cryptanalysis and custom hardware based attacks to symmetric, asymmetric cyphers and stream ciphers. 2008 attacks against A5/1 stream cipher an encryption system been used to encrypt voice streams in GSM have been published as the first known real world attack utilizing off-the-shelf custom hardware.|$|E
30|$|Physical Attacks. Our {{main concern}} are {{software}} {{attacks on the}} cameras and the delivered data. Attacks on camera hardware, including hardware manipulation as well as power and timing analysis [12] are {{beyond the scope of}} this work. We however assume that, for example, with specifically designed camera enclosures and circuit boards, a reasonable degree of resistance against tampering can be achieved. If a <b>hardware</b> <b>attack</b> involves the reboot of the camera, this should be detectable for camera operators.|$|E
5000|$|Open Mobile Terminal Platform (OMTP) first {{defined the}} TEE in their Advanced Trusted Environment:OMTP TR1 standard, {{defining}} it as a [...] "set of {{hardware and software}} components providing facilities necessary to support Applications" [...] which had {{to meet the requirements}} of one of two defined security levels. The first security level, Profile 1, was targeted against only software attacks and whilst Profile 2, was targeted against both software and <b>hardware</b> <b>attacks.</b>|$|R
40|$|The {{purpose of}} secure devices, such as smartcards, {{is to protect}} {{sensitive}} information against software and <b>hardware</b> <b>attacks.</b> Implementation of the appropriate protection techniques often implies non-standard methods that are {{not supported by the}} conven-tional design tools. In the recent decade the designers of secure devices have been working hard on customising the workflow. The presented research aims at collect-ing the up-to-date experiences in this area and create a generic approach to the secure design flow that can be used as guidance by engineers. Well-known countermeasures to <b>hardware</b> <b>attacks</b> imply the use of specific signal encodings. Therefore, multi-valued logic has been considered as a primary aspect of the secure design. The choice of radix is crucial for multi-valued logic synthesis. Prac-tical examples reveal that it is not always possible to find the optimal radix when taking into account actual physical parameters of multi-valued operations. In other words, each radix has its advantages and disadvantages. Our proposal is to synthesise logic in different radices, so it could benefit from their combination...|$|R
40|$|Reconfigurable {{hardware}} including Field programmable gate arrays (FPGAs) {{are being}} used {{in a wide range}} of embedded applications including signal processing, multimedia, and security. FPGA device production is often outsourced to off-shore facilities for economic reasons. This opens up the opportunities for insertion of malicious design alterations in the foundry, referred to as <b>hardware</b> Trojan <b>attacks,</b> to cause logical and physical malfunction. The vulnerability of these devices to <b>hardware</b> <b>attacks</b> raises security concerns regard-ing hardware and design assurance. In this paper, we ana-lyze <b>hardware</b> Trojan <b>attacks</b> in FPGA considering diverse activation and payload characteristics and derive a taxon-omy of Trojan attacks in FPGA. To our knowledge, this is the first effort to analyze Trojan threats in FPGA hardware. Next, we propose a novel redundancy-based protection ap-proach based on Trojan tolerance that modifies the appli-cation mapping process to provide high-level of protection against Trojans of varying forms and sizes. We show that the proposed approach incurs significantly higher security at lower overhead than conventional fault-tolerance schemes by exploiting the nature of Trojans and reconfiguration of FPGA resources...|$|R
40|$|Modern {{electronic}} devices expose themselves to danger from adversaries {{who try to}} extract secrete information. Security {{has become a major}} issue in the embedded system since several years. Even though the devices are protected by modern cryptographic algorithms, such as AES or RSA, the security is limited. Specially, <b>hardware</b> <b>attack</b> like differential power analysis (DPA) is very powerful method in order to obtain secrete key. Reconfigurable architectures like FPGA are selected as an efficient target for secure embedded systems. In this report, we surveyed an overview of existing attacks and countermeasures against FPGAs...|$|E
40|$|In this paper, {{we propose}} a {{realistic}} malware {{attack against the}} smart grid. The paper first briefs {{the architecture of the}} smart grid in general. And then we explain our proposed attack that is specifically tailored for the smart grid infrastructures. The attack considers the characteristics of recent real malware attacks such as deceptive <b>hardware</b> <b>attack</b> and multi-stage operation. We believe this analysis will benefit the design and implementation of secure smart grid infrastructures by demonstrating how a sophisticated malware attack can damage the smart grid. 10 page(s...|$|E
40|$|Key Management with Trusted Platform Modules The {{concept of}} Trusted Computing, which aims at making {{computing}} platforms more reliable, {{is based on}} a chip called Trusted Platform Module (TPM). The TPM is a chip which provides cryptographic functionality like RSA encryption and secure key storage. The aim of the Master’s project was to analyse and implement TPM based pre-boot authentication for the disc encryption software Pointsec for PC. The system was analysed with respect to manageability and security. With regard to manageability the findings were that two critical implementation factors will be interoperability and user transparency. Some TPM features are not standardized which complicates the implementation of a general system. Recovery from password loss or hardware failure can be achieved with Remote help or TPM key backup. The security analysis focused on the software and <b>hardware</b> <b>attack</b> mitigation integrated into the TPM. The chip was found to be somewhat vulnerable to sophisticated laboratory based attacks but fully comparable to smartcards...|$|E
5000|$|Data in use. For example: the {{encryption}} keys temporarily used in RAM can {{be threatened}} by cold boot <b>attacks,</b> <b>hardware</b> advanced persistent threats, rootkits/bootkits, computer <b>hardware</b> supply chain <b>attacks,</b> and physical threats to computers from insiders (employees).|$|R
30|$|For the {{implementation}} of an RTM for the TrustCAM prototype we therefore chose a different approach that is shown in Figure 5 (c). The SYS_BOOT pins of the OMAP allow to force the ROM code to request the second bootloader stage from UART 3 as a first boot device. This pin configuration can easily be hardwired in a custom PCB design. In our design we use a trusted building block which {{is connected to the}} OMAP's UART 3 and answers the download request. This could be a one-time programmable memory together with minimal, additional logic. For our prototype, we realized this component with a microcontroller that downloads the second stage (X-Loader) bootloader. Once X-Loader has been downloaded, the application on the microcontroller terminates and no further interaction between the OMAP CPU and the microcontroller is possible until the next reboot of the system. Allowing no further communication between the two systems is important since it ensures that a potential attacker who gains access to the system that runs on the OMAP CPU, cannot access or modify the X-Loader located on the microcontroller. Compared to modifying the ROM code, our prototype approach provides no resistance against <b>hardware</b> <b>attacks.</b> With full physical access to a camera, it is easy to change the boot procedure and prevent the correct establishment of the chain of trust. As stated in Section 2, <b>hardware</b> <b>attacks</b> are not in the focus of our current work. We nevertheless believe that the proposed mechanism to establish the RTM can still be valuable for legacy devices especially when combined with the Trusted Lifebeat described in Section 5.2. <b>Hardware</b> <b>attacks</b> often cannot be performed on a running system or require a reboot to become effective. The lifebeat allows operators to detect such unexpected events and initiate further actions like retrieval and inspection of the camera.|$|R
40|$|Today, {{embedded}} systems {{are used in}} many security-critical applications, from access control, electronic tickets, sensors, and smart devices (e. g., wearables) to automotive applications and critical infrastructures. These systems are increasingly used to produce and process both security-critical and privacy-sensitive data, which bear many security and privacy risks. Establishing trust in the underlying devices and making them resistant to software and <b>hardware</b> <b>attacks</b> is a fundamental requirement in many applications and a challenging, yet unsolved, task. Solutions solely based on software c...|$|R
40|$|International audienceSecurity and Trust in {{communication}} systems where very sensitive information are exchanged is achieved and retained through hardware means. In the SECRICOM project where seamless, interoperable crisis management communication is required, {{we have developed}} a security and trust managements mechanism based on a smart card like hardware structure called Secure Docking Module (SDM). However, given the highly secure and hostile environment (emergency, crisis situation) where the SDM needs to function, this security module can {{be the subject of}} many attacks. While cryptanalytic attacks on the SDM security are impossible due to the employed strong cryptographic algorithms, attacks targeting the SDM implementation constitute a pragmatic threat that cannot be neglected. In this paper, we address possible hardware issues of the SDM chip and focus on the <b>Hardware</b> <b>attack</b> protection mechanisms especially on the SDM RSA and AES cryptographic accelerators. We present the research work that was done through the SECRICOM project on the above issues and analyze the basic concept behind the protected RSA-AES structures that complement the SDM architecture. Those hardware structures are fully compatible with the SDM protocols and offer strong protection against hardware power attacks and fault attacks while retaining high performance characteristics...|$|E
40|$|In {{recent years}} {{a new kind}} of threat, known as Hard- ware Trojan, is {{affecting}} the Integrated Circuit industry. Due to the segmentation in the production, untrusted parties involved in the supply chain may illegally inject additional hardware components, that, under specific circumstances, act for malicious purposes. While it is mostly unfeasible to identify malicious hardware tampering with in-lab testing, as a remedy, several countermeasures have been proposed, mostly based on hardware alterations of the original design, with the main drawbacks of in- creased production costs, increased area and energy consumption. In this paper, we introduce a cost effective solution, completely software-based, that minimize the chance of activation of a multi- stage trigger Hardware Trojan. The proposed approach relies on a software obfuscation mechanism, which exploits evolutionary algorithms to modify an executable program without affecting its original functionalities. Such always-changing, obfuscation routine, can be used to protect critical infrastructures and operations, at a minimum and predictable loss of performances. To show the effectiveness of the proposed technique, we developed a proof-of-concept evolutionary obfuscator {{and we are going to}} test it against a well-known real-world <b>hardware</b> <b>attack</b> scenario...|$|E
40|$|This paper {{presents}} a novel <b>hardware</b> <b>attack</b> against RSA-based authentication of programs. Like the seminal paper from [10] it exploits the attacker’s ability to arbitrarily tam-per with a computational device during its data processing. But, contrary to [10] our method targets the RSA signature verification which processes only public data. Surprisingly, we prove how {{to let the}} RSA verification process accept sig-natures (with high probability and assuming the Riemann Hypothesis) of arbitrary code — signed with our own self-created private key. While our attack is so far only theo-retical, its practical feasibility has been already implicitly confirmed, cf. [6]. In fact, through real experiments with tamper-resistant devices [4] discovered the following caveat being {{at the heart of}} our vulnerability: the most often ob-served fault during RSA-computations exposed to glitch at-tacks is the erroneous modification of the moduli. Moreover, our attack relies only upon the simplest and most easiest practically implementable fault induction method described by [8]. Our idea is somehow inspired by practiced methods circumventing the FLASH Boot ROM authentication mech-anism of the Xbox due to F. Lehner, cf. [17]. Our attack can be interpreted as the extrapolation of the mathematical foundation underlying those Xbox vulnerabilities...|$|E
40|$|International audienceEvaluating early at {{design time}} {{the level of}} {{security}} achieved with respect to fault-based <b>hardware</b> <b>attacks</b> requires understanding and accurately modeling the faults that can actually occur in a circuit under attack. Attacks with lasers can produce single or multiple-bit errors, while having a local impact in the circuit. This paper discusses several fault or error models that can be considered at design time and summarizes experimental results providing some insights into {{the consequences of the}} model chosen for evaluation...|$|R
40|$|This paper {{presents}} a study about <b>hardware</b> <b>attacking</b> and clock signal vulnerability. It considers {{a particular type}} of attack on the clock signal in the I 2 C protocol, and proposes the design of a new sensor for detecting and defending against this type of perturbation. The analysis of the attack and the defense is validated by means of a configurable experimental platform that emulates a differential drive robot. A set of experimental results confirm the interest of the studied vulnerabilities and the efficiency of the proposed sensor in defending against this type of situation...|$|R
5000|$|In cryptography, scrypt (pronounced [...] "ess crypt") is a password-based key {{derivation}} function {{created by}} Colin Percival, originally for the Tarsnap online backup service. [...] The algorithm was specifically designed to make it costly to perform large-scale custom <b>hardware</b> <b>attacks</b> by requiring large amounts of memory. In 2016, the scrypt algorithm was published by IETF as RFC 7914. A simplified version of scrypt {{is used as a}} proof-of-work scheme by a number of cryptocurrencies, first implemented by an anonymous programmer called ArtForz in Tenebrix and followed by Fairbrix and Litecoin soon after.|$|R
40|$|Tens of {{millions}} of wearable fitness trackers are shipped yearly to consumers who routinely collect information about their exercising patterns. Smartphones push this health-related data to vendors' cloud platforms, enabling users to analyze summary statistics on-line and adjust their habits. Third-parties including health insurance providers now offer discounts and financial rewards in exchange for such private information and evidence of healthy lifestyles. Given the associated monetary value, the authenticity and correctness of the activity data collected becomes imperative. In this paper, we provide an in-depth security analysis of the operation of fitness trackers commercialized by Fitbit, the wearables market leader. We reveal an intricate security through obscurity approach implemented by the user activity synchronization protocol running on the devices we analyze. Although non-trivial to interpret, we reverse engineer the message semantics, demonstrate how falsified user activity reports can be injected, and argue that based on our discoveries, such attacks can be performed at scale to obtain financial gains. We further document a <b>hardware</b> <b>attack</b> vector that enables circumvention of the end-to-end protocol encryption present in the latest Fitbit firmware, leading to the spoofing of valid encrypted fitness data. Finally, we give guidelines for avoiding similar vulnerabilities in future system designs...|$|E
40|$|Today, {{electronic}} devices {{have been widely}} deployed in our daily lives, basic infrastructure such as financial and communication systems, and military systems. Over the past decade, {{there have been a}} growing number of threats against them, posing great danger on these systems. Hardware-based countermeasures offer a low-performance overhead for building secure systems. In this work, we investigate what hardware-based attacks are possible against modern computers and {{electronic devices}}. We then explore several design and verification techniques to enhance hardware security with primary focus on two areas: hardware Trojans and side-channel attacks. Hardware Trojans are malicious modifications to the original integrated circuits (ICs). Due to the trend of outsourcing designs to foundries overseas, the threat of hardware Trojans is increasing. Researchers have proposed numerous detection methods, which either take place at test-time or monitor the IC for unexpected behavior at run-time. Most of these methods require the possession of a Trojan-free IC, which is hard to obtain. In this work, we propose an innovative way to detect Trojans using reverse-engineering. Our method eliminates the need for a Trojan-free IC. In addition, it avoids the costly and error-prone steps in the reverse-engineering process and achieves significantly good detection accuracy. We also notice that in the current literature, very little effort has been made to design-time strategies that help to make test-time or run-time detection of Trojans easier. To address this issue, we develop techniques that can improve the sensitivity of designs to test-time detection approaches. Experiments show that using our method, we could detect a lot more Trojans with very small power/area overhead and no timing violations. Side-channel attack (SCA) is another form of <b>hardware</b> <b>attack</b> in which the adversary measures some side-channel information such as power, temperature, timing, etc. and deduces some critical information about the underlying system. We first investigate countermeasures for timing SCAs on cache. These attacks have been demonstrated to be able to successfully break many widely-used modern ciphers. Existing hardware countermeasures usually have heavy performance overhead. We innovatively apply 3 D integration techniques to solve the problem. We investigate the implication of 3 D integration on timing SCAs on cache and propose several countermeasures that utilize 3 D integration techniques. Experimental results show that our countermeasures increase system security significantly while still achieving some performance gain over a 2 D baseline system. We also investigate the security of Oblivious RAM (ORAM), which is a newly proposed hardware primitive to hide memory access patterns. We demonstrate both through simulations and on FPGA board that timing SCAs can break many ORAM protocols. Some general guidelines in secure ORAM implementations are also provided. We hope that our findings will motivate a new line of research in making ORAMs more secure...|$|E
5000|$|Tom West, 71, American {{computer}} <b>hardware</b> engineer, heart <b>attack.</b> http://www.boston.com/bostonglobe/obituaries/articles/2011/05/22/tom_west_engineer_was_the_soul_of_data_generals_new_machine/?page=full ...|$|R
40|$|International audienceSmart card {{are often}} the target of {{software}} or <b>hardware</b> <b>attacks.</b> The most recent attack is based on fault injection which modifies {{the behavior of the}} application. We propose an evaluation of the effect of the propagation and the generation of hostile application inside the card. We designed several countermeasures and models of smart cards. Then we evaluate the ability of these countermeasures to detect the faults, and the latency of the detection. In a second step we evaluate the mutant with respect to security properties in order to focus only on the dangerous mutants...|$|R
40|$|Remote {{attestation}} is {{a mechanism}} to securely and verifiably obtain information {{about the state of}} a remote computing platform. However, resource-constrained embedded devices cannot afford the required trusted hardware components, while software attestation is generally vulnerable to network and collusion attacks. In this paper, we present a lightweight remote attestation scheme that links software attestation to remotely identifiable hardware by means of Physically Unclonable Functions (PUFs). In contrast to existing software attestation schemes, our solution (1) resists collusion attacks, (2) allows the attestation of remote platforms, and (3) enables the detection of <b>hardware</b> <b>attacks</b> due to the tamper-evidence of PUFs...|$|R
40|$|International audienceSmart card {{are often}} the target of {{software}} or <b>hardware</b> <b>attacks.</b> For instance the most recent attacks are based on fault injection which can modify the behavior of applications loaded in the card, changing them as mutant application. In this paper, we propose a new protection mechanism which makes application to be less prone to mutant generation. This countermeasure requires a transformation of the original program byte codes which remains semantically equivalent. It requires a modification of the Java Virtual Machine which remains backward compatible and a dedicated framework to deploy the applications. Hence, our proposition improves {{the ability of the}} platform to resist to Fault Enabled Mutant...|$|R
40|$|In this paper, {{we carry}} out the study of the Chinese Remainder Theorem based three-prime RSA {{cryptosystem}}. The <b>hardware</b> fault <b>attack</b> on three-prime RSA cryptosystem is analyzed and it is proven that the three-prime RSA is more difficult to be broken than two-prime RSA by the <b>hardware</b> fault <b>attack.</b> Then, Shamir’s checking procedure is extended from two-prime to three-prime RSA to increase its immunity against such attack. Finally an immune method for three-prime RSA without checking procedure is proposed in this paper, which is more efficient than the previous methods. It is expected that this proposed system will {{play an important role in}} the future cryptography applications. 1...|$|R
50|$|The 7z format {{supports}} encryption {{with the}} AES algorithm with a 256-bit key. The key is generated from a user-supplied passphrase using an algorithm {{based on the}} SHA-256 hash function. The SHA-256 is executed 218 (262144) times, which causes a significant delay on slow PCs before compression or extraction starts. This technique is called key stretching and is {{used to make a}} brute-force search for the passphrase more difficult. Current GPU-based, and custom <b>hardware</b> <b>attacks</b> limit the effectiveness of this particular method of key stretching, so it is still important to choose a strong password.The 7z format provides the option to encrypt the filenames of a 7z archive.|$|R
40|$|International audienceTraditionally most {{of people}} treat a {{hardware}} solution as an inherently trusted box. “it is hardware not software; so it is secure and trustworthy”, they say. Recent research shows the need to re-asses this trust in hardware and even in its supply chain. For example, attacks are performed on ICs to retrieve secret information such as cryptographic keys. Moreover, backdoors can be inserted into electronic designs and allow for silent intruders into the system. And, even protecting intellectual-property is becoming a serious concern in the modern globalized, horizontal semiconductor business model. This paper discusses hardware security, both from hacking and protecting aspects. A classification of all possible <b>hardware</b> <b>attacks</b> is provided and most popular attacks are discussed including the countermeasures...|$|R
40|$|In an {{ever-increasing}} digital world, {{the need for}} secure communications over unsecured channels like Internet has exploded. To meet the different security requirements, communication devices have to perform expensive cryptographic operations. Hardware processors are therefore often needed to meet goals such as speed, ubiquity or cost-effectiveness. For such devices, the size of security parameters is chosen as small as possible to save resources and time. It is therefore necessary to know the effective security of given sets of parameters {{in order to achieve}} the best trade-off between efficiency and security. The best way to address this problem is by means of accurate estimations of dedicated <b>hardware</b> <b>attacks.</b> In this thesis, we investigate two aspects of cryptographic hardware: constructive applications that deal with general purpose secure devices and destructive applications that handle dedicated <b>hardware</b> <b>attacks</b> against cryptosystems. Their set of constraints is clearly different but they both need efficient algorithms and hardware architectures. First, we deal with efficient and novel modular inversion and division algorithms on Field-Programmable Gate Array (FPGA) hardware platform. Such algorithms are an important building block for both constructive and destructive use of elliptic curve cryptography. Then, we provide new or highly improved architectures for attacks against RC 5 cipher, GF(2 m) elliptic curves and RSA by means of efficient elliptic curve-based factorization engines (ECM). We prove that FPGA-based solutions are much more cost-effective and low power than software-based solutions. Our resulting cost assessments should serve as a basis for improving the accuracy of current hardware or software-based security evaluations. Finally, we handle the efficiency-flexibility trade-off problem for high-speed hardware implementations of elliptic curve. Then, we present efficient elliptic curve digital signature algorithm coprocessors for smart cards. We also show that, surprisingly, affine coordinates can be an attractive solution for such an application. (FSA 3) [...] UCL, 200...|$|R
40|$|International audienceThis {{experimental}} study addresses the problem ofassessing the digital security of System on Chip (SoC) againstelectromagnetic (EM) <b>hardware</b> <b>attacks</b> through their packages. With large and complex circuits such as SoC, finding the rightlocation {{and the right}} time to examine attacks such as sidechannel analysis and fault injection is a real challenge. Inaddition, setting up properly the parameters of these attacksis time consuming. This article presents, through an applicationto a commercial SoC, an approach which, based on side channelanalysis results, performs a fault injection attack. This approachshows firstly, the potential time saved to determine the injectiontime parameter of the fault attack and secondly, it enables toanalyze the duality between the emission fields and the areaswhere errors occur. Thus, a security test of the SoC against EMfield is presented in this study...|$|R
40|$|Protection from <b>hardware</b> <b>attacks</b> such as snoopers and mod chips {{has been}} {{receiving}} increasing attention in computer architecture. This paper presents a new combined memory encryption/authentication scheme. Our new split counters for counter-mode encryption simultaneously eliminate counter overflow problems and reduce per-block counter size, {{and we also}} dramatically improve authentication performance and security by using the Galois/Counter Mode of operation (GCM), which leverages counter-mode encryption to reduce authentication latency and overlap it with memory accesses. Our {{results indicate that the}} split-counter scheme has a negligible overhead even with a small (32 KB) counter cache and using only eight counter bits per data block. The combined encryption/authentication scheme has an IPC overhead of 5 % on average across SPEC CPU 2000 benchmarks, which is a significant improvement over the 20 % overhead of existing encryption/authentication schemes. 1...|$|R
