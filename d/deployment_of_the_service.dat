21|10000|Public
50|$|Finally, five NRENs not {{involved}} in the GN3 project joined the European eduroam confederation on a voluntary basis, enabling the <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> in Andorra (Universitat d'Andorra), Armenia (ASNET-AM), Azerbaijan (AzScienceNet), Kazakhstan (KazRENA) and Kyrgyzstan (KRENA).|$|E
50|$|Windows Vista Service Pack 1 (SP1) was {{released}} on 4 February 2008, alongside Windows Server 2008 to OEM partners, after a five-month beta test period. The initial <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> pack caused a number of machines to continually reboot, rendering the machines unusable. This temporarily caused Microsoft to suspend automatic <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> pack until the problem was resolved. The synchronized release date of the two operating systems reflected the merging of the workstation and server kernels back into a single code base {{for the first time}} since Windows 2000. MSDN subscribers were able to download SP1 on 15 February 2008. SP1 became available to current Windows Vista users on Windows Update and the Download Center on 18 March 2008. Initially, the service pack only supported five languages - English, French, Spanish, German and Japanese. Support for the remaining 31 languages {{was released}} on 14 April 2008.|$|E
50|$|On July 13, 2009, Bell Aliant {{announced}} {{the beginning of}} Fibe services in New Brunswick, focusing on Fredericton and Saint John. This was the inaugural <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> in Canada.On February 8, 2010, Bell Aliant {{announced that it would}} expand its Fibe services to the following communities in New Brunswick throughout the remainder of 2010: Bathurst, Miramichi, Rothesay, Quispamsis, Grand Bay-Westfield, Moncton, Dieppe, and Riverview.|$|E
50|$|Reduce crime through <b>the</b> pro-active <b>deployment</b> <b>of</b> <b>the</b> police <b>service</b> dog.|$|R
50|$|The battle also marked <b>the</b> first combat <b>deployment</b> <b>of</b> <b>the</b> 1st Special <b>Service</b> Force, {{though they}} {{also did not}} see any action.|$|R
5000|$|... 6rd is a {{mechanism}} to facilitate rapid <b>deployment</b> <b>of</b> <b>the</b> IPv6 <b>service</b> across IPv4 infrastructures of Internet service providers (ISPs). It uses stateless address mappings between IPv4 and IPv6 addresses, and transmits IPv6 packets across automatic tunnels that follow the same optimized routes between customer nodes as IPv4 packets.|$|R
50|$|ForgetMeNot Africa {{launched}} the first internet-free Facebook, email and online chat service for Portuguese speaking Africans when its technology was deployed by Cape Verdean operator T-Mais in November 2011. The <b>deployment</b> <b>of</b> <b>the</b> <b>service,</b> named Ch@t+, enabled T-Mais to provide its 100,000 subscribers {{with access to}} mobile internet messaging services across the remote Cape Verdean islands. The launch also opened up internet messaging via SMS to the near 23 million Portuguese speakers across Africa.|$|E
50|$|If {{services}} are specified directly {{in terms of}} a specific infrastructure implementation, then they are tied to that technology. Instead, by layering the services themselves, the service specifications can be made independent of the underlying technology. Specific technology adapters enable the <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> framework over that technology. This in turn makes it possible to replace the infrastructure implementation as well as component implementations. It is also possible to transparently bridge between different infrastructure implementations, where these are appropriate to different communications environments (e.g., space or ground) or simply reflect different agencies’ deployment choices.|$|E
50|$|Service choreography {{is better}} {{understood}} through the comparison with another paradigm of service composition: service orchestration. On one hand, in service choreographies {{the logic of}} the message-based interactions among the participants are specified from a global perspective. In service orchestration, on the other hand, the logic is specified from the local point of view of one single participant, called the orchestrator. In the service orchestration language BPEL, for example, the specification of the service orchestration (e.g. the BPEL process file) can be deployed on the service infrastructure (for example a BPEL execution engine like Apache ODE). The <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> orchestration specification creates the composed service.|$|E
50|$|IPv4 Residual Deployment (4rd) is a mechanism, {{specified}} in RFC 7600, to facilitate residual <b>deployment</b> <b>of</b> <b>the</b> IPv4 <b>service</b> across IPv6 networks. Like 6rd, it uses stateless address mappings between IPv6 and IPv4. It supports {{an extension of}} IPv4 address based on transport-layer ports. This is a stateless variant <b>of</b> <b>the</b> A+P model.|$|R
40|$|Digital {{forensics}} departments {{usually have}} to analyse {{vast amounts of}} audio-visual content, such as videos collected from street CCTV footage, hard drives or online resources. The framework presented in this article, which has been developed in <b>the</b> context <b>of</b> <b>the</b> EU-funded project LASIE, aims to assist investigators in their everyday tasks, through <b>the</b> provision <b>of</b> innovative tools for image and video analysis, object detection and tracking and event detection. These tools exploit the latest advances in machine learning, including deep neural networks, to handle the challenges in processing content from real-world data sources. The framework is enhanced with advanced inference and recommendation capabilities, which filter-out inconsistencies and recommend additional evidence. An intuitive user interface allows exploiting <b>the</b> capabilities <b>of</b> <b>the</b> available tools in a user-friendly manner. The framework supports distributed processing, with easy <b>deployment</b> <b>of</b> <b>the</b> <b>services</b> in clusters <b>of</b> multiple workstations, making the proposed solution appropriate for big data analytics tasks...|$|R
40|$|Speech enabled {{business}} {{applications are}} characterized by complex implementations that bring together language processing technologies, applications development, and end-user psychology. Resilience is critical to maintaining business to customer relationships when implementing these self-service solutions. The Wizard-of-Oz experiment is a valuable technique for simulating and building humanÂ¿machine prototypes to ensure successful <b>deployment</b> <b>of</b> <b>the</b> completed <b>service.</b> This paper proposes the simplification and diffusion <b>of</b> <b>the</b> methodology to facilitate the growth in demand for automated e-business transactions...|$|R
50|$|Nokia Life, earlier Ovi Life Tools and Nokia Life Tools, was an SMS based, {{subscription}} {{information service}} designed for emerging markets, {{and offers a}} wide range of information services covering healthcare, agriculture, education and entertainment. Nokia appointed an employee to create a service for the Bottom of the Pyramid (BoP), because of the significant brand- and distribution presence that it already had in those markets at that time. In 2013 Nokia Life was eliminated due to Nokia’s switch in focus and the arise of Internet based information services in those markets. The service has been available in Pakistan, India, Indonesia, China, and Nigeria. Around 125 million people have experienced Nokia Life services in these five countries. Nokia Life was launched as Mera Nokia, in the state of Maharashtra in India in early 2009. After the successful pilot, a wider commercial <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> under the name Nokia Life Tools began in India in June 2009. The service was later expanded to Indonesia in November 2009, China in May 2010, and Nigeria in November 2010. Nokia Life was able to use the existing distribution network of Nokia by pre-installing it on Nokia devices. The first two supported devices were the Nokia 2323 Classic and Nokia 2330 Classic devices.|$|E
40|$|AbstractA {{fundamental}} {{demand for}} IT service providers is to obtain design skills for non-functional requirements (NFRs) {{of a target}} IT enabled service system. The design task should identify a number of NFR determinants, such as {{the architecture of the}} IT infrastructure, the operational procedure, and the human resources for service delivery. The satisfaction of NFRs has not been validated after implementation or <b>deployment</b> <b>of</b> <b>the</b> <b>service,</b> which causes extensive redesign work. Thus, a modeling method to bridge NFR and IT service design for reducing such risks is introduced, and an NFR evaluation model is provided. Consequently, IT service designers can validate NFRs in the early development phase...|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2000). All Rights Reserved. The TISDAG (Technical Infrastructure for Swedish Directory Access Gateway) project provided valuable insight into the current reality of deploying a wide-scale directory service. This document catalogues some of the experiences gained in developing the necessary infrastructure for a national (i. e., multi-organizational) directory service and pilot <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> in an environment with off-the-shelf directory service products. A perspective on the project’s relationship to other directory deployment projects is provided, along with some proposals for future extensions of the wor...|$|E
40|$|IP {{multicast}} {{has been}} addressed since {{more than a}} decade but very little has been achieved as far as deployment is concerned. Many reasons are responsible for this status. Hence, the Internet is likely to be organized with both unicast and multicast enabled networks. Therefore, it is of utmost importance to design protocols that allow <b>the</b> progressive <b>deployment</b> <b>of</b> <b>the</b> multicast <b>service</b> by supporting unicast clouds. This paper proposes HBH (Hop-By-Hop multicast routing protocol) ...|$|R
40|$|Abstract. Update of {{molecular}} biology databases {{is a growing}} burden on the biomedical research community. As the grid allows to share and replicate data, we propose a service to automatically update the biology databases from a single changing reference using web services. In this paper we report the components, the architecture and <b>the</b> <b>deployment</b> <b>of</b> <b>the</b> update <b>service</b> on <b>the</b> french RUGBI grid infrastructure. RUGBI is a computing grid infrastructure based on existing middleware and technologies for <b>the</b> community <b>of</b> scientists in bioinformatics...|$|R
40|$|Several {{reliable}} multicast schemes using router assistance {{have been}} proposed recently, which not only promise performance gains, but also simplify applications. Since they require network assistance, <b>the</b> effectiveness <b>of</b> such schemes degrades if <b>the</b> <b>deployment</b> <b>of</b> <b>the</b> required network <b>services</b> is sparse, meaning that an effective deployment strategy is critical...|$|R
40|$|A {{workflow}} aggregates {{the underlying}} Web Services {{in a manner}} consistent with the desired functionality. Since CWS can contain atomic and other CWS they encourage the development of service layers and reuse of already existing functionality. However <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> compositions becomes possible only after an adequate performance of CWS is assured. Due to the constantly increasing complexity of the underlying services interaction, a CWS can exhibit problematic and often difficult to predict behaviours in overload situations. This paper focuses on the use of request scheduling for improving CWS performance in overload situations. Scheduling policies namely Shortest Job First, Least Work Reaming, Total Work and Fewest Operations remaining are studied in regards to their effectiveness in helping with constant and fluctuating loads...|$|E
40|$|The {{development}} of {{value added services}} is currently still very cost and time consuming. The need for specific user generated services demands for efficient service development methods. The Service Creation Environment of the TeamCom project represents a promising approach. It supports the developer with the {{development of}} services on the basis of re-usable service components called Communication Building Blocks and describes the service by a control logic. For the description of a value added service, a language, which was optimized for business processes, is suggested: the Businesses Process Execution Language (BPEL). The services described in BPEL are translated into Java code and compiled. For the <b>deployment</b> <b>of</b> <b>the</b> <b>service,</b> a Service Execution Environment, based on JSLEE is supported. This publication extends the TeamCom approach with the support of parallel processes. It is shown, how forked BPEL activities can be translated into JSLEE services...|$|E
40|$|Video on Demand (VoD) {{services}} are very appealing these days. In this work, we discuss four distinct alternatives for {{the architecture of}} a VoD server and compare their performances under different conditions. We later used the best configuration found in our analysis to evaluate, using simulations, {{the performance of a}} distributed VoD service in an ATM network covering {{an area the size of}} a large city neighborhood. We also introduced optimizations to the system, such as anticipated delivery and retrieval of video blocks from neighbor clients. Our results indicate that a server-driven operation mode (i. e., based on cycles) is not the most appropriate choice for a variety of workloads, even when the layout is striped (a result that challenges the conventional wisdom in the field). Also, our optimization strategies increased significantly the number of clients served in the system, which in our study case represented a savings of approximately 33 % in the hardware required for the <b>deployment</b> <b>of</b> <b>the</b> <b>service.</b> 1...|$|E
40|$|PCSV, présenté par V. Breton, à paraître dans les proceedingsUpdate of {{molecular}} biology databases {{is a growing}} burden on the biomedical research community. As the grid allows to share and replicate data, we propose a service to automatically update the biology databases from a single changing reference using web services. In this paper we report the components, the architecture and <b>the</b> <b>deployment</b> <b>of</b> <b>the</b> update <b>service</b> on <b>the</b> french RUGBI grid infrastructure. RUGBI is a computing grid infrastructure based on existing middleware and technologies for <b>the</b> community <b>of</b> scientists in bioinformatics...|$|R
40|$|<b>The</b> {{connection}} <b>of</b> {{buildings to}} <b>the</b> Internet broadband network is becoming commonplace. <b>The</b> establishment <b>of</b> such an infrastructure enables <b>the</b> development <b>of</b> {{a range of}} new energy, environment and health-related services for people {{in their homes and}} workplaces. Telecommunications companies and utilities are actively developing examples of such services, and local authorities and health care providers are supporting trial <b>deployments.</b> Several <b>of</b> <b>the</b> <b>services</b> can be enabled or enhanced through <b>the</b> application <b>of</b> building modelling and simulation. This paper describes the infrastructure for the e-services under test within a European research project and shows the potential for simulation support for these services...|$|R
40|$|This {{deliverable}} {{reports on}} the design, development and <b>deployment</b> <b>of</b> <b>the</b> software <b>services</b> for <b>the</b> ingestion <b>of</b> cultural content metadata originated from providers that participate in the CARARE project. The discussed workflow aims to guarantee semantic interoperability across <b>the</b> different repositories <b>of</b> varied technical features, capabilities and scope, allowing seamless ingestion of diverse content and knowledge. The core modules that currently serve the ingestion process are described, together with examples and screens that highlight important functionalities <b>of</b> <b>the</b> implemented web <b>services.</b> This document {{can be used as}} a reference for the prototype design and implementation as well as an instruction manual to familiarize with the services" features and usage...|$|R
40|$|In this paper, {{we present}} a pattern based {{approach}} to network level service deployment for active networks. Network level service deployment includes discovering and selecting active nodes that fulfill the service requirements and are capable of running service components. Once a suitable set of active nodes is identified, service installation is triggered on those nodes. Our approach provides a first step towards composing service-specific deployment protocols from reusable protocol building blocks. We make extensive use of the distributed processing capability available in active networks. Our work is particularly well suited for networks where topology and available resources change frequently. Moreover, our approach is tailored to networks that potentially support {{a broad range of}} service types, as is the case for active networks. In such networks, it is inefficient or even impossible to constantly distribute all potentially useful node status data. Therefore, we exclusively gather information relevant to the <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> in question. First simulations show promising results...|$|E
40|$|Abstract — The {{development}} of {{value added services}} is currently still very time and cost consuming. The need for specific user generated and in particular business-to-business services demands for efficient service development methods. This paper presents a service creation environment that supports the application developer to compose a service based on reusable components and to describe the business process through a control logic. Forthe service description a language that has been optimized for business prozesses is suggested: the Business Process Execution Language (BPEL). However, BPEL has not been developed for control of specific, in particular real time, communication services in heterogeneous networks. Therefore the paper presents a parser translating the business process description into Java code and supporting the <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> in a service execution environment based on JAIN SLEE. The provided elementary communication Service Components hide the underlying heterogeneous communication networks. Thereby the developer does not need any detailed knowledge of communication protocols {{and is able to}} focus on the application logic instead. This leads to new opportunities for rapid and efficient service creation using a new Service Creation Environment (SCE) with higher level of abstraction and automated service generation...|$|E
40|$|Abstract—This paper {{investigates the}} {{application}} of modeldriven techniques to the construction and composition of services on sensor networks. We present a model that gives the user a visual representation of a service, that can be annotated with semantic information (for example performance characteristics, deployment constraints, policies and rules, etc.) using an appropriate extensible user-oriented vocabulary. We propose the use of UML 2. 0 Activity Diagrams as our graphical notation, with semantic annotations represented as properties. We show {{the transformation of the}} UML model to a semantic representation conforming to an appropriate ontology and use this as the core model for subsequent static and dynamic analysis. We show how the core model can be used to generate domain-specific representations suitable for input to analysis and development tools. Two examples are given: (i) generation of a Performance Evaluation Process Algebra (PEPA) [1] model, and (ii) generation of a specification for the <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> on a sensor network infrastructure. The output of the tools is harvested to provide additional generated semantic information that can be “round tripped ” back into the core model, and available for downstream processing. Index Terms—Sensor networks, middleware, fabric, modeldriven development...|$|E
40|$|Abstract HELIO [8] is {{a project}} funded under the FP 7 program for the {{discovery}} and analysis of data for heliophysics. During its development, standards and common frameworks were adopted in three main areas <b>of</b> <b>the</b> project: query <b>services,</b> processing <b>services,</b> and <b>the</b> security infrastructure. After a first, proprietary implementation <b>of</b> <b>the</b> security <b>service,</b> it was sug-gested moving it to a standard security framework to simplify <b>the</b> enforcement <b>of</b> security on <b>the</b> different sites. As the HELIO front end is built with Spring and the TAVERNA server (HELIO workflow engine) has a security framework compatible with Spring, it has been decided to move the CIS in Spring secu-rity [2]. HELIO has two different processing services: one is a generic processing service called HELIO Processing <b>Services</b> (HPS), <b>the</b> other is called Context Service (CTX) and it runs specific IDL procedures. The CTX implements the UWS [4] interface from the IVOA [5], a standard interface for job submission used in the helio and astro-physics community. In its final release, the HPS will expose an UWS compliant interface. Finally, some <b>of</b> <b>the</b> HELIO <b>services</b> perform queries, to simplify the implemen-tation and usage of this services a single query interface (the HELIO Query Interface) has been designed for all these <b>services.</b> <b>The</b> use <b>of</b> these solutions for security, execution, and query allows for easier implementation <b>of</b> <b>the</b> original HELIO architecture and for a simpler <b>deployment</b> <b>of</b> <b>the</b> <b>services...</b>|$|R
40|$|Shared Governance is <b>the</b> {{administration}} and <b>deployment</b> <b>of</b> <b>the</b> organization's <b>services</b> through a partnership model of managers and staff. A system {{is said to}} "live" where it provides service. In a health care organization this is <b>the</b> point <b>of</b> <b>service</b> known as <b>the</b> patient care unit. In that arena staff nurses engaged in a partnership model of governance should be acknowledged as <b>the</b> rightful owner <b>of</b> their clinical practice and the systems that support <b>the</b> delivery <b>of</b> patient care. This manuscript describes an acute care hospital's experience in <b>the</b> evolution <b>of</b> its governance structure that enabled staff nurses to assume greater levels of autonomy and control over their practice...|$|R
40|$|Tyt. z nagłówka. Bibliogr. s. 101 - 102. HELIO [8] is {{a project}} funded under the FP 7 program for the {{discovery}} and analysis of data for heliophysics. During its development, standards and common frameworks were adopted in three main areas <b>of</b> <b>the</b> project: query <b>services,</b> processing <b>services,</b> and <b>the</b> security infrastructure. After a first, proprietary implementation <b>of</b> <b>the</b> security <b>service,</b> it was suggested moving it to a standard security framework to simplify <b>the</b> enforcement <b>of</b> security on <b>the</b> different sites. As the HELIO front end is built with Spring and the TAVERNA server (HELIO workflow engine) has a security framework compatible with Spring, it has been decided to move the CIS in Spring security [2]. HELIO has two different processing services: one is a generic processing service called HELIO Processing <b>Services</b> (HPS), <b>the</b> other is called Context Service (CTX) and it runs specific IDL procedures. The CTX implements the UWS [4] interface from the IVOA [5], a standard interface for job submission used in the helio and astrophysics community. In its final release, the HPS will expose an UWS compliant interface. Finally, some <b>of</b> <b>the</b> HELIO <b>services</b> perform queries, to simplify the implementation and usage of this services a single query interface (the HELIO Query Interface) has been designed for all these <b>services.</b> <b>The</b> use <b>of</b> these solutions for security, execution, and query allows for easier implementation <b>of</b> <b>the</b> original HELIO architecture and for a simpler <b>deployment</b> <b>of</b> <b>the</b> <b>services.</b> Dostępny również w formie drukowanej. KEYWORDS: grid, HELIO physics, standards...|$|R
40|$|The {{proceeding}} at: European Conference on Networks and Communications (EuCNC 2015), {{took place}} in June 29 /July 2, 2015, in Paris, France. In a multicast video streaming service the same multimedia content is sent to a mass audience using only one multicast stream. In multicast video streaming over a cellular network, {{due to the nature}} of the multicast communication, from a source to multiple recipients, and due to the characteristics of the radio channel, different for each receiver, transmission errors are addressed at the application level by using Forward Error Correction (FEC) techniques. However, in order to protect the communication over the radio channel, FEC techniques are also applied at the physical layer. Another important technique to improve the communication of the radio channel is the use of a single-frequency network. This paper analyzes the performance of a video streaming service over a cellular network taking into account the combined impact of different factors that affect the transmission, both the physical <b>deployment</b> <b>of</b> <b>the</b> <b>service</b> and the two levels of FEC. This work was supported in part by the Spanish Ministry of Economy and Competitiveness, National Plan for Scientific Research, Development and Technological Innovation (IN-NPACTO subprogram), LTExtreme project (IPT- 2012 - 0525 - 430000). Publicad...|$|E
40|$|HELIO [8] is {{a project}} funded under the FP 7 program for the {{discovery}} and analysis of data for heliophysics. During its development, standards and common frameworks were adopted in three main areas of the project: query services, processing services, and the security infrastructure. After a first, proprietary implementation of the security service, it was suggested moving it to a standard security framework to simplify the enforcement of security on the different sites. As the HELIO front end is built with Spring and the TAVERNA server (HELIO workflow engine) has a security framework compatible with Spring, it has been decided to move the CIS in Spring security [2]. HELIO has two different processing services: one is a generic processing service called HELIO Processing Services (HPS), the other is called Context Service (CTX) and it runs specific IDL procedures. The CTX implements the UWS [4] interface from the IVOA [5], a standard interface for job submission used in the helio and astro-physics community. In its final release, the HPS will expose an UWS compliant interface. Finally, some of the HELIO services perform queries, to simplify the implementation and usage of this services a single query interface (the HELIO Query Interface) has been designed for all these services. The use of these solutions for security, execution, and query allows for easier implementation of the original HELIO architecture and for a simpler <b>deployment</b> <b>of</b> <b>the</b> <b>service...</b>|$|E
40|$|Abstract—Server {{replication}} {{improves the}} ability of a service to handle a large number of clients. One of the important fac-tors in the efficient utilization of replicated servers is the ability to direct client requests to the “best ” server, according to some optimality criteria. In the anycasting communication paradigm, a sender communicates with a receiver chosen from an anycast group of equivalent receivers. As such, anycasting is well suited to the problem of directing clients to replicated servers. This paper examines the definition and support of the anycasting paradigm at the application layer, providing a service that uses an anycast resolver to map an anycast domain name and a selection criteria into an IP address. By realizing anycasting in the appli-cation layer, we achieve flexibility in the optimization criteria and ease the <b>deployment</b> <b>of</b> <b>the</b> <b>service.</b> As a case study, we examine the performance of our system for a key service: replicated web servers. To this end, we develop an approach for estimating the response time that a client will experi-ence when accessing given servers. Such information is maintained in the anycast resolver that clients query to obtain the identity of the server with the best estimated response time. Our performance collection technique combines server push with resolver probes to estimate the expected response time without undue overhead. Our experiments show that selecting a server using our architecture and estimation technique can improve the client response time by a factor of two over nearest server selection and by a factor of four over random server selection. Index Terms—Anycasting, replication, server selection. I...|$|E
50|$|In 2003, because <b>of</b> <b>the</b> <b>deployment</b> <b>of</b> <b>the</b> 2nd Force <b>Service</b> Support Group to {{southwest}} Asia for Operation Iraqi Freedom, {{a unique}} allocation of forces proved necessary to staff MSSG-22 for its 2004 deployment with the 22nd MEU. For that deployment, {{and for the}} first time in history, a Marine Wing Support Squadron (MWSS) from MCAS Cherry Point was redesignated as an MSSG and deployed with the 22nd MEU.|$|R
30|$|A {{comparison}} is performed between the economic cost provided by <b>the</b> stand-alone <b>deployment</b> <b>of</b> <b>the</b> passenger Wi-Fi <b>service</b> and <b>the</b> joint deployment with <b>the</b> other <b>services.</b> In addition, <b>the</b> cost per <b>service</b> and per actor is discussed for both cases. In the base case, a service operator deploys a free Wi-Fi service for {{passengers on the}} train. In <b>the</b> shared <b>services</b> case, different service operators deploy free Wi-Fi, video-on-demand and crew communication.|$|R
40|$|We {{report on}} an {{industrial}} project {{in which we}} developed an inventory model to provide decision support for <b>the</b> design and <b>deployment</b> <b>of</b> <b>the</b> field <b>service</b> support system for a remanufacturable product. The product was a dialysis unit for home use. Each unit that was installed in a home would eventually be removed due to failure, or the need for preventative maintenance, or <b>the</b> termination <b>of</b> <b>the</b> <b>service.</b> Upon removal, each unit was shipped to a central depot for re-manufacturing {{so that it could}} be returned to service. We develop a model to determine the inventory requirements at each regional depot, and then describe how to use the model to determine the inventory requirements in the two-echelon system consisting <b>of</b> <b>the</b> central facility and the regional depots. Singapore-MIT Alliance (SMA...|$|R
