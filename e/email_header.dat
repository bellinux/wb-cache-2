42|58|Public
5000|$|<b>Email</b> <b>header</b> address re-writing {{in order}} to {{preserve}} multiple domains.|$|E
5000|$|RFC 2047 {{provides}} {{support for}} encoding non-ASCII {{values such as}} real names and subject lines in <b>email</b> <b>header</b> ...|$|E
5000|$|Fraud {{prevention}} identifies suspicious payment transactions live by {{correlations between}} IP address and additional information (billing records, <b>email</b> <b>header).</b>|$|E
5000|$|Parse <b>email</b> <b>headers</b> [...] - [...] read <b>email</b> <b>headers</b> {{and make}} a guess {{about the origin of}} the email ...|$|R
5000|$|RFC 6532, with Abel Yang and Shawn Steele, Internationalized <b>Email</b> <b>Headers,</b> ...|$|R
40|$|The {{majority}} of documented phishing attacks {{have been carried}} by email, yet few studies have measured the impact of <b>email</b> <b>headers</b> on the predictive accuracy of machine learning techniques in detecting email phishing attacks. Research {{has shown that the}} inclusion of a limited subset of <b>email</b> <b>headers</b> as features in training machine learning algorithms to detect phishing attack did increase the predictive accuracy of these learning algorithms. The same research also recommended further investigation of the impact of including an expanded set of <b>email</b> <b>headers</b> on the predictive accuracy of machine learning algorithms. In addition, research has shown that the cost of misclassifying legitimate emails as phishing attacks [...] false positives [...] was far higher than that of misclassifying phishing emails as legitimate [...] false negatives, while the opposite was true in the case of fraud detection. Consequently, they recommended that cost sensitive measures be taken in order to further improve the weighted predictive accuracy of machine learning algorithms. Motivated by the potentially high impact of the inclusion of <b>email</b> <b>headers</b> on the predictive accuracy of machines learning algorithms and the significance of enabling cost-sensitive measures as part of the learning process, the goal of this research was to quantify the impact of including an extended set of <b>email</b> <b>headers</b> and to investigate the impact of imposing penalty as part of the learning process on the number of false positives. It was believed that if <b>email</b> <b>headers</b> were included and cost-sensitive measures were taken as part of the learning process, than the overall weighted, predictive accuracy of the machine learning algorithm would be improved. The results showed that adding <b>email</b> <b>headers</b> as features did improve the overall predictive accuracy of machine learning algorithms and that cost-sensitive measure taken as part of the learning process did result in lower false positives...|$|R
5000|$|... {{time of the}} {{transmission}} or reception of an <b>email,</b> <b>header</b> information according to the SMTP-protocol and the IP adresses of the sending and receiving email application.|$|E
50|$|The {{application}} basically captured all internet {{activity and}} only made token {{efforts to prevent}} the collection of passwords. Although the agreement {{said they did not}} examine the text of IMs or email messages, they did collect <b>email</b> <b>header</b> information.|$|E
50|$|In 1999 Hotmail {{included}} an X-Originating-IP <b>email</b> <b>header</b> field {{that shows the}} IP address of the sender. As of December 2012, Hotmail removed this header field, replacing it with X-EIP (meaning encoded IP) with the stated goal of protecting users' privacy.|$|E
50|$|Disposition-Notification-To <b>email</b> <b>headers</b> {{may be seen}} {{as another}} form of web beacons. See RFC 4021.|$|R
50|$|Hostnames are {{typically}} {{used in an}} administrative capacity and may appear in computer browser lists, active directory lists, IP address to hostname resolutions, <b>email</b> <b>headers,</b> etc.|$|R
50|$|In spam {{detection}} algorithms, features {{may include}} {{the presence or}} absence of certain <b>email</b> <b>headers,</b> the <b>email</b> structure, the language, the frequency of specific terms, the grammatical correctness of the text.|$|R
5000|$|Count 2 and 3: Violating {{two of the}} CAN SPAM Act’s provisions, 18 U.S.C. § 1037(a)(3) and 18 U.S.C. § 1037(a)(4), for falsifying <b>email</b> <b>header</b> {{information}} {{including the}} [...] "from" [...] field and registering domain names using false information, respectively ...|$|E
50|$|However, {{there are}} many similar <b>email</b> <b>header</b> fields that all contain sending party information; {{therefore}} Sender ID defines in RFC 4407 a Purported Responsible Address (PRA) {{as well as a}} set of heuristic rules to establish this address from the many typical headers in an email.|$|E
50|$|Used by many email clients {{including}} Novell GroupWise, Microsoft Outlook Express, Lotus notes, Windows Mail, Mozilla Thunderbird, and Postbox. The files {{contain the}} email contents as plain text in MIME format, containing the <b>email</b> <b>header</b> and body, including attachments {{in one or}} more of several formats.|$|E
50|$|Modern email clients use unique {{identifiers}} in <b>email</b> <b>headers</b> {{to locate the}} parent and root message in the hierarchy. When non-compliant clients participate in discussions, they can confuse message threading as it depends on all clients respecting these optional mail standards when composing replies to messages.|$|R
30|$|Parses email MIME {{message and}} {{extracts}} <b>email</b> <b>headers</b> and <b>email</b> body. Email body is further separated into HTML body part and text body part. For emails containing only text MIME part, the parser extracts text and hyperlinks. In a phishing email, these hyperlinks {{link to the}} phishing website.|$|R
50|$|Some {{of these}} scripts {{are used to}} forward email lists to the {{newsgroup}} alt.activism.underground. By doing this, activists can read important action alerts and other information without being included on the servers email lists that run the lists. <b>Email</b> <b>headers</b> are removed from these posts, as well as email addresses themselves are altered to help avoid spam.|$|R
5000|$|Although email {{spoofing}} {{is effective}} in forging the email address, the IP address of the computer sending the mail can generally be identified from the [...] "Received:" [...] lines in the <b>email</b> <b>header.</b> In many cases {{this is likely to}} be an innocent third party infected by malware that is sending the email without the owner's knowledge.|$|E
5000|$|Challenge: The server sends a base64-encoded {{string to}} the client. Before encoding, {{it could be}} any random string, but the {{standard}} that currently defines CRAM-MD5 says that it is in the format of a '''' <b>email</b> <b>header</b> value (including angle brackets) and includes an arbitrary string of random digits, a timestamp, and the server's fully qualified domain name.|$|E
50|$|International email (IDN email or Intl email) is email that {{contains}} international characters (characters {{which do not}} exist in the ASCII character set), encoded as UTF-8, in the <b>email</b> <b>header</b> and in supporting mail transfer protocols. The most significant aspect of this is the allowance of email addresses (also known as email identities) in most of the world's writing systems, at both interface and transport levels.|$|E
50|$|At {{its most}} basic level, TEOS proposes a {{framework}} of trusted identity for email senders based on secure, fast, lightweight signatures in <b>email</b> <b>headers,</b> optimized with DNS-based systems for flexibility and ease of implementation. TEOS also provides a common-language framework for making trusted assertions {{about the content of}} each individual message. ISPs and email recipients can rely on these assertions to manage their email.|$|R
30|$|All the {{messages}} were parsed using a MIME parser to separate <b>email</b> <b>headers</b> from <b>email</b> body. Multipart messages containing HTML parts were further parsed using a HTML parser {{to extract the}} body text and hyperlinks. Both MIME and HTML parsers were written in this study using Java programming language. For evaluation, only messages that contain body text and hyperlinks were considered. Thus, messages that failed parser and attachments were not included for building models.|$|R
50|$|Asis Internet Services v. Subscriberbase: The United States District Court for the Northern District of California {{held that}} the CAN-SPAM Act did not {{pre-empt}} Californias anti-spam statute, California Business & Professions Code § 17529.5, where the plaintiff based its claims on deceptive <b>email</b> <b>headers.</b> The court did not require the plaintiff to plead {{all the elements of}} common law fraud - specifically, reliance and damages - to escape preemption, although the court noted that district courts in California had previously been split on the issue.|$|R
50|$|The set of Internet RFC {{documents}} RFC 6530, RFC 6531, RFC 6532, and RFC 6533, {{all of them}} {{published in}} February 2012, define mechanisms and protocol extensions needed to fully support internationalized email addresses. These changes include an SMTP extension and extension of <b>email</b> <b>header</b> syntax to accommodate UTF-8 data. The document set also includes discussion of key assumptions and issues in deploying fully internationalized email.|$|E
50|$|The X-Originating-IP (not to be {{confused}} with X-Forwarded-For) <b>email</b> <b>header</b> field is a de facto standard for identifying the originating IP address of a client connecting to a mail service's HTTP frontend. When clients connect directly to a mail server, its address is already known to the server, but web frontends act as a proxy which internally connect to the mail server. This header can therefore serve to identify the original sender address despite the frontend.|$|E
50|$|The {{story begins}} {{following}} {{the first day}} of Dixie Mae Leigh's job as a customer support employee at a fictional company called Lotsatech. She receives an insulting and mysterious email and, in a fit of rage, decides to find out who sent it. She and a fellow employee Victor search the Lotsatech campus looking for the author of the email, following clues in the <b>email</b> <b>header.</b> They meet up with Ellen, a grad student in computer science, who decides to try to help Dixie Mae.|$|E
50|$|If SpamAssassin {{considers}} {{a message to}} be spam, it can be further rewritten. In the default configuration, {{the content of the}} mail is appended as a MIME attachment, with a brief excerpt in the message body, and a description of the tests which resulted in the mail being classified as spam. If the score is lower than the defined settings, by default the information about the tests passed and total score is still added to the <b>email</b> <b>headers</b> and can be used in post-processing for less severe actions, such as tagging the mail as suspicious.|$|R
50|$|The {{internet}} {{can be a}} {{rich source}} of digital evidence including web browsing, email, newsgroup, synchronous chat and peer-to-peer traffic. For example, web server logs can be used to show when (or if) a suspect accessed information related to criminal activity. Email accounts can often contain useful evidence; but <b>email</b> <b>headers</b> are easily faked and, so, network forensics may be used to prove the exact origin of incriminating material. Network forensics can also be used in order to find out who is using a particular computer by extracting user account information from the network traffic.|$|R
5000|$|Joe jobs often {{intend to}} {{capitalize}} on general hatred for spam. They usually forge [...] "from" [...] addresses and <b>email</b> <b>headers</b> so that angry replies are directed to the victim. Some joe job attacks adopt deliberately inflammatory viewpoints, intending to deceive the recipient into believing they were sent by the victim. Joe job victims may lose website hosting or network connectivity due to complaints to their Internet service providers, and even face increased bandwidth costs (or server overload) due to increased website traffic. The victim may also find his or her email blacklisted by spam filters.|$|R
50|$|<b>Email</b> <b>header</b> fields can be multi-line, {{and each}} line {{should be at}} most 78 {{characters}} long and in no event more than 998 characters long. Header fields defined by RFC 5322 can only contain US-ASCII characters; for encoding characters in other sets, a syntax specified in RFC 2047 can be used. Recently the IETF EAI working group has defined some standards track extensions, replacing previous experimental extensions, to allow UTF-8 encoded Unicode characters to be used within the header. In particular, this allows email addresses to use non-ASCII characters. Such addresses are supported by Google and Microsoft products, and promoted by some governments.|$|E
5000|$|To use Unicode {{in certain}} <b>email</b> <b>header</b> fields, e.g. subject lines, sender and {{recipient}} names, the Unicode text {{has to be}} encoded using a MIME [...] "Encoded-Word" [...] with a Unicode encoding as the charset. To use Unicode in domain part of email addresses, IDNA encoding must traditionally be used. Alternatively, SMTPUTF8 allows the use of UTF-8 encoding in email addresses (both in a local part and in domain name) {{as well as in}} a mail header section. Various standards had been created to retrofit the handling of non-ASCII data to the originally ASCII-only email protocol: ...|$|E
5000|$|Since {{traditional}} email standards constrain all <b>email</b> <b>header</b> {{values to}} ASCII only characters, {{it is possible}} that the presence of UTF-8 characters in email headers would decrease the stability and reliability of transporting such email. This is because some email servers do not support these characters. This is becoming less and less the case as of 2014, and IDN (internationalized domain name) with the UTF-8 characters is taking over. There was a proposed method by members of the IETF, by which email can be downgraded into the [...] "legacy" [...] all ASCII format which all standard email servers should support. This proposal has been obsoleted in 2012 by RFC 6530.|$|E
5000|$|MIME defines two {{different}} mechanisms for encoding non-ASCII characters in email, {{depending on whether}} the characters are in <b>email</b> <b>headers</b> (such as the [...] "Subject:"), or in the text body of the message; in both cases, the original character set is identified as well as a transfer encoding. For email transmission of Unicode, the UTF-8 character set and the Base64 or the Quoted-printable transfer encoding are recommended, depending on whether much of the message consists of ASCII characters. The details of the {{two different}} mechanisms are specified in the MIME standards and generally are hidden from users of email software.|$|R
2500|$|RFC 3339 {{deviates}} from ISO 8601 {{in allowing}} a zero timezone offset {{to be specified}} as [...] "-00:00", which ISO 8601 forbids. [...] RFC 3339 intends [...] "-00:00" [...] to carry the connotation {{that it is not}} stating a preferred timezone, whereas the conforming [...] "+00:00" [...] or any non-zero offset connotes that the offset being used is preferred. [...] This convention regarding [...] "-00:00" [...] is derived from earlier RFCs, such as RFC 2822 which uses it for timestamps in <b>email</b> <b>headers.</b> [...] RFC 2822 made no claim that any part of its timestamp format conforms to ISO 8601, and so was free to use this convention without conflict.|$|R
40|$|Access to {{historically}} significant email archives {{poses challenges}} that arise less often in personal collections. Most notably, searchers may need help {{making sense of}} the identities, roles, and relationships of individuals that participated in archived email exchanges. This paper describes an exploratory study of identity resolution in the public subset of the Enron collection. Addressname and address-address associations in explicit, embedded and implied <b>email</b> <b>headers</b> are augmented with name and nickname associations discovered from consistent use in salutations and signatures. Limited transitive closure heuristics are employed to extend pair-wise associations to richer representations of identity. Assessment of sampled results indicates that many potentially useful nontrivial associations can be detected. 1...|$|R
