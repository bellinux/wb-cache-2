3086|55|Public
5|$|The {{process of}} <b>garbage</b> <b>collection</b> {{involves}} reading and rewriting {{data to the}} flash memory. This means that a new write from the host will first require a read of the whole block, a write of {{the parts of the}} block which still include valid data, and then a write of the new data. This can significantly reduce the performance of the system. Some SSD controllers implement background <b>garbage</b> <b>collection</b> (BGC), sometimes called idle <b>garbage</b> <b>collection</b> or idle-time <b>garbage</b> <b>collection</b> (ITGC), where the controller uses idle time to consolidate blocks of flash memory before the host needs to write new data. This enables the performance of the device to remain high.|$|E
5|$|Data {{is written}} to the flash memory in units called pages (made up of {{multiple}} cells). However, the memory can be erased only in larger units called blocks (made up of multiple pages). If the data {{in some of the}} pages of the block are no longer needed (also called stale pages), only the pages with good data in that block are read and rewritten into another previously erased empty block. Then the free pages left by not moving the stale data are available for new data. This is a process called <b>garbage</b> <b>collection</b> (GC). All SSDs include some level of <b>garbage</b> <b>collection,</b> but they may differ in when and how fast they perform the process. <b>Garbage</b> <b>collection</b> {{is a big part of}} write amplification on the SSD.|$|E
5|$|Managed memory {{cannot be}} {{explicitly}} freed; instead, it is automatically garbage collected. <b>Garbage</b> <b>collection</b> addresses {{the problem of}} memory leaks by freeing the programmer of responsibility for releasing memory {{that is no longer}} needed.|$|E
5000|$|Objects that persist {{longer are}} {{moved to the}} old {{generation}} (also called the tenured generation). This memory is subdivided into (two) Survivors spaces where the objects that survived the first and next <b>garbage</b> <b>collections</b> are stored.|$|R
50|$|Also in 2016, the City of Milpitas {{decided against}} using Newby Island Landfill for solid waste {{disposal}}. Milpitas also {{decided not to}} select Republic Services (the owner of the Newby island facility) to do <b>garbage</b> <b>collections.</b> Republic objected and forced the City of Milpitas to put the disposal contract onto the Nov 2016 ballot as Measure L. However, Mipitas voters overwhelmingly supported sending the city's garbage to a different landfill owned by Waste Management which uses either the Guadalupe Landfill or Kirby Canyon Landfill. Garden City Sanitation {{was selected as the}} new waste collector which will utilize Sunnyvale's Smart Station for processing of garbage. This ended Republic's long contract with the City of Milpitas for both <b>garbage</b> <b>collections</b> and disposal.|$|R
40|$|Title {{devised by}} cataloguer.; Published in the Canberra Times on 12 November 1986.; Part of the Pryor {{collection}} of cartoons and drawings. Garbage backs up as striking Transport Workers' Union members defy {{an order from}} the Abitration Commission to resume <b>garbage</b> <b>collections</b> in the ACT. [...] Information provided by Geoff Pryor...|$|R
5|$|The language, and {{implementations}} thereof, {{should provide}} support for software engineering principles such as strong type checking, array bounds checking, detection of attempts to use uninitialized variables, and automatic <b>garbage</b> <b>collection.</b> Software robustness, durability, and programmer productivity are important.|$|E
5|$|TRIM is a SATA {{command that}} enables the {{operating}} system to tell an SSD which blocks of previously saved data are no longer needed {{as a result of}} file deletions or volume formatting. When an LBA is replaced by the OS, as with an overwrite of a file, the SSD knows that the original LBA can be marked as stale or invalid and it will not save those blocks during <b>garbage</b> <b>collection.</b> If the user or operating system erases a file (not just remove parts of it), the file will typically be marked for deletion, but the actual contents on the disk are never actually erased. Because of this, the SSD does not know that it can erase the LBAs previously occupied by the file, so the SSD will keep including such LBAs in the <b>garbage</b> <b>collection.</b>|$|E
5|$|The {{city has}} several {{departments}} {{providing services to}} its residents, including a police department, municipal courts, <b>garbage</b> <b>collection,</b> planning and zoning, parks and recreational programs, engineering, street maintenance, water and wastewater services, and stormwater treatment. Marysville contracts with regional districts for other services, including a public library, public transport, electricity, natural gas, and fire protection.|$|E
50|$|Starting on {{the evening}} of 25 May, unrest broke out in Brandkärr in Nyköping with arson attacks and stone-throwing against police. The unrest {{continued}} for several nights, with up to twenty-five youths throwing stones against police cars and breaking 26 windows of a local school, and arson attacks against <b>garbage</b> <b>collections.</b>|$|R
40|$|We {{introduce}} a new family of connectivity-based garbage collectors (Cbgc) {{that are based on}} potential objectconnectivity properties. The key feature of these collectors is that the placement of objects into partitions is determined by performing one of several forms of connectivity analyses on the program. This enables partial <b>garbage</b> <b>collections,</b> as in generational collectors, but without the need for any write barrier...|$|R
40|$|In a parallel, shared-memory, {{language}} with a garbage collected heap, {{it is desirable}} for each processor to perform minor <b>garbage</b> <b>collections</b> independently. Although obvious, {{it is difficult to}} make this idea pay off in practice, especially in languages where mutation is common. We present several techniques that substantially improve the state of the art. We describe these techniques {{in the context of a}} full-scale implementation of Haskell, and demonstrate that our local-heap collector substantially improves scaling, peak performance, and robustness...|$|R
5|$|These {{problems}} were diminished but not eliminated under the mayoral administration of Marc Ravalomanana, who prioritized sanitation, security and public administration. He obtained funds from international donors to establish <b>garbage</b> <b>collection</b> and disposal systems, restore dilapidated infrastructure such as roads and marketplaces, and replanted public gardens. To improve sanitation in the city, he constructed public latrines in densely populated and highly frequented areas.|$|E
5|$|If the {{controller}} were to background garbage collect {{all of the}} spare blocks before it was absolutely necessary, new data written from the host could be written without having to move any data in advance, letting the performance operate at its peak speed. The trade-off {{is that some of}} those blocks of data are actually not needed by the host and will eventually be deleted, but the OS did not tell {{the controller}} this information. The result is that the soon-to-be-deleted data is rewritten to another location in the flash memory, increasing the write amplification. In some of the SSDs from OCZ the background <b>garbage</b> <b>collection</b> clears up {{only a small number of}} blocks then stops, thereby limiting the amount of excessive writes. Another solution is to have an efficient <b>garbage</b> <b>collection</b> system which can perform the necessary moves in parallel with the host writes. This solution is more effective in high write environments where the SSD is rarely idle. The SandForce SSD controllers and the systems from Violin Memory have this capability.|$|E
5|$|Municipalities in New Brunswick may {{incorporate}} {{under the}} Municipalities Act of 1973 as a city, town, village, regional municipality, or rural community. Municipal governments {{are led by}} elected councils and {{are responsible for the}} delivery of services such as civic administration, land use planning, emergency measures, policing, road, and <b>garbage</b> <b>collection.</b> New Brunswick has 8 cities, 26 towns, 65 villages, 1 regional municipality, and 7 rural communities. Although rural communities are under the Municipalities Act, the provincial government distinguishes them from municipalities.|$|E
5000|$|Waste {{containers}} or litter bins is a receptacle {{for public}} <b>garbage</b> disposal. <b>Collection</b> and separation of recyclable materials {{is becoming more}} common in urban centers.|$|R
5000|$|... #Subtitle level 3: <b>Garbage</b> {{and refuse}} <b>collection</b> and {{disposal}} ...|$|R
40|$|Abstract—The {{performance}} and scalability issues of multithreaded Java programs on multicore systems are studied in this paper. First, {{we examine the}} performance scaling of benchmarks with various numbers of processor cores and application threads. Second, by correlating low-level hardware performance data to JVM threads and system components, the detail analyses of {{performance and}} scalability are presented, such as the hardware stall events and memory system latencies. Third, the usages of memory resource are detailed to observe the potential bottlenecks. Finally, the JVM tuning techniques are proposed to alleviate the bottlenecks, and improve the performance and scalability. Several key findings are revealed through this study. First, the lock contentions usually lead to a strong limitation of scalability. Second, in terms of memory access latencies, the most of memory stalls are produced by L 2 cache misses and cache-to-cache transfers. Finally, the overhead of minor <b>garbage</b> <b>collections</b> could {{be an important factor}} of throughput reductions. Based on these findings, the appropriate Java Virtual Machine (JVM) tuning techniques are examined in this study. We observe that the use of a parallel garbage collector and an appropriate ratio of young to old generation can alleviate the overhead of minor collection and improve the efficiency of <b>garbage</b> <b>collections.</b> Moreover, the cache utilizations could be enhanced with the use of thread-local allocation buffer, and then leads to the performance improvements significantly...|$|R
5|$|Over-provisioning (sometimes spelled as OP, over provisioning, or overprovisioning) is the {{difference}} between the physical capacity of the flash memory and the logical capacity presented through the operating system (OS) as available for the user. During the <b>garbage</b> <b>collection,</b> wear-leveling, and bad block mapping operations on the SSD, the additional space from over-provisioning helps lower the write amplification when the controller writes to the flash memory.|$|E
5|$|The Park Grill {{contract}} was signed February 11, 2003. The contract requires that Park Grill {{to pay a}} percent of net sales and an additional fee of $275,000 per year, but the latter was not due until the Park Grill recouped half its build-out costs. As part of its deal, the Park District pays for water, gas, and <b>garbage</b> <b>collection</b> at Park Grill. The garbage pickup costs taxpayers about $245,000 annually.|$|E
5|$|Deir al-Balah's first village {{council was}} {{established}} in 1946 and an elected local government continued to administer the city until 1982 when the Israeli military authorities dissolved the council and appointed a mayor. In 1994 Deir al-Balah gained {{the status of a}} city by the Palestinian Authority (PNA). The Palestinian president, Yasser Arafat, appointed Samir Mohammed Azayiza as mayor until 2000 when he replaced him with Sami Abu Salim, a wealthy businessman from the city. The services and functions of the municipality include city planning, infrastructure maintenance and repair, providing utilities, school administration and <b>garbage</b> <b>collection.</b>|$|E
40|$|NAND {{flash memory}} {{has been widely}} used to build {{embedded}} devices such as smartphones and solid state drives (SSD) because of its high performance, low power consumption, great shock resistance and small form factor. However, its lifetime and performance are greatly constrained by partial page updates, which will lead to early depletion of free pages and frequent <b>garbage</b> <b>collections.</b> On the one hand, partial page updates are prevalent as {{a large portion of}} I/O does not modify file contents drastically. On the other hand, general-purpose cache usually does not specifically consider and eliminate duplicated contents, despite its popularity. Department of ComputingRefereed conference pape...|$|R
5000|$|Partial-unit pricing: {{the local}} {{authority}} or municipality decides on a {{maximum number of}} bags or containers of <b>garbage,</b> with <b>collection</b> paid for by taxes. Additional bags or containers are available for purchase should the user exceed the permitted amount ...|$|R
40|$|The {{algorithm}} {{is based on}} a reference listing scheme augmented by partial tracing in order to collect distributed garbage cycles. Our collector is designed to be flexible thereby allowing efficiency, expediency and fault-tolerance to be traded against completeness. Processes may be dynamically organised into groups, according to appropriate heuristics, in order to reclaim distributed garbage cycles. Unlike previous group-based algorithms, multiple concurrent distributed <b>garbage</b> <b>collections</b> that span groups are supported: when two collections meet they may either merge, overlap or retreat. The algorithm places no overhead on local collectors and suspends local mutators only briefly. Partial tracing of the distributed graph involves only objects thought {{to be part of a}} garbage cycle: no collaboration with other processes is required...|$|R
5|$|The SSD {{controller}} {{will use}} any free blocks on the SSD for <b>garbage</b> <b>collection</b> and wear leveling. The {{portion of the}} user capacity which is free from user data (either already TRIMed or never written in the first place) will look the same as over-provisioning space (until the user saves new data to the SSD). If the user saves data consuming {{only half of the}} total user capacity of the drive, {{the other half of the}} user capacity will look like additional over-provisioning (as long as the TRIM command is supported in the system).|$|E
5|$|The actual {{benefit of}} the TRIM command depends upon the free user space on the SSD. If the user {{capacity}} on the SSD was 100GB and the user actually saved 95GB of data to the drive, any TRIM operation would not add more than 5GB of free space for <b>garbage</b> <b>collection</b> and wear leveling. In those situations, {{increasing the amount of}} over-provisioning by 5GB would allow the SSD to have more consistent performance because it would always have the additional 5GB of additional free space without having to wait for the TRIM command to come from the OS.|$|E
5|$|When an SSD {{is writing}} {{large amounts of}} data sequentially, the write {{amplification}} is equal to one meaning there is no write amplification. The reason is as the data is written, the entire block is filled sequentially with data related to the same file. If the OS determines that file is to be replaced or deleted, the entire block can be marked as invalid, {{and there is no}} need to read parts of it to garbage collect and rewrite into another block. It will need only to be erased, which is much easier and faster than the read-erase-modify-write process needed for randomly written data going through <b>garbage</b> <b>collection.</b>|$|E
40|$|The Memory Pool System (MPS) {{is a very}} general, adaptable, ex-ible, reliable, and efcient memory {{management}} system. It permits the exible combination of {{memory management}} techniques, sup-porting manual and automatic memory management, in-line alloca-tion, nalization, weakness, and multiple concurrent co-operating incremental generational <b>garbage</b> <b>collections.</b> It also includes a li-brary of memory pool classes implementing specialized memory management policies. The MPS represents about thirty person-years of development effort. It contains many innovative techniques and abstractions which have hitherto been kept secret. We are happy to announce that Ravenbrook Limited is publishing the source code and doc-umentation under an open source licence. This paper gives {{an overview of the}} system. Categories and Subject Descriptor...|$|R
40|$|A stop-and-copy garbage {{collector}} updates one-bit reference counting with essentially no extra space and minimal memory cycles beyond the conventional collection algorithm. Any object that is uniquely referenced during a collection becomes {{a candidate for}} cheap recovery before the next one, or faster recopying then if it remains uniquely referenced. Since most objects stay uniquely referenced, subsequent collections run faster even if none are recycled between <b>garbage</b> <b>collections.</b> This algorithm extends to generation scavenging, it admits uncounted references from roots, and it corrects conservatively stuck counters, that result from earlier uncertainty whether references were unique. CR categories and Subject Descriptors: D. 4. 2 [Storage Management]: Allocation/Deallocation strategies; E. 2 [Data Storage Representations]: Linked representations. General Term: Algorithms. Additional Key Words and Phrases: multiple reference bit, MRB. Research reported herein was sponsored, in part [...] ...|$|R
40|$|Storage {{management}} overhead {{accounts for}} a considerable proportion of execution time in straightforward implementations of languages with dynamic storage allocation. Our approach to reducing this overhead is to shift {{some of the work}} to compile time. With static reference count analysis, we determine when an object becomes inaccessible, and insert explicit deallocation code into the program at those points. This will reduce the frequency and number of <b>garbage</b> <b>collections</b> at run time. We discuss previous approaches to storage analysis and show that reference count analysis can allow more precise modeling of storage accessibility than other approaches. The analysis is extended to the interprocedural case. It is formulated as a set of path problems on a specially designed summary graph. The effectiveness of our implemented optimization on a variety of programs is presented...|$|R
5|$|Early <b>garbage</b> <b>collection</b> in Scarborough was {{performed}} by individual communities and dumped in local landfills which were located in nearby ravines. In 1967 waste collection was reorganized. Local landfills were closed {{and most of the}} garbage was directed to a new landfill on Beare Road in eastern Scarborough. This dump was eventually closed in 1981. A waste transfer site was constructed near Markham Road and Sheppard Avenue East. From there garbage was trucked to the Keele Valley dump in Vaughan and the Brock Road dump in Pickering. In 2002 the Keele Valley landfill was closed. As part of Toronto's overall waste management, garbage was then trucked to Michigan. This arrangement lasted until 2010 when garbage was sent to the new Green Lane landfill site in Elgin County.|$|E
5|$|The {{introduction}} of the TRIM command resolves this problem for operating systems that support it like Windows 7, Mac OS (latest releases of Snow Leopard, Lion, and Mountain Lion, patched in some cases), FreeBSD since version 8.1, and Linux since version 2.6.33 of the Linux kernel mainline. When a file is permanently deleted or the drive is formatted, the OS sends the TRIM command along with the LBAs that no longer contain valid data. This informs the SSD that the LBAs in use can be erased and reused. This reduces the LBAs needing to be moved during <b>garbage</b> <b>collection.</b> The result is the SSD will have more free space enabling lower write amplification and higher performance.|$|E
5|$|The peak random write {{performance}} on an SSD {{is driven by}} plenty of free blocks after the SSD is completely garbage collected, secure erased, 100% TRIMed, or newly installed. The maximum speed will depend upon the number of parallel flash channels connected to the SSD controller, {{the efficiency of the}} firmware, and the speed of the flash memory in writing to a page. During this phase the write amplification will be the best it can ever be for random writes and will be approaching one. Once the blocks are all written once, <b>garbage</b> <b>collection</b> will begin and the performance will be gated by the speed and efficiency of that process. Write amplification in this phase will increase to the highest levels the drive will experience.|$|E
40|$|The {{explosive}} growth of Java technology on various platforms in today's e-Business and large-scale web applications has greatly influenced the {{performance on the}} investment returned. Hyper-Threading Technology can be applied for executing processes in parallel mode within a processor to increase the computational power and throughput. This paper evaluates the performances of various Java Virtual Machines on Hyper-Threading enabled and disabled processors. The results obtained reveal that Java Virtual Machines running on Hyper Threading enabled processors do not demonstrate significant performance gains over those running on Hyper-Threading disabled processors. The conclusion is that, Java Virtual Machines in the present form are not optimized for multithreaded applications using Hyper Threading Technology. Hence, efficient optimization techniques for thread synchronization, thread scheduler, <b>garbage</b> <b>collections</b> and preemption techniques are needed {{if we want to}} make use of the Hyper-Threading Technology effectively...|$|R
40|$|Automatic {{detection}} of free cycles {{has always been}} a challenge in distributed systems. We already designed and implemented an unexpensive detector [LFPS 97, LFPS 98] for partitionned systems, based on timestamps propagation. Here, we present a new algorithm, for large-scale networks(such as the Internet), based on the propagation of more complicated marks. Compared to our previous algorithm, it collects cycles independently and faster, with full locallity. Compared to other detectors, it is far less expensive in terms of both implementation complexity and resources consumption (time, messages and memory), and detects free cycles all-at-once. Our new algorithm combines two novel mecanisms: min-max marking is a technique of marks propagation, where pairs of local <b>garbage</b> <b>collections</b> are gathered to mark each outgoing reference with the maximal and the minimal marks on local roots and incoming references it is locally reachable from. Sub-generation is the construction of a partial acyclic [...] ...|$|R
40|$|DMeroon is {{a library}} of C {{functions}} that provides a data model above a coherently distributed shared memory. DMeroon allows users to statically or dynamically create new classes, to dynamically instantiate these classes and to dynamically and coherently share the resulting instances over a network. DMeroon automatically takes care of representation and alignment, migrating and sharing objects, local and global <b>garbage</b> <b>collections.</b> This document {{provides an overview of}} DMeroon. 1 Goals These days, the net becomes more and more fundamental to nearly all the facets of our professional life, both to use and to study. In the same time, programming languages cease to stay the focal point of our attention. Although important since they are still the mandatory means between machines and developers, their algorithmical side tend to be marginalized in favor of their (tele-) communicational or interoperability aspect. This is so because programming languages are generally sequential-mind [...] ...|$|R
