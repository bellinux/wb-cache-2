0|281|Public
50|$|<b>Circuit</b> underutilization also <b>programmable</b> <b>circuit</b> underutilization, gate underutilization, logic block underutilization {{refers to}} a {{physical}} incomplete utility of semiconductor grade silicon on a standarized mass-produced <b>circuit</b> <b>programmable</b> chip, such as a gate array type ASIC, an FPGA, or CPLD.|$|R
40|$|<b>Programmable</b> <b>circuit</b> {{design has}} played an {{important}} role in improving design productivity over the last few decades. By imposing structure on the design, efficient automation of synthesis, placement and routing is possible. We focus on a class of <b>programmable</b> <b>circuits</b> known as mask <b>programmable</b> <b>circuits.</b> In this paper, we describe key issues in design and tool methodology that need to be addressed in creating a programmable fabric. We construct an efficient design flow that can explore different logic and routing architectures. The main advantage of our work is that we tailor tools designed for standard cell design, that are readily available in the market, to work on a programmable fabric. Our flow requires some additional software capability. A special router that understands programmable routing constructs to complete connections is described. In addition, a tool that packs logic efficiently after synthesis is also presented...|$|R
40|$|National audienceThe {{past two}} decades have seen the {{increasing}} attractiveness of <b>programmable</b> <b>circuits</b> that proved its validation role in the logic design flow and its high level of flexibility. At the same time, asynchronous circuits {{are more and more}} used in order to remove the clock distribution problems and the power consumption overhead which drastically increases with frequency. Several <b>programmable</b> asynchronous <b>circuits</b> have been proposed. Most of them are dedicated either to a specific asynchronous circuit style (PGA-STC[4], PAPA[6]) or to a dedicated application (MONTAGE[3], GALSA [5]). In this paper, we present a novel architecture which is more flexible than the actual asynchronous <b>programmable</b> <b>circuits</b> and which is natively robust to Side Channel attacks and Fault attacks (SCAs and FAs). Indeed, the proposed architecture supports special features such as 1 -of-n encoding, and different handshake communication protocols (2 -phase and 4 -phase) ...|$|R
40|$|Unlike fixed designs, <b>programmable</b> <b>circuit</b> designs {{support an}} {{infinite}} number of operators. The functionality of a <b>programmable</b> <b>circuit</b> can be altered by simply changing the angle values of the rotation gates in the circuit. Here, we present a new quantum circuit design technique resulting in two general <b>programmable</b> <b>circuit</b> schemes. The circuit schemes can be used to simulate any given operator by setting the angle values in the circuit. This provides a fixed circuit design whose angles are determined from the elements of the given matrix-which can be non-unitary-in an efficient way. We also give both the classical and quantum complexity analysis for these circuits and show that the circuits require a few classical computations. They have almost the same quantum complexities as non-general circuits. Since the presented circuit designs are independent from the matrix decomposition techniques and the global optimization processes used to find quantum circuits for a given operator, high accuracy simulations can be done for the unitary propagators of molecular Hamiltonians on quantum computers. As an example, we show how to build the circuit design for the hydrogen molecule. Comment: combined with former arXiv: 1207. 174...|$|R
40|$|The work {{presented}} here aims to outfit remotely operated laboratories with circuit programmability {{through the use}} of a <b>programmable</b> analog integrated <b>circuit.</b> A concept for remotely operated laboratories using <b>programmable</b> analog integrated <b>circuits</b> is presented. The architecture for a <b>programmable</b> analog integrated <b>circuit</b> and top-level simulations are described...|$|R
40|$|Constructing general <b>programmable</b> <b>circuits</b> {{to be able}} to run {{any given}} unitary {{operator}} efficiently on a quantum processor is of fundamental importance. We present a new quantum circuit design technique resulting two general <b>programmable</b> <b>circuit</b> schemes. The circuit schemes can be used to simulate any given operator by setting the angle values in the circuit. This provides a fixed circuit design whose angles are determined from the elements of the given matrix, which can be non-unitary, in an efficient way. We also give both classical and quantum complexity analysis for these circuits and show that the circuits require a few classical computations, and the quantum complexities of them are almost the same as non-general circuits. Comment: This paper is moved as a new version of arXiv: 1204. 360...|$|R
40|$|This {{document}} {{has been}} prepared for the Production Readiness Review of the Local trigger electronics of the ALICE dimuon arm, LHCC milestones n° 429. It describes the design and the performances of a prototype board, developed at the LPC Clermont-Ferrand, in VME 9 U format and based on <b>programmable</b> <b>circuits...</b>|$|R
40|$|<b>Programmable</b> <b>circuits</b> such as {{general-purpose}} processors or FPGAs {{have their}} end-user energy efficiency strongly {{dependent on the}} program that they execute. Ultimately, it is the programmer's ability to code and, {{in the case of}} general purpose processors, the compiler's ability to translate source code into a sequence of native instructions that make the circuit deliver the expected performance to the end user. This way, the benefits of energy-efficient circuits build upon energy-efficient devices could be obfuscated by poorly written software. Clearly, having well-written software running on conventional circuits is no better in terms of energy efficiency than having poorly written software running on energy-efficient circuits. Therefore, {{to get the most out}} of the energy-saving capabilities of <b>programmable</b> <b>circuits</b> that support low voltage operating modes, it is necessary to address software issues that might work against the benefits of operating in such modes...|$|R
40|$|Systems {{and methods}} are {{discussed}} {{for using a}} floating-gate MOSFET as a <b>programmable</b> reference <b>circuit.</b> One example of the <b>programmable</b> reference <b>circuit</b> is a <b>programmable</b> voltage reference source, while a second example of a <b>programmable</b> reference <b>circuit</b> is a <b>programmable</b> reference current source. The programmable voltage reference source and/or the reference current source may be incorporated into several types of circuits, such as comparator circuits, current-mirror circuits, and converter circuits. Comparator circuits and current-mirror circuits are often incorporated into circuits such as converter circuits. Converter circuits include analog-to-digital converters and digital-to-analog converters. Georgia Tech Research Corporatio...|$|R
40|$|Three {{different}} configurations {{have been}} reported for programming explicitly inverting, positive fractional and non-inverting gains, respectively. This paper proposes a single operational amplifier digitally <b>programmable</b> <b>circuit</b> {{for a set of}} arbitrary gains, which may include inverting, positive fractional and/or non-inverting gains, with minimum number of elements. The design procedure is illustrated with an example...|$|R
50|$|Elnec is a Slovak {{manufacturer}} of device programming systems for <b>programmable</b> integrated <b>circuits.</b>|$|R
50|$|In {{the field}} of {{computer}} hardware, the term programmer, chip programmer or device programmer refers to a electronic equipment that configures <b>programmable</b> non-volatile integrated <b>circuits</b> (called <b>programmable</b> devices) such as EPROMs, EEPROMs, Flashes, eMMC, MRAM, FRAM, NV RAM, PALs, FPGAs or <b>programmable</b> logic <b>circuits...</b>|$|R
40|$|Abstract — Three {{different}} configurations {{have been}} reported for programming explicitly inverting, positive fractional and non-inverting gains, respectively. This paper proposes a single operational amplifier digitally <b>programmable</b> <b>circuit</b> {{for a set of}} arbitrary gains, which may include inverting, positive fractional and/or non-inverting gains, with minimum number of elements. The design procedure is illustrated with an example. Keyword- Amplifier, Programmable amplifier, Digitally programmable amplifier I...|$|R
50|$|A {{challenge}} for device programmer manufacturers is {{the design of}} the pin drivers that are directly connected to the circuit to be programmed. Due to the many <b>programmable</b> <b>circuits,</b> every pin driver must be able to apply different voltages in a range of 0..25 Volts, clock rates of up to 40 MHz, and logic inputs with adjustable threshold. Modern programmers use a dedicated integrated circuit for the pin drivers.|$|R
40|$|This paper {{presents}} a new programmable radio frequency (RF) {{system for a}} System-on-Chip (SoC) transceiver. A 5 -GHz low noise amplifier (LNA) is integrated with an on-chip <b>programmable</b> RF <b>circuits</b> using 0. 18 µm SiGe technology. Proposed system is very useful for concurrent RF ICs in a complete RF system environment. The <b>programmable</b> <b>circuit</b> helps it to provide DC output voltages, hence, making the RF system chain automatic. The programmable RF system automatically adjusts performance of an LNA with the processor in the SoC when it goes out of the normal range of operation. It also compensates abnormal operation due to the unusual PVT (Process, Voltage and Thermal) variations in RF circuits. Keywords: System-on-Chip, SoC, programmable RF system, low noise amplifier. 1...|$|R
40|$|Abstract:- The paper {{presents}} {{the implementation of}} a <b>programmable</b> <b>circuit</b> (FPGA) in a Doppler radio telemetry system dedicated for the determination of the features of low speed motions with reduced cost of execution of movement in air environment. It is presented the choice of the structure based on the simulation in VHDL and is verified the proper operation of selected structure for the achievement of technical features required by the telemetric system...|$|R
40|$|In {{this paper}} we show two {{different}} schemes {{to implement a}} field <b>programmable</b> <b>circuit</b> that can connect 'n' capacitors as a charge-pump of, eventually, any topology and switching pattern. Capacitor connectivity is configured by means of registers that control multiplexers that, in turn, select the phase signal that controls each switch. It is also shown that, {{with any of these}} schemes, dynamic configuration of the circuit may be achieved by simply adding additional control phases. Postprint (published version...|$|R
40|$|This work {{deals with}} {{the design of the}} control {{software}} for the <b>programmable</b> analog <b>circuit</b> adjustable by means of a computer via the serial interface for the computer, as well as for programming the microcontroller. In addition, analyses the internal structure of <b>programmable</b> analog <b>circuit</b> on which it is proposed to further control, design of printed circuit boards for final programming and test equipment and measurement of the basic parameters of the circuit (transmission and phase frequency characteristics of parts and units) ...|$|R
40|$|Abstract. This paper {{describes}} a novel Field Programmable Gate Array (FPGA) logic synthesis technique which determines if a logic function {{can be implemented}} in a given <b>programmable</b> <b>circuit</b> and describes how this problem can be formalized and solved using Quantified Boolean Satisfiability. This technique is general enough {{to be applied to}} any type of logic function and programmable circuit; thus, it has many applications to FPGAs. The applications demonstrated in this paper include FPGA technology mapping and resynthesis where their results show significant FPGA performance improvements. ...|$|R
40|$|Field {{programmable}} gate arrays (FPGA) are {{a recently}} developed family of <b>programmable</b> <b>circuits.</b> Like mask <b>programmable</b> gate arrays (MPGA), FPGAs implement thousands of logic gates. But, unlike MPGAs, a user can program an FPGA design as traditional programmable logic devices (PLDs) : in-site and a {{in a few}} seconds. These features, added to reprogrammability, have made FPGAs the dream tool for evolvable hardware. This paper is an introduction to FPGAs, presenting differencies with more traditional PLDs and giving a survey of two commercial architectures...|$|R
40|$|Abstract—A {{programmable}} high-frequency operational transconductance amplifier (OTA) {{is proposed}} and analyzed. A general configurable analog block (CAB) is presented, {{which consists of}} the proposed programmable OTA, programmable capacitor and MOSFET switches. Using the CABs, the universal tunable and field programmable analog array (FPAA) can be constructed, which can realize many signal-processing functions, including filters. A tuning circuit is also discussed. The proposed OTA has been simulated and fabricated in CMOS technology. The {{results show that the}} OTA has the transconductance tun-able/programmable {{in a wide range of}} 700 times and the 3 -dB bandwidth larger than 20 MHz. A universal 5 8 CAB array has been fabricated. The chip has also been configured to realize OTA-C 60 -kHz and 500 -kHz bandpass filters based on ladder simulation and biquad cascade. Index Terms—CMOS analog integrated circuits, continuous time filters, field <b>programmable</b> analog <b>circuits,</b> <b>programmable</b> <b>circuits,</b> <b>programmable</b> filters. I...|$|R
40|$|We {{suggest an}} {{approach}} to use memristors (resistors with memory) in <b>programmable</b> analog <b>circuits.</b> Our idea consists in a circuit design in which low voltages are applied to memristors during their operation as analog circuit elements and high voltages are used to program the memristor's states. This way, as it was demonstrated in recent experiments, the state of memristors does not essentially change during analog mode operation. As an example of our approach, we have built several <b>programmable</b> analog <b>circuits</b> demonstrating memristor-based programming of threshold, gain and frequency...|$|R
40|$|Abstract—This paper {{proposes a}} hybrid CMOS/memristor {{implementation}} of a programmable threshold logic gate. In this gate, memristive devices implement ratioed diode-resistor logic, while CMOS circuitry is used for signal amplification and inversion. Due to the excellent scaling prospects and nonvolatile analog memory of memristive devices, the proposed threshold logic is in-field configurable and potentially very compact. The concept is experimentally verified by implementing a 4 -input symmetric linear threshold gate with an integrated circuit CMOS flip-flop, silicon diodes, and Ag/a-Si/Pt memristive devices. Index Terms—Memristor, <b>programmable</b> <b>circuits,</b> solid-state electrolyte memory, threshold logic, neural networks. I...|$|R
40|$|Abstract—We {{suggest an}} {{approach}} to use memristors (resistors with memory) in <b>programmable</b> analog <b>circuits.</b> Our idea consists in a circuit design in which low voltages are applied to memristors during their operation as analog circuit elements and high voltages are used to program the memristor’s states. This way, as it was demonstrated in recent experiments, the state of memristors does not essentially change during analog mode operation. As an example of our approach, we have built several <b>programmable</b> analog <b>circuits</b> demonstrating memristor-based programming of threshold, gain and frequency...|$|R
40|$|This paper {{describes}} a communications network testbed {{which has been}} designed to allow the development of architectures and algorithms that meet the functional requirements of future NASA communication systems. The central hardware components of the Network Testbed are <b>programmable</b> <b>circuit</b> switching communication nodes which can be adapted by software or firmware changes to customize the testbed to particular architectures and algorithms. Fault detection, isolation, and reconfiguration has been implemented in the Network with a hybrid approach which utilizes features of both centralized and distributed techniques to provide efficient handling of faults within the Network...|$|R
50|$|Data I/O Corporation is a {{manufacturer}} of programming and automated device handling systems for <b>programmable</b> integrated <b>circuits.</b> The company is headquartered in Redmond, Washington with sales and engineering offices in multiple countries.|$|R
40|$|Abstract — This paper {{presents}} {{the extension of}} a platform originally devoted to symmetrical transient stability analysis, into the domain of unbalanced faults. The aim of this solver {{is to increase the}} speed of dynamic stability assessment for power systems. It is based on an analog representation of the grid alongside dedicated digital resources for the simulation of the models of power network components. Using the symmetrical components theory, this platform can be adapted to handle unsymmetrical disturbances, such as single-phase-to-ground faults, and the tripping of single-phase circuit breakers. Keywords—mixed analog digital circuits; power system dynamics; power system stability; <b>programmable</b> <b>circuits.</b> I...|$|R
40|$|This paper {{describes}} a novel Field Programmable Gate Array (FPGA) logic synthesis technique which determines if a logic function {{can be implemented}} in a given <b>programmable</b> <b>circuit</b> and describes how this problem can be formalized and solved using Quantified Boolean Satisfiability. This technique is general enough {{to be applied to}} any type of logic function and programmable circuit; thus, it has many applications to FPGAs. The application demonstrated in this paper is FPGA PLB evaluation where their results show that this tool allows radical new features of FPGA logic blocks to be evaluated in a rigorous scientific way. 1...|$|R
40|$|Quantum dot {{cellular}} automata(QCA) shows {{promise as}} a post sil-icon CMOS,low power computational technology. Nevertheless,to generalize QCA for next generation digital devices,the abil-ity to implement conventional <b>programmable</b> <b>circuits</b> based on NOR,AND and OR gates is necessary. We devise a new QCA structure,the QCA multiplier,employing the five quantum dot QCA cell. The structure can multiply two 4 bit binary number. Tihis work {{is motivated by}} the fact that implementing combinational multiplier using QCA will reduce its area and consequently its heat dissipa-tion. The efficacy of our framework is that it uses QCA majority gates as its primitives. Keywords: QCA, CMOS, multiplie...|$|R
40|$|The goal of {{the thesis}} is to design a {{development}} board {{that may be used}} for embedded systems prototyping. The board's key parts are an ARM-Cortex-based microcontroller and a FPGA <b>programmable</b> <b>circuit.</b> The platform is designed with. NET Micro Framework support in mind. The thesis contains specifications of the development board, describes the design process as well as the task of. NET Micro Framework porting and the establishment of communication bus between the FPGA and microcontroller circuits. The thesis is concluded by a set of demonstration examples which outline how to develop new applications for the designed platform...|$|R
50|$|There {{are four}} general types of device programmers: Gang programmers (multi-programming sites) for mass production, {{development}} programmers (usually single-programming site) for development and small-series production, pocket programmers for development and field service, and specialized programmers for certain circuit types only, e.g. EPROM programmers. Early device programmers had {{the size of}} a shoe box and a weight of up to 4 kg; the latest generation device programmers are pocket sized, weigh less than 200 g and require no external power supply. These types of programmers can be used in field service for maintenance or setup of machinery that contains <b>programmable</b> <b>circuits.</b>|$|R
40|$|As new {{techniques}} for applying biological processes {{to the development}} of computer hardware reach maturity, the EMBRYONICS (for embryonic electronics) project gains in complexity and flexibility of use. New features, such as the capability to more efficiently store data, have lately been added to MUXTREE® (for multiplexer tree) - our electronic molecule. A side effect to the flexibility added to the new molecule is the need for different binary configurations in order to differentiate the possible operating modes. This document is intended as a summary of the final specifications of MUXTREE® necessary to be able to effectively use the molecules as a <b>programmable</b> <b>circuit...</b>|$|R
40|$|Abstract:- Evolvable Hardware is a {{hardware}} which modifies its own structure {{in order to}} adapt to the environment in which it is embedded. This reconfigurable hardware is implemented on a <b>programmable</b> <b>circuit,</b> whose architecture can be altered by downloading a binary bit string. These bits are adaptively acquired by evolutionary algorithms. In this paper we have used an evolutionary algorithm to design some combinational and sequential logic circuits. These designs have been implemented in a real Xilinx Spartan- 3 FPGA and have been compared with other conventional designs of the same circuits. A better allocation of resources in the targeted device has been observed in almost all evolutionary designs...|$|R
40|$|The {{subthreshold}} {{region of}} operation has simple physics {{which allows for}} a balanced-force approach to behavioral modeling that has shown to be robust to temperature, and a model that encapsulates MOSFET behavior across all operational regions has been developed. The subthreshold region of operation also allows for injection of charge onto floating nodes that allows for persistent storage {{that can be used}} in a variety of applications. The combination of charge storage and device modeling has allowed for the development of <b>programmable</b> <b>circuits</b> for digital applications. PhDCommittee Chair: Jennifer Hasler; Committee Member: Bradley Minch; Committee Member: David Anderson; Committee Member: Maysam Ghovanloo; Committee Member: Saibal Mukhopadhya...|$|R
40|$|The {{cooperation}} of the analog and digital circuits and the embedded controllers {{as well as their}} industrial use and technical application have always been in the focus of our interest. In reconfigurable systems the effectiveness and quality of the analog circuit system can be maintained and modified by circuit or by changing the single element values. There are further advantages of the <b>programmable</b> analog <b>circuit</b> applications; more compact, more reliable, more flexible systems can be produced with better performance. It is especially beneficial if for programming we modify the function of a <b>programmable</b> analog <b>circuit</b> either giving a new topology or a new component parameter using the flexibility of the microcontroller...|$|R
50|$|The OOPic is an Object Oriented <b>Programmable</b> Integrated <b>Circuit.</b> Created by Savage Innovations, this PIC {{microcontroller}} {{comes with}} an IDE (Integrated Development Environment) that supports programming in syntaxes based on the BASIC, Java and C programming languages.|$|R
