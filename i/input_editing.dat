12|114|Public
25|$|The Lisp REPL {{typically}} {{also provides}} <b>input</b> <b>editing,</b> an input history, error handling and an interface to the debugger.|$|E
5000|$|<b>Input</b> <b>editing</b> {{and context}} {{specific}} completion over symbols, pathnames, class names and other objects.|$|E
50|$|The Lisp REPL {{typically}} {{also provides}} <b>input</b> <b>editing,</b> an input history, error handling and an interface to the debugger.|$|E
50|$|All scorewriters {{allow the}} user to <b>input,</b> <b>edit</b> and print music notation, to varying degrees of sophistication. They range from {{programs}} which can write a simple song, piano piece or guitar tab, to those that can handle the complexities of orchestral music, specialist notations (from early music to avant garde), and high-quality music engraving.|$|R
50|$|The {{format of}} MakeDoc is {{intended}} for <b>input</b> and <b>editing</b> from any text editor, including those often used in shell-environments, such as vi and Emacs.|$|R
40|$|Stewart-Mott Foundation for generously funding this report. Thank {{you also}} to the {{following}} people and organisations: • Nahla Valji for support, <b>input</b> and <b>editing</b> across {{the duration of the}} Project • Ingrid Palmary for insightful edits • Polly Dewhirst and Carnita Ernest for management, guidance and encouragement...|$|R
50|$|The MC-808 can import samples (as WAV or AIFF files,) and {{can also}} record samples from its <b>input.</b> <b>Editing</b> of samples can be done using the sample edit feature of the patch editor program. Some basic tasks can be done from the MC-808 {{without the need for}} the editor program. Newly {{recorded}} samples are stored in sample memory. Samples must be loaded into sample memory to play them as well. The MC-808 will automatically load samples into memory when needed. There are also some manual operations for loading samples into memory and unloading them. As shipped, there is 4MB of sample memory. Samples can be saved in user memory or card memory.|$|E
40|$|This work covers {{problems}} of publication of old manuscripts {{on the internet}} and principles of creation of full-text databases for a comprehensive investigation. The presented approach is based on adequacy of the electronic copy to the original, fragmentation of texts depending on the tasks of work, establishment and storage of relationships among the objects under study, use of object attributes for retrieval data. The developed technologies provide a multiuser access by means of internet to the database for data <b>input,</b> <b>editing,</b> processing and retrieval, and creation of scientific, reference, and popular electronic and printed editions of unique manuscripts in any language...|$|E
40|$|The {{significance}} editing technique reduces and prioritises the <b>input</b> <b>editing</b> workload in {{a sample}} survey. The method is based on estimating the impact of resolving individual edit queries on the survey estimates. Using these impacts {{it is possible to}} ignore queries of trivial value while making sure that the most serious queries are given the most attention. The result is efficient allocation of resources to editing without compromising data quality. Lawrence and McDavitt (1994) described an implementation of significance editing in the Australian Survey of Average Weekly Earnings. This article extends the previous work by describing the general principles underlying the significance editing technique, and offering suggestions for applying the technique to other surveys...|$|E
50|$|An {{example of}} an {{interactive}} use of NLG is the WYSIWYM framework. It stands for What {{you see is what}} you meant and allows users to see and manipulate the continuously rendered view (NLG output) of an underlying formal language document (NLG <b>input),</b> thereby <b>editing</b> the formal language without learning it.|$|R
40|$|Abstract. Computer Aided Method Engineering (CAME) {{is a kind}} of {{computerized}} {{tool for}} supporting the processes to build project-specific methods for information system development. One of the easiest ways to build them is to adopt reuse technique. In this technique, we have a kind of database system, called method base, which stores reusable method portions, and assemble them into a project-specific method. Automating this assembly process by using CAME tool is the first step to automated method engineering, i. e. automated supporting techniques to build situational methods. This paper demonstrates a CAME tool supporting assembly based method engineering process. In particular, we present two computerized tools; one is a method editor for <b>inputting</b> and <b>editing</b> meta models, and the other one is a generator of diagrams editors for <b>inputting</b> and <b>editing</b> the diagrams that express the model of a system. ...|$|R
50|$|Users with Internet {{access and}} an Evernote account {{can also have}} their notes {{automatically}} synchronized with a master copy held on Evernote's servers. This approach lets a user access and edit their data across multiple machines and operating system platforms, but still view, <b>input</b> and <b>edit</b> data when an Internet connection is not available. However, notes stored on Evernote servers are not encrypted.|$|R
40|$|PT Grasfindo is {{developing}} its {{business in the}} field of general trading (procurement office), which at this company processes transaction data of suppliers and information on the procurement of goods are still processed manually in the <b>input,</b> <b>editing,</b> printing to produce a report. Application programming using Microsoft Visual Basic 6. 0 forms in form, would simplify the operational or administrative staff to do the inputting editing, printing, either from a data supplier data and transaction data, and assisted with Microsoft Access 2000 database applications to store recod- records and fields - field data [...] Implementation of the program application of procurement processes in PT Grasfindo quite good and satisfactory in terms of receiving information quickly and accurately in order for decision making by the leadership...|$|E
40|$|THE {{proposed}} {{procedure for}} automatic translation of a Japanese linear text into English {{can be divided}} into four stages: 1) automatic <b>input</b> <b>editing,</b> 2) automatic segmentation with morphological analysis, 3) syn-tactical analysis, and 4) transformation with output editing, including semantic transfer. 2. FORMS OF INPUT TEXTS It is apparent that input texts which are in accord with a commonly accepted writing system are better {{in the sense that they}} need less pre-editing before they are fed into a machine. Because the standard vernac-ular writing system of Japanese makes no use of spaces between words and because kanas (syllable Japanese characters) and kanjis (ideographic Chinese characters) are used instead of roman letters, it is necessary to devise a method of automatically cutting into its components the unseg-mented sentence, written in kanas and kanjis, In the standard writing system, 71 kanas and 1850 kanjis are used...|$|E
40|$|Abstract Background So far, {{there have}} been no Flash-based web tools {{available}} for chemical structure input. The authors herein present a feasibility study, aiming at the development of a compact and easy-to-use 2 D structure editor, using Adobe's Flash technology and its programming language, ActionScript. As a reference model application from the Java world, we selected the Java Molecular Editor (JME). In this feasibility study, we made an attempt to realize a subset of JME's functionality in the Flash Molecular Editor (FlaME) utility. These basic capabilities are: structure <b>input,</b> <b>editing</b> and depiction of single molecules, data import and export in molfile format. Implementation The result of molecular diagram sketching in FlaME is accessible in V 2000 molfile format. By integrating the molecular editor into a web page, its communication with the HTML elements on this page is established using the two JavaScript functions, getMol() and setMol(). In addition, structures can be copied to the system clipboard. Conclusion A first attempt was made to create a compact single-file application for 2 D molecular structure input/editing on the web, based on Flash technology. With the application examples presented in this article, it could be demonstrated that the Flash methods are principally well-suited to provide the requisite communication between the Flash object (application) and the HTML elements on a web page, using JavaScript functions. </p...|$|E
40|$|We present ArchE (Archaeological Editor), {{a system}} for {{processing}} and displaying archaeological data. ArchE checks these data for consistency, simplifies and displays them; {{for each of these}} steps ArchE offers a number of different algorithms. The interactive features (eg <b>input,</b> data <b>editing</b> and modification of the layout) are easy to handle. Furthermore, ArchE contains algorithms for focusing on user-defined aspects of the data. Apart fro...|$|R
30|$|Additionally, the Dimensions of Teamwork {{survey data}} were anonymous, and thus, {{we were not}} able to regress them with the GDEC {{contributions}} and learning outcome scores. Lastly, the significant results we found in this study occurred in the context of the limited forms of measures of collaboration we used in this early instantiation of GDEC. Although the frequency of the individual and total group contributions (defined as each of the students’ original <b>inputs,</b> <b>edits,</b> and comments) is one indicator of collaboration that occurred in each student group, it is only one and it is strictly quantitative. Dillenbourg (2000) and Serce et al. (2011) posit that collaborative knowledge construction arises not simply from having more individuals work together but rather from meaningful activities such as “reading, building, predicting, and negotiating” (Serce et al. 2011, p. 500) that trigger meaningful collaboration. Although the existence of a GDEC contribution is a necessary aspect of these potential triggers, it is not necessarily a sufficient one. Clearly more nuanced measures are needed that include both the quality of collaborative contributions in addition to quantity.|$|R
50|$|It {{turns out}} that only two rows of the table are needed for the {{construction}} if one {{does not want to}} reconstruct the <b>edited</b> <b>input</b> strings (the previous row and the current row being calculated).|$|R
40|$|Abstract Background With {{advances}} in DNA re-sequencing methods and Next-Generation parallel sequencing approaches, {{there has been}} a large increase in genomic efforts to define and analyze the sequence variability present among individuals within a species. For very polymorphic species such as maize, this has lead to a need for intuitive, user-friendly software that aids the biologist, often with naïve programming capability, in tracking, editing, displaying, and exporting multiple individual sequence alignments. To fill this need we have developed a novel DNA alignment editor. Results We have generated a nucleotide sequence alignment editor (DNAAlignEditor) that provides an intuitive, user-friendly interface for manual editing of multiple sequence alignments with functions for <b>input,</b> <b>editing,</b> and output of sequence alignments. The color-coding of nucleotide identity and the display of associated quality score aids in the manual alignment editing process. DNAAlignEditor works as a client/server tool having two main components: a relational database that collects the processed alignments and a user interface connected to database through universal data access connectivity drivers. DNAAlignEditor can be used either as a stand-alone application or as a network application with multiple users concurrently connected. Conclusion We anticipate that this software will be of general interest to biologists and population genetics in editing DNA sequence alignments and analyzing natural sequence variation regardless of species, and will be particularly useful for manual alignment editing of sequences in species with high levels of polymorphism. </p...|$|E
40|$|Significance editing is a {{statistical}} technique {{which is used}} to prioritise and control the amount of <b>input</b> <b>editing</b> in a survey. The technique works on the premise that only those units which fire edit queries that are considered to be significant need to be edited. An edit query for a unit is considered to be significant if it is assigned a score above a prespecified cut-off value. The score is based on the expected effect on survey estimates caused by changing the unit's reported data to some value determined by the edit rule. The technique ensures that the bias due to not editing some of the survey forms is less than 10 % of the variance of the estimate at the state by industry division level. The introduction of significance editing in the survey of Average Weekly Earnings (AWE) was very successful, resulting in negligible effects on survey estimates and resource savings of between three and four staff years. This study has evaluated the effects on survey estimates and the resource savings that could be made by implementing the significance editing technique in the Survey of Employment and Earnings (SEE). A parallel run approach was used to make this assessment. Two separately maintained survey data files for the December quarter 1998 were used to produce estimates under the significance editing approach and under the current approach, and the two sets of estimates were compared. The results showed that applying the significance editing technique should have negligible effects on the SEE survey estimates. For estimates of gross quarterl...|$|E
40|$|The CPAC(Centrifugal Pump Analysis Code) is a {{one-dimensional}} meanline pump analysis code which predicts {{performances of}} centrifugal pumps at design and off-design conditions based on pump geometries and operating conditions. The PC {{version of the}} CPAC is based on Loss Isolation Code (LSISO) which {{was written in the}} early 1970 s for NASA Lewis Research Center and the code developed previously at RIT which runs on VAX/VMS environment. This new version of CPAC is written with Visual Basic Programming language to work on personal computers. CPAC is a menu-driven and userfriendly code with online help manual. The following enhancements were made over previously existing codes Additional features: * Additional pump elements * Nodes based modeling scheme * Individual or multiple elements analysis * Constants or variable fluid properties * English or SI umt input/output * User-friendly interface incorporating - various input options - on-screen <b>input</b> <b>editing</b> - graphical and tabular output displays - graphical and tabular print-outs * Personal computer based software * Reusability of the code Along with online help and the user 2 ̆ 7 s manual for program usage make the PC version CPAC a versatile tool for centrifugal turbopump design performance prediction and evaluation. It also offers the capability of predicting other pump configurations such as vaneless diffuser pumps, vaned diffuser pumps, volute pumps, single and multistage pumps, including the crossover elements (turning channel and downcomer) Comparisons of the CPAC predictions to experimental test data for several turbopumps and industrial pumps over a wide range of pump operating speed and flow rates were made, and the results were acceptable as a performance prediction code...|$|E
30|$|Finally, {{using the}} Expert Mode the user can <b>edit</b> <b>input</b> tables and/or the hypernet {{to control the}} {{impedances}} used in the model. The Expert Mode is an optional feature for advanced editing of the database values before running the model.|$|R
40|$|The {{development}} {{of information technology}} has developed very rapidly following {{the needs of the}} times that require speed and accuracy in all aspects of life. Follow developments in terms of hardware, software, and in terms of human resources to operate. At this time almost all areas of life require information technology and human behavior are already accustomed to applying information technology in everyday life. With computers we can perform data processing and data storage. Can also perform data <b>input,</b> <b>edit</b> data, save it, and others. So that the data is managed more effectively and efficiently. With rapid advances in technology today, led to an idea or notion of the writer to try to computerize medical record recording in Maternal and Child Health Center Puji Astuti. The author tries to build an application that will help to facilitate the processing of medical data is more optimal and effective. The system will be made is "Design and Manufacture System Administration Information on Maternal and Child Health Center Puji Astuti". The system is built with a Web-based application for data processing and database PhpMyAdmin clinic as data storage...|$|R
5000|$|Eytinge {{expanded}} his commercial enterprises into marketing via direct-mail. His success {{attracted the attention}} of the advertising industry; newspaper articles were written about him and trade publications sought his creative <b>input.</b> He <b>edited</b> a magazine, wrote stories and had a screen play accepted for a film (Man Under Cover). A campaign developed to have him paroled and in December 1922 he was released. [...] Within days he married Pauline Lydia Diver, a lady he had corresponded with when in jail.|$|R
5000|$|Museolog is a web-driven {{software}} system for cataloging museum information. It is an advanced tool for museum records management, {{based on the}} international standards. It was developed by EUROCLID within the UNESCO HeritageNet project, and localized by the non-governmental organization, Open Systems. Using this software, initial functions of <b>input</b> and <b>editing</b> of museum catalogues are provided what {{has been described as}} [...] "a modern intuitive graphical interface using forms and menus." [...] Museolog is free software released under the GNU GPL.|$|R
50|$|As the {{principal}} artist at Bigelow & Holmes, Holmes {{is responsible for}} the creation of over 100 digital typefaces, including conception, research, drawing, computer <b>input,</b> digital <b>editing,</b> and production management. Her illustrations have appeared in Scientific American, The Seybold Report, Computer Graphics, Fine Print and other publications. She has designed signage for Ghirardelli Square, San Francisco and Walter Lantz Studio, UCLA. Her work is included in the permanent collection of the Klingspor Museum, Germany and the Cary Graphic Arts Collection, Rochester Institute of Technology.|$|R
40|$|To {{undertake}} a syntactic {{approach to a}} pattern recognition problem, {{it is necessary to}} have good grammatical models as well as good parsing algorithms that allow distorted samples to be classied. There are several methods that obtain, by taking two trees as <b>input,</b> the <b>editing</b> distance between them. In the following work, a polynomial time algorithm which processes the distance between a tree and a tree automaton is presented. This measure can be used in pattern recognition problems as an error model inside a syntactic classier...|$|R
50|$|Observations are {{geographically}} {{located in}} decimal degrees to any precision input by the contributor, and where applicable, the position {{is derived from}} the EXIF of the lead photograph. The location details can also be <b>input</b> and <b>edited</b> manually. The location can be displayed on Google Maps. In some cases where the exact location must be hidden for conservation security, the map will display a rectangle surrounding the actual location. The location is then truncated to two decimal places, and this represents a corner of the rectangle.|$|R
40|$|The {{system uses}} linearized theory methods for the {{calculation}} of surface pressures and supersonic area rule concepts in combination with linearized theory for calculation of aerodynamic force coefficients. Interactive graphics {{were included in the}} system to display or <b>edit</b> <b>input</b> and to permit monitoring and readout of program results...|$|R
40|$|A {{molecule}} editor, that is {{program for}} <b>input</b> and <b>editing</b> of molecules, is an indispensable {{part of every}} cheminformatics or molecular processing system. This review focuses on a special type of molecule editors, namely those that are used for molecule structure input on the web. Scientific computing is now moving {{more and more in}} the direction of web services and cloud computing, with servers scattered all around the Internet. Thus a web browser has become the universal scientific user interface, and a tool to edit molecules directly within the web browser is essential...|$|R
40|$|With {{advances}} in both computer hardware and software, especially in Indonesia, {{it is expected}} that progress can be helpful in dealing with problems that are still done manually. Rental listing application process is performed in the computer stuff is very helpful, because the program listing of rental items include <b>input</b> data, <b>edit</b> data, display data, and security programs. The program listing applications made to the borrowing of goods can be used easily without the use of manuals. This application is made with the aid of Microsoft Visual Basic 6. 0 softwar...|$|R
40|$|This paper {{describes}} {{a system that}} is being developed for the acquisition of bibliographic data in a scientific library. Details are given of the hardware and software used, followed by examples from an <b>input</b> and <b>editing</b> session. Within the system, the structure of the data is fully general and is defined by tables from which re-entrant routines extract the sequencing, validation criteria, and messages for each field. The system is interactive, and prompts the user for the structure of each record and provides error diagnostic information. (3 refs) ...|$|R
50|$|GridChem is a Java Desktop {{software}} application that presents a common interface to the user, integrating authentication, molecular <b>editing,</b> <b>input</b> and job preparation, job submission, and output monitoring. The GridChem Middleware Services manages and monitors execution of applications on the HPC resources through web services, and hosts consulting and allocations services.|$|R
40|$|The {{intended}} {{use of this}} web page is for collaborative development of lesson plans. Several atmospheric science lesson plans and visualizations are available from this site. Examples {{of some of the}} topics are a snowflake model, weather balloons, a radiation budget model, and drawing contour plots. Many of the visualizations are interactive, so the user may vary the conditions and observe the results. These applets serve as useful introductions to the concept of modeling. The lesson plans receive continuous <b>input</b> and <b>editing</b> by the instructors that use them, so the quality is always improving. Educational levels: High school, Middle school, Undergraduate lower division...|$|R
50|$|TSF enables text {{services}} to provide accurate and complete text conversion, with continuous {{access to the}} document buffer. Text services using TSF can avoid separating their functionality into modes for input and modes for <b>editing.</b> This <b>input</b> architecture enables the buffered and accumulating text stream to change dynamically, thereby enabling more efficient keyboard <b>input</b> and text <b>editing.</b>|$|R
40|$|The {{introduction}} of mobile telephone {{technology has been}} accompanied by a surge of activity in MAL (Mobile Assisted Learning) and MALL (Mobile Assisted Language Learning). The convenience, access, ubiquity, and flexibility of mobile devices is starting to have an impact not only on the provision of technology-enhanced language learning, but also on the materials which it generates, including JIT (Just In Time) learning, undertaken for short periods as opportunities present themselves {{during the course of the}} day. The situation has recently been compounded by the release of a number of tablets, which are situated between mobile phones and laptops. The multimedia experience of MALL, especially its capability to handle authentic audio and video, have made it an attractive and potentially powerful component of the language learning experience. However, the benefits of MALL are-as with other mobile technologies like the tablet-emphatically on the access and consumption side. Mobile phones have some, but restricted, usefulness for practising speaking. But most of all, they have complex and somewhat compromised capacities for writing (for text <b>input</b> and <b>editing).</b> This chapter examines the technical, ergonomic, and cognitive implications for MALL for text <b>input</b> and <b>editing</b> with special reference to the mobile phone, but also in relation to tablets where they are relevant to the argument. It examines a number of options and their implications, and it presents a set of specifications which, if met, will allow mobile devices and MALL to play a fuller role in the writing aspect of language learning...|$|R
