10000|12|Public
5|$|The object element: The eyes also {{test support}} of the <b>HTML</b> object element. The object element {{has been a part}} of <b>HTML</b> since <b>HTML</b> 4 was {{released}} in 1998, yet by 2005 it still was not completely supported in all web browsers. The creators of Acid2 considered object element support important because it allows for content fallback—if an object fails to load, then the browser can display alternative (generally simpler, more reliable) content in its place.|$|E
5|$|CSS table formatting: This part of CSS {{allows the}} web {{designer}} to apply table formatting without traditional <b>HTML</b> table markup.|$|E
5|$|Web {{is based}} on the WebKit web browser engine, which {{provides}} support for <b>HTML</b> 4 and XHTML, CSS 1 and 2, substantial degree of implementation of HTML5 and CSS 3 features, Web Inspector (<b>HTML</b> and JavaScript debugging tool) and NPAPI, including Adobe Flash and IcedTea plug-ins support.|$|E
5|$|Hovering effects: When {{the user}} moves {{his or her}} mouse over the smiley face's nose, it turns blue. This is called a {{hovering}} effect, and while it has traditionally been used for hyperlinks, it should work {{on a wide variety}} of <b>HTML</b> elements.|$|E
5|$|In 1993, Dave Raggett, then at Hewlett-Packard (HP) in Bristol, England {{devoted his}} spare time to {{developing}} Arena on which he hoped to demonstrate new and future <b>HTML</b> specifications. Development of the browser was slow because Raggett was the lone developer and HP, which like many other computer corporations at the time, was unconvinced that the Internet would succeed and thus did not consider investing in web browser development. Raggett demonstrated the browser at the first World Wide Web Conference in Geneva, Switzerland in 1994 and the 1994 ISOC conference in Prague to show text flow around images, forms, {{and other aspects of}} <b>HTML</b> later termed as the HTML+ specification. Raggett subsequently partnered with CERN, to develop Arena further as a proof of concept browser for this work. Using the Arena browser, Dave Raggett, Henrik Frystyk Nielsen, Håkon Wium Lie and others demonstrated text flow around a figure with captions, resizable tables, image backgrounds, <b>HTML</b> math, and other features. At the Web World conference in Orlando, in early 1995, Raggett demonstrated the different new features of Arena.|$|E
5|$|In <b>HTML,</b> {{the value}} of the src {{attribute}} of the img element provides a URI reference, as does {{the value of}} the href attribute of the a or link element.|$|E
5|$|Other {{problems}} included rendering {{problems with}} tables, {{and the lack}} of integration of so-called extended <b>HTML</b> code, i.e. the BG COLOR-tag and the DIV ALIGN-tag.|$|E
5|$|Acid2 tests {{aspects of}} <b>HTML</b> markup, CSS 2.1 styling, PNG images, and data URIs. The Acid2 test page will be {{displayed}} correctly in any application {{that follows the}} World Wide Web Consortium and Internet Engineering Task Force specifications for these technologies. These specifications are known as web standards because they describe how technologies used on the web are expected to function.|$|E
5|$|Despite {{its time}} of development, Arena is {{in certain areas}} a {{relatively}} modern browser; because it functioned as a testbed, it saw the implementation of new technologies long before they became mainstream, e.g. CSS. Arena implemented many elements of the HTML3 and HTML3.2 specification including math elements that were deprecated in HTML4, <b>HTML</b> tables, and experimental style sheets.|$|E
5|$|Over {{the next}} {{three and a half}} years, as the World Wide Web's core {{technologies}} of <b>HTML,</b> HTTP, and web browsers developed, a need to distinguish a string that provided an address for a resource from a string that merely named a resource emerged. Although not yet formally defined, the term Uniform Resource Locator came to represent the former, and the more contentious Uniform Resource Name came to represent the latter.|$|E
5|$|PHP acts {{primarily}} as a filter, taking input from a file or stream containing text and/or PHP instructions and outputting another stream of data. Most commonly the output will be <b>HTML,</b> although it could be JSON, XML or binary data such as image or audio formats. Since PHP 4, the PHP parser compiles input to produce bytecode for processing by the Zend Engine, giving improved performance over its interpreter predecessor.|$|E
5|$|SAS {{data can}} be {{published}} in <b>HTML,</b> PDF, Excel and other formats using the Output Delivery System, which was first introduced in 2007. The SAS Enterprise Guide is SAS's point-and-click interface. It generates code to manipulate data or perform analysis automatically and does not require SAS programming experience to use.|$|E
5|$|A URL is a URI that, in {{addition}} to identifying a web resource, specifies the means of acting upon or obtaining the representation of it, i.e. specifying both its primary access mechanism and network location. For example, the URL http://example.org/wiki/Main_Page refers to a resource identified as /wiki/Main_Page whose representation, {{in the form of}} <b>HTML</b> and related code, is obtainable via the Hypertext Transfer Protocol (http:) from a network host whose domain name is example.org.|$|E
5|$|Acid2 {{is a test}} page {{published}} and promoted by the Web Standards Project to expose web page rendering flaws in web browsers and other applications that render <b>HTML.</b> Named after the acid test for gold, it {{was developed in the}} spirit of Acid1, a relatively narrow test of compliance with the Cascading Style Sheets 1.0 (CSS1) standard, and was released on 13 April 2005. As with Acid1, an application passes the test if the way it displays the test page matches a reference image.|$|E
5|$|Data URIs: The actual {{images that}} form the eyes are encoded as data URIs, which allow {{multimedia}} to be embedded in web pages rather than stored as a separate file. Acid2 tests the most common case, where a binary image is base64-encoded into text and then that encoded text is included in a data URI in the web page. Although the IETF published the data URI specification in 1998, they never formally adopted it as a standard. Nonetheless, the <b>HTML</b> 4.01 specification references the data URI scheme, and data URI support has now been implemented in most browsers.|$|E
5|$|Engelbart was Founder Emeritus of the Doug Engelbart Institute, {{which he}} founded in 1988 with his {{daughter}} Christina Engelbart, who is Executive Director. The Institute promotes Engelbart's philosophy for boosting Collective IQ—the concept of dramatically improving how we can solve important problems together—using a strategic bootstrapping approach for accelerating our progress toward that goal. In 2005, Engelbart received a National Science Foundation grant to fund the open source HyperScope project. The Hyperscope team built a browser component using Ajax and Dynamic <b>HTML</b> designed to replicate Augment's multiple viewing and jumping capabilities (linking within and across various documents).|$|E
5|$|PHP code may be {{embedded}} into <b>HTML</b> or HTML5 markup, {{or it can}} be used {{in combination}} with various web template systems, web content management systems and web frameworks. PHP code is usually processed by a PHP interpreter implemented as a module in the web server or as a Common Gateway Interface (CGI) executable. The web server software combines the results of the interpreted and executed PHP code, which may be any type of data, including images, with the generated web page. PHP code may also be executed with a command-line interface (CLI) and can be used to implement standalone graphical applications.|$|E
5|$|Page and Brin {{used the}} former's basic <b>HTML</b> {{programming}} skills {{to set up}} a simple search page for users, as they did not have a web page developer to create anything visually elaborate. They also began using any computer part they could find to assemble the necessary computing power to handle searches by multiple users. As their search engine grew in popularity among Stanford users, it required additional servers to process the queries. In August 1996, the initial version of Google, still on the Stanford University website, was made available to Internet users.|$|E
5|$|The Arena browser (also {{known as}} the Arena WWW Browser) is an early (now discontinued) testbed Web browser and Web {{authoring}} tool for Unix. Originally authored by Dave Raggett in 1993, the browser continued its development at CERN and the World Wide Web Consortium (W3C) and subsequently by Yggdrasil Computing. As a testbed browser, Arena was used in testing the implementation for <b>HTML</b> version 3.0, Cascading Style Sheets (CSS), Portable Network Graphics (PNG), and libwww. Arena was widely used and popular {{at the beginning of}} the World Wide Web.|$|E
5|$|The website's format {{was derived}} from Commodore 64 {{arrangement}} website C64Audio.com, then a host for many fan arrangements; Lloyd chose to have OverClocked ReMix expand the focus to all games regardless of game system. Originally coded in basic <b>HTML</b> and sporting an orange color scheme, and located at remix.overclocked.org, a subdomain of Lloyd's webcomic, the site underwent several visual redesigns before moving to www.ocremix.org in July 2003 and its present design in 2004. Initially the site was hosted by ZTNet and run directly by Lloyd; in 2006, it became self-sufficient and moved to dedicated hosting, and, in 2007, Lloyd registered OverClocked ReMix as a limited liability company.|$|E
5|$|While he was {{associate}} chairman, Kotok was {{a member}} of the W3C management team, and worked closely with the W3C Advisory Board. He helped to establish a new W3C office in India and worked with an internal task force to reduce membership fees in developing countries. He was a major contributor to the W3C Patent Policy and chaired Patent Advisory Groups, including one for <b>HTML.</b> He briefly served as Domain Leader of the Technology and Society Domain which at that time included W3C's activity in digital signatures, electronic commerce, public policy, PICS, RDF metadata, privacy, and security.|$|E
5|$|Other {{features}} include Bloodhound technology, which looks for virus-like behavior to better find zero day viruses. The Security Inspector looks for common vulnerabilities, including insecure user account passwords and browser insecurities. Advertisement blocking rewrites a website's <b>HTML</b> to prevent advertisements from being displayed. Parental controls, an optional component, can block certain programs from accessing the Internet, such as IM clients, and restrict newsgroup access. Restrictions {{can be assigned}} to different Windows users accounts. Sites are classified in 31 categories, and the four profiles which can be assigned each block different categories of sites. Supervisors define exceptions, add global blocked sites, or block all access to sites not on a user-created whitelist. Both PC Magazine and PC Pro noted the exclusion of time-based restrictions. Information filtering can be controlled on a per-user basis.|$|E
5|$|Perl's text-handling {{capabilities}} can be {{used for}} generating SQL queries; arrays, hashes, and automatic memory management make it easy to collect and process the returned data. For example, in Tim Bunce's Perl DBI application programming interface (API), the arguments to the API can be the text of SQL queries; thus it is possible to program in multiple languages at the same time (e.g., for generating a Web page using <b>HTML,</b> JavaScript, and SQL in a here document). The use of Perl variable interpolation to programmatically customize each of the SQL queries, and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting data sets from each SQL query, allows a high-level mechanism for handling large amounts of data for post-processing by a Perl subprogram.|$|E
25|$|XML (and hence XHTML) defines an &apos; {{character}} {{entity reference}} for the ASCII typewriter apostrophe. No equivalent entity {{is defined in}} the <b>HTML</b> 4 standard, despite all the other predefined character entities from XML being defined in <b>HTML.</b> If it cannot be entered literally in <b>HTML,</b> a numeric character reference could be used instead, such as &#x27; or &#39;. &apos; is officially supported in <b>HTML</b> since <b>HTML</b> 5.|$|E
25|$|XHTML was {{developed}} to make <b>HTML</b> more extensible and increase interoperability with other data formats. In addition, browsers were forgiving of errors in <b>HTML,</b> and most websites were displayed despite technical errors in the markup; XHTML introduced stricter error handling. <b>HTML</b> 4 was ostensibly an application of Standard Generalized Markup Language (SGML); however the specification for SGML was complex, and neither web browsers nor the <b>HTML</b> 4 Recommendation were fully conformant to it. The XML standard, approved in 1998, provided a simpler data format closer in simplicity to <b>HTML</b> 4. By shifting to an XML format, it was hoped <b>HTML</b> would become compatible with common XML tools; to work…}} servers and proxies {{would be able to}} transform content, as necessary, for constrained devices such as mobile phones.|$|E
25|$|In 1994, Raggett {{organized}} a Birds of a Feather (BOF) on HTTP, {{and went on}} to launch and chair the IETF HTTP working group, as well as driving early standards work on HTML+, <b>HTML</b> 3.0, <b>HTML</b> tables, and working with NCSA on the design of <b>HTML</b> forms.|$|E
25|$|Supports <b>HTML</b> 4.01, <b>HTML</b> 5, CSS Level 1, Level 2 and Level 3, XML 1.0, and DOM Level 1, {{with minor}} {{implementation}} gaps.|$|E
25|$|<b>HTML</b> in e-mails is now {{rendered}} {{using the}} Microsoft Word rendering engine which disallows several <b>HTML</b> tags like object, script, iframe etc. {{along with several}} CSS properties.|$|E
25|$|Each element {{added to}} a My Map has an {{editable}} tag. This tag can contain text, rich text or <b>HTML.</b> Embeddable video and other content can be included within the <b>HTML</b> tag.|$|E
25|$|With OpenID 1.0, the relying party then {{requests}} the <b>HTML</b> resource {{identified by}} the URL and reads an <b>HTML</b> link tag to discover the OpenID provider's URL (e.g. http://openid.example.org/openid-auth.php). The relying party also discovers whether to use a delegated identity (see below).|$|E
25|$|With <b>HTML</b> {{up to and}} {{including}} <b>HTML</b> 4.01 and XHTML, there were four valid attributes: content, http-equiv, name and scheme. Under <b>HTML</b> 5 there are now five valid attributes, charset having been added. http-equiv is used to emulate an HTTP header, and name to embed metadata. The value of the statement, in either case, is contained in the content attribute, which is the only required attribute unless charset is given. charset is used to indicate the character set of the document, and is available in HTML5.|$|E
25|$|Any kind of dash {{can be used}} {{directly}} in an <b>HTML</b> document, but <b>HTML</b> also lets them be entered using character references. The em dash and the en dash are special in {{that they can be}} written using character entity references as &mdash; and &ndash;, respectively.|$|E
25|$|Static pages {{instead of}} dynamic <b>HTML.</b>|$|E
25|$|ATAG {{is a set}} of {{guidelines}} for developers of any kind of authoring tool for Web content: simple <b>HTML</b> editors, tools that export content for use on the Web (for example, word processors that can save as <b>HTML),</b> tools that produce multimedia, content management systems, learning management systems, social media, etcetera.|$|E
25|$|Because <b>HTML</b> {{documents}} have a flat, serial {{structure that}} mixes control statements, formatting, {{and the actual}} content, any non-validated user-supplied data included in the resulting page without proper <b>HTML</b> encoding, may lead to markup injection. A classic example of a potential vector is a site search engine: if one searches for a string, the search string will typically be redisplayed verbatim on the result page to indicate what was searched for. If this response does not properly escape or reject <b>HTML</b> control characters, a cross-site scripting flaw will ensue.|$|E
25|$|Since January 2000, all W3C Recommendations for <b>HTML</b> {{have been}} based on XML rather than SGML, using the {{abbreviation}} XHTML (Extensible HyperText Markup Language). The language specification requires that XHTML Web documents must be well-formed XML documents. This allows for more rigorous and robust documents while using tags familiar from <b>HTML.</b>|$|E
