766|1453|Public
25|$|The oldest schema {{language}} for XML is the <b>Document</b> <b>Type</b> Definition (DTD), inherited from SGML.|$|E
25|$|Internet Explorer6 {{also uses}} quirks mode {{if there is}} an XML {{declaration}} prior to the <b>document</b> <b>type</b> declaration.|$|E
25|$|DTDs {{define a}} <b>document</b> <b>type</b> {{rather than the}} types used by a namespace, thus {{grouping}} all constraints for a document in a single collection.|$|E
5000|$|In {{the data}} dimension, <b>document</b> <b>types</b> {{used in the}} {{collaboration}} are defined and related to internally used <b>document</b> <b>types.</b>|$|R
40|$|Abstract—Secure copy machine {{which allows}} reuse copied {{documents}} with sorting capability {{in accordance with}} the <b>document</b> <b>types.</b> Through experiments with a variety of <b>document</b> <b>types,</b> it is found that copied documents can be shared and stored in database in accordance with automatically classified <b>document</b> <b>types</b> securely. The copied documents are protected by data hiding based on wavelet Multi Resolution Analysis: MRA. Keywords—data hiding; MPA; wavelet; secure cop...|$|R
5000|$|Added <b>document</b> <b>types</b> for payment: Remittance Advice, Statement ...|$|R
25|$|The XML {{specification}} {{defines a}} valid XML document as a well-formed XML document which also {{conforms to the}} rules of a <b>Document</b> <b>Type</b> Definition (DTD).|$|E
25|$|In {{addition}} to being well-formed, an XML document may be valid. This means that it contains {{a reference to a}} <b>Document</b> <b>Type</b> Definition (DTD), and that its elements and attributes are declared in that DTD and follow the grammatical rules for them that the DTD specifies.|$|E
25|$|Context-free grammars {{arise in}} {{linguistics}} {{where they are}} used to describe the structure of sentences and words in a natural language, and they were in fact invented by the linguist Noam Chomsky for this purpose, but have not really lived up to their original expectation. By contrast, in computer science, as the use of recursively-defined concepts increased, they were used more and more. In an early application, grammars are used to describe the structure of programming languages. In a newer application, they are used in {{an essential part of the}} Extensible Markup Language (XML) called the <b>Document</b> <b>Type</b> Definition.|$|E
50|$|Used as {{the default}} font for most <b>document</b> <b>typing</b> applications.|$|R
5000|$|... #Subtitle level 4: <b>Document</b> <b>types</b> {{originally}} {{defined in}} UBL 1.0 (2004) ...|$|R
40|$|In {{this paper}} we discuss Columbia's {{summarization}} system for DUC, covering the different component summarizers that handle different <b>document</b> <b>types,</b> the router that decides which summarizer to use, and a preliminary analysis of evaluation results relative to other systems and of {{factors such as the}} <b>document</b> <b>types</b> and the model summaries that affect the evaluation...|$|R
25|$|SGML {{specified}} a syntax {{for including}} the markup in documents, {{as well as}} one for separately describing what tags were allowed, and where (the <b>Document</b> <b>Type</b> Definition (DTD) or schema). This allowed authors to create and use any markup they wished, selecting tags that made the most sense to them and were named in their own natural languages. Thus, SGML is properly a meta-language, and many particular markup languages are derived from it. From the late '80s on, most substantial new markup languages have been based on SGML system, including for example TEI and DocBook. SGML was promulgated as an International Standard by International Organization for Standardization, ISO 8879, in 1986.|$|E
2500|$|Constraints {{within the}} Open Packaging Conventions {{that apply to}} each <b>document</b> <b>type</b> ...|$|E
2500|$|When an SGML {{comment or}} other unrecognized content appears before the <b>document</b> <b>type</b> {{declaration}} ...|$|E
5000|$|During development, a {{multitude}} of <b>document</b> <b>types</b> will play a significant role: ...|$|R
5000|$|Support for {{standard}} <b>document</b> <b>types</b> (e.g. Microsoft PowerPoint, Microsoft Word, OpenDocument, etc.) ...|$|R
5000|$|... #Subtitle level 4: <b>Document</b> <b>types</b> {{proposed}} for UBL 2.2 (2017) - http://docs.oasis-open.org/ubl/UBL-2.2.html ...|$|R
2500|$|When an HTML4.0 Transitional or Frameset <b>document</b> <b>type</b> {{declaration}} is {{used and}} a system identifier (URI) is not present; ...|$|E
2500|$|Internet Explorer {{versions}} 6 and onward are {{not affected}} by the bug if the page contains certain HTML <b>document</b> <b>type</b> declarations. These versions maintain the buggy behavior when in quirks mode for reasons of backward compatibility. For example, quirks mode is triggered: ...|$|E
2500|$|Programs that {{identify}} file types by leading characters {{may fail to}} identify the file if a UTF-8 BOM is present even if the user of the file could skip the BOM. An example is the Unix shebang syntax. Another example is Internet Explorer which will render pages in standards mode only when it starts with a <b>document</b> <b>type</b> declaration [...]|$|E
30|$|A {{scene is}} a hyperedge {{that can be}} {{displayed}} as hyperarcs. Some hyperarcs contain <b>documents</b> and <b>document</b> <b>types</b> as tail {{and head of the}} given hyperarc representing the transition of documents. Other adjacent hyperarcs contain <b>documents</b> and <b>document</b> <b>types</b> as head and roles and/or actors of interested organization units as tail designating the responsibility for manipulation.|$|R
5000|$|Added <b>document</b> <b>types</b> for {{business}} directories and agreements: Business Card, Digital Agreement, Digital Capability ...|$|R
40|$|A {{number of}} {{important}} use cases for public administration (“e-governance”) applications of legal knowledge-based systems are identified. For each use case, a data flow model is developed showing processes and <b>document</b> <b>types</b> sufficient to implement the use case. Our main goal is to identify <b>document</b> <b>types</b> which, if standardized, would enable a modular set of interoperable components for building legal knowledge-based systems...|$|R
2500|$|Once {{she had all}} of the documents, she {{had to come up}} with a way to {{classify}} them. [...] Building on her work with the Department of Agriculture documents at LAPL, she devised a system of letters and numbers that denoted the department, division, <b>document</b> <b>type,</b> and volume or series (if needed). [...] This system is now generally referred to Superintendent of Documents Classification, or SuDocs. [...] While she was collecting and organizing, Hasse continued to regularly publish not only bibliographies of government publications, but also items of other interest such as [...] "Travel and Exploration" [...] that appeared in List of Books for Girls and Women and Their Clubs.|$|E
2500|$|Berners-Lee {{considered}} HTML an SGML application. The Internet Engineering Task Force (IETF) formally {{defined it}} as such with the mid-1993 publication of the first proposal for an HTML specification: [...] by Berners-Lee and Dan Connolly, which included an SGML <b>Document</b> <b>Type</b> Definition to define the grammar. Many of the HTML text elements {{are found in the}} 1988 ISO technical report TR 9537 Techniques for using SGML, which in turn covers the features of early text formatting languages such as that used by the RUNOFF command developed in the early 1960s for the CTSS (Compatible Time-Sharing System) operating system. These formatting commands were derived from those used by typesetters to manually format documents. Steven DeRose argues that HTML's use of descriptive markup (and influence of SGML in particular) was {{a major factor in the}} success of the Web, because of the flexibility and extensibility that it enabled. HTML became the main markup language for creating web pages and other information that can be displayed in a web browser, and is quite likely the most used markup language in the world today.|$|E
50|$|In {{order to}} {{validate}} an XHTML document, a <b>Document</b> <b>Type</b> Declaration, or DOCTYPE, may be used. A DOCTYPE declares to the browser the <b>Document</b> <b>Type</b> Definition (DTD) {{to which the}} document conforms. A <b>Document</b> <b>Type</b> Declaration should be placed before the root element.|$|E
50|$|<b>Document</b> <b>types</b> include CRS Reports, {{appropriations}} Reports (usually {{released as}} a Long Report), and Congressional distribution memoranda.|$|R
5000|$|CAD {{contains}} U.S. policy proposals {{directed at}} climate change. CAD Primary <b>document</b> <b>types</b> contained in CAD include: ...|$|R
5000|$|Added <b>document</b> <b>types</b> for fulfillment: Bill of Lading, Certificate of Origin, Forwarding Instructions, Packing List, Transportation Status, Waybill ...|$|R
50|$|A <b>document</b> <b>type</b> {{definition}} (DTD) {{is a set}} of markup declarations {{that define}} a <b>document</b> <b>type</b> for an SGML-family markup language (SGML, XML, HTML).|$|E
50|$|In HTML and XML, {{a system}} {{identifier}} is a fragmentless URI reference. It typically {{occurs in a}} <b>Document</b> <b>Type</b> Declaration. In this context, {{it is intended to}} identify a <b>document</b> <b>type</b> which is used exclusively in one application, whereas a public identifier identifies a <b>document</b> <b>type</b> that may span more than one application.|$|E
50|$|In computing, AAP DTD is a <b>Document</b> <b>Type</b> Definition for a {{standard}} SGML <b>document</b> <b>type</b> for scientific documents, {{defined by the}} Association of American Publishers.|$|E
40|$|In the {{pharmaceutical}} industry, products {{have to be}} described by a range of <b>document</b> <b>types</b> with overlapping content. Moreover, much of this documentation has to be produced in many languages. This situation is commonplace in many commercial domains, and leads to well-known problems in maintaining a set of related documents and their translations. We describe a potential solution explored in the PILLS project. All relevant knowledge about a product is entered only once, through a natural-language interface to a knowledge base. From this `master model', specialised models {{for a range of}} <b>document</b> <b>types</b> are derived automatically; from each specialised model, documents are generated automatically in all supported languages. As an illustration of this approach, the PILLS demonstrator generates three medical <b>document</b> <b>types</b> in English, German and French...|$|R
5000|$|Added <b>document</b> <b>types</b> for billing: Credit Note, Debit Note, Freight Invoice, Reminder, Self Billed Credit Note, Self Billed Invoice ...|$|R
5000|$|Added <b>document</b> <b>types</b> for Vendor Managed Inventory: Instruction for Returns, Inventory Report, Product Activity, Retail Event, Stock Availability Report ...|$|R
