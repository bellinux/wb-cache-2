155|527|Public
50|$|After {{launching}} a successful MAC <b>flooding</b> <b>attack,</b> a malicious user {{can use a}} packet analyzer to capture sensitive data being transmitted between other computers, which would not be accessible were the switch operating normally. The attacker may also follow up with an ARP spoofing attack which {{will allow them to}} retain access to privileged data after switches recover from the initial MAC <b>flooding</b> <b>attack.</b>|$|E
50|$|In {{a typical}} MAC <b>flooding</b> <b>attack,</b> a switch is fed many Ethernet frames, each {{containing}} different source MAC addresses, by the attacker. The {{intention is to}} consume the limited memory set aside in the switch to store the MAC address table.|$|E
50|$|The {{effect of}} this attack may vary across implementations, however the desired effect (by the attacker) is to force {{legitimate}} MAC addresses out of the MAC address table, causing significant quantities of incoming frames to be flooded out on all ports. It is from this flooding behavior that the MAC <b>flooding</b> <b>attack</b> gets its name.|$|E
40|$|Abstract:- Distributed denial-of-service (DDOS) <b>flood</b> <b>attacks</b> {{remain a}} big issue in network security. Real events of DDOS <b>flood</b> <b>attacks</b> show that an {{attacked}} site (e. g., server) usually may not be overwhelmed immediately at the moment attack packets arrive at that site but sometime late. Therefore, a site has a performance to resist DDOS <b>flood</b> <b>attacks.</b> To test such a performance, data synthesizer is desired. This paper introduces a principle to synthesize packet series according to a given value of the Hurst parameter for performance test of anti-DDOS <b>flood</b> <b>attacks.</b> Key-Words:- Long-range dependent traffic, testing, distributed denial-of-service <b>flood</b> <b>attacks,</b> synthesizing traffic, intrusion tolerance...|$|R
40|$|Abstract: Existing {{detection}} methods against SYN <b>flooding</b> <b>attacks</b> are effective {{only at the}} later stages when attacking signatures are obvious. In this paper an early stage detecting method (ESDM) is proposed. The ESDM is a simple but effective method to detect SYN <b>flooding</b> <b>attacks</b> at the early stage. In the ESDM the SYN traffic is forecasted by autoregressive integrated moving average mod-el, and non-parametric cumulative sum algorithm is used to find the SYN <b>flooding</b> <b>attacks</b> according to the forecasted traffic. Trace-driven simulations show that ESDM is accurate and efficient to detect the SYN <b>flooding</b> <b>attacks.</b> Key words: denial-of-service attacks; autoregres-sive integrated moving average model; non-para-metric cumulative sum algorithm I...|$|R
40|$|<b>Flood</b> <b>attacks</b> means {{a network}} becomes so weighed down with packets, {{caused by the}} attackers. It {{prevents}} packets being sent/received between the nodes in the network. There are many methods adopted to prevent <b>flood</b> <b>attacks</b> in other networks, but none has been installed successfully for DTN’s. Disruption tolerant network is a network, developed {{in such a manner}} that intermittent communication problems have very low effect on the outcome of the result. However, due to the limited network resources in this network such as buffer space and bandwidth, it is liable to <b>flood</b> <b>attacks.</b> In order to protect resources and defend against <b>flood</b> <b>attacks,</b> the rate limiting technique should be adopted. In which each node must be set up with a restriction over the number of packets it can send to the network and number of duplicates that can be created for each packets, such as rate limit L and rate limit R respectively. However <b>flood</b> <b>attacks</b> are caused even in application level resulting in losses of resources such as CPU and sockets. So, technique for detection of application level <b>floods</b> <b>attacks</b> is implemented by verifying DNS query with a specific tool and validating it with mysql database...|$|R
50|$|An Interest <b>Flooding</b> <b>Attack</b> (IFA) is a {{denial-of-service attack}} in an Information-centric network (or Content-Centric Networking (CCN) or Named Data Networking (NDN)). An {{attacker}} requests existing or non-existing content {{in order to}} overload the distribution infrastructure. This can be implemented by sending Interest packets, which are not resolved at all or not resolved fast enough and thus lead to malicious CPU or memory consumption.|$|E
40|$|Mobile Adhoc Networks (MANET) are new {{paradigm}} of wireless networks providing unrestricted mobility to nodes with no fixed or centralized infrastructure. Each node participating in the network acts as router to route the data from source to destination. This characteristic makes MANET more vulnerable to routing attacks. <b>Flooding</b> <b>attack</b> is one such attack which consumes more resource like bandwidth, battery power, etc. Reactive routing protocols like Adhoc On Demand Distance Vector (AODV) and Dynamic Source Routing (DSR) used in MANET has route discovery scheme and this makes it more easy for malicious node to launch <b>flooding</b> <b>attack</b> by flooding the route request packets(RREQ) in the network. In this paper, the behavior of <b>flooding</b> <b>attack</b> and the performance impact of <b>flooding</b> <b>attack</b> on AODV protocol is studied. The NS 2 network simulator is {{used to evaluate the}} impact of <b>flooding</b> <b>attack</b> on AODV...|$|E
40|$|SYN {{flooding}} attacks generate enormous packets by a {{large number}} of agents and can easily exhaust the computing and communication resources of a victim within a short period of time. In this paper, we propose a lightweight method for detecting SYN <b>flooding</b> <b>attack</b> by non-parametric cumulative sum algorithm. We experiment with real SYN <b>flooding</b> <b>attack</b> data set in order to evaluate our method. The results show that our method can detect SYN <b>flooding</b> <b>attack</b> very well...|$|E
30|$|Since the {{inception}} of DDoS <b>flooding</b> <b>attacks,</b> several defense mechanisms have been proposed to date in the literature [41]. This section highlights the DDoS <b>flooding</b> <b>attacks,</b> followed by a discussion on the application of Hadoop to combat network anomalies, Botnet- and DDoS-related attacks.|$|R
30|$|Wireless mesh {{networks}} are highly susceptible to Distributed Denial-of-Service attacks {{due to its}} self-configuring property. <b>Flooding</b> DDOS <b>attack</b> is one form of collaborative attacks and the transport layer of such {{networks are}} extremely affected. In this paper we propose ColShield, an effective and collaborative protection shield which not only detects <b>flooding</b> <b>attacks</b> but also prevents the <b>flooding</b> <b>attacks</b> through clever spoof detection. ColShield consists of Intrusion Protection and Detection Systems (IPDS) located at various points in the network which collaboratively defend <b>flooding</b> <b>attacks.</b> ColShield detects the attack node and its specific port number under attack. In {{order to reduce the}} burden on a single global IPDS, the system uses several local IPDS for the collaborative mitigation of <b>flooding</b> <b>attacks.</b> The evaluation of ColShield is done using extensive simulations and is proved to be effective in terms of false positive ratio, packet delivery ratio, communication overhead and attack detection time.|$|R
40|$|Abstract—Many {{smart grid}} {{communications}} are delay sensitive and have very strict timing requirements for message deliveries. For example, trip protection messages must {{be delivered to}} the destination within 3 ms according to IEC 61850. Such time-critical communications are vulnerable to <b>flooding</b> <b>attacks</b> which attempt to increase message delivery delay through congesting the network channel and exhausting the computation resources of the communicating nodes. However, {{there is a lack}} of understanding on how much <b>flooding</b> <b>attacks</b> affect message delivery delays. In this paper, we conduct experimental studies to investigate how <b>flooding</b> <b>attacks</b> affect message delivery delays for time-critical communications in smart grid. Our experiments are based on both wireless networks in a lab and wired networks in a real, industry-standard electric power facility. Experimental results show that even low-rate <b>flooding</b> <b>attacks</b> can significantly increase the message delivery delays, especially when wireless networks are used. I...|$|R
40|$|A <b>flooding</b> <b>attack</b> in {{wireless}} sensor networks is a type {{of threat}} that shortens the lifetimes of the sensor networks. Although <b>flooding</b> <b>attack</b> prevention techniques have been proposed, if a continuous <b>flooding</b> <b>attack</b> occurs, the sensor node energy is depleted during detection. In this paper, we use multi-path routing to solve this problem. In order to balance the load of the sensor node, energy balancing of the sensor node is controlled by determining the number of pathways using fuzzy logic. By adjusting the energy balancing of the sensor nodes, the number of energy-exhausting sensor nodes can be reduced. As a result, when a <b>flooding</b> <b>attack</b> occurs, the energy efficiency of the sensor node is increased by determining the number of pathways...|$|E
40|$|Abstract. DATA <b>flooding</b> <b>attack</b> is {{a serious}} menace for the {{security}} of on-demand routing protocol in Ad Hoc networks. In the paper, on the basis of three typical on-demand routing protocols AODV, DSR and TORA, we present a special security scheme against data <b>flooding</b> <b>attack.</b> Then we simulate the scheme on NS 2 platform and compare two performance parameters before and after using the scheme: average delay and packet delivery rate. The results indicate that this project is comparatively effective to resist the DATA <b>flooding</b> <b>attack...</b>|$|E
40|$|Abstract: Mobile means {{moving and}} ad hoc means {{temporary}} without any fixed infrastructure. Hence, mobile ad hoc network {{is a temporary}} network in which nodes are moving without any fixed infrastructure or centralized administration. MANETs are vulnerable to security attacks because of the decentralized authentication. Black hole, gray hole, worm hole, flooding are such type of security threats that affects the network. This paper presents a review on MANET, AODV routing protocol, <b>flooding</b> <b>attack</b> and comparison of various detection and prevention techniques of <b>flooding</b> <b>attack.</b> Among all this techniques, RFAP technique can easily find the attacker node and protect the network from RREQ <b>flooding</b> <b>attack...</b>|$|E
25|$|Related {{exploits}} include SMS <b>flooding</b> <b>attacks</b> {{and black}} fax or fax loop transmission.|$|R
40|$|AbstractVoice over Internet Protocol (VoIP) {{has become}} widely uses RTP as its media {{protocol}} that delivers multimedia sessions over IP based network. RTP is {{the hub of}} media <b>flooding</b> <b>attacks</b> that causes inconsistency of media transmitted which degrading Quality of Service (QoS) and unnecessary resource consumption in servers. Thus, the motto of the paper is revolved around detection of RTP <b>flooding</b> <b>attacks.</b> In this paper, Packet Inspection using Statistical (PIS) technique is proposed that detects RTP <b>flooding</b> <b>attacks.</b> The experimental {{results show that the}} proposed PIS technique has a detection rate of more than 98 % with False Positive (FP) of less than 0. 1 %...|$|R
40|$|Distributed denial-of-service (DDoS) <b>flood</b> <b>attack</b> remains great {{threats to}} the Internet. This kind of attack consumes {{a large amount of}} network {{bandwidth}} or occupies network equipment resources by flooding them with packets from the machines distributed all over the world. To ensure the network usability and reliability, real-time and accurate detection of these attacks is critical. To date, various approaches have been proposed to detect these attacks, but with limited success when they are used in the real world. This paper presents a method that can real-time identify the occurrence of the DDoS <b>flood</b> <b>attack</b> and determine its intensity using the fuzzy logic. The proposed process consists of two stages: (i) statistical analysis of the network traffic time series using discrete wavelet transform (DWT) and Schwarz information criterion (SIC) to find out the change point of Hurst parameter resulting from DDoS <b>flood</b> <b>attack,</b> and then (ii) adaptively decide the intensity of the DDoS <b>flood</b> <b>attack</b> by using the intelligent fuzzy logic technology to analyze the Hurst parameter and its changing rate. The test results by NS 2 -based simulation with various network traffic characteristics and attacks intensities demonstrate that the proposed method can detect the DDoS <b>flood</b> <b>attack</b> timely, effectively and intelligently. Povzetek: Opisan je postopek za prepoznavo spletnega napada DDoS s pomočjo mehke logike. ...|$|R
40|$|Mobile ad hoc {{are gaining}} {{popularity}} because of availability of low cost mobile devices {{and its ability}} to provide instant wireless networking capabilities where implementation of wired network is not possible or costly. MANETs are vulnerable to various types of attack because of its features like continuous changing topology, resource constraints and unavailability of any centralized infrastructure. Many denial of service type of attacks are possible in the MANET and one of these type attack is <b>flooding</b> <b>attack</b> in which malicious node sends the useless packets to consume the valuable network resources. <b>Flooding</b> <b>attack</b> is possible in all most all on demand routing protocol. In this paper we present a novel technique to mitigate the effect of RREQ <b>flooding</b> <b>attack</b> in MANET using trust estimation function in DSR on demand routing protocol...|$|E
30|$|In the following, we {{will discuss}} the {{security}} features of our protocols, including Route disruption and diversion attack, <b>flooding</b> <b>attack,</b> and impersonation attack.|$|E
30|$|<b>Flooding</b> <b>attack</b> resends {{replicate}} of packets received previously {{from the}} node members. This flooding consumes larger bandwidth and power that might terminate network functionalities.|$|E
40|$|DDoS {{attack is}} {{generated}} by the attacker on the server, so that the genuine clients will {{not have access to}} the services provided by server. To protect servers from such attacks, large variety of security systems are available. The best security system can be selected by comparing the performance of these systems. There is a need to generate attacks at very high speed to test the performance of security system. This manuscript presents the design of FPGA based reconfigurable hardware System-on-Chip (SoC), that can generate the SYN <b>flood</b> <b>attacks</b> at high speed in real time. The SoC SYN <b>flood</b> <b>attack</b> is implemented using the soft core NIOS II processor, Triple_Speed Ethernet, etc. The manuscript also compares the attacks generated using such hardware based SoC SYN flood attacker with the SYN <b>flood</b> <b>attacks</b> generated using purely software based tool hping 3. It is found that the attacks generated using FPGA based system is much faster than software based tool. The same hardware design can be used to generate many different types of attacks such as spoofed, non-spoofed, layer 3, layer 4 <b>attacks</b> like TCP <b>flood</b> <b>attack,</b> UDP <b>attack,</b> ICMP <b>flood</b> <b>attack,</b> TCP SYN-ACK attack, TCP FIN-ACK attack, etc. Such attacks are essential to benchmark the security systems. The proposed technique can be used as industry standard to benchmark the performance of the security systems...|$|R
5000|$|Validation and {{acknowledgment}} mechanisms {{protect against}} <b>flooding</b> <b>attacks</b> and provide notification of duplicated or missing data chunks.|$|R
50|$|Software such as Low Orbit Ion Cannon and UDP Unicorn {{can be used}} {{to perform}} UDP <b>flooding</b> <b>attacks.</b>|$|R
40|$|Multi-hop {{wireless}} {{networks are}} normally affected by TCP SYN flooding and IP address spoofing attacks. TCP SYN flooding occurs while establishing a TCP connection for data transmission.   But, {{even after a}} TCP connection is established, TCP protocol is flooded by a novel connection <b>flooding</b> <b>attack</b> which aims at consuming the entire bandwidth allocated to a network. Although effective techniques exist to combat SYN flooding, no single standard remedy for defending this novel <b>flooding</b> <b>attack</b> on TCP has emerged. In this paper, we describe the attack and provide an overview and assessment of existing defense mechanisms and we propose a novel defense mechanism which not only involve in defending such <b>flooding</b> <b>attack</b> but also prevents IP spoofing which is the gateway for such flooding attacks. The performance analysis is carried out and we prove {{the effectiveness of the}} proposed defense mechanism in terms of time delay and false positive rates...|$|E
40|$|The {{success in}} {{detecting}} Distributed Denial of Service (DDoS) flooding attacks is {{highly dependent on}} {{the quality and quantity}} of the covered flows by the traffic monitoring mechanism that is employed in any DDoS defense mechanism. In this paper, we propose DiCoTraM, a DDoS <b>flooding</b> <b>attack</b> tailored distributed and coordinated traffic monitoring mechanism that centrally and periodically coordinates the monitoring responsibilities and distributes them among all the monitoring devices within each autonomous system (AS) while satisfying the monitoring devices’ memory constraints. DiCoTraM monitors traffic flows in such a way that the flows intended for the same destination (possible network/transport level DDoS <b>flooding</b> <b>attack</b> flows) are analyzed together in the same monitoring device if there is enough memory to cover those flows on the monitoring device; hence, this can enable distributed detection mechanisms in place to analyze the monitored flows. The enabled distributed detection leads to reduced communication overhead that is a problem in centralized detection mechanisms as they need to collect centrally all the flows for analysis. Moreover, the centralized coordination structure of DiCoTraM eliminates the redundant flow monitoring among the routers. We simulate and compare DiCoTraM with other traffic monitoring mechanisms in terms of: the overall flow coverage, and the DDoS <b>flooding</b> <b>attack</b> flow coverage. The experimental results show that DiCoTraM, compared to other monitoring mechanisms, covers more DDoS <b>flooding</b> <b>attack</b> flows and it has reasonable overall flow coverage...|$|E
30|$|In <b>flooding</b> <b>attack,</b> a {{malicious}} node sends many {{connection request}} to a susceptible node, rendering the node or the resource useless. For instance, a joint network {{request to the}} coordinator node.|$|E
40|$|Distributed Denial of Service <b>flooding</b> <b>attacks</b> {{are one of}} {{the biggest}} {{challenges}} to the availability of online services today. These DDoS attacks overwhelm the victim with huge volume of traffic and render it incapable of performing normal communication or crashes it completely. If there are delays in detecting the <b>flooding</b> <b>attacks,</b> nothing much can be done except to manually disconnect the victim and fix the problem. With the rapid increase of DDoS volume and frequency, the current DDoS detection technologies are challenged to deal with huge attack volume in reasonable and affordable response time. In this paper, we propose HADEC, a Hadoop based Live DDoS Detection framework to tackle efficient analysis of <b>flooding</b> <b>attacks</b> by harnessing MapReduce and HDFS. We implemented a counter-based DDoS detection algorithm for four major <b>flooding</b> <b>attacks</b> (TCP-SYN, HTTP GET, UDP and ICMP) in MapReduce, consisting of map and reduce functions. We deployed a testbed to evaluate the performance of HADEC framework for live DDoS detection. Based on the experiments we showed that HADEC is capable of processing and detecting DDoS attacks in affordable time...|$|R
40|$|The aim of {{distributed}} denial-of-service (DDOS) <b>flood</b> <b>attacks</b> is {{to overwhelm}} the attacked site or to make its service performance deterioration considerably by sending flood packets to the target from the machines distributed all over the world. This {{is a kind of}} local behavior of traffic at the protected site because the attacked site can be recovered to its normal service state sooner or later even though it is in reality overwhelmed during attack. From a view of mathematics, it can be taken as a kind of short-range phenomenon in computer networks. In this paper, we use the Hurst parameter (H) to measure the local irregularity or self-similarity of traffic under DDOS <b>flood</b> <b>attack</b> provided that fractional Gaussian noise (fGn) is used as the traffic model. As <b>flood</b> <b>attack</b> packets of DDOS make the H value of arrival traffic vary significantly away from that of traffic normally arriving at the protected site, we discuss a method to statistically detect signs of DDOS <b>flood</b> <b>attacks</b> with predetermined detection probability and false alarm probability...|$|R
40|$|The {{increased}} {{deployment of}} ubiquitous wireless sensor (WSN) networks has exponentially increased the complexity to detect {{wireless sensor network}} attacks and protect against them. Wormhole and hello <b>flood</b> <b>attacks</b> can destabilize or disable wireless sensor networks. In a typical wormhole attack, the attacker receives packets {{at one point in}} the network, forwards them through a wired or wireless link with less latency than the network links, and relays them to another point in the network. Hello <b>flood</b> <b>attack</b> is an important attack on the network layer, in which an adversary, which is not a legal node in the network, can flood hello request to any legitimate node using high transmission power and break the security of WSNs. This paper describes detection algorithms for wireless sensor networks, which detects wormholes and hello <b>flood</b> <b>attacks</b> based on the packet flow rate to base station node in the network. Simulation results show that the algorithms have low false toleration and false detection rates and small time to detect attacks. Keywords: Wireless sensor network, packet flow, cluster topology, wormhole <b>attack,</b> hello <b>flood</b> <b>attack.</b> 1...|$|R
40|$|Abstract: One of the {{majority}} up-and- imminent fields for research is mobile ad hoc network. Mobile means moving and ad hoc means temporary devoid of every fixed infrastructure. Security is high main concern obligation in wireless ad-hoc network. In ad hoc network the communicating nodes sets novel challenges for the security style because it doesn’t unavoidably supply on fixed infrastructure. In the ad-hoc network denial of service attacks (DOS) convincingly start through malicious nodes or attacker which is more vulnerable. Black whole, Gray hole, Worm hole, Flooding is such type of security threats that affects the network. This paper presents a review on MANET, types of attacks. Here we are clarify the event of <b>flooding</b> <b>attack</b> and their exposed {{to the possibility of}} being attacked or harmed effects which give chance to a genuine node for doing dissimilar attacks also. So we get going towards is to recognize the presence or existence of RREQ <b>flooding</b> <b>attack</b> using secure routing protocols and Technique which can easily find the attacker node and protects the network from RREQ <b>Flooding</b> <b>attack...</b>|$|E
40|$|Denial of Service attacks {{is divided}} into two types, one is logic attack and the another one is <b>flooding</b> <b>attack.</b> Logic attack {{exploits}} security holl of the software such as operating system and web server bugs, then causes system crash or degrade in the performance. Logic attack can be defended by up-grading software and/or filtering particular packet sequences. Comparing each packets of the <b>flooding</b> <b>attack</b> and the other normal communication traffics, the only difference is the number of the packets. Flood-ing attack creates enormous amount of packets. Therefore, to protect systems from flooding at-tacks, the same method for logic attacks can not be used. During the network operations, <b>flooding</b> <b>attack</b> is usually detected by using traffic monitor-ing tools such as MRTG. However those tools will not detect the attack automatically. In this paper, the method for automatic de-tection of the flooding attacks is described. For the monitoring tools, AGURI, that we have devel-oped, is used. Using the traffic pattern aggregation method, AGURI can monitor the traffics in a long term and detect flooding attacks. ...|$|E
40|$|Abstract: Security {{issues have}} become {{a major issue in}} recent years due to the {{advancement}} of technology in networking and its use in a destructive way. A number of Defence strategies have been devised to overcome the <b>flooding</b> <b>attack</b> which is prominent in the networking industry due to which depletion of resources Takes place. But these mechanism are not designed in an optimally and effectively and some of the issues have been unresolved. Hence in this paper we suggest a Game theory based strategy to create a series of Defence mechanisms using puzzles. Here the concept of Nash equilibrium is used to handle sophisticated <b>flooding</b> <b>attack</b> to defend distributed attacks from unknown number of source...|$|E
50|$|A UDP <b>flood</b> <b>attack</b> is a denial-of-service (DoS) attack {{using the}} User Datagram Protocol (UDP), a sessionless/connectionless {{computer}} networking protocol.|$|R
30|$|For ICMP-, TCP-SYN-, and HTTP-GET-based <b>flooding</b> <b>attacks,</b> the mapper {{function}} will {{search for}} SYN, ICMP, and HTTP-GET packet type information respectively.|$|R
5000|$|To prevent MAC <b>flooding</b> <b>attacks,</b> network {{operators}} usually {{rely on the}} presence of one or more features in their network equipment: ...|$|R
