2|7|Public
30|$|Train {{partition}} is a fault scenario {{where the}} coaches of a running train decouples, resulting in multiple {{parts of the}} same train. Page TPFMA handles these faults by taking current location and train information as input. The train partition <b>fault</b> <b>flag</b> is set to 1 when partition occurs. It records the last RFID tag number corresponding to the parted train’s rear end that {{is used for the}} estimation of trailing train’s moving authority.|$|E
40|$|We {{present a}} Markov Decision Process (MDP) {{framework}} for computing post-fault reconfiguration {{policies that are}} optimal {{with respect to a}} discounted cost. Our cost function penalizes states that are unsuitable to achieve the remaining objectives of the given mission. The cost function also penalizes states where the necessary goal achievement actions cannot be executed. We incorporate probabilities of missed detections and false alarms for a given fault condition into our cost to encourage the selection of policies that minimize the likelihood of incorrect reconfiguration. To illustrate the implementation of our proposed framework, we present an example inspired by the Far Ultraviolet Spectroscopic Explorer (FUSE) spacecraft with a mission to collect scientific data from 5 targets. Using this example, we also demonstrate that there is a design tradeoff between safe operation and mission completion. Simulation results are presented to illustrate and manage this tradeoff through the selection of optimization parameters. Nomenclature F = Vector of fault flags (F = {f 1, f 2, …, f m 1 }). P = Vector of probabilities of correctness of fault flags (P = {p 1, p 2, …, pm 1 }).) (iMDP = Probability of missed detection for <b>fault</b> <b>flag</b> i. P(MDi) = (1 – pi) (1 – f i)) (iFAP = Probability of false alarm for <b>fault</b> <b>flag</b> i. P(FAi) = (1 – pi) f i. O = Vector of abstracted sensor observations (O = {o 1, o 2, …, om 2 }) ...|$|E
5000|$|... — Kimi Räikkönen {{suffered}} a right rear suspension failure {{during his first}} timed lap. The suspension failure, which was due to a manufacturing <b>fault,</b> red <b>flagged</b> the session and ended Räikkönen's qualifying session.|$|R
40|$|We {{propose that}} zones of {{transient}} high permeability around ancient fault {{systems can be}} predicted if fault segments and likely locations for paleo-rupture arrest are identified. Lode gold deposits in the Kalgoorlie terrane, Western Australia, are the products of focused fluid flow through faulted crust. Deposits in the Mount Pleasant area are clustered on small-displacement structures over; 10 km of the. 50 -km-long Black <b>Flag</b> <b>fault.</b> Field relationships and net slip distribution along the fault indicate that the deposits are adjacent to, but not within, a kilometer-scale dilatant jog, where two segments of the fault are linked. On this basis we infer that the dilatant jog was a long-term rupture-arrest site. The observations are compatible with rupture on segments of the Black <b>Flag</b> <b>fault</b> changing stress in the surrounding crust and bringing specific zones closer to failure. By analogy with active seismogenic fault systems, those zones correspond to regions where aftershocks occur preferentially after failure. Stress-transfer modeling of the system helps explain the location of mineralized smalldisplacement structures around the Black <b>Flag</b> <b>fault</b> and indicates that gold deposits {{in the area are}} located on structures that became transiently permeable and localized fluid flow during repeated aftershock ruptures. Thus, localized through-flow, or mixing of fluids within fault systems, is likely to be controlled by the distribution of aftershocks following rupture events; this distribution is predictable...|$|R
40|$|In {{this paper}} a new {{detection}} and isolation technique for encoder faults is presented for doubly-fed inductiongenerators. This method compares the measured rotor position with an estimation {{from a new}} MRAS observer based onthe computation of both active and reactive power transferred via the air gap. The difference between measured and estimatedposition is monitored by a CUSUM algorithm, while a second observer, based on an internal state-space model,detects anomalous changes in the measured position. A position <b>fault</b> is <b>flagged</b> when both algorithms react. The combinationof sensorless algorithm and fault detection technique is tested experimentally on a 3 kW 4 -pole DFIG for differentworking points. The starting performance of the MRAS observer and its behaviour in case of transients is tested during thesynchronization process of the DFIG. info:eu-repo/semantics/publishe...|$|R
40|$|The {{importance}} of fault tolerance at the processor archi-tecture level {{has been made}} increasingly important due to rapid advancements {{in the design and}} usage of high per-formance devices and embedded processors. System level solutions to the challenge of <b>fault</b> tolerance <b>flag</b> errors and utilize penalty cycles to recover through the re-execution of instructions. This motivates the need for a hybrid technique providing fault detection as well as fault masking, with minimal penalty cycles for recovery from detected errors. We propose three architectural schemes to protect the con-trol logic of microprocessors against Single Event Upsets (SEUs). High fault coverage with relatively low hardware overhead is obtained by using both fault detection with re-covery and fault masking. Control signals are classified a...|$|R
40|$|An {{integrated}} fault-diagnosis algorithm for a motor sensor of in-wheel {{independent drive}} electric vehicles is presented. This paper proposes {{a method that}} integrates the high- and low-level fault diagnoses to improve the robustness and performance of the system. For the high-level fault diagnosis of vehicle dynamics, a planar two-track non-linear model is first selected, and the longitudinal and lateral forces are calculated. To ensure redundancy of the system, correlation between the sensor and residual in the vehicle dynamics is analyzed to detect and separate {{the fault of the}} drive motor system of each wheel. To diagnose the motor system for low-level faults, the state equation of an interior permanent magnet synchronous motor is developed, and a parity equation is used to diagnose the fault of the electric current and position sensors. The validity of the high-level fault-diagnosis algorithm is verified using Carsim and Matlab/Simulink co-simulation. The low-level fault diagnosis is verified through Matlab/Simulink simulation and experiments. Finally, according to the residuals of the high- and low-level <b>fault</b> diagnoses, fault-detection <b>flags</b> are defined. On the basis of this information, an integrated fault-diagnosis strategy is proposed...|$|R
40|$|In {{this thesis}} a new {{approach}} for jet engine Fault Detection and Isolation (FDI) is proposed using ensemble neural networks. Ensemble methods combine various model predictions to reduce the modeling error and increase the prediction accuracy. By combining individual models, more robust and accurate representations are almost always achievable without the need of ad-hoc fine tunings that are required for single model-based solutions. For the purpose of jet engine health monitoring, {{the model of the}} jet engine dynamics is represented using three different stand-alone or individual neural network learning algorithms. Specifically, a dynamic multi-layer perceptron (MLP), a dynamic radial-basis function (RBF) neural network, and a dynamic support vector machine (SVM) are trained to individually model the jet engine dynamics. The accuracy of each stand-alone model in identification of the jet engine dynamics is evaluated. Next, three ensemble-based techniques are employed to represent jet engine dynamics. Namely, two heterogenous ensemble models (an ensemble model is heterogeneous when different learning algorithms (neural networks) are used for training its members) and a homogeneous ensemble model (all the models are generated using the same learning algorithm (neural network)). It is concluded that the ensemble models improve the modeling accuracy when compared to stand-alone solutions. The best selected stand-alone model (i. e the dynamic radial-basis function neural network in this application) and the best selected ensemble model (i. e. a heterogenous ensemble) in term of the jet engine modeling accuracy are selected for performing the FDI study. Engine residual signals are generated using both single model-based and ensemble-based solutions under various engine health conditions. The obtained residuals are evaluated in order to detect engine faults. Our simulation results demonstrate that the fault detection task using residuals that are obtained from the ensemble model results in more accurate performance. The fault isolation task is performed by evaluating variations in residual signals (before and after a <b>fault</b> detection <b>flag)</b> using a neural network classifier. As in the fault detection results, it is observed that the ensemble-based fault isolation task results in a more promising performance...|$|R
40|$|Los dispositivos FPGA persisten como componentes fundamentales para el diseño y evaluación de sistemas electrónicos. En el caso de las FPGAs {{basadas en}} memoria SRAM de Xilinx, éstas soportan Reconfigurabilidad Parcial Dinámica (DPR) por medio del Internal Configuration Access Port (ICAP). Este componente físico permite acceder a la memoria de configuración mientras el sistema está operando y {{por lo tanto}} la DPR puede ser usada para modificar partes específicas del sistema mientras que el resto sigue funcionando sin ser afectado. La arquitectura del sistema pude ser modificada a nivel de componentes lógicos básicos como Look-Up-Tables (LUTs), o a nivel de bloques más grandes como IPs con lo cual la flexibilidad de los sistemas puede mejorar. Ésta es una gran ventaja especialmente en sistemas críticos, como los aeroespaciales, donde el acceso al sistema para modificar su {{hardware}} no es una tarea sencilla. Pero el principal problema que estas FPGAs presentan cuando son utilizadas para aplicaciones críticas es su susceptibilidad a Single Event Upset (SEU) y Multi-bit Upset (MBU) en la memoria de configuración. Éste es un factor limitante que debe ser considerado para evitar malfuncionamiento del hardware implementado. Esta tesis está enfocada en usar DPR como un mecanismo para: i) mejorar la flexibilidad del hardware, ii) emular fallos de forma precisa en diseños ASIC mapeados en FPGAs y iii) mejorar la tolerancia a fallos acumulados o múltiples en la memoria de configuración de circuitos con Triple Redundancia Modular (TMR). Este trabajo aborda estos aspectos considerando como figura de mérito fundamental la velocidad de ejecución de las tareas. Por lo tanto uno de los principales objetivos es acelerar las tareas relacionadas con DPR. En primer lugar un controlador hardware para el ICAP fue diseñado: AC_ICAP. Éste además de soportar lectura y escritura de frames, manejo de bitstreams parciales desde memoria flash y memoria interna de la FPGA, también permite DPR de alta velocidad a nivel de LUTs sin necesidad de bitstreams parciales previamente generados. Esta última característica es posible gracias a ingeniería inversa en el bitstream con la cual se puede ejecutar DPR de LUTs individuales en menos de 5 μs. Ésto representa una mejora en tiempo de reconfiguración de más de 380 veces comparado con el controlador XPS_HWICAP de Xilinx En segundo lugar, la DPR a nivel de LUTs es utilizada en la emulación de fallos para evaluar circuitos ASIC mapeados en FPGAs. Para ello se diseña un CAD que incluye un traductor de la descripción ASIC a una descripción basada en LUTs para ser implementada en FPGAs, generación de diccionarios de fallos y extracción de patrones de prueba. Una plataforma hardware usa el listado de fallos y aprovecha la DPR de la FPGA para la inyección precisa de fallos seguida de la aplicación de los patrones de test para analizar los efectos de los fallos en el circuito. Finalmente la DPR es utilizada para mejorar la tolerancia a fallos de circuitos TMR implementados en FPGAs basados en memoria SRAM. En estos dispositivos la acumulación de fallos en la memoria de configuración puede generar fallos en las réplicas TMR. Por lo tanto la rápida detección y corrección de fallos sin detener el sistema es un requerimiento que se debe cumplir cuando se usan estas FPGAs en la implementación de sistemas críticos. Para ello se insertan detectores de errores de tipo XNOR que convergen en componentes carry-chain de la FPGA y además cada dominio es aislado en áreas diferentes del dispositivo para los cuales se extraen bitstreams parciales. Éstos son utilizados para corregir los fallos cuando los detectores son activados. Field Programmable Gate Array (FPGA) devices persist as fundamental components {{in the design and}} evaluation of electronic systems. They are continuously reported as final implementation platforms rather than only prototype elements. The inherent reconfigurable characteristics that FPGAs offer {{are one of the most}} important advantages in the actual hardware implementation and redesign of systems. In the case of Xilinx SRAM-based FPGAs they support Dynamic Partial Reconfiguration (DPR) by means of the Internal Configuration Access Port (ICAP). This hardwired element allows the configuration memory to be accessed at run time. DPR can then be used to change specific parts of the system while the rest continues to operate with no affection in its computations. Therefore the architecture of the system can be modified at the level of basic logic components such as Look-Up-Tables (LUTs), or bigger blocks such as IP cores, and in this way more flexible systems can be designed. It is a great advantage especially in critical and aerospace applications where the access to the system to re-design the hardware is not a trivial task. But on the other hand, the main problem these FPGAs present when used for critical applications is their sensitivity to Single Event Upset (SEU) and Multi-bit Upset (MBU) in the configuration memory. It is a limiting factor that must be considered to avoid misbehavior of the implemented hardware. This thesis is focused on using DPR as a mechanism to: i) improve hardware flexibility, ii) emulate faults on ASIC designs mapped in FPGAs and iii) improve tolerance to accumulated or multiple faults in the configuration memory of Triple Modular Redundancy (TMR) circuits. This work addresses the three challenges considering as one of the most relevant figures of merit the speed at which the tasks can be performed. It is therefore one of the main objectives we consider: the speed-up of DPR related tasks. In the first place we developed a new high speed ICAP controller, named AC_ICAP, completely implemented in hardware. In addition to similar solutions to accelerate the management of partial bitstreams and frames, AC_ICAP also supports DPR of LUTs without requiring pre-computed partial bitstreams. This last characteristic was possible by performing reverse engineering on the bitstream. This allows DPR of single LUTs in Virtex- 5 devices to be performed in less than 5 μs which implies a speed-up of more than 380 x compared to the Xilinx XPS_HWICAP controller. In the second place, the fine grain DPR obtained with the utilization of the AC_ICAP is used in the emulation of faults to test ASIC circuits implemented in FPGAs. It is achieved by designing a CAD flow that includes a custom technology mapping of the ASIC net-list to LUT-level FPGA net-list, the creation of fault dictionaries and the extraction of test patterns. A hardware platform takes the fault list and leverages the partial reconfiguration capabilities of the FPGA for fault injection followed by application of test patterns for fault analysis purposes. Finally, we use DPR to improve the fault tolerance of TMR circuits implemented in SRAM-based FPGAs. In these devices the accumulation of faults in the configuration memory can cause the TMR replicas to fail. Therefore fast detection and correction of faults without stopping the system is a required constraint when these FPGAs in the implementation of critical systems. This is carried out by inserting flag error detector based on XNOR and carry-chain components, isolating and constraining the three domains to known areas and extracting partial bitstreams for each domain. The latter are used to correct <b>faults</b> when the <b>flags</b> are activated...|$|R

