192|10000|Public
25|$|The Discretionary Security Property {{states that}} use of an access matrix to specify the <b>discretionary</b> <b>access</b> <b>control.</b>|$|E
2500|$|Only {{addresses}} confidentiality, {{control of}} writing (one form of integrity), *-property and <b>discretionary</b> <b>access</b> <b>control</b> ...|$|E
2500|$|A system {{state is}} defined to be [...] "secure" [...] {{if the only}} {{permitted}} access modes of subjects to objects are in accordance with a security policy. To determine whether a specific access mode is allowed, the clearance of a subject is compared to the classification of the object (more precisely, to the combination of classification and set of compartments, making up the security level) {{to determine if the}} subject is authorized for the specific access mode. The clearance/classification scheme is expressed in terms of a lattice. The model defines two mandatory access control (MAC) rules and one <b>discretionary</b> <b>access</b> <b>control</b> (DAC) rule with three security properties: ...|$|E
50|$|An {{important}} feature {{of the class of}} security controls described supra, termed mandatory <b>access</b> <b>controls,</b> or MAC, is that they are entirely beyond the control of any user: the TCB automatically attaches labels to any subjects executed on behalf of users; files created, deleted, read, or written by users; and so forth. In contrast, an additional class of <b>controls,</b> termed <b>discretionary</b> <b>access</b> <b>controls,</b> are under the direct control of the system users. Familiar protection mechanisms such as permission bits (supported by UNIX since the late 1960s and - in a more flexible and powerful form - by Multics since earlier still) and <b>access</b> <b>control</b> lists (ACLs) are familiar examples of <b>discretionary</b> <b>access</b> <b>controls.</b>|$|R
40|$|Abstract. A recent paper {{presented}} an <b>access</b> <b>control</b> scheme for <b>discretionary</b> <b>access</b> <b>controls</b> with a decidable safety problem. This paper {{deals with the}} complexity analysis of that <b>access</b> <b>control,</b> and finds it to be, in its worst cases, PSPACE-complete, but polynomial time for practical cases. The PSPACE-hardness reduction uses the theory of succinct problems in a more general manner than circuit representation. ...|$|R
5000|$|Among Unix Operating system variants, HP-UX has {{introduced}} a feature called [...] "HP-UX Whitelisting" [...] on 11iv3 version. HP-UX Whitelisting (WLI) offers file and system resource protection based on RSA encryption technology. WLI is complementary to the traditional UNIX <b>discretionary</b> <b>access</b> <b>controls</b> (DAC) based on user, group, and file permissions. The more granular DAC <b>access</b> <b>control</b> list (ACL) permissions available on VxFS and HFS file systems are likewise not affected.|$|R
5000|$|<b>Discretionary</b> <b>Access</b> <b>Control</b> (DAC) {{capable of}} {{enforcing}} access limitations {{on an individual}} basis ...|$|E
5000|$|Only {{addresses}} confidentiality, {{control of}} writing (one form of integrity), *-property and <b>discretionary</b> <b>access</b> <b>control</b> ...|$|E
5000|$|The Discretionary Security Property {{states that}} use of an access matrix to specify the <b>discretionary</b> <b>access</b> <b>control.</b>|$|E
40|$|While Mandatory <b>Access</b> <b>Controls</b> (MAC) are {{appropriate}} for multilevel secure military applications, <b>Discretionary</b> <b>Access</b> <b>Controls</b> (DAC) are often perceived as meeting the security processing needs of industry and civilian government. This paper argues that reliance on DAC as the principal method of <b>access</b> <b>control</b> is unfounded and inappropriate for many commercial and civilian government organizations. The paper describes a type of non-discretionary <b>access</b> <b>control</b> - role-based <b>access</b> <b>control</b> (RBAC) - that is more central to the secure processing needs of non-military systems then DAC...|$|R
40|$|While Mandatory <b>Access</b> <b>Controls</b> (MAC) are {{appropriate}} for multilevel secure military applications, <b>Discretionary</b> <b>Access</b> <b>Controls</b> (DAC) are often perceived as meeting the security processing needs of industry and civilian government. This paper argues that reliance on DAC as the principal method of <b>access</b> <b>control</b> is unfounded and inappropriate for many commercial and civilian government organizations. The paper describes a type of non-discretionary <b>access</b> <b>control</b> - role-based <b>access</b> <b>control</b> (RBAC) - that is more central to the secure processing needs of non-military systems than DAC. Comment: pp. 554 - 56...|$|R
50|$|The {{earliest}} work {{directed and}} toward standardizing an approach toward provision of mandatory and <b>discretionary</b> <b>access</b> <b>controls</b> (MAC and DAC) within a UNIX (more precisely, POSIX) computing environment {{can be attributed}} to the National Security Agency's Trusted UNIX (TRUSIX) Working Group, which met from 1987 to 1991 and published one Rainbow Book (#020A), and produced a formal model and associated evaluation evidence prototype (#020B) that was ultimately unpublished.|$|R
50|$|These {{rights and}} permissions are {{implemented}} differently in systems based on <b>discretionary</b> <b>access</b> <b>control</b> (DAC) and {{mandatory access control}} (MAC).|$|E
50|$|<b>Discretionary</b> <b>access</b> <b>control</b> (DAC) is {{a policy}} {{determined}} by the owner of an object. The owner decides who is allowed to access the object, and what privileges they have.|$|E
5000|$|<b>Discretionary</b> <b>access</b> <b>control</b> (DAC), {{which appears}} {{just as in}} Unix, {{including}} the presence of access control lists on every object; the set-id function is supported in a controlled fashion; ...|$|E
40|$|The Bell-LaPadula {{security}} {{model is}} a hybrid model that combines mandatory <b>access</b> <b>controls</b> and <b>discretionary</b> <b>access</b> <b>controls.</b> The Bell-LaPadula security model has been widely accepted in military environments for its capability to specify military style confidentiality policies. The role based <b>access</b> <b>control</b> (RBAC) model has attracted extensive research effort and has been acknowledged as a flexible and policy natural model. This paper investigates a way of modeling Bell-LaPadula security policies using the RBAC model. The capability of modeling Bell-LaPadula security policies using RBAC model means that applications that are implemented using the RBAC model can then be deployed in military environments and will meet their requirements for information confidentiality. 1...|$|R
40|$|<b>Access</b> <b>control</b> is an {{indispensable}} security technology. However, {{it has been}} relatively neglected by the research community. Over the past ten years, the doctrine of mandatory and <b>discretionary</b> <b>access</b> <b>controls</b> has slowly become discredited but no dominant doctrine has emerged to replace it. There are promising candidates such as role and task-based <b>access</b> <b>controls</b> but these are still in their formative stages and have not gained wide acceptance. This paper gives my personal perspective on these issues and identi#es some of the important <b>access</b> <b>control</b> issues that researchers and practitioners should focus on. 1 Introduction Information and system securityisamulti-faceted discipline. Security presents diverse and con#icting objectives. Availability, con#dentiality,integrity and privacy have been explicitly recognized in the security literature for some time. Other objectives suchasintellectual property protection, copyright, secure electronic transactions, metering systems a [...] ...|$|R
40|$|While Mandatory <b>Access</b> <b>Controls</b> (MAC) are {{appropriate}} for multilevel secure military applications, <b>Discretionary</b> <b>Access</b> <b>Controls</b> (DAC) are often perceived as meeting the security processing needs of industry and civilian government. This paper argues that reliance on DAC as the principal method of <b>access</b> <b>control</b> is unfounded and inappropriate for many commercial and civilian government organizations. The paper describes a type of non-discretionary <b>access</b> <b>control</b> - role-based <b>access</b> <b>control</b> (RBAC) - that is more central to the secure processing needs of non-military systems then DAC. 1 Introduction The U. S. government {{has been involved in}} developing security technology for computer and communications systems for some time. Although advances have been great, it is generally perceived that the current state of security technology has, to some extent failed {{to address the needs of}} all. [1], [2] This is especially true of organizations outside the Department of Defense (DoD). [3] The curre [...] ...|$|R
5000|$|<b>Discretionary</b> <b>Access</b> <b>Control</b> (DAC)In DAC, {{the data}} owner determines who can access {{specific}} resources. For example, a system administrator may create {{a hierarchy of}} files to be accessed based on certain permissions.|$|E
50|$|Access control {{models are}} {{sometimes}} categorized as either discretionary or non-discretionary. The three most widely recognized models are <b>Discretionary</b> <b>Access</b> <b>Control</b> (DAC), Mandatory Access Control (MAC), and Role Based Access Control (RBAC). MAC is non-discretionary.|$|E
50|$|Trusted system {{services}} (TSS) software executes in ring 1. TSS implements file systems, implements TCP/IP, and enforces the <b>discretionary</b> <b>access</b> <b>control</b> policy on file system objects. TSS's data is local {{to the process}} within which it is executing.|$|E
40|$|We {{provide a}} short survey on the {{terminology}} of database security in database federations and give, {{as the main}} task, a taxonomy of the major design choices concerning <b>access</b> <b>control</b> in database federations. The taxonomy is organized in the categories granularity, authorization, and <b>access</b> <b>control.</b> Additionally, the impact of distribution, heterogeneity and autonomy, three characteristics of database federations, is examined {{for each of the}} design choices. Keywords Database security, <b>discretionary</b> <b>access</b> <b>controls,</b> federated database systems, object-oriented database systems 1 INTRODUCTION Many organizations maintain information spread over several independent, possibly heterogeneous databases. Often the information is considered as a valuable and important corporate resource and the organizations have become so dependent on the proper functioning of their systems that a disruption of service or a leakage of stored information may cause outcomes ranging from inconvenience to catast [...] ...|$|R
40|$|We {{dispel the}} mistaken notion that polyinstantiation in {{multilevel}} secure databases amounts to lying and/or instilling {{confusion about the}} "true" values of data. On the contrary we show {{it is easy to}} polyinstantiate and be truthful, provided one is disciplined and sensible about it. Our conclusion is that polyinstantiation is effective if properly used, but it can be terribly misused if so desired. In this respect polyinstantiation is no different than most other useful mechanisms in computer systems. We also point out that the necessary discipline can be enforced using standard integrity concepts such as well-formed transactions, least privilege and strong <b>discretionary</b> <b>access</b> <b>controls.</b> 1 INTRODUCTION What distinguishes a multilevel database from ordinary single level ones? In a multilevel world as we raise a user's clearance new facts emerge; conversely as we lower a user's clearance some facts get hidden. Therefore users with different clearances see different versions of reality [...] ...|$|R
40|$|The <b>discretionary</b> <b>access</b> <b>controls</b> (DAC) {{employed}} by traditional operating systems only provide system administrators and users with a loose ability {{to specify the}} security policies of the system. In contrast, mandatory <b>access</b> <b>controls</b> (MAC) provide a stronger, finer-grained mechanism for specifying and enforcing system security policies. A related security concept called the principle of least authority (POLA) states that subjects should only {{have access to the}} specific resources that they absolutely require to function properly at any given time. Although a number of existing projects (Plash and Polaris) seek to provide POLA implementations, these are not enforced using strong MAC. Conversely, existing MAC implementations (SELinux and AppArmor) do not provide rigorous POLA because they do not provide an effective mechanism for dynamic policy modification based on user preferences. This paper presents our solution to fill this void, called the Pluggable User-space Linux Security Environment (PULSE), which implements a MAC enforced, dynamic, user-level POLA implementation. Through the use of user-space plug-ins to specify security policy, PULSE provides a high degree of dynamism, flexibility and usability which is not available in existing security architectures...|$|R
5000|$|The Information Sharing Policy Group (ISPG) {{formed a}} <b>Discretionary</b> <b>Access</b> <b>Control</b> Team (DACT), {{to work on}} [...] "approval of data sets" [...] and [...] "access control requirements" [...] for IDW and DataMart, and {{responding}} to other Intelligence Community agencies requesting access.|$|E
50|$|In {{computer}} systems security, {{role-based access control}} (RBAC) is an approach to restricting system access to authorized users. It {{is used by the}} majority of enterprises with more than 500 employees, and can implement mandatory access control (MAC) or <b>discretionary</b> <b>access</b> <b>control</b> (DAC). RBAC is sometimes referred to as role-based security.|$|E
50|$|FILEPROT {{contains}} the <b>discretionary</b> <b>access</b> <b>control</b> {{information for the}} file. It is divided into 4 groups of 4 bits each: system, owner, group and world. Bit 0 corresponds to read access, 1 to write, 2 to execute and 3 to delete. Setting a bit denies a particular access to a group; clearing it allows it.|$|E
40|$|This model {{presents}} a multi-level secure (MLS) database using object-oriented technology. The model is based on, and extends {{the requirements of}} the Department of Defense 5200. 28 -STD, DoD Trusted Computer System Evaluation Criteria (TCSEC) dated December 1985, commonly known as the Orange Book. Currently, there does not exist a database model in any technology which meets {{the requirements of the}} Orange Book. There has been little interest outside of the U. S. Government and the academic community because the Orange Book is believed to focus on military needs rather than commercial needs. Since commercial espionage is growing daily, and without proper protection, commercial information will be pilfered both nationally and internationally, our model is of interest to commercial users as well. Previous work has focused on <b>Discretionary</b> <b>Access</b> <b>Controls</b> (DAC), Mandatory <b>Access</b> <b>Controls</b> (MAC), or other security requirements not included in the Orange Book, but no work includes all three. We develop policies for <b>access</b> <b>controls,</b> inference controls, and implementation strategy based on the MAC, DAC, and other security requirements. The access authorization mechanism is based on a combination of DAC and MAC requirements, and the proposed model is easily extended to include other access requirements. We also present an outline for implementing our model...|$|R
40|$|This work {{is engaged}} in <b>access</b> <b>control</b> {{mechanism}} in GNU/Linux operating systems. At first <b>discretionary</b> and mandatory <b>access</b> <b>control</b> are compared and examine basic technologies based on mandatory <b>access</b> <b>control.</b> More closely is focused on project SELinux, whose generation of new rules is explained. Within the thesis is made application for logging evaluation and for writing new Type Enforcement rules...|$|R
40|$|Agencies, institutions, {{individuals}} are demanding {{the use of}} commercial-off-the-shelf systems and cannot enforce mandatory security policies with these systems, which are equipped only with <b>discretionary</b> <b>access</b> <b>controls.</b> An inexpensive implementation of a multilevel secure local area network utilizing commercial-off-the- shelf hardware and software does not exist. The Naval Postgraduate School (NPS) is developing a Multilevel Secure Local Area Network (MLS LAN) to provide secure information sharing, classified at different security levels. The MLS LAN extends the high assurance of an evaluated multilevel secure System to a LAN that is formed by commercial personal computers (PCs) running commercial operating systems and office productivity software. The MLS LAN accomplishes the defined functionality by using custom boards which {{are designed to be}} plugged into personal computers. The boards are named the Trusted Computing Base Extension (TCBE). The TCBE is intended to provide trusted path and object reuse supporting services to the network TCB. This thesis describes the hardware and software components, structures, interfaces required for the TCBE to complete a trusted path and control the client PC. Potential implementations are suggested and analyzed for security implications. A preliminary TCBE prototype has been constructed and tested for selected TCBE functions. It is shown that the TCBE prototype can be made both non-by-passable and tamper resistant. Turkish Navy author...|$|R
50|$|In 1986, UCCEL Corporation {{purchased}} Cambridge Systems Group, Inc., which marketed for SKK, Inc. {{and their}} market-leading ACF2 mainframe security product. In June '87, Uccel was unexpectedly bought out by its archrival, Computer Associates, which aggressively sold directly competing products CA-Dynam/TLMS (tape management), CA-Scheduler and batch job scheduling products originally from Capex Corporation and Value Software, plus CA-Top Secret (security / mainframe <b>discretionary</b> <b>access</b> <b>control).</b>|$|E
5000|$|In {{computer}} security, <b>discretionary</b> <b>access</b> <b>control</b> (DAC) {{is a type}} {{of access}} control defined by the Trusted Computer System Evaluation Criteria [...] "as a means of restricting access to objects based on the identity of subjects and/or groups to which they belong. The controls are [...] in the sense that a subject with a certain access permission is capable of passing that permission (perhaps indirectly) on to any other subject (unless restrained by mandatory access control)".|$|E
50|$|DAC: In the <b>Discretionary</b> <b>Access</b> <b>Control</b> (DAC) model, {{access to}} {{resources}} is based on user's identity. A user is granted permissions to a resource by being placed on an access control list (ACL) associated with resource. An entry on a resource's ACL is known as an Access Control Entry (ACE). When a user (or group) {{is the owner of}} an object in the DAC model, the user can grant permission to other users and groups. The DAC model is based on resource ownership.|$|E
40|$|In {{database}} security, <b>access</b> <b>control</b> is a {{major research}} issue. <b>Discretionary</b> <b>access</b> <b>controls</b> have been handled well by many database management systems through user roles and privileges. Mandatory <b>access</b> <b>controls,</b> on the other hand, remains a big problem when users with lower security clearance accessing data of higher security class. Data with classifications and users have clearances developed multilevel <b>access</b> <b>controls,</b> thus the problem of multilevel security. Many researches have been conducted using methods like object labeling, trusted systems, security filters, database views and etc. Many a times the problem remains unsolved due to either too theoretical or not practical to be implemented. Recent developments in research showed cryptography to be the promising solution to the multilevel security problem. With appropriate key management and good multilevel security scheme design, the problem can be solved in both theory and implemented in practice. This research endeavor is one such effort. It presents {{an investigation into the}} applications of modern cryptography for the security of databases. The investigation yields a new multilevel security scheme based on indigenous cryptographic primitives and supported by a new key management technique. The cryptographic primitives include enhanced block cipher and a new stream cipher design successfully implemented in a commercial database. The system yields a new approach in accessing and processing encrypted data using Initialization Vectors and provides solutions for hierarchical and direct <b>access</b> <b>controls.</b> The novel scheme allows the encryption of data at the tuple, attribute, and data element levels of a relation. The security of the scheme is guaranteed with no keys present in the system but stored securely in smartcards. The outcome from this research is realized in OraCrypt application which is implemented by usign Oracle 8 i RDBMS...|$|R
40|$|Secure {{computer}} systems use both mandatory and <b>discretionary</b> <b>access</b> <b>controls</b> {{to restrict the}} flow of information through legitimate communication channels such as files, shared memory and process signals. Unfortunately, in practice one finds that {{computer systems}} are built such that users are not limited to communicating only through the intended communication channels. As a result, a well-founded concern of security-conscious system designers is the potential exploitation of system storage locations and timing facilities to provide unforeseen communication channels to users. These illegitimate channels are known as covert storage and timing channels. Prior to the presentation of this paper twenty years ago the covert channel analysis that took place was mostly ad hoc. Methods for discovering and dealing with these channels were mostly informal, and the formal methods were restricted to a particular specification language. This paper presents a methodology for discovering storage and timing channels that can be used through all phases of the software life cycle to increase confidence that all channels have been identified. In the original paper the methodology was presented and applied to an example system having three different descriptions: English, formal specification, and highorder language implementation. In this paper only the English requirements are considered. However, the paper also presents how the methodology has evolved and the influence it had on other work...|$|R
40|$|Abstract—As {{organizations}} {{increase their}} dependence on database systems for daily business, they become more vulnerable to security breaches even as they gain productivity and efficiency advantages. A truly comprehensive approach for data protection must include mechanisms for enforcing <b>access</b> <b>control</b> policies based on data contents, subject qualifications and characteristics. The database security community has developed {{a number of different}} techniques and approaches to assure data confidentiality, integrity, and availability. In this paper, we survey the most relevant concepts underlying the notion of <b>access</b> <b>control</b> policies for database security. We review the key <b>access</b> <b>control</b> models, namely, the <b>discretionary</b> and mandatory <b>access</b> <b>control</b> models and the role-based <b>access</b> <b>control</b> (RBAC) model...|$|R
