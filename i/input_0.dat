71|847|Public
2500|$|Not every set {{of natural}} numbers is computable. The halting problem, {{which is the}} set of (descriptions of) Turing {{machines}} that halt on <b>input</b> <b>0,</b> is a well-known example of a noncomputable set. [...] The existence of many noncomputable sets follows from the facts {{that there are only}} countably many Turing machines, and thus only countably many computable sets, but there are uncountably many sets of natural numbers.|$|E
2500|$|Rice's theorem generalizes the theorem {{that the}} halting problem is unsolvable. It states that for any non-trivial property, {{there is no}} general {{decision}} procedure that, for all programs, decides whether the partial function implemented by the input program has that property. (A partial function is a function which may not always produce a result, and so is used to model programs, which can either produce results or fail to halt.) [...] For example, the property [...] "halt for the input 0" [...] is undecidable. Here, [...] "non-trivial" [...] means that the set of partial functions that satisfy the property is neither the empty set nor the set of all partial functions. For example, [...] "halts or fails to halt on input 0" [...] is clearly true of all partial functions, {{so it is a}} trivial property, and can be decided by an algorithm that simply reports [...] "true." [...] Also, note that this theorem holds only for properties of the partial function implemented by the program; Rice's Theorem does not apply to properties of the program itself. For example, [...] "halt on <b>input</b> <b>0</b> within 100 steps" [...] is not a property of the partial function that is implemented by the program—it is a property of the program implementing the partial function and is very much decidable.|$|E
5000|$|This <b>input</b> (<b>0</b> for all Or nodes' children, and 1 for all And nodes' children) {{forces the}} {{algorithm}} to check all nodes: ...|$|E
5000|$|... #Caption: A {{plot of the}} Napierian {{logarithm}} for <b>inputs</b> between <b>0</b> and 108.|$|R
50|$|A root {{breaking}} {{system is}} basically needed if one wants a logical connective with output <b>0</b> for <b>input</b> 1.Let P$Q be the gate {{in which the}} sequence to be turned down by P is broken by that by Q.Then P$Q is logically equivalent to P AND (NOT Q), if the input Q is earlier than P.The set of OR and $ can represent any logical connectives in any arity except for ones which generates 1 with all <b>inputs</b> <b>0.</b>|$|R
30|$|BUFGMUX {{can switch}} between two unrelated, even {{asynchronous}} clocks. With the output signal of Power Manager - core_clk_en, BUFGMUX selects operating frequencies such as 0  MHz or 125  MHz of core_clk for blocks inside a switch. Basically, a High on core_clk_en selects the I <b>0</b> <b>input</b> (core_clk_in[*]=[*] 125  MHz), and a Low on core_clk_en selects the I 1 <b>input</b> (core_clk_in[*]=[*] <b>0</b>  MHz).|$|R
50|$|Indeed, if g were a total computable {{function}} extending f then g {{would be}} computable by some Turing machine; fix e as {{the index of}} such a machine. Build a Turing machine M, using Kleene's recursion theorem, which on <b>input</b> <b>0</b> simulates the machine with index e running on an index nM for M (thus the machine M can produce an index of itself; this {{is the role of}} the recursion theorem). By assumption, this simulation will eventually return an answer. Define M so that if g(nM) = m then the return value of M is m + 1. Thus f(nM), the true return value of M on <b>input</b> <b>0,</b> will not equal g(nM). Hence g does not extend f.|$|E
50|$|Theorem. There are Turing computable partial {{functions}} {{that have no}} extension to a total Turing computable function. In particular, the partial function f defined so that f(n) = m {{if and only if}} the Turing machine with index n halts on <b>input</b> <b>0</b> with output m has no extension to a total computable function.|$|E
50|$|Not every set {{of natural}} numbers is computable. The halting problem, {{which is the}} set of (descriptions of) Turing {{machines}} that halt on <b>input</b> <b>0,</b> is a well-known example of a noncomputable set. The existence of many noncomputable sets follows from the facts {{that there are only}} countably many Turing machines, and thus only countably many computable sets, but there are uncountably many sets of natural numbers.|$|E
5000|$|The {{majority}} function produces [...] "1" [...] {{when more}} than half of the inputs are 1; it produces [...] "0" [...] {{when more than}} half the <b>inputs</b> are <b>0.</b> Most applications deliberately force an odd number of inputs so they don't have to deal with the question of what happens when exactly half the <b>inputs</b> are <b>0</b> and exactly half the inputs are 1. The few systems that calculate the majority function on an even number of inputs are often biased towards [...] "0"—they produce [...] "0" [...] when exactly half the <b>inputs</b> are <b>0</b> -- for example, a 4-input majority gate has a 0 output only when two or more 0's appear at its inputs. In a few systems, a 4-input majority network randomly chooses [...] "1" [...] or [...] "0" [...] when exactly two 0's appear at its inputs.|$|R
3000|$|The {{interpolation}} filter {{reads the}} reference integer pixels {{from the first}} line, and as a result, there are 16 reference data <b>inputs</b> from <b>0</b> ~ 15.|$|R
5000|$|The file {{descriptor}} for standard <b>input</b> is <b>0</b> (zero); the POSIX [...] definition is STDIN_FILENO; the corresponding variable is FILE* stdin; similarly, the variable is std::cin.|$|R
5000|$|The {{decision}} problem {{of whether the}} Turing machine with index e will halt on every input is not decidable. In fact, this problem is at level [...] of the arithmetical hierarchy. Thus this problem is strictly more difficult than the Halting problem, which asks whether the machine with index e halts on <b>input</b> <b>0.</b> Intuitively, this difference in unsolvability is because each instance of the [...] "total machine" [...] problem represents infinitely many instances of the Halting problem.|$|E
50|$|Some other multi-bit adder {{architectures}} {{break the}} adder into blocks. It {{is possible to}} vary the length of these blocks based on the propagation delay of the circuits to optimize computation time. These block based adders include the carry-skip (or carry-bypass) adder which will determine P and G values for each block rather than each bit, and the carry select adder which pre-generates the sum and carry values for either possible carry <b>input</b> (<b>0</b> or 1) to the block, using multiplexers to select the appropriate result when the carry bit is known.|$|E
5000|$|While the arithmetical {{hierarchy}} measures definability of sets {{of natural}} numbers, Turing degrees measure {{the level of}} uncomputability of sets of natural numbers. A set A {{is said to be}} Turing reducible to a set B, written , if there is an oracle Turing machine that, given an oracle for B, computes the characteristic function of A.The Turing jump of a set A is a form of the Halting problem relative to A. Given a set A,the Turing jump [...] is the set of indices of oracle Turing machines that halt on <b>input</b> <b>0</b> when run with oracle A. It is known that every set A is Turing reducible to its Turing jump, but the Turing jump of a set is never Turing reducible to the original set.|$|E
3000|$|Membership functions: A {{membership}} function is a curve {{that defines the}} degree of membership of a crisp <b>input</b> (between <b>0</b> and 1). Each {{membership function}} μ [...]...|$|R
50|$|The {{truth table}} shows {{that when the}} enable/clock <b>input</b> is <b>0,</b> the D <b>input</b> {{has no effect on}} the output. When E/C is high, the output equals D.|$|R
40|$|We {{proposed}} a two stage framework {{with only one}} network to analyze skin lesion images, we firstly trained a convolutional network to classify these images, and cropped the import regions which the network has the maximum activation value. In the second stage, we retrained this CNN with the image regions extracted from stage one and output the final probabilities. The two stage framework achieved a mean AUC of 0. 857 in ISIC- 2017 skin lesion validation set and is 0. 04 {{higher than that of}} the original <b>inputs,</b> <b>0.</b> 821...|$|R
5000|$|The Haar wavelet in Java:public static int discreteHaarWaveletTransform(int input) { // This {{function}} {{assumes that}} input.length=2^n, n>1 int output = new intinput.length; for (int length = input.length / 2; length = length / 2) { // length {{is the current}} length of the working area of the output array. // length starts at half of the array size and every iteration is halved until it is 1. for (int i = 0; i < length; ++i) { int sum = input* 2 + input* 2 + 1; int difference = input* 2 - input* 2 + 1; outputi = sum; output+ i = difference; } if (length == 1) { return output; } //Swap arrays to do next iteration System.arraycopy(output, 0, <b>input,</b> <b>0,</b> length); }}Complete Java code for a 1-D and 2-D DWT using Haar, Daubechies, Coiflet, and Legendre wavelets {{is available from the}} open source project: JWave.Furthermore, a fast lifting implementation of the discrete biorthogonal CDF 9/7 wavelet transform in C, used in the JPEG 2000 image compression standard can be found here (archived 5 March 2012).|$|E
5000|$|Rice's theorem generalizes the theorem {{that the}} halting problem is unsolvable. It states that for any non-trivial property, {{there is no}} general {{decision}} procedure that, for all programs, decides whether the partial function implemented by the input program has that property. (A partial function is a function which may not always produce a result, and so is used to model programs, which can either produce results or fail to halt.) For example, the property [...] "halt for the input 0" [...] is undecidable. Here, [...] "non-trivial" [...] means that the set of partial functions that satisfy the property is neither the empty set nor the set of all partial functions. For example, [...] "halts or fails to halt on input 0" [...] is clearly true of all partial functions, {{so it is a}} trivial property, and can be decided by an algorithm that simply reports [...] "true." [...] Also, note that this theorem holds only for properties of the partial function implemented by the program; Rice's Theorem does not apply to properties of the program itself. For example, [...] "halt on <b>input</b> <b>0</b> within 100 steps" [...] is not a property of the partial function that is implemented by the program—it is a property of the program implementing the partial function and is very much decidable.|$|E
5000|$|... /Input two unequal numbers [...] "A" [...] and [...] "B", {{compare the}} two numbers /and {{determine}} which is larger, and output a literal statement /"A > B", or [...] "B > A" [...] as applicable. / /Input and store values for A & B *200 Start, TIF /Clear TTY flag JPS Input /Get value for A STJ A JPS Input /Get value for B STJ B / /Determine {{which of the two}} values is larger LDJ A SBJ B /Subtract B from A SIP J /Test for A positive JMP BRAN /No! B > A LDJ ABCST /Yes! A > B SKIP /Skip next instruction BRAN, LDJ BACST / /Set up and output expression / JPS OUT STOP JMP START / /Working or data storage area / A, 0 /Constant A B, 0 /Constant B ABCST, AB /Address of A > B literal BACST, BA /Address of B > A literal C260, 260 /ASCII zone constant / /Input routine + ASCII zone strip / <b>Input,</b> <b>0</b> /Entry point TIS JMP [...]-1 TRF TCP /Echo input at teletype TOS JMP [...]-1 SBJ C260 JMP@ INPUT / /Output routine - Output ASCII expression / Out, 0 /Entry point STJ LOOP+1 LDJ C5 /Set number of character constant STJ CTR / /Output data loop / Loop, TWLDJ 0 TCP TOS JMP [...]-1 ISZ LOOP+1 DSZ CTR /Test for all characters out JMP LOOP /No JMP@ Out /Return C5, 5 CTR, 0 / /Output messages / AB, 215 212 301 /A 276 /> 302 /B BA, 215 212 302 /B 276 /> 301 /A $ /End character ...|$|E
3000|$|In the following, λ {{will be set}} to 1 and N 0 {{is adapted}} {{according}} to the <b>input</b> C/N <b>0</b> and scaling applied to the signal power density, G [...]...|$|R
3000|$|Let W denote a B-DMC with <b>input</b> u∈ <b>0,</b> 1, output y ∈Y, and {{transition}} probabilities W(y|u). By recursively applying channel combining and splitting operations on N (N = 2 [...]...|$|R
30|$|The problem (P) {{is called}} {{properly}} posed if, {{for any given}} nontrivial <b>input</b> f≠ <b>0,</b> it {{has at least one}} nontrivial solution. It is called well-posed if the solution is unique.|$|R
40|$|The {{synergistic}} effect of temperature (25 – 65 C) and total specific energy <b>input</b> (<b>0.</b> 55 – 1. 11 kWh kgDW 1) by pulsed electric field (PEF) on {{the release of}} intracellular components from the microalgae Chlorella vulgaris was studied. The combination of PEF with temperatures from 25 to 55 C resulted in a conductivity increase of 75...|$|E
40|$|Negative {{soil water}} balance (i. e., water <b>input</b> <b>0.</b> 88), whereas the QWD and mean SWC in DSLs {{were found to}} have no {{correlation}} with them. The optimal age of apple orchards for avoiding/controlling the formation of DSLs was about 9 years. This information provided pertinent references for the management of deep water resources by controlling the growth age of plants...|$|E
40|$|Objective of {{multivalve}} {{logic design}} {{is to reduce}} number of gates needed and also to reduce interconnect path length. Interconnect path consist of {{the largest number of}} gates from input to output. The reason of these two objectives is that they will give extremely good properties when implemented in VLSI. Reducing number of gates will reduce the chip area, and minimizing interconnect path length will give opportunity to use highest clock frequency. In this paper quaternary to binary and binary to quaternary converter are designed. We can design the multivalve logic to binary converter which is use for conversion of ternary-valued <b>input</b> <b>0,</b> 1, 2 and quaternary-valued <b>input</b> <b>0,</b> 1, 2, 3 into corresponding binary-valued output 0, 1. The physical design of the circuits is simulated and tested with MICROWIND layout design tool in 50 nm technology. The conversion method is simple and compatible with the present CMOS process. The circuits could be embedded in digital CMOS VLSI design architectures. Keywords...|$|E
5000|$|When , [...] is the {{constant}} function [...] for all real [...] Graphically, it is a horizontal line at , {{and can be}} thought of as the function that maps all <b>inputs</b> to <b>0,</b> the number zero.|$|R
5000|$|... if the i-bit of the <b>input</b> data is <b>0,</b> the {{corresponding}} counters are decremented.|$|R
50|$|An AND gate gives a 1 output {{when both}} inputs are 1; a NOR gate gives a 1 output only when both <b>inputs</b> are <b>0.</b> Therefore, an AND gate {{is made by}} {{inverting}} the inputs of a NOR gate.|$|R
40|$|Yazd {{province}} in Iran has low annual precipitation and consecutive periods of drought. Despite water scarcity in Yazd province, water consumption in agriculture {{is far from}} efficient. This study evaluates a management strategy to optimize water consumption in the pistachio orchards of Yazd province. There were 95 {{participants in the study}} that were randomly selected from 153 beneficiaries. In this research, estimates were made for production function of pistachio and production elasticity of water and other inputs production elasticity of the water input was - 0. 039, which is located in the third part of the production area and represents over-consumption of water by producers owing to its low price. This negative elasticity implies a decrease of production by 3. 9 percent for a one percent increment in water consumption in pistachio production. In contrast, the consumption of animal manure estimated by elasticity production (0. 334) places it in the first area of production and can be considered under-optimum consumption. Other inputs were determined as follows: elasticity production of machinery <b>input</b> (<b>0.</b> 668), animal manure <b>input</b> (<b>0.</b> 447) and labor <b>input</b> (<b>0.</b> 422) were all presented as optimum. Given these results it was concluded that over-consumption of water, in the context of scarcity of the input, makes it essential that the resource is managed more effectively. This study showed that management of the water sector needs reform. Policies are needed that will enable good practice to achieve optimum consumption of water. Moreover, it is essential to direct attention toward the utilization of water in agriculture in terms of its economic viability...|$|E
40|$|A 0. 45 -V <b>input,</b> <b>0.</b> 4 -V output on-chip gate boosted (OGB) buck {{converter}} with clock gated digital PWM controller in 40 -nm CMOS achieved the highest efficiency to date with the {{output power less}} than 40 μW. A linear delay trimming by a logarithmic stress voltage (LSV) scheme {{to compensate for the}} die-to-die delay variations of a delay line in the PWM controller with good controllability is also proposed...|$|E
40|$|Abstract-This paper {{presents}} {{the design of}} a low <b>input</b> (<b>0.</b> 75 to 1. 75 V) and low power dissipation pipelined CMOS ADC. The 8 bits ADC consumes 78. 3 mW power at 2. 5 V supply voltage. The DNL and INL are 0. 6 LSB and 0. 7 LSB respectively, and SFDR is 51. 259 dB at 195 kHz input frequency. The chip area is 1. 023 mm × 0. 795 mm with TSMC 025 Pm CMOS technology. I...|$|E
40|$|Revision Date Of Issue Engineering Change Number Comments 0. 4 2010 - 05 - 25 - First draft. Also {{distributed}} to JGBdV and PA for review and <b>inputs.</b> <b>0.</b> 7 2010 - 06 - 28 - All the main sections inserted. Recent cost information inserted. Performance graphs developed. 1. 0 2010 - 07 - 15 - Changes to wording. Response to comments. 1. 1 2010 - 08 - 20 - Added sections 8 and 10, editing. 1. 2 2010 - 08 - 26 - Updated following internal SPDO review 2. 0 2010 - 11 - 20 - Removed section on costs, updated the last section, updated performance graphs. 2. 1 2010 - 11 - 22 - Minor formatting updates...|$|R
5000|$|A <b>0</b> (<b>input</b> or output off, or even parity) is encoded as 300µs {{high and}} 300µs low ...|$|R
40|$|Large-scale human mesenchymal {{stem cell}} {{expansion}} calls for a bioreaction system, that provides a sufficient growth surface. An alternative to static cultivations systems like cell factories are disposable stirred tank reactors. Here, microcarriers provide the required growth surface, but these {{make it difficult to}} achieve a complete homogenization in the bioreactor, while avoiding shear stress. To gain insight into this process, we investigated the impact of different power <b>inputs</b> (<b>0.</b> 02 – 2. 6 W m− 3) on the mixing time (tm). Whereas tm was inversely proportional to agitation in a one-phase-system, aeration resulted in a constant mixing time at 30 – 70 rpm. A high microcarrier concentration (30 g L− 1) and low stirrer speed (30 rpm) in the liquid-solid system caused a 50 -fold increase in tm and the formation of a discrete non-mixed upper zone. The effect of the microcarrier concentration on tm became negligible at higher stirrer speeds. In the three-phase system, microcarrier settling was prevented by aeration and a minimal specific power <b>input</b> of <b>0.</b> 6 W m− 3 was sufficient for complete homogenization. We confirmed that a low power input during stem cell expansion leads to inhomogeneity, which has not been investigated in the three-phase system up to date...|$|R
