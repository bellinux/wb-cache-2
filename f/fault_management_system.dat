45|10000|Public
25|$|Industrial {{application}} of CSP to software design has usually focused on dependable and safety-critical systems. For example, the Bremen Institute for Safe Systems and Daimler-Benz Aerospace modeled a <b>fault</b> <b>management</b> <b>system</b> and avionics interface (consisting of some 23,000 lines of code) {{intended for use}} on the International Space Station in CSP, and analyzed the model to confirm that their design was free of deadlock and livelock. The modeling and analysis process was able to uncover a number of errors {{that would have been}} difficult to detect using testing alone. Similarly, Praxis High Integrity Systems applied CSP modeling and analysis during the development of software (approximately 100,000 lines of code) for a secure smart-card Certification Authority to verify that their design was secure and free of deadlock. Praxis claims that the system has a much lower defect rate than comparable systems.|$|E
50|$|A fault {{management}} console allows a network administrator or system operator to monitor events from multiple systems and perform actions {{based on this}} information. Ideally, a <b>fault</b> <b>management</b> <b>system</b> {{should be able to}} correctly identify events and automatically take action, either launching a program or script to take corrective action, or activating notification software that allows a human to take proper intervention (i.e. send e-mail or SMS text to a mobile phone). Some notification systems also have escalation rules that will notify a chain of individuals based on availability and severity of alarm.|$|E
50|$|The SCADA {{controlled}} and unmanned grid stations, GSM based Street Lighting System, SMS based <b>Fault</b> <b>Management</b> <b>System</b> and Automatic Meter Reading {{employed by the}} company are all firsts {{in the capital city}} area. Modern technologies such as High Voltage Distribution (HVDS) System and LT Arial Bunch Conductor are also being used by them to curb power theft in the region. Tata Power Delhi Distribution Ltd is the first Indian utility to develop and set up Geographical Information System which has seamless integration with SCADA, SAP-ISU and Fixed Asset register. This system has unique mechanism of asset management, complaint management, network planning, etc.|$|E
40|$|We {{present a}} methodological {{approach}} for the validation of <b>fault</b> <b>management</b> <b>systems</b> for Advanced Driver Assistance Systems (ADAS). For the validation process the unique VEHIL facility, developed by TNO Automotive and currently situated in Helmond, The Netherlands, is applied. The VEHIL facility {{provides the opportunity}} to make the entire development process of intelligent vehicles safer, cheaper, and more manageable, and to make simulation more reliable. The main feature of VEHIL is that a complete intelligent vehicle, including its sensors and actuators, can be tested in a Hardware-In-the-Loop simulation environment. In this way VEHIL can be applied in the design phase for fast and easy optimization of the sensor configuration. Moreover, due to its ability for providing very accurately controllable testing conditions, VEHIL can also be used for the validation of the performance of intelligent vehicle control and <b>fault</b> <b>management</b> <b>systems.</b> In this paper, we particularly focus on the use of VEHIL for the validation of <b>fault</b> <b>management</b> <b>systems</b> for Advanced Driver Assistance Systems...|$|R
40|$|Systems {{with high}} {{dependability}} requirements are increasingly relying on complex on-line <b>fault</b> <b>management</b> <b>systems.</b> Such <b>fault</b> <b>management</b> <b>systems</b> involve {{a combination of}} multiple steps – monitoring, data analysis, planning and execution – that are typically independently developed and optimized. We {{argue that it is}} inefficient and ineffective to improve any particular <b>fault</b> <b>management</b> step without taking into account its interactions and dependencies {{with the rest of the}} steps. Through six real-life examples, we demonstrate this inefficiency and how it results in systems that either under-perform or are over-budget. We propose a holistic approach to <b>fault</b> <b>management</b> that is aware of all relevant aspects, and explicitly considers the couplings between the different <b>fault</b> <b>management</b> steps. We believe it will produce systems that will better meet cost, performance and dependability objectives. ...|$|R
5000|$|... #Subtitle level 3: <b>Fault</b> <b>Management</b> & <b>System</b> Restoration (FMSR) ...|$|R
50|$|Industrial {{application}} of CSP to software design has usually focused on dependable and safety-critical systems. For example, the Bremen Institute for Safe Systems and Daimler-Benz Aerospace modeled a <b>fault</b> <b>management</b> <b>system</b> and avionics interface (consisting of some 23,000 lines of code) {{intended for use}} on the International Space Station in CSP, and analyzed the model to confirm that their design was free of deadlock and livelock. The modeling and analysis process was able to uncover a number of errors {{that would have been}} difficult to detect using testing alone. Similarly, Praxis High Integrity Systems applied CSP modeling and analysis during the development of software (approximately 100,000 lines of code) for a secure smart-card Certification Authority to verify that their design was secure and free of deadlock. Praxis claims that the system has a much lower defect rate than comparable systems.|$|E
50|$|There are {{two primary}} ways to perform fault {{management}} - these are active and passive. Passive fault management {{is done by}} collecting alarms from devices (normally via SNMP traps) when something happens in the devices. In this mode, the <b>fault</b> <b>management</b> <b>system</b> only knows if a device it is monitoring is intelligent enough to generate an error and report it to the management tool. However, if the device being monitored fails completely or locks up, it won't throw an alarm and the problem will not be detected. Active fault management addresses this issue by actively monitoring devices via tools such as ping {{to determine if the}} device is active and responding. If the device stops responding, active monitoring will throw an alarm showing the device as unavailable and allows for the proactive correction of the problem.|$|E
40|$|Problems of fault impact degree {{determination}} on {{the service}} quality in a communications network are considered, general approach is described. Method and algorithm of fault estimation in access networks are given. <b>Fault</b> <b>management</b> <b>system</b> based on this approach is developed. ???????????? ????? ? ???????? ??????????? ??????????????? ??????? ?????????????? ?? ???????? ?????????????? ??????? ????????? ????????? ????????????????, ????? ???????????? ???????? ???????? ????????? ?????????????????? ???? ???????...|$|E
50|$|<b>Fault</b> <b>management</b> <b>systems</b> include HP Network Node Manager i, IBM Tivoli, EMC Smarts, CA Spectrum, NetIQ, TTI Telecom Netrac, Objective Systems Integrators NETeXPERT, Centina System's NetOmnia, Infosim StableNet,,iReveal, etc. Fault {{isolation}} tools like Delphi {{are also}} available, which are basically used {{to isolate the}} fault in any telecom network.|$|R
40|$|Soft {{computing}} is {{a partnership}} between A. I. techniques that are tolerant of imprecision, uncertainty and partial truth, {{with the aim of}} obtaining a robust solution for complex systems. Telecommunication systems are built with extensive redundancy and complexity to ensure robustness and quality of service. To facilitate this requires complex <b>fault</b> identification and <b>management</b> <b>systems.</b> <b>Fault</b> identification and <b>management</b> is generally handled by reducing the amount of alarm events (symptoms) presented to the operating engineer through monitoring, filtering and masking. The ultimate goal is to determine and present the actual underlying <b>fault.</b> <b>Fault</b> <b>Management</b> is a complex task subject to uncertainty in the 'symptoms' presented and as such is ideal for treatment by soft computing techniques. The aim {{of this paper is to}} present a soft computing approach to <b>fault</b> <b>management</b> in telecommunication <b>systems.</b> Two key approaches are considered; AI & soft computing rule discovery and techniques to attempt to present less symptoms with greater diagnostic assistance for the more traditional rule based system approach and a hybrid soft computing approach which utilises a genetic algorithm to learn Bayesian belief networks (BBNs). It is also highlighted that research and development of the two target <b>Fault</b> <b>Management</b> <b>Systems</b> are complementary. ...|$|R
40|$|Initial {{results are}} {{reported}} from a multi-year, interdisciplinary {{effort to provide}} guidance and assistance for designers of intelligent systems and their user interfaces. The objective is to achieve more effective human-computer interaction (HCI) for systems with real time <b>fault</b> <b>management</b> capabilities. Intelligent <b>fault</b> <b>management</b> <b>systems</b> within the NASA were evaluated for insight into the design of systems with complex HCI. Preliminary results include: (1) a description of real time <b>fault</b> <b>management</b> in aerospace domains; (2) recommendations and examples for improving intelligent systems design and user interface design; (3) identification of issues requiring further research; and (4) recommendations for a development methodology integrating HCI design into intelligent system design...|$|R
40|$|The {{offshore}} AC hub {{was identified}} as a feasible network topology for an offshore node applied in a future pan-European Supergrid. A model of an offshore AC hub was developed in SimPowerSystemsTM using the round three offshore wind development zone Dogger Bank, as a case study. Two control philosophies, master-slave and droop control, are shown to successfully manage the voltage, current and complex power flow in the offshore AC hub following planned changes in operating conditions. The impacts of three different fault scenarios on the offshore AC hub are investigated. It is shown that each fault severely impedes normal operation of equipment in the offshore AC hub, as equipment ratings are exceeded. In addition, the loss of infeed to the onshore UK power network is extensive. Based on these outcomes, it is identified that additional fault management systems are required. A novel centralised <b>fault</b> <b>management</b> <b>system</b> is then developed based on an online OPF algorithm. The performance is compared to de-centralised <b>fault</b> <b>management</b> <b>system,</b> and advantages and disadvantages of the two methods are discussed. The centralised <b>fault</b> <b>management</b> <b>system</b> is implemented on a realtime platform as hardware-in-the-loop, with the offshore AC hub implemented on a Real Time Digital Simulator. The simulation and experimental results are then compared to confirm the validity of the simulation results...|$|E
40|$|As {{exploration}} {{of our solar}} system and outerspace move into the future, spacecraft are being developed to venture on increasingly challenging missions with bold objectives. The spacecraft tasked with completing these missions are becoming progressively more complex. This increases the potential for mission failure due to hardware malfunctions and unexpected spacecraft behavior. A solution to this problem lies in the development of an advanced <b>fault</b> <b>management</b> <b>system.</b> Fault management enables spacecraft to respond to failures and take repair actions so that it may continue its mission. The two main approaches developed for spacecraft fault management have been rule-based and model-based systems. Rules map sensor information to system behaviors, thus achieving fast response times, and making the actions of the <b>fault</b> <b>management</b> <b>system</b> explicit. These rules are developed by having a human reason through the interactions between spacecraf...|$|E
40|$|There is a {{military}} communications (MILCOM) satellite sys-tem {{which is designed to}} provide communications for military users. To meet this mission, a key function to be performed is autonomous fault management of the MILCOM system which includes a constellation of satellites and a collection of dedicated ground control stations. The impact of the MILCOM <b>fault</b> <b>management</b> <b>system</b> to the space, user, and ground support segments poses numerous interesting challenges. This paper reviews challenges in fault management design constraints and satellite system considerations. The development of the MILCOM <b>fault</b> <b>management</b> <b>system</b> has led to fundamental insights into the architectural charac-teristics needed in a system to support fault management. The design experience of fault management on the satellite bus is compared to activity on two payloads. The communications payloads present substantially different design problems from that of the bus. I...|$|E
40|$|This paper {{presents}} {{the latest developments}} of the VEHIL facility, which aims to make the development process of intelligent vehicles safer, cheaper and more manageable. The main feature of VEHIL is that a complete intelligent vehicle can be tested in a hardware-in-the-loop simulation environment. The use of VEHIL will be illustrated by preliminary test results of a Pre-Crash System. Furthermore, a methodological approach will be presented for the validation of <b>fault</b> <b>management</b> <b>systems</b> for Advanced Driver Assistance Systems by fault injection in VEHIL...|$|R
40|$|Rising {{short-circuit}} {{fault current}} levels {{is one of}} the problems associated with the increased presence of distributed generation (DG) in electrical networks. A <b>fault</b> level <b>management</b> <b>system</b> involving superconducting <b>fault</b> current limiters (SCFCLs) is a potential solution to this issue. The typical applications of SCFCLs and their advantages over traditional fault current limitation measures are discussed. However, several technical issues remain, relating to: SCFCL post-fault recovery time; network control and protection; and maloperation of the SCFCL due to non-fault transient currents, such as transformer inrush. Initial solutions to these problems, involving a distributed software-based <b>fault</b> level <b>management</b> <b>system,</b> are presented...|$|R
40|$|Abstract—Rising {{short-circuit}} {{fault current}} levels {{is one of}} the problems associated with the increased presence of distributed generation (DG) in electrical networks. A <b>fault</b> level <b>management</b> <b>system</b> involving superconducting <b>fault</b> current limiters (SCFCLs) is a potential solution to this issue. The typical applications of SCFCLs and their advantages over traditional fault current limitation measures are discussed. However, several technical issues remain, relating to: SCFCL post-fault recovery time; network control and protection; and maloperation of the SCFCL due to non-fault transient currents, such as transformer inrush. Initial solutions to these problems, involving a distributed software-based <b>fault</b> level <b>management</b> <b>system,</b> are presented. Index Terms—Fault current limiter (FCL), fault level man-agement, power system protection, superconducting fault current limiter (SCFCL) I...|$|R
40|$|This {{article is}} {{dedicated}} to the problems of increasing of efficiency of fault search and elimination in IT-systems. Methods of threshold values determination for the three-threshold scheme are proposed and analyzed. Method of fault localization in IT-systems that incorporates passive symptom gathering and active probing is proposed. <b>Fault</b> <b>management</b> <b>system</b> which uses these methods was developed. ?????? ????????? ????????? ????????? ????????????? ?????? ? ?????????? ?????????????? ? ??-????????. ?????????? ? ???????????????? ??????? ??????????? ???????? ????????? ??????? ??? ????????????? ????? ???????? ???????. ????????? ????? ??????????? ?????????????? ? ??-????????, ???????????? ????????????? ?????????? ????? ????????? ? ???????? ????????. ??????????? ????????? ?????????? ?????????? ??????????? ??????????????, ??????????? ???????????? ??????...|$|E
40|$|Space Station {{issues in}} fault {{management}} are discussed. The system background is described with {{attention given to}} design guidelines and power hardware. A contractually developed <b>fault</b> <b>management</b> <b>system,</b> FRAMES, is integrated with the energy management functions, the control switchgear, and the scheduling and operations management functions. The constraints that shaped the FRAMES system and its implementation are considered...|$|E
40|$|The Institute of Flight Guidance of the German Aerospace Research Establishment (DLR) has {{developed}} a knowledge-based Health and <b>Fault</b> <b>Management</b> <b>System</b> (HFM) for the Robotic Technology Experiment (ROTEX) of the D- 2 Spacelab Mission. The experiences gained with the HFM System during the development and especially during the Spacelab mission are described in this report. (orig.) Available from TIB Hannover: RN 278 (94 - 08) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekSIGLEDEGerman...|$|E
40|$|Traditionally, network {{management}} activities, such as <b>fault</b> <b>management,</b> {{have been performed}} with direct human involvement. However, these activities are becoming more demanding and data intensive, due to the heterogeneous nature and increasing size of networks today. For these reasons, it is becoming necessary to automate {{network management}} activities. Artificial intelligence technologies {{can play an important}} role in the problem solving and reasoning techniques that are employed in <b>fault</b> <b>management.</b> Expert <b>systems</b> have been successfully applied to some types of <b>fault</b> <b>management.</b> However, these <b>systems</b> are not flexible enough for today's evolving network needs. We propose a hybrid AI solution that employs both neural networks and case-based reasoning techniques for the <b>fault</b> <b>management</b> of heterogeneous distributed information networks. Overview of <b>Fault</b> <b>Management</b> Activities Today's high speed, heterogeneous networks represent a complex and data intensive environment that requires di [...] ...|$|R
40|$|Initial {{results are}} {{reported}} to provide guidance and assistance for designers of intelligent systems and their human interfaces. The objective is to achieve more effective human-computer interaction (HCI) for real time <b>fault</b> <b>management</b> support <b>systems.</b> Studies {{of the development of}} intelligent <b>fault</b> <b>management</b> <b>systems</b> within NASA have resulted in a new perspective of the user. If the user is viewed as one of the subsystems in a heterogeneous, distributed system, system design becomes the design of a flexible architecture for accomplishing system tasks with both human and computer agents. HCI requirements and design should be distinguished from user interface (displays and controls) requirements and design. Effective HCI design for multi-agent systems requires explicit identification of activities and information that support coordination and communication between agents. The effects are characterized of HCI design on overall system design and approaches are identified to addressing HCI requirements in system design. The results include definition of (1) guidance based on information level requirements analysis of HCI, (2) high level requirements for a design methodology that integrates the HCI perspective into system design, and (3) requirements for embedding HCI design tools into intelligent system development environments...|$|R
50|$|<b>Fault</b> <b>management</b> <b>systems</b> may use complex {{filtering}} {{systems to}} assign alarms to severity levels. These can range in severity from debug to emergency, {{as in the}} syslog protocol. Alternatively, they could use the ITU X.733 Alarm Reporting Function's perceived severity field. This takes on values of cleared, indeterminate, critical, major, minor or warning. Note that {{the latest version of}} the syslog protocol draft under development within the IETF includes a mapping between these two different sets of severities. It is considered good practice to send a notification not only when a problem has occurred, but also when it has been resolved. The latter notification would have a severity of clear.|$|R
40|$|Abstract: In this paper, {{we propose}} and present {{the design and}} initial {{development}} of the Fault awareness Enabled Computing Environment (FENCE) system for high end computing. FENCE is a comprehensive <b>fault</b> <b>management</b> <b>system</b> {{in the sense that}} it consists of both post and runtime analysis, integrates both proactive and reactive mechanisms, and combines both application level and system level fault management. Component-based systems are also developed to support the comprehensive FENCE design. Preliminary implementation results are presented...|$|E
40|$|As {{exploration}} {{of our solar}} system and outerspace move into the future, spacecraft are being developed to venture on increasingly challenging missions with bold objectives. The spacecraft tasked with completing these missions are becoming progressively more complex. This increases the potential for mission failure due to hardware malfunctions and unexpected spacecraft behavior. A solution to this problem lies in the development of an advanced <b>fault</b> <b>management</b> <b>system.</b> Fault management enables spacecraft to respond to failures and take repair actions so that it may continue its mission...|$|E
40|$|In {{order to}} ensure {{long-term}} ability to meet mission goals and {{to provide for the}} safety of the public, ground personnel, and any crew members, nearly all spacecraft include a fault management (FM) system. For a manned vehicle such as Orion, the safety of the crew is of paramount importance. The goal of the Orion Guidance, Navigation and Control (GN&C) <b>fault</b> <b>management</b> <b>system</b> is to detect, isolate, and respond to faults before they can result in harm to the human crew or loss of the spacecraft. Verification of fault management/fault protection capability is challenging due to the large number of possible faults in a complex spacecraft, the inherent unpredictability of faults, the complexity of interactions among the various spacecraft components, and the inability to easily quantify human reactions to failure scenarios. The Orion GN&C Fault Detection, Isolation, and Recovery (FDIR) team has developed a methodology for bounding the scope of FM system verification while ensuring sufficient coverage of the failure space and providing high confidence that the <b>fault</b> <b>management</b> <b>system</b> meets all safety requirements. The methodology utilizes a swarm search algorithm to identify failure cases that can result in catastrophic loss of the crew or the vehicle and rare event sequential Monte Carlo to verify safety and FDIR performance requirements...|$|E
40|$|Powerful <b>fault</b> <b>management</b> <b>systems</b> are {{increasingly}} required to ensure robustness and qualitative services. Though alarms are usually useful for identifying faults in such systems, {{huge numbers of}} alarms generated {{as a result of}} some major network event require efficient management methods and algorithms in order to discover the root cause in a timely manner. In this paper, we propose a robust algorithm for recognizing root cause faults in a reasonable time window by dynamically clustering alarms and events. Our algorithm is composed of three stages and uses cellular learning automaton in all stages. Simulations testify to the high efficiency of this algorithm with different parameters...|$|R
40|$|Reasoning about {{causes and}} effects {{naturally}} arises in the engineering of safety-critical systems. A classical example is Fault Tree Analysis, a deductive technique used for system safety assessment, whereby an undesired state is reduced to the set of its immediate causes. The design of <b>fault</b> <b>management</b> <b>systems</b> also requires reasoning on causality relationships. In particular, a fail-operational system needs to ensure timely detection and identification of faults, i. e. recognize the occurrence of run-time faults through their observable effects on the system. Even more complex scenarios arise when multiple faults are involved and may interact in subtle ways. In this work, we propose a formal approach to <b>fault</b> <b>management</b> for complex <b>systems.</b> We first introduce the notions of fault tree and minimal cut sets. We then present a formal framework for the specification and analysis of diagnosability, and {{for the design of}} fault detection and identification (FDI) components. Finally, we review recent advances in fault propagation analysis, based on the Timed Failure Propagation Graphs (TFPG) formalism. Comment: In Proceedings CREST 2017, arXiv: 1710. 0277...|$|R
40|$|ARGES (Atmospheric Revitalization Group Expert System) is a {{demonstration}} prototype expert <b>system</b> for <b>fault</b> <b>management</b> for the Solid Amine, Water Desorbed (SAWD) CO 2 removal assembly, {{associated with the}} Environmental Control and Life Support (ECLS) System. ARGES monitors and reduces data in real time from either the SAWD controller or a simulation of the SAWD assembly. It can detect gradual degradations or predict failures. This allows graceful shutdown and scheduled maintenance, which reduces crew maintenance overhead. Status and fault information is presented in a user interface that simulates what would be seen by a crewperson. The user interface employs animated color graphics and an object oriented approach to provide detailed status information, fault identification, and explanation of reasoning in a rapidly assimulated manner. In addition, ARGES recommends {{possible courses of action}} for predicted and actual faults. ARGES is seen as a forerunner of AI-based <b>fault</b> <b>management</b> <b>systems</b> for manned space systems...|$|R
40|$|The BTeV trigger {{performs}} sophisticated computations using large ensembles of FPGAs, DSPs, {{and conventional}} microprocessors. This system will have between 5, 000 and 10, 000 computing elements and many networks and data switches. While much {{attention has been}} devoted to developing efficient algorithms, the need for fault-tolerant, fault-adaptive, and flexible techniques and software to manage this huge computing platform has been identified {{as one of the most}} challenging aspects of this project. They describe the problem and offer an approach to solving it based on a distributed, hierarchical <b>fault</b> <b>management</b> <b>system...</b>|$|E
40|$|As {{exploration}} {{of our solar}} system and outerspace move into the future, spacecraft are being developed to venture on increasingly challenging missions with bold objectives. The spacecraft tasked with completing these missions are becoming progressively more complex. This increases the potential for mission failure due to hardware malfunctions and unexpected spacecraft behavior. A solution to this problem lies in the development of an advanced <b>fault</b> <b>management</b> <b>system.</b> Fault management enables spacecraft to respond to failures and take repair actions so that it may continue its mission. The two main approaches developed for spacecraft fault management have been rule-based and model-based systems. Rules map sensor information to system behaviors, thus achieving fast response times, and making the actions of the <b>fault</b> <b>management</b> <b>system</b> explicit. These rules are developed by having a human reason through the interactions between spacecraft components. This process is limited by the number of interactions a human can reason about correctly. In the model-based approach, the human provides component models, and the <b>fault</b> <b>management</b> <b>system</b> reasons automatically about system wide interactions and complex fault combinations. This approach improves correctness, and makes explicit the underlying system models, whereas these are implicit in the rule-based approach. We propose a fault detection engine, Compiled Mode Estimation (CME) that unifies the strengths of the rule-based and model-based approaches. CME uses a compiled model to determine spacecraft behavior more accurately. Reasoning related to fault detection is compiled in an off-line process into a set of concurrent, localized diagnostic rules. These are then combined on-line along with sensor information to reconstruct the diagnosis of the system. These rules enable a human to inspect the diagnostic consequences of CME. Additionally, CME is capable of reasoning through component interactions automatically and still provide fast and correct responses. The implementation of this engine has been tested against the NEAR spacecraft advanced rule-based system, resulting in detection of failures beyond that of the rules. This evolution in fault detection will enable future missions to explore the furthest reaches of the solar system without the burden of human intervention to repair failed components...|$|E
40|$|In this paper, {{we present}} an intelligent, {{distributed}} <b>fault</b> <b>management</b> <b>system</b> for communication networks using belief networks as fault model and inference engine. The managed network {{is divided into}} domains and for each domain, there is an intelligent agent called Domain Diagnostic Agent attached to it, {{which is responsible for}} this domain's fault management. Belief network models are embedded in such an agent and under symptoms observation, the posterior probabilities of each candidate fault node being faulty is computed. We dene the notion of right diagnosis, describe the diagnosis process based on this concept, and present a strategy for generation of test sequence...|$|E
40|$|Abstract — Reducing the {{dimensionality}} of high-dimensional data allows easier visualisation of data, facilitating {{more efficient}} extraction of knowledge. Nonlinear mapping methods transform data existing in high-dimensional space into a lowerdimensional space {{such that the}} topological characteristics of the high-dimensional data are preserved. Recent work [6] [4] proposed a particle swarm optimisation algorithm to perform nonlinear mapping. Experimental results show a comparison between a number of optimisation algorithms in performing nonlinear mapping. Nonlinear mapping methods were designed to perform mapping on datasets that contain {{a small number of}} data points. To map large datasets, such as <b>fault</b> <b>management</b> <b>systems</b> in telecommunication networks, a different strategy is required. A proposed method that uses a Neural Network to perform nonlinear mapping on larger datasets is discussed. I...|$|R
40|$|The {{complexity}} of computer systems currently being designed for critical {{applications in the}} scientific, commercial, and military arenas requires {{the development of new}} techniques for utilizing models of system behavior in order to assure 'ultra-dependability'. The {{complexity of}} these systems, such as Space Station Freedom and the Air Traffic Control System, stems from their highly integrated designs containing both hardware and software as critical components. Reliability graph models, such as fault trees and digraphs, are used frequently to model hardware systems. Their applicability for software systems has also been demonstrated for software safety analysis and the analysis of software fault tolerance. This paper discusses further uses of graph models in the design and implementation of <b>fault</b> <b>management</b> <b>systems</b> for safety critical applications...|$|R
40|$|In {{this paper}} {{we present a}} Distributed Intelligent <b>Fault</b> <b>Management</b> (DIFM) <b>system</b> for {{communication}} networks. The overall architecture of the proposed sys-tem {{is based on a}} distributed cooperative multi-agent paradigm, with probabilistic networks as the framework for knowledge representation and evidence inferencing. We adopt the management by delegation paradigm [5] for network monitoring and integrate both hard and soft faults...|$|R
