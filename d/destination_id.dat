12|15|Public
50|$|The RapidIO {{transport}} layer enables hardware virtualization (for example, a RapidIO endpoint can support multiple device IDs). Portions of the <b>destination</b> <b>ID</b> of each packet {{can be used}} to identify specific pieces of virtual hardware within the endpoint.|$|E
50|$|When a node has {{detected}} a partition it sets its height and {{the heights of}} all its neighbours for the destination in its table to NULL and it issues a CLR (Clear) packet. The CLR packet consists of the reflected reference level (t,oid,1) and the <b>destination</b> <b>id.</b>|$|E
50|$|Every RapidIO {{endpoint}} {{is uniquely}} identified by a Device Identifier (deviceID). Each RapidIO packet contains two device IDs. The {{first is the}} <b>destination</b> <b>ID</b> (destID), which indicates where the packet should be routed. The second is the source ID (srcID), which indicates where the packet originated. When an endpoint receives a RapidIO request packet that requires a response, the response packet is composed by swapping the srcID and destID of the request.|$|E
50|$|A Begin {{primitive}} has an Originating Transaction ID (up to 4 bytes). Continues have an Originating Transaction <b>ID</b> and a <b>Destination</b> Transaction <b>ID.</b> Ends and Aborts {{only have}} a <b>Destination</b> Transaction <b>ID.</b> Each primitive has both an optional component and (optional) dialogue portions. The component portion for the unidirectional primitive is mandatory.|$|R
50|$|As the TCAP dialog goes on each Continue message {{includes}} the Transaction <b>ID</b> of the <b>destination</b> machine as the <b>Destination</b> Transaction <b>ID</b> and the Transaction ID of the originating machine as the Originating Transaction ID. When {{any of the}} machines wants to close the dialog it sends an End message or an Abort message to the other machine. This message contains the <b>Destination</b> Transaction <b>ID</b> only.|$|R
30|$|The relay nodes on {{the path}} from the source to the <b>destination</b> update the <b>ID</b> of the next hop node in the header and forward the packet.|$|R
5000|$|A node which {{requires}} a link to a destination because it has no downstream neighbours for it sends a QRY (query) packet and sets its (formerly unset) route-required flag. A QRY packet contains the <b>destination</b> <b>id</b> of the node a route is sought to. The reply to a query is called an update UPD packet. It contains the height quintuple of the neighbour node answering to a query and the destination field which tells for which destination the update was meant for.A node receiving a QRY packet does one of the following: ...|$|E
5000|$|Koorde {{is based}} on Chord but also on De Bruijn graph (De Bruijn sequence).In a d-dimensional de Bruijn graph, there are 2d nodes, {{each of which has}} a unique d-bit ID. The node with ID i is {{connected}} to nodes 2i modulo 2d and 2i+1 modulo 2d. Thanks to this property, the routing algorithm can route to any destination in d hops by successively [...] "shifting in" [...] the bits of the <b>destination</b> <b>ID</b> but only if the dimensions of the distance between modulo 1d and 3d are equal.|$|E
30|$|The server agent verifies {{the source}} ID, then it accepts the route request from sender then it gathers the {{information}} of receiver using <b>destination</b> <b>ID</b> from the list.|$|E
30|$|The LooCI event-bus is an asynchronous, event-based {{communication}} medium that promotes loosely coupled interactions. On the one hand, synchronization decoupling {{is provided by}} non-blocking interactions between components and the event bus. On the other hand, loose coupling in space is realized by separating distribution concerns from component implementation. LooCI components interact with the event bus via their provided and required interfaces, but have no knowledge about their communication partners. This information is stored in the binding tables of the Event Manager. A local binding table contains entries for bindings between local components, while a remote binding table contains entries for distributed bindings between a local and a remote component. The binding tables are therefore asymmetric. Bindings are only allowed between compatible interfaces and are generally defined by a <source event type, source component <b>ID,</b> source address, <b>destination</b> event type, <b>destination</b> component <b>ID,</b> <b>destination</b> address> tuple.|$|R
40|$|Commonly used by autopilots this {{sentence}} contains navigation receiver warning flag status, cross-track-error, waypoint arrival status and initial bearing from origin waypoint to the destination waypoint for the active navigation {{leg of the}} journey. Use of $ [...] APB with additional data fields of heading-to-steer and bearing from present position to destination is recommended. $ [...] APA,A,A,x. x,a,N,A,A,x. x,M,c [...] c*hh <b>Destination</b> waypoint <b>ID</b> Bearing origin to destination, Mag. Status: perpendicular passed at waypoint Status: arrival circle entered XTE units, nautical mile...|$|R
50|$|The {{transaction}} ID is a TCAP {{reference for}} a set of TCAP operations that are performed within a single dialog. When machine A starts a TCAP dialog with another machine B, the machine A sends a Begin message to machine B. This Begin message contains an Originating Transaction ID, which is the Transaction ID reference for A. When the machine B replies to A with a Continue message it includes As Transaction <b>ID</b> as the <b>Destination</b> Transaction <b>ID.</b> Furthermore B includes its own Transaction ID as the Originating Transaction ID.|$|R
40|$|The InfiniBand Architecture (IBA) {{defines a}} switch-based network with {{point-to-point}} links that supports any topology {{defined by the}} user, including irregular ones, {{in order to provide}} flexibility and incremental expansion capability. Routing in IBA is distributed, based on forwarding tables, and only considers the packet <b>destination</b> <b>ID</b> for routing within subnets in order to drastically reduce forwarding table size. Unfortunately, the forwarding tables for most of the previously proposed routing algorithms for irregular topologies consider both the <b>destination</b> <b>ID</b> and the input channel. Therefore, these popular routing algorithms for irregular topologies may not be usable in InfiniBand networks because they do not conform to the IBA specifications. In this paper, we propose an easy-to-implement strategy to adapt the forwarding tables already computed following any routing algorithm that considers the <b>destination</b> <b>ID</b> and the input channel into the required IBA forwarding table format. The resulting routing algorithm is deadlock-free on IBA. Indeed, the originally computed paths are not modified at all. Hence, the proposed strategy does not degrade performance with respect to the original routing scheme. 1...|$|E
30|$|The server agent then {{broadcasts}} {{the route}} request message using <b>destination</b> <b>ID,</b> the registered adjacent nodes that are nearer to the destination node which {{are ready to}} provide the service replies with the acknowledgement message to the server agent.|$|E
30|$|The DeNB {{also serves}} the regular LTE-A traffic such as voice and video UEs. The DeNB {{takes into account}} the source of the {{incoming}} packets. If the packets are received from a standalone LTE-A user, then the PDCP of the DeNB forwards packets to the GTP for tunneling. After tunneling, the packets are routed towards the access gateway (aGW). On the other hand, if the packets are received from the RN, the data packets are sent to the GTP via IP and UDP for de-multiplexing. Later, the original standalone packets are sent to the aGW. Similarly, in downlink, the DeNB GTP recognizes the source and destination identities (IDs) of the incoming packets. If the <b>destination</b> <b>ID</b> of incoming packet belongs to an RN, then the packets belong to a user which is served by the RN. On the other hand, packets belong to a user which is directly served by the DeNB. The block diagram of the downlink data differentiation algorithm implemented at the DeNB is given in Fig. 3 (right).|$|E
40|$|Abstract (our paper) How do users behave if {{they can}} tag each other in social networks? In this paper, we answer this {{question}} by studying the interactive tagging network constructed by Twitter lists. Twitter lists {{can be regarded as}} the tagging process; a user (i. e., tagger) creates a list with a name (i. e., tag) and adds other users (i. e., tagged users) into the list. This tagging network is by nature different from the resource tagging networks (e. g., Flickr and Delicious) because users on this network can tag each other. We address the following research questions: (RQ 1) What is the common patterns and the difference between the interactive tagging network and the resource tagging networks? (RQ 2) Do users tag each other on the interactive tagging network? And if so, to what extent? (RQ 3) What is {{the difference between the two}} types of relationships on Twitter: who-tags-whom and who-follows-whom? By quantitatively studying million-scale networks, we found the pervasive patterns across the different tagging networks, and the interactive patterns within the interactive tagging network. This study sheds light on the underlying characteristics of the interactive tagging network, which is relevant to the social scientists and the system designers of the tagging systems. Data twitter. seed. users: The first column is the user id, and the second column is the json of the user objects on Twitter. This is the set of 1 million seed users to collect the following data. twitter. tagging. network: The first column is the source user id (from user id), the second column is the <b>destination</b> user <b>id</b> (to user id), the third column is the tag (i. e. slug or list name), and the fourth column is the list id. twitter. tagging-out-going-from-seed-users. network: The first column is the source user id (from user id), the second column is the <b>destination</b> user <b>id</b> (to user id), the third column is the tag (i. e. slug or list name), and the fourth column is the list id. This is only the out-going edges from the seed users, i. e., this is a subset of twitter. tagging. network. twitter. following. network: The first column is the source user id (from user id), and the second column is the <b>destination</b> user <b>id</b> (to user id). twitter. following-closed-seed-users. network: The first column is the source user id (from user id), and the second column is the <b>destination</b> user <b>id</b> (to user id). This is not used in the following publication paper, but will be useful in other studies. Publication This data set was created for our study. If you make use of this data set, please cite: Yuto Yamaguchi, Mitsuo Yoshida, Christos Faloutsos, Hiroyuki Kitagawa. Patterns in Interactive Tagging Networks. Proceedings of the Ninth International AAAI Conference on Web and Social Media (ICWSM- 15). pp. 513 - 522, 2015. [URL] Code Our code outputting experiment results made available at: [URL]...|$|R
30|$|Some {{pioneering}} {{projects are}} Ken Yeang’s {{studies on the}} bioclimatic skyscraper since the 1980 s; Dieter Schempp’s integration of habitable greenhouses into buildings with different functional <b>destination</b> and LOG <b>ID</b> study in the 1990 s; and the proposal of integration between nature and artifice at various level launched by MVRDV with the Dutch pavilion during Expo 2000 in Hannover.|$|R
40|$|In this paper, {{we propose}} a new {{distributed}} route selection approach, called parallel probing, for realtime channel establishment in a point-to-point network. The existing distributed routing algorithms {{fall into two}} major categories, namely, preferred neighbour based or flooding based. The preferred neighbour approach offers better call acceptance rate, whereas the flooding approach is better in terms of call setup time and routing distance. The proposed approach attempts to combine the benefits of both preferred neighbour and flooding approaches {{in a way to}} improve all the three performance metrics simultaneously. This is achieved by probing k different paths in parallel, for a channel, by employing different heuristics on each path. Also, the proposed approach uses a notion called intermediate <b>destinations</b> (<b>IDs),</b> which are subset of nodes along the least-cost path between source and destination of a call, {{in order to reduce the}} excessive resource reservations while probing for a channel by releasing unused resources between IDs and initiating parallel probes at every ID. Further, it has the flexibility of adapting to different load conditions by its nature of using different heuristics in parallel, and hence a path found for a channel would have different segments (a segment is a path between two successive IDs) and each of these segments would very well be selected by different heuristics. The effectiveness of the proposed approach has been studied through simulation for well known network topologies for a wide range of QoS and traffic parameters. The simulation results reveal that the average call acceptance rate offered by the proposed route selection approach is better than that of both the flooding and preferred neighbour approaches, and the ave [...] ...|$|R
40|$|The emanate of {{extremely}} powerful mobile communication devices {{in recent times}} has elicit the development of many exploitative technologies that attempt at leveraging the ever increasing processing, storage and communicating capacities of these devices. One of the most developing areas of network is opportunistic network that provides communication even in disconnected mode. Nodes are mobile and can change their location and message or packet is forward through many intermediate nodes so identity of users is shown to all. Any intermediate can drop the data packets if the node is malicious and do not wishes to forward the data to a particular <b>destination</b> <b>id.</b> A few privacy preventing algorithms are proposed to maintain it. In this research an algorithm is proposed to maintain the privacy of user if user wants it. Stable node provides a new virtual ID to a user who wishes to communicate without disclosing his privacy. This research ensures {{the privacy of the}} data with the use of concept of cluster estimation. In this research the public private cryptography technique is used for data encryption and decryption. Algorithm is implemented on NS 2 (Network Simulator 2. 35). 1...|$|E
40|$|InfiniBand {{is a new}} {{standard}} for communication between processing nodes and I/O devices {{as well as for}} interprocessor communication. The InfiniBand Architecture (IBA) supports distributed deterministic routing because forwarding tables store a single output port per <b>destination</b> <b>ID.</b> This prevents packets from using alternative paths when the requested output port is busy. Despite the fact that alternative paths could be selected at the source node to reach the same destination node, this is not effective enough to improve network performance. However, using adaptive routing could help to circumvent the congested areas in the network, leading to an increment in performance. In this paper, we propose a simple strategy to implement forwarding tables for IBA switches that supports adaptive routing while still maintaining compatibility with the IBA specs. Adaptive routing can be individually enabled or disabled for each packet at the source node. The proposed strategy enables the use in IBA of any adaptive routing algorithm with an acyclic channel dependence graph. In this paper, we have taken advantage of the partial adaptivity provided by the well-known up*/down * routing algorithm. Evaluation results show that extending IBA switch capabilities with adaptive routing may noticeably increase network performance. In particular, network throughput improvement can be, on average, as high a...|$|E
40|$|Communication has {{different}} terms for different {{users in the}} technology. Wireless and Ad-hoc communication are two main communication medium which are fulfilling different domain requirement for the users. Talking about Ad-hoc networks, usually communication {{is based on the}} ad-hoc protocol policies. Most of the users in allover ad-hoc network using Ad-hoc On Demand Distance Vector Protocol (AODV) for the basic communication due to simplicity and reliability of protocol. More usage also attracts number of attackers which tends to disturb the communication. Most occurred attack in AODV network is Wormhole attack which provide lowest <b>destination</b> <b>id</b> to the source so t become the part of shortest selected path by AODV process. This attack starts proceeding by introducing the similar metrics which are taken into account by AODV while selecting the route for destination. It introduce lower number of hops and lower value of delay so that AODV will select the fake route defined by attack automatically and after attack launch, attack start decreasing the overall throughput of the network. Wormhole attack affects the network performance and overall network performance degraded a lot. To eliminate the effects of Wormhole attack, we have proposed a packet update scheme in which we fetch information from the neighbors for the enquiry of the suspected nodes in the network. Proposed scheme eliminate the Wormhole affects by finding all the malicious nodes which are present in the network and send broadcast to whole network for elimination of malicious nodes. Throughput and delay are the parameters for the performance measurements of the network. Proposed scheme provides better results with 37 % less delay as compared to the previous proposed schemes. Previous scheme provides slighter better results of 6 % more throughput than our proposed scheme...|$|E
40|$|Abstract—In this paper, {{we propose}} a new {{distributed}} route selection approach, called parallel probing, for real-time channel establishment in a point-to-point network. The existing distributed routing algorithms {{fall into two}} major categories: preferred neighbor based or flooding based. The preferred-neighbor approach offers a better call acceptance rate, whereas the flooding approach is better in terms of call setup time and routing distance. The proposed approach attempts to combine the benefits of both preferred neighbor and flooding approaches {{in a way to}} improve all the three performance metrics simultaneously. This is achieved by probing k different paths in parallel, for a channel, by employing different heuristics on each path. Also, the proposed approach uses a notion called intermediate <b>destinations</b> (<b>ID’s),</b> which are subset of nodes along the least-cost path between source and destination of a call, {{in order to reduce the}} excessive resource reservations while probing for a channel by releasing unused resources between ID’s and initiating parallel probes at every ID. Further, it has the flexibility of adapting to different load conditions by its nature of using different heuristics in parallel, and hence, a path found for a channel would have different segments (a segment is a path between two successive ID’s), and each of these segments would very well be selected by different heuristics. The effectiveness of the proposed approach has been studied through simulation for well-known network topologies for a wide range of quality-of-service and traffic parameters. The simulation results reveal that the average call acceptance rate offered by the proposed route-selection approach is better than that of both the flooding and preferred neighbor approaches, and the average call setup time and routing distance offered by it are very close to that of the flooding approach. Index Terms — Channel establishment, distributed routing, heuristics, quality of service, real-time networks...|$|R
40|$|The Internet {{environment}} has been changing dramatically {{during the recent}} years. Plenty of new requirements and problems such as the IPv 4 address shortage, traversing middle boxes and mobility that cannot be solved with the current Internet architecture have emerged. Among those problems, the IPv 4 address exhaustion is {{recognized as one of}} the key challenges in the original Internet design. The reason is the unprecedented growth in the number of user devices and regular network nodes which are addressed with IPv 4 locators. Several solutions including Network Address Translator (NAT) and IPv 6 (a new version of IP) have been proposed to alleviate the scalability problem. NAT postpones the depletion of the IP address space by reusing the IPv 4 address space and isolating customer networks from the public network; it makes hosts in the private address space unreachable from the public Internet. To be exact, a NAT, like a strict firewall, filters out all inbound data flows while outbound traffic from private hosts can go through it. The proposed NAT traversal techniques by IETF have many disadvantages. The Customer Edge Switching aims to replace NAT with a new device called co-operative firewall and eliminate the problems of existing NAT traversal solutions. A CES device provides global connectivity over the Internet using different types of identifiers, global unique domain names and private addresses. In this thesis, Customer Edge Traversal Protocol (CETP) is introduced as an edge-to-edge protocol and prototyped so as to tunnel data and control information while transporting the source and <b>destination</b> <b>IDs</b> from one customer network to another. This work also includes the policy management of co-operative firewalls. The testing results assure the suitability of CETP for inter-CES communication and edge-to-edge signaling...|$|R
30|$|In the LTE downlink, a bitmap {{known as}} the Relative Narrowband Transmit Power (RNTP) {{indicator}} is exchanged over the X 2 interface between eNBs. The RNTP indicator is used by an eNB to signal to neighboring eNB on which RBs it intends to transmit with high power in the near future. Each bit of the RNTP indicator corresponds to one RB in the frequency domain and is used to inform the neighboring eNBs if the eNB in question is planning to exceed the transmit power for that RB or not [26]. The value of the threshold and the time period for which the indicator is valid are configurable parameters. This bitmap is intended to enable neighboring cells to estimate the amount of interference on each RB in future frames and therefore schedule their UEs accordingly. Furthermore, the source and <b>destination</b> cell <b>IDs</b> need is contained in the RNTP.|$|R
30|$|There {{have been}} many efforts to us Bayesian {{probability}} in order to alleviate the flooding phenomenon. Jain et al.[26] proposed a heuristic algorithm with a route establishment technique using Bayesian approach. This algorithm improves the performance of route discovery by ameliorating the cost of route establishment using a history-based Bayesian method together with the relative region information of the destination node. The drawback of this effort is that it process and compares many information from each node (region, distance, status, <b>destination</b> node <b>id</b> and source node id) and which makes the algorithm complex, energy inefficient and time consuming {{in order to find}} the best route. Moreover, the simulations that have been conducted by other researchers were limited both in network size (number of nodes) and speed of the nodes. In large networks (bigger than 30 nodes), the behaviour of the network is different and there is bigger traffic congestion which causes unnecessary collision and packet overhead.|$|R
40|$|Adaptive routing {{algorithm}} {{has been}} employed in multichip interconnection networks {{in order to}} improve network performance. Does a algorithm use local or global network state? This is the key question in adaptive routing. In many traffic patterns, the ignorance of global network state, leading to routing selection based only on local congestion information, tends to violate global load balance. To attack the load balance issue in adapting routing, some global adaptive routing algorithms introduce a congestion propagation network to obtain global network status information, such as Regional Congestion Awareness (RCA) and Destination Based Adaptive Routing (DBAR). However, the congestion propagation network leads to additional power and area consumption which cannot be ignored. From another view, if we just increase the bandwidth between neighbor nodes with the wires used to build the congestion propagation network, the network performance could be improved as well. In this paper, we propose a global adaptive routing algorithm without employing the additional congestion propagation network. Our algorithm obtains the global network state in a novel way, and can offer significant improvement than the base-line local adaptive routing algorithm (xy-adaptive algorithm which selects routing based on local congestion information in each hop) for both medium and high injection rates. In wormhole flow control, all the routing information (flit id, source node <b>id,</b> <b>destination</b> node <b>id,</b> vc id and address) is contained in head flit, and data is carried in body flits. As a result, there are always many free bits in the head flit, especially when the bandwidth is 128 -bits which is normal in interconnection network design. Then, we can use these free bits in the head flit to propagate global congestion information but not increase the number of flits...|$|R
30|$|The wakeup radio-based MAC {{proposed}} {{in this study}} is an on-demand MAC. To evaluate and compare our work, we have chosen some of the well known and popular MAC protocols such as B-MAC, X-MAC, WiseMAC, and ZigBee. Berkeley MAC (B-MAC) is an asynchronous MAC protocol with an adaptive duty cycling mechanism. It duty cycles through a periodic channel sampling called low power listening (LPL). It uses the LPL or channel sampling scheme to link to a receiver. It employs an improved filtering mechanism to increase the reliability of channel assessment. Nodes periodically wakeup for a short time interval in each duty cycle to check for preamble. The preamble is long enough for a receiver to detect it. When a node wakes up, it turns on the radio and checks for activity in the channel. It uses the clear channel assessment (CCA) technique to detect activity. If any activity is detected, the node stays awake for the time period required to receive the packet or else a timeout puts it back to sleep state. Once the reception is completed, the node goes back to sleep mode. X-MAC is a low power, asynchronous MAC protocol. The primary goal of X-MAC is to overcome the extra latency and extra power consumption at non-target neighboring nodes unlike MACs that uses long preambles (e.g., B-MAC). It uses a preamble to inform the neighbor node about imminent data communication but avoids the long preamble through a concept of short strobe preambles. The strobe preambles contain the <b>destination</b> node <b>ID.</b> In between two strobe preambles, it awaits for an early acknowledgement from the receiver. WiseMAC is based on the preamble sampling to minimize idle listening and save power. It uses a CSMA base technique for multiple access. Nodes sample the medium with a constant period at a regular interval. They also listen to the channel for a short duration of time. The IEEE 802.15. 4 ZigBee network includes a central coordinator which acts as an access point. It is also considered as a candidate MAC for BAN. Authors of [16 – 18] have proposed and evaluated ZigBee for BAN.|$|R

