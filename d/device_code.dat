27|365|Public
5000|$|For 8-bit addressing, {{the entire}} device address is {{transmitted}} {{in a single}} byte. The most significant 4 bits indicate the [...] "family code", which is defined by Microchip in the UNI/O bus specification. The least significant 4 bits indicate the <b>device</b> <b>code.</b> The <b>device</b> <b>code</b> allows multiple slave devices with a common family code to be used on the same bus. The <b>device</b> <b>code</b> can be fixed for a given slave or customizable by the user. Choosing a <b>device</b> <b>code</b> {{and how it can}} be customized (if necessary) are the responsibilities of the slave device designer.|$|E
5000|$|C++ {{run-time}} type information (RTTI) and C++-style {{exception handling}} are only supported in host code, not in <b>device</b> <b>code.</b>|$|E
50|$|For 12-bit addressing, {{the device}} address is sent in two bytes. The most {{significant}} 4 {{bits of the}} first byte (which would correspond to the family code in 8-bit addressing), are set to ′1111′. The next 4 bits are the family code for the 12-bit address, and the second byte of the address is an 8-bit wide <b>device</b> <b>code.</b> The <b>device</b> <b>code</b> follows the same guidelines for definition as with 8-bit addressing.|$|E
50|$|Sam {{attempts}} {{to use his}} techno legacy to copy the cloaking <b>device</b> <b>codes</b> into everyday electronics, he builds a prototype that he asks the team to test when they attack the warship.|$|R
50|$|The MKB key {{is found}} in the {{physical}} support (the disc) together with the content of the disc encrypted. The MKB has the function of validating the reproduction devices on which the disc is being played and obtaining, from the <b>devices</b> <b>codes,</b> the key that will allow the decryption of the disc content. That is the Media Key (Km).|$|R
5000|$|The A/36 CD-ROM drive, interestingly, cannot contain {{customer}} {{data and}} {{cannot be used}} to play music, {{even though it is}} equipped with a headphone jack. It is provided for PTF installation only. PTF CDs can only be applied if the operator follows a bypass procedure to switch <b>device</b> <b>codes</b> with the tape unit. The CD unit becomes TC.|$|R
5000|$|So far, two {{nuclear weapons}} {{have been used}} in the course of warfare, both by the United States near the end of World War II. On August 6, 1945, a uranium gun-type <b>device</b> (<b>code</b> name [...] "Little Boy") was detonated over the Japanese city of Hiroshima. Three days later, on August 9, a {{plutonium}} implosion-type <b>device</b> (<b>code</b> name [...] "Fat Man") was detonated over the Japanese city of Nagasaki. These two bombings resulted in the deaths of approximately 120,000 people.|$|E
5000|$|Nvidia CUDA Compiler (NVCC) is a {{proprietary}} compiler by Nvidia {{intended for use}} with CUDA. CUDA code runs on both the CPU and GPU. NVCC separates these two parts and sends host code (the part of code which will be run on the CPU) to a C compiler like GCC or Intel C++ Compiler (ICC) or Microsoft Visual C Compiler, and sends the <b>device</b> <b>code</b> (the part which will run on the GPU) to the GPU. The <b>device</b> <b>code</b> is further compiled by NVCC. NVCC is based on LLVM.|$|E
50|$|The {{data and}} {{software}} in many JP1 remote controls can be updated and extended using an interface cable {{connected to a}} PC running software such as IR, RemoteMaster, or KeyMap Master. Updates and extensions include new <b>device</b> <b>code</b> data, new IR protocols, advanced keymapping, and macros.|$|E
50|$|The Win32 <b>device</b> control <b>code</b> {{takes into}} {{consideration}} the mode of the operation being performed.|$|R
40|$|Forward-bias {{tunneling}} {{is observed}} in heavily doped p-n junctions of bipolar transistors. A simple phenomenological model suitable to incorporation in <b>device</b> <b>codes</b> is developed. The model identifies as key parameters the space-charge-region (SCR) thickness at zero bias and the reduced doping level at its edges which can both {{be obtained from}} CV characteristics. This tunneling mechanism may limit the maximum gain achievable from scaled bipolar devices...|$|R
5000|$|Patient-controlled is {{infusion}} on-demand, {{usually with}} a preprogrammed ceiling to avoid intoxication. The rate {{is controlled by}} a pressure pad or button that can be activated by the patient. It is the method of choice for patient-controlled analgesia (PCA), in which repeated small doses of opioid analgesics are delivered, with the <b>device</b> <b>coded</b> to stop administration before a dose that may cause hazardous respiratory depression is reached.|$|R
50|$|The {{new device}} first shipped in 1971 as the 23FD, the program load {{component}} of the 2835 Storage Control Unit. {{and then as a}} standard part of most System 370 processing units and other IBM products. Internally IBM used another <b>device,</b> <b>code</b> named Mackerel, to write boot disks for distribution to the field.|$|E
5000|$|Define buffers, {{variables}} {{that might be}} used inside the supplied programs. Buffers are memory areas that allow host code (i.e. normal cpu code) to communicate with <b>device</b> <b>code</b> (i.e. the code that gets executed on the gpu) and vice versa. Variables are OptiX’s internal way of communicating and using buffers to transfer data back and forth.|$|E
5000|$|Merckel {{pitched the}} idea to Mugge of [...] "the phone of the future" [...] that would use cards {{inserted}} into the phone to run services, {{and the development of}} a prototype was approved by Mugge. It was decided by IBM to show the <b>device,</b> <b>code</b> named [...] "Angler", at the November 1992 COMDEX technology trade show in Las Vegas, necessitating a rush to complete the prototype by Canova and his team that saw them working 80-hour weeks in order to have it ready.|$|E
5000|$|In RPG II, use the WORKSTN <b>device</b> and <b>code</b> {{the format}} member {{name in the}} F-specification [...]|$|R
40|$|WO 2003058605 A UPAB: 20030903 NOVELTY - The coder has a first <b>coding</b> <b>device</b> (102), a {{decoding}} device (104) {{and a second}} <b>coding</b> <b>device</b> (114), with a phase attenuator (10 a, 10 b) for reducing non-linear frequency-dependent phase distortion produced by the first <b>coding</b> <b>device</b> and/or the {{decoding device}} and providing an increased difference signal at a comparator (110) {{in front of the}} second <b>coding</b> <b>device.</b> DETAILED DESCRIPTION - Also included are INDEPENDENT CLAIMS for the following: (a) an information signal coding method; (b) a decoder for a data stream; (c) a decoding method for a data stream USE - The scalable coder is used for coding information signals. ADVANTAGE - Scalable coding with higher bit efficiency...|$|R
50|$|ASCII was {{introduced}} in 1963 and is a seven-bit encoding scheme used to encode letters, numerals, symbols, and <b>device</b> control <b>codes</b> as fixed-length codes using integers.|$|R
5000|$|While modern inkjet {{and laser}} {{printers}} are {{nowhere near as}} spontaneously flammable as their mainframe ancestors, the lp <b>device</b> <b>code</b> {{in all sorts of}} POSIX-compliant operating systems retained this legacy message. As printer drivers and support improved, this error condition could be trapped and handled appropriately, and as a result, most Unix/Linux users today have never encountered the [...] "on fire" [...] message. However, the message is still present in many kernels, especially those with legacy parallel port device support, and continues to baffle users to this day. [...] The [...] "on fire" [...] message remains in the Linux source code as of version 4.0.|$|E
5000|$|Local Memory:Local {{memory is}} {{meant as a}} memory {{location}} used to hold [...] "spilled" [...] registers. Register spilling occurs when a thread block requires more register storage than is available on an SM. Local memory is used only for some automatic variables (which are declared in the <b>device</b> <b>code</b> {{without any of the}} [...] qualifiers). Generally, an automatic variable resides in a register except for the following: (1) Arrays that the compiler cannot determine are indexed with constant quantities; (2) Large structures or arrays that would consume too much register space; Any variable the compiler decides to spill to local memory when a kernel uses more registers than are available on the SM.|$|E
5000|$|IBM debuted a {{prototype}} <b>device,</b> <b>code</b> named [...] "Angler," [...] on November 23, 1992 at the COMDEX computer and technology trade show in Las Vegas, Nevada, United States. The Angler prototype combined a mobile phone and PDA into one device, allowing a user {{to make and}} receive telephone calls, facsimiles, emails and cellular pages. Not only did the prototype have many PDA features including a calendar, address book and notepad, but also demonstrated other apps such as maps, stocks and news. COMDEX show attendees and the press showed notable interest in the device. The day after Angler's debut, USA Today featured a photo {{on the front page}} of the Money section showing Frank Canova, IBM's lead architect and inventor of the smartphone, holding the Angler prototype.|$|E
50|$|Microsoft {{originally}} sold MS-DOS only to {{original equipment}} manufacturers (OEMs). One {{major reason for}} this was that not all early PCs were 100% IBM PC compatible. DOS was structured such {{that there was a}} separation between the system specific <b>device</b> driver <b>code</b> (IO.SYS) and the DOS kernel (MSDOS.SYS). Microsoft provided an OEM Adaptation Kit (OAK) which allowed OEMs to customize the <b>device</b> driver <b>code</b> to their particular system. By the early 1990s, most PCs adhered to IBM PC standards so Microsoft began selling MS-DOS in retail with MS-DOS 5.0.|$|R
40|$|DE 102007013026 A 1 UPAB: 20081013 NOVELTY - The device has {{a number}} of {{encoders}} for coding different information signals using a common processing power. An adjusting <b>device</b> adjusts <b>coding</b> parameters depending on signal-dependent information with consideration of the power in such a manner that a sum of coding complexities does not exceed a value independent of the power. The adjusting device and the encoders cooperate with each other in such a manner that the distribution of power depends on the parameters or a coding complexity of the individual encoders with respect to successive time intervals. DETAILED DESCRIPTION - INDEPENDENT CLAIMS are also included for the following: (1) a system for coding a number of information signals, comprising a multiplex equipment (2) a procedure for coding information signals using encoders (3) a <b>device</b> for <b>coding</b> a number of video signals using a common processing power, comprising video encoders (4) a procedure for coding a number of video signals using video encoders (5) a computer program with a program code to perform a method for coding a number of video signals using video encoders. USE - <b>Device</b> for <b>coding</b> information signal by a common processing power. ADVANTAGE - The <b>device</b> effectively <b>codes</b> the information signals using the common processing power, which enables efficient coding of the information signals...|$|R
50|$|Additionally, {{a special}} mention {{was made to}} honor the memory and {{contribution}} of Adrian Hands, who used a morse input <b>device</b> to <b>code</b> and successfully submit a gnome patch, three days before he died from ALS.|$|R
5000|$|Beacons {{transmitting}} on the W-Link frequency send {{a specific}} <b>device</b> <b>code</b> {{to assist in}} isolating and pinpointing multiple signals, and facilitate {{all of the above}} features. Certain beacons like the Mammut® Pulse Barryvox also detect micro-movements in the user, including the minuscule movement generated by a heart beat. These beacons will transmit this information across the W-Link frequency, so that any user with another W-Link capable transceiver can determine whether or not a buried victim is alive, and formulate rescue triage based on that situation. [...] The idea behind this is that if everyone in a group is wearing a vitals-capable W-Link transceiver and some group members are buried in an avalanche, the remaining group members will be able to determine which of the buried victims are still alive, and focus rescue efforts on those members.|$|E
40|$|International audienceThere is an {{increasing}} interest in Graphics Processing Units for general-purpose programming, due to their processing power and massively parallel design. Therefore, most consumer graphics hardware are now fully programmable using either Nvidia's CUDA toolkit or AMD/ATI Stream SDK. This presentation will give an analysis of how the GPU {{can be used by}} malware as an anti-reverse engineering platform, with examples using the CUDA technology. With CUDA, the GPU is fully programmable in C, but the resulting device program can't be debugged because Nvidia's GPUs do not support this feature natively. As a result, a malware analyst has to use static analysis against the <b>device</b> <b>code</b> {{in order to understand the}} malware. But this task is harder with GPU code than with traditional binaries since the source of a CUDA program is compiled to undocumented microcode (and therefore unsupported by standard disassemblers such as IDA Pro). Finally, this presentation will also assess the technical feasability of an unpacker written fully in <b>device</b> <b>code...</b>|$|E
30|$|In this section, {{more details}} about the {{implementation}} of the proposed algorithm will be described. The implementation has both the CPU side (host) and the GPU side (<b>device)</b> <b>code.</b> The code on the CPU side is developed to compute the convex hull of a simple polygon, which is relatively simple and easy to implement when compared to the code on the GPU side. Thus, implementation details are focused {{on the development of the}} GPU side code.|$|E
50|$|In comparison, Linux <b>device</b> driver <b>code</b> often must be {{reworked}} {{for each}} new architecture. As a consequence, in porting efforts by NetBSD and Linux developers, NetBSD has taken much {{less time to}} port to new hardware.|$|R
40|$|Abstract-Forward-bias {{tunneling}} {{is observed}} in heavily doped p-n junctions of bipolar transistors. A simple phenomenological model suitable to incorporation in <b>device</b> <b>codes</b> is developed. The model identifies as key parameters the space-charge-region (SCR) thickness at zero bias and the reduced doping level at its edges which can both {{be obtained from}} CV characteristics. This tunneling mechanism may limit the maximum gain achievable from scaled bipolar devices. HE SCALING of silicon bipolar transistors demands a T reduction in the base thickness and an accompanying increase in the base doping level. Among the peculiar physical phenomena that arise from high base impurity concentrations [I], [2], forward-bias tunneling in the base-emitter junctio...|$|R
5000|$|Mobile Application Framework (MAF) is Oracle's {{strategic}} direction for mobile application development. It is a rebranded product {{that was once}} known as Oracle ADF Mobile. The name change was a strategic decision to differentiate MAF from ADF. MAF is a hybrid framework for mobile development that enables development of a single source and generation of native applications for both iOS and Android <b>devices.</b> <b>Coding</b> of logic within mobile applications is done with the Java language. A UI layer can be developed {{with a set of}} components (AMX) that generate an HTML5 based user interface. In addition Oracle MAF can incorporate local HTML5 pages and remote HTML content generated from other servers.|$|R
30|$|Node-targeted attacks {{need more}} {{attention}} {{that in a}} normal WSN because of the propagation of information is {{more important for the}} correct working of CWSN. A node can be captured [32, 33] and attackers use reverse-engineered and become an instrument for mounting counterattacks. Other possibility is to destroy the nodes. This destruction not only affects to node functionality, but also affects whole network. Usually, node-targeted attacks ought to be less important for WSN. However, distributed information and co-operational behaviour in CWSN make a captured node a powerful weapon for attackers. Extracting a cryptographic key and modifying the internal <b>device</b> <b>code</b> are examples of node-targeted attacks.|$|E
40|$|Graphic Processing Units have {{during the}} recent years evolved into {{inexpensive}} high-performance many-core computing units. Earlier being accessible only by graphic APIs, new hardware architectures and programming tools {{have made it possible}} to program these devices using arbitrary data types and standard languages like C. This thesis investigates the development process and performance of image and video processing algorithms on graphic processing units, regardless of vendors. The tool used for programming the graphic processing units is OpenCL, a rela- tively new specification for heterogenous computing. Two image algorithms are investigated, bilateral filter and histogram. In addition, an attempt have been tried to make a template-based solution for generation and auto-optimalization of <b>device</b> <b>code,</b> but this approach seemed to have some shortcomings to be usable enough at this time...|$|E
40|$|The key to {{crafting}} {{an effective}} scalable parallel computing system lies in minimizing the delays {{imposed by the}} system. Of particular importance are communications delays, since parallel algorithms must communicate frequently. The communication delay is a systemimposed latency. The existence of relatively inexpensive high performance workstations and emerging high performance interconnect options provide compelling economic motivation to investigate NOW/COW (network /cluster of workstation) architectures. However, these commercial components have been designed for generality. Cluster nodes are connected by longer physical wire paths than found in special-purpose supercomputer systems. Both effects tend to impose intractable latencies on communication. Even larger system-imposed delays result from the overhead of sending and receiving messages. This overhead can come in several forms, including CPU occupancy by protocol and <b>device</b> <b>code</b> as well as interference with CPU access to vari [...] ...|$|E
50|$|The {{principles}} {{are based on}} a digital identity working identically and interchangeably for all five entity types: People, <b>Devices,</b> Organizations, <b>Code</b> and Agents; as defined by the Jericho Forum in their Identity, Entitlement & Access Management Commandments.|$|R
5000|$|AT&T Mobility began {{offering}} its first {{variant of the}} Galaxy S II (Model SGH-I777) on 2 October 2011. Prior to its release, AT&T Mobility's first variant of the <b>device</b> was <b>code</b> named [...] "Attain" [...] by Samsung.|$|R
50|$|Memory {{barriers}} are typically used when implementing low-level machine code that operates on memory shared by multiple <b>devices.</b> Such <b>code</b> includes synchronization primitives and lock-free data structures on multiprocessor systems, and device drivers that communicate with computer hardware.|$|R
