125|4476|Public
2500|$|Most {{existing}} database systems, {{including all}} major commercial database systems, are strong strict two phase locking (SS2PL) based and already CO compliant. Thus they {{can participate in}} a CO based solution for global serializability in multidatabase environments without any modification (except for the popular multiversioning, where additional CO aspects should be considered). Achieving global serializability across SS2PL based databases using atomic commitment (primarily using two phase commit, 2PC) has been employed for many years (i.e., using the same CO solution for a specific special case; however, no reference is known prior to CO, that notices this special case's automatic global deadlock resolution by the atomic commitment protocol's augmented-conflict-graph <b>global</b> <b>cycle</b> elimination process). Virtually all existing distributed transaction processing environments and supporting products rely on SS2PL and provide 2PC. As {{a matter of fact}} SS2PL together with 2PC have become a de facto standard. This solution is a homogeneous concurrency control one, suboptimal (when both Serializability and Strictness are needed; see Strict commitment ordering; SCO) but still quite effective in most cases, sometimes at the cost of increased computing power needed relatively to the optimum. (However, for better performance relaxed serializability is used whenever applications allow). It allows inter-operation among SS2PL-compliant different database system types, i.e., allows heterogeneity in aspects other than concurrency control. SS2PL is a very constraining schedule property, and [...] "takes over" [...] when combined with any other property. For example, when combined with any optimistic property, the result is not optimistic anymore, but rather characteristically SS2PL. On the other hand, CO does not change data-access scheduling patterns at all, and any combined property's characteristics remain unchanged. Since also CO uses atomic commitment (e.g., 2PC) for achieving global serializability, as SS2PL does, any CO compliant database system or transactional object can transparently join existing SS2PL based environments, use 2PC, and maintain global serializability without any environment change. This makes CO a straightforward, natural generalization of SS2PL for any conflict serializability based database system, for all practical purposes.|$|E
5000|$|The above <b>global</b> <b>cycle</b> {{elimination}} {{process by}} a voting deadlock {{can be explained}} in detail by the following observation: ...|$|E
50|$|In case of {{incompatible}} partial {{orders of}} two or more databases (no global partial order can embed the respective local partial orders together), a <b>global</b> <b>cycle</b> (spans two databases or more) in the global conflict graph is generated. This, together with CO, results in a cycle of blocked votes, and a voting-deadlock occurs for the databases on that cycle (however, allowed concurrent voting in each database, typically for almost all the outstanding votes, continue to execute). In this case the atomic commitment protocol fails to collect all the votes needed for the blocked transactions on that <b>global</b> <b>cycle,</b> and consequently the protocol aborts some transaction with a missing vote. This breaks the <b>global</b> <b>cycle,</b> the voting-deadlock is resolved, and the related blocked votes are free to be executed. Breaking the <b>global</b> <b>cycle</b> in the global conflict graph ensures that both global CO and global serializability are maintained. Thus, in case of incompatible local (partial) commitment orders no action is needed since the atomic commitment protocol resolves it automatically by aborting a transaction that is a cause for the incompatibility. Furthermore, also global deadlocks due to locking (global cycles in the augmented conflict graph with at least one data access blocking) result in voting deadlocks and are resolved automatically by the same mechanism.|$|E
5000|$|... #Subtitle level 4: Exact {{characterization}} of voting-deadlocks by <b>global</b> <b>cycles</b> ...|$|R
5000|$|The <b>Global</b> Carbon <b>Cycle</b> (Princeton Primers in Climate), The <b>Global</b> Carbon <b>Cycle</b> (Princeton Primers in Climate) ...|$|R
50|$|Atomic {{commitment}} protocols {{are intended}} {{and designed to}} achieve atomicity without considering database concurrency control. They abort upon detecting or heuristically finding (e.g., by timeout; sometimes mistakenly, unnecessarily) missing votes, and typically unaware of <b>global</b> <b>cycles.</b> These protocols can be specially enhanced for CO (including CO's variants below) both to prevent unnecessary aborts, and to accelerate aborts used for breaking <b>global</b> <b>cycles</b> in the <b>global</b> augmented conflict graph (for better performance by earlier release upon transaction-end of computing resources and typically locked data). For example, existing locking based global deadlock detection methods, other than timeout, can be generalized to consider also local commit and vote direct blocking, besides data access blocking. A possible compromise in such mechanisms is effectively detecting and breaking the most frequent and relatively simple to handle length-2 <b>global</b> <b>cycles,</b> and using timeout for undetected, much less frequent, longer cycles.|$|R
50|$|In 2013, on the 30th June, Ketchell {{departed}} Greenwich Park and {{embarked on}} an 18,000 mile unsupported <b>global</b> <b>cycle,</b> through 20 countries and cycling on average 100 miles a day.|$|E
50|$|Furthermore, in such {{environment}} data-access-locking related global deadlocks {{are resolved}} automatically (each such deadlock {{is generated by}} a <b>global</b> <b>cycle</b> in the augmented conflict graph (i.e., a voting deadlock; see above), involving at least one data-access lock (non-materialized conflict) and two database systems; thus, not a cycle in the regular conflict graph and does not affect serializability).|$|E
5000|$|Conflicts {{and thus}} cycles in the {{augmented}} conflict graph {{are determined by}} the transactions and their initial scheduling only, independently of the concurrency control utilized. With any variant of CO, any <b>global</b> <b>cycle</b> (i.e., spans two databases or more) causes a voting deadlock. Different CO variants may differ on whether a certain conflict is materialized or non-materialized.|$|E
25|$|Classes of {{schedules}} {{defined by}} relaxed global serializability properties either contain the global serializability class, or are incomparable with it. What differentiates techniques for relaxed global conflict serializability (RGCSR) properties {{from those of}} relaxed conflict serializability (RCSR) properties that are not RGCSR is typically the different way <b>global</b> <b>cycles</b> (span two or more databases) in the global conflict graph are handled. No distinction between <b>global</b> and local <b>cycles</b> exists for RCSR properties that are not RGCSR. RCSR contains RGCSR. Typically RGCSR techniques eliminate local cycles, i.e., provide local serializability (which can be achieved effectively by regular, known concurrency control methods), however, obviously they do not eliminate all <b>global</b> <b>cycles</b> (which would achieve global serializability).|$|R
50|$|In the {{presence}} of CO the augmented conflict graph {{is in fact a}} (reversed edge) local-commit and voting wait-for graph: An edge exists from a first transaction, either local or global, to a second, if the second is waiting for the first to end in order to be either voted on (if global), or locally committed (if local). All <b>global</b> <b>cycles</b> (across two or more databases) in this graph generate voting-deadlocks. The graph's <b>global</b> <b>cycles</b> provide complete characterization for voting deadlocks and may include any combination of materialized and non-materialized conflicts. Only cycles of (only) materialized conflicts are also cycles of the regular conflict graph and affect serializability. One or more (lock related) non-materialized conflicts on a cycle prevent it from being a cycle in the regular conflict graph, and make it a locking related deadlock. All the <b>global</b> <b>cycles</b> (voting-deadlocks) need to be broken (resolved) to both maintain global serializability and resolve global deadlocks involving data access locking, and indeed they are all broken by the atomic commitment protocol due to missing votes upon a voting deadlock.|$|R
5000|$|COMPLICIT GEOGRAPHIES, 2016, Edited by Ivor Powell. 400 page {{monograph}} on artwork by Jeannette Unite investigating how wealth {{from land}} and Earth is divided, measured and allocated and <b>global</b> <b>cycles</b> of extraction, consumption and waste.|$|R
50|$|Comment: This {{observation}} {{also explains}} the correctness of Extended CO (ECO) below: Global transactions' voting order must follow the conflict graph order with vote blocking when order relation (graph path) exists between two global transactions. Local transactions are not voted on, and their (local) commits are not blocked upon conflicts. This results in same voting-deadlock situations and resulting <b>global</b> <b>cycle</b> elimination process for ECO.|$|E
50|$|In a CO {{compliant}} multidatabase {{system a}} locking-based global-deadlock, involving {{at least one}} data-access lock (non-materialized conflict), and two or more database systems, {{is a reflection of}} a <b>global</b> <b>cycle</b> in the Global augmented conflict graph, which results in a voting-deadlock. Such cycle is not a cycle in the (regular) Global conflict graph (which reflects only materialized conflicts, and thus such cycle does not affect serializability).|$|E
5000|$|... holds a {{read-lock}} on x and [...] holds read-locks on y. Thus [...] and [...] are {{blocked by}} the lock compatibility rules of SS2PL and cannot be executed. This is a distributed deadlock situation, {{which is also a}} voting-deadlock (see below) with a distributed (<b>global)</b> <b>cycle</b> of length 2 (number of edges, conflicts; 2 is the most frequent length). The local sub-transactions are in the following states: ...|$|E
40|$|The Integrated Project (WATCH) brings {{together}} the hydrological, water resources and climate communities to analyse, quantify and predict {{the components of}} the current and future <b>global</b> water <b>cycles</b> and related water resources, evaluate their uncertainties and clarify the overall vulnerability of global water resources related to the main societal and economic sectors. The WATCH project will analyse and describe the current <b>global</b> water <b>cycle,</b> especially changes in extremes (droughts and floods). It will also evaluate, in a consistent way, how the <b>global</b> water <b>cycle</b> and its extremes will respond to future drivers of global change (including increasing greenhouse gas concentrations and land cover change). An essential component of the analysis of the 20 th and 21 st century <b>global</b> water <b>cycle</b> will be a better understanding of feedbacks in the coupled system as they affect the <b>global</b> water <b>cycle</b> and the uncertainties in coupled climate-hydrological model predictions using a combination of model ensembles and observations. Finally WATCH will provide comprehensive quantitative and qualitative assessments and predictions of the vulnerability of the water resources and water-climate-related vulnerabilities and risks for the 21 st century...|$|R
5000|$|A. Ganachaud, Carl Wunsch <b>Global</b> Biogeochemical <b>Cycles,</b> October 2002 ...|$|R
5000|$|International Max Planck Research School for <b>Global</b> Biogeochemical <b>Cycles,</b> Jena ...|$|R
5000|$|However, since {{database}} systems schedule their transactions independently, it {{is possible}} that the transactions' precedence orders in two databases or more are not compatible (no global partial order exists that can embed the respective local partial orders together). With CO precedence orders are also the commitment orders. When participating databases in a same distributed transaction do not have compatible local precedence orders for that transaction (without [...] "knowing" [...] it; typically no coordination between database systems exists on conflicts, since the needed communication is massive and unacceptably degrades performance) it means that the transaction resides on a <b>global</b> <b>cycle</b> (involving two or more databases) in the global conflict graph. In this case the atomic commitment protocol will fail to collect all the votes needed to commit that transaction: By the vote ordering strategy above at least one database will delay its vote for that transaction indefinitely, to comply with its own commitment (precedence) order, since it will be waiting to the completion of another, preceding transaction on that <b>global</b> <b>cycle,</b> delayed indefinitely by another database with a different order. This means a voting-deadlock situation involving the databases on that cycle.As a result, the protocol will eventually abort some deadlocked transaction on this <b>global</b> <b>cycle,</b> since each such transaction is missing at least one participant's vote. Selection of the specific transaction on the cycle to be aborted depends on the atomic commitment protocol's abort policies (a timeout mechanism is common, but it may result in more than one needed abort per cycle; both preventing unnecessary aborts and abort time shortening can be achieved by a dedicated abort mechanism for CO). Such abort will break the <b>global</b> <b>cycle</b> involving that distributed transaction. Both deadlocked transactions and possibly other in conflict with the deadlocked (and thus blocked) will be free to be voted on. It is worthwhile noting that each database involved with the voting-deadlock continues to vote regularly on transactions that are not in conflict with its deadlocked transaction, typically almost all the outstanding transactions. Thus, in case of incompatible local (partial) commitment orders, no action is needed since the atomic commitment protocol resolves it automatically by aborting a transaction that is a cause of incompatibility. This means that the above vote ordering strategy is also a sufficient condition for guaranteeing Global CO.|$|E
50|$|On the land, {{phosphorus}} (chemical symbol, P) gradually {{becomes less}} available to plants {{over thousands of}} years, because it is slowly lost in runoff. Low concentration of P in soils reduces plant growth, and slows soil microbial growth - as shown in studies of soil microbial biomass. Soil microorganisms act as both sinks and sources of available P in the biogeochemical cycle. Locally, transformations of P are chemical, biological and microbiological: the major long-term transfers in the <b>global</b> <b>cycle,</b> however, are driven by tectonic movements in geologic time.|$|E
5000|$|In 1957, the GAAP {{opened the}} First National Conference of the Movement of the Communist Left in Livorno, from the 3-4 November, 1957. Cervetto and Parodi, now holding clearly Leninist positions, present the [...] "Thesis of 1957." [...] In the thesis, they analyze the <b>global</b> <b>cycle</b> of capitalism, and {{explicitly}} exclude {{the possibility of}} a global crisis in the short term. They also indicate the need for the formation of a class party from [...] "a deep and passionate theoretical work." [...] However, differences of opinions caused the expulsion of Masini and Seniga, who then joined the PSI.|$|E
50|$|Global ECO (all <b>global</b> <b>cycles</b> in the <b>global</b> {{conflict}} graph {{are eliminated}} by atomic commitment) together with Local serializability (i.e., each database system maintains serializability locally; all local cycles are eliminated) imply <b>Global</b> serializability (all <b>cycles</b> are eliminated). This {{means that if}} each database system in a multidatabase environment provides local serializability (by any mechanism) and enforces the vote ordering strategy in the theorem above (a generalization of CO's vote ordering strategy), then Global serializability is guaranteed (no local CO is needed anymore).|$|R
50|$|He teaches {{classes on}} global warming, {{environmental}} chemistry, and <b>global</b> geochemical <b>cycles.</b>|$|R
5000|$|Samuel S. Butcher et al. (Eds.), 1992, <b>Global</b> Biogeochemical <b>Cycles.</b> Academic, [...]|$|R
5000|$|Robert A. Duce (born April 9, 1935) is {{a pioneer}} in the study of {{atmospheric}} chemistry, and a Distinguished Professor Emeritus [...] at Texas A&M University. He has made significant contributions to the understanding of chemical exchanges between the atmosphere and the oceans, and the <b>global</b> <b>cycle</b> of trace elements.Dr. Duce received a B.S., chemistry (1957) from Baylor University and a Ph.D in the subject of inorganic and nuclear chemistry (1964) at Massachusetts Institute of Technology, where he was also a post-doctoral fellow. (1965) His thesis title was [...] "Determination of iodine, bromine, and chlorine in the marine atmosphere by neutron activation analysis".|$|E
5000|$|Note {{that such}} global graph {{contains}} (has embedded) all the (reversed edge) regular local wait-for graphs, and also may include locking based global cycles (which cannot {{exist in the}} local graphs). For example, if all the databases on a <b>global</b> <b>cycle</b> are SS2PL based, then all the related vote blocking situations are caused by locks (this is the classical, and probably the only global deadlock situation {{dealt with in the}} database research literature). This is a global deadlock case where each related database creates a portion of the cycle, but the complete cycle does not reside in any local wait-for graph.|$|E
5000|$|In the {{scenario}} above both conflicts are non-materialized, {{and the global}} voting-deadlock is reflected as a cycle in the global wait-for graph (but not in the global conflict graph; see Exact characterization of voting-deadlocks by global cycles above). However the database system can utilize any CO variant with exactly the same conflicts and voting-deadlock situation, and same resolution. Conflicts can be either materialized or non-materialized, depending on CO variant used. For example, if SCO (below) {{is used by the}} distributed database system instead of SS2PL, then the two conflicts in the example are materialized, all local sub-transactions are in ready states, and vote blocking occurs in the two transactions, one on each node, because of the CO voting rule applied independently on both A and B: due to conflicts [...] is not voted on before [...] ends, and [...] is not voted on before [...] ends, which is a voting-deadlock. Now the conflict graph has the <b>global</b> <b>cycle</b> (all conflicts are materialized), and again it is resolved by the atomic commitment protocol, and distributed serializability is maintained. Unlikely for a distributed database system, but possible in principle (and occurs in a multi-database), A can employ SS2PL while B employs SCO. In this case the <b>global</b> <b>cycle</b> is neither in the wait-for graph nor in the serializability graph, but still in the augmented conflict graph (the union of the two). The various combinations are summarized in the following table: ...|$|E
5000|$|Kenji Nakamura - 16th grade Professor of Satellite Meteorology Laboratory, Center for <b>Global</b> Water <b>Cycle</b> Research, Nagoya University ...|$|R
5000|$|Maintenance and Appropriate Enhancement of Forest Resources {{and their}} Contribution to <b>Global</b> Carbon <b>Cycles</b> ...|$|R
40|$|The global {{biosphere}} in {{an exceedingly}} complex system. To gain {{an understanding of}} its structure and dynamic features, it is necessary not only to increase the knowledge about the detailed processes but also to develop models of how global interactions take place. Attempts to analyze the detailed physical, chemical and biological processes in this context need to be guided by an advancement of understanding of the latter. It is necessary to develop a strategy of data gathering that severs both these purposes simultaneously. The following papers deal with critical aspects in the <b>global</b> <b>cycles</b> of carbon, nitrogen, phosphorus and sulfur in details as well as the cycle of water and the flow of energy in the Earth's environment. The objective is to set partly the foundation for the development of mathematical models that allow exploration of the coupled dynamics of the <b>global</b> <b>cycles</b> of carbon, nitrogen, phosphorus, sulfur, as well as energy and water flux...|$|R
50|$|Let a multidatabase {{environment}} comprise CO compliant (which eliminates local cycles) database {{systems that}} enforce, each, Global CO (using the condition in the theorem above). Then a voting-deadlock occurs if {{and only if}} a <b>global</b> <b>cycle</b> (spans two or more databases) exists in the Global augmented conflict graph (also blocking by a data-access lock is represented by an edge). If the cycle does not break by any abort, then all the global transactions on it are involved with the respective voting-deadlock, and eventually each has its vote blocked (either directly, or indirectly by a data-access lock); if a local transaction resides on the cycle, eventually it has its (local) commit blocked.|$|E
50|$|<b>Global</b> <b>cycle</b> {{elimination}} (here voting-deadlock resolution by atomic commitment) {{and resulting}} aborted transactions' re-executions are time consuming, regardless of concurrency control used. If databases schedule transactions independently, global cycles are unavoidable (in a complete analogy to cycles/deadlocks generated in local SS2PL; with distribution, any transaction or operation scheduling coordination results in autonomy violation, and typically also in substantial performance penalty). However, {{in many cases}} their likelihood can be made very low by implementing database and transaction design guidelines that {{reduce the number of}} conflicts involving a global transaction. This, primarily by properly handling hot spots (database objects with frequent access), and avoiding conflicts by using commutativity when possible (e.g., when extensively using counters, as in finances, and especially multi-transaction accumulation counters, which are typically hot spots).|$|E
50|$|In summary, {{any single}} global {{transaction}} can participate simultaneously in databases that may employ each any, possibly different, CO variant (while concurrently running processes in each such database, and running concurrently with local and other global transactions in each such database). The atomic commitment protocol is indifferent to CO, {{and does not}} distinguish between the various CO variants. Any <b>global</b> <b>cycle</b> generated in the augmented global conflict graph may span databases of different CO variants, and generate (if not broken by any local abort) a voting deadlock that is resolved by atomic commitment {{exactly the same way}} as in a single CO variant environment. local cycles (now possibly with mixed materialized and non-materialized conflicts, both serializability and data-access-locking deadlock related, e.g., SCO) are resolved locally (each by its respective variant instance's own local mechanisms).|$|E
2500|$|Fasullo, J., Substitute Lectures for ATOC 3600: Principles of Climate, Lectures on the <b>global</b> oxygen <b>cycle</b> ...|$|R
50|$|In 2012 {{he was one}} of four {{winners of}} the Dutch Spinoza Prize and {{received}} a 2,5 million euro grant. The awarding organisation, the Netherlands Organisation for Scientific Research, praised Jetten for providing new insights. Jetten has proven that several reactions that were considered impossible are used by bacteria to obtain energy, which {{plays an important role in}} the <b>global</b> <b>cycles</b> of nitrogen, methane and sulphur.|$|R
40|$|Vegetation {{dynamics}} {{depend on}} the temperature, precipitation and concentration of carbon in the atmosphere. On the other hand, temperature dynamics {{depend on the}} concentrations of carbon and water vapour in the atmosphere, and the albedo of the planetary surface. For instance, the albedo of 'white sands' desert is equal to 0. 4; for coniferous forest it is about 0. 1. Our model includes the following simple submodels: <b>Global</b> carbon <b>cycle,</b> <b>global</b> hydrological <b>cycle</b> and vegetation, and the equation for annual global temperature. (orig. /HW) Available from TIB Hannover: RR 5801 (14) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekSIGLEDEGerman...|$|R
