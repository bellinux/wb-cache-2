13|35|Public
50|$|Although {{this initial}} NC {{standard}} {{was intended to}} promote the <b>diskless</b> <b>workstation</b> model of computing, it did not preclude computers with additional features, {{such as the ability}} to operate either as a <b>diskless</b> <b>workstation</b> or a conventional fat client. Thus, an ordinary personal computer (PC) having all the required features, could technically be classified as a Network Computer; indeed, Sun noted that contemporary PCs did indeed meet the NC reference requirements.|$|E
5000|$|... #Caption: Front {{and rear}} {{views of the}} Carry-I book-size LAN station <b>diskless</b> <b>workstation,</b> based on an Intel 80286 {{processor}} and produced by Taiwan's Flytech Technology circa 1991.|$|E
5000|$|A {{diskless}} node (or <b>diskless</b> <b>workstation)</b> is a workstation {{or personal}} computer without disk drives, which employs network booting to load its operating system from a server. (A computer {{may also be}} said {{to act as a}} diskless node, if its disks are unused and network booting is used.) ...|$|E
5000|$|The bootserver handled {{boot and}} dump {{requests}} from the <b>diskless</b> <b>workstations.</b> It {{was a simple}} process that talked directly to the Ethernet driver. Technically not really part of DNET, {{in that it was}} a satellite protocol merely associated with DNET installations. (As was the X.25 'safelink' file server protocol used to communicate between these same <b>diskless</b> <b>workstations</b> and their file servers.) ...|$|R
50|$|Typically, PXELINUX is {{used for}} {{performing}} Linux installations from a central network server, or for booting <b>diskless</b> <b>workstations.</b>|$|R
50|$|To further complicate matters, {{the root}} file {{system may be}} on a {{software}} RAID volume, LVM, NFS (on <b>diskless</b> <b>workstations),</b> or on an encrypted partition. All of these require special preparations to mount.|$|R
50|$|A further {{system was}} {{introduced}} in 1986 as the VAXmate, which included Microsoft Windows 1.0 and used VAX/VMS-based file and print servers along with integration into DEC's own DECnet-family, providing LAN/WAN connection from PC to mainframe or supermini. The VAXmate replaced the Rainbow, and in its standard form was the first widely marketed <b>diskless</b> <b>workstation.</b>|$|E
50|$|An {{example of}} where a handler saved {{the day was}} in ISC's <b>diskless</b> <b>workstation</b> support, where a bug in the {{implementation}} meant that using named pipes on the workstation could induce undesirable resource locking on the fileserver. A handler was created on the workstation to field accesses to the afflicted named pipes until the appropriate kernel fixes could be developed. This handler required approximately 5 kilobytes of code to implement, an indication that a non-trivial handler {{did not need to}} be large.|$|E
50|$|The 3Station was a <b>diskless</b> <b>workstation,</b> {{developed}} by Bob Metcalfe at 3Com and first available in 1986. The 3Station/2E had a 10 MHz 80286 processor, 1 megabyte of RAM (expandable to 5 MB), VGA-compatible graphics with 256 kB of video RAM, and integrated AUI/10BASE2 (BNC) network transceivers for LAN access. The product used a single printed-circuit board with four custom ASICs. It had neither a {{floppy disk drive}} nor a hard disk; it was booted from a server and stored all end-user files there.|$|E
50|$|Skolelinux {{has been}} a major {{contributor}} to rewriting the Debian-Installer. In addition, Skolelinux has conducted extensive development and testing of thin clients and <b>diskless</b> <b>workstations</b> {{as a part of the}} new LTSP version 5.|$|R
50|$|Hardware-based {{management}} {{has been available}} in the past, {{but it has been}} limited to auto-configuration (of computers that request it) using DHCP or BOOTP for dynamic IP address allocation and <b>diskless</b> <b>workstations,</b> as well as wake-on-LAN for remotely powering on systems.|$|R
5000|$|Historically, BOOTP {{has also}} been used for Unix-like <b>diskless</b> <b>workstations</b> to obtain the network {{location}} of their boot image, {{in addition to the}} IP address assignment. Enterprises used it to roll out a pre-configured client (e.g., Windows) installation to newly installed PCs.|$|R
50|$|Windows Fundamentals for Legacy PCs is a Windows XP Embedded {{derivative}} and, as such, is {{optimized for}} legacy PCs. It requires significantly fewer system resources than the fully featured Windows XP. It also features basic networking, extended peripheral support, DirectX, {{and the ability}} to launch the remote desktop clients from compact discs. In addition to local applications, it offers support for those hosted on a remote server using Remote Desktop. It can be installed on a local hard drive, or configured to run on a <b>diskless</b> <b>workstation.</b>|$|E
50|$|DNIX 5.2 had no {{networking}} protocol stacks internally (except for {{the thin}} X.25-based Ethernet protocol stack added by ISC {{for use by}} its <b>diskless</b> <b>workstation</b> support package), all networking was conducted by reading and writing to Handlers. Thus, there was no socket mechanism, but a libsocket(3) existed that used asynchronous I/O {{to talk to the}} TCP/IP handler. The typical Berkeley-derived networking program could be compiled and run unchanged (modulo the usual Unix porting problems), though it might not be as efficient as an equivalent program that used native asynchronous I/O.|$|E
5000|$|The PS/2E {{featured}} a 486SLC2 50/25MHz with 16 kilobytes of L1 cache allowing the CPU to execute instructions {{at twice the}} 25MHz bus speed while required instructions and data reside in the cache. No external L2 cache was designed on the motherboard however; so the machine relies on its 16 KB of L1 cache for performance. With an ISA bus, it accepts a single ISA option adapter {{with the use of}} a riser card. Depending on the sub-model number, it came supplied with either a special option adapter for four PC card PCMCIA slots, or as a <b>diskless</b> <b>workstation</b> with an ethernet or token-ring adapter. [...] Additional options included several PCMCIA cards, a color LCD screen, and a color LCD touch-screen with a special version of OS/2.|$|E
50|$|Network booting, {{shortened}} netboot, is {{the process}} of booting a computer from a network rather than a local drive. This method of booting can be used by routers, <b>diskless</b> <b>workstations</b> and centrally managed computers (thin clients) such as public computers at libraries and schools.|$|R
50|$|The {{product and}} service was {{developed}} by WebTV Networks, Inc., a company purchased by Microsoft Corporation and absorbed into MSN (the Microsoft Network). While most thin clients developed in the mid-1990s were positioned as <b>diskless</b> <b>workstations</b> for corporate intranets, WebTV was positioned as a consumer device for web access.|$|R
40|$|The {{distributed}} V kernel is a message-oriented kernel {{that provides}} uniform local and network interprocess communication. It is primarily {{being used in}} an environment of <b>diskless</b> <b>workstations</b> connected by a high-speed local network to a set of file servers. We describe a performance evaluation of the kernel, with particular emphasis on the cost of network file access. Our results show that over a local network: 1. <b>Diskless</b> <b>workstations</b> can access remote files with minimal performance penalty. 2. The V message facility can be used to access remote files at comparable cost to any well-tuned specialized file access protocol. We conclude that it is feasible to build a distributed system with all network communication using the V message facility even when most of the network nodes have no secondary storage. 1...|$|R
5000|$|<b>Diskless</b> <b>workstation</b> support. The workstation's kernel {{filesystem}} was removed, {{and replaced}} with an X.25-based Ethernet communications stub. The file server's kernel was also extended with a mating component that received the remote requests {{and handed them to}} a pool of kernel processes for service, though a standard handler could have been written to do this. (Later in its product lifecycle, ISC deployed standard SVR4-based Unix servers in place of the DNIX servers. These used X.25 STREAMS and a custom-written file server program. In spite of the less efficient structuring, the raw horsepower of the platforms used made for a much faster server. It is unfortunate that this file server program did not support all of the functionality of the native DNIX server. Tricky things, like named pipes, never worked at all. This was another justification for the named pipe handler process.) ...|$|E
5000|$|ISC also {{received}} {{the right to}} manufacture DIAB's DS90-10 and DS90-20 machines as its file servers. The multiprocessor DS90-20's, however, were too expensive for the target market and ISC designed its own servers and ported DNIX to them. ISC designed its own GUI-based diskless workstations for use with these file servers, and ported DNIX again. (Though ISC used Daisy workstations running Daisy DNIX to design the machines that would run DIAB's DNIX, there was negligible confusion internally as the drafting and layout staff rarely talked to the software staff. Moreover, the hardware design staff didn't use either system! The running joke went something like: [...] "At ISC we build computers, we don't use them.") The asynchronous I/O support of DNIX allowed for easy event-driven programming in the workstations, which performed well {{even though they had}} relatively limited resources. (The GUI <b>diskless</b> <b>workstation</b> had a 7 MHz 68010 processor and was usable with only 512K of memory, of which the kernel consumed approximately half. Most workstations had 1 MB of memory, though there were later 2 MB and 4 MB versions, along with 10 MHz processors.) A full-blown installation could consist of one server (16 MHz 68020, 8 MB of RAM, and a 200 MB hard disk) and up to 64 workstations. Though slow to boot up, such an array would perform acceptably in a bank teller application. Besides the innate efficiency of DNIX, the associated DIAB C compiler was key to high performance. It generated particularly good code for the 68010, especially after ISC got done with it. (ISC also retargeted it to the Texas Instruments TMS34010 graphics coprocessor used in its last workstation.) The DIAB C compiler was, of course, used to build DNIX itself {{which was one of the}} factors contributing to its efficiency, and is still available (in some form) through Wind River Systems.|$|E
40|$|The paper {{deals with}} the problem of {{protection}} for the process of operating system loading from the server to the <b>diskless</b> <b>workstation</b> through a network and the analysis of the existing ways of integrity monitoring for information transferred under network protocols. Within the scope of research, solution is proposed making it possible to perform integrity monitoring of the operating system loaded image before control is transferred to it. For security protection of loading, key information elements are marked which integrity needs to be guaranteed. The developed solution, as an information security product, should meet the requirements of information security {{and at the same time}} be compatible to other hardware and software tools used for protection of the automated systems. The proposed solution implements the algorithm of integrity monitoring for an operating system designed with the use of public key infrastructure. Analysis of hardware configuration for the projected solution from the point of view of its usability and administration ease is provided, and possibilities of intruder’s attacks to the protected information are estimated, as well...|$|E
50|$|Apricot {{continued}} {{to experiment with}} unusual form-factors in a market dominated by standardised 'beige boxes'. They produced a range of high-availability servers (the VX and Shogun ranges) with integrated uninterruptible power supply (UPS), low-profile 'LANStation' PCs specifically designed for use on office networks, and <b>diskless</b> <b>workstations</b> booted over the network.|$|R
5000|$|In 1998 Squirrel Systems {{released}} Squirrel Embedded Linux (SEL), {{a customized}} distribution of Linux for [...] "thin client" [...] terminal architecture. SEL has several characteristics that were unique {{at the time}} of development, including primary support for <b>diskless</b> <b>workstations,</b> customized high-volume touchscreen drivers, integrated Java virtual machine with hardware control, and two-stage booting from a Windows server.|$|R
5000|$|Other users collect large {{quantities}} of equipment together at home to create [...] "SETI farms", which typically consist {{of a number of}} computers consisting of only a motherboard, CPU, RAM and power supply that are arranged on shelves as <b>diskless</b> <b>workstations</b> running either Linux or old versions of Microsoft Windows [...] "headless" [...] (without a monitor).|$|R
50|$|Companies that {{licensed}} CTOS included Bull (STARSYS), and Burroughs (BTOS) and {{who later}} merged with Sperry to become Unisys. Unisys {{was the single}} largest customer with whom Convergent Technologies merged to become one company in 1988. At its peak, CTOS had over 800,000 users worldwide. <b>Diskless</b> <b>workstations</b> (e.g., Bull) used the Intel 80186 processor, a processor seldom used by standard PCs.|$|R
5000|$|In early January 1992, HP {{introduced}} the Model 705, code-named [...] "Bushmaster Snake", and the Model 710, code-named [...] "Bushmaster Junior". Both systems are low-end <b>diskless</b> <b>workstations,</b> with the Model 705 using a 32 MHz PA-7000 and the Model 710 using a 50 MHz version. At introduction, the Model 705 was priced at under US$5,000, and the Model 710 under US$10,000.|$|R
5000|$|Major {{corporations}} tend to instead implement {{thin clients}} (using Microsoft Windows Terminal Server or other such software), since much lower specification hardware {{can be used}} for the client (which essentially acts as a simple [...] "window" [...] into the central server which is actually running the users operating system as a login session). Of course, diskless nodes can also be used as thin clients. Moreover, thin client computers are increasing in power {{to the point where they}} are becoming suitable as fully-fledged <b>diskless</b> <b>workstations</b> for some applications.|$|R
50|$|The {{product and}} service were {{developed}} by America Online. While most thin clients developed in the mid-1990s were positioned as <b>diskless</b> <b>workstations</b> for corporate intranets, AOL TV was positioned as a consumer device for web access. The service is no longer supported by AOL as the documentation {{has been removed from}} their servers. It has been closed since 2002. Since the device was a dedicated web browser appliance, the cost of licensing a proprietary operating system could be avoided. For inexpensive devices, the cost of licensing a proprietary operating system is substantial.|$|R
50|$|In 1984, the Reverse Address Resolution Protocol (RARP), {{defined in}} RFC 903, was {{introduced}} to allow simple devices such as <b>diskless</b> <b>workstations</b> to dynamically obtain a suitable IP address. However, because it acted at the data link layer it made implementation difficult on many server platforms, and also required that a server be present on each individual network link. RARP was superseded by the Bootstrap Protocol (BOOTP) defined in RFC 951 in September 1985. This introduced {{the concept of a}} relay agent, which allowed the forwarding of BOOTP packets across networks, allowing one central BOOTP server to serve hosts on many IP subnets.|$|R
50|$|As of 2007, {{centralized}} computing is now {{coming back into}} fashion - to a certain extent. Thin clients {{have been used for}} many years by businesses to reduce total cost of ownership, while web applications are becoming more popular because they can potentially be used on many types of computing device without any need for software installation. Already, however, there are signs that the pendulum is swinging back again, away from pure centralization, as thin client devices become more like <b>diskless</b> <b>workstations</b> due to increased computing power, and web applications start to do more processing on the client side, with technologies such as AJAX and rich clients.|$|R
40|$|Communicating patient-specific diet {{information}} at any large medical institution {{is a complex}} process. The Johns Hopkins Hospital has chosen to automate the manual method of communicating this information. The development of the “Ward-Nutrition Communication Application” will allow users on an inpatient Nursing unit to order patient diets and other nutritional needs utilizing a multi-windowed, menu-based and mouse driven environment. This, and other applications, will run on high performance, <b>diskless</b> <b>workstations</b> from several nursing units on a pilot basis. The application described in this paper will expedite the communication of patient dietary information, decrease {{the amount of time}} currently required to perform the manual tasks, and introduce the utilization of workstation technology to novice users in a clinical setting...|$|R
40|$|CFDP is a {{protocol}} that {{takes advantage of}} the broadcast nature of CSMA net works to speed up simultaneous onetomany le transfers eg when booting <b>diskless</b> <b>workstations</b> The CFDP server listens and services requests for entire les or portions thereof CFDP clients rst determine whether the le they are interested in is already being transferred in which case they eavesdrop	 and load {{as much of it as}} they can or they initiate a new transfer The clients timeout when the server stops transmitting and if they are still missing parts of the le they request them with a blocktransfer request CFDP is a backend protocol a front end is needed to handle naming and security issues A simple such front end is also presented her...|$|R
40|$|Load sharing {{can improve}} {{performance}} in distributed systems by transferring work from heavily loaded nodes to lightly loaded nodes. We propose a filter component {{to be included}} in a load sharing algorithm to detect short-lived jobs not worth considering for remote execution. One filter, called History, detects short-lived jobs by using job names and statistics based on previous executions. Job traces were collected from <b>diskless</b> <b>workstations</b> connected by a local area network and supported by a distributed file system. Trace driven simulation was then used to evaluate History with respect to other filters. Two load sharing algorithms showed significant improvement of the mean job response ratio when the History filter was added. 1 Introduction In a computing environment that consists of workstations, a high-speed interprocessor communication network, and shared resources such as file servers and printers, users often observe very unsatisfactory performance. This is often due to the imb [...] ...|$|R
40|$|Sprite {{is a new}} {{operating}} system for networked uniprocessor and multiprocessor workstations with large physical memories. It implements a set of kernel calls much like those of 4. 3 BSD UNIX, with extensions to allow processes on the same workstation to share memory and to allow processes to migrate between workstations. The implementation of the Sprite kernel contains several interesting features, including a remote procedure call facility for communication between kernels, the use of prefix tables to implement a single file name space and to provide flexibility in administering the network file system, and large variable-size file caches on both client and server machines, which provide high performance even for <b>diskless</b> <b>workstations.</b> Keywords: Operating systems, networks, file systems, process migration, remote procedure call. The Sprite Network Operating System November 19, 1987 1. Introduction Sprite is an experimental network {{operating system}} under development at the University [...] ...|$|R
50|$|Hardware-based {{management}} {{works at}} a different level from software applications, and uses a communication channel (through the TCP/IP stack) {{that is different from}} software-based communication (which is through the software stack in the operating system). Hardware-based management does not depend on the presence of an OS or locally installed management agent. Hardware-based management has been available on Intel/AMD based computers in the past, but it has largely been limited to auto-configuration using DHCP or BOOTP for dynamic IP address allocation and <b>diskless</b> <b>workstations,</b> as well as wake-on-LAN (WOL) for remotely powering on systems. AMT is not intended to be used by itself; it is intended to be used with a software management application. It gives a management application (and thus, the system administrator who uses it) access to the PC down the wire, in order to remotely do tasks that are difficult or sometimes impossible when working on a PC that does not have remote functionalities built into it.|$|R
40|$|Introduction The work {{presented}} in this dissertation was motivated by two recent changes in technology: networks and large memories. The introduction of networks {{has led to a}} move away from centralized timesharing operating systems towards network operating systems. In these network operating systems each user has a personal highperformance workstation and communicates with other users across a network. Data that was once stored on a single set of disks in the timesharing systems is now distributed amongst the disks of several workstations. In fact, many of the workstations do not have any disk at all; the data for these <b>diskless</b> <b>workstations</b> is stored across the network on the disks of other workstations. The move towards network operating systems poses two problems: how to provide users with high performance and how to allow users to easily share data. Performance is a problem in network environments because each access of data may require both a network access and a disk ac...|$|R
