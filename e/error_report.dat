75|2707|Public
2500|$|... 1925: Edmonds reports Piltdown geology <b>error.</b> <b>Report</b> ignored.|$|E
2500|$|A {{programming}} language compiler can also implement a dependent type or an effect system, which enables even more program specifications {{to be verified}} by a type checker. Beyond simple value-type pairs, a virtual [...] "region" [...] of code is associated with an [...] "effect" [...] component describing {{what is being done}} with what, and enabling for example to [...] "throw" [...] an <b>error</b> <b>report.</b> [...] Thus the symbolic system may be a type and effect system, which endows it with more safety checking than type checking alone.|$|E
5000|$|... 1925: Edmonds reports Piltdown geology <b>error.</b> <b>Report</b> ignored.|$|E
40|$|The <b>error</b> <b>reports</b> {{produced}} by compilers for languages with polymorphic type inference are often uninformative. Several {{attempts have been}} made to produce improved <b>error</b> <b>reports.</b> We de ne a manifesto for good <b>error</b> <b>reports</b> and use it to evaluate both the traditional algorithms, and several improved algorithms, including two of our own devising...|$|R
50|$|End-users {{may have}} {{accessed}} the Winqual site through windows <b>error</b> <b>reporting</b> response links or other {{references to the}} infrastructure in the Windows <b>Error</b> <b>Reporting</b> systems.|$|R
25|$|Some programmers write {{software}} with <b>error</b> <b>reporting</b> {{features that}} collect details {{that may be}} helpful in fixing the problem, and display those details on the screen, or store them to a file such as a core dump, {{or in some cases}} an automatic <b>error</b> <b>reporting</b> system such as Windows <b>Error</b> <b>Reporting</b> can automatically phone home and email those details to the programmers.|$|R
5000|$|Error Reporting: Users can {{optionally}} submit <b>error</b> <b>report</b> {{information to}} Microsoft for analysis to improve Office XP. Error reporting {{was instrumental in}} providing solutions included in all three Office XP service packs to address common issues. Error reports can also be submitted to corporate departments.|$|E
50|$|Like BOMArchiveHelper, DiskImageMounter has no GUI when double-clicked; {{doing so}} does nothing. The only GUI the program ever {{displays}} {{is a window}} with a progress bar and mount options (cancel or skip verification) or an <b>error</b> <b>report</b> if it could not mount the image. It is found in /System/Library/CoreServices/DiskImageMounter.app.|$|E
50|$|PDBREPORT entries {{may be seen}} as error {{reports for}} {{macromolecular}} structures deposited in the PDB. The term <b>error</b> <b>report</b> should be used with caution as the WHAT_CHECK software that produces the PDBREPORT flags every anomaly of four standard deviations or more as an error. Some of these reported anomalies may be genuine deviations from the mean rather than errors.|$|E
40|$|Purpose – The {{purpose of}} this paper is to explore antecedents, namely reasons for/against <b>error</b> <b>reporting,</b> attitudes, {{subjective}} norms, and perceived control, of nurses’ intentions to <b>report</b> their <b>errors</b> at work. Design/methodology/approach – A structured equation model with cross-sectional data were estimated to test the hypotheses on a sample of 188 Italian nurses. Findings – Reasons for/against <b>error</b> <b>reporting</b> were associated with attitudes, subjective norms and perceived control. Further, reasons against were related to nurses’ intentions to <b>report</b> <b>errors</b> whereas reasons for <b>error</b> <b>reporting</b> were not. Lastly, perceived control was found to partially mediate the effects of reasons against <b>error</b> <b>reporting</b> on nurses’ intentions to act. Research limitations/implications – Self-report data were collected at one point in time. Practical implications – This study offers recommendations to healthcare managers on what factors may encourage nurses to <b>report</b> their <b>errors.</b> Social implications – Lack of <b>error</b> <b>reporting</b> prevents timely interventions. The study contributes to documenting motivations that can persuade or dissuade nurses in this important decision. Originality/value – This study extends prior research on <b>error</b> <b>reporting</b> that lacks a strong theoretical foundation by drawing on behavioral reasoning theory. Keywords Motivation (psychology), Attitudes, Nurses Paper type Research pape...|$|R
40|$|Context: <b>Reporting</b> {{of medical}} <b>errors</b> {{is a widely}} {{recognized}} mechanism for initiating patient safety im-provement, yet we know little about the feasibility of <b>error</b> <b>reporting</b> in physician offices, {{where the majority of}} medical care in the United States is rendered. Objective: To identify barriers and motivators for <b>error</b> <b>reporting</b> by family physicians and their of-fice staff based on the experiences of those participating in a testing process <b>error</b> <b>reporting</b> study. Design: Qualitative focus group study, analyzed using the editing method...|$|R
5000|$|Map {{errors are}} handled using Navteq Map Reporter, which is {{described}} as a [...] "community-based online tool for suggesting changes to the Navteq map". The Navteq Map Reporter's API makes it possible for manufacturers of devices using Navteq maps to build in <b>error</b> <b>reporting</b> features into their products. Map <b>errors</b> are <b>reported</b> by users of products lacking such <b>error</b> <b>reporting</b> feature, which are most, via the Navteq Map Reporter page.|$|R
50|$|Errors {{collected}} by WER clients {{are sent to}} the WER service. The WER service employs approximately 60 servers connected to a 65TB storage area network that stores the <b>error</b> <b>report</b> database and a 120TB storage area network that stores up to 6 months of raw CAB files. The service is provisioned to receive and process well over 100 million error reports per day, which is sufficient to survive correlated global events such as Internet worms.|$|E
50|$|WER is a {{distributed}} system. Client-side software detects {{an error}} condition, generates an <b>error</b> <b>report,</b> labels the bucket, and reports the error to the WER service. The WERservice records the error occurrence and then, depending on information {{known about the}} particular error, might request additional data from the client, or direct the client to a solution. Programmers access the WER service to retrieve data for specific error reports and for statistics-based debugging.|$|E
5000|$|A {{programming}} language compiler can also implement a dependent type or an effect system, which enables even more program specifications {{to be verified}} by a type checker. Beyond simple value-type pairs, a virtual [...] "region" [...] of code is associated with an [...] "effect" [...] component describing {{what is being done}} with what, and enabling for example to [...] "throw" [...] an <b>error</b> <b>report.</b> Thus the symbolic system may be a type and effect system, which endows it with more safety checking than type checking alone.|$|E
50|$|Microsoft first {{introduced}} Windows <b>Error</b> <b>Reporting</b> with Windows XP.|$|R
50|$|Syntax highlighting, auto completion, code assist, <b>error</b> <b>reporting,</b> etc.|$|R
40|$|Microsoft {{provides}} {{infrastructure to}} harvest and analyze <b>error</b> <b>reports</b> from Windows XP systems. This infrastructure {{makes it possible}} for IT professionals to harvest and analyze their organization’s <b>error</b> <b>reports</b> with relatively modest investments, even on networks not connected to the Internet. This paper introduces this infrastructure and describes how it can be harnessed...|$|R
5000|$|Windows Hardware Error Architecture (WHEA) is an {{operating}} system hardware error handling mechanism introduced with Windows Vista and Windows Server 2008 {{as a successor}} to Machine Check Architecture (MCA) on previous versions of Windows. [...] The architecture consists of several software components that interact with the hardware and firmware of a given platform to handle and notify regarding hardware error conditions. [...] Collectively, these components provide: a generic means of discovering errors, a common <b>error</b> <b>report</b> format for those errors, a way of preserving error records, and an error event model based up on Event Tracing for Windows (ETW).|$|E
50|$|Windows Error Reporting {{has been}} {{improved}} significantly in Windows Vista. Most importantly {{a new set}} of public APIs have been created for reporting failures other than application crashes and hangs. Developers can create custom reports and customize the reporting user interface. The new APIs are documented in MSDN. The architecture of Windows Error Reporting has been revamped with a focus on reliability and user experience. WER can now report errors even when the process is in a very bad state for example if the process has encountered stack exhaustions, PEB/TEB corruptions, heap corruptions etc. In Windows XP, the process terminated silently without generating an <b>error</b> <b>report</b> in these conditions.|$|E
5000|$|To aid {{customers}} with defective consoles, Microsoft extended the Xbox 360's manufacturer's warranty {{to three years}} for hardware failure problems that generate a [...] "General Hardware Failure" [...] <b>error</b> <b>report.</b> A [...] "General Hardware Failure" [...] is recognized on all models released before the Xbox 360 S by three quadrants of the ring around the power button flashing red. This error is often known as the [...] "Red Ring of Death". In April 2009 the warranty was extended to also cover failures related to the E74 error code. The warranty extension is not granted for any other types of failures that do not generate these specific error codes.|$|E
50|$|Microsoft has {{reported}} that data collected from Windows <b>Error</b> <b>Reporting</b> has made {{a huge difference in}} the way software is developed internally. For instance, in 2002, Steve Ballmer noted that <b>error</b> <b>reports</b> enabled the Windows team to fix 29% of all Windows XP errors with Windows XP SP1. Over half of all Microsoft Office XP errors were fixed with Office XP SP2. Success is based in part on the 80/20 rule. <b>Error</b> <b>reporting</b> data reveals that there is a small set of bugs that is responsible {{for the vast majority of}} the problems users see. Fixing 20% of code defects can eliminate 80% or more of the problems users encounter. An article in the New York Times confirmed that <b>error</b> <b>reporting</b> data had been instrumental in fixing problems seen in the beta releases of Windows Vista and Microsoft Office 2007.|$|R
30|$|Handling ICU <b>error</b> <b>reporting</b> is {{conducted}} by a monthly meeting, multidisciplinary committee.|$|R
50|$|Windows <b>Error</b> <b>Reporting</b> {{collects}} {{and offers}} to send post-error debug information (a memory dump) {{using the internet}} to the developer of an application that crashes or stops responding on a user's desktop. No data is sent without the user's consent. When a dump (or other error signature information) reaches the Microsoft server, it is analyzed and a solution is sent back to the user if one is available. Windows <b>Error</b> <b>Reporting</b> runs as a Windows service and can optionally be entirely disabled. Software and hardware manufacturers may access their <b>error</b> <b>reports</b> using Microsoft's Winqual program. Software and hardware manufacturers can also close the loop with their customers by linking error signatures to Windows <b>Error</b> <b>Reporting</b> Responses. This allows distributing solutions as well as collecting extra information from customers (such as reproducing the steps they took before the crash) and providing them with support links.|$|R
50|$|The {{conditional}} operator's {{most common}} usage {{is to make}} a terse simple conditional assignment statement. For example, if we wish to implement some C code to change a shop's normal opening hours from 9 o'clock to 12 o'clock on Sundays, we may useint opening_time = (day == SUNDAY) ? 12 : 9;instead of the more verboseint opening_time;if (day == SUNDAY) opening_time = 12;else opening_time = 9;The two forms are nearly equivalent. Keep in mind that the ?: is an expression and if-then-else is a statement. Note that neither the true nor false portions can be omitted from the conditional operator without an <b>error</b> <b>report</b> upon parsing. This contrasts with if-then-else statements, where the else clause can be omitted.|$|E
5000|$|Drive-by {{downloads}} {{may happen}} when visiting a website, viewing {{an e-mail message}} or by clicking on a deceptive pop-up window: by clicking on {{the window in the}} mistaken belief that, for example, an <b>error</b> <b>report</b> from the computer's operating system itself is being acknowledged or a seemingly innocuous advertisement pop-up is being dismissed. In such cases, the [...] "supplier" [...] may claim that the user [...] "consented" [...] to the download, although the user was in fact unaware of having started an unwanted or malicious software download. Similarly if a person is visiting a site with malicious content, the person may become victim to a drive-by download attack. That is, the malicious content may be able to exploit vulnerabilities in the browser or plugins to run malicious code without the user’s knowledge.|$|E
50|$|Anomaly Report (AR): To {{document}} {{any event}} that occurs during the testing process that requires investigation. This {{may be called}} a problem, test incident, defect, trouble, issue, anomaly, or <b>error</b> <b>report.</b> This document is deliberately named as an anomaly report, and not a fault report. The reason is that a discrepancy between expected and actual results can occur {{for a number of}} reasons other than a fault in the system. These include the expected results being wrong, the test being run incorrectly, or inconsistency in the requirements meaning that more than one interpretation could be made. The report consists of all details of the incident such as actual and expected results, when it failed, and any supporting evidence that will help in its resolution. The report will also include, if possible, an assessment of the impact of an incident upon testing.|$|E
5000|$|... #Caption: Windows <b>Error</b> <b>Reporting</b> {{displaying}} problem {{details from}} {{an issue with}} Windows Explorer ...|$|R
40|$|Software {{producers}} are making {{greater use of}} customer <b>error</b> <b>reporting</b> to discover defects and improve thequality of their products. We study how software development differences among producers (e. g., vary-ing levels of process maturity) and software class and functionality differences (e. g., operating system versus productivity software) affect how these producers coordinate software release timing and pricing to optimally harness <b>error</b> <b>reporting</b> contributions from users. In settings where prices are fixed, we characterize the optimal release time and demonstrate why {{in some cases it}} can actually be preferable to delay release when customer <b>error</b> <b>reporting</b> rates increase. The manner in which a firm’s optimal release time responds to increases in soft-ware functionality critically hinges on whether the added functionality enhances or dilutes user error reporting; in both cases, the effect of added functionality on release timing can go in either direction, depending on both firm and product market characteristics. For example, when processing costs are relatively large compared with goodwill costs, firms with lower process maturity will release earlier when per-module <b>error</b> <b>reporting</b> contri-butions become diluted and release later when these contributions become enhanced. We also examine how a firm adapts price with changes in <b>error</b> <b>reporting</b> levels and software functionality, and finally, we provide implications of how beta testing influences release timing...|$|R
5000|$|Error - A generic error {{object that}} allows runtime <b>error</b> <b>reporting</b> when thrown as an exception.|$|R
5000|$|Windows Error Reporting was {{improved}} {{significantly in}} Windows Vista. Most importantly {{a new set}} of public APIs have been created for reporting failures other than application crashes and hangs. Developers can create custom reports and customize the reporting user interface. The new APIs are documented in MSDN. The architecture of Windows Error Reporting has been revamped with a focus on reliability and user experience. WER can now report errors even when the process is in a very bad state for example if the process has encountered stack exhaustions, PEB/TEB corruptions, heap corruptions, etc. In earlier OSs prior to Windows Vista, the process usually terminated silently without generating an <b>error</b> <b>report</b> in these conditions. A new Control Panel applet, [...] "Problem Reports and Solutions" [...] was also introduced, keeping a record of system and application errors and issues, as well as presenting probable solutions to problems.|$|E
5000|$|People not {{familiar}} with Arabic sandhi in genitive constructions: Habību-llāh = [...] "beloved (Habīb) of (ul) God (Allāh)"; here a person may in <b>error</b> <b>report</b> the man's name as [...] "forename Habib, surname Ullah". Likewise, people may confuse a name such as Jalālu-d-dīn ("The majesty of the religion") as being [...] "Jalal Uddin", or [...] "Mr. Uddin", when [...] "Uddin" [...] is not a surname, but {{the second half of}} a two-word name (the desinence -u of the construct state nominative, plus the article, appearing as -d-, plus the genitive dīni). To add to the confusion, some immigrants to Western countries have adopted Uddin as a surname, although it is grammatically incorrect in Arabic outside the context of the associated [...] "first name". Even Indian Muslims commit the same error. If a person's name is Abd-ul-Rahim ("servant of the Merciful"), others may call him Mr. Abdul ("servant of the") which would sound quite odd to a native speaker of Arabic.|$|E
5000|$|The worm arrives as an {{attachment}} with various names in emails {{claiming to be}} a security update from either Microsoft or Symantec, depending on the variant. When run, the worm installs itself to the system and displays a fake Windows Error Reporting dialog box, which the user cannot move or close and contains two buttons Send Error and Send and Close, if the user clicks on the Send Error button, the worm mass-mails itself to all the user's contacts and displays fictitious [...] "technical details" [...] about the supposed <b>error</b> <b>report,</b> which contains a Back button and a Close button. Clicking the Back button {{will return to the}} original error reporting box, whereas the Close button does not do anything. When the user presses Send and Close, the worm will disable or terminate Windows Explorer, eject the CD/DVD drive, open many Control Panel options, and then display a dialogue box that cannot be closed, which contains two buttons, [...] "Retry" [...] and [...] "Cancel".|$|E
25|$|The Food and Drug Administration is {{an agency}} of the United States {{government}} that regulates food, drugs, medical devices and biological products for human use. The FDA receives medication <b>error</b> <b>reports</b> on marketed human drugs from direct contacts and manufacturer's reports, and in 1992, began monitoring medication <b>error</b> <b>reports</b> that are forwarded from the United States Pharmacopeia (USP) and the Institute for Safe Medication Practices (ISMP).|$|R
40|$|Objective: {{this study}} {{analyzes}} the medication <b>errors</b> <b>reported</b> to a pharmacovigilance system by 26 hospitals for {{patients in the}} healthcare system of Colombia. Methods: this retrospective study analyzed the medication <b>errors</b> <b>reported</b> to a systematized database between 1 January 2008 and 12 September 2013. The medication is dispensed by the company Audifarma S. A. to hospitals and clinics around Colombia. Data were classified according to the taxonomy of the National Coordinating Council for Medication <b>Error</b> <b>Reporting</b> and Prevention (NCC MERP). The data analysis was performed using SPSS 22. 0 for Windows, considering p-values < 0. 05 significant. Results: there were 9 062 medication errors in 45 hospital pharmacies. Real errors accounted for 51. 9...|$|R
40|$|Errors are an inescapable part {{of medical}} activity. The only way {{organizations}} might {{be aware of}} errors and learn from them is through <b>error</b> <b>reporting.</b> <b>Error</b> <b>reporting</b> is a discretionary individual behavior that reflects the decision of individuals of communicating and disclosing errors to managers or supervisors, either verbally or through formal <b>error</b> <b>reporting</b> system. In this paper, we use the theoretical framework of behavioral reasoning theory to explore the reasoning processes underlying intentions to <b>report</b> <b>errors</b> in the workplace. We also investigate if the severity of error-related consequences might influence individuals’ formation of intentions. The {{findings of this study}} show that reasons, especially ‘reasons against’, are significantly associated with individuals’ intentions to report or not to <b>report</b> <b>errors</b> in the workplace over and above individuals’ attitudes, perceived control, and subjective norms (i. e. global motives). We discuss the implication of this study for theory and practice...|$|R
