275|54|Public
5|$|On new {{installations}} of Windows 10 on systems with secure boot enabled, all <b>kernel</b> <b>mode</b> drivers issued after July 29, 2015, must be digitally signed with an Extended Validation Certificate issued by Microsoft.|$|E
25|$|Windows NT <b>kernel</b> <b>mode</b> has {{full access}} to the {{hardware}} and system resources of the computer and runs code in a protected memory area. It controls access to scheduling, thread prioritization, memory management and the interaction with hardware. The <b>kernel</b> <b>mode</b> stops user mode services and applications from accessing critical areas of the operating system {{that they should not}} have access to; user mode processes must ask the <b>kernel</b> <b>mode</b> to perform such operations on their behalf.|$|E
25|$|Programs and {{subsystems}} in {{user mode}} {{are limited in}} terms of to what system resources they have access, while the <b>kernel</b> <b>mode</b> has unrestricted access to the system memory and external devices. The Windows NT kernel {{is known as a}} hybrid kernel. The architecture comprises a simple kernel, hardware abstraction layer (HAL), drivers, and a range of services (collectively named Executive), which all exist in <b>kernel</b> <b>mode.</b>|$|E
40|$|In {{this paper}} we study the {{numerical}} {{passage from the}} spatially homogeneous Boltzmann equation without cut-o to the Fokker-Planck-Landau equation in the so-called grazing collision limit. To this aim we derive a Fourier spectral method for the non cut-o Boltzmann equation {{in the spirit of}} [21, 23]. We show that the <b>kernel</b> <b>modes</b> that dene the spectral method have the correct grazing collision limit providing a consistent spectral method for the limiting Fokker-PlanckLandau equation. In particular, for small values of the scattering angle, we derive an approximate formula for the <b>kernel</b> <b>modes</b> of the non cut-o Boltzmann equation which, similarly to the Fokker-Planck-Landau case, can be computed with a fast algorithm. The uniform spectral accuracy of the method with respect to the grazing collision parameter is also proved. Key words. Spectral methods, Boltzmann equation, cut-o assumption, FokkerPlanck -Landau equation, grazing collision limit. 1. Introduction In this paper we are [...] ...|$|R
50|$|This was {{the first}} version to run Windows {{programs}} in protected mode, although the 386 enhanced <b>mode</b> <b>kernel</b> was an enhanced version of the protected <b>mode</b> <b>kernel</b> for Windows/286.|$|R
40|$|In {{this paper}} we {{introduce}} numerical schemes for a one-dimensional kinetic {{model of the}} Boltzmann equation with dissipative collisions and variable coefficient of restitution. In particular, we study the numerical passage of the Boltzmann equation with singular kernel to nonlinear friction equations in the so-called quasi elastic limit. To this aim we introduce a Fourier spectral method for the Boltzmann equation [25, 26] and show that the <b>kernel</b> <b>modes</b> that define the spectral method have the correct quasi elastic limit providing a consistent spectral method for the limiting nonlinear friction equation...|$|R
25|$|To gain {{performance}} and determinism, some systems place functions that {{would likely be}} viewed as application logic, rather than as device drivers, in kernel mode; security applications (access control, firewalls, etc.) and operating system monitors are cited as examples. At least one embedded database management system, eXtremeDB <b>Kernel</b> <b>Mode,</b> has been developed specifically for <b>kernel</b> <b>mode</b> deployment, to provide a local database for kernel-based application functions, and to eliminate the context switches that would otherwise occur when kernel functions interact with a database system running in user mode.|$|E
25|$|<b>Kernel</b> <b>mode</b> {{consists}} of executive services, which is itself {{made up of}} many modules that do specific tasks: kernel drivers, a kernel, and a Hardware Abstraction Layer (HAL).|$|E
25|$|The GDI, {{which is}} a part of the Win32 and Win16 subsystems, is also a module that is loaded in user mode, unlike Windows NT where the GDI is loaded in <b>kernel</b> <b>mode.</b>|$|E
5000|$|The SPARCserver 1000 {{will run}} a slightly-patched Linux 2.4 <b>kernel</b> in SMP <b>mode.</b>|$|R
25|$|Later, two new {{versions}} were released: Windows/286 2.1 and Windows/386 2.1. Like prior {{versions of}} Windows, Windows/286 2.1 used the real-mode memory model, but {{was the first}} version to support the High Memory Area. Windows/386 2.1 had a protected <b>mode</b> <b>kernel</b> with LIM-standard EMS emulation. All Windows and DOS-based applications {{at the time were}} real mode, running over the protected <b>mode</b> <b>kernel</b> by using the virtual 8086 mode, which was new with the 80386 processor.|$|R
40|$|International audienceLet (T, C, X) be a vector {{of random}} {{variables}} (rvs) where T, C, and X are the interest variable, a right censoring rv, and a covariate, respectively. In this paper, we study the <b>kernel</b> conditional <b>mode</b> estimation when the covariate takes values in an infinite dimensional space and is α-mixing. Under some regularity conditions, the almost complete convergence of the estimate with rates is established...|$|R
25|$|The Windows {{version of}} Virtual PC also uses dynamic recompilation, {{but only to}} {{translate}} x86 <b>kernel</b> <b>mode</b> and real mode code into x86 user mode code; original user mode and virtual 8086 mode code run natively.|$|E
25|$|At {{power-on}} or reset, {{the system}} begins in supervisor mode. Once an operating system kernel {{has been loaded}} and started, the boundary between user mode and supervisor mode (also known as <b>kernel</b> <b>mode)</b> can be established.|$|E
25|$|File System Mini Filters model {{which are}} <b>kernel</b> <b>mode</b> non-device drivers, to monitor {{filesystem}} activity, have been upgraded in Windows Vista. The Registry filtering model adds support for redirecting calls and modifying parameters and introduces {{the concept of}} altitudes for filter registrations.|$|E
40|$|Our {{focus is}} on Maxwell’s {{equations}} in the low frequency range; two specific ap-plications we aim at are time-stepping schemes for eddy current computations and the stationary double-curl equation for time-harmonic fields. We assume that the computational domain is discretized by triangles or tetrahedrons; for the finite el-ement approximation we choose Nedelec’s H[curl) -conforming edge elements of the lowest order. For {{the solution of the}} arising linear equation systems we devise an algebraic multi-grid preconditioner based on a spatial component splitting of the field. Mesh coars-ening takes place in an auxiliary subspace, which is constructed {{with the aid of a}} nodal vector basis. Within this subspace coarse grids are created by exploiting the matrix graphs. Additionally, we have to cope with the kernel of the cuW-operator, which comprises a considerable part of the spectral modes on the grid. Fortunately, the <b>kernel</b> <b>modes</b> are accessible via a discrete Helmholtz decomposition of the fields; they are smoothed by additional algebraic multigrid cycles. Numerical experiments are included in order to assess the efficacy of the proposed algorithms...|$|R
50|$|Just as {{the other}} {{expanded}} memory managers, EMM386 uses the processor's virtual 8086 mode. It temporarily shuts down during a Windows session in 386 Enhanced mode, with Windows' protected <b>mode</b> <b>kernel</b> taking over its role.|$|R
25|$|Windows 3.0's user {{interface}} finally resembled a serious competitor to the {{user interface}} of the Macintosh computer. PCs had improved graphics by this time, due to VGA video cards, and the protected/enhanced mode allowed Windows applications to use more memory in a more painless manner than their DOS counterparts could. Windows 3.0 could run in real, standard, or 386 enhanced modes, and was compatible with any Intel processor from the 8086/8088 up to the 80286 and 80386. This was the first version to run Windows programs in protected mode, although the 386 enhanced <b>mode</b> <b>kernel</b> was an enhanced version of the protected <b>mode</b> <b>kernel</b> in Windows/386.|$|R
25|$|There are {{at least}} five types of rootkit, ranging from those at the lowest level in {{firmware}} (with the highest privileges), through to the least privileged user-based variants that operate in Ring 3. Hybrid combinations of these may occur spanning, for example, user mode and <b>kernel</b> <b>mode.</b>|$|E
25|$|The Graphics Device Interface is {{responsible}} for tasks such as drawing lines and curves, rendering fonts and handling palettes. The Windows NT 3.x series of releases had placed the GDI component in the user-mode Client/Server Runtime Subsystem, but this was moved into <b>kernel</b> <b>mode</b> with Windows NT 4.0 to improve graphics performance.|$|E
25|$|For {{security}} reasons, 64-bit {{versions of}} Windows Vista (and of Windows 7 as well) allow only signed drivers {{to be installed}} in <b>kernel</b> <b>mode.</b> Because code executing in <b>kernel</b> <b>mode</b> enjoys wide privileges on the system, the signing requirement aims to ensure that only code with known origin execute at this level. In order for a driver to be signed, a developer/software vendor will have to obtain an Authenticode certificate with which to sign the driver. Authenticode certificates {{can be obtained from}} certificate authorities trusted by Microsoft. Microsoft trusts the certificate authority to verify the applicant's identity before issuing a certificate. If a driver is not signed using a valid certificate, or if the driver was signed using a certificate which has been revoked by Microsoft or the certificate authority, Windows will refuse to load the driver.|$|E
50|$|Starts the <b>kernel</b> and user <b>modes</b> of the Win32 {{subsystem}}. This subsystem includes win32k.sys (kernel-mode), winsrv.dll (user-mode), and csrss.exe (user-mode). Any other subsystems {{listed in}} the Required value of the HKLM\System\CurrentControlSet\Control\Session Manager\SubSystems Registry key are also started.|$|R
50|$|The PDP-11 {{operated}} at {{a priority}} level from 0 through 7, declared by three bits in the Processor Status Word (PSW), and high-end models could {{operate in a}} choice of <b>modes,</b> <b>Kernel</b> (privileged), User (application), and sometimes Supervisor, according to two bits in the PSW.|$|R
40|$|Cryptographic transformations are a {{fundamental}} building block in many security applications and protocols. To improve performance, several vendors market hardware accelerator cards. However, until now no operating system provided a mechanism that allowed both uniform and {{efficient use of}} this new type of resource. We present the OpenBSD Cryptographic Framework (OCF), a service virtualization layer implemented inside the kernel, that provides uniform access to accelerator functionality by hiding card-specific details behind a carefully-designed API. We evaluate {{the impact of the}} OCF in a variety of benchmarks, measuring overall system performance, application throughput and latency, and aggregate throughput when multiple applications make use of it. We conclude that the OCF is extremely efficient in utilizing cryptographic accelerator functionality, attaining 95 % of the theoretical peak device performance, and over 800 Mbit/sec aggregate throughput using 3 DES. We believe that this validates our decision to opt for ease of use by applications and kernel components through a uniform API, and for seamless support for new accelerators. Furthermore, our evaluation points to several bottlenecks in system and operating system design: data copying between user and <b>kernel</b> <b>modes,</b> PCI bus signaling inefficiency, protocols that use small data units, and single-threaded applications. We offer several suggestions for improvements and directions for future work...|$|R
25|$|The <b>kernel</b> <b>mode</b> parts {{consist of}} the Virtual Machine Manager (VMM), the Installable File System Manager (IFSHLP), the Configuration Manager, and in Windows 98 and later, the WDM Driver Manager (NTKERN). As a 32-bit {{operating}} system, virtual memory space is 4 GiB, divided into a lower 2 GiB for applications and an upper 2 GiB for kernel per process.|$|E
25|$|A rootkit can modify data {{structures}} in the Windows kernel using a method known as direct kernel object manipulation (DKOM). This method {{can be used to}} hide processes. A <b>kernel</b> <b>mode</b> rootkit can also hook the System Service Descriptor Table (SSDT), or modify the gates between user mode and <b>kernel</b> <b>mode,</b> in order to cloak itself. Similarly for the Linux operating system, a rootkit can modify the system call table to subvert kernel functionality. It's common that a rootkit creates a hidden, encrypted filesystem in which it can hide other malware or original copies of files it has infected. Operating systems are evolving to counter the threat of kernel-mode rootkits. For example, 64-bit editions of Microsoft Windows now implement mandatory signing of all kernel-level drivers {{in order to make it}} more difficult for untrusted code to execute with the highest privileges in a system.|$|E
25|$|In Windows Vista, only Direct3D {{features}} an overhaul. DirectX SDK mentions {{that most of}} the other APIs have been deprecated. DirectInput and DirectPlay have been deprecated and some of their components removed. DirectSound and therefore, DirectMusic lack hardware abstraction and are emulated in software. The DirectMusic <b>kernel</b> <b>mode</b> synthesizer that supplies the DirectMusic components with a high-resolution timer has been removed.|$|E
30|$|When <b>kernel</b> function, pre-fault <b>mode</b> of {{operation}} and input features of stability rules are determined, {{the shape and}} size of GR will be determined. In this case, misclassification cannot be avoided if the accuracy is still focused on. Therefore, a new idea for stability assessment is needed.|$|R
5000|$|An {{operating}} system may provide methods that both use and don't use the [...] instruction for time keeping, under administrator control. For example, on some {{versions of the}} Linux <b>kernel,</b> seccomp sandboxing <b>mode</b> disables [...] [...] It can also be disabled using the [...] argument to the [...] system call.|$|R
40|$|In this paper, {{we propose}} a novel {{structured}} compressive sens-ing algorithm based on non-parametric Bayesian {{framework for the}} reconstruction of sparse entries with a continuous structure. A paired spike-and-slab prior is first employed to impose signal sparsity. A logistic Gaussian kernel model, which involves the logistic model and location-dependent Gaussian kernel, is then proposed to encourage the underlying structure of a sparse signal. A closed-form and analytical posterior inference is carried out in a Gibbs sampling scheme. Simulation results demonstrate that the proposed algorithm outperforms existing state-of-the-art sparse Bayesian learning algorithms. Index Terms — Compressive sensing, sparse Bayesian learning, Gaussian <b>kernel,</b> logistic <b>mode...</b>|$|R
25|$|After {{passing through}} WASAPI, all {{host-based}} audio processing, including custom audio processing, {{can take place}} (sample rate conversion, mixing, effects). Host-based processing modules {{are referred to as}} Audio Processing Objects, or APOs. All these components operate in user mode. The only portion of this architecture that runs in <b>kernel</b> <b>mode</b> is the audio driver (which contains the Port Class driver, the vendor Miniport driver and the vendor HAL).|$|E
25|$|The leaked data {{revealed}} a zero-day cross-platform Flash exploit (CVE number: CVE-2015-5119). The dump included a demo of this exploit by opening Calculator from a test webpage. Adobe patched the hole on July 8, 2015. Another vulnerability involving Adobe was {{revealed in the}} dumps, which took advantage of a buffer overflow attack on an Adobe Open Type Manager DLL included with Microsoft Windows. The DLL is run in <b>kernel</b> <b>mode,</b> so the attack could perform privilege escalation to bypass the sandbox.|$|E
25|$|MIPS is {{a reduced}} {{instruction}} set computer (RISC) instruction set architecture (ISA) developed by MIPS Technologies (formerly MIPS Computer Systems). The early MIPS architectures were 32-bit, with 64-bit versions added later. There are multiple versions of MIPS: including MIPS I, II, III, IV, and V; {{as well as}} five releases of MIPS32/64 (for 32- and 64-bit implementations, respectively). As of April 2017, the current version is MIPS32/64 Release 6. MIPS32/64 primarily differs from MIPS IV by defining the privileged <b>kernel</b> <b>mode</b> System Control Coprocessor in addition to the user mode architecture.|$|E
40|$|In this paper, we {{establish}} a new proof of uniform consistency of kernel estimator of density function when we observe a random right censored model. This proof uses an exponential inequality established by Wang (2000). As a consequence, we obtain the almost sure convergence of the kernel estimator of the mode. Censored data Kaplan-Meier estimator <b>Kernel</b> density estimation <b>Mode</b> estimation Strong consistency...|$|R
40|$|The {{importance}} of surface-wave mode coupling in the modelling of body-wave phases by surface-wave mode summation is studied {{by means of}} sensitivity kernels obtained with the Born approximation and exact solutions of the Invariant Imbedding Technique. It is shown that, independent {{of the character of}} the lateral heterogeneity, surface-wave mode coupling is required to model body-wave phase perturbations and that neglecting intermode coupling, as in the WKBJ method for surface waves, can lead to large biases. Because methods which describe surface-wave mode coupling in an exact fashion are computationally too expensive to use in inversion schemes, the Scalar Exponent Approximation (SEA) is presented, which is a computationally efficient method and takes mode coupling into account. Since, instead of Earth normal modes, surface-wave modes are used, the summation over the angular order l is carried out analytically. This means that the number of modes and mode interactions needed is significantly reduced which assures an efficient manner of modelling. It is shown that the SEA is accurate in modelling body-wave phase perturbations for geophysically realistic configurations. Because, in contrast to the WKBJ sensitivity <b>kernels,</b> <b>mode</b> coupling introduces sensitivity kernels which also depend on the position along the source-receiver path, the SEA requires a larger model parameter set in inversions. A procedure is presented which reorganizes the model parameter set and leads to a reduced set of physically relevant model parameters. The combination of the SEA and the reorganization of the model parameters can be used efficiently in large-scale 3 -D inversions which incorporate the important effects of surface-wave mode couplin...|$|R
2500|$|Transitions between modes {{are at the}} {{discretion}} of the executing thread when the transition is from a level of high privilege to one of low privilege (as from <b>kernel</b> to user <b>modes),</b> but transitions from lower to higher levels of privilege can take place only through secure, hardware-controlled [...] "gates" [...] that are traversed by executing special instructions or when external interrupts are received.|$|R
