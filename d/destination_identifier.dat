5|11|Public
40|$|This thesis {{explores the}} {{provision}} of End System (ES) mobility on large, datagram -based, internetworks. We describe {{a new type of}} network layer address, the hybrid address, which contains a Partial <b>Destination</b> <b>Identifier,</b> a Unique ID, and a Location Sequence number. The Partial <b>Destination</b> <b>Identifier,</b> which changes as a mobile ES relocates between areas of an internetwork, allows for efficient routing, while the Unique ID is used for ES identification at the lowest layers of a routing hierarchy. Finally, the Location Sequence Number, which a mobile ES increments as it relocates between areas, is used to compare the age of multiple addresses for a given mobile ES. We present a mobility design that incorporates the hybrid address, and is based on the ISO OSI connectionless routing architecture and protocols. Each mobile ES has a home address and a current address. The home address is stored in a global database, and the ES's home area keeps track of the current address. After a mobile [...] ...|$|E
40|$|Network-based {{detection}} of botnet Command and Control communication {{is a difficult}} task if the traffic has a relatively low volume and if popular protocols, such as HTTP, are used to resemble normal traffic. We present a new network-based detection approach {{that is capable of}} detecting this type of Command and Control traffic in an enterprise network by estimating the trustworthiness of the traffic destinations. If the <b>destination</b> <b>identifier</b> of a traffic flow origins directly from: human input, prior traffic from a trusted destination, or a defined set of legitimate applications, the destination is trusted and its associated traffic is classified as normal. Advantages of this approach are: the ability of zero day malicious traffic detection, low exposure to malware by passive host-external traffic monitoring, and the applicability for real-time filtering. Experimental evaluation demonstrates successful {{detection of}} diverse types of Command and Control Traffic...|$|E
40|$|LISP is a map-and-encap {{solution}} {{where the}} inner header addresses are identifiers and outer header ad- dresses are locators. A set of locators is associate to each identifier via a mapping. Mappings are obtained by querying a mapping system like in DNS where the DNS is queried {{to resolve a}} name. Unfortunately, with on-demand mappings, some delay is observed between the reception of a packet by the border router and the time it can effectively be sent when the router sees {{for the first time}} the <b>destination</b> <b>identifier.</b> To reduce the impact of such mapping resolution delay, the gleaning functionalityhas been proposed. However, in it original form, the gleaning, introduces a cache poisoning threat. This paper presents an extended gleaning approach that limits the risk of cache poisoning and mitigates the impact of port scanning on the mapping system loa...|$|E
3000|$|A NeMHIP {{association}} is initiated by an I 1 packet {{sent by the}} CN to the RVS with the source and <b>destination</b> <b>identifiers</b> (HIT.CN and HIT.MNN), respectively. The RVS intercepts this I 1 packet and checks for the destination IP address (IP.MNN) to route the packet to the MNN. The RVS knows that the MNN {{is located in a}} mobile network because the identifier of the MR (HIT.MR) is stored with the identifier of the MNN (HIT.MNN) and its locator. With this information, the RVS generates an I 1 [...]...|$|R
40|$|We {{attempt to}} {{decouple}} identity from location in Internet hosts. In our proposal, hosts receive flat identifiers {{in a large}} and sparse namespace, and an Internet-wide distributed hash table (DHT) acts as a resolver by mapping these flat identifiers to IP addresses in analogy with today's DNS. Unlike DNS names, the source and <b>destination</b> <b>identifiers</b> appear in packets, in a shim layer after the IP header. Our proposal would change all host software but leave the core routers untouched. The advantages of our proposal are: (1) the benefits of decoupling location from identity, which have been articulated elsewhere (see, for example, [16, 19]) and (2) enhanced middlebox functions. The paper's focus is the second of these two advantages...|$|R
40|$|We {{apply the}} {{two-stage}} reliable and scalable SIP server architecture proposed in [1] for presence. The first stage proxies the requests {{to one of}} second stage server groups {{based on the event}} header and <b>destination</b> user <b>identifier.</b> The <b>destination</b> user <b>identifier</b> is based on presentity’s URI. Such a system achieves uniform load sharing on the servers on an average. However, in certain cases the load may not be uniformly distributed on all the servers. We propose to use load metric based static allocation algorithm to distribute the load uniformly. The load metric determination and performance evaluation of such a strategy is identified as future work. Additionally, we explain load sharing architecture for XCAP server, which is based on HTTP request redirection which is similar to load sharing in web servers...|$|R
30|$|When {{a mobile}} RS enters a new {{coverage}} area, the mobile RS needs to serve multiple service flows issued by its managed SSs. A separate admission control procedure should be executed for each service flow. We {{think that the}} available QoS between the managed SSs and the mobile RS needs to be re-estimated since the physical properties of the wireless link may change. The mobile RS needs to adapt the provided QoS in order to compensate the handover disturbance and the probable modification of the available QoS on the edge links (i.e., links {{between it and the}} managed SSs). For that reason, we propose that each mobile RS entering a new coverage area initiates an edge QoS re-estimation with each managed SS and then adapts the QoS requirements of each flow issued by the concerned managed SS. After that, the mobile RS sends a DSA-REQ on its name to its superordinate for each flow. That request encompasses the source identifier, the <b>destination</b> <b>identifier</b> and the required QoS in terms of minimum rate, maximum delay and tolerated jitter. Note that in our case, the DSA-REQ will travel from a subordinate mobile RS to its superordinate in order to minimize the overhead.|$|E
40|$|The Shim 6 {{architecture}} enables IPv 6 multihoming {{without compromising}} the scalability {{of the global}} routing system by using provider aggregatable addresses. To do so, hosts use different addresses as locators for data packet transmission, but present the same source and <b>destination</b> <b>identifier</b> pair to transport and upper layers. The components of this architecture are the Shim 6 entity, which maps and translates upper-layer identifiers and locators for remote hosts; the Shim 6 protocol, which exchanges mapping information between two hosts that communicate; and the REAP protocol, which monitors the existing unidirectional paths and finds new valid locator combinations in case of failure. To protect against new vulnerabilities this architecture may introduce compared to IPv 6, Shim 6 hosts use either cryptographically generated addresses or hash-based addresses. European Community's Seventh Framework ProgramThe work of Alberto García-Martínez {{is supported by the}} T 2 C 2 project (TIN 2008 - 06739 - C 04 - 01), funded by the Spanish Ministerio de Ciencia e Innovación. This research was supported by Trilogy ([URL] a research project (ICT- 216372) partially funded by the European Community under its Seventh Framework Programme. European Community's Seventh Framework Program This work was partly funded by POSDRU/ 89 / 1. 5 /S/ 62557 Publicad...|$|E
40|$|In {{this paper}} {{we present a}} {{location}} service for Beacon Vector Routing (BVR), a point-to-point routing scheme for wireless sensor networks. A location service is necessary for decoupling the static node identifiers and dynamic BVR coordinates. This allows a node to use unique identifiers when communicating with a destination node, instead of using coordinate information directly. Our scheme uses beacons in the network as distributed look-up servers; each containing mappings of identifiers to coordinates. When a node wants to route data to another node, the sending node passes the <b>destination</b> node’s <b>identifier</b> and the payload to the location service. The location service resolves the <b>destination</b> node’s <b>identifier</b> to its associated coordinates and uses BVR to route the payload to that node. We describe our design of the location service and briefly it’s implementation. We evaluate the location service and BVR in simulation and on a sensornet testbed, and compare our results to an existing point-topoint routing scheme for sensornets. In addition, a simplified distributed hash table is implemented {{on top of the}} location service and evaluated in simulation. ...|$|R
30|$|Tracepoint sched_migrate_task sched_migrate_task {{indicates}} {{the migration of}} a thread from one CPU to another. Its payload holds the TID of the migrated task, {{as well as the}} origin and the <b>destination</b> CPU <b>identifiers.</b> Tracepoint sched_process_ sched_process_ fork fork {{indicates the}} creation of a new process, and exposes the names, PIDs (Process Identifiers) and TIDs of the newly created process as well as its parent’s. Its complementary event, sched_process_exitsched_process_exit, records the end of life of a thread. The payload contains the name and TID of the process.|$|R
40|$|Abstract—Routing {{algorithms}} such as Distance Vector and Link States {{have the}} routing table size as ΩΩΩΩ (n), where n {{is the number}} of <b>destination</b> <b>identifiers,</b> thus providing only limited scalability for large networks when n is high. As the distributed hash table (DHT) techniques are extraordinarily scalable with n, our work aims at adapting a DHT approach to the design of a networklayer routing algorithm so that the average routing table size can be significantly reduced to ΟΟΟΟ (log n) without losing much routing efficiency. Nonetheless, this scheme requires a major breakthrough to address some fundamental challenges. Specifically, unlike a DHT, a network-layer routing algorithm must (1) exchange its control messages without an underlying network, (2) handle link insertion/deletion and link-cost updates, and (3) provide routing efficiency. Thus, we are motivated to propose a new network-layer routing algorithm, Tunnel Vector (TV), using DHT-like multilevel routing without an underlying network. TV exchanges its control messages only via physical links and is self-configurable in response to linkage updates. In TV, the routing path of a packet is near optimal while the routing table size is ΟΟΟΟ (log n) per node, with high probability. Thus, TV is suitable for routing in a very large network. Keywords—routing, tunnel vector, scalability, DH...|$|R
50|$|Because all link-local {{addresses}} {{in a host}} have {{a common}} prefix, normal routing procedures cannot be used to choose the outgoing interface when sending packets to a link-local <b>destination.</b> A special <b>identifier,</b> known as a zone index, is needed to provide the additional routing information; {{in the case of}} link-local addresses, zone indices correspond to interface identifiers.|$|R
40|$|Abstract: We apply {{some of the}} {{existing}} web server redundancy techniques for high service availability and scalability to the relatively new IP telephony context. The paper compares various failover and load sharing methods for registration and call routing servers based on the Session Initiation Protocol (SIP). In particular, we consider SIP server failover techniques based on the clients, DNS (Domain Name Service), database replication and IP address takeover, and load sharing techniques using DNS, SIP identifiers, network address translators and servers with same IP addresses. We describe our two-stage reliable and scalable SIP server architecture in which the first stage proxies the request {{to one of the}} second stage server group based on the <b>destination</b> user <b>identifier.</b> We quantitatively evaluate the performance improvement of the load sharing architecture using our SIP server. Additionally, we present an overview of the failover mechanism we implemented in our test-bed using the open source MySQL database. ...|$|R
40|$|We apply {{some of the}} {{existing}} web server redundancy techniques for high service availability and scalability to the relatively new IP telephony context. The paper compares various failover and load sharing methods for registration and call routing servers based on the Session Initiation Protocol (SIP). In particular, we consider SIP server failover techniques based on the clients, DNS (Domain Name Service), database replication and IP address takeover, and load sharing techniques using DNS, SIP identifiers, network address translators and servers with same IP addresses. We describe our two-stage reliable and scalable SIP server architecture in which the first stage proxies the request {{to one of the}} second stage server group based on the <b>destination</b> user <b>identifier.</b> We quantitatively evaluate the performance improvement of the load sharing architecture using our SIP server. We quantitatively compare the effect of SIP server architecture such as event-based and thread pool. Additionally, we present an overview of the failover mechanism we implemented in our test-bed using the open source MySQL database...|$|R
40|$|As {{the number}} of hosts and network traffic {{continues}} to grow, the need to efficiently handle packets at line speed becomes increasingly important. Packet classification is one technique that allows in-network devices such as firewalls, network address translators, and firewalls to provide differentiated service and access to network and host resources by efficiently determining how the packet should be processed. These services require a packet to be classified so that {{a set of rules}} can be applied to such network header information as the <b>destination</b> address, flow <b>identifier,</b> port number, or layer- 4 protocol type. The development of more efficient classification algorithms {{has been the focus of}} many research papers including: [2],[11],[15],[20],[29],[31]. However, the hardware requirements of performing a full classification on each packet at current line rates can be overwhelming [23]. Moreover, there does not appear to be a good algorithmic solution for multiple field classifiers containing more than two fields [3]. A classic approach to managing data streams that exhibit temporal locality is to employ a cache that stores recently referenced items. Packet classification is no different [8]. Such caches have been shown to increase the performance of route lookups significantly [18],[32]. How well a cache design performs is typically measured by its hit rate for a given cache size. Generally, as additional capacity is added to the cache, the hit rates and performance of the packet classification engine should increase. Unlike rout...|$|R
40|$|In {{order to}} {{transmit}} this command using the MAC data service, specified in [B 1], {{the following information}} shall {{be included in the}} MAC frame header. The destination MAC address and PAN identifier shall be set to the network address and PAN identifier, respectively, of the first hop in the path back to the originator of the corresponding route request command frame. The <b>destination</b> PAN <b>identifier</b> shall be the same as the PAN identifier of the originator. The source MAC address and PAN identifier shall be set to the address and PAN identifier of the device sending the route reply command, {{which may or may not}} be the device from which the command originated. The frame control field shall be set to specify that the frame is a MAC data frame with MAC security disabled, since any secured frame originating from the NWK layer shall use NWK layer security. The transmission options shall be set to require acknowledgment. The addressing mode and intra-PAN flags shall be set to support the addressing fields described here. 2. 5. 2. 2 NWK header fields In order for this route reply to reach its destination and for the route discovery process to complete correctly, the following information must be provided. The frame type subfield of the NWK frame control field should be set to indicate that this frame is a NWK layer command frame. The destination address field in the NWK header shall be set to the network address of the first hop in the path back to the originator of the corresponding route request. The source address in the NWK header shall be set to the NWK 16 -bit network address of the device that is transmitting the frame. 2. 5. 2. 3 NWK payload fields The NWK frame payload contains a command identifier field, a command options field, the route request identifier, originator and responder addresses and an up-to-date summation of the path cost. The command frame identifier shall contain the value indicating a route reply command frame. 2. 5. 2. 3. 1 Command options field The format of the 8 -bit command options field is shown in Figure 43. Figure 43 Route reply command options field The route repair sub-field is a single-bit field. It shall have a value of 1 if and only if the route request command frame is being generated as part of a route repair operation for mesh network topology (see subclaus...|$|R

