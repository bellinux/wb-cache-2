179|157|Public
5000|$|License {{keys and}} {{passwords}} are handled. A license <b>key</b> <b>generator</b> is included.|$|E
50|$|Cramer-Shoup {{consists}} of three algorithms: the <b>key</b> <b>generator,</b> the encryption algorithm, and the decryption algorithm.|$|E
50|$|A device {{or program}} used to {{generate}} keys is called a <b>key</b> <b>generator</b> or keygen.|$|E
50|$|His Communications Security (COMSEC) {{career began}} in 1949 as a {{cryptanalyst}} studying the {{new field of}} electronic <b>key</b> <b>generators.</b> Doyle {{was one of the}} pioneers in using mathematical notation to describe the motion of <b>key</b> <b>generators</b> and applying mathematical techniques to analyze them. He quickly established himself as the leading COMSEC cryptanalyst against electronic <b>key</b> <b>generators</b> when he discovered two general attack techniques that helped {{to lay the groundwork for}} significant SIGINT exploitations.|$|R
50|$|Examples of <b>key</b> <b>generators</b> include linear {{feedback}} shift registers (LFSR) and the Solitaire (or Pontifex) cipher.|$|R
50|$|Each KWT-37 filled {{an entire}} relay rack with five stacked modules. A {{precision}} time reference occupied the bottom, three <b>key</b> <b>generators</b> (stream cyphers in civilian parlance) occupied {{the middle and}} an alarm panel occupied the top position. The outputs of the three <b>key</b> <b>generators</b> were combined in a voting circuit. If one of the units' output did not match the other two, an alarm was sounded and the output from the two units that did agree continued to be used.|$|R
50|$|HY-2 a vocoder {{for long}} haul {{circuits}} {{designed to work}} with the KG-13 <b>key</b> <b>generator.</b>|$|E
50|$|ElGamal {{encryption}} {{consists of}} three components: the <b>key</b> <b>generator,</b> the encryption algorithm, and the decryption algorithm.|$|E
5000|$|Two {{of the key}} {{cards were}} for the {{transmitter}} and the third for the receiver. There were two for the transmitter because it had two key generators. The keystream mixed with the plain text produced the ciphertext. Two key generators generating the same keystream should match bit for bit at the output and a mismatch would cause a crypto alarm and a shutdown of the output. A <b>key</b> <b>generator</b> failure would stop transmission and prevent a compromise. With only a single <b>key</b> <b>generator</b> in the transmitter a failure could produce a trivial keystream (all one's, all zero's or alternations). A receiver <b>key</b> <b>generator</b> failure just produced garble. The KG-3 {{could be used to}} transmit or receive since there is a XMIT/RECV switch on in the lower right hand portion of the lowest unit.|$|E
40|$|The {{encryption}} system E 0, {{which is the}} {{encryption system}} used in the Bluetooth speci cation, is a two level system where a key and a packet nonce is given to a level 1 <b>key</b> stream <b>generator,</b> which produces the key for a level 2 <b>key</b> stream <b>generator,</b> whose output is used to encrypt. We give a method for recovering the key for the level 1 <b>key</b> stream <b>generator</b> given the internal keys {{for two or three}} level 2 <b>key</b> stream <b>generators.</b> This method, combined with published methods for recovering keys for the level 2 <b>key</b> stream <b>generator,</b> can be used to recover the E 0 second key with O(2) work, and O(2) precomputation time...|$|R
50|$|Many {{unauthorised}} keygens, {{available through}} P2P networks or otherwise, contain malicious payloads. These <b>key</b> <b>generators</b> {{may or may}} not generate a valid key, but the embedded malware loaded invisibly at the same time may, for example, be a version of CryptoLocker (ransomware).|$|R
40|$|Abstract:- As {{standard}} GSM protection {{methods are}} now well-known to be insecure, we have designed a new secure communication system over GSM network which is developed using the Symbian OS platform. It uses standard cryptographic {{methods such as}} <b>key</b> <b>generators,</b> <b>key</b> exchange protocols and public and private key cipher algorithms. This system allows communicating text, voice and any kind of data securely over GSM as well as over other communication channels...|$|R
50|$|A <b>key</b> <b>generator</b> {{is used in}} many {{cryptographic}} protocols {{to generate}} a sequence with many pseudo-random characteristics. This sequence is used as an encryption key {{at one end of}} communication, and as a decryption key at the other.|$|E
50|$|A major {{attack on}} this {{strategy}} is the <b>key</b> <b>generator</b> (keygen). By reverse engineering the software, the code used to recognise a valid key can be characterised and then a program to spit out valid keys on command can be made.|$|E
50|$|The BID/150 speech {{encryption}} <b>key</b> <b>generator</b> is {{a single}} channel device for use with the British Army C42 and C45 Larkspur radio system. This was the first Combat Net secure speech system whose key was set {{through the use of}} punch cards within the device. Examples of the BID/150 are on display at the Royal Signals Museum, Blandford Forum.|$|E
40|$|This paper {{provides}} an overview of load capability and collapse margin analyses carried out on a modified CIGRE 2 ̆ 7 Nordic 2 ̆ 7 test system and on the large-scale Queensland Transmission system. The importance of certain <b>key</b> <b>generators</b> in the loading capability of a transmission system is highlighted. Emphasis is also placed on the impact of potential installations of Powerformer (TM) on the loading capability of these two real and representative systems. Powerformer (TM) is a unique form of generator that can be directly connected to transmission, without the need for a step-up transformer. Select system sensitivity parameters are determined for the two systems and used to aid explanation of the relative importance of the <b>key</b> <b>generators</b> and the impact of Powerformer observed...|$|R
50|$|KASUMI is a {{block cipher}} used in UMTS, GSM, and GPRS mobile {{communications}} systems.In UMTS, KASUMI {{is used in}} the confidentiality (f8) and integrity algorithms (f9) with names UEA1 and UIA1, respectively.In GSM, KASUMI {{is used in the}} A5/3 <b>key</b> stream <b>generator</b> and in GPRS in the GEA3 <b>key</b> stream <b>generator.</b>|$|R
5000|$|Rafter Roberts: Banjo, harmonica, <b>key,</b> tone <b>generators,</b> pump organ, croquet mallets/balls, marimba ...|$|R
5000|$|Because the Private <b>Key</b> <b>Generator</b> (PKG) generates private keys for users, it may decrypt and/or sign any message without authorization. This {{implies that}} IBE systems {{cannot be used}} for non-repudiation. This {{may not be an}} issue for {{organizations}} that host their own PKG and are willing to trust their system administrators and do not require non-repudiation.|$|E
5000|$|Sending {{two or more}} {{messages}} {{with the}} same key is an insecure process. To a cryptanalyst the messages are then said to be [...] "in depth." [...] This may be detected by the messages having the same indicator by which the sending operator informs the receiving operator about the <b>key</b> <b>generator</b> initial settings for the message.|$|E
50|$|In many circumstances, {{a robust}} {{distributed}} <b>key</b> <b>generator</b> is necessary. Robust generator protocols can reconstruct public keys {{in order to}} remove malicious shares even if malicious parties still remain in the qualified group during the reconstruction phase. For example, robust multi-party digital signatures can tolerate a number of malicious users roughly proportionate {{to the length of}} the modulus used during key generation.|$|E
5000|$|Proprietary {{information}} can be leaked if sequential <b>key</b> <b>generators</b> are used. By subtracting a previously generated sequential key from a recently generated sequential key, one could learn the number of rows inserted during that time period. This could expose, for example, the number of transactions or new accounts per period. There are a few ways to overcome this problem: ...|$|R
40|$|Due to {{the latest}} changes in observing the {{external}} network related threats within the stream cipher, it become necessary to address these threats {{in order to identify}} the generator suitable for avoiding such threats. In this paper, the researcher addresses the current threats of immunity attacks in the stream cipher. Such attacks are resulted from the correlation within the key stream’s multiplexer. The <b>key</b> stream <b>generators</b> are also introduced in order to clarify its working process in avoiding attacks. After all, a comparison of <b>key</b> stream <b>generators</b> are resulted where it can be used as guidelines for other researches in designing <b>key</b> stream <b>generator</b> for high immunity attacks in the cipher...|$|R
50|$|Another term, {{potentially}} unwanted program (PUP) or potentially unwanted application (PUA), {{refers to}} applications {{that would be}} considered unwanted despite often having been downloaded by the user, possibly after failing to read a download agreement. PUPs include spyware, adware, and fraudulent dialers. Many security products classify unauthorised <b>key</b> <b>generators</b> as grayware, although they frequently carry true malware {{in addition to their}} ostensible purpose.|$|R
5000|$|In 1999, Rosario Gennaro, Stanislaw Jarecki, Hugo Krawczyk, and Tal Rabin {{produced}} {{a series of}} security proofs demonstrating that Feldman verifiable secret sharing was vulnerable to malicious contributions to Pedersen's distributed <b>key</b> <b>generator</b> that would leak information about the shared private key. [...] The same group also proposed an updated distributed key generation scheme preventing malicious contributions from impacting {{the value of the}} private key.|$|E
5000|$|The KG-13 Electronic <b>Key</b> <b>Generator,</b> Transmitter/Receiver {{was similar}} in {{appearance}} to the KG-14. This solid state design {{dating from the}} mid-to-late 1960s, originally cost $13,000 per copy. It {{was one of the}} first crypto machines to encrypt data such as facsimile. Crypto technicians received 10 to 12 weeks training on the machine. The KG-13 was composed of a KG-3 transmitter and a KG-12 receiver.|$|E
5000|$|A secure channel {{between a}} user and the Private <b>Key</b> <b>Generator</b> (PKG) is {{required}} for transmitting the private key on joining the system. Here, a SSL-like connection is a common solution for a large-scale system. It is important to observe that users that hold accounts with the PKG {{must be able to}} authenticate themselves. In principle, this may be achieved through username, password or through public key pairs managed on smart cards.|$|E
50|$|When {{used with}} {{asymmetric}} ciphers for key transfer, pseudorandom <b>key</b> <b>generators</b> are nearly {{always used to}} generate the symmetric cipher session keys. However, lack of randomness in those generators or in their initialization vectors is disastrous and has led to cryptanalytic breaks in the past. Therefore, {{it is essential that}} an implementation uses a source of high entropy for its initialization.|$|R
40|$|Abstract — In {{order to}} improve the {{security}} of the Military kinds of network this work is proposed. Here the position of missile navigates as per the user’s requirement. The user sends the co-ordinates through pc based server on the base station. For security purpose encryption is done with RC 4 algorithm implementation. The system that uses Human Computer Interaction and Visualization technology provides several encryption algorithms and <b>key</b> <b>generators...</b>|$|R
50|$|Standard key generation, where product {{keys are}} {{generated}} mathematically, {{is not completely}} effective in stopping copyright infringement of software, as these keys can be distributed. The overall effectiveness of product keys in enforcing software copyrights requires further study. In addition, with improved communication from {{the rise of the}} Internet, more sophisticated attacks on keys such as cracks (removing the need for a key) and product <b>key</b> <b>generators</b> have become common.|$|R
5000|$|As {{part of the}} scheme, {{both the}} sender and {{receiver}} must trust a Private <b>Key</b> <b>Generator</b> (PKG), {{also known as a}} Key Management Server (KMS). The purpose of the PKG is to create the receiver's private key, , associated to the receiver's identity, [...] The PKG must securely deliver the identity-specific private key to the receiver, and PKG-specific public parameter, , to all parties. These distribution processes are not considered as part of the definition of this cryptographic scheme.|$|E
5000|$|If a Private <b>Key</b> <b>Generator</b> (PKG) is compromised, all {{messages}} protected {{over the}} entire lifetime of the public-private key pair used by that server are also compromised. This makes the PKG a high-value target to adversaries. To limit the exposure due to a compromised server, the master private-public key pair could be updated with a new independent key pair. However, this introduces a key-management problem where all users must have the most recent public key for the server.|$|E
50|$|Crypto cloud {{computing}} {{is based on}} the Quantum Direct Key system. Quantum Direct Key (QDK) is a set of advanced asymmetric offline key mechanism. In this mechanism, all entities get public and private key pair according to their ID. Each entity only holds its own private key, but has a public <b>key</b> <b>generator</b> to generate any public key. In this system, an entity can produce the public key of any other entities offline, no any third-party agency (such as CA) is necessary. Crypto {{cloud computing}} based on QDK can avoid network traffic congestion, and other drawbacks using current encryption system.|$|E
40|$|This work {{presents}} mathematical {{properties of}} the RSA cryptosystem. The topics of backdoors and padding algorithm are developped. For padding schemes, we give a practical instantiation with a security reduction. It {{is based on the}} compression function of SHA- 1 without any chaining function. Our solution has the advantage over the previous one of removing the relation of the output length of the compression function to the length of the RSA modulus. For backdoors, improvements on definitions, existing algorithms as well as extensions of existing theorems are shown. The definitions pertaining to backdoored <b>key</b> <b>generators</b> are improved as to make their analysis uniform and comparable. New algorithms are presented and compared to existing ones as to show improvements mainly on their running time, the indistinguishability of the keys produced, and that some of these new algorithms are, for all practical purposes, the best that may be called asymmetric. Our theorem on the correctness (or completeness) of one of our better backdoored <b>key</b> <b>generators</b> is a generalization of a theorem of Boneh, Durfee and Frankel's on partial information on the decryption exponent...|$|R
40|$|The {{problem of}} {{designing}} {{a family of}} pseudorandom number generators for cryptographic applications, called <b>key</b> stream <b>generators,</b> is considered for word-oriented CPU platforms. A novel <b>key</b> stream <b>generator,</b> together with a new application of linear cellular automata over GF(q), is proposed. Construction of the generator {{is based on the}} use of very recently published results on cellular automata theory and its applications in cryptography, as well as on core principles employed in a number of existing <b>key</b> stream <b>generators.</b> Analysis indicates that the proposed generator satis es standard minimal security requirements including a large period and good statistical properties, and that it is secure against all known attacks. An important feature of the proposed generator is that it is compact and suitable for high speed applications. ...|$|R
40|$|Abstract. We {{present the}} first provably secure ID-based key {{agreement}} protocol, {{inspired by the}} ID-based encryption scheme of Gentry, in the standard (non-random-oracle) model. We show how this key agreement {{can be used in}} either escrowed or escrowless mode. We also give a protocol which enables users of separate private <b>key</b> <b>generators</b> to agree on a shared secret key. All our proposed protocols have comparable performance to all known protocols that are proven secure in the random oracle model...|$|R
