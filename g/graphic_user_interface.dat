757|10000|Public
5|$|In February 2011, Dugan {{demonstrated}} an automixer card, marketed by Yamaha, to plug into the accessory slot of a Yamaha digital mixer {{such as the}} O1V96, LS9, M7CL or PM5D. This card, the Dugan-MY16, could mix up to 16 channels of microphone inputs, assigned to selected inserts in the mixer's <b>graphic</b> <b>user</b> <b>interface.</b> Like the Model E-1, the automixer could be adjusted through a web browser interface, allowing remote control with an iPad, touchscreen computer or laptop over wireless network. The Dugan algorithm moved inside Yamaha's QL-eeries of mixers in March 2014, as an option on the graphic equalizer processing page. This internal version could mix 8 or 16 microphones.|$|E
25|$|Short for <b>Graphic</b> <b>User</b> <b>Interface,</b> the GUI uses windows, icons, and menus {{to carry}} out {{commands}} such as opening files, deleting files, moving files, etc. and although many GUI Operating Systems are operated by using a mouse, the keyboard {{can also be used}} by using keyboard shortcuts or arrow keys. The GUI was co-invented at Xerox PARC by Alan Kay and Douglas Engelbart in 1981.|$|E
25|$|In February 2011, Dugan {{announced}} an automixer card {{to plug in}} the accessory slot of a Yamaha digital mixing console such as the LS-9, M7CL or PM-5D. This card, the Dugan-MY16, can mix 16 channels of microphone inputs at 44.1–48kHz or 8 channels at 88.2–96kHz sampling rates. Channels to be automixed are assigned in the mixer's <b>graphic</b> <b>user</b> <b>interface,</b> and can then be controlled by a common web browser interface affecting only the Dugan-MY16 card, allowing remote control with an iPad, touchscreen computer or laptop over wireless network.|$|E
50|$|FaceSpan, from Late Night Software: A {{discontinued}} third-party commercial IDE {{for creating}} AppleScript applications with <b>graphic</b> <b>user</b> <b>interfaces.</b>|$|R
5000|$|Reflexive <b>user</b> <b>interfaces</b> {{where the}} <b>users</b> control and redefine {{the entire system}} via the <b>user</b> <b>interface</b> alone, for {{instance}} to change its command verbs. Typically this is only possible with very rich <b>graphic</b> <b>user</b> <b>interfaces.</b>|$|R
5000|$|The {{book was}} called [...] "one {{of the most}} {{insightful}} books about designing <b>graphic</b> <b>user</b> <b>interfaces</b> ever written" [...] by Apple Macintosh co-creator Andy Hertzfeld.|$|R
500|$|On May 22, 1990 Microsoft {{launched}} Windows 3.0. The {{new version}} of Microsoft's operating system boasted new features such as streamlined <b>graphic</b> <b>user</b> <b>interface</b> GUI and improved protected mode ability for the Intel 386 processor; it sold over 100,000 copies in two weeks. Windows at the time generated more revenue for Microsoft than OS/2, and the company decided to move more resources from OS/2 to Windows. In an internal memo to Microsoft employees on May 16, 1991, Bill Gates announced that the OS/2 partnership was over, and that Microsoft would henceforth focus its platform efforts on Windows and the Windows NT kernel. Some people, especially developers who had ignored Windows and committed most of their resources to OS/2, were taken by surprise, and accused Microsoft of deception. This changeover from OS/2 was frequently {{referred to in the}} industry as [...] "the head-fake". In the recent years, the popularity of OS/2 declined, and Windows quickly became the favored PC platform. 1991 also marked the founding of Microsoft Research, an organization in Microsoft for researching computer science subjects, and Microsoft Visual Basic, a popular development product for companies and individuals.|$|E
2500|$|... Widely-accepted {{software}} packages for PVA with options for age/stage structure, spatial processes, and landscape change. Models {{can be built}} and run using a <b>graphic</b> <b>user</b> <b>interface</b> or users can incorporate the program's batch mode into automated workflows.|$|E
2500|$|Developers were {{required}} {{to learn how to}} write software that used the Macintosh's <b>graphic</b> <b>user</b> <b>interface,</b> and early in the computer's history needed a Lisa 2 or Unix system to write Macintosh software. Despite standardizing on Pascal for software development Apple did not release a native-code Pascal compiler. [...] Until third-party Pascal compilers appeared, developers had to write software in other languages while still learning enough Pascal to understand Inside Macintosh. MacWrite's inclusion with the Macintosh discouraged developers from creating other word processing software.|$|E
5000|$|A common variant in {{object-oriented}} programming is the delegate event model, which {{is provided by}} some <b>graphic</b> <b>user</b> <b>interfaces.</b> This model is based on three entities: ...|$|R
50|$|For some artists, <b>graphic</b> <b>user</b> <b>interfaces</b> and {{computer}} code {{have become an}} independent art form in themselves. Adrian Ward created Auto-Illustrator as a commentary on software and generative methods applied to art and design.|$|R
50|$|One of {{the aims}} of Processing is to allow non-programmers to start {{computer}} programming aided by visual feedback. The Processing language builds on the Java language, but uses a simplified syntax and a <b>graphics</b> <b>user</b> <b>interface.</b>|$|R
50|$|DASL {{is unique}} among modern {{application}} programming languages {{in its ability}} to generate a modern <b>graphic</b> <b>user</b> <b>interface</b> for an application without requiring the programmer to define the user interface explicitly, while allowing the programmer to control {{the look and feel of}} the generated <b>graphic</b> <b>user</b> <b>interface.</b>|$|E
5000|$|... #Caption: <b>Graphic</b> <b>user</b> <b>interface</b> for an {{agent-based}} modeling tool.|$|E
50|$|Connect Business Information Network, {{formerly}} known as MacNET, was a proprietary dial-up online network with a <b>graphic</b> <b>user</b> <b>interface</b> similar to AppleLink.|$|E
50|$|Users {{operate the}} system from the command line: this enables {{scripting}} and the automation of routine tasks. More or less comprehensive <b>graphic</b> <b>user</b> <b>interfaces</b> are available from third parties, as well as web applications, bringing the system's functionality online.|$|R
50|$|Hertzfeld's {{business}} card at Apple listed his title as Software Wizard. He wrote {{large portions of}} the Macintosh's original system software, including much of the ROM code, the <b>User</b> <b>Interface</b> Toolbox, {{and a number of}} innovative components now standard in many <b>graphic</b> <b>user</b> <b>interfaces,</b> like the Control Panel and Scrapbook.|$|R
40|$|We {{describe}} a computer {{version of the}} code for International Classification of Diseases for Oncology (ICD-O). This system combines a <b>graphics</b> <b>user</b> <b>interface</b> with a search mechanism while using the hierarchical structure of the code. The <b>graphics</b> <b>user</b> <b>interface</b> allows easy selection of an anatomic part, while the search mechanism provides the code numbers associated with an entered term. We created a HyperCard system that provides ICD-O codes based on the hierarchical structure of the ICD-O code and has the added options {{of being able to}} handle the machine entry mouse - clicking and selecting pictorial representations of anatomic structures. Reference time was far fast when utiliziing this computer coding system, reference time was far fast than the ICD-O code book. 国立情報学研究所で電子...|$|R
5000|$|SharpDevelop {{integrates}} <b>Graphic</b> <b>User</b> <b>Interface</b> Designers for the C#, VB.NET, Boo, and the IronPython and IronRuby languages, {{using the}} following GUI technologies: ...|$|E
5000|$|Armed Forces Health Longitudinal Technology Application (AHLTA) <b>Graphic</b> <b>User</b> <b>Interface</b> {{redesign}} for the Department of Defense, Military Health System, and United States Army Medical Research and Materiel Command ...|$|E
50|$|When {{events were}} added to classes it enabled rapid {{application}} development, especially the visual development of <b>graphic</b> <b>user</b> <b>interface.</b> But event handling is still expressed via textual programming languages.|$|E
40|$|A logic-based {{computer}} control system is in development at CEBAF. This Unix/C language software package, running on a distributed, hierarchical system of workstation and supervisory minicomputers, interfaces to hardware via CAMAC. Software aspects to be covered are ladder logic, interactive database generation, networking, and <b>graphic</b> <b>user</b> <b>interfaces...</b>|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis {{is a part}} of the implementation of a new <b>graphics</b> <b>user</b> <b>interface</b> for accessing a database proposed in paper [WU 86]. As a result of this study, the data definition language of the proposed <b>graphics</b> <b>user</b> <b>interface</b> GLAD (Graphical Language for Accessing Database) has been implemented. This <b>interface</b> allows a <b>user</b> to create a database schema graphically. It is easy to learn and easy to use, in spite of conventional query languages. This thesis first discusses the general concepts of database and introduces the system that the implementation was achieved, then reviews the conventional query languages and previously proposed graphical <b>user</b> <b>interfaces.</b> After describing the major features of GLAD, the implementation is explained in detail. A listing of the program that achieves the interface is also provided. [URL] Lieutenant, Turkish Air Forc...|$|R
5000|$|Reviews of Tales of Maj'Eyal {{have been}} largely {{positive}} with praise being given for its accessibility, <b>graphics,</b> <b>user</b> <b>interface,</b> backstory and varied gameplay. US Gamer calls it [...] "one {{of the very best}} roguelikes out there". Metacritic currently lists the game with an 100/100 rating based on one review.|$|R
5000|$|GTK. On Amiga it {{is being}} {{developed}} as a GTK_MUI wrapper, to map any existing graphical features of GTK to the standard Magic User Interface (MUI) <b>graphic</b> <b>user</b> <b>interface</b> system.|$|E
5000|$|Version 3: {{contained}} many improvements {{over the}} previous version 2.51, including a new <b>graphic</b> <b>user</b> <b>interface</b> (GUI), multitrack recording, and support for music loops from Sony ACID Pro and Apple GarageBand ...|$|E
50|$|The DVL-700 was the world's first {{consumer}} available LaserDisc-DVD combination player. It Included S-Video outputs and a <b>Graphic</b> <b>User</b> <b>Interface</b> GUI, sported separate {{disc loading}} doors for LaserDisc and CD/DVD media, and employed the Gamma-turn Both Side Play mechanism.|$|E
40|$|The {{one-dimensional}} {{scroll bar}} {{has become a}} well-established fixture in all contemporary <b>graphic</b> <b>user</b> <b>interfaces.</b> While {{there is a common}} core of functionality, there are substantial differences in features, visual feedback, and operation. Users quickly accommodate to the differences and research on improved scroll bars is limited [Shneiderman 92] [Chimera 92]...|$|R
40|$|Relational Database Interface Hermann SIKORA, Paul GRÜNBACHER, Guenter HUMMEL, Siegfried REICH Institut fuer Informatik, Johannes Kepler Universitaet Linz, Altenbergerstr. 69, A- 4040 LINZ, Austria Tel. : ++ 43 / 732 / 2468 - 743, Fax: ++ 43 / 732 / 2468 - 10 E-Mail: K 390170 @EDVZ. Uni-Linz. AC. AT Abstract This paper {{describes}} implementation {{aspects of}} an abstract relational database interface, {{which is based}} upon an object-oriented application framework. It was realized {{within the scope of}} the construction of a toolset for the prototyping-oriented specification of <b>graphic</b> <b>user</b> <b>interfaces</b> of databasebased applications. Keywords Relational database interface, object-oriented programming, C++, application framework, ET++ 1 Introduction The abstract relational database interface (further simply called interface) described in this paper was realized in the scope of the Xpand-It project. Xpand-It is a toolset for prototyping-oriented specification of <b>graphic</b> <b>user</b> <b>interfaces</b> of (relational) database-based appl [...] ...|$|R
40|$|The Columbia TAG (Transductive Annotation by Graph) {{system is}} deigned to {{facilitate}} rapid retrieval and exploration of large image and video collections. It incorporates novel graph-based label propagation methods and intuitive <b>graphic</b> <b>user</b> <b>interfaces</b> (GUI) that allow users quickly browse and annotate {{a small number}} of images/videos, and then in real or near real time receiv...|$|R
5000|$|The author {{reveals that}} both Steve Jobs and Bill Gates had first seen the {{innovative}} <b>Graphic</b> <b>User</b> <b>Interface</b> at {{the offices of}} Xerox’s Palo Alto Research Center (PARC), which had prototyped the [...] "desktop computer" [...] concept by 1978.|$|E
5000|$|... #Caption: <b>Graphic</b> <b>user</b> <b>interface</b> for {{a digital}} automixer {{that uses a}} gain-sharing algorithm. Controls include threshold, depth, {{polarity}} inversion and muting for each input, as well as volume controls for the four inputs, the four individual outputs and the full mix output ...|$|E
50|$|Since 2006, Kim {{has been}} distributing the {{developed}} code, IPSAP, to structural engineers {{around the world}} free of charge through the website, http://teragate.snu.ac.kr. He also developed a GUI (<b>Graphic</b> <b>User</b> <b>Interface),</b> DIAMOND, as Pre-Post Processor for the IPSAP. It is also being distributed as free software.|$|E
40|$|The ESPRIT project VITAMIN (Visualization Standard Tools in Manufacturing Industry) aims at {{creating}} homogeneous tools to generate <b>graphic</b> <b>user</b> <b>interfaces</b> for industrial management, organisation or production automation systems. This paper presents an object-oriented {{approach to the}} automatic generation of such <b>user</b> <b>interfaces.</b> Aspects of special interest are the clean separating between the presentation, the dialogue and the application, and the automatic generation of dialogue systems for specific applications...|$|R
5000|$|Satisfaction: {{the degree}} of {{gratification}} or pleasure of the player for completing a video game or some aspect of it like: mechanism, <b>graphics,</b> <b>user</b> <b>interface,</b> story, etc. Satisfaction is a highly subjective attribute that provokes a difficult measuring due to player preferences and pleasures having influence in the satisfaction for specific game elements: characters, virtual world, challenges, and so on.|$|R
40|$|Expectk is a toolkit for {{wrapping}} character-oriented interactive {{programs in}} <b>graphic</b> <b>user</b> <b>interfaces</b> (GUIs). No {{changes to the}} programs themselves are made. This is convenient for {{the large number of}} existing tools in the UNIX toolbox such as passwd, rlogin, crypt, fsck, and tip, that are otherwise non-programmable and could take a large amount of time to make them so. Commercial software is often similarly limited, often comes without source, and hence no way to adapt to GUIs without complete rewriting of the application itself. Expectk {{can also be used to}} combine multiple programs together for synergistic effects. The underlying programs can be entirely hidden from view. Keywords: Expect, Expect, Tk, GUI, Interactive Programs, Wrappers, Reuse, X Window System, X To appear in: Proceedings of Xhibition 94, San Jose, California, June 20 - 24, 1994. Introduction Numerous legacy programs are interactive but non-graphic. In many cases, converting them to use <b>graphic</b> <b>user</b> <b>interfaces</b> (GUIs) w [...] ...|$|R
