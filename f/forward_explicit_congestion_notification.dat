3|581|Public
50|$|Dr. Jain is the {{co-inventor}} of the DEC-bit {{scheme for}} congestion avoidance in computer networks {{which has been}} adapted for implementation in Frame Relay networks as <b>forward</b> <b>explicit</b> <b>congestion</b> <b>notification</b> (FECN), ATM Networks as Explicit Forward Congestion Indication (EFCI), and TCP/IP networks as Explicit Congestion Notification(ECN).|$|E
50|$|FECN means <b>forward</b> <b>explicit</b> <b>congestion</b> <b>notification.</b> The FECN bit {{can be set}} to 1 to {{indicate}} that congestion was experienced {{in the direction of}} the frame transmission, so it informs the destination that congestion has occurred.BECN means backwards explicit congestion notification. The BECN bit can be set to 1 {{to indicate}} that congestion was experienced in the network in the direction opposite of the frame transmission, so it informs the sender that congestion has occurred.|$|E
40|$|Ethernet is {{replacing}} the traditional storage networking technologies like Fiber Channel and Infiniband in Datacenters. The key feature of these traditional technologies {{that make them}} suitable for datacenter is their low-loss low-delay operation. Consequently IEEE 802. 1 standards committee is developing new specification for congestion management for Ethernet in datacenter networks. Backward Congestion Notification (BCN) and <b>Forward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (FECN) are two proposals. Each of the proposals has its own advantages and disadvantages. FECN outperforms BCN in fairness and response time while BCN is {{able to respond to}} sudden increases in load in less than a round trip time. In this paper, we propose an enhanced version of FECN that takes the best of both proposals and adds BCN if there is a sudden severe congestion. It is shown that E-FECN performs better than the previous proposals. 1...|$|E
40|$|It {{has been}} found {{recently}} that feedback in an ATM network is useful {{in the long run}} to alleviate congestion. This general conclusion, although theoretically important, does not address the practical concern aa to how the network behaves when it is adjusting itself in short to medium range. The work reported in this paper is motivated by this practical concern. A new feedback based dynamic traffic control mechanism (called balanced mechanism) is proposed and compared with the pure PCC and an existing feedback based mechanism, known aa <b>Explicit</b> <b>Forward</b> <b>Congestion</b> <b>Notification</b> (EFCN). It is shown that the balanced mechanism outperforms both PCC and the EFCN...|$|R
40|$|Applications of <b>explicit</b> <b>congestion</b> <b>notification</b> in {{providing}} service quality differentiation and price/quality guaranteesApplications of <b>explicit</b> <b>congestion</b> <b>notification</b> in [...] . R&D Report R 18 / 2002 Title Applications of <b>explicit</b> <b>congestion</b> <b>notification</b> {{in providing}} service quality differentiation and price/quality guarantees ISBN 82 - 423 - 0535 -...|$|R
5000|$|Parameter type = 32768 : This {{parameter}} {{is reserved}} for <b>explicit</b> <b>congestion</b> <b>notification</b> support.|$|R
5000|$|Lack of {{widespread}} support for <b>explicit</b> <b>congestion</b> <b>notification</b> and Quality of Service management on the Internet ...|$|R
40|$|Using ns- 2 simulations, {{this paper}} evaluates an Adaptive <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (AECN) router. By {{receiving}} round-trip time (RTT) source hints from each TCP flow, AECN divides flows into flow {{groups based on}} RTT ranges. AECN uses distinct flow group drop probabilities and a mark front scheme to provide higher goodput and better fairness than Random Early Detection (RED) and <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) routers. 1...|$|R
5000|$|<b>Explicit</b> <b>Congestion</b> <b>Notification</b> an {{extension}} to IP and TCP communications protocols that adds a flow control mechanism ...|$|R
5000|$|... 8) Since RFC 3168, the {{remaining}} two bits (the two least significant bits) are used for <b>Explicit</b> <b>Congestion</b> <b>Notification</b> ...|$|R
30|$|Detection of non-{{congestion}} RTOs (NRT-detection): To detect non-congestion RTOs from congestion RTOs {{using the}} improved <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) mechanism.|$|R
5000|$|Under Windows Vista, SecuROM {{will prevent}} a game from running if <b>explicit</b> <b>congestion</b> <b>notification</b> is enabled in Vista's {{networking}} configuration.|$|R
5000|$|... a 3-bit Traffic Class {{field for}} QoS (quality of service) {{priority}} and ECN (<b>Explicit</b> <b>Congestion</b> <b>Notification).</b> Prior to 2009 this field was called EXP.|$|R
40|$|The Addition of <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) to IP Status of this Memo This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the &quot;Internet Official Protocol Standards &quot; (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2001). All Rights Reserved. This memo specifies the incorporation of ECN (<b>Explicit</b> <b>Congestion</b> <b>Notification)</b> to TCP and IP, including ECN’s use of two bits in th...|$|R
25|$|Floyd {{is also a}} {{co-author}} on {{the standard}} for TCP Selective acknowledgement (SACK), <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), the Datagram Congestion Control Protocol (DCCP) and TCP Friendly Rate Control (TFRC).|$|R
40|$|Abstract — This letter {{proposes a}} {{deterministic}} packet marking scheme that estimates the maximum link price on a communication path. The proposed scheme {{is simple and}} IP-compatible because it uses two-bit <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) field and IP identification (IPid) field in the standard IP header for the estimation. Through simulations using real IP packet traces, we show that our scheme indeed works as designed with small estimation errors, and thus enables existing max-min flow control algorithms to serve their purpose without the need of separate out-of-band control packets to carry link prices. Index Terms — <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), packet marking, max-min fairness, distributed flow control. I...|$|R
50|$|RFC 2474 (which was {{released}} in the year 1998) reserved the first six bits of DS field (or IPv4 ToS) for the DiffServ Code Points (DSCP), and RFC 3168 reserved the last two bits for <b>Explicit</b> <b>Congestion</b> <b>Notification.</b>|$|R
5000|$|... 2) The TOS {{field has}} then been redefined as the Differentiated Services Code Point (DSCP-> RFC 2474) which {{consists}} of the first 6 bits and 2 bits used for a TCP mechanism called <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) defined in RFC 3168.|$|R
40|$|Computer {{networks}} use congestion {{feedback from}} the routers and destinations to control the transmission load. Delivering timely congestion feedback {{is essential to the}} performance of networks. Reaction to the congestion can be more effective if faster feedback is provided. Current TCP/IP networks use timeout, duplicate Acknowledgement Packets (ACKs) and <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) to deliver the congestion feedback, each provides a faster feedback than the previous method. In this paper, we propose a markfront strategy that delivers an even faster congestion feedback. With analytical and simulation results, we show that mark-front strategy reduces buffer size requirement, improves link efficiency and provides better fairness among users. Keywords: <b>Explicit</b> <b>Congestion</b> <b>Notification,</b> mark-front, <b>congestion</b> control, buffer size requirement, fairness...|$|R
40|$|The paper {{discusses}} <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) in {{the context}} of the commercial Internet. It presents possible threats to ECN and shows the gain malicious ECN sources could achieve from ECN subverting. Besides, the paper analyses the relationships between ECN and Service Level Agreements (SLAs) ...|$|R
40|$|Abstract: Congestion is a {{major problem}} which really degrades network performance. Its effect on the delay is quite high which {{decrease}} the throughput in considerable amount. In this paper we have proposed a new congestion scheme which will enhance performance of network transmission by considering delay and throughput as main components. For this we are using Adaptive <b>Explicit</b> <b>Congestion</b> <b>Notification</b> method which allows us to control the network transmission from source to a receiver in a hierarchical manner by alterations in the receiving sending capacity. To achieve predictable average delays with adaptive <b>explicit</b> <b>congestion</b> <b>notification</b> would require constant tuning of the parameters to adjust to current traffic conditions. The sending and receiving ends are tuned according to its capacity and current network traffic condition once ECN (<b>Explicit</b> <b>congestion</b> <b>notification)</b> notification packet comes into action. The aim {{of this paper is to}} solve the parameter tuning problem of the AECN by dynamically setting up the network parameters to overcome delay in network transmission and hence to increase throughput. We will be comparing the performance of the ECN enabled system with the AECN enabled system. For this we are going to use JAVA, JNETPCAP and WINPCAP API’s by which we can create TCP packets, alter the fields of headers, send and receive packets etc...|$|R
50|$|A DCCP {{connection}} contains acknowledgment traffic {{as well as}} data traffic. Acknowledgments inform a sender {{whether its}} packets have arrived, and whether they were marked by <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN). Acknowledgements are transmitted as reliably as the congestion control mechanism in use requires, possibly completely reliably.|$|R
50|$|Another {{approach}} is to use IP <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN). ECN is used only when two hosts signal {{that they want to}} use it. With this method, a protocol bit is used to signal <b>explicit</b> <b>congestion.</b> This is better than the indirect packet delete <b>congestion</b> <b>notification</b> performed by the RED/WRED algorithms, but it requires explicit support by both hosts. ECN coauthor Sally Floyd published detailed information on ECN, including the version required for Cisco IOS.|$|R
50|$|The Per-Hop Behavior is {{determined}} by the DS field of the IP header. The DS field contains a 6-bit Differentiated Services Code Point (DSCP) value. <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) occupies the least-significant 2 bits of the IPv4 Type of Service field (TOS) and IPv6 Traffic Class field (TC).|$|R
50|$|In {{computer}} networking, the Datagram Congestion Control Protocol (DCCP) is a message-oriented {{transport layer}} protocol. DCCP implements reliable connection setup, teardown, <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), <b>congestion</b> control, and feature negotiation. The IETF published DCCP as RFC 4340, a proposed standard, in March 2006. RFC 4336 provides an introduction.|$|R
30|$|Popular {{approaches}} {{that use the}} built-in congestion mechanism to regulate the TCP transmission rates across a gateway are the random early detection (RED) [3] and the <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) [4, 5], while the smart access point with limited advertised window (SAP-LAW) [6] {{is based on the}} flux control mechanism.|$|R
50|$|AIMD {{requires}} a binary signal of congestion. Most frequently, packet loss {{serves as the}} signal; the multiplicative decrease is triggered when a timeout or acknowledgement message indicates a packet was lost. It is also possible for in-network mechanisms to mark congestion (without discarding packets) as in <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN).|$|R
40|$|We {{study the}} effect of <b>Explicit</b> <b>Congestion</b> <b>Notification</b> on TCP {{performance}} for large file transfers. We compare this performance with the performance achieved using other congestion avoidance mechanisms, namely Drop Tail and RED. Our results show that TCP performance improves significantly with ECN both for individual flows and the network as a whole...|$|R
40|$|<b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) for RTP over UDP This memo {{specifies}} how <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) can be {{used with}} the Real-time Transport Protocol (RTP) running over UDP, using the RTP Control Protocol (RTCP) as a feedback mechanism. It defines a new RTCP Extended Report (XR) block for periodic ECN feedback, a new RTCP transport feedback message for timely reporting of congestion events, and a Session Traversal Utilities for NAT (STUN) extension used in the optional initialisation method using Interactive Connectivity Establishment (ICE). Signalling and procedures for negotiation of capabilities and initialisation methods are also defined. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
50|$|<b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) is an {{extension}} to the Internet Protocol and to the Transmission Control Protocol and is defined in RFC 3168 (2001). ECN allows end-to-end <b>notification</b> of network <b>congestion</b> without dropping packets. ECN is an optional feature {{that may be used}} between two ECN-enabled endpoints when the underlying network infrastructure also supports it.|$|R
40|$|Performance {{analysis}} {{can be performed}} on: – medium (wired vs. wireless) – network resources (bandwidth, processing, memory) – constraints (energy, delay) – protocols (TCP, IP, etc.) – etc. • Purpose of this lab is to understand the effects of – <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) – Random Early Detection (RED) • … on the TCP layer in wired mediu...|$|R
40|$|International audienceCurrent {{congestion}} control mechanisms in today's Internet rely on end-to-end TCP congestion avoidance algorithms that back off sources when congestion occurs, detected by packet loss or <b>explicit</b> <b>congestion</b> <b>notification</b> signals. But {{one of the}} major setbacks of such mechanisms is making sure that all sources respond correctly in applying congestion avoidance measures during periods of high congestion; non-compliant sources can aggravate the network congestion state and yield to unfairness, worsening the state of the network. In this paper, we propose a network-centric solution for {{congestion control}}-called TRIC (TCP rate implicit control), that shapes the behavior of TCP {{from the edge of the}} network, using TCP's window manipulation and ACK pacing, based on backward <b>explicit</b> <b>congestion</b> <b>notification</b> in ACK packets going back to the source, generated by routers experiencing incipient congestion in the forward path. We also present simulation results that show how TRIC helps improve the throughput of TCP...|$|R
3000|$|TCP-Jersey [13] {{is similar}} to TCP Westwood. It {{estimates}} the available bandwidth also from the ACK reception rate, but it filters the rate with the simpler filter than TCP Westwood's, which also needs less parameters. Contrary to the other schemes, TCP-Jersey's congestion event totally depends on <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) [24]. If the sender receives a new ACK or [...]...|$|R
50|$|The type {{of service}} (ToS) field in the IPv4 header has had various {{purposes}} over the years, and has been defined in different ways by five RFCs. The modern redefinition of the ToS field is a six-bit Differentiated Services Code Point (DSCP) field and a two-bit <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) field. While Differentiated Services is somewhat backwards compatible with ToS, ECN is not.|$|R
40|$|International audienceEfficient radio {{resource}} usage {{and quality of}} service (QoS) provision are important criterions in order to choose the right QoS policy for the LTE operators. In our previous work, we have proposed to add a new database named as BSLRC (Base Station Load and Radio Conditions) to optimize the operator policy {{with regard to the}} radio efficiency [1]. Some concrete voice capacity estimations were also proposed. In this paper, we extend our earlier work by addressing some novel concerns. As a first step, we start by calculating the signaling load due to the use of BSLRC. Then, for voice services the BSLRC method is compared with the <b>explicit</b> <b>congestion</b> <b>notification</b> (already proposed for LTE systems). Both BSLRC and <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) share the same objective to optimize the choice of codec rate with regard to radio use efficiency. We also propose some capacity estimates for video services as an extension to our previously proposed voice capacity estimations over LTE systems...|$|R
40|$|This paper {{evaluates the}} {{suitability}} of Backward <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (BECN) for IP networks. The BECN mechanism has previously been used in non-IP networks, {{but there has been}} limited experimental investigation into the application of the BECN scheme as congestion control mechanism in IP networks. In this paper, we consider an enhanced algorithm for BECN which uses Internet Control Message Protocol (ICMP) Source Quenches for backward <b>congestion</b> <b>notification</b> in IP networks and undertake comparative performance evaluation of Random Early Detection (RED), <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) and our enhanced BECN mechanism using both longlived TCP bulk transfers and short-lived webtraffic workloads. Our results show that for webtraffic workloads, BECN offers only slight improvement in transfer delay while average goodput for bulk transfers is no worse than that of ECN. For paths that have a high bandwidth delay product our results show that not only can BECN offer significant improvement in average goodput for bulk transfers over the ECN mechanism, but packet drops and transfer delay for short-lived webtraffic connections are also comparatively reduced. Additional observations show that on such paths TCP (NewReno) with RED can offer higher goodput for bulk transfers compared to ECN...|$|R
