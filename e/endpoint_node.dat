7|38|Public
50|$|The {{materials}} {{needed to}} make an endpoint link are $60US, and are available locally. An <b>endpoint</b> <b>node</b> that provides 360-degree coverage of the area near it might use more hardware and cost closer to $150US.|$|E
30|$|Two {{networks}} were randomly connected via M edges. At this time, an <b>endpoint</b> <b>node</b> {{did not have}} multiple edges.|$|E
30|$|The set of {{bridges to}} nowhere is easily {{identified}} by recursively removing edges which have one <b>endpoint</b> <b>node</b> with degree one. The ties that bind, while not as precisely defined, are {{the collection of}} edges with the largest Edge Gravity. Like edge betweenness, Edge Gravity favors edges that connect dense subgroups. The number to include in this group is similar in concept {{to that of the}} number of recalculations of edge betweenness and removal in Newman and Girvan’s (2004) approach for finding community structure in networks.|$|E
30|$|With {{respect to}} the {{robustness}} of interconnected networks, it is inappropriate to use the giant component size because {{only a limited number}} of nodes include edges between networks, and the removal of other nodes corresponds to a considerably small influence on the performance of assortativity between networks. Removing nodes with the fore-mentioned interconnected edges could constitute a future research topic. However, all the nodes remain connected until all interconnecting edges are removed unless the <b>endpoint</b> <b>nodes</b> include extreme bottlenecks within the corresponding belonging network. Therefore, in order to evaluate the effect of interconnecting edges, average hop length between networks was used while removing <b>endpoint</b> <b>nodes</b> of the edges. With {{respect to the}} average hop length, paths between two nodes in the same network were ignored because they were barely influenced by the edges between networks. Thus, an interconnected network was considered robust if it retained its original value of average hop length following the removal of a few <b>endpoint</b> <b>nodes.</b>|$|R
30|$|With {{respect to}} the {{evaluation}} of robustness of interconnected networks, <b>endpoint</b> <b>nodes</b> of interconnecting edges were deliberately or randomly broken, and average hop length between networks was calculated. In this context, average hop length did not include paths between two nodes in the same network. Simulations of removal were executed 25 times with respect to each topology.|$|R
30|$|With {{respect to}} the {{selective}} failure shown in Fig. 12, assortative networks possess lower average hop length, and are therefore initially efficient. However, subsequently as <b>endpoint</b> <b>nodes</b> were selectively removed, there was a performance reversal between assortative and disassortative networks. This {{could be attributed to}} the loss of connections between high-degree nodes. Conversely, as shown in Fig. 13, the performance of average path length simply decreased while maintaining the order of assortativity.|$|R
40|$|We study {{two kinds}} of {{weighted}} networks, weighted small-world (WSW) and weighted scale-free (WSF). The weight w_ij of a link between nodes i and j in the network {{is defined as the}} product of <b>endpoint</b> <b>node</b> degrees; that is w_ij=(k_ik_j) ^θ. In contrast to adding weights to links during networks being constructed, we only consider weights depending on the " popularity of the nodes represented by their connectivity. It was found that the both weighted networks have broad distributions on characterization the link weight, vertex strength, and average shortest path length. Furthermore, as a survey of the model, the epidemic spreading process in both weighted networks was studied based on the standard susceptible-infected (SI) model. The spreading velocity reaches a peak very quickly after the infection outbreaks and an exponential decay was found in the long time propagation. Comment: 14 pages, 5 figure...|$|E
40|$|An ad hoc {{network is}} an {{autonomous}} system of wireless mobile nodes, {{in which each}} node forwards packets for other nodes so that nodes out of direct wireless transmission range can communicate. In on-demand routing protocols for ad hoc networks, we find that existing schemes mistakenly may decide that a link is broken when it is not, especially when either <b>endpoint</b> <b>node</b> of the link experiences heavy interference. Moreover, a route claimed to be available may contain broken links due {{to the presence of}} stale routing information. We develop interference-aware enhancements both at the MAC layer and at the routing layer to address these problems. Simulation results show that our proposed enhancements reduce the problem dramatically and in turn increase the performance and efficiency of the routing protocol. In our simulations, total network throughput improved by up to 38 % with DSR and by up to 13 % with AODV...|$|E
40|$|The Graceful Tree Conjecture is {{a problem}} in graph theory that dates back to 1967. It {{suggests}} that every tree on n nodes can be labelled with the integers [1 [...] n] such that the edges, when labelled with the difference between their <b>endpoint</b> <b>node</b> labels, are uniquely labelled with the integers [1 [...] n- 1]. To date, no proof or disproof of the conjecture has been found, but all trees with up to 28 vertices {{have been shown to be}} graceful. The conjecture also leads to a problem in algorithm design for efficiently finding graceful labellings for trees. In this thesis, a new graceful labelling algorithm is described and used to show that all trees on 29 vertices are graceful. A study is also made of statistical trends in the proportion of tree labellings that are graceful. These trends offer strong additional evidence that every tree is graceful...|$|E
40|$|Air Service Agreements are {{government-to-government}} negotiated {{bilateral agreements}} that determine a nation's permitted passenger carrying capacity between origin and <b>endpoint</b> <b>nodes</b> on particular international air routes. This study determines how social surplus-maximising agreements {{can be constructed}} under various demand and bargaining assumptions. The analysis is exposited {{in terms of the}} Australia-Japan air route although it is quite general. The role of marketing and downstream inter-industry effects are examined. Problems of computing optimal agreements are discussed. ...|$|R
50|$|Traditional node-link {{methods for}} {{visualizing}} networks deteriorate {{in terms of}} legibility when dealing with large networks, due to the proliferation of edge crossings amassing as what are disparagingly termed 'hairballs'. BioFabric {{is one of a}} number of alternative approaches designed explicitly to tackle this scalability issue, choosing to do so by depicting nodes as lines on the horizontal axis, one per row; edges as lines on the vertical axis, one per column, terminating at the two rows associated with the <b>endpoint</b> <b>nodes.</b> As such, nodes and edges are each provided their own dimension (as opposed to solely the edges with nodes being non-dimensional points). BioFabric exploits the additional degree of freedom thus produced to place ends of incident edges in groups. This placement can potentially carry semantic information, whereas in node-link graphics the placement is often arbitrarily generated within constraints for aesthetics, such as during force-directed graph drawing, and may result in apparently informative artifacts.|$|R
40|$|Abstract: 2 ̆ 2 Many {{techniques}} used by routing protocols for ad hoc networks assume that links {{in the network}} can be used equally well in both directions between the two <b>endpoint</b> <b>nodes</b> of the link. However, there are many real-world situations in which wireless links may physically work in only one direction, resulting in degradation of routing performance in the network. In this paper, we present the first study {{of the effect of}} unidirectional links on the performance of on-demand multicast routing protocols for ad hoc networks and present mechanisms that enable such protocols to route efficiently over unidirectional links. We evaluate these mechanisms {{in the context of the}} Adaptive Demand-Driven Multicast Routing protocol (ADMR), and simulate the extended protocol, ADMR-U, in a wide range of mobile and static network scenarios with unidirectional links. In networks with only bidirectional links, the unidirectional extensions do not get activated and cause no overhead; in networks with unidirectional links, ADMR-U matches or outperforms ADMR in terms of packet delivery ratio, and lowers ADMR 2 ̆ 7 s packet overhead. 2 ̆...|$|R
40|$|An ad hoc {{network is}} a {{collection}} of mobile nodes using wireless network interfaces to communicate among themselves, discovering and routing along possibly multihop routes to each other without the assistance of fixed infrastructure. In this paper, we describe the design and demonstration of a set of simple routing protocol mechanisms that substantially improve the transmission of real-time multimedia streams over a multihop wireless mobile ad hoc network. The public demonstration of these mechanisms at the final DARPA GloMo PI meeting showed smooth audio and clear video over the ad hoc network throughout the demonstration, despite frequent routing changes taking place as a car implementing one <b>endpoint</b> <b>node</b> moved continuously. We implemented our routing extensions in the Dynamic Source Routing protocol (DSR) running over standard 2 Mbps Lucent WaveLAN-II radios; the two endpoint nodes ran standard Microsoft Windows NetMeeting, communicating entirely through normal IP packets over our 8 -node DSR ad hoc network...|$|E
30|$|As {{discussed}} in [31], several researchers [32 – 37] addressed general problem of QoS in MANETs, providing overviews and insights {{on the work}} being done in this area. To achieve QoS provisioning, QoS routing algorithms normally integrate QoS provisioning into routing protocols. The QoS version of AODV (QoS-AODV) [37], Core-Extraction Distributed Ad Hoc Routing (CEDAR) protocol [38], and Multimedia Support for Mobile Wireless Networks (MMWN) protocol [39] {{are some of the}} examples of QoS routing algorithms proposed for MANETs. However, QoS signaling techniques are independent of underlying routing protocols. The In-band signaling for QoS in Ad-Hoc Mobile Networks (INSIGNIA) algorithm [40] is a typical signaling protocol designed exclusively for MANETs. The idea of CEDAR and MMWN is to broadcast link-state information across the network in order to enable other nodes to find routes that meet QoS criteria, like minimum bandwidth. On the other hand, INSIGNIA piggybacks resource reservations onto data packets, which can be modified by intermediate nodes to inform the communication <b>endpoint</b> <b>nodes</b> in case of lack of resources. These approaches are {{based on the idea that}} wireless links between mobile nodes have certain QoS-related properties, in particular a known amount of available bandwidth, and that nodes are able to give guarantees for traffic traversing these links.|$|R
40|$|Many {{computing}} related tasks today {{require a}} lot of hardware infrastructure to fulfill requirements and expectations of its users. Physical infrastructure used to serve systems are often organized in several geographically separate computer clusters. In this thesis, we have investigated and developed a working prototype which enables nodes in a PCI Express based computer cluster to connect with, and transfer data a node in remote PCI Express based cluster. Central to our design is the cluster gateway, or proxy node. Each cluster consists of <b>endpoint</b> <b>nodes</b> and one proxy node. The proxy acts as a gateway for incoming and outgoing data traffic to and from nodes in the local cluster. Every data transfer is relayed via the proxies which carries the responsibility of forwarding outgoing data to a destination remote cluster, and forwarding incoming data to the recipient node. The system is implemented on PCI Express based clusters using Ethernet as the medium connecting remote clusters together. The cluster interconnect technology enables nodes to connect to memory segments in a node within the cluster and perform read and write operations on it using either programmed I/O or Remote Direct Memory Access. We have implemented functionality intended to supplement an already existing API, {{that can be used to}} execute inter-cluster data transmissions...|$|R
40|$|Sun’s Link Service, {{a product}} shipped with Sun’s {{programming}} {{in the large}} software development environment, the Network Software Environment, allows users to make and maintain explicit and persistent bidirectional relationships between autonomous frontend applications. The Link Service defines a protocol for an extensible and loosely coupled, or open, hypertext system. An interesting instance {{of this is the}} ability to link to objects in closed hypertext systems if they integrate with the Link Service. The Link Service addresses link maintenance and automated versioning. Link <b>endpoints,</b> or <b>nodes,</b> are defined by the integrating applications, and are not restricted to points, whole documents, or cards...|$|R
30|$|Complex {{networks}} are often constructed by aggregating empirical data over time, such that a link represents {{the existence of}} interactions between the <b>endpoint</b> <b>nodes</b> and the link weight represents the intensity of such interactions within the aggregation time window. The resulting {{networks are}} then often considered static. More often than not, the aggregation time window is dictated by the availability of data, {{and the effects of}} its length on the resulting networks are rarely considered. Here, we address this question by studying the structural features of networks emerging from aggregating empirical data over different time intervals, focussing on networks derived from time-stamped, anonymized mobile telephone call records. Our results show that short aggregation intervals yield networks where strong links associated with dense clusters dominate; the seeds of such clusters or communities become already visible for intervals of around one week. The degree and weight distributions are seen to become stationary around a few days and a few weeks, respectively. An aggregation interval of around 30 days results in the stablest similar networks when consecutive windows are compared. For longer intervals, the effects of weak or random links become increasingly stronger, and the average degree of the network keeps growing even for intervals up to 180 days. The placement of the time window is also seen to affect the outcome: for short windows, different behavioural patterns play a role during weekends and weekdays, and for longer windows it is seen that networks aggregated during holiday periods are significantly different.|$|R
40|$|Abstract—Little {{is known}} about {{geographic}} properties of large-scale social networks. In this paper, we examine the geospatial attributes of a planetary-scale social network of 240 million people and 1. 3 billion edges. We study the interplay among topologi-cal, geographical, and algorithmically generated paths connecting pairs of nodes in a social network. Starting {{in the realm of}} cyberspace, we find that topologically shortest paths of average length of 6. 6 exist between pairs of nodes in the network and that the average degree of separation among nodes is robust to removal of hub nodes. Moving to the realm of locations and dis-tances in geographic space, we find that topologically shortest paths in the social graph grow with increasing geographic dis-tance between path’s <b>endpoint</b> <b>nodes.</b> We discover that shortest topological paths are geographically inefficient, but that geog-raphy provides an important cue for local algorithmic policies for navigating between source and target nodes. Local algorith-mic strategies for navigating the larger network structure in the absence of global navigation procedures have varying success. At {{the early stages of the}} navigation, navigating to a hub node helps, while in the middle stage, geography provides the most important clue. While local algorithms for navigating have trouble reach-ing the target node, they are successful in reaching nodes that are geographically close to the target. Taken together, our results demonstrate a complex interplay between topological and geo-graphical properties of social networks and explain the success of local strategies for navigating such networks. Index Terms—Decentralized search, network navigation, net-works, small-world experiment, social search. I...|$|R
40|$|Complex {{networks}} are often constructed by aggregating empirical data over time, such that a link represents {{the existence of}} interactions between the <b>endpoint</b> <b>nodes</b> and the link weight represents the intensity of such interactions within the aggregation time window. The resulting {{networks are}} then often considered static. More often than not, the aggregation time window is dictated by the availability of data, {{and the effects of}} its length on the resulting networks are rarely considered. Here, we address this question by studying the structural features of networks emerging from aggregating empirical data over different time intervals, focussing on networks derived from time-stamped, anonymized mobile telephone call records. Our results show that short aggregation intervals yield networks where strong links associated with dense clusters dominate; the seeds of such clusters or communities become already visible for intervals of around one week. The degree and weight distributions are seen to become stationary around a few days and a few weeks, respectively. An aggregation interval of around 30 days results in the stablest similar networks when consecutive windows are compared. For longer intervals, the effects of weak or random links become increasingly stronger, and the average degree of the network keeps growing even for intervals up to 180 days. The placement of the time window is also seen to affect the outcome: for short windows, different behavioural patterns play a role during weekends and weekdays, and for longer windows it is seen that networks aggregated during holiday periods are significantly different. Comment: 19 pages, 11 figure...|$|R
40|$|The International Space Station (ISS) {{is in an}} {{operational}} configuration and nearing final assembly. With its maturity and diverse payloads onboard, the opportunity exists to extend the orbital lab into a facility to exercise and demonstrate Delay/Disruption Tolerant Networking (DTN). DTN is an end-to-end network service providing communications through environments characterized by intermittent connectivity, variable delays, high bit error rates, asymmetric links and simplex links. The DTN protocols, also known as bundle protocols, provide a store-and-forward capability to accommodate end-to-end network services. Key capabilities of the bundling protocols include: the Ability to cope with intermittent connectivity, the Ability {{to take advantage of}} scheduled and opportunistic connectivity (in addition to always up connectivity), Custody Transfer, and end-to-end security. Colorado University at Boulder and the Huntsville Operational Support Center (HOSC) have been developing a DTN capability utilizing the Commercial Generic Bioprocessing Apparatus (CGBA) payload resources onboard the ISS, at the Boulder Payload Operations Center (POC) and at the HOSC. The DTN capability is in parallel with and is designed to augment current capabilities. The architecture consists of DTN <b>endpoint</b> <b>nodes</b> on the ISS and at the Boulder POC, and a DTN node at the HOSC. The DTN network is composed of two implementations; the Interplanetary Overlay Network (ION) and the open source DTN 2 implementation. This paper presents the architecture, implementation, and lessons learned. By being able to handle the types of environments described above, the DTN technology will be instrumental in extending networks into deep space to support future missions to other planets and other solar system points of interest. Thus, this paper also discusses how this technology will be applicable to these types of deep space exploration missions...|$|R
5000|$|MC-LAG adds node-level {{redundancy}} to {{the normal}} link-level redundancy that a LAG provides. This allows two or more nodes to share a common LAG <b>endpoint.</b> The multiple <b>nodes</b> present a single logical LAG to the remote end. Note that MC-LAG implementations are vendor-specific, but cooperating chassis remain externally compliant to the IEEE 802.1AX-2008 standard. [...] Nodes in an MC-LAG cluster communicate to synchronize and negotiate automatic switchovers (failover). Some implementations may support administrator-initiated (manual) switchovers.|$|R
2500|$|For example, the Chord DHT uses {{consistent}} hashing, which treats keys as {{points on}} a circle, and [...] is the distance traveling clockwise {{around the circle}} from [...] to [...] Thus, the circular keyspace is split into contiguous segments whose <b>endpoints</b> are the <b>node</b> identifiers. If [...] and [...] are two adjacent IDs, with a shorter clockwise distance from [...] to , then the node with ID [...] owns all the keys that fall between [...] and [...]|$|R
40|$|A common {{assumption}} of TDMA-based wireless ad hoc networks is {{the existence of}} network-wide slot synchronization. Such a mechanism is difficult to support in practice. In asynchronous TDMA systems, each link uses a local time slot reference provided by the hardware clock tick {{of one of the}} <b>node</b> <b>endpoints.</b> Inevitably, slots are wasted when nodes switch time slot references. This restricts the rate allocations that can be supported when compared to a perfectly synchronized system. To addres...|$|R
5000|$|For example, the Chord DHT uses {{consistent}} hashing, which treats keys as {{points on}} a circle, and [...] is the distance traveling clockwise {{around the circle}} from [...] to [...] Thus, the circular keyspace is split into contiguous segments whose <b>endpoints</b> are the <b>node</b> identifiers. If [...] and [...] are two adjacent IDs, with a shorter clockwise distance from [...] to , then the node with ID [...] owns all the keys that fall between [...] and [...]|$|R
40|$|Abstract. In this paper, {{quadrature}} formulas on {{the real}} line with the highest degree of accuracy, with positive weights, and {{with one or two}} prescribed nodes anywhere on the interval of integration are characterized. As an application, the same kind of rules but with one or both (finite) <b>endpoints</b> being fixed <b>nodes</b> and one or two more prescribed nodes inside the interval of integration are derived. An efficient computation of such quadrature formulas is analyzed by considering certain modified Jacobi matrices. Some numerical experiments are finally presented...|$|R
40|$|Published online September 28, 2009 In this paper, {{quadrature}} formulas in {{an interval}} {{of the real}} line with the highest degree of accuracy, with positive weights and {{with one or two}} prescribed nodes anywhere on the interval of integration are characterized. As an application, the same kind of rules but with one or both <b>endpoints</b> being fixed <b>nodes</b> and one or two more prescribed nodes inside the interval of integration are derived. An efficient computation of such quadrature formulas is analyzed by considering certain modified Jacobi matrices. Some numerical experiments are finally presented. status: publishe...|$|R
40|$|In this paper, {{quadrature}} formulas on {{the real}} line with the highest degree of accuracy, with positive weights, and {{with one or two}} prescribed nodes anywhere on the interval of integration are characterized. As an application, the same kind of rules but with one or both (finite) <b>endpoints</b> being fixed <b>nodes</b> and one or two more prescribed nodes inside the interval of integration are derived. An efficient computation of such quadrature formulas is analyzed by considering certain modified Jacobi matrices. Some numerical experiments are finally presented. nrpages: 32 status: publishe...|$|R
5000|$|The term [...] "socket" [...] is {{analogous}} to physical female connectors, communication between two nodes through a channel being visualized as a cable with two male connectors plugging into sockets at each node. Similarly, the term [...] "port" [...] (another term for a female connector) is used for external <b>endpoints</b> at a <b>node,</b> and the term [...] "socket" [...] is also used for an internal endpoint of local inter-process communication (IPC) (not over a network). However, the analogy is strained, as network communication need not be one-to-one or have a channel.|$|R
40|$|In EONs, the {{establishment}} of flexi-grid optical connections requires configuring both BVTs and bandwidth variable cross-connects. Such configuration has to be performed through proper control plane architecture and extensions, accounting for the client signal data rate, the required modulation format, the adopted forwarding error correction mechanisms, the number of carriers, and the required spectrum resources. Nowadays, two candidate control plane architectures with similar functions (like <b>endpoint</b> and <b>node</b> addressing, automatic topology discovery, network abstraction, path computation, and connection provisioning) can be adopted: distributed GMPLS - with optional PCE and instantiation/modification - and a control plane based on SDN with a logically centralized controller and an open protocol such as OpenFlow. In this work, by relying on the data modeling of 1 Tb/s SBVTs, we aim to design and provide feasible control plane enhancements for both GMPLS/PCE and SDN/OpenFlow architectures to automatically configure endpoint SBVTs while dynamically establishing end-to-end connections in EONs. Such extensions, successfully validated in experimental scenarios, are qualitatively compared to ease eventual EON operator selection...|$|R
40|$|AbstractAutomated feature {{extraction}} from medical images {{is an important}} task in imaging informatics. We describe a graph-based technique for automatically identifying vascular substructures within a vascular tree segmentation. We illustrate our technique using vascular segmentations from computed tomography pulmonary angiography images. The segmentations were acquired in a semi-automated fashion using existing segmentation tools. A 3 D parallel thinning algorithm was used to generate the vascular skeleton and then graph-based techniques were used to transform the skeleton to a directed graph with bifurcations and <b>endpoints</b> as <b>nodes</b> in the graph. Machine-learning classifiers were used to automatically prune false vascular structures from the directed graph. Semantic labeling of portions of the graph with pulmonary anatomy (pulmonary trunk and left and right pulmonary arteries) was achieved with high accuracy (percent correct⩾ 0. 97). Least-squares cubic splines of the centerline paths between nodes were computed and were used to extract morphological features of the vascular tree. The graphs were used to automatically obtain diameter measurements that had high correlation (r⩾ 0. 77) with manual measurements made from the same arteries...|$|R
40|$|Abstract. The {{broadcasting}} problem {{asks for}} {{the fastest way}} of trans-mitting a message to all nodes of a communication network. We consider the problem in conflict-aware multi-channel networks. These networks can be modeled as undirected graphs in which each edge is labeled {{with a set of}} available channels to transmit data between its <b>endpoints.</b> Each <b>node</b> can send and receive data through any channel on its incident edges, with the restriction that it cannot successfully receive through a channel when multiple neighbors send data via that channel simultaneously. We present efficient algorithms as well as hardness results for the broad-casting problem on various network topologies. We propose polynomial time algorithms for optimal broadcasting in grids, and also for trees when there is only one channel on each edge. Nevertheless, we show that the problem is NP-hard for trees in general, as well as for complete graphs. In addition, we consider balanced complete graphs and propose a pol-icy for assigning channels to these graphs. This policy, together with its embedded broadcasting schemes, result in fault-tolerant networks which have optimal broadcasting time. ...|$|R
40|$|A common {{assumption}} of TDMA-based wireless ad hoc networks is {{the existence of}} network-wide slot synchronization. In practice such a mechanism is difficult to support. In asynchronous TDMA systems each link uses a local time slot reference provided by the hardware clock tick {{of one of the}} <b>node</b> <b>endpoints.</b> Inevitably, slots will be wasted when nodes switch time slot references. This restricts the rate allocations that can be supported when compared to a perfectly synchronized system. We address this practical performance issue for the case of Bluetooth, a wireless technology operating according to the asynchronous TDMA communication paradigm. We introduce scheduling algorithms that not only guarantee upper bounds on the generated overhead but also target its minimization...|$|R
40|$|Results {{in visual}} {{psychology}} {{have shown that}} the location and statistics of <b>nodes,</b> <b>endpoints</b> and corners carry essential and sufficient information for object recognition. In this paper, we present a method for object categorization which relies on the combination of the Visual Feature Array model and Hierarchical Temporal Memories. Experimental results show that even without taking into consideration statistics other than the spatial distribution of nodes, two categories can be told apart with a success rate of about 95 %. The same results could not be achieved by simply taking into account grayscale pixel values. Efforts were also made to generalize the above results to a categorization task among 10 different categories. ...|$|R
40|$|Suppose that we {{are given}} input I, a set of n {{non-intersecting}} segments inR 2. A query is the triple (qx, qy, q′y) representing the vertical line segment from (qx, qy) to (qx, q′y). We wish to return {{a list of the}} segments in I that intersect with the query segment. 7. 1. 2 Data Structure The segment tree, intially proposed in [1], is a two-level data structure used to efficiently solve the problem given above. The primary structure is a binary tree T, and each node in T is built to contains a subset of the segments in I. Each node also contains a link to a secondary data structure: a binary tree. This secondary tree will be described shortly. Let’s first gain an intuition for the primary data structure. Consider the input segments A through E given in Figure 7. 1. If we project these segments down to R, given by the horizontal number line, then the endpoints partition R. To build a segment tree, create one leaf node for each partition, and one leaf <b>node</b> for each <b>endpoint.</b> These <b>nodes</b> are represented by squares in the figure. As each leaf node is built, all intervals that project to the corresponding region of R are added to the node. Next, join the nodes in pairs from the bottom up to form a binary tree...|$|R
40|$|Abstract. A common {{assumption}} of TDMA-based wireless ad hoc networks is {{the existence of}} network-wide slot synchronization. Such a mechanism is difficult to support in practice. In asynchronous TDMA systems, each link uses a local time slot reference provided by the hardware clock tick {{of one of the}} <b>node</b> <b>endpoints.</b> Inevitably, slots are wasted when nodes switch time slot references. This restricts the rate allocations that can be supported when compared to a perfectly synchronized system. To address this practical performance issue we first introduce a general framework for conflict-free scheduling in asynchronous TDMA networks. We then propose scheduling algorithms that target overhead minimization while ensuring upper bounds on the generated overhead. Through extensive simulations the algorithm performances are evaluated in the context of Bluetooth, a wireless technology that operates according to the asynchronous TDMA communication paradigm. ...|$|R
40|$|A common {{assumption}} of time {{division multiple access}} (TDMA) -based wireless ad hoc networks is the existence of network-wide slot synchronization. Such a mechanism is difficult to support in practice. In asynchronous TDMA systems, each link uses a local time slot reference provided by the hardware clock tick {{of one of the}} <b>node</b> <b>endpoints.</b> Inevitably, slots are wasted when nodes switch time slot references. This restricts the rate allocations that can be supported when compared to a perfectly synchronized system. To address this practical performance issue, we first introduce a general framework for conflict-free scheduling in asynchronous TDMA networks. We then propose scheduling algorithms that target overhead minimization while ensuring upper bounds on the generated overhead. Through extensive simulations the algorithm performances are evaluated in the context of Bluetooth, a wireless technology that operates according to the asynchronous TDMA communication paradigm. Copyright (C) 2004 AEI...|$|R
