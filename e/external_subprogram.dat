1|3|Public
5000|$|An {{example of}} a main program and an <b>external</b> <b>subprogram,</b> forming an {{executable}} program, is ...|$|E
50|$|From an {{organizational}} point of view, however, a complete program consists of program units. These are either main programs, <b>external</b> <b>subprograms</b> or modules {{and can be}} separately compiled.|$|R
40|$|Computer storage {{requirements}} {{can be reduced}} if areas of commonality exist in two or more programs placed in the same computer and identical code {{can be used by}} more than one program. The pressure-volume-temperature (P-V-T) relationship for the propellant tank pressurant agent is utilized as the basis for either a primary of a backup propellant gaging program for the auxiliary power unit (APU), the reaction control system (RCS), and the orbital maneuvering system (OMS). These three propellant gaging programs were investigated. It was revealed that a very limited degree of software commonality exits among them. An examination of this common software indicated that only the computation of the helium compressibility factor in an <b>external</b> function <b>subprogram</b> accessible to both the RCS and OMS propellant gaging programs appears to offer a savings in computer {{storage requirements}}...|$|R
40|$|In this study, we {{revisit the}} {{question}} of identifying the characteristics of "optimum" software components. Specifically, we focus on those characteristics {{that are expected to}} minimize defect densities uncovered during the testing phases of software development. Although a number of such models have been examined in the past, these models have embodied some methodological difficulties that we attempt to remedy. Using data from Ada and C subprograms, we examine the optimum number of lines of code for subprograms and the optimum relationship between the internal and <b>external</b> complexities of <b>subprograms.</b> Our results show that the optimal size for subprograms is between 80 - 100 lines of code and that for these optimally sized subprograms the optimal number of calls is about 14...|$|R

