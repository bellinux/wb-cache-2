355|167|Public
5|$|A USB device pulls one of {{the data}} lines high with a 1.5kΩ resistor. This overpowers {{one of the}} {{pull-down}} resistors in the host and leaves the data lines in an <b>idle</b> <b>state</b> called J.|$|E
5|$|Synchronization Pattern: A USB packet {{begins with}} an 8-bit {{synchronization}} sequence, 00000001₂. That is, after the initial <b>idle</b> <b>state</b> J, the data lines toggle KJKJKJKK. The final 1bit (repeated Kstate) {{marks the end of}} the sync pattern {{and the beginning of the}} USB frame. For high-bandwidth USB, the packet begins with a 32-bit synchronization sequence.|$|E
25|$|Digital {{sampling}} is used {{to convert}} an audio wave to a sequence of binary numbers that {{can be stored in}} a digital format, such as MP3. Common features of all MP3 players are a memory storage device, such as flash memory or a miniature hard disk drive, an embedded processor, and an audio codec microchip to convert the compressed file into an analogue sound signal. During playback, audio files are read from storage into a RAM based memory buffer, and then streamed through an audio codec to produce decoded PCM audio. Typically audio formats decode at double to more than 20 times real speed on portable electronic processors, requiring that the codec output be stored for a time until the DAC can play it. To save power, portable devices may spend much or nearly all of their time in a low power <b>idle</b> <b>state</b> while waiting for the DAC to deplete the output PCM buffer before briefly powering up to decode additional audio.|$|E
30|$|During the statechart {{derivation}} it can {{be necessary}} to specify more <b>idle</b> <b>states</b> to represent {{that the system is}} waiting for some input. These states should be represented though new states and the conditions required to hold should be specified in the transition of these <b>idle</b> <b>states.</b>|$|R
30|$|Tbusy and Tidle {{show the}} {{duration}} of the Busy and the <b>Idle</b> <b>states,</b> respectively.|$|R
30|$|The {{alternate}} sequence about {{busy and}} <b>idle</b> <b>states</b> of PU follows exponential distribution. More details {{could be found}} in [39].|$|R
500|$|End of Packet (EOP): EOP is {{indicated}} by the transmitter driving 2 bit times of SE0 (D+ and D− both below max.) and 1bit time of Jstate. After this, the transmitter ceases to drive the D+/D− lines and the aforementioned pull-up resistors hold it in the J (<b>idle)</b> <b>state.</b> Sometimes skew due to hubs can add {{as much as one}} bit time before the SE0 of the end of packet. This extra bit can also result in a [...] "bit stuff violation" [...] if the six bits before it in the CRC are 1s. This bit should be ignored by receiver.|$|E
2500|$|When {{the memory}} {{controller}} needs to access a different row, it must first return that bank's sense amplifiers to an <b>idle</b> <b>state,</b> ready {{to sense the}} next row. [...] This {{is known as a}} [...] "precharge" [...] operation, or [...] "closing" [...] the row. [...] A precharge may be commanded explicitly, or it may be performed automatically at the conclusion of a read or write operation. [...] Again, there is a minimum time, the row precharge delay, tRP, which must elapse before that bank is fully idle and it may receive another activate command.|$|E
2500|$|The no {{operation}} command is always permitted, while the load mode register command requires that all banks be idle, and a delay afterward for {{the changes to}} take effect. [...] The auto refresh command also requires that all banks be idle, and takes a refresh cycle time tRFC to return the chip to the <b>idle</b> <b>state.</b> [...] (This time is usually equal to tRCD+tRP.) [...] The only other command that is permitted on an idle bank is the active command. [...] This takes, as mentioned above, tRCD before the row is fully open and can accept read and write commands.|$|E
40|$|Abstract. In this paper, the {{complexity}} analysis method based on Jensen-Shannon Divergence {{was used to}} calculate {{the complexity}} of the <b>Idle</b> <b>states,</b> the close eyes states and the count numbers states electroencephalogram. The study found that the JSD value of close eyes states EEG was highest, followed by that of the <b>Idle</b> <b>states</b> EEG, and that of the count numbers states EEG was minimum. The result can be used to assisted clinical diagnosis...|$|R
3000|$|... backoff {{slots in}} a TR phase {{subchannel}} contains {{a transition to}} successful collision or <b>idle</b> <b>states.</b> For our MAC scheme, the value of [...]...|$|R
30|$|The {{rejection}} of the pair H 08 and H 116 allows accepting {{that the number of}} <b>idle</b> <b>states</b> of the control group is also smaller than the control group. This result is also related with the monitoring required in context-sensitive systems. The <b>idle</b> <b>states</b> are necessary to the system adapts itself if some requirement is not bring satisfied or it needs providing an specialized service to its users. Hence, many subjects subjects of the control group did not consider such monitoring and adaptation.|$|R
5000|$|If {{an error}} occurs at any {{state of the}} FSM process, the BGP session is {{terminated}} immediately {{and returned to the}} <b>Idle</b> <b>state.</b> Some of the reasons why a router does not progress from the <b>Idle</b> <b>state</b> are: ...|$|E
5000|$|If it is {{unsuccessful}} again, the FSM is {{reset to}} the <b>Idle</b> <b>state.</b>|$|E
5000|$|The <b>idle</b> <b>state,</b> i.e., an {{open loop}} of a {{subscriber}} line or PBX user loop.|$|E
3000|$|... 1.2 : If necessary, create <b>idle</b> <b>states</b> {{to model}} {{situations}} where the system is waiting for user interaction or for a given context to hold.|$|R
5000|$|Elvis Presley {{was a great}} fan of Monty Python. In {{an extra}} on the Rutles DVD, <b>Idle</b> <b>states</b> that [...] "Nudge Nudge" [...] was Presley's {{favourite}} Python sketch.|$|R
40|$|Abstract—In this paper, we {{undertake}} {{the problem of}} minimizing system-level energy on chip-multicore processors (CMPs) executing a periodic real-time workload. Our frameworkhastwocomponents:i.) astaticphasethatselectsasubset of cores upon which the workload can be executed without dissipating excessive static power and performs task-to-core allocation, ii.) a dynamic phase that involves managing the selectedcoresatrun-timethroughcoordinatedpowermanagementframeworkthatexploitsDynamicVoltageandFrequency Scaling (DVFS) as well as multiple <b>idle</b> <b>states</b> offered by modernCMParchitectures,toreducethedynamicpower. We explicitlyconsidertheuniquetraitsofthecurrentlyavailable CMParchitecturesthatdistinguishthemfrommultiprocessors, includingtheuniquevoltagelevelsharedbythecoresandits implications for DVFS. We identify the global energy-efficient frequency which indicates the minimum frequency level at whichconcurrentexecutiononmultiplecoresshouldtakeplace to preserve the efficiency of DVFS. Then we propose two algorithmsCVFSandCVFS*tominimizethedynamicenergy consumption through concerted use of DVFS and <b>idle</b> <b>states...</b>|$|R
5000|$|Termination {{occurs when}} the {{controlling}} agent has a weight of [...] {{and is in the}} <b>idle</b> <b>state.</b>|$|E
5000|$|I Care Not for the <b>Idle</b> <b>State,</b> Anacreontic Ode for {{baritone}} and piano, Op. 15; {{words by}} Thomas Moore ...|$|E
50|$|At CPOL=0 {{the base}} {{value of the}} clock is zero, i.e. the <b>idle</b> <b>state</b> is 0 and active state is 1.|$|E
3000|$|The above probabilities {{are valid}} for our system and 802.11 DCF; however, their {{meanings}} {{are different in}} each MAC. For DCF, these probabilities describe the transition probabilities between successful collision and <b>idle</b> <b>states.</b> Whereas, in our system they only describe the probabilities {{that each of the}} [...]...|$|R
50|$|Timer {{coalescing}} is {{a computer}} system energy-saving technique that reduces central processing unit (CPU) power consumption by reducing the precision of software timers to allow the synchronization of process wake-ups, minimizing {{the number of times}} the CPU is forced to perform the relatively power-costly operation of entering and exiting <b>idle</b> <b>states.</b>|$|R
30|$|Structural complexity: this {{variable}} {{is determined by}} the different elements that compose the model (Miranda et al. 2005), such as states, transitions, activities, etc. Hence, we evaluated the structural complexity of statecharts through different metrics: the number of super <b>states,</b> orthogonal <b>states,</b> <b>idle</b> <b>states,</b> final state, simple states, state transitions, choice, variables and actions. High structural complexity has an impact on the cognitive complexity of statecharts (Miranda et al. 2005). This metric was used to investigate the structural complexity of the statecharts obtained using (or not) the GO 2 S process.|$|R
50|$|Clocks are resynchronized {{when the}} voted signal changes from 1 to 0, if the {{receiver}} was in either <b>idle</b> <b>state</b> or expecting BSS1.|$|E
50|$|At CPOL=1 {{the base}} {{value of the}} clock is one (inversion of CPOL=0), i.e. the <b>idle</b> <b>state</b> is 1 and active state is 0.|$|E
5000|$|If a timer expires {{before a}} Keepalive message is received, or if an error {{condition}} occurs, the router transitions {{back to the}} <b>Idle</b> <b>state.</b>|$|E
5000|$|The camera button is not waking {{the phone}} up from its <b>idle</b> sleep <b>state.</b>|$|R
50|$|Researchers have {{proposed}} improving the low power <b>idle</b> <b>states</b> of servers, and the wake-up/shutdown latencies between active and idle modes, {{because this is}} an easier optimization goal than active performance scaling. If servers could wake up and shutdown at a very fine time granularity, then the server would become energy proportional, even if active power is constant at all utilizations.|$|R
40|$|In this article, {{we report}} {{the design of}} a {{reflective}} intensity-modulated optical fiber sensor for blade tip-clearance measurement, and the experimental results for the first stage of a compressor of an aircraft engine operating in real conditions. The tests were performed in a ground test cell, where the engine completed four cycles from <b>idling</b> <b>state</b> to takeoff and back to <b>idling</b> <b>state.</b> During these tests, the rotational speed of the compressor ranged between 7000 and 15, 600 rpm. The main component of the sensor is a tetrafurcated bundle of optical fibers, with which the resulting precision of the experimental measurements was 12 µm for a measurement range from 2 to 4 mm. To get this precision the effect of temperature on the optoelectronic components of the sensor was compensated by calibrating the sensor in a climate chamber. A custom-designed MATLAB program was employed to simulate the behavior of the sensor prior to its manufacture...|$|R
50|$|The CAN bus must be terminated. The {{termination}} resistors {{are needed}} to suppress reflections as well as return the bus to its recessive or <b>idle</b> <b>state.</b>|$|E
5000|$|If {{there is}} any error in the Update message then a Notification message {{is sent to the}} peer, and BGP {{transitions}} back to the <b>Idle</b> <b>state.</b>|$|E
50|$|Location {{updating}} is {{the mechanism}} {{that is used}} to determine the location of an MS in the <b>idle</b> <b>state</b> (connected to the network, but with no active call).|$|E
40|$|This paper {{introduces}} {{and develops}} {{the concept of}} multiple busy state resources to simplify the process of stratifying statistics associated with resources. Most simulation languages recognize only busy and <b>idle</b> <b>states.</b> In many applications stratification of the busy state statistics is necessary to account for phenomena such as failures, repairs, maintenance, shift capacity changes, and cost tracking. These ideas are demon-strated by way of an implementation in a discrete simulation language...|$|R
25|$|The G0 and M0 steppings improve {{idle power}} {{consumption}} in C1E state {{and add the}} C2E state in desktop processors. In mobile processors, all of which support C1 through C4 <b>idle</b> <b>states,</b> steppings E1, G0, and M0 add support for the Mobile Intel 965 Express (Santa Rosa) platform with Socket P, while the earlier B2 and L2 steppings only appear for the Socket M based Mobile Intel 945 Express (Napa refresh) platform.|$|R
40|$|Sensing in {{opportunistic}} spectrum access (OSA) has {{a responsibility}} to detect the available channel by performing binary hypothesis as busy or <b>idle</b> <b>states.</b> If channel is busy, secondary user (SU) cannot access and refrain from data transmission. SU is allowed to access when primary user (PU) does not use it (<b>idle</b> <b>states).</b> However, channel is sensed on imperfect communication link. Fading, noise and any obstacles existed can cause sensing errors in PU signal detection. False alarm detects <b>idle</b> <b>states</b> as a busy channel while miss-identification detects busy <b>states</b> as an <b>idle</b> channel. False detection makes SU refrain from transmission and reduces number of bits transmitted. On the other hand, miss-identification causes SU collide to PU transmission. This paper study the performance of OSA based on the greedy approach with sensing errors by the restriction of maximum collision probability allowed (collision threshold) by PU network. The throughput of SU and spectrum capacity metric is used to evaluate OSA performance and make comparisons to those ones without sensing error as function of number of slot based on the greedy approach. The relations between throughput and signal to noise ratio (SNR) with different collision probability as well as false detection with different SNR are presented. According to the obtained results show that CR users can gain the reward from the previous slot for both of with and without sensing errors. It is indicated by the throughput improvement as slot number increases. However, sensing on imperfect channel with sensing errors can degrade the throughput performance. Subsequently, the throughput of SU and spectrum capacity improves by increasing maximum collision probability allowed by PU network as well. Due to frequent collision with PU, the throughput of SU and spectrum capacity decreases at certain value of collision threshold. Computer simulation is used to evaluate and validate these works...|$|R
