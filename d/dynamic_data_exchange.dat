84|10000|Public
2500|$|OLE 1.0, {{released}} in 1990, was an {{evolution of the}} original <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE) concept that Microsoft developed for earlier versions of Windows. [...] While DDE was limited to transferring limited amounts of data between two running applications, OLE was capable of maintaining active links between two documents or even embedding one type of document within another.|$|E
2500|$|The Windows API is {{designed}} mostly for {{the interaction between}} the operating system and an application. For communication among different Windows applications, Microsoft has developed a series of technologies alongside the main Windows API. This started out with <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), which was superseded by Object Linking and Embedding (OLE) and later by the Component Object Model (COM), Automation Objects, ActiveX controls, and the [...]NET Framework. There is not always a clear distinction between these technologies, and there is much overlap.|$|E
50|$|Rasmol can {{communicate}} with other programs via Tcl/Tk on Unix platforms, and via <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE) on Microsoft Windows.|$|E
40|$|This paper {{presents}} a configuration software solution in Linux, {{which is used}} for the control of space environment simulator. After introducing the structure and basic principle, it is said that the developing of QT software frame and the <b>dynamic</b> <b>data</b> <b>exchanging</b> between PLC and computer. The OPC driver in Linux is also developed. This driver realizes many-to-many communication between hardware devices and SCADA software. Moreover, an algorithm named “Scan PRI” is put forward. This algorithm is much more optimizable and efficient compared with "Scan in sequence" in Windows. This software has been used in practical project. It has a good control effect and can achieve the expected goal...|$|R
40|$|Abstract:- All {{users of}} {{informatics}} applications need rapid and reliable {{access to the}} kind of information they are interested in. Web technology provides such capabilities. Thus, the evolution of medical systems and especially PACS that is the issue of this paper comes through World Wide Web. DICOM Standard committees attended these trends. They developed WADO (Web Access to DICOM Object) Service in order that system interaction inside PACS takes place through Web, in a standardized way, allowing interoperability and proper information management. The authors have recently began a project of a WADO based Web PACS development, according to the Standard specifications. In this paper a PACS Server, providing through a Web portal platform all DICOM Services to Internet users, is presented. Java technology is used to satisfy design considerations and <b>dynamic</b> <b>data</b> <b>exchanges...</b>|$|R
40|$|Abstract. Technical {{interoperability}} {{has provided}} geographic information communities with substantial improvements for constructing GIS capable of very low friction and <b>dynamic</b> <b>data</b> <b>exchanges.</b> These technical advances stand to provide substantial advantages for sharing geographic information, how-ever reaping these advantages in highly heterogeneous operational and or-ganizational environments requires the understanding and resolution of semantic di¨erences. While the OpenGIS consortium has made important progress on technical interoperability, semantic interoperability still remains an unpassed hurdle for e¨orts to share geographic information across organ-izational and institutional boundaries at the local, regional, and other levels. Identifying and resolving semantic interoperability issues is especially perti-nent for data sharing and considering future developments of standards. This paper presents {{an overview of}} semantic interoperability and through case studies shows the {{breadth and depth of}} issues and approaches in di¨erent countries and at di¨erent levels of organizations. These cases illustrate th...|$|R
5000|$|DDEML.DLL <b>Dynamic</b> <b>Data</b> <b>Exchange</b> Management Library (DDEML) {{provides}} an interface that simplifies {{the task of}} adding DDE capability to an application ...|$|E
5000|$|Inter-program communication: Starting with Windows 3.1, Object Linking and Embedding {{replaced}} <b>Dynamic</b> <b>Data</b> <b>Exchange</b> as {{the recommended}} model for inter program communication.|$|E
50|$|Current also {{supported}} Microsofts <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE). A usable file import-export capability was included. The system could do outlines, mail merge {{from its own}} addresses, and allowed the user to change colors of display elements.|$|E
40|$|Technical {{interoperability}} {{has provided}} geographic information communities with substantial improvements for constructing GIS capable of very low friction and <b>dynamic</b> <b>data</b> <b>exchanges.</b> These technical advances stand to provide substantial advantages for sharing geographic information, however reaping these advantages in highly heterogeneous operational and organizational environments requires the understanding and resolution of semantic differences. While the OpenGIS consortium has made important progress on technical interoperability, semantic interoperability still remains an unpassed hurdle for efforts to share geographic information across organizational and institutional boundaries at the local, regional, and other levels. Identifying and resolving semantic interoperability issues is especially pertinent for data sharing and considering future developments of standards. This paper presents {{an overview of}} semantic interoperability and through case studies shows the {{breadth and depth of}} issues and approaches in different countries and at different levels of organizations. These cases illustrate the importance of developing flexible approaches to practical data sharing problems that merge semantical with technical considerations. Based on our examinations of semantic issues and approaches in ongoing research projects, we propose cognitive, computer science, and socio-technical frameworks for examining semantic interoperability. ...|$|R
40|$|Reduction of {{communication}} and efficient partitioning are key issues for achieving scalability in hierarchical $N$-Body algorithms like FMM. In the present work, we propose four independent strategies to improve partitioning and reduce communication. First of all, we show that the conventional wisdom of using space-filling curve partitioning may not work well for boundary integral problems, which constitute about 50 % of FMM's application user base. We propose an alternative method which modifies orthogonal recursive bisection to solve the cell-partition misalignment that has kept it from scaling previously. Secondly, we optimize the granularity {{of communication}} to find the optimal balance between a bulk-synchronous collective communication of the local essential tree and an RDMA per task per cell. Finally, we take the <b>dynamic</b> sparse <b>data</b> <b>exchange</b> proposed by Hoefler et al. and extend it to a hierarchical sparse <b>data</b> <b>exchange,</b> which is demonstrated at scale to be faster than the MPI library's MPI_Alltoallv that is commonly used. Comment: arXiv admin note: text overlap with arXiv: 1405. 748...|$|R
40|$|Abstract. To {{ensure the}} {{efficiency}} of <b>data</b> <b>exchange</b> between simulation members via multicast groups in the simulation system based on High Level Architecture (HLA), this paper proposes a novel method of <b>dynamic</b> <b>data</b> distribution based on publication and subscription tree(PS-Tree). The main contributions of this paper includes: (1) Proposing the structure of PS-Tree which can manifest the relationship of <b>data</b> <b>exchange</b> between simulation members. (2) Describing the method of <b>dynamic</b> <b>data</b> distribution based on PS-Tree by mining association rule and (3) Analyzing the performance. Experiment shows that this <b>dynamic</b> <b>data</b> distribution method can implement data distribution efficiently and effectively...|$|R
5000|$|Microsoft's ActiveX, Component Object Model (COM), Microsoft Transaction Server (COM+), Distributed Component Object Model (DCOM), <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), Object Linking and Embedding (OLE), {{anonymous}} pipes, named pipes, Local Procedure Call, MailSlots, Message loop, MSRPC, [...]NET Remoting, and Windows Communication Foundation (WCF) ...|$|E
50|$|OSLO {{works with}} other {{software}} products using a DDE (<b>Dynamic</b> <b>Data</b> <b>Exchange)</b> Client/Server interface. This enables {{the program to}} work with products such as MATLAB to create a multi-disciplinary environment, such an environment was used to design and analyze the Thirty Meter Telescope (TMT).|$|E
50|$|TracePro {{works with}} other {{software}} products using a <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE) client/server interface. This enables {{the program to}} work with products such as MATLAB to create a multi-disciplinary environment. TracePro also uses the Scheme language as a macro language to extend the program's capabilities and provide automated analysis, optimization, and tolerancing capabilities.|$|E
40|$|AbstractModern {{multi-core}} design {{will continue}} Moore's law and facilitate platforms for both wired and wireless communications. It is also predicted that multi-core, {{as a popular}} computing platform, will {{need to have the}} capability to process “big data” with both high speed and high quality. However, slow <b>dynamic</b> interactions and <b>data</b> <b>exchange</b> are the two key challenges in the multi-core design. This paper discusses two new strategies that can potentially solve these two issues. First, we discuss a new “Communication-time Cost Minimization” (CCM) approach to reduce the communications between different cores. Then we discuss how to manage tasks and their associated data to achieve “Request Cancellation”to common structures such as memory or stack. We have demonstrated an average reduction of 50 % in the communication- time cost, an average of 23. 1 % of throughput improvement, and a linear increase of request executions for the shared memory stack...|$|R
40|$|The Dynamic Aerospace Vehicle Exchange Markup Language (DAVE-ML) is a syntactical {{language}} for exchanging flight vehicle <b>dynamic</b> model <b>data.</b> It {{provides a framework}} for encoding entire flight vehicle <b>dynamic</b> model <b>data</b> packages for <b>exchange</b> and/or long-term archiving. Version 2. 0. 1 of DAVE-ML provides much of the functionality envisioned for exchanging aerospace vehicle data; however, it is limited in only supporting scalar time-independent data. Additional functionality is required to support vector and matrix data, abstracting sub-system models, detailing dynamics system models (both discrete and continuous), and defining a <b>dynamic</b> <b>data</b> format (such as time sequenced data) for validation of dynamics system models and vehicle simulation packages. Extensions to DAVE-ML have been proposed to manage data as vectors and n-dimensional matrices, and record <b>dynamic</b> <b>data</b> in a compatible form. These capabilities will improve the clarity of <b>data</b> being <b>exchanged,</b> simplify the naming of parameters, and permit static and <b>dynamic</b> <b>data</b> to be stored using a common syntax within a single file; thereby enhancing the framework provided by DAVE-ML for exchanging entire flight vehicle dynamic simulation models...|$|R
40|$|This paper {{presents}} a proposed scheme of City Family Health Information System (CFHIS). According to investigation, {{we have found}} out lots of drawbacks in the existing Electronic Healthcare Records. Here puts forward a scheme of CFHIS to give {{a solution to the}} problems like information isolation, dead data and fluent population management with technologies as follows: system hierarchical model, SOA-based Web Service platform, heterogeneous <b>data</b> integration, <b>data</b> <b>exchange</b> platform, multi-level <b>data</b> center, <b>data</b> warehouse, <b>dynamic</b> <b>data</b> updating, knowledge service model, portal service, etc...|$|R
50|$|A {{script writer}} {{can ask the}} COM object for a method or {{property}} it already knows about from documentation. Then, the client can execute the function with Invoke provided by the IDispatch interface, a form of late-binding. This sort of capability was also supported by <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), which never became popular due to being too low-level.|$|E
50|$|OLE 1.0, {{released}} in 1990, was an {{evolution of the}} original <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE) concept that Microsoft developed for earlier versions of Windows. While DDE was limited to transferring limited amounts of data between two running applications, OLE was capable of maintaining active links between two documents or even embedding one type of document within another.|$|E
50|$|TeXnicCenter {{has been}} {{designed}} to work with the MiKTeX distribution. After installation, TeXnicCenter recognizes MiKTeX and sets up the paths to command-line compilers bundled with MiKTeX automatically. Similarly, Adobe Acrobat Reader/Professional or Foxit Reader, when available, is configured as a viewer for the generated PDF documents. TeXnicCenter can tell Acrobat to close an opened PDF file before recompiling it with LaTeX using <b>Dynamic</b> <b>Data</b> <b>Exchange</b> calls.|$|E
40|$|In many {{wireless}} {{sensor network}} application scenarios the key management scheme with a Mobile Sink (MS) should be fully investigated. This paper proposes a key management scheme based on dynamic clustering and optimal-routing choice of MS. The concept of Traveling Salesman Problem with Neighbor areas (TSPN) in <b>dynamic</b> clustering for <b>data</b> <b>exchange</b> is proposed, and the selection probability is used in MS route planning. The proposed scheme extends static key management to dynamic key management by considering the dynamic clustering and mobility of MSs, which can effectively balance the total energy consumption during the activities. Considering the different resources available to the member nodes and sink node, the session key between cluster head and MS is established by modified an ECC encryption with Diffie-Hellman key exchange (ECDH) algorithm and the session key between member node and cluster head is built with a binary symmetric polynomial. By analyzing the security of data storage, data transfer and the mechanism of dynamic key management, the proposed scheme has more advantages to help improve the resilience of the key management system of the network on the premise of satisfying higher connectivity and storage efficiency...|$|R
40|$|This paper {{covers the}} {{following}} topics in viewgraph format: purpose of <b>data</b> <b>exchange</b> standards; <b>data</b> <b>exchange</b> in engineering analysis/CFD; geometry <b>data</b> <b>exchange</b> through existing product <b>data</b> <b>exchange</b> standards, NASA <b>Data</b> <b>Exchange</b> Committee, and NASA-IGES (Initial Graphics Exchange Specification); CFD grid and solution data exchange; and <b>data</b> <b>exchange</b> for multi-disciplinary engineering...|$|R
40|$|Recent studies {{demonstrate}} that the routing protocol performances in vehicular networks can improve using dynamic information on the traffic conditions. WSNs (Wireless Sensor Networks) and VANETs (Vehicular Ad Hoc Networks) are exactly related with this statement and represent the trend of wireless networks research program in the last years. In this context, {{a new type of}} network has been developed: in fact, HSVN (Hybrid Sensor and Vehicular Network) let WSNs and VANETs cooperate through <b>dynamic</b> information <b>data</b> <b>exchanges</b> with the aim to improve road safety, and especially to warn the driver and the co-pilot of any event occurred in the road ahead, such as traffic jam, accidents or bad weather. The results will be immediate: less accidents means more saved lives, less traffic means a pollution decrease, and from the technological point of view, this communication protocol will open the door to attractive services, such as downloading of multimedia services or internet browsing, that means easier, safer and more comfortable trips. It is out of doubt that speaking about cars and road technology developments, the market and the interests about this field increase exponentially. Recent projects such as CVIS [1] and COMeSafety [2], focused on improving the road driving, and are the concrete demonstration that this entire context can get soon very close to reality. Owing to their peculiar characteristics, VANETs require the definition of specific networking techniques, whose feasibility and performance are usually tested by means of simulation. Starting from this point, this project will present a HSVN platform, and will also introduce and evaluate a communication protocol between VANETs and WSNs using the NCTUns 6. 0 [3] simulator. We will particularly analyze the performances of 2 types of Scenarios developed during our project. Both of them are in an urban context, but we will extract different useful results analyzing the packet losses, the throughput and the end-to-end packet delay...|$|R
50|$|In computing, <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE) is {{a method}} of interprocess {{communication}} under Microsoft Windows or OS/2. It allows one program to subscribe to items made available by another program, for example a cell in a Microsoft Excel spreadsheet, and be notified whenever that item changes. DDE was partially superseded by Object Linking and Embedding (OLE), but remains used for simple interprocess communication tasks.|$|E
5000|$|<b>Dynamic</b> <b>Data</b> <b>Exchange</b> {{was first}} {{introduced}} in 1987 {{with the release of}} Windows 2.0 as a method of interprocess communication so that one program could communicate with or control another program, somewhat like Sun's RPC (Remote Procedure Call). [...] It used the [...] "Windows Messaging Layer" [...] functionality within Windows. DDE continues to work even in modern versions of Windows, but has been superseded by newer technologies. Windows for Workgroups introduced a remoting version called NetDDE.|$|E
50|$|The {{operating}} system {{was designed for}} multiprocessor systems; it supports preemptive multitasking and can make use of threads to run multiple processes in parallel. Using symmetric multiprocessing, the processing usage is evenly distributed among all available processors. The inter-process communication in Windows NT 3.1 is designed around networks; two newly introduced functions, Remote Procedure Call (RPC) and Network DDE, an extension of <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), facilitate the access and data exchange between processes running on different computers inside a network.|$|E
40|$|<b>Exchanging</b> <b>data</b> between {{government}} organizations can be painful. This annotated bibliography of 15 authoritative sources investigates the best practices of E-Government <b>data</b> <b>exchanges</b> by evaluating (a) Challenges of <b>Data</b> <b>Exchange</b> in E-Government, (b) Common Data Formats in <b>Data</b> <b>Exchanges,</b> (c) Designing Centralized Systems for <b>Data</b> <b>Exchanges</b> and (d) The Use of Service Oriented Architecture for E-Government. Government IT leaders {{will benefit from}} the discussion of technical and organizational challenges faced with creating governmental <b>data</b> <b>exchanges...</b>|$|R
40|$|In this paper, {{we propose}} {{a method of}} {{customizable}} <b>data</b> <b>exchange</b> based on the service-oriented application environment. We highlight the <b>data</b> <b>exchange</b> model of this method, analyze the components and specific functions of the <b>exchange</b> platform and <b>data</b> <b>exchange</b> node in the model, and finally expound the operation principle and specific implementation of customizable <b>data</b> <b>exchange.</b> We demonstrate this is {{an efficient way to}} overcome the shortcomings of the original, single and fixed <b>data</b> <b>exchange</b> mode...|$|R
40|$|Described {{here are}} the <b>data</b> <b>exchange</b> efforts and plans {{supported}} by the NASA Steering Committee for Surface Modeling and Grid Generation. Current methods for geometry <b>data</b> <b>exchange</b> between computer aided design (CAD) systems and NASA computational fluid dynamics (CFD) analysis systems are tedious and induce errors. A Geometry <b>Data</b> <b>Exchange</b> Standard is proposed, utilizing a subset of an existing national standard titled Initial Graphic Exchange Standard (IGES). Future plans for <b>data</b> <b>exchange</b> standardization include all aspects of CFD data. Software systems to utilize this NASA-IGES Geometry <b>Data</b> <b>Exchange</b> Specification are under development...|$|R
5000|$|The Windows API is {{designed}} mostly for {{the interaction between}} the operating system and an application. For communication among different Windows applications, Microsoft has developed a series of technologies alongside the main Windows API. This started out with <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), which was superseded by Object Linking and Embedding (OLE) and later by the Component Object Model (COM), Automation Objects, ActiveX controls, and the [...]NET Framework. There is not always a clear distinction between these technologies, and there is much overlap.|$|E
50|$|The Windows shell invokes file {{association}} actions through COM, {{drag and}} drop, command line calls or through <b>Dynamic</b> <b>Data</b> <b>Exchange.</b> Advanced features of Microsoft Windows file associations included manually defining a new file extension with {{any number of}} associated actions, a primary default action, showing extensions only for specific file types, customizing the file type icon and description and customizing associated MIME type and their handling (how to handle file types for files downloaded or directly opened from within the Internet Explorer browser). The ability to configure advanced file association functionality, however, was removed in Windows Vista and later operating systems.|$|E
50|$|Shared Variables {{were one}} {{technique}} used by APL implementors and vendors {{to increase the}} richness of the APL language, doing so without changing the core implementation. With the advent of more powerful personal computing, the exodus of the APL user community to smaller computers was inevitable. APL was first available on Intel 8008, 8080, and Zilog Z80 based hardware, later the original IBM PC, and today on the 32- and 64-bit Linux and Windows workstations. Although Dyalog APL included an implementation of shared variables for communication with the now-deprecated Microsoft Windows <b>Dynamic</b> <b>Data</b> <b>Exchange</b> (DDE), {{it is interesting to note}} that only IBM continued to use Shared Variables as a means to supply new features to their versions of the APL2 language for non-mainframe computers.|$|E
40|$|While {{sophisticated}} {{research infrastructures}} assist scientists in managing massive volumes of data, the so-called long tail of research data frequently {{suffers from a}} lack of such services. This is mostly due to the complexity caused by the variety of data to be managed and a lack of easily standardiseable procedures in highly diverse research settings. Yet, as even domains in this long tail of research data are increasingly data-driven, scientists need efficient means to precisely communicate, which version and subset of data was used in a particular study to enable reproducibility and comparability of result and foster data re-use. This paper presents three implementations of systems supporting such data identification services for comma separated value (CSV) files, a dominant format for <b>data</b> <b>exchange</b> in these settings. The implementations are based on the recommendations of the Working Group on <b>Dynamic</b> <b>Data</b> Citation of the Research Data Alliance (RDA). They provide implicit change tracking of all data modifications, while precise subsets are identified via the respective subsetting process. These enhances reproducibility of experiments and allows efficient sharing of specific subsets of data even in highly <b>dynamic</b> <b>data</b> settings...|$|R
40|$|Abstract: <b>Data</b> <b>exchange</b> {{is one of}} the key {{problems}} of information integration. The most important process in <b>data</b> <b>exchange</b> problem is how to solute it based on circulatory dependence. In this paper, we proposed an improved chase approach in the special background of application for the <b>data</b> <b>exchange.</b> Solving the problem that finding the most approximately solution in polynomial time for <b>data</b> <b>exchange</b> problem by amending the dependence condition appropriately...|$|R
5000|$|<b>Data</b> <b>Exchange</b> Standards—Health Level Seven Version 2.5 -- An {{application}} protocol for electronic <b>data</b> <b>exchange</b> in healthcare environments Health Level 7 ...|$|R
