118|0|Public
25|$|A graph is k-vertex-connected if {{the removal}} of any (k1) {{vertices}} leaves a connected subgraph, and <b>k-edge-connected</b> if {{the removal of}} any (k1) edges leaves a connected subgraph.|$|E
2500|$|A k-vertex-connected graph or <b>k-edge-connected</b> graph is a graph {{in which}} no set of [...] {{vertices}} (respectively, edges) exists that, when removed, disconnects the graph. A k-vertex-connected graph is often called simply a k-connected graph.|$|E
5000|$|A related problem: {{finding the}} minimum <b>k-edge-connected</b> {{spanning}} subgraph of G (that is: select {{as few as}} possible edges in G that your selection is <b>k-edge-connected)</b> is NP-hard for [...]|$|E
50|$|Another generalizations of the Steiner tree problem are the <b>k-edge-{{connected}}</b> Steiner network {{problem and}} the k-vertex-connected Steiner network problem, where {{the goal is to}} find a <b>k-edge-connected</b> graph or a k-vertex-connected graph rather than any connected graph.|$|E
50|$|Edge {{connectivity}} and the enumeration of <b>k-edge-connected</b> graphs was {{studied by}} Camille Jordan in 1869.|$|E
50|$|The edge-connectivity of a graph is {{the largest}} k for which the graph is <b>k-edge-connected.</b>|$|E
50|$|In graph theory, a {{connected}} graph is <b>k-edge-connected</b> if it remains connected whenever fewer than k edges are removed.|$|E
50|$|There is a polynomial-time {{algorithm}} {{to determine}} the largest k for which a graph G is <b>k-edge-connected.</b> A simple algorithm would, for every pair (u,v), determine the maximum flow from u to v with the capacity of all edges in G set to 1 for both directions. A graph is <b>k-edge-connected</b> {{if and only if}} the maximum flow from u to v is at least k for any pair (u,v), so k is the least u-v-flow among all (u,v).|$|E
5000|$|Vertex-disjoint paths: {{are there}} k paths between two {{vertices}}, sharing vertices {{only at the}} endpoints? (a generalization of USTCON, equivalent to asking whether a graph is <b>k-edge-connected)</b> ...|$|E
50|$|A graph is k-vertex-connected if {{the removal}} of any (k &minus; 1) {{vertices}} leaves a connected subgraph, and <b>k-edge-connected</b> if {{the removal of}} any (k &minus; 1) edges leaves a connected subgraph.|$|E
5000|$|A k-vertex-connected graph or <b>k-edge-connected</b> graph is a graph {{in which}} no set of [...] {{vertices}} (respectively, edges) exists that, when removed, disconnects the graph. A k-vertex-connected graph is often called simply a k-connected graph.|$|E
5000|$|Let [...] be an {{arbitrary}} graph.If subgraph [...] is connected for all [...] where , then G is k-edge-connected.The edge connectivity of [...] is the maximum value k such that G is <b>k-edge-connected.</b> The smallest set X whose removal disconnects G is a minimum cut in G.|$|E
5000|$|Minimum vertex degree gives {{a trivial}} {{upper bound on}} edge-connectivity. That is, if a graph [...] is <b>k-edge-connected</b> then it is {{necessary}} that k ≤ δ(G), where δ(G) is the minimum degree of any vertex v ∈ V. Obviously, deleting all edges incident to a vertex, v, would then disconnect v from the graph.|$|E
50|$|This {{problem is}} {{particularly}} difficult in <b>k-edge-connected</b> graphs for large k, where each edge falls {{in many different}} cycles. The decision version of the problem, which is NP-complete, asks whether all cycles can be broken by removing at most k edges; {{this was one of}} Richard M. Karp's 21 NP-complete problems, shown by reducing from the vertex cover problem.|$|E
50|$|The edge {{connectivity}} {{version of}} Menger's theorem provides an alternative and equivalent characterization, {{in terms of}} edge-disjoint paths in the graph. If every two vertices of G form the endpoints of k paths, no two of which share an edge with each other, then G is <b>k-edge-connected.</b> In one direction this is easy: if a system of paths like this exists, then every set X of fewer than k edges is disjoint from {{at least one of}} the paths, and the pair of vertices remains connected to each other even after X is deleted. In the other direction, the existence of a system of paths for each pair of vertices in a graph that cannot be disconnected by the removal of few edges can be proven using the max-flow min-cut theorem from the theory of network flows.|$|E
5000|$|Hilton {{writes that}} [...] "Themes running through his papers are Hamiltonian cycles, Eulerian graphs, {{spanning}} trees, the marriage problem, detachments, reconstruction, and infinite graphs."In his first papers Nash-Williams considered the knight's tour and random walk problems on infinite graphs; the latter paper included an important recurrence criterion for general Markov chains, {{and was also}} the first to apply electrical network techniques of Rayleigh to random walks. His dissertation, which he finished in 1958, concerned generalizations of Euler tours to infinite graphs. Welsh writes that his subsequent work defining and characterizing the arboricity of graphs (discovered in parallel and independently by W. T. Tutte) has [...] "had a huge impact," [...] in part because of its implications in matroid theory. Nash-Williams also studied <b>k-edge-connected</b> graphs, Hamiltonian cycles in dense graphs, versions of the reconstruction conjecture for infinite graphs, and the theory of quasi-orders. He also gave a short elegant proof of Kruskal's tree theorem.|$|E
40|$|A (k;g) -cage is a k-regular graph with girth g {{and with}} the least {{possible}} number of vertices. In this paper, we prove that (k;g) -cages are <b>k-edge-connected</b> if g is even. Earlier, Wang, Xu, and Wang proved that (k;g) -cages are <b>k-edge-connected</b> if 9 is odd. Combining our results, we conclude that the (k;g) -cages are <b>k-edge-connected.</b> (C) 2005 Wiley Periodicals, Inc...|$|E
40|$|Halin [1] {{showed that}} every edge-minimal, k-vertex-connected graph has a vertex of degree k. In this note, we prove the {{analogue}} to Halin's theorem for edge-minimal, <b>k-edge-connected</b> graphs: Theorem 1. Let G be an edge-minimal, <b>k-edge-connected</b> graph. Then {{there are two}} nodes of degree k in G. To prove Theorem 1, we rst establish a link between edge-minimal, <b>k-edge-connected</b> graphs and exactly <b>k-edge-connected</b> graph [2] (De nition 7 and Proposition 9). The theorem is proved {{in the case of}} G being an exactly <b>k-edge-connected</b> graph (Proposition 16) and then transfered to edge-minimal graphs. Throughout, all graphs considered are multigraphs and all sets are multisets. The edge-connectivity equivalence relation. Proposition 2. The edge version of Menger's theorem holds for multigraphs. Proof. Any multi-edge in the graph G can be replaced by a length 2 path to get a graph G ′. There is then an obvious bijection between the paths in the original multigraph G and the resulting graph G ′. The result of the Menger theorem on G ′ can be immediatly applied t...|$|E
40|$|We {{show that}} if a graph is <b>k-edge-connected,</b> and we adjoin to it another graph {{satisfying}} a "contracted diameter less or equal to 2 " condition, with minimal degree greater or equal to k, and some natural hypothesis on the edges connecting one graph to the other, the resulting graph is also <b>k-edge-connected...</b>|$|E
40|$|AbstractNash-Williams and Tutte {{independently}} characterized when a graph has k edge-disjoint spanning trees; {{a consequence}} is that 2 <b>k-edge-connected</b> graphs have k edge-disjoint spanning trees. Kriesell conjectured {{a more general}} statement: defining a set S⊆V(G) to be j-edge-connected in G if S lies in a single component of any graph obtained by deleting fewer than j edges from G, he conjectured that if S is 2 <b>k-edge-connected</b> in G, then G has k edge-disjoint trees containing S. Lap Chi Lau proved that the conclusion holds whenever S is 24 <b>k-edge-connected</b> in G. We improve Lauʼs result by showing that it suffices for S to be 6. 5 <b>k-edge-connected</b> in G. This and an analogous result for packing stronger objects called “S-connectors” follow from a common generalization of the Tree Packing Theorem and Hakimiʼs criterion for orientations with specified outdegrees. We prove the general theorem using submodular functions and the Matroid Union Theorem...|$|E
40|$|Consider {{the minimum}} <b>k-edge-connected</b> {{spanning}} subgraph problem: given a positive integer k and a <b>k-edge-connected</b> graph G, find a <b>k-edge-connected</b> spanning subgraph of G with {{minimum number of}} edges. This problem {{is known to be}} NP-complete. Khuller and Raghavachari presented the first algorithm with a performance ratio smaller than 2 for all k. They proved an upper bound of 1. 85 for the performance ratio of their algorithm. We improve their analysis, proving that the performance ratio of their algorithm is smaller than 1. 7 for large enough k, and that it is at most 1. 75 for all k. Our analysis improves the best known ratios for any fixed k 4, in particular, for k = 4 from 1. 75 to 1. 65, and for k = 5 from 1. 733 [...] . to 1. 68. Last, we show that the minimum <b>k-edge-connected</b> spanning subgraph problem is MAX SNPhard, even for k = 2. 1 Introduction The study of connectivity in graph theory has important applications in the areas of network reliability and network design. In this pap [...] ...|$|E
40|$|Capturing sets of {{closely related}} {{vertices}} from large networks {{is an essential}} task in many applications such as social net-work analysis, bioinformatics, and web link research. De-composing a graph into k-core components is a standard and efficient method for this task, but obtained clusters might not be well-connected. The idea of using maximal <b>k-edge-connected</b> subgraphs was recently proposed to address this issue. Although we can obtain better clusters with this idea, the state-of-the-art method is not efficient enough to process large networks with millions of vertices. In this paper, we propose a new method to decompose a graph into maximal <b>k-edge-connected</b> components, based on random contraction of edges. Our method is simple to implement but improves performance drastically. We ex-perimentally show that our method can successfully decom-pose large networks and it is thousands {{times faster than the}} previous method. Also, we theoretically explain why our method is efficient in practice. To see the importance of maximal <b>k-edge-connected</b> subgraphs, we also conduct experiments using real-world networks to show that many k-core components have small edge-connectivity and they can be decomposed into a lot of maximal <b>k-edge-connected</b> subgraphs...|$|E
40|$|In this paper, {{we study}} {{how to find}} maximal <b>k-edge-connected</b> subgraphs from a large graph. <b>k-edge-connected</b> subgraphs {{can be used to}} capture closely related vertices, and finding such vertex {{clusters}} is interesting in many applications, e. g., social network analysis, bioinformatics, web link research. Compared with other explicit structures for modeling vertex clusters, such as quasi-clique, k-core, which only set the requirement on vertex degrees, <b>k-edge-connected</b> subgraph further requires high connectivity within a subgraph (a stronger requirement), and hence defines a more closely related vertex cluster. To find maximal <b>k-edge-connected</b> subgraphs from a graph, a basic approach is to repeatedly apply minimum cut algorithm to the connected components of the input graph until all connected components are k-connected. However, the basic approach is very expensive if the input graph is large. To tackle the problem, we propose three major techniques: vertex reduction, edge reduction and cut pruning. These speed-up techniques are applied on top of the basic approach. We conduct extensive experiments and show that the speed-up techniques are very effective. Rui Zhou, Chengfei Liu, Jeffrey Xu Yu, Weifa Liang, Baichen Chen, Jianxin L...|$|E
40|$|Nash-Williams and Tutte {{independently}} characterized when a graph has k edgedisjoint spanning trees; {{a consequence}} is that 2 <b>k-edge-connected</b> graphs have k edgedisjoint spanning trees. Kriesell conjectured {{a more general}} statement: defining a set S ⊆ V (G) to be j-edge-connected in G if S lies in a single component of any graph obtained by deleting fewer than j edges from G, he conjectured that if S is 2 k-edgeconnected in G, then G has k edge-disjoint trees containing S. Lap Chi Lau proved that the conclusion holds whenever S is 24 <b>k-edge-connected</b> in G. We improve Lau’s result by showing that it suffices for S to be 6. 5 <b>k-edge-connected</b> in G. This and an analogous result for packing stronger objects called “S-connectors” follow from a common generalization of the Tree Packing Theorem and Hakimi’s criterion for orientations with specified outdegrees. We prove the general theorem using submodular functions and the Matroid Union Theorem...|$|E
40|$|Abstract: Let G be a graph. For each vertex v 2 V (G), Nv {{denotes the}} {{subgraph}} induces by the vertices adjacent to v in G. The graph G is locally <b>k-edge-connected</b> if for each vertex v 2 V (G), Nv is <b>k-edge-connected.</b> In this paper we study {{the existence of}} nowhere-zero 3 -flows in locally k-edgeconnected graphs. In particular, we show that every 2 -edge-connected, locally 3 -edge-connected graph admits a nowhere-zero 3 -flow. This result is best possible {{in the sense that}} there exists an infinite family of 2 -edgeconnected, locally 2 -edge-connected graphs each of which does not have...|$|E
40|$|Consider {{the minimum}} size <b>k-edge-connected</b> {{spanning}} subgraph problem: given a positive integer k and a <b>k-edge-connected</b> graph G, nd a <b>k-edge-connected</b> spanning subgraph of G with the {{minimum number of}} edges. This problem {{is known to be}} NP-complete. Khuller and Raghavachari presented the rst algorithm which, for all k, achieves a performance ratio smaller than a constant which is less than two. They proved an upper bound of 1. 85 for the performance ratio of their algorithm. Currently, the best known performance ratio for the problem is 1 + 2 =(k+ 1), achieved by a slower algorithm of Cheriyan and Thurimella. In this paper, we improve Khuller and Raghavachari's analysis, proving that the performance ratio of their algorithm is smaller than 1. 7 for large enough k, and that it is at most 1. 75 for all k. Second, we show that the minimum size 2 -edge-connected spanning subgraph problem is MAX SNP-hard. A preliminary version of this paper appeared in the Proceedings of the 8 th Annual ACM [...] ...|$|E
40|$|AbstractWe prove (i) if G is a 2 <b>k-edge-connected</b> graph (k≥ 2), s, t are vertices, and f 1, f 2, g are edges with fi ≠ g (i= 1, 2), {{then there}} exists a cycle C passing through f 1 and f 2 (a path P between s and t passing through f 1) but not passing through g such that G-E(C) (G-E(P)) is (2 k− 2) -edge-connected, where C and P are not {{necessarily}} simple and E(C) is the set of edges of C. (ii) Every 3 <b>K-edge-connected</b> graph (k≥ 1) is weakly (2 k+ 1) -linked and every (3 k− 1) -edge-connected graph (k≥ 2) is weakly 2 k-linked...|$|E
40|$|A k-tree {{is either}} a {{complete}} graph on (k+ 1) vertices or given a k-tree G' with n vertices, a k-tree G with (n+ 1) vertices can be constructed by introducing a new vertex v and picking a k-clique Q in G' and then joining each vertex u in Q. A graph G is <b>k-edge-connected</b> if the graph remains connected even after deleting fewer edges than k from the graph. A <b>k-edge-connected</b> graph G {{is said to be}} minimally k-connected if G e is no longer <b>k-edge-connected</b> for any edge e belongs to E(G) where E(G) denotes the set of edges of G. In this paper we find two separate O (n 2) algorithms so that a minimally 2 -connected graph can be obtained from a 2 -tree and a minimally k-connected graph can be obtained from a k-tree. In a k-tree (k ≥ 2) we find the edges which are insensitive to the k-connectivity have both their end vertices of degrees {{greater than or equal to}} k+ 1. This property is fully exploited to find an algorithm which reduces any k-tree to a minimally k-connected graph...|$|E
40|$|AbstractGiven two nonnegative {{integers}} s and t, a graph G is (s,t) -supereulerian if for any disjoint sets X,Y⊂E(G) with |X|≤s and |Y|≤t, {{there is}} a spanning eulerian subgraph H of G that contains X and avoids Y. We prove that if G is connected and locally <b>k-edge-connected,</b> then G is (s,t) -supereulerian, for any pair of nonnegative integers s and t with s+t≤k− 1. We further show that if s+t≤k and G is a connected, locally <b>k-edge-connected</b> graph, then for any disjoint sets X,Y⊂E(G) with |X|≤s and |Y≤t, {{there is a}} spanning eulerian subgraph H that contains X and avoids Y, {{if and only if}} G−Y is not contractible to K 2 or to K 2,l with l odd...|$|E
40|$|Splitting off two edges su, sv in a graph G means {{deleting}} su, sv {{and adding}} a new edge uv. Let G = (V + s, E) be <b>k-edge-connected</b> in V (k 2) and let d(s) be even. Lovasz proved that the edges incident to s can be split off in pairs in a {{such a way that}} the resulting graph on vertex set V is <b>k-edge-connected.</b> In this paper we investigate the existence of such complete splitting sequences when the set of split edges has to meet additional requirements. We prove structural properties of the set of those pairs u, v of neighbours of s for which splitting off su, sv destroys k-edge- connectivity. This leads to a new method for solving problems of this type. By applyin...|$|E
40|$|A graph G {{is called}} (2 k, k) -connected if G is 2 <b>k-edge-connected</b> and G-v is <b>k-edge-connected</b> for every vertex v. The study of (2 k, k) -connected graphs is {{motivated}} by a conjecture of Frank which states that a graph has a 2 -vertex-connected orientation {{if and only if}} it is (4, 2) -connected. In this paper, we provide a construction of the family of (2 k, k) -connected graphs for k even which generalizes the construction given by Jordán for k = 2. We also solve the corresponding connectivity augmentation problem: given a graph G and an integer k ≥ 2, what is the minimum number of edges to be added to make G (2 k, k) -connected. Both these results are based on a new splitting-off theorem for (2 k, k) -connected graphs. Comment: 13 page...|$|E
40|$|A graph is {{connected}} {{if there is}} a path between any two of its vertices and k-connected if there are at least k disjoint paths between any two vertices. A graph is <b>k-edge-connected</b> if none of the k paths share any edges and k-vertex-connected (or k-connected) if they do not share any intermediate vertices. We examine some problems related to k-connectivity and an application. We have looked at the <b>k-edge-connected</b> spanning subgraph problem: given a <b>k-edge-connected</b> graph, find the smallest subgraph that includes all vertices and is still <b>k-edge-connected.</b> We improved two algorithms for approximating solutions to this problem. The first algorithm transforms the problem into an integer linear program, relaxes it into a real-valued linear program and solves it, then obtains an approximate solution to the original problem by rounding non-integer values. We have improved the approximation ratio by giving a better scheme for rounding the edges and bounding the number of fractional edges. The second algorithm finds a subgraph where every vertex has a minimum degree, then augments the subgraph by adding edges until it is k-edgeconnected. We improve this algorithm by bounding the number of edges that could be added in the augmentation step. We have also applied the idea of k-connectivity to protein-protein interaction (PPI) networks, biological graphs where vertices represent proteins and edges represent experimentally determined physical interactions. Because few PPI networks are even 1 -connected, we have looked for highly connected subgraphs of these graphs. We developed algorithms to find the most highly connected subgraphs of a graph. We applied our algorithms to a large network of yeast protein interactions and found that the most highly connected subgraph was a 16 -connected subgraph of membrane proteins that had never before been identified as a module and is of interest to biologists. We also looked at graphs of proteins known to be co-complexed and found that a significant number contained 3 - connected subgraphs, one of the features that most differentiated complexes from random graphs...|$|E
40|$|A simple undirected {{connected}} graph with minimum degree K {{is said to}} be K-restrained. Thus the class of K-restrained graphs includes all K-connected and <b>K-edge-connected</b> graphs, as well as all connected K-regular graphs. An upper bound on the diameter of three of these four classes of graphs is known: for K-restrained (hence for connected K-regular) and for K-connected. We complete the picture by determining an upper bound on the diameter of a <b>K-edge-connected</b> graph of order n; and show that, with the exception of certain connected K-regular graphs, the upper bound is attained by some graph in every class. For K-restrained graphs of order n known to contain a vertex of eccentricity d, a maximum edge-count ϵ(n, d, K) is specified and shown to be a monotone decreasingfunction of d; this result is then used to determine the maximum diameter of a K-restrained graph of order n and size m...|$|E
40|$|AbstractThis paper {{describes}} efficient algorithms for partitioning a <b>k-edge-connected</b> graph into k edge-disjoint connected subgraphs, each {{of which}} has a specified number of elements (vertices and edges). If each subgraph contains the specified element (called base), we call this problem the mixed k-partition problem with bases (called k-PART-WB), otherwise we call it the mixed k-partition problem without bases (called k-PART-WOB). In this paper, we show that k-PART-WB always has a solution for every <b>k-edge-connected</b> graph and we consider the problem without bases and we obtain the following results: (1) for any k⩾ 2, k-PART-WOB can be solved in O(¦V¦ √¦V¦ log 2 ¦V¦ + ¦E¦) time for every 4 -edge-connected graph G = (V,E), (2) 3 -PART-WOB can be solved in O(¦V¦ 2) for every 2 -edge-connected graph G = (V,E) and (3) 4 -PART-WOB can be solved in O(¦E¦ 2) for every 3 -edge-connected graph G = (V,E) ...|$|E
40|$|AbstractMader {{proved that}} for every <b>k-edge-connected</b> graph G (k ≥ 4), there exists a path joining two given {{vertices}} such that the subgraph obtained from G by deleting {{the edges of the}} path is (k - 2) -edge-connected. A generalization of this and a sufficient condition for existance of 3, 4, or 5 terminus k edge-disjoint paths in graphs are given...|$|E
40|$|AbstractLet n and k be {{positive}} integers satisfying k+ 1 ⩽n⩽ 3 k − 1, and G a simple graph of order n and size e(G) with at most k edge-disjoint paths connecting any two adjacent vertices. In this paper we prove that e(G) ⩽⌊(n+k) 2 / 8 ⌋, and give complete characterizations of the extremal graphs and the extremal minimally <b>k-edge-connected</b> graphs...|$|E
