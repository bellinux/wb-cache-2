9|31|Public
5000|$|Nim (formerly named Nimrod) is an imperative, multi-paradigm, {{compiled}} {{programming language}} designed and developed by Andreas Rumpf. It {{is designed to}} be [...] "efficient, expressive, and elegant", supporting metaprogramming, <b>functional,</b> <b>message</b> passing, procedural, and object-oriented programming styles by providing several features such as compile time code generation, algebraic data types, a foreign function interface (FFI) with C and compiling to JavaScript, C and C++.|$|E
3000|$|Because any <b>{{functional}}</b> <b>message</b> can {{be written}} in more bits than the minimum necessary, a functional bit of information can be chemically encoded in multiples of k [...]...|$|E
40|$|Although Zymomonas mobilis is prototrophic, glycolytic and fermentative enzymes (ethanologenic enzymes) {{constitute}} {{over half}} of the cytoplasmic protein. In this study, transcript stability, <b>functional</b> <b>message</b> pools, and the abundance of cytoplasmic products were compared for genes encoding eight of these essential enzymes. The transcripts of all were very stable, with half-lives ranging from 8 to 18 min. This transcript stability is proposed as an important feature in Z. mobilis that may distinguish highly expressed genes for energy generation from biosynthetic genes, which are required at much lower levels. The evolution of multiple promoters to enhance transcription from single-copy genes, of structural features that alter translational efficiency, and of differences in protein turnover is hypothesized to serve a subordinate role in the regulation of Z. mobilis gene expression. Among the eight ethanologenic genes examined, differences in transcript stability were found to directly correlate with differences in <b>functional</b> <b>message</b> pools and cytoplasmic protein levels. These differences in transcript stability are hypothesized to have evolved as a primary mechanism to balance the levels of individual enzymes within the glycolytic and fermentative pathways...|$|E
5000|$|Simplification of the {{architecture}} of large enterprise systems through standardization of <b>functional</b> components and <b>message</b> pathways ...|$|R
50|$|This feature allows text {{messaging}} {{to a phone}} number (text <b>messaging</b> is less <b>functional</b> than instant <b>messaging).</b>|$|R
40|$|The report gives a {{defining}} {{description of the}} programming language Scheme. Scheme is a statically scoped and properly tail-recursive dialect of the Lisp programming language invented by Guy Lewis Steele Jr. and Gerald Jay Sussman. It was designed to have an exceptionally clear and simple semantics and few different ways to form expressions. A wide variety of programming paradigms, including imperative, <b>functional,</b> and <b>message</b> passing styles, find convenient expression in Scheme. The introduction offers {{a brief history of}} the language and of the report. The first three chapters present the fundamental ideas of the language and describe the notational conventions used for describing the language and for writing programs in the language...|$|R
30|$|In this paper, {{we focus}} on the small {{elements}} of user interfaces that are defined as interface signs. For example (see Fig.  1), the small element ‘Contact’ at homepage of Military Institute of Science and Technology (MIST) refers to a unique meaning or <b>functional</b> <b>message</b> (i.e. shows the contact details of head of the departments, deans of the faculties, and other administration personnel) to users; thus ‘Contact’ can be considered as an interface sign. An interface sign can be a single sign like ‘Contact’, ‘Clubs’, ‘Home’, and ‘Facebook icon’. It can also take a form consisting texts and icon/symbols like ‘Important Notice with the icon’, ‘Academic with the icon’, etc.|$|E
40|$|The {{kinetics}} of synthesis and {{the metabolic}} stability of uncapped vesicular stomatitis virus (VSV) mRNA transcripts have b en studied using techniques which clearly differentiate them from other RNA species. The triphosphate-initiating mRNA transcripts accumulate {{for at least}} 5 h during a typical in vitro transcription reaction. The great majority of these transcripts are smaller than a <b>functional</b> <b>message</b> and have been released from the template-transcriptase complex. Label that accumulates in them is stable and is not detectably diminished after a 1 h chase with unlabelled precursor. These kinetic properties are not those expected for active intermediates in mRNA synthesis and suggest hat the uncapped transcripts are products of aborted transcription that accumulate during the transcriptive process. However, we cannot rule out that a small subset of these transcripts may be elongated into mature mRNA. Initiation of transcription at internal positions along the VSV genome is both frequent (one-half to one-sixth as frequent as initiations at the leader RNA gene) and site-specific (occurring only {{at the beginning of}} cistrons). The relevance of these results to the models for VSV transcription is discussed...|$|E
40|$|The {{full-length}} 6. 14 -kb polycistronic glf-zwf-edd-glk mRNA from Zymomonas mobilis {{appears to}} be processed by endonucleolytic cleavage, resulting {{in the formation of}} several discrete transcripts. Northern analysis and transcript mapping revealed that the processed transcripts correspond to functional mono-, di-, or tricistronic messages. The relative abundance of the gene-specific, functional messages was measured. Expression of zwf and edd correlated well with <b>functional</b> <b>message</b> levels. Disproportionally high levels of the glk-specific mRNAs might compensate for the instability of glucokinase by allowing increased translation. The relative abundance of the discrete transcripts was shown to be a function of their respective decay rates. Northern analysis of the fate of the 6. 14 -kb transcript after inhibition of transcription by rifampin showed that the abundance of shorter, more stable transcripts increased at the expense of longer, less stable transcripts. This is suggestive of endonucleolytic mRNA processing. The most abundant 5 ' and 3 ' transcript ends were found to lie within secondary structures that probably impart stability to the most abundant mRNAs...|$|E
2500|$|Scheme is a statically scoped and {{properly}} tail-recursive dialect of the Lisp programming language invented by Guy L. Steele, Jr. and Gerald Jay Sussman. It {{was designed to}} have exceptionally clear and simple semantics and few different ways to form expressions. [...] Designed about a decade earlier than Common Lisp, Scheme is a more minimalist design. It has a much smaller set of standard features but with certain implementation features (such as tail-call optimization and full continuations) not specified in Common Lisp. A wide variety of programming paradigms, including imperative, <b>functional,</b> and <b>message</b> passing styles, find convenient expression in Scheme. Scheme continues to evolve {{with a series of}} standards (Revisedn Report on the Algorithmic Language Scheme) and a series of Scheme Requests for Implementation.|$|R
40|$|Splicing of pre-messenger RNAs into <b>functional</b> <b>messages</b> {{requires}} a concerted assembly of proteins and small RNAs that identify the splice junctions and facilitate cleavage of exon-intron boundaries and ligation of exons. One {{of the key}} steps in the splicing reaction is the recruitment of a tri-snRNP harboring the U 5 /U 4 /U 6 snRNPs. The U 5 snRNP is also required for both steps of splicing and exon-exon joining. One of the key components of the tri-snRNP is the U 5 200 kd helicase. The human U 5 - 200 kD gene isolated from Hela cells encodes a 200 kDa protein with putative RNA helicase function. Surprisingly, {{little is known about}} the functional role of this protein in humans. Therefore, we have investigated the role of the U 5 - 200 kD RNA helicase in mammalian cell culture. We created and expressed a dominant negative domain I mutant of the RNA helicase in HEK 293 cells and used RNAi to downregulate expression of the endogenous protein. Transient and stable expression of the domain I mutant U 5 - 200 kD protein using an ecdysone-inducible system and transient expression of an anti-U 5 - 200 kD short hairpin RNA (shRNA) resulted in differential splicing and growth defects in the 293 /EcR cells. Cell cycle analysis of the dominant negative clones revealed delayed exit from the G 2 /M phase of the cell cycle due to a mild splicing defect. In contrast to the domain I dominant negative mutant expressing cells, transient expression of an anti-U 5 - 200 kD shRNA resulted in a pronounced S phase arrest and a minute splicing defect. Collectively, this work demonstrates for the first time establishment of differential human cell culture splicing and cell cycle defect models due to perturbed levels of a...|$|R
40|$|The NASA Goddard Mission Services Evolution Center (GMSEC) {{system is}} a message-based {{plug-and-play}} open system architecture used in many of NASA mission operations centers. This presentation {{will focus on the}} use of GMSEC standard messages to report and analyze the status of a system and enable the automation of the system's components. In GMSEC systems, each component reports its status using a keep-alive message and also publishes status and activities as log messages. In addition, the components can accept <b>functional</b> directive <b>messages</b> from the GMSEC message bus. Over the past several years, development teams have found ways to utilize these messages to create innovative display pages and increasingly sophisticated approaches to automation. This presentation will show the flexibility and value of the message-based approach to system awareness and automation...|$|R
40|$|This thesis {{concentrates}} on the message forwarding issues of real-world people-centric Delay Tolerant Networks (DTN), such as Pocket Switched Networks (PSN) and Vehicular Ad-hoc Networks (VANET), which are omnipresent, and hence pertinent to examine. These people-centric DTN often exhibit discernible network properties, which can be leveraged to develop efficient message forwarding schemes. In this thesis, we analyse the mobility traces of a large-scale public transport network. This type of network is an illustrative example of people-centric DTN. Our extensive analysis of its spatio-temporal communication graph identifies a power-law behaviour and periodicity in the mobility patterns. It also reveals the existence of hubs (a group of highly connected nodes) in these networks. Based on our observations of these networks, we propose three classes of <b>functional</b> <b>message</b> forwarding schemes for people-centric DTN. In particular, we propose a network coding based forwarding strategy, called the HubCode, which seeks to exploit the hubs as message relays in an efficient manner. We formulate a mathematical model for estimating the message delivery delay and present a closed-form expression for the same. The large-scale simulation results show that under pragmatic assumptions, which account for short contact durations between nodes, our schemes outperform comparable strategies by more than 20...|$|E
40|$|Cell {{extracts}} from Escherichia coli {{were used to}} study both transcription and coupled translation of the argECBH gene cluster. Argininosuccinase (the argH enzyme) and N-acetylornithinase (the argE enzyme) were synthesized for 90 to 120 min, and hybridizable argECBH mRNA was synthesized for 60 min after {{the addition of a}} lambda or phi 80 dargECBH DNA template. L-Arginine (2. 5 mM) repressed synthesis by argR+ extracts of argECBH mRNA 2 -, to 3 -fold, argE enzyme 5 - to 8 -fold, and argH enzyme 20 - to 60 -fold. Repression was specific for L-arginine, and argR extracts were insensitive to added L-arginine. The argECBH mRNA made under conditions of restricted protein synthesis had reduced ability to function {{in the formation of the}} argE and argH enzymes and was found to be predominantly 6 to 8 S in sucrose density gradients. When protein synthesis was allowed, the mRNA formed was functional, and large amounts of 14 to 23 S argECBH mRNA appeared on sucrose gradients. An S- 100 supernatant freed of ribosomes was capable of producing hybridizable arg mRNA, but significant <b>functional</b> <b>message</b> was only produced when ribosomes were present. When purified RNA polymerase was used, the formation of short 6 to 8 S argECBH mRNA was dependent upon added rho protein. The data suggest that rho-dependent sites in the argECBH operon allow early termination of mRNA synthesis when transcription is not coupled to active enzyme synthesis...|$|E
40|$|AbstractSubgenomic RNA {{transcription}} of coronaviruses {{involves the}} interaction between the leader (or antileader) and the intergenic (IG) sequences. However, {{it is not clear how}} these two sequences interact with each other. In this report, a previously unrecognized minor species of subgenomic mRNA, termed mRNA 5 – 1, was identified in cells infected with mouse hepatitis virus (MHV) strains JHM 2 c, JHM(2), JHM(3), A 59, and MHV- 1. Sequence analysis revealed that the leader-body fusion site of the mRNA is located at approximately 150 nucleotides (nt) downstream of the consensus IG sequence for mRNA 5 and did not have sequence homology with any known IG consensus sequences. To determine whether this sequence functions independently as a promoter, we cloned a 140 -nt sequence (from ≈ 70 nt upstream to ≈ 70 nt downstream of the fusion site) from viral genomic RNA and placed it in front of a reporter gene in the defective-interfering (DI) RNA-chloramphenicol acetyltransferase (CAT) reporter vector. Transfection of the reporter RNA into MHV-infected cells resulted in synthesis of a CAT-specific subgenomic mRNA detected by reverse transcription-polymerase chain reaction (RT-PCR). The strength of this promoter was similar to that of the IG 7 (for mRNA 7) as measured by the CAT activity. Deletion analysis showed that the sequence as few as 13 nt was sufficient to initiate mRNA transcription, while mutations within the 13 -nt abolished mRNA transcription. In vitro translation study confirmed that the envelope (E) protein was translated from mRNA 5 – 1, which encodes the open reading frame (ORF) 5 b at its 5 ′-end, indicating that mRNA 5 – 1 is a <b>functional</b> <b>message.</b> Furthermore, when the ORF 5 b was replaced with the CAT gene and placed in the DI in the context of viral mini-genome, CAT was expressed not only from the first ORF of mRNA 5 – 1 but also from the second and third ORF of mRNA 5 and genomic DI RNA, respectively, suggesting that more than one mechanism is involved in regulation of ORF 5 b expression. Our findings thus support the notion that base-pairing between the leader (or antileader) and the IG is not the sole mechanism in subgenomic RNA transcription...|$|E
40|$|The half-lives of the M 13 gene 5 {{and gene}} 8 {{messages}} {{were determined by}} measuring the decay {{in the rate of}} synthesis of the gene 5 and gene 8 proteins after inhibition of new RNA chain initiations with rifampin. The gene 5 and gene 8 messages decay with half-lives of approximately 2. 5 and 5 min, respectively. We found no evidence of a <b>functional</b> M 13 <b>message</b> with a half-life as long as that reported for hybridizable mRNA...|$|R
40|$|In {{this paper}} we {{introduce}} {{a model for}} direct communication in situated multi-agent systems. Direct communication is typically associated with cognitive agents, where the information encoded in the messages is related to a mental state. This generally assumed view on communication however, does not fit the approach of situated, behavior-based agents. We propose a protocol-based communication model for situated agents. Communication specified in terms of protocols, i. e. well-defined sequences of messages, shifts the focus of communication from the reasoning upon messages towards {{the relationship between the}} exchanged messages. The model decomposes communication into three <b>functional</b> modules: <b>message</b> decoding, communicating and message encoding. The core of the model, the communicating module (1) interprets decoded messages and reacts to them in accordance with the applicable protocol, and (2) initiates or continues conversations when the conditions imposed by the applicable protocol are satisfied. 1...|$|R
40|$|In {{this paper}} {{we present a}} {{functional}} interleaved Event I/O system. This system is a generalization of the Event I/O system as incorporated into the lazy, purely functional programming language Clean. The Inter leaved Event I/O system offers features that are more commonly found outside the functional scene. These features are dynamic process creation, and two well-known forms of inter-process communication: asynchronous message passing, and data sharing. Both forms of communication are polymorphic and type-safe. As we are working in a <b>functional</b> language, <b>messages</b> can contain higher-order functions and arbitrarily complex algebraic types. Communication by data sharing is a restricted form of communication by global data structures. Nevertheless, the new system is still completely functional because the generalization is done within the pure functional framework. The Interleaved Event I/O system has been implemented and will {{become part of the}} new release of Clean. 1 Introduction R [...] ...|$|R
40|$|This study {{focuses on}} {{emergent}} literacy in three French first-grade classes. In the three instructional settings, teachers are comparable in age, gender and training but {{different in the}} way they teach reading and writing. The first focuses on the teaching of letter–sound relationships (using a textbook). The second presents the written language both as meaningful (through children’s literature) and structured (phonological, morphological, syntactic properties). The third teacher insists on the social and cultural dimensions of the written language (using many <b>functional</b> written <b>messages).</b> Both instructional practices and family literacy environments vary from one class to another. To observe the influence of the mother tongue education, we compared the children’s results over longitudinal and transverse tests (reading, spelling and knowledge of written documents tests). Various comparative analyses showed that the childrens’ representations of the written language, the procedures they use, and the knowledge they acquire, vary according to their educational and pedagogical contexts...|$|R
5000|$|At {{the end of}} this period, the new <b>functional</b> {{receives}} a <b>message,</b> inviting him or her to a certain place. The type of the message depends on the level of technology at the time. For example, in modern times, the functional gets a text message, while in the 1920s, one would get a telegram delivered by a postman-functional. Upon arriving to the specified location, the functional sees a house, which becomes his or her function (place of residence/work). The message is sent by a midwife-functional, whose function is to help the process of [...] "birthing" [...] new functionals.|$|R
50|$|The X.400-series {{recommendations}} {{define the}} technical aspects of the MHS: ITU-T Rec. X.402 | (ISO/IEC 10021-2) defines the overall system architecture of an MHS, ITU-T Rec. X.411 | (ISO/IEC 10021-4) defines the Message Transfer Service (MTS) and its <b>functional</b> component the <b>Message</b> Transfer Agent (MTA), and ITU-T Rec. X.413 | (ISO/IEC 10021-5) defines the Message Store. All ITU-T recommendations provide specific terms for descriptions of system entities and procedures. For example, messages (email) exchanged among people is referred to as Interpersonal Messaging (IPM); electronically structured business documents (e.g., invoices, purchase orders, dispatch advice, etc.) exchanged among trading partners’ computers fall under the EDI protocols.|$|R
40|$|The report gives a {{defining}} {{description of the}} programming language Scheme. Scheme is a statically scoped and properly tail-recursive dialect of the Lisp programming language invented by Guy Lewis Steele Jr. and Gerald Jay Sussman. It was designed to have an exceptionally clear and simple semantics and few different ways to form expressions. A wide variety of programming paradigms, including imperative, <b>functional,</b> and <b>message</b> passing styles, find convenient expression in Scheme. The introduction offers {{a brief history of}} the language and of the report. It also contains a short tutorial to the basic concepts of the language. • Chapter 1 gives an nonnormative overview of the language. • Chapter 2 explains Scheme’s representation for numbers. • Chapter 3 defines the lexical syntax of Scheme and the syntax of Scheme forms. • Chapter 4 presents the fundamental semantic ideas of the language. • Chapter 5 defines notational conventions used {{in the rest of the}} report. • Chapters 6 and 7 describe libraries and top-level programs, the basic organizational units of Scheme programs. • Chapter 8 explains the macro-expansion process for Scheme code. • Chapter 9 explains the Scheme base library which contains the fundamental forms useful to programmers...|$|R
40|$|A lab {{experiment}} {{was conducted in}} France to evaluate the impact of health information on consumers' choices for <b>functional</b> food. Successive <b>messages</b> revealing benefits and uncertainties of consuming yoghurts with added plant sterols for reducing cholesterol were delivered. Results show a significant and positive influence of the message linked to the cholesterol reduction on willingness to pay, even for participants without cholesterol. However participants expressed little interest in information about potential risks and scientific uncertainties, since their impacts on willingness to pay are not always statistically significant. An econometric estimation shows a significant link between the change in willingness to pay and the perception by participants regarding the scientific validity linked to the sterols. Experimental economics Health information Food Nutrition...|$|R
50|$|Herek’s (1986) neofunctional theory {{resulted}} in a boom of development of social influence research relating to FAT. Most of this research has centered around the “matching hypothesis” that stems from the original Katz (1960) study, as it manipulates individuals’ attitudes to determine whether matching product advertising appeals to attitude functions regarding the product. Most this {{research has shown that}} matching <b>functional</b> attitudes to <b>messaging</b> regarding the function of a product results in increased persuasive salience (Shavitt, 1990; Shavitt & Nelson, 2002). Other studies have gone even further in attempting to measure the cognitive processes that underlie individual functional attitudes especially in relation to the Elaboration Likelihood Model (DeBono & Harnish, 1988; Petty & Wegener, 1998), albeit to mixed results showing positive ELM-based processing for high self-monitors, but negative suasory effects in subjects deemed to be low self-monitoring.|$|R
40|$|Abstract—The energy {{usage of}} on-chip {{interconnects}} {{is a concern}} for many system-on-chips targeting portable batterypowered devices. We have designed and evaluated a network-onchip (NoC) for such an application, including tools to optimize for power and communication latency. Our asynchronous (clockless) network operates with efficient two-phase bundled-data links and four-phase routers. The topology and router floorplan is determined by our tool, ANetGen, which optimizes the network for energy and latency using simulated annealing and forcedirected placement methods. We compare our solutions against a traditional synchronous NoC as specified by the COSI- 2. 0 framework and ORION 2. 0 router and wire energy models. Traffic is simulated with SystemC <b>functional</b> models, and <b>messages</b> are generated with a “bursty ” self-similar b-model. Results indicate our asynchronous network was more energy-efficient, lower in area, and provided comparable or superior message latency. Index Terms—Application-specific, asynchronous design, embedded, GALS, low-power, network-on-chip, system-on-chip. I...|$|R
40|$|An {{investigation}} was conducted across two product classes and alternate message appeals {{to determine the}} best <b>functional</b> relationship between <b>message</b> acceptance and four independent cognitive responses: support argument, counterargument, source bolstering, and source derogation. A multi-variate regression analysis was employed to compare various linear and non-linear models. The four dependent cognitive structure measures used were attitude toward the brand, and the cognitive, conative, and affective components of the tricomponent attitude model. The results indicate that in general, linear models best explain message acceptance as a function of cognitive response. This investigation is an extension to current literature and has implications for consumer persuasion. Paper copy at Leddy Library: Theses 2 ̆ 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 1992. B 735. Source: Masters Abstracts International, Volume: 31 - 03, page: 1048. Chairperson: Chike Okechuku. Thesis (M. B. A.) [...] University of Windsor (Canada), 1992...|$|R
40|$|We {{propose a}} {{framework}} {{for the evaluation of}} implicitly parallel <b>functional</b> programs on <b>message</b> passing multiprocessors with special emphasis on the issue of load bounding. The model is based on a new encoding of the l-calculus in Milner's p-calculus and combines lazy evaluation and eager (parallel) evaluation in the same framework. The p-calculus encoding serves as the specification of a more concrete compilation scheme mapping a simple functional language into a message passing, parallel program. We show how and under which conditions we can guarantee successful load bounding based on this compilation scheme. Finally we discuss the architectural requirements for a machine to support our model efficiently and we present a simple RISC-style processor architecture which meets those criteria. 3 Acknowledgments Many people have had profound influence on this thesis and I want to pay tribute to some of them here. To my supervisor, Tony Davie, for his willingness to supervise what start [...] ...|$|R
40|$|Modern liberal {{democracy}} contains an internal contradiction concerning {{the presence of}} religion in the public sphere. On one hand, {{liberal democracy}} guarantees a religious freedom on the basis of which individuals may choose, abandon, change, publicly profess and spread their own religion. On the other hand, the structural and functional changes that take place in modern societies and the accompanying changes in consciousness result in restricting religious freedom to a specific area that hasbeen defined from outside. In modern societies, there are in reality mechanisms of the marginalization of religion which make it difficult to exercise such basic human rights as religious freedom. The marginalization of religion takes place through the decomposition and transformation (semantic and <b>functional)</b> of religious <b>messages.</b> Due to these mechanisms, the attempts to include religious contents in the public discourse are associated with a significant risk of distorting them, taking them out of context, and transforming them in the framework of nonreligious meaning systems...|$|R
40|$|The report gives a {{defining}} {{description of the}} programming language Scheme. Scheme is a statically scoped and properly tail-recursive dialect of the Lisp programming language invented by Guy Lewis Steele Jr. and Gerald Jay Sussman. It was designed to have an exceptionally clear and simple semantics and few different ways to form expressions. A wide variety of programming paradigms, including <b>functional,</b> imperative, and <b>message</b> passing styles, find convenient expression in Scheme. This report {{is accompanied by a}} report describing standard libraries [21]; references to this document are identified by designations such as “library section ” or “library chapter”. It is also accompanied by a report containing non-normative appendices [22]. A fourth report gives some historical background and rationales for many aspects of the language and its libraries [23]. The individuals listed above are not the sole authors of the text of the report. Over the years, the following individuals were involved in discussions contributing to the design of the Scheme language, and were listed as authors of prior reports...|$|R
40|$|AbstractCultural {{background}} plays {{a significant}} role in the sphere of visual art. Semiotics as a discipline is recognized as a useful tool in gauging cultural background and identifying signs that might represent the message of a certain work. Given the rich cultural context of Mamluk architecture, this form of art can be used in studying semiotics. Semiotic tools were employed to interpret the expression of architectural forms and to formulate a subsequent understanding of these architectural forms by turning each element into a communication tool that elucidates meaning. The Sufie tradition was the dominant Islamic practice during the Mamluk period, during which metaphysics, numbers, and geometry were regarded as indispensable tools in manifesting the nature of divinity and the order of being. A semiotic reading of the Funerary Complex of Sultan Qaitbay in Cairo, regarded as one of the perfect works of this era, was proposed to study the reflections of these notions on architectural works. Several messages were embodied in the building, such as <b>functional</b> or technical <b>messages.</b> The semiotic reading in this study is solely concerned with the spiritual message of the building...|$|R
40|$|The variable-region (V) {{genes of}} the murine T-cell {{receptor}} beta chain exist largely as single-element subfamilies. The V beta 5 and V beta 8 genes {{belong to the}} only two known three-member V beta subfamilies. We present studies on the linkage of these six genes and show that the genomic organization is that of alternating V beta 5 and V beta 8 genes. Our analysis suggests that these genes were tandemly duplicated, the unit of duplication being a pair of V beta 5 and V beta 8 genes. This tandem organization permits transcripts to initiate from the promoter of an unrearranged V beta located upstream of the rearranged V beta gene. These transcripts can generate <b>functional</b> beta-chain gene <b>messages</b> by novel RNA splicing of the upstream leader exon to the V beta coding exon of the downstream rearranged gene. We extend {{the analysis of the}} T-cell receptor genomic organization to include 12 V beta genes and suggest that all V beta genes are closely linked on chromosome 6. In addition, we discuss the possible implications of the close linkage of the V beta genes {{on the development of the}} T-cell receptor beta-chain gene repertoire...|$|R
40|$|What will a {{definitive}} programming language look like? By definitive language I mean {{a programming language}} that gives good solutions at its level of abstraction, allowing computer science researchers {{to move on and}} work at higher levels. Given the evolution of computer science as a field with a rising level of abstraction, it is my belief that a small set of definitive languages will eventually exist. But how can we learn something about this set, considering that many basic questions about languages have not yet been settled? In this paper, I give some tentative conclusions about one definitive language. I present four case studies of substantial research projects that tackle important problems in four quite different areas: fault-tolerant programming, secure distributed programming, network-transparent distributed programming, and teaching programming as a unified discipline. All four projects had to think about language design. In this paper, I summarize the reasons why each project designed the language it did. It turns out that all four languages have a common structure. They can be seen as layered, with the following four layers in this order: a strict functional core, then deterministic concurrency, then message-passing concurrency, and finally shared-state concurrency (usually with transactions). This confirms the importance of <b>functional</b> programming and <b>message</b> passing as important defaults; however, global mutable state is also seen as an essential ingredient...|$|R
40|$|A {{central and}} {{influential}} idea among researchers of language {{is that our}} language faculty is organized according to Fregean compositionality, which states that the meaning of an utterance {{is a function of}} the meaning of its parts and of the syntactic rules by which these parts are combined. Since the domain of syntactic rules is the sentence, the implication of this idea is that language interpretation takes place in a two-step fashion. First, the meaning of a sentence is computed. In a second step, the sentence meaning is integrated with information from prior discourse, world knowledge, information about the speaker and semantic information from extra-linguistic domains such as co-speech gestures or the visual world. Here, we present results from recordings of event-related brain potentials that are inconsistent with this classical two-step model of language interpretation. Our data support a onestep model in which knowledge about the context and the world, concomitant information from other modalities, and the speaker are brought to bear immediately, by the same fast-acting brain system that combines the meanings of individual words into a message-level representation. Underlying the one-step model is the immediacy assumption, according to which all available information will immediately be used to co-determine the interpretation of the speaker’s <b>message.</b> <b>Functional</b> magnetic resonance imaging data that we collected indicate that Broca’s area plays an important role in semantic unification. Language comprehension involves the rapid incorporation of information in a ‘single unification space’, coming from a broader range of cognitive domains than presupposed in the standard two-step model of interpretation...|$|R
40|$|Electronic mail is {{undoubtedly}} {{one of the}} most successful computer applications in the Information Technology industry. International standards, such as the X. 400 Message Handling Systems, have been developed to enable the continual expansion of electronic mail services to a wide range of users. The X. 400 standards have comprehensively detailed the <b>functional</b> level of <b>message</b> handling systems but, as with all CCITT standards, has stopped short of defining any requirements for the user interface and a phase approach to the integration of X. 400 mail systems for distributed networks. This thesis presents a functional model, requirements for a contemporary X. 400 Mail system for distributed networks, discussion of mail systems, and an integrated phase approach. The functional model was developed from the X. 400 recommendations. The functional model, requirements, and the implemented target system was the result of a comprehensive study and experiments. The X. 400 issues focused upon in the functional model, Interim and Target systems include the complexity of specifying message recipient addresses and message options. One of the most promising international standards is the X. SOO Directory Services at this writing. X. SOO provides a global distributed database of information on people and an extensible range of objects. The directory enables users to store their complex X. 400 addresses and provide a more consistent and reliable method to access this information. The functional model, Interim and Target system also describes the requirements for the integration of X. SOO Directory Services with X. 400 Message Handling Systems. This tightly coupled integration is considered to be a powerful enabling technology for electronic mail users. The functional model, requirements and Interim and Target system with the integrated phase approach provides the computing science discipline with a proven and functional methodology for X. 400 message systems with X. SOO directory support...|$|R
40|$|We {{present a}} general {{formalism}} {{to make the}} Replica-Symmetric and Replica-Symmetry-Breaking ansatz {{in the context of}} Kikuchi's Cluster Variational Method (CVM). Using replicas and the message-passing formulation of CVM we obtain a variational expression of the replicated free energy of a system with quenched disorder, both averaged and on a single sample, and make the hierarchical ansatz using functionals of functions of fields to represent the messages. We obtain a set of integral equations for the <b>message</b> <b>functionals.</b> The main difference with the Bethe case is that the functionals appear in the equations in implicit form and are not positive definite, thus standard iterative population dynamic algorithms cannot be used to determine them. In the simplest cases the solution could be obtained iteratively using Fourier transforms. We begin to study the method considering the plaquette approximation to the averaged free energy of the Edwards-Anderson model in the paramagnetic Replica-Symmetric phase. In two dimensions we find that the spurious spin-glass phase transition of the Bethe approximation disappears and the paramagnetic phase is stable down to zero temperature on the square lattice for different random interactions. The quantitative estimates of the free energy and of various other quantities improve those of the Bethe approximation. The plaquette approximation fails to predict a second-order spin-glass phase transition on the cubic 3 D lattice but yields good results in dimension four and higher. We provide the physical interpretation of the beliefs in the replica-symmetric phase as disorder distributions of the local Hamiltonian. The messages instead do not admit such an interpretation and indeed they cannot be represented as populations in the spin-glass phase at variance with the Bethe approximation. The approach can be used in principle to study the phase diagram {{of a wide range of}} disordered systems and it is also possible that it can be used to get quantitative predictions on single samples. These further developments present however great technical challenges...|$|R
40|$|Colletotrichum trifolii Bain and Essary is {{the causal}} agent of alfalfa anthracnose. Conidial {{germination}} and appressorial formation are important {{steps in the}} process of pathogenesis. These pre-penetration events, which begin with spore attachment and culminate with appressorial maturation, are prerequisite for penetration of host external barriers and subsequent colonization. This work is intended to assess the role of the Ca 2 +/calmodulin signal transduction system during germination and appressorium development of C. trifolii. Initially, conditions were established for in vitro conidial germination and appressorium development in Colletotrichum trifolii, and the effects on these processes by modulating Ca 2 + and calmodulin by pharmacological agents are given. Results indicate that, as for other pathogenic fungi, appressorium development is induced on a hard surface. The data also suggest that disturbance of calcium homeostasis, by EGTA or calcium channel blocker, impairs appressorium development. Moreover, calmodulin inhibitors affect both germination and differentiation, implying that the Ca 2 +/calmodulin signal transduction pathway is important in the early development of Colletotrichum trifolii on the plant host surface. In order to further investigate the role of calmodulin during differentiation, the unique calmodulin gene of C. trifolii was cloned, sequenced, and characterized. Sequence data show a gene with 7 exons, very similar to the calmodulin gene of N. crassa and A. nidulans. The protein coded by this gene is identical to the N. crassa calmodulin. Northern blot analysis showed that the calmodulin gene expression is higher during germination and appressorium development. To further investigate the role of calmodulin during C. trifolii development, a fragment of the calmodulin gene was cloned in an antisense orientation in front of the qa- 2 promoter of N. crassa. Results showed that this promoter is <b>functional,</b> as calmodulin <b>message</b> was repressed. It is suggest that inhibition of calmodulin expression affected events of the fungal life development cycle, such as colony growth, germination, sporulation, and appressorium formation. ...|$|R
