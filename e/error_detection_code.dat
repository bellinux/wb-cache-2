41|6054|Public
50|$|Beside framing, {{data link}} layers also include {{mechanisms}} {{to detect and}} even recover from transmission errors. For a receiver to detect transmission error, the sender must add redundant information (in the form of bits) as an <b>error</b> <b>detection</b> <b>code</b> to the frame sent. When the receiver obtains a frame with an <b>error</b> <b>detection</b> <b>code</b> it recomputes it and verifies whether the received <b>error</b> <b>detection</b> <b>code</b> matches the computed <b>error</b> <b>detection</b> <b>code.</b> If they match the frame {{is considered to be}} valid.|$|E
5000|$|... an <b>error</b> <b>detection</b> <b>code</b> (EDC), {{which is}} an {{advanced}} checksum used to detect (if possible) read-errors ...|$|E
50|$|Cyclic {{redundancy}} check bits: The last 16 bits contain an <b>error</b> <b>detection</b> <b>code</b> computed {{over the previous}} bits of the channel.|$|E
40|$|We {{describe}} {{a new family}} of <b>error</b> <b>detection</b> <b>codes</b> called Weighted Sum Codes. These codes are preferred over four existing codes (CRC, Fletcher checksum, Internet checksum, and XTP CXOR), because they combine powerful <b>error</b> <b>detection</b> properties (as good as the CRC) with attractive implementation properties. One variant, WSC- 1, has efficient software and hardware implementations; while a second variant, WSC- 2, is almost as efficient in software (still significantly better than CRC) and offers commutative processing (that enables efficient out-of-order, parallel, and incremental update processing). 1 Introduction We {{describe a}} new family of <b>error</b> <b>detection</b> <b>codes</b> called Weighted Sum Codes. Although there exist many good <b>error</b> <b>detection</b> <b>codes,</b> none had all the properties we desired for our broadband transport protocol [1]. The CRC [2] has powerful <b>error</b> <b>detection</b> capabilities, but is slow * and does not allow commutative processing (that enables efficient out-of-order, parallel, and incr [...] ...|$|R
40|$|Abstract—We present, in this paper, {{challenges}} {{and works in}} progress for a new communication integrity approach {{that is based on}} <b>error</b> <b>detection</b> <b>codes</b> and targets slow-dynamic critical embedded systems. The novelty of this approach {{lies in the fact that}} it takes profit of the fault tolerance criterion of slow-dynamic systems. Thus, it does not focus on each exchanged message but rather on a set of messages (which number is being be set according to the safety requirement of the targeted system). This approach relies on a set of control functions whose <b>error</b> <b>detection</b> capabilities and coverage are complementary, which improves the resulting detection capability compared to the usual use of one unique control function. Keywords—slow-dynamic systems, critical embedded systems, fault tolerance, safety, communication integrity, <b>error</b> <b>detection</b> <b>codes...</b>|$|R
50|$|Because {{the header}} lacks <b>error</b> <b>detection</b> <b>codes,</b> it is {{repeated}} three times for redundancy. However, the repetition of the data can itself be considered an <b>error</b> <b>detection</b> and correction <b>code</b> - like any <b>error</b> <b>detection</b> or correction <b>code,</b> it adds redundant information to the signal {{in order to make}} errors identifiable. EAS decoders compare the received headers against one another, looking for an exact match between any two, eliminating most errors which can cause an activation to fail. The decoder then decides whether to ignore the message or to relay it on the air if the message applies to the local area served by the station (following parameters set by the broadcaster).|$|R
5000|$|An <b>error</b> <b>detection</b> <b>code</b> can {{be defined}} as a {{function}} that computes the [...] (amount of redundant bits) corresponding to each string of [...] total number of bits. The simplest <b>error</b> <b>detection</b> <b>code</b> is the parity bit, which allows a receiver to detect transmission errors that have affected a single bit among the transmitted [...] bits. If there are two or more bits in error, the receiver {{may not be able to}} detect the transmission error.|$|E
50|$|Base58Check is a Base58 {{encoding}} {{format that}} unambiguously encodes {{the type of}} data {{in the first few}} characters and includes an <b>error</b> <b>detection</b> <b>code</b> in the last few characters.|$|E
5000|$|Reliability: Packets may be {{lost during}} {{transport}} due to network congestion and errors. By means of an <b>error</b> <b>detection</b> <b>code,</b> such as a checksum, the transport protocol may check that the data is not corrupted, and verify correct receipt by sending an ACK or NACK message to the sender. Automatic repeat request schemes {{may be used to}} retransmit lost or corrupted data.|$|E
40|$|International Telemetering Conference Proceedings / October 09 - 11, 1973 / Sheraton Inn Northeast, Washington, D. C. In {{this paper}} {{the problem of}} {{achieving}} reliable digital information transfer {{in the presence of}} data errors is addressed. The approach taken is to reject data which is suspected of being in error under the philosophy that it is better to miss data than to receive it incorrectly. To this end, <b>error</b> <b>detection</b> mechanisms are considered and their performance compared for a specific application. The mechanisms are thresholding, <b>error</b> <b>detection</b> <b>coding,</b> waveform <b>error</b> <b>detection</b> and feedback. It is shown that <b>error</b> <b>detection</b> <b>coding</b> is the most effective, followed by feedback, thresholding, then waveform <b>error</b> <b>detection.</b> The results are summarized in Tables I and II. These tables give the undetected word error rate and missed word rates for the techniques considered. The application which originally inspired this work is the use of time-division multiplexing to transfer mission-critical data on the B- 1 aircraft...|$|R
50|$|A packet {{consists}} of control information and user data, {{which is also}} known as the payload. Control information provides data for delivering the payload, for example: source and destination network addresses, <b>error</b> <b>detection</b> <b>codes,</b> and sequencing information. Typically, control information is found in packet headers and trailers.|$|R
40|$|International audienceThis chapter {{presents}} {{a study on}} fault detection mechanisms involved in secure devices {{in order to prevent}} faults-based attacks. We explore the solutions based on the use of <b>error</b> <b>detection</b> <b>codes</b> (parity bits, CRC) and we discuss the strengths and the weaknesses of these solutions with regards to <b>error</b> and fault <b>detection...</b>|$|R
5000|$|Automatic repeat request (ARQ) (sometimes also {{referred}} to as backward error correction): This is an error control technique whereby an error detection scheme is combined with requests for retransmission of erroneous data. Every block of data received is checked using the <b>error</b> <b>detection</b> <b>code</b> used, and if the check fails, retransmission of the data is requested - this may be done repeatedly, until the data can be verified.|$|E
5000|$|An m of n code is a {{separable}} <b>error</b> <b>detection</b> <b>code</b> with a {{code word}} length of n bits, where each code word contains exactly m instances of a [...] "one." [...] A single bit error will cause the code word to have either m + 1 or m [...] - [...] 1 [...] "ones". An example m-of-n code is the 2 of 5 code used by the United States Postal Service.|$|E
5000|$|Jtest is an {{automated}} Java software testing and static analysis {{product that is}} made by Parasoft. The product includes technology for Data-flow analysis Unit test-case generation and execution, static analysis, regression testing, runtime <b>error</b> <b>detection,</b> <b>code</b> review, and design by contract.Jtest is used by companies such as Cisco Systems, TransCore, AIG United Guaranty and Wipro Technologies.It is also known {{to be used by}} Lockheed Martin for the F-35 Joint Strike Fighter program (JSF) ...|$|E
5000|$|For <b>error</b> <b>detection</b> cyclic <b>codes</b> {{are widely}} used and are called [...] cyclic {{redundancy}} codes.|$|R
50|$|Packets {{consist of}} {{two kinds of}} data: control {{information}}, and user data (payload). The control information provides data the network needs to deliver the user data, for example: source and destination network addresses, <b>error</b> <b>detection</b> <b>codes,</b> and sequencing information. Typically, control information is found in packet headers and trailers, with payload data in between.|$|R
40|$|In {{this paper}} we will apply a SEC-DED code to the cache {{level of a}} memory hierarchy. From the {{category}} of SEC-DED (Single Error Correction Double <b>Error</b> <b>Detection)</b> <b>codes</b> we select the Hsiao code. The Hsiao code is an odd-weight-column SEC-DED code. For correction of single-bit error we use a syndrome decoder, a syndrome generator and the check bits generator circuit...|$|R
5000|$|No floating-point {{arithmetic}} {{is used in}} WavPack's {{data path}} because, according to the author, integer operations are less susceptible to subtle chip-to-chip variations that could corrupt the lossless nature of the compression (the Pentium floating point bug being an example). It is possible that a lossless compressor that used floating-point math could generate different output when running on that faulty Pentium. Even disregarding actual bugs, floating-point math is complicated enough {{that there could be}} subtle differences between [...] "correct" [...] implementations that could cause trouble for this type of application. A 32-bit <b>error</b> <b>detection</b> <b>code</b> to the generated streams is included to maintain user confidence in the integrity of WavPack's compression.|$|E
40|$|The {{article is}} {{dedicated}} to the method of the guaranteed detection of quadruple errors during transmission via symmetrical binary channel. The main feature of the proposed method is the theoretically minimal length of the <b>error</b> <b>detection</b> <b>code.</b> The method is based {{on the use of the}} weight coefficients formed on the basis of a special non-linear functional transformation. It is shown that use of such coefficients in control code calculation provides guaranteed detection of quadruple errors with the minimal length of the <b>error</b> <b>detection</b> <b>code.</b> Also in the article the properties of such non-linear transformation has been analyzed. The conditions to be met for both the transformation it self and its differential are determined|$|E
40|$|Abstract — A post-Viterbi {{processor}} {{has found}} wide acceptance in recording systems since it can correct dominant error {{events at the}} channel detector output using only a few parity bits, and thereby significantly reduce the correction capacity loss of the error correction code. This paper presents two novel techniques for minimizing the mis-correction of a post-Viterbi processor based on an <b>error</b> <b>detection</b> <b>code.</b> One is a method for achieving a low probability of mis-selection in actual error-type. The other is a method for achieving a low probability of mis-positioning in error-location of an occurred error event. Simulation results show that an application of these techniques to conventional post-Viterbi processor considerably reduces the probability of mis-correction and the performance approaches the corresponding bit error rate and symbol error rate bound. � Index Terms — <b>Error</b> <b>detection</b> <b>code,</b> dominant error event, matched-filtering type post-Viterbi processor, cyclic redundancy check code. I...|$|E
40|$|In {{this paper}} we will apply a Hsiao code tothe cache {{level of a}} memory {{hierarchy}} to increase thereliability of the memory. We have selected the Hsiaocode from the category of SEC-DED (Single ErrorCorrection Double <b>Error</b> <b>Detection)</b> <b>codes.</b> Forcorrection of a single-bit error we use, a check bitsgenerator circuit, a syndrome generator and asyndrome decoder. Implementation of SEC-DED codein the cache is made with FPGA Xilinx circuits...|$|R
40|$|Some new {{codes are}} {{described}} which are separable and are perfect <b>error</b> <b>detection</b> <b>codes</b> {{in a completely}} asymmetric channel. Some results are given of comparisons between one simple form of the code in which the check bits correspond to the sum of ones in the information bits and the four out of eight code. The new code is found to compare favorably in <b>error</b> <b>detection</b> capability in several cases. In addition, some more complex codes of this type are indicated...|$|R
40|$|Several {{techniques}} {{have been proposed}} for encryption blocks {{in order to provide}} protection against faults. These techniques usually exploit some form of redundancy, e. g. by means of <b>error</b> <b>detection</b> <b>codes.</b> However, protection schemes that offer an acceptable <b>error</b> <b>detection</b> rate are in general expensive, while temporal redundancy heavily affects the throughput. In this paper, we propose a new design solution that exploits temporal redundancy by DDR techniques without affecting adversely the throughput at lower clock frequencies. We will also show that the overall costs can be comparable to other solutions recently proposed. 1...|$|R
40|$|We {{present a}} new channel coding system which {{combines}} error detection and error correction using a single high-memory convolutional code, i. e., no dedicated <b>error</b> <b>detection</b> <b>code</b> is required. Since the state complexity of high-memory convolutional codes makes maximum-likelihood decoding impractical, a modified sequential decoder –the Far End Error Decoder (FEED) – is proposed. FEED {{adds to the}} conventional sequential decoding procedure a post processing operation which allows to compute the path reliability of the decoded path. With this path reliability the first error in the decoded frame can be localized, thus, enabling combined error correction and detection with a single code. The advantage of the proposed scheme over applying a dedicated <b>error</b> <b>detection</b> <b>code</b> is demonstrated at {{the example of the}} GSM Fullrate Speech Codec. Although the Fullrate Speech Codec is by far not the most suited source coding scheme for our new approach, a gain of up to ¢ dB in SegSNR or £ dB in channel SNR can be achieved with a peak complexity equal to the standard GSM system. However, in average FEED uses a significantly lower number of operations. Moreover, FEED has a scalable complexity and is self-adaptive to varying channel conditions. ...|$|E
40|$|A new {{burst error}} {{detecting}} code is described which has {{the form of the}} sum codes in that the check bits are determined from the algebraic sum of suitably weighted information bits. With the use of approximately k + log 2 (n/k) redundancy bits,where n is the number of information bits, the resultant code will detect all bursts of errors of length k or less in any channel and will also be a perfect <b>error</b> <b>detection</b> <b>code</b> in a completely asymmetric channel...|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. In this memo, we attempt to give some estimates for the probability of undetected errors to facilitate the selection of an <b>error</b> <b>detection</b> <b>code</b> for the Internet Protocol Small Computer System Interface (iSCSI). We will also attempt to compare Cyclic Redundancy Checks (CRCs) with other checksum forms (e. g., Fletcher, Adler, weighted checksums), as permitted by available data. 1...|$|E
40|$|We {{propose a}} new class of <b>error</b> <b>detection</b> <b>codes,</b> {{quadratic}} dual residue codes, to protect cryptographic computations running on general-purpose processor cores against fault attacks. The assumed adversary model is a powerful one, whereby the attacker can inject errors anywhere in the data path of a general-purpose microprocessor by bit flipping. We demonstrate that quadratic dual residue codes provide a much better protection under this powerful adversary model compared to similar codes previously proposed for the same purpose in the literature. The adopted strategy aims to protect the single-precision arithmetic operations, such as addition and multiplication, which usually dominate the execution time of many public key cryptography algorithms in general-purpose microprocessors. Two so called robust units for addition and multiplication operations, which provide a protection against faults attacks, are designed and tightly integrated into the data path of a simple, embedded re-configurable processor. We report the implementation results that compare the proposed <b>error</b> <b>detection</b> <b>codes</b> favorably with previous proposals of similar type in the literature. In addition, we present performance evaluations of the software implementations of Montgomery multiplication algorithm using the robust execution units. Implementation results clearly show that it is feasible to implement robust arithmetic units with relatively low overhead even for a simple embedded processor...|$|R
40|$|Abstract — Cooperative {{relaying}} strategies enable spatial diversity gains. Using {{a proper}} forwarding strategy, these techniques can achieve diversity order {{as high as}} the number of diverse paths. We derive a strategy named Direct Link-Aware Relaying (DLA), which uses the source-destination link status as a condition to forward or not the signal at the relay. DLA is shown to achieve full diversity and to save energy compared to decodeand-forward strategies. Compared to selective-forwarding, DLA overcomes the use of <b>error</b> <b>detection</b> <b>codes.</b> Extension to the Multi-Branch case is developed. Simulations corroborate our analytical claims. I...|$|R
40|$|International audienceThe {{evolution}} from mechanical to Fly-By-Wire (FBW) designs of Flight Control Systems (FCS, {{the system that}} controls the aircraft trajectory) in both airplanes and helicopters has been a crucial step offering a variety of benefits such as easing the pilot mission and reducing the mechanical complexity of the aircraft. Yet, all these advantages have limited improvement unless the required safety level is met. In fact, for such systems, a very high safety level is imposed by both the safety-critical property {{of the system and}} certification standards (e. g., ARP 4754 A and ARP 4761 standard). Now, industrials such as Airbus Helicopters aim at installing fully digital FBW architectures on future helicopters. This step raises new challenges particularly to comply with certification standards requirements. We present, in this paper, the architecture of future fully digital Airbus Helicopters FCS considered at the end of feasibility study. We focus particularly on the communication integrity issue of future digital architectures. In such systems, the non-detection of corrupted messages could lead to catastrophic consequences. To enhance communication integrity, we propose an end-to-end communication integrity approach based on the black channel concept, it is to be implemented in the application layer. This approach uses <b>error</b> <b>detection</b> <b>codes.</b> Given the constraints of targeted systems namely " embedded " and " safety-critical " features, the selection strategy of <b>error</b> <b>detection</b> <b>codes</b> consists in a trade-off between the computational cost and the <b>error</b> <b>detection</b> capability...|$|R
40|$|This paper {{proposes a}} new kind of visual marker for a {{wearable}} computer based Augmented Reality (AR) system. Various marker systems have already been developed for using with an AR system. However, the improvement is needed to use these marker systems on a wearable AR system in terms of the amount of information or the width of the recognizable area. The main feature of our visual marker is a large amount of information that it can possess. Our marker consists of 32 bits data area with <b>error</b> <b>detection</b> <b>code.</b> This feature enables a wearable AR system to be used in various ways. 1...|$|E
40|$|The {{reliable}} transfer in Network on Chip can be guaranteed by crosstalk avoidance and <b>error</b> <b>detection</b> <b>code.</b> In this paper,we propose a joint coding scheme combined with crosstalk avoidance coding with error control coding. The Fibonacci numeral system {{is applied to}} satisfy the requirement of crosstalk avoidance coding, and the error detection is achieved by adding parity bits. We also implement the codec in register transfer level. Furthermore, the schemes of codec applying to fault-tolerant router are analyzed. The experimental result shows that "once encode, multiple decode" scheme outperforms other schemes in trade-o_ of delay, area and power...|$|E
40|$|Simple {{and easily}} {{utilized}} techniques are suggested for reliable transmission of binary {{data in the}} presence of atmospheric noise bursts. The techniques utilize the time statistics of the noise bursts, now known to be log-normal, and operate on one-way channels. Two modes of transmission are distinguished. The first mode involves double or triple transmission of an <b>error</b> <b>detection</b> <b>code</b> word. The second mode of transmission is based on burst error correction, provided either by a majority count principle or by the recurrent codes of Hagelbarger. Numerical calculations indicate the superior performance of the error detection techniques...|$|E
40|$|International audienceWe present, in this paper, {{challenges}} {{and works in}} progress for a new communication integrity approach {{that is based on}} <b>error</b> <b>detection</b> <b>codes</b> and targets slow-dynamic critical embedded systems. The novelty of this approach {{lies in the fact that}} it takes profit of the fault tolerance criterion of slowdynamic systems. Thus, it does not focus on each exchanged message but rather on a set of messages (which number is being be set according to the safety requirement of the targeted system). This approach relies on a set of control functions whose <b>error</b> <b>detection</b> capabilities and coverage are complementary, which improves the resulting detection capability compared to the usual use of one unique control function...|$|R
50|$|Any error-correcting code can be {{used for}} <b>error</b> <b>detection.</b> A <b>code</b> with minimum Hamming distance, d, can detect up to d − 1 errors in a code word. Using minimum-distance-based error-correcting <b>codes</b> for <b>error</b> <b>detection</b> can be {{suitable}} if a strict limit on the minimum number of errors to be detected is desired.|$|R
40|$|In this paper, the undetected error {{probability}} for large binary codes is studied. It is shown {{that if the}} size of the code is sufficiently large (for given length), then the code is good for <b>error</b> <b>detection</b> (in the technical sense). Index Terms- Undetected <b>error</b> probability, <b>error</b> <b>detection,</b> binary <b>codes,</b> good codes. ...|$|R
