0|10|Public
40|$|A {{physically}} compact, low cost, {{high performance}} 3 D graphics accelerator is presented. It supports shaded rendering of triangles and antialiased lines into a double-buffered 24 -bit true color frame buffer with a 24 -bit Z-buffer. Nearly the only chips used besides standard memory parts are 11 ASICs (of four types). Special geometry data reformatting hardware on one ASIC greatly speeds and simplifies the data input pipeline. Floating-point performance {{is enhanced by}} another ASIC: a custom <b>graphics</b> <b>microprocessor,</b> with specialized <b>graphics</b> instructions and features. Screen primitive rasterization is carried out in parallel by five drawing ASICs, employing a new partitioning of the back-end rendering task. For typical rendering cases, the only system performance bottleneck is that intrinsically imposed by VRAM...|$|R
50|$|Examples of {{soft core}} {{implementations}} are soft <b>microprocessors,</b> <b>graphics</b> chips like AGA or Open Graphics Project, harddisc controllers etc.|$|R
5000|$|Later IBM colour <b>graphics</b> {{terminals}} were <b>microprocessor</b> driven {{and would}} not have produced flashing streaks. IBM decided to program them to re-create the [...] "green lightning", since the bug had become a feature - a phenomenon known as a misbug.|$|R
40|$|Abstract — A mobile 3 D display {{processor}} with a subdivider is presented for higher visual quality on handhelds. By combining a subdivision technique with a 3 D display, the processor can support viewers see realistic smooth surfaces in the air. However, both the subdivision and the 3 D display processes require {{a high number}} of memory operations to mobile memory architecture. Therefore, we make efforts to save the bandwidth between the processor and off-chip memory. In the subdivider, we propose a re-computing based depth-first scheme that has much smaller working set than prior works. The proposed scheme achieves about 100 : 1 bandwidth reduction over the prior subdivision methods. Also the designed 3 D display engine reduces the bandwidth to 27 % by reordering the operation sequence of the 3 D display process. This bandwidth saving translates into reductions of off-chip access energy and time. Consequently the overall bandwidth of both the subdivision and the 3 D display processes is affordable to a commercial mobile bus. In addition to saving bandwidth, our work provides enough visual quality and performance. Overall the 3 D display engine achieves 325 fps for 480 × 320 display resolution. Index Terms—computer <b>graphics,</b> <b>microprocessors...</b>|$|R
50|$|In {{the early}} 21st century, many flavors of {{parallel}} computing began to proliferate, including multi-core architectures at the low-end and massively parallel processing {{at the high}} end. When clock speeds of CPUs began {{to move into the}} 3-5 GHz range, CPU power dissipation and other problems became more important. The ability of industry to produce ever-faster single CPU systems (linked to Moore's Law about the periodic doubling of transistor counts) began to be threatened. Ordinary consumer machines and game consoles began to have parallel processors like the Intel Core, AMD K10, and Cell (<b>microprocessor).</b> <b>Graphics</b> card companies like Nvidia and AMD began introducing large parallel systems like CUDA and open(CL). Again, however, {{it is not clear that}} these developments were facilitated in any significant way by the Fifth-Generation project.|$|R
5000|$|In <b>micro{{processors}},</b> <b>graphics</b> {{processors and}} other high-end chips, hotspots can occur as power densities vary significantly across a chip. [...] These hotspots can severely limit {{the performance of}} the devices. Because of the small size of the thermal bumps and the relatively high density at which they can be placed on the active surface of the chip, these structures are ideally suited for cooling hotspots. In such a case, the distribution of the thermal bumps may not need to be even. Rather, the thermal bumps would be concentrated {{in the area of the}} hotspot while areas of lower heat density would have fewer thermal bumps per unit area. In this way, cooling from the thermal bumps is applied only where needed, thereby reducing the added power necessary to drive the cooling and reducing the general thermal overhead on the system.|$|R
40|$|This note {{describes}} a performance {{evaluation of a}} workstation based on the Silicon <b>Graphics</b> R 8000 <b>microprocessor</b> running at 75 MHz. The evaluation {{is based on a}} variety of Fortran 77 benchmark codes that have a range of computational characteristics and that represent Los Alamos National Laboratory applications. Benchmark data from the R 8000 system are compared with those from an IBM RISC System/ 6000 - 590 and with two older Cray Research vector processors. Only single-processor results are considered. The results of the study echo that of previous microprocessor/vector processor comparisons: for non-vectorizable problems microprocessors can run at favorable speeds relative to the vector processors (although on these codes the RS/ 6000 is generally faster than the R 8000). However, because of relatively poor data cache reuse, on vectorizable codes the vector processors still maintain a significant advantage over the microprocessors. The R 8000 's large secondary data cache does provide an imp [...] ...|$|R
40|$|The {{history of}} {{computer}} graphics is as old, almost, as {{the history of}} computing itself. Until recently however, it had tended to be confined {{to the realm of}} the “aristocracy” of computer machines because of its requirement of their high power and speed as well as the additional cost of expensive graphics hardware. In the last number of years however, a significant reduction in the price/performance ratio of both <b>graphics</b> and <b>microprocessor</b> technology has brought computer graphics within the grasp of the of the ordinary “working class” PC (Personal Computer). The nett result of this has been an increase m the number of users of computer graphics and its areas of application. One of these areas, that of the of generation of realistic three-dimensional images, is the subject matter of this work. More specifically, this work is concerned with a particular method of generation of such images, known as Raytracmg, which has produced some of the most realistic computer generated images to date. Unfortunately, because of a large appetite for numeric calculation, raytracmg has tended to be restricted to mainframe computers. The motivation behind this research has been to implement a raytracmg algorithm on a microcomputer and investigate its performance. Chapter one gives a general introduction to the area of computer graphics, while chapter two outlines a description of the raytracmg algorithm, its advantages, limitations and optimizing techniques. Chapter three then goes on to discuss the apphcation of raytracmg to the area of solid modelling and sets the context for the description of the research m chapter four, which discusses the design, implementation and performance of MicroTrace, a microcomputer based raytracer. Finally, Chapter five discusses conclusions from the research and possible future enhancements to the work...|$|R
40|$|Bioinformatics is a quickly {{emerging}} field. Next generation sequencing {{technologies are}} producing data {{up to several}} gigabytes per day, making bioinformatics applications increasingly computationally intensive. In order to achieve greater speeds for processing this data, various techniques have been developed. These techniques involve parallelizing algorithms and/or spreading data across many computing nodes composed of devices such as <b>Microprocessors,</b> <b>Graphics</b> Processing Units (GPUs), and Field Programmable Gate Arrays (FPGAs). In this thesis, an FPGA is used to accelerate a bioinformatics application called RMAP, which is used for Short-Read Mapping. The most computationally intensive function in RMAP, the read mapping function, is implemented on the FPGA 2 ̆ 7 s reconfigurable hardware fabric. This {{is a first step}} in a larger effort to develop a more optimal hardware/software co-design for RMAP. The Convey HC- 1 Hybrid Computing System was used as the platform for development. The short-read mapping functionality of RMAP was implemented on one of the four Xilinx Virtex 5 FPGAs available in the HC- 1 system. The RMAP 2. 0 software was rewritten to separate the read mapping function to facilitate its porting over to hardware. The implemented design was evaluated by varying input parameters such as genome size and number of reads. In addition, the hardware design was analyzed to find potential bottlenecks. The implementation results showed a speedup of 5 x using datasets with varying number of reads and a fixed reference genome, and 2 x using datasets with varying genome size and a fixed number of reads, for the hardware-implemented short-read mapping function of RMAP...|$|R
40|$|John Frazer's {{architectural}} work {{is inspired by}} living and generative processes. Both evolutionary and revolutionary, it explores informatin ecologies and {{the dynamics of the}} spaces between objects. Fuelled by an interest in the cybernetic work of Gordon Pask and Norbert Wiener, and the possibilities of the computer and the "new science" it has facilitated, Frazer and his team of collaborators have conducted a series of experiments that utilize genetic algorithms, cellular automata, emergent behaviour, complexity and feedback loops to create a truly dynamic architecture. Frazer studied at the Architectural Association (AA) in London from 1963 to 1969, and later became unit master of Diploma Unit 11 there. He was subsequently Director of Computer-Aided Design at the University of Ulter - a post he held while writing An Evolutionary Architecture in 1995 - and a lecturer at the University of Cambridge. In 1983 he co-founded Autographics Software Ltd, which pioneered <b>microprocessor</b> <b>graphics.</b> Frazer was awarded a person chair at the University of Ulster in 1984. In Frazer's hands, architecture becomes machine-readable, formally open-ended and responsive. His work as computer consultant to Cedric Price's Generator Project of 1976 (see P 84) {{led to the development of}} a series of tools and processes; these have resulted in projects such as the Calbuild Kit (1985) and the Universal Constructor (1990). These subsequent computer-orientated architectural machines are makers of architectural form beyond the full control of the architect-programmer. Frazer makes much reference to the multi-celled relationships found in nature, and their ongoing morphosis in response to continually changing contextual criteria. He defines the elements that describe his evolutionary architectural model thus: "A genetic code script, rules for the development of the code, mapping of the code to a virtual model, the nature of the environment for the development of the model and, most importantly, the criteria for selection. In setting out these parameters for designing evolutionary architectures, Frazer goes beyond the usual notions of architectural beauty and aesthetics. Nevertheless his work is not without an aesthetic: some pieces are a frenzy of mad wire, while others have a modularity that is reminiscent of biological form. Algorithms form the basis of Frazer's designs. These algorithms determine a variety of formal results dependent on the nature of the information they are given. His work, therefore, is always dynamic, always evolving and always different. Designing with algorithms is also critical to other architects featured in this book, such as Marcos Novak (see p 150). Frazer has made an unparalleled contribution to defining architectural possibilities for the twenty-first century, and remains an inspiration to architects seeking to create responsive environments. Architects were initially slow to pick up on the opportunities that the computer provides. These opportunities are both representational and spatial: computers can help architects draw buildings and, more importantly, they can help architects create varied spaces, both virtual and actual. Frazer's work was groundbreaking in this respect, and well before its time...|$|R

