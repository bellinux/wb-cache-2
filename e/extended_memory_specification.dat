12|578|Public
25|$|The first PC {{operating}} systems to integrate such technology were Compaq DOS 3.31 (via CEMM) and Windows/386 2.1, both released in 1988. Since the 80286 version of Windows 2.0 (Windows/286), Windows applications {{did not suffer}} from the 640 KB barrier. Prior to DOS extenders, if a user installed additional memory and wished to use it under DOS, they would first have to install and configure drivers to support either expanded memory specification (EMS) or <b>extended</b> <b>memory</b> <b>specification</b> (XMS).|$|E
5000|$|HIMEM.SYS - DOS {{device driver}} which allows DOS {{programs}} to store data in extended memory via the <b>Extended</b> <b>Memory</b> <b>Specification</b> (XMS) ...|$|E
50|$|QEMM {{provides}} {{access to}} the Upper Memory Area (UMA) and memory through the Expanded Memory Specification (EMS), <b>Extended</b> <b>Memory</b> <b>Specification</b> (XMS), Virtual Control Program Interface (VCPI) and DOS Protected Mode Interface (DPMI).|$|E
50|$|With the {{introduction}} of the 80386, the memory management features were enhanced to allow the system to be shifted into protected mode but also allowing the addresses to be configured in a virtual 8086 mode so that the <b>extended</b> <b>memory</b> could be mapped into addressing frames and accessible to real-mode programs such as DOS. This allowed a 386 to implement the LIM (Lotus, Intel, Microsoft) EMS (expanded <b>memory</b> <b>specification).</b> The <b>memory</b> manager was easily controlled by the user with DOS program QEMM.COM.|$|R
50|$|<b>Extended</b> <b>memory</b> modules {{added more}} <b>extended</b> <b>memory</b> to the HP-41C. They {{required}} an extended functions module to be present, or theHP-41CX {{version of the}} calculator.|$|R
50|$|The Globally Shared <b>Memory</b> <b>specification</b> defines packet formats and {{protocols}} {{for operating}} a cache coherent shared memory system over a RapidIO network.|$|R
50|$|QRAM: A memory {{manager for}} Intel 80286 or higher CPUs. It {{supports}} Chips and Technologies chipsets. 2.02 added SHADOWRAM switch. QEXT now correctly reallocates <b>eXtended</b> <b>Memory</b> <b>Specification</b> (XMS). It includes VIDRAM, Optimize, LOADHI from QEMM 6.02, Manifest 1.13. Earlier versions of QRAM also supported the older 8086 and 8088 CPUs.|$|E
50|$|The <b>eXtended</b> <b>Memory</b> <b>Specification</b> or XMS is the {{specification}} {{describing the}} use of IBM PC extended memory in real mode for storing data (but not for running executable code in it). Memory is made available by extended memory manager (XMM) software such as HIMEM.SYS. The XMM functions are accessible through interrupt 2Fh.|$|E
5000|$|HIMEM.SYS is a DOS {{device driver}} which allows DOS {{programs}} to store data in extended memory via the <b>Extended</b> <b>Memory</b> <b>Specification</b> (XMS). This device driver {{is of particular}} importance because various versions of Microsoft Windows that ran {{on top of the}} DOS operating system required [...] to be loaded to be able to run.|$|E
5000|$|The Extended Functions module {{contained}} 124 registers of <b>Extended</b> <b>memory.</b> More {{could be}} added by ... <b>Extended</b> <b>Memory</b> modules.The HP-41CX contained the Extended Functions module as standard.|$|R
50|$|More {{technical}} specifications are in development and pending approval, including {{the fifth and}} final part of TS 18661, a software transactional <b>memory</b> <b>specification,</b> and parallel library extensions.|$|R
50|$|The SPMT Consortium {{was founded}} in 2009 by ARM Holdings, Hynix Semiconductor, Inc., LG Electronics, Samsung Electronics Co., Ltd. and Silicon Image, Inc. The Consortium is managed by SPMT, LLC, the entity {{responsible}} for licensing the SPMT <b>memory</b> interface <b>specification.</b> SPMT is a <b>memory</b> <b>specification</b> for {{dynamic random access memory}} (DRAM) that is based on SerDes rather than a standard parallel interface.|$|R
50|$|Upper memory blocks can {{be created}} by mapping {{extended}} memory into the upper memory area when running in virtual x86 mode. This is similar to how expanded memory can be emulated using extended memory so this method of providing upper memory blocks is usually provided by the expanded memory manager (for example EMM386). Ironically the application programming interface for managing the upper memory blocks is specified in the <b>eXtended</b> <b>Memory</b> <b>Specification.</b>|$|E
50|$|The first PC {{operating}} systems to integrate such technology were Compaq DOS 3.31 (via CEMM) and Windows/386 2.1, both released in 1988. Since the 80286 version of Windows 2.0 (Windows/286), Windows applications {{did not suffer}} from the 640 KB barrier. Prior to DOS extenders, if a user installed additional memory and wished to use it under DOS, they would first have to install and configure drivers to support either expanded memory specification (EMS) or <b>extended</b> <b>memory</b> <b>specification</b> (XMS).|$|E
50|$|Using the 24-bit memory {{addressing}} {{capabilities of the}} 286 CPU architecture, a total address space of 16 MB was accessible. Memory above the 1 MB limit was called extended memory. However the area between 640 kB and 1 MB was reserved for hardware addressing in IBM PC compatibles. DOS and other real mode programs, limited to 20-bit addresses, could only access this space through EMS emulation on the extended memory, or an EMS analog for extended memory. Microsoft developed a standard known as the <b>Extended</b> <b>Memory</b> <b>Specification</b> (XMS). Accessing the memory above the HMA required usage of the protected mode of the 286 CPU.|$|E
40|$|In current {{mainframe}} architectures, <b>extended</b> <b>memory</b> {{is used as}} a pageaddressable {{main memory}} extension to improve I/O performance. If made non-volatile, <b>extended</b> <b>memory</b> can significantly increase transaction processing performance. In this paper, we study how locally distributed transaction systems may use shared <b>extended</b> <b>memory</b> to support high transaction rates and short response times. We outline how a specific store called GEM (Global <b>Extended</b> <b>Memory)</b> can be utilized to improve I/O performance and inter-system communication and cooperation. It turns out that distributed transaction systems of the “shared disk ” type (data sharing systems) can benefit most from such a shared store. We describe simple yet efficient schemes using GEM for global concurrency control and constructing a global log file for such systems. ...|$|R
3000|$|LIBRAS {{dictionary}} may {{be stored}} in an <b>extended</b> <b>memory</b> device (e.g., a USB storage device) which will be plugged into a DTV receiver. In this case, we suppose that DTV receiver supports <b>extended</b> <b>memory</b> devices. Alternatively, the LIBRAS dictionary can be loaded from the interactive channel; [...]...|$|R
50|$|DOS Protected Mode Services (DPMS) {{is a set}} of <b>extended</b> DOS <b>memory</b> {{management}} services to allow DPMS-enabled DOS drivers to load and execute in <b>extended</b> <b>memory</b> and protected mode.|$|R
5000|$|The later <b>eXtended</b> <b>Memory</b> <b>Specification</b> (XMS), {{also now}} obsolete, is a {{standard}} for, in principle, simulating bank switching for memory above 1 MB (called [...] "extended memory"), which is not directly addressable in the Real Mode of x86 processors in which MS-DOS runs. XMS allows extended memory to be copied anywhere in conventional memory, so {{the boundaries of the}} [...] "banks" [...] are not fixed, but in every other way it works like the bank switching of EMS, {{from the perspective of a}} program that uses it. Later versions of MS-DOS (starting circa version 5.0) included the EMM386 driver, which simulates EMS memory using XMS, allowing programs to use extended memory even if they were written for EMS. Microsoft Windows emulates XMS also, for those programs that require it.|$|E
50|$|Specifications were {{developed}} to allow access to additional memory. The first was the Expanded Memory Specification (EMS) which originally allowed memory on an add-on card to be accessed via a 64 KB page frame in the reserved upper memory area. 80386 and later systems could use a virtual 8086 mode (V86) mode memory manager like EMM386 to create expanded memory from extended memory without the need of an add-on card. The second specification was the <b>Extended</b> <b>Memory</b> <b>Specification</b> (XMS) for 80286 and later systems. This provided a way to copy data to and from extended memory, access to the 65520-byte High Memory Area (HMA) directly above the first megabyte of memory and the Upper Memory Block (UMB) area. Generally XMS support was provided by HIMEM.SYS or a V86 mode memory manager like QEMM or 386MAX which also supported EMS.|$|E
5000|$|In DOS memory management, {{extended}} memory refers to memory above the first megabyte (220 bytes) of address space in an IBM PC or compatible with an 80286 or later processor. The term is mainly used under the DOS and Windows operating systems. DOS programs, running in real mode or virtual x86 mode, cannot directly access this memory, but {{are able to}} do so through an application programming interface called the <b>eXtended</b> <b>Memory</b> <b>Specification</b> (XMS). This API is implemented by a driver (such as HIMEM.SYS) or the operating system, which takes care of memory management and copying memory between conventional and {{extended memory}}, by temporarily switching the processor into protected mode. In this context the term [...] "extended memory" [...] may refer to either the whole of the extended memory or only the portion available through this API.|$|E
5000|$|Interdata 8/16, 8/16e (double {{precision}} floating point, <b>extended</b> <b>memory)</b> ...|$|R
50|$|ExtraK add-on, <b>extending</b> <b>memory</b> {{capabilities}} for spreadsheet {{larger than}} 4MB.|$|R
50|$|<b>Extended</b> <b>memory</b> {{should not}} be {{confused}} with expanded memory, an earlier method for expanding the IBM PC's memory capacity beyond 640 kB (655,360 bytes) using an expansion card with bank switched memory modules. Because of the available support for expanded memory in popular applications, device drivers were developed that emulated expanded <b>memory</b> using <b>extended</b> <b>memory.</b> Later two additional methods were developed allowing direct access to a small portion of <b>extended</b> <b>memory</b> from real mode. These memory areas are referred to as the high memory area (HMA) and the upper memory area (UMA; also referred to as upper memory blocks or UMBs).|$|R
5000|$|Free IP-XACT 1685 {{platform}} {{available in}} GUI and command line for Component packaging, Register and <b>Memory</b> <b>specification,</b> C and UVM Model generators, import and export into XLS, translators like verilog2ipxact, ipxact2verilog, vhdl2ipxact, ipxact2vhdl ... & Baya- SoC Platform Assembly Tool ...|$|R
50|$|Each module added 238 {{registers}} of <b>extended</b> <b>memory.</b> Up to two <b>extended</b> <b>memory</b> modules {{could be}} inserted, {{for a grand}} total of 124 + 2*238 = 600 registers. Added to the 319 registers of main memory, this covered practically all of the machine's 1024addressable registers, for a total of 919 registers, or 6433 bytes.|$|R
5000|$|... 2 MB of RAM (4 MB and {{expanded}} or <b>extended</b> <b>memory</b> recommended).|$|R
50|$|QEMM {{supports}} {{moving and}} reallocating <b>extended</b> <b>memory</b> block, Virtual DMA Services (VDS) specification.|$|R
50|$|<b>Extended</b> <b>memory</b> {{could also}} hold ASCII files, and a {{rudimentary}} text editor was added also.|$|R
25|$|Calculators {{also have}} the ability to store numbers into {{computer}} memory. Basic calculators usually store only one number at a time; more specific types are able to store many numbers represented in variables. The variables can also be used for constructing formulas. Some models {{have the ability to}} <b>extend</b> <b>memory</b> capacity to store more numbers; the <b>extended</b> <b>memory</b> address is termed an array index.|$|R
50|$|The {{internal}} architecture {{prohibited the}} addition of more memory, so HP designed an <b>extended</b> <b>memory</b> module {{that could be seen}} as secondary storage. You could not access the data directly, but you could transfer it to and from main memory. To the calculator (and the user), data located in the <b>extended</b> <b>memory</b> looked like files on a modern hard disk do for a PC (user).|$|R
5000|$|The UNIVAC 492 {{is similar}} to the UNIVAC 490, but with <b>extended</b> <b>memory</b> to 64K 30-bit words.|$|R
5000|$|DPMS - a DR-DOS API {{to assist}} the {{relocation}} and execution of resident system code in <b>extended</b> <b>memory</b> ...|$|R
50|$|The Expanded <b>Memory</b> <b>Specification</b> or EMS is the {{specification}} {{describing the}} use of expanded memory. EMS functions are accessible through software interrupt 67h. Programs using EMS must first establish {{the presence of an}} installed expanded memory manager by checking for a device driver with the device name EMMXXXX0.|$|R
50|$|The {{original}} IBM PC restricted {{programs to}} 640 KB but an expanded <b>memory</b> <b>specification</b> {{was used to}} implement a bank switching scheme that fell out of use when later operating systems, such as Windows, used the larger address ranges of newer processors and implemented their own virtual memory schemes.|$|R
5000|$|<b>Extended</b> <b>memory</b> {{functionality}} (beneficial for all supported platforms {{even those}} platforms which cannot {{be equipped with}} more than 2GB).|$|R
