0|948|Public
40|$|Abstract This study {{develops}} a Hybrid Systems DEA model {{to analyze the}} influence of <b>automatic</b> <b>service</b> on bank performance. There are two assumptions seldom used in prior banking studies that are introduced into the DEA model. The first assumes that <b>automatic</b> <b>service</b> inputs do not change proportionally with branch service inputs. The second assumes banks that employ different operating types have different frontier technologies. The inefficiency sourced from excess inputs in <b>automatic</b> and branch <b>service</b> is evaluated through the empirical model. Results show that the excess input in <b>automatic</b> <b>service</b> {{is the cause of}} lower efficiency in financial holding banks when compared to independent banks. On the other hand, increasing inputs in <b>automatic</b> <b>services</b> do not result in a negative impact on independent banks. The finding also indicates that the cross-learning initiatives between the two groups is effective in reducing the inefficiency caused from excess <b>automatic</b> <b>service</b> but ineffective for excess branch service...|$|R
40|$|We {{consider}} architectural properties {{required for}} supporting <b>automatic</b> <b>service</b> composition. After defining composable service architecture, we proceed {{to examine the}} role of trust and reputation systems in such environment. Based on the proposed infrastructure we give several options for achieving <b>automatic</b> <b>service</b> composition, {{under the assumption that}} previously defined requirements are architecturally supported. Finally we discuss the impact and outlook of automatic composition...|$|R
50|$|This {{case set}} a {{precedent}} for those with Medicare benefits seeking private insurance that does not allow other providers. Allowing Medicare must come from the private insurers end, rather than the government cancelling an <b>automatic</b> <b>service.</b> Medicare and Social Security are also considered to be verily inseparable, and cannot be separated from one another, since Medicare is an <b>automatic</b> <b>service</b> along with Social Security.|$|R
5000|$|... #Caption: A plaque {{commemorating the}} {{conversion}} of the telephone exchange to <b>automatic</b> <b>service.</b> (Click image to read).|$|R
40|$|We {{investigate}} architectural properties {{required for}} supporting <b>automatic</b> <b>service</b> composition. First, composable service architecture will be described, based on modeling Web services as abstract machines supported by formally defined composition operators. Based {{on the proposed}} infrastructure we give several options for achieving <b>automatic</b> <b>service</b> composition by treating it as a search problem. Namely, basic heuristic, probabilistic, learning-based, decomposition and bidirectional automatic composition mechanisms will be presented and compared. Finally, we discuss the impact and outlook for automatic composition. KEY WORDS: Web <b>services,</b> <b>automatic</b> compositio...|$|R
40|$|International audienceIn this paper, we {{investigate}} the various service composition mechanisms {{and provide the}} impact of each of them on user-centric service development issues. We classify service composition mechanisms into three categories: <b>automatic</b> <b>service</b> composition, semi-automatic service composition, and static service composition. As services are today mainly driven by the user's needs, the following survey essentially focus on <b>automatic</b> <b>service</b> composition and semi-automatic service composition. This enables users to conceive theirs own personalized applications...|$|R
50|$|Mountshannon {{was home}} to the last {{manually}} operated telephone exchange in Ireland. The exchange was finally converted to <b>automatic</b> <b>service</b> at noon on May 28, 1987.|$|R
5000|$|... #Caption: Vocation {{school in}} Tallinn, saved from Soviet times. Vocations {{available}} there: metalworking, welding, mechatronics and <b>automatics</b> <b>servicing,</b> barbers and tailors. Also they make 1-month studying to electrician qualification for adults.|$|R
5000|$|<b>Automatic</b> <b>service</b> restart after failure. Works in {{conjunction}} with the Solaris Fault Manager, allowing software recovery in the event of hardware faults (cpu, memory), admin error such as accidental kills, and software core dumps.|$|R
50|$|As of the r524 release, {{the ability}} for <b>automatic</b> <b>services</b> {{authentication}} using SSL client certificates has been implemented, and was largely {{based on the work}} done by OFTC , though significant changes were made regarding server-to-server communication.|$|R
50|$|WCPS allows to {{generate}} pictures suitable for displaying to humans and information concise enough for further consumption by programs. In particular, the formally defined syntax and semantics make WCPS amenable to program-generated queries and <b>automatic</b> <b>service</b> chaining.|$|R
40|$|One of {{the core}} idea of Service Oriented Architecture is the {{generation}} of new applications by composing existing services that {{are available on the}} web. Several approaches have been proposed to handle the problem of web service composition, but little effort has been devoted so far to the problem of consumer requirement oriented <b>automatic</b> <b>service</b> selection for composing and run-time adaptation of web service based systems (WSBS). In this paper we present a new framework which facilitates <b>automatic</b> <b>service</b> selection for composition of WSBS. This framework also facilitatesautomatic monitoring of WSBS at run-time and adaptation using an automatic re-composition strategy in case of any discrepancy found by the monitoring process at run-time...|$|R
40|$|Abstract. Bankers {{and other}} {{financial}} experts have analyzed the value of automated teller machines (ATM) in terms of growing consumer demand, rising costs of technology development, decreasing profitability and market share. This paper presents a step-by-step cost-benefit analysis of the ATM <b>automatic</b> deposit <b>service.</b> The {{first step is to}} determine user attitudes towards using ATM <b>automatic</b> deposit <b>service</b> by using the Technology Acceptance Model (TAM). The second step is to determine location priorities for ATMs that provide <b>automatic</b> deposit <b>services</b> using the Analytic Hierarchy Process (AHP) model. The results of the previous steps enable a highly efficient application of cost-benefit analysis for evaluating costs and benefits of <b>automatic</b> deposit <b>services.</b> To understand fully the proposed procedure outside of theoretical terms, a real-world application of a case study is conducted...|$|R
40|$|Abstract. Next {{generation}} SOA systems {{promise to}} enable an “Internet of Services” (IoS) - an open environment, {{in which every}} participant is free to offer and consume services. Such an IoS gives businesses the opportunity to outsource parts of their internal processes and to replace them by using external services. However, businesses must ensure that external services are compatible with their processes {{and that they can}} quickly adapt if service offering changes on the market. This raises the need for a process definition language with a formal foundation and well-defined semantics. In this paper, we discuss the suitability of different process definition languages for <b>automatic</b> <b>service</b> composition, show that subject-oriented modeling with PASS is well-suited for this domain, and how <b>automatic</b> <b>service</b> composition is implemented in the Theseus/TEXO project. ...|$|R
40|$|Bankers {{and other}} {{financial}} experts have analyzed the value of automated teller machines (ATM) in terms of growing consumer demand, rising costs of technology development, decreasing profitability and market share. This paper presents a step-by-step cost-benefit analysis of the ATM <b>automatic</b> deposit <b>service.</b> The {{first step is to}} determine user attitudes towards using ATM <b>automatic</b> deposit <b>service</b> by using the Technology Acceptance Model (TAM). The second step is to determine location priorities for ATMs that provide <b>automatic</b> deposit <b>services</b> using the Analytic Hierarchy Process (AHP) model. The results of the previous steps enable a highly efficient application of cost-benefit analysis for evaluating costs and benefits of <b>automatic</b> deposit <b>services.</b> To understand fully the proposed procedure outside of theoretical terms, a real-world application of a case study is conducted...|$|R
40|$|Matching of {{semantic}} service descriptions {{is the key}} to <b>automatic</b> <b>service</b> {{discovery and}} binding. Existing approaches split the matchmaking process in two step: signature and specification matching. However, this leads to the problem that o#ers are not found although they are functionally suitable if their signature is not fitting the requested one. Therefore...|$|R
40|$|In this demo {{we present}} SemanticCT, a semantically-enabled systems for {{clinical}} trials. SemanticCT {{is built on}} the top of LarKC, a platform for scalable semantic data processing. SemanticCT has been integrated with large-scale trial data and patient data, and provided various <b>automatic</b> <b>services</b> for clinical trials, which include <b>automatic</b> patient recruitment <b>service</b> (i. e., identifying eligible patients for a trial), trial finding service (i. e., finding suitable trials for a patient), and trial feasibility service (i. e., analyzing possible recruitment at design time) ...|$|R
40|$|The {{convergence}} of semantic web techniques with web service technologies has enabled {{the emergence of}} so-called semantic web services. This new kind of <b>services</b> enacts the <b>automatic</b> manipulation of <b>services</b> by software programs, to perform tasks such as <b>automatic</b> <b>service</b> location, composition, and invocation. In this paper, we propose methods and techniques that enable the semi-automatic generation, deployment, semantic annotation and classification of web services. semantic web services; web service generation; web service classification; web service ontologies; reasoning; WSDL; OWL 1...|$|R
40|$|Automated {{matching}} of semantic service descriptions {{is the key}} to <b>automatic</b> <b>service</b> {{discovery and}} binding. But when trying to find a match for a certain request it may often happen, that the request cannot be serviced by a single offer but could be handled by combining existing offers. In this case <b>automatic</b> <b>service</b> composition is needed. Although automatic composition is an active field of research it is mainly viewed as a planning problem and treated separatedly from service discovery. In this paper we argue that an integrated approach to the problem is better than seperating these issues as is usually done. We propose an approach that integrates service composition into service discovery and matchmaking to match service requests that ask for multiple connected effects, discuss general issues involved in describing and matching such services and present an efficient algorithm implementing our ideas...|$|R
40|$|The age of Big Data has {{inspired}} the appearance {{and application of}} data-intensive Web service. In most cases, multiple data-intensive services are assembled into a service composition to meet complicated requirements. As the number of Data-intensive Web services on the Internet is increasing rapidly and dramatically, traditional central service composition approaches {{have come to a}} performance bottleneck. This paper proposes a method for <b>automatic</b> data-intensive <b>service</b> composition, which can be executed in parallel. Firstly, the problem of <b>automatic</b> <b>service</b> composition is defined by combing the approaches of State Space Search and Planning Graph. Then, a heuristic algorithm is proposed to compose data-intensive Web service automatically. After that, more details are given to present the parallel optimization for the composition algorithm. A series of experiments show that the proposed parallel optimization method improves the efficiency of <b>automatic</b> Web <b>service</b> composition to a great extent...|$|R
40|$|Service-oriented {{computing}} {{is gaining}} wider accep-tance. We need an infrastructure that allows users and ap-plications to discover, deploy, compose and synthesize ser-vices automatically. In this paper we present an approach for <b>automatic</b> <b>service</b> discovery and composition based on semantic description of Web services. The implementation {{will be used}} for the WS-Challenge 2007 [1]. 1...|$|R
40|$|Abstract: The {{convergence}} of semantic web techniques with web service technologies has enabled {{the emergence of}} so-called semantic web services. This new kind of <b>services</b> enacts the <b>automatic</b> manipulation of <b>services</b> by software programs, to perform tasks such as <b>automatic</b> <b>service</b> location, composition, and invocation. In this paper, we propose methods and techniques that enable the semi-automatic generation, deployment, semantic annotation and classification of web services. Key words: semantic web services; web service generation; web service classification; web service ontologies; reasoning; WSDL; OWL 1...|$|R
30|$|Recommendation {{systems are}} applied to provide users with the most {{suitable}} services to their specific interests. Chan et al., e.g., developed a recommendation system that captures implicit knowledge by incorporating historical usage data [21]. In their work, however, generated recommendation values are neither used for <b>automatic</b> <b>service</b> composition, nor do they evolve by learning from history.|$|R
40|$|Web {{services}} {{constitute a}} promising technology to support autonomic computing. Automatic discovery of new services, their composition and binding based on Quality of Service (QoS) {{are just some}} of the most promising features that can be provided using web services. In other words, a service oriented system is able to automatically discover, bind, and use, at run time, the services that, among those available, offer a given piece of functionality with a QoS compatible with the system non–functional requirements. This paper describes our work–in–progress related to the development of an electronic marketplace, named C 3 (Creation, Certification and Classification of Services) to enable the publication, semantic discovery, service buying, SLA negotiation and QoS-aware composition and replanning. The marketplace is mainly targeted to corporate intranets, although its technologies and approaches can be easily exported to a wider scenario. Keywords: Service-oriented systems, <b>automatic</b> <b>service</b> discovery, run–time binding, <b>automatic</b> <b>service</b> negotiation, service replanning 1...|$|R
40|$|Abstract. <b>Automatic</b> <b>service</b> {{composition}} may dramatically improve development {{efficiency of}} Web Service applications. This paper proposes {{an approach to}} automatically process semantic and dynamic service composition using Description Logics(DLs) and AI planning techniques. Services and service composition problems are formalized with DLs to provide well-defined semantics. Four relationships among services {{as well as two}} combined service expressions are defined, with which AI planning techniques can be used to reason about how to compose services to achieve user-defined goals. We present an algorithm for <b>automatic</b> <b>service</b> composition, which uses backward-chaining search of potential services, and automatically eliminates irrelevant services while selecting, thus guarantee the execution efficiency. We also make some performance optimization of the algorithm such as removing redundant services and reusing previously achieved goals. All the composition steps could be done dynamically and automatically. Finally, we present an example to show how the algorithm works...|$|R
40|$|International audienceService-Oriented Computing is a {{cornerstone}} for {{the realization of}} user needs through the <b>automatic</b> composition of <b>services</b> from service descriptions and user tasks, i. e., high-level descriptions of the user needs. Yet, <b>automatic</b> <b>service</b> composition processes commonly assume that service descriptions and user tasks share the same abstraction level, and that services have been pre-designed to integrate. To release these strong assumptions and to augment the possibilities of composition, we add adaptation features into the service composition process using semantic descriptions and adaptive extensions to graph planning...|$|R
40|$|This is an {{electronic}} {{version of the}} {{paper presented at the}} Semantic and Dynamic Web processes Workshop during the IEEE International Conference on Web Services, held in Orlando on 2005 The convergence of semantic web techniques with web service technologies has enabled the emergence of so-called semantic web services. This new kind of <b>services</b> enacts the <b>automatic</b> manipulation of <b>services</b> by software programs, to perform tasks such as <b>automatic</b> <b>service</b> location, composition, and invocation. In this paper, we propose methods and techniques that enable the semi-automatic generation, deployment, semantic annotation and classification of web services...|$|R
40|$|Resulting {{from the}} {{constantly}} increasing usage of service oriented computing, {{the problem of}} <b>automatic</b> composition of <b>services</b> is rapidly gaining attention. Many solutions have been proposed, yet too {{little attention has been}} paid to thoroughly analyzing the different needs that require the ability of (<b>automatic)</b> <b>service</b> composition. This paper therefore aims at identifying the different cases in which service composition is needed and at classifying existing approaches accordingly. Three distinguishable types of service composition applications are described along with their basic problems and various approaches addressing the identified classes are presented...|$|R
50|$|The CLABE {{replaces the}} old Mexican account {{numbering}} scheme where the account number had 11 digits. The provision for CLABE standardization was {{issued by the}} Asociación de Bancos de México (ABM) (Mexican Bank Association) {{in conjunction with the}} Banco de México (Mexico's Central Bank). It ensures that the inter-bank fund transfers, payroll deposits, or <b>automatic</b> <b>service</b> charges are made to the correct accounts.|$|R
50|$|MTD (Swedish {{abbreviation}} for Mobiltelefonisystem D, or Mobile telephony system D) was a manual mobile phone {{system for the}} 450 MHz frequency band. It was introduced in 1971 in Sweden, and lasted until 1987, when it was made obsolete by the NMT <b>automatic</b> <b>service.</b> The MTD network had 20,000 users at its peak, with 700 people employed as phone operators.|$|R
40|$|Abstract. The next {{generation}} of Internet applications is emerging: Web services. In this work, we present novel techniques for a flexible and reliable execution and deployment of Web services which can be integrated into current service platforms. Dynamic service selection allows selecting Web service instances during runtime by means of semantic clas-si cations. The selection can be influenced by specifying dierent constraints. We present a generic approach for load balanced and high available <b>services</b> using <b>automatic</b> <b>service</b> replication. Both approaches, dynamic <b>service</b> selection and <b>automatic</b> <b>service</b> replication, support the development of reliable services. Additionally, our system supports mobile code, i. e., Web services can be distributed and instantiated during runtime on demand. This feature opens a great optimization potential and additionally contributes to reliable service execution because unavailable hosts can be replaced dynamically by available hosts. We present these techniques {{within the scope of}} the ServiceGlobe system, an open platform for Web service specication, execution, and deployment...|$|R
40|$|Service {{composition}} {{is a fundamental}} facet of Service Oriented Architecture to burst {{the creation of new}} services and knowledge throughout the Internet. Automating this aspect has been for many years an interesting research topic for people working in several research areas. In spite of the several scientific results already achieved, generating a concrete and runnable service composition from the semantic descriptions of the domain services and the problem to solve is still an open issue. This paper presents an approach to <b>automatic</b> <b>service</b> composition in the context of autonomic workflows and a related tool developed for an IT industrial context. The plan and to translate it into an executable process language, such as WS-BPEL. This way, the tool covers the overall life-cycle of auto-nomic workflows, from their inception to the adaptive execution. The paper compares the approach with other proposals and shows its effectiveness through a case study that exploits <b>automatic</b> <b>service</b> composition to handle an emergency situation caused by a hydro-geological disaster...|$|R
40|$|For web-services {{to become}} practical, an infrastruc-ture {{needs to be}} {{supported}} that allows users and ap-plications to discover, deploy, compose and synthesize services automatically. In this paper, we present the design of an <b>automatic</b> <b>service</b> discovery and composi-tion engine using USDL (Universal Service-Semantics Description Language) [1, 2], a language for formally describing the semantics of web-services. The imple-mentation {{will be used for}} the WS-Challenge 2006 [3]. 1...|$|R
40|$|In this paper, {{we address}} the problem of {{matching}} I/O descriptions of services to enable their <b>automatic</b> <b>service</b> composition. Specifically, we develop a method of semantic schema matching and apply it to the API schemas constituting the I/O descriptions of services. The algorithm assures an optimal match of corresponding entities by obtaining a maximum matching in a bi-partite graph formed from the attributes. 1...|$|R
40|$|We {{describe}} {{the ingredients of}} an <b>automatic</b> <b>service</b> for the dissemination of ocean tide loading coefficients and the considerations {{that led to the}} solution employed. The paper reviews the surface loading problem, methods for computation and especially the improvement of coastline resolution for accurate representation of coastal loads. We finally compare the loading results based on several ocean tide models with coefficients estimated from VLBI observations...|$|R
5000|$|Bryant Pond in Woodstock, Maine {{was known}} as having the last manual magneto (hand-crank) {{telephone}} exchange in America. The family-owned Bryant Pond Telephone Company was operated from a two-position magneto switchboard {{in the living room}} of owners Barbara and Elden Hathaway. In 1981 the company was purchased by the Oxford County Telephone & Telegraph Company, a nearby larger independent company, and <b>automatic</b> <b>service</b> was provided in 1983.|$|R
