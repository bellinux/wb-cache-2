810|882|Public
5|$|Product {{activation}} {{was introduced}} in this release. After installation, users are allowed a 15-day grace period to activate their copy of Norton Internet Security 2004. The program will not work after the deadline without the 24-character product key. The product key used to activate a copy of Norton Internet Security ties in with an alphanumeric code based on a computer's <b>hardware</b> <b>configuration.</b> Users may activate their product five times with the same product key, however licensing terms dictate users are allowed only to install Norton Internet Security 2004 on one computer.|$|E
25|$|Bus: The spacecraft's bus is a {{modified}} I-1 K structure and propulsion <b>hardware</b> <b>configuration,</b> similar to Chandrayaan-1, India's lunar orbiter that operated from 2008 to 2009, with specific improvements and upgrades {{needed for a}} Mars mission. The satellite structure is constructed of an aluminium and composite fibre reinforced plastic (CFRP) sandwich construction.|$|E
25|$|In the {{emerging}} world of home users, {{a variety of}} other computers based on various other processors were in serious competition with the IBM PC: the Apple II, early Apple Macintosh, the Commodore 64 and others did not use the 808x processor; many 808x machines of different architectures used custom versions of MS-DOS. At first all these machines were in competition. In time the IBM PC <b>hardware</b> <b>configuration</b> became dominant in the 808x market as software written to communicate directly with the PC hardware without using standard operating system calls ran much faster, but on true PC-compatibles only. Non-PC-compatible 808x machines were too small a market to have fast software written for them alone, and the market remained open only for IBM PCs and machines that closely imitated their architecture, all running either a single version of MS-DOS compatible only with PCs, or the equivalent IBM PC DOS. Most clones cost much less than IBM-branded machines of similar performance, and became widely used by home users, while IBM PCs had a large share of the business computer market.|$|E
5000|$|... #Subtitle level 3: Software {{limited to}} certain <b>hardware</b> <b>configurations</b> ...|$|R
50|$|Depending {{on which}} kind of RBS, there are {{different}} <b>hardware</b> <b>configurations.</b>|$|R
30|$|An {{even lower}} level of service is {{provided}} by RackSpace (using the OpenStack API) and Arctur- 1 (using the VMWare API). These providers do expose the available <b>hardware</b> <b>configurations,</b> {{but there is no}} way of querying the corresponding prices. Unfortunately, we expect the prices to change more frequently than the offered <b>hardware</b> <b>configurations,</b> therefore the configurations of the corresponding vendor modules have to be changed anyway. Finally, among the integrated vendors, Amazon and GoGrid was found to lack any support for automated brokering. Neither the offered <b>hardware</b> <b>configurations,</b> nor their prices can be queried. Until this situation changes, these vendor modules have to rely on the current off-line approach.|$|R
2500|$|... where N {{represents}} {{either the}} number of physical processors in the <b>hardware</b> <b>configuration</b> or {{the number of}} users driving the software application. The parameters [...] and [...] represent respectively the levels of contention (e.g., queueing for shared resources) and coherency delay (i.e., latency for data to become consistent) in the system. The [...] parameter also quantifies the retrograde throughput seen in many stress tests but not accounted for in either Amdahl's law or event-based simulations.|$|E
2500|$|Tom's Hardware {{published}} benchmarks in January 2007 {{that showed}} that Windows Vista executed typical applications more slowly than Windows XP with the same <b>hardware</b> <b>configuration.</b> [...] A subset of the benchmarks used were provided by Standard Performance Evaluation Corporation (or SPEC), who later stated that such [...] "results should not be compared to those generated while running Windows XP, even if testing is done with the same hardware configuration." [...] SPEC acknowledges that an apple-to-apples comparison cannot be made in cases {{such as the one}} done by Tom's Hardware, calling such studies [...] "invalid comparisons." [...] However, the Tom's Hardware report conceded that the SPECviewperf tests [...] "suffered heavily from the lack of support for the OpenGL graphics library under Windows Vista". [...] For this reason the report recommended against replacing Windows XP with Vista until manufacturers made these drivers available.|$|E
50|$|The BIOS also updates the ESCD {{each time}} the <b>hardware</b> <b>configuration</b> changes, after {{deciding}} how to re-allocate resources like IRQ and memory mapping ranges. After the ESCD has been updated, the decision need not be made again, which thereafter results in faster startup without conflicts until the next <b>hardware</b> <b>configuration</b> change.|$|E
50|$|The {{software}} {{requires no}} installation and works regardless of firewalls and other <b>hardware</b> <b>configurations.</b>|$|R
5000|$|Better {{scalability}} {{for large}} <b>hardware</b> <b>configurations</b> (through a distributed software infrastructure and a two-stage forwarding architecture) ...|$|R
40|$|Abstract — We {{introduce}} a new learning-based solution for portable database workload performance prediction. The {{current state of the}} art addresses performance prediction for individual, static <b>hardware</b> <b>configurations</b> and thus cannot generalize to new platforms without additional training. In this work, we focus on analytical databases that might be deployed on different <b>hardware</b> <b>configurations,</b> possibly offered by various Infrastructureas-a-Service (IaaS) providers in the cloud. Enabling workload performance predictions that can be ported across <b>hardware</b> <b>configurations</b> and IaaS offerings could significantly help cloud users with their service-purchase decisions and cloud providers with their provisioning decisions. Our solution is based on collaborative filtering modeling and prediction. We applied it to lightweight workload fingerprints that model the characteristics and behavior of concurrent query workloads for carefully selected, abstract <b>hardware</b> <b>configurations.</b> Our preliminary results are derived from experiments with TPC-H and TPC-DS benchmarks on the Amazon and Rackspace clouds. They demonstrate that our techniques can predict analytical workload throughput values for diverse hardware platforms with low training overhead and within approximately 30 % of the correct figure. I...|$|R
50|$|HECToR's <b>hardware</b> <b>configuration</b> {{has been}} {{progressively}} upgraded since {{the system was}} first commissioned.|$|E
5000|$|The {{direct use}} of IOCP and MVSCP has been mostly supplanted by [...] <b>Hardware</b> <b>Configuration</b> Definition (HCD).|$|E
50|$|In addition, in Type X³, <b>hardware</b> <b>configuration</b> {{changes are}} {{possible}} for each game title, following the lineup is as an optional part.|$|E
40|$|Abstract. Intermittent {{failures}} and nondeterministic behavior complicate and compromise {{the effectiveness of}} software testing and debugging. To increase the observability of software faults, we explore the effect <b>hardware</b> <b>configurations</b> and processor load have on intermittent {{failures and}} the nondeterministic behavior of software systems. We conducted a case study on Mozilla Firefox with a selected set of reported field failures. We replicated the conditions that caused the reported failures ten times on each of nine <b>hardware</b> <b>configurations</b> by varying processor speed, memory, hard drive capacity, and processor load. Using several observability tools, we found that <b>hardware</b> <b>configurations</b> that had less processor speed and memory observed more failures than others. Our results also show that by manipulating processor load, we can influence the observability of some faults. Keywords-Software testing; observation-based testing; failure observability; empirical study I...|$|R
40|$|We {{present an}} {{approach}} to model <b>hardware</b> <b>configurations</b> of complex manufacturing systems such as ASML's lithography machines. These <b>hardware</b> <b>configurations</b> consist of actuator and sensor elements which are controlled by system software that consists of over 35 million lines of code. To minimize the cost of testing and system integration, software simulators of <b>hardware</b> <b>configurations</b> are used - acting as virtual hardware platforms on which the real control software can be executed and tested. An important aspect in such simulation and testing is material flow (specifically wafer flow) in the machine. To support the effective and efficient realization of simulators covering material flow, we defined a domain specific language (DSL) for modelling the <b>hardware</b> <b>configurations</b> to be simulated, and used a model-driven engineering approach to generate the software components implementing the simulators. The DSL {{can be used to}} specify not only nominal (i. e. good weather) behaviour but also simulation based fault injection scenarios. The overall approach reduces the cost of early hardware-software integration and enables simulating scenarios that cannot be executed on real machines because they are difficult or hazardous to carry out...|$|R
50|$|Commodore copy {{protection}} sometimes depends on specific <b>hardware</b> <b>configurations.</b> Gunship, for example, does not load if a second disk drive or printer {{is connected to}} the computer.|$|R
5000|$|Therefore, three {{simultaneously}} active monitors {{can only}} be achieved by a <b>hardware</b> <b>configuration</b> that requires only two unique pixel clocks, such as: ...|$|E
5000|$|... {{hardware}} compilers (also {{known as}} syntheses tools) are compilers whose output is {{a description of}} the <b>hardware</b> <b>configuration</b> instead of a sequence of instructions.|$|E
50|$|With {{regards to}} network hardware, network agility is used when {{referring}} to automatic <b>hardware</b> <b>configuration</b> and reconfiguration of network devices e.g. routers, switches, SNMP devices.|$|E
25|$|The seven System z9 <b>hardware</b> <b>configurations</b> support {{scores of}} {{software}} model configurations: 2094-401 through 2094-754 for the EC and 2096-A01 through 2096-Z04 for the BC (plus IFL-only models).|$|R
50|$|In {{software}} engineering, {{structured analysis}} (SA) and structured design (SD) are methods for analyzing business requirements and developing specifications for converting practices into computer programs, <b>hardware</b> <b>configurations,</b> and related manual procedures.|$|R
50|$|Preview {{and prepare}} the next song through {{headphones}} before playing {{it on the}} main speakers by simply connecting a USB audio interface or splitter cable, Djay offers different audio <b>hardware</b> <b>configurations.</b>|$|R
50|$|This {{process is}} now obsolete; it was {{initially}} {{replaced by the}} use of SMP/E, IOCP and MVSCP, then later by SMP/E and <b>Hardware</b> <b>Configuration</b> Definition (HCD).|$|E
5000|$|... Checks {{the general}} <b>{{hardware}}</b> <b>configuration.</b> If the screen remains a light gray colors and the tests continue, the hardware is OK. If an error occurs, the system halts.|$|E
50|$|Since {{the first}} digital backs were introduced, {{there have been}} three main methods of {{capturing}} the image, each based on the <b>hardware</b> <b>configuration</b> of the sensor and color filters.|$|E
50|$|Blancco’s data wipe {{products}} {{scale from}} a single, reusable PC erasure tool to software for erasure requirements in mass storage environments and data centers. The various versions support erasure of different <b>hardware</b> <b>configurations.</b>|$|R
50|$|Nineteen-inch racks in two-post or four-post form hold most {{equipment}} in modern data centers, ISP facilities, and professionally designed corporate server rooms. They allow for dense <b>hardware</b> <b>configurations</b> without occupying excessive floorspace or requiring shelving.|$|R
40|$|Abstract: The paper {{presents}} {{a method to}} implement an intelligent steering control system for self-guiding air cushion transporters. A particular sensors configuration, providing the necessary information to allow the self-guiding, an adaptive control algorithm and two possible <b>hardware</b> <b>configurations</b> of the control system are proposed. The control system uses digital magnetic sensors to obtain information about {{the position of the}} transporter, with respect to the ideal trajectory, and analog transducers to obtain information about the angular position of the wheels. The proposed control algorithm offers good results with both <b>hardware</b> <b>configurations</b> presented, a dedicated microcontroller based system and a general purpose PLC modular system...|$|R
50|$|This sort of {{test can}} be very {{sensitive}} to <b>hardware</b> <b>configuration</b> {{and the possibility of}} other programs or tasks running {{at the same time in}} a multi-processing and multi-programming environment.|$|E
50|$|Configuring Nut/OS and Nut/Net {{is quite}} simple. After {{download}} {{of the source}} packages the Nut/OS configurator has to be executed which will build the needed libraries for the selected <b>hardware</b> <b>configuration.</b>|$|E
50|$|In addition, if the <b>hardware</b> <b>configuration</b> of {{the system}} changes, drivers {{and support for the}} {{additional}} hardware changes will not be on the recovery image, requiring users to reinstall their drivers.|$|E
30|$|Resource pooling—all storage {{resources}} are {{collected in a}} logical place and clustered into multiple groups called a pool by the central control unit. Pooling storage resources allows administrators not to deal with individual storage and specific <b>hardware</b> <b>configurations.</b>|$|R
50|$|Next, NTDETECT.COM and the Windows NT kernel (Ntoskrnl.exe) and the Hardware Abstraction Layer (hal.dll) {{are loaded}} into memory. If {{multiple}} <b>hardware</b> <b>configurations</b> are {{defined in the}} Windows Registry, the user is prompted {{at this point to}} choose one.|$|R
40|$|We {{present an}} {{architecture}} for remote visualization of datasets over the Grid. This permits an implementation-agnostic approach, where different {{systems can be}} discovered, reserved and orchestrated without being concerned about specific <b>hardware</b> <b>configurations.</b> We illustrate the utility of our approach to deliver highqualit...|$|R
