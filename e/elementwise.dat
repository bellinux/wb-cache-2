232|0|Public
25|$|Represent {{magnitudes}} (positive reals) as nonempty proper initial {{segments of}} the positive rationals with no largest element. The operations of addition and multiplication on magnitudes are implemented by <b>elementwise</b> addition of the positive rational elements of the magnitudes. Order is implemented as set inclusion.|$|E
25|$|Generally in {{abstract}} algebra, field extensions F / E can {{be studied}} by examining the Galois group Gal(F / E), consisting of field automorphisms of F leaving E <b>elementwise</b> fixed. As an example, the Galois group Gal (Q(ζn) / Q) of the cyclotomic field extension of degree n (see above) is given by (Z/nZ)×, the group of invertible elements in Z/nZ. This is the first stepstone into Iwasawa theory.|$|E
2500|$|Here {{the vector}} product is taken <b>elementwise.</b> [...] Thus the {{coefficients}} {{of the product}} polynomial c(x) are just the terms 0, ..., deg(a(x)) + deg(b(x)) of the coefficient vector ...|$|E
2500|$|... where [...] is the {{diagonal}} matrix {{of the complex}} reference impedance for each port, [...] is the <b>elementwise</b> complex conjugate of , [...] and [...] are respectively the column vectors of the voltages and currents at each port and ...|$|E
2500|$|It can {{be shown}} that any {{reasonable}} bandwidth selector H has H = O(n−2/(d+4)) where the big O notation is applied <b>elementwise.</b> Substituting this into the MISE formula yields that the optimal MISE is O(n−4/(d+4)). Thus as n → ∞, the MISE → 0, i.e. the kernel density estimate converges in mean square and thus also in probability to the true density f. These modes of convergence are confirmation of the statement in the motivation section that kernel methods lead to reasonable density estimators. [...] An ideal optimal bandwidth selector is ...|$|E
2500|$|... {{defines a}} class of graph {{parameters}} that he calls S-functions, which include the treewidth. These functions from graphs to integers are required to be zero on graphs with no edges, to be minor-monotone, to increase by one when a new vertex is added that is adjacent to all previous vertices, and to take the larger value from the two subgraphs {{on either side of}} a clique separator. The set of all such functions forms a complete lattice under the operations of <b>elementwise</b> minimization and maximization. The top element in this lattice is the treewidth, and the bottom element is the Hadwiger number, the size of the largest complete minor in the given graph.|$|E
50|$|Calculate the cross-power {{spectrum}} {{by taking}} the complex conjugate of the second result, multiplying the Fourier transforms together <b>elementwise,</b> and normalizing this product <b>elementwise.</b>|$|E
5000|$|Therefore, {{instead of}} MDCTing , we now MDCT [...] (with all multiplications {{performed}} <b>elementwise).</b> When this is IMDCTed and multiplied again (<b>elementwise)</b> {{by the window}} function, the last-N half becomes: ...|$|E
5000|$|... where [...] is the <b>elementwise</b> {{square of}} the {{geodesic}} distance matrix D = Dij, H is the centering matrix, given by ...|$|E
5000|$|Lists, {{which are}} {{one-dimensional}} linked lists which support <b>elementwise</b> operations. On the 68k calculators, elements can be integers, reals, complex numbers, strings or expressions.|$|E
5000|$|Then {{taking the}} complex {{conjugate}} {{of the second}} result and multiplying the Fourier transforms together <b>elementwise,</b> we obtain the Fourier transform of the correlogram, : ...|$|E
5000|$|Here {{the vector}} product is taken <b>elementwise.</b> Thus the {{coefficients}} {{of the product}} polynomial c(x) are just the terms 0, ..., deg(a(x)) + deg(b(x)) of the coefficient vector ...|$|E
5000|$|... {{for some}} {{invertible}} [...] matrix , where [...] denotes the <b>elementwise</b> complex conjugation. So for real matrices similar by some real matrix , consimilarity {{is the same}} as matrix similarity.|$|E
5000|$|The design matrix X used in linear {{regression}} is the horizontal concatenation of {{a column of}} 1s (intercept), d, and all <b>elementwise</b> products {{of a pair of}} columns of d: ...|$|E
5000|$|... where [...] is the {{diagonal}} matrix {{of the complex}} reference impedance for each port, [...] is the <b>elementwise</b> complex conjugate of , [...] and [...] are respectively the column vectors of the voltages and currents at each port and ...|$|E
50|$|Represent {{magnitudes}} (positive reals) as nonempty proper initial {{segments of}} the positive rationals with no largest element. The operations of addition and multiplication on magnitudes are implemented by <b>elementwise</b> addition of the positive rational elements of the magnitudes. Order is implemented as set inclusion.|$|E
50|$|As all vectors under {{consideration}} by this model are <b>elementwise</b> nonnegative, a cosine value of zero {{means that the}} query and document vector are orthogonal and have no match (i.e. the query term {{does not exist in}} the document being considered). See cosine similarity for further information.|$|E
50|$|The {{discrete}} weighted transform (DWT) is {{a variation}} on the discrete Fourier transform over arbitrary rings involving weighting the input before transforming it by multiplying <b>elementwise</b> by a weight vector, then weighting the result by another vector. The Irrational base discrete weighted transform is a special case of this.|$|E
50|$|One {{can define}} a {{division}} operation for matrices. The usual {{way to do}} this is to define A / B = AB&minus;1, where B&minus;1 denotes the inverse of B, but it is far more common to write out AB&minus;1 explicitly to avoid confusion.An <b>elementwise</b> division can also be defined in terms of the Hadamard product.|$|E
5000|$|Now we {{suppose that}} we {{multiply}} both the MDCT inputs and the IMDCT outputs by a window function of length 2N. As above, we assume a symmetric window function, which is therefore {{of the form}} [...] where W is a length-N vector and R denotes reversal as before. Then the Princen-Bradley condition can be written as , with the squares and additions performed <b>elementwise.</b>|$|E
50|$|Generally in {{abstract}} algebra, field extensions F / E can {{be studied}} by examining the Galois group Gal(F / E), consisting of field automorphisms of F leaving E <b>elementwise</b> fixed. As an example, the Galois group Gal (Q(ζn) / Q) of the cyclotomic field extension of degree n (see above) is given by (Z/nZ)×, the group of invertible elements in Z/nZ. This is the first stepstone into Iwasawa theory.|$|E
5000|$|In 1958 Curt Schmieden and Detlef Laugwitz {{published}} an Article [...] "Eine Erweiterung der Infinitesimalrechnung" [...] - [...] "An Extension of Infinitesimal Calculus", which proposed a {{construction of a}} ring containing infinitesimals. The ring was constructed from sequences of real numbers. Two sequences were considered equivalent if they differed only in {{a finite number of}} elements. Arithmetic operations were defined <b>elementwise.</b> However, the ring constructed in this way contains zero divisors and thus cannot be a field.|$|E
5000|$|Higher-order Divide and Conquer (HDC) is {{a subset}} of the {{functional}} language Haskell. Functional programs are presented as polymorphic higher-order functions, which can be compiled into C/MPI, and linked with skeleton implementations. The language focus on divide and conquer paradigm, and starting from a general kind of divide and conquer skeleton, more specific cases with efficient implementations are derived. The specific cases correspond to: fixed recursion depth, constant recursion degree, multiple block recursion, <b>elementwise</b> operations, andcorrespondent communications ...|$|E
5000|$|It can {{be shown}} that any {{reasonable}} bandwidth selector H has H = O(n−2/(d+4)) where the big O notation is applied <b>elementwise.</b> Substituting this into the MISE formula yields that the optimal MISE is O(n−4/(d+4)). Thus as n → ∞, the MISE → 0, i.e. the kernel density estimate converges in mean square and thus also in probability to the true density f. These modes of convergence are confirmation of the statement in the motivation section that kernel methods lead to reasonable density estimators. An ideal optimal bandwidth selector is ...|$|E
5000|$|... {{defines a}} class of graph {{parameters}} that he calls S-functions, which include the Hadwiger number. These functions from graphs to integers are required to be zero on graphs with no edges, to be minor-monotone, to increase by one when a new vertex is added that is adjacent to all previous vertices, and to take the larger value from the two subgraphs {{on either side of}} a clique separator. The set of all such functions forms a complete lattice under the operations of <b>elementwise</b> minimization and maximization. The bottom element in this lattice is the Hadwiger number, and the top element is the treewidth.|$|E
5000|$|... {{defines a}} class of graph {{parameters}} that he calls S-functions, which include the treewidth. These functions from graphs to integers are required to be zero on graphs with no edges, to be minor-monotone, to increase by one when a new vertex is added that is adjacent to all previous vertices, and to take the larger value from the two subgraphs {{on either side of}} a clique separator. The set of all such functions forms a complete lattice under the operations of <b>elementwise</b> minimization and maximization. The top element in this lattice is the treewidth, and the bottom element is the Hadwiger number, the size of the largest complete minor in the given graph.|$|E
50|$|Brauer's theorem on induced characters, often {{known as}} Brauer's {{induction}} theorem, and named after Richard Brauer, {{is a basic}} result in the branch of mathematics known as character theory, which is, in turn, part of the representation theory of a finite group. Let G be a finite group and let Char(G) denote the subring of the ring of complex-valued class functions of G consisting of integer combinations of irreducible characters. Char(G) {{is known as the}} character ring of G, and its elements are known as virtual characters (alternatively, as generalized characters, or sometimes difference characters). It is a ring by virtue {{of the fact that the}} product of characters of G is again a character of G. Its multiplication is given by the <b>elementwise</b> product of class functions.|$|E
5000|$|The {{proof of}} Brauer's {{induction}} theorem exploits the ring structure of Char(G) (most proofs also {{make use of}} a slightly larger ring, Char*(G), which consists of -combinations of irreducible characters, where &omega; is a primitive complex |G|-th root of unity). The set of integer combinations of characters induced from linear characters of Brauer elementary subgroups is an ideal I(G) of Char(G), so the proof reduces to showing that the trivial character is in I(G). Several proofs of the theorem, beginning with a proof due to Brauer and John Tate, show that the trivial character is in the analogously defined ideal I*(G) of Char*(G) by concentrating attention on one prime p at a time, and constructing integer-valued elements of I*(G) which differ (<b>elementwise)</b> from the trivial character by (integer multiples of) a sufficiently high power of p. Once this is achieved for every prime divisor of |G|, some manipulations with congruencesand algebraic integers, again exploiting the fact that I*(G) is an ideal of Ch*(G), place the trivial character in I(G). An auxiliary result here is that a -valued class function lies in the ideal I*(G) if its values are all divisible (in [...] ) by |G|.|$|E
3000|$|... where./ denotes <b>elementwise</b> {{division}} and.∗ <b>elementwise</b> multiplication. The {{importance of}} Wiener filtering is demonstrated {{in our previous}} work [18].|$|E
3000|$|... where.∗ denotes <b>elementwise</b> multiplication, the {{division}} of two matrix operands is likewise performed <b>elementwise,</b> and 1 is a T [...]...|$|E
40|$|This paper {{presents}} a new distributed functional skeleton, the <b>elementwise</b> processing {{implemented in the}} D-Clean coordination language. The skeleton coordinating the distributed <b>elementwise</b> processing is a generalisation of the classical map function. It contains three main phases. The first one decomposes the input data according to a very well defined strategy, the second phase applies the <b>elementwise</b> processable function on the divided input, and the final phase recombines the result from the already computed subresults. The step from one phase to another also means a changing on the dimension of the intermediate results. The primitives supplied by the D-Clean language are proved to be appropriate for implementing the <b>elementwise</b> processing phases by parameterising them with suitable <b>elementwise</b> processable function parameters. We provide measurements and conclusions regarding the performance of this algorithm in our distributed environment. ...|$|E
30|$|The map a:X(Z)M(Z) defined <b>elementwise</b> as a(x)=S-S^r is continuous.|$|E
40|$|We {{present a}} formal {{derivation}} of program schemes {{that are usually}} called Backtracking programs and Branch-and-Bound programs. The derivation consists {{of a series of}} transformation steps, specifically algebraic manipulations, on the initial specification until the desired programs are obtained. The well-known notions of linear recursion and tail recursion are extended, for structures, to <b>elementwise</b> linear recursion and <b>elementwise</b> tail recursion; and a transformation between them is derived too...|$|E
40|$|In {{this paper}} we {{classify}} all finite 2 -groups of class 2 for which every automorphism of order 2 leaving the Frattini subgroup <b>elementwise</b> fixed is inner. We prove that every such group G is isomorphic to Q(n; r) = for some positive integers r; n such that 2 < 2 r <= n; and every automorphism of Q(n; r) of order 2 leaving the Frattini subgroup <b>elementwise</b> fixed is inner...|$|E
40|$|The {{dependency}} {{structure of}} multivariate {{data can be}} analyzed using the covariance matrix ∑. In many fields the precision matrix ∑- 1 is even more informative. As the sample covariance estimator is singular in high-dimensions, it cannot be used to obtain a precision matrix estimator. A popular high-dimensional estimator is the graphical lasso, but it lacks robustness. We consider the high-dimensional independent contamination model. Here, even {{a small percentage of}} contaminated cells in the data matrix may lead to a high percentage of contaminated rows. Downweighting entire observations, which is done by traditional robust procedures, would then results in a loss of information. In this paper, we formally prove that replacing the sample covariance matrix in the graphical lasso with an <b>elementwise</b> robust covariance matrix leads to an <b>elementwise</b> robust, sparse precision matrix estimator computable in high-dimensions. Examples of such <b>elementwise</b> robust covariance estimators are given. The final precision matrix estimator is positive definite, has a high breakdown point under <b>elementwise</b> contamination and can be computed fast. nrpages: 26 status: publishe...|$|E
3000|$|... where. denotes <b>elementwise</b> {{multiplication}} and the jumps of the subordinator are {{suppressed by}} {{the rate of}} decay parameter λ=(λ [...]...|$|E
