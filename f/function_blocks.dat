324|1625|Public
5000|$|... #Caption: GCN {{includes}} {{special purpose}} <b>function</b> <b>blocks</b> {{to be used}} by HSA. Support for these <b>function</b> <b>blocks</b> is available through [...] since Linux kernel 3.19.|$|E
5000|$|Central to the DCS {{model was}} the {{inclusion}} of control <b>function</b> <b>blocks.</b> <b>Function</b> <b>blocks</b> evolved from early, more primitive DDC concepts of [...] "Table Driven" [...] software. One of the first embodiments of object-oriented software, <b>function</b> <b>blocks</b> were self-contained [...] "blocks" [...] of code that emulated analog hardware control components and performed tasks that were essential to process control, such as execution of PID algorithms. <b>Function</b> <b>blocks</b> continue to endure as the predominant method of control for DCS suppliers, and are supported by key technologies such as Foundation Fieldbus today.|$|E
50|$|Among other examples, IEC 61499-3 {{described}} {{the use of}} SIFBs as communication <b>function</b> <b>blocks</b> for remote access to real-time data and parameters of function blocks; the use of adapter interfaces to implement object oriented concepts; initialization algorithms in function block networks; and the implementation of ECCs for a simplified motor control of hypothetical VCRs.Additionally the impacts of the mapping concerning the communication <b>function</b> <b>blocks</b> was explained, {{as well as the}} device management by management applications and its <b>function</b> <b>blocks,</b> and the principle of the device manager function block (DEV_MGR).|$|E
5000|$|Composite <b>function</b> <b>block</b> - CFB: Its {{functionality}} {{is defined}} by a <b>function</b> <b>block</b> network.|$|R
25|$|Specific <b>function</b> <b>block</b> diagram are {{the classic}} Functional Flow Block Diagram, and the <b>Function</b> <b>Block</b> Diagram (FBD) {{used in the}} design of {{programmable}} logic controllers.|$|R
40|$|An {{improved}} <b>function</b> <b>block</b> based redundancy {{approach is}} proposed in this paper. The structure, link organization and data synchronization of improved <b>function</b> <b>block</b> are described. Furthermore, the non-redundancy model, the corresponding device-level redundancy model and improved <b>function</b> <b>block</b> based redundancy model are analyzed in quantitatively. For 1 - 0 - 2 type system, improved <b>function</b> <b>block</b> based redundancy model can achieved significantly higher reliability than non-redundant system. IEEE Intelligent Computat Soc, IEEE Comp Soc, Res Assoc Intelligent Computat Technol & Automat, Changsha Univ Sci & Technol, Hunan Univ Sci & Techno...|$|R
5000|$|<b>Function</b> <b>blocks</b> (FB) - contain {{frequently}} occurring {{and particularly}} complex program parts ...|$|E
5000|$|Demonstration of HSE and Flexible <b>Function</b> <b>Blocks</b> (FFBs) at ISP Lima, May 2005 ...|$|E
50|$|A flicker meter is {{composed}} of several <b>function</b> <b>blocks</b> which simulate a 230 V/60 W incandescent lamp (reference lamp) and the human perception system (eye-brain model).|$|E
50|$|In the C {{programming}} language, {{an external}} variable is a variable defined outside any <b>function</b> <b>block.</b> On the other hand, a local (automatic) variable is a variable defined inside a <b>function</b> <b>block.</b>|$|R
40|$|The IEC 61499 <b>function</b> <b>block</b> {{architecture}} {{is a new}} standard proposed to replace the current PLC technologies. Currently the available <b>function</b> <b>block</b> development tools have major shortcoming, specifically {{the lack of a}} debug function. The OOONEIDA workbench is an open source <b>function</b> <b>block</b> development tool designed for open development. Our aim is to make the Workbench a fully functioning development tool with emphasis on developing a debug function. ...|$|R
40|$|Voting {{mechanism}} based safe <b>function</b> <b>block</b> {{compatible with}} IEC 61499 is proposed. The voting safe <b>function</b> <b>block</b> can vote the discrete or continuous parameters {{and get a}} reliable value. A new safe communication approach is proposed for not only error sensing but also error correcting. The approach use a triple data field copies to address error correcting problem, and more safety is achieved in communication by this way. By using voting safe <b>function</b> <b>block,</b> a more safe system based on common control devices is designed. Furthermore, a markov model is established to describe safety and reliability of the voting safe <b>function</b> <b>block</b> based safe system. At the end, simulation under given parameters is done, which is about PFD, PFS and MTTF factors. Dalian University of Technolog...|$|R
5000|$|Chivilikhin D., Shalyto A., Vyatkin V. Inferring Automata Logic From Manual Control Scenarios: Implementation in <b>Function</b> <b>Blocks</b> / Proceedings of the 13th IEEE International Symposium on Parallel and Distributed Processing with Applications (ISPA'15). 2015, pp. 307-312.|$|E
50|$|Some S5 PLCs {{also have}} block types FX (Extended <b>Function</b> <b>Blocks),</b> and DX(Extended Data Blocks); {{these are not}} {{distinct}} block types, but rather are another set of available blocks due to the CPU having more memory and addressing space.|$|E
5000|$|Sequential control {{refers to}} dis-continuous time and event based {{automation}} sequences that occur within continuous processes. These may be implemented {{as a collection}} of time and logic <b>function</b> <b>blocks,</b> a custom algorithm, or using a formalized Sequential function chart methodology.|$|E
5000|$|<b>Function</b> <b>block</b> diagrams, used in {{programmable}} logic controllers ...|$|R
40|$|Abstract. This article {{develops}} {{the design and}} evaluation <b>function</b> <b>block</b> of inserts {{on the basis of}} the optimization database system of cutting parameters for large cylinder section. The <b>function</b> <b>block</b> completes the development combining 3 D graphics software called SolidWorks with programming language called VB. This article achieves the design and evaluation functions which are inserts shape selection, inserts parameter design, inserts geometric characteristics design and finite element simulation of inserts. Finally, this paper proves the reliability of the result which is achieved from the design and evaluation <b>function</b> <b>block</b> of inserts by comparing with traditional inserts...|$|R
40|$|This paper {{presents}} {{a new approach}} to modelling and verification of <b>function</b> <b>block</b> applications of the IEC 61499 standard. The approach uses the language of logic programming Prolog to represent a model of <b>function</b> <b>block</b> network and to verify its properties. The class of properties that can be checked is extended to more substantial queries providing in return not only “yes ” or “no”, but also the parameters explaining the reasons. The models essentially use the topological properties of the <b>function</b> <b>block</b> network and allow data of arbitrary types (not only Boolean) be used in the queries. 1...|$|R
50|$|GoDroid is an Android KitKat 4.4.4. based {{optimized}} {{operating system}} for GoWarrior platform. In addition to original Android functionalities, GoDroid pre-integrates some useful middleware components and libraries, {{as well as}} some self-developed <b>function</b> <b>blocks,</b> which makes it also a software development kit for Android applications.|$|E
5000|$|Closed-loop poles are the {{positions}} of the poles (or eigenvalues) of a closed-loop transfer function in the s-plane. The open-loop transfer function is equal to the product of all transfer <b>function</b> <b>blocks</b> in the forward path in the block diagram. The closed-loop transfer function is obtained by dividing the open-loop transfer function by the sum of one (1) and the product of all transfer <b>function</b> <b>blocks</b> throughout the feedback loop. The closed-loop transfer function may also be obtained by algebraic or block diagram manipulation. Once the closed-loop transfer function is obtained for the system, the closed-loop poles are obtained by solving the characteristic equation. The characteristic equation is nothing more than setting the denominator of the closed-loop transfer function to zero (0).|$|E
50|$|AMD Catalyst is {{targeted}} to support all <b>function</b> <b>blocks</b> present on a GPU's or APU's die. Besides IC targeted at rendering, this includes display controllers {{as well as}} their SIP blocks to do video decoding, Unified Video Decoder (UVD) and video encoding Video Coding Engine (VCE).|$|E
5000|$|FBD - <b>Function</b> <b>Block</b> Diagrams (a {{programming}} {{language in the}} IEC 61131 standard) ...|$|R
40|$|Abstract- Today’s rapidly {{changing}} market requirements impose {{the need of}} improving the agility of manufacturing systems. The <b>function</b> <b>block</b> concept, promises to improve productivity in terms of re-use, reliability, flexibility and interoperability. IEC, with standards like 61499, defines the basic concepts and a methodology, {{for the design of}} modular, re-usable distributed Industrial Process Measurement and Control Systems (IPMCSs). In this paper we present our approach for the development of <b>function</b> <b>block</b> oriented distributed IPMCS applications. This approach is based on a 4 -layer architecture that was defined to facilitate the design and development of the new generation <b>function</b> <b>block</b> oriented Engineering Support Systems (ESSs). The approach greatly exploits the modular architecture of the interworking unit that is used to interconnect different types of fieldbus segments. We adopt the steam boiler system as a case study and we consider the development of a <b>function</b> <b>block</b> based IPMCS application for the control of it...|$|R
5000|$|FBD (<b>function</b> <b>block</b> diagram) {{enables the}} user to rapidly program both Boolean and {{analogue}} expressions ...|$|R
5000|$|More complex <b>function</b> <b>blocks</b> {{are to be}} {{built from}} these E {{elements}}. He shows {{how to use these}} E elements to build circuits for addition, subtraction, multiplication, division and square root, as well as two state memory blocks and control circuits. He does not use Boolean logic terminology.|$|E
50|$|All I/O {{operations}}, {{file system}} operations, and network operations {{were meant to}} work through this mechanism, and the data transferred was copied during message passing. Later versions of QNX {{reduce the number of}} separate processes and integrate the network stack and other <b>function</b> <b>blocks</b> into single applications for performance reasons.|$|E
5000|$|The {{international}} standard IEC 61499, addressing {{the topic of}} <b>function</b> <b>blocks</b> for industrial process measurement and control systems, was initially published in 2005. The specification of IEC 61499 defines a generic model for distributed control systems {{and is based on}} the IEC 61131 standard. The concepts of IEC 61499 are also explained by Lewis and Zoitl [...] as well as Vyatkin.|$|E
40|$|Abstract- This paper {{suggests}} a comprehensive engineering framework for software design for component-based distributed industrial automation {{based on the}} combination of UML with the <b>function</b> <b>block</b> concept of the newly emerging international standard IEC 61499. Four UML diagram types have been used, namely: class, sequence, cooperation and state-chart diagrams. The UML design is transformed then to the executable <b>function</b> <b>block</b> specification following the IEC 61499. I...|$|R
5000|$|<b>Function</b> <b>Block</b> Diagram (FBD) - Graphical {{representation}} of the automation task with symbols to DIN 40700/ DIN 40719.|$|R
5000|$|Subapplication: Its {{functionality}} is also {{defined as}} a <b>function</b> <b>block</b> network. In contrast to CFBs, subapplications can be distributed.|$|R
5000|$|Advanced {{regulatory}} control (ARC) refers to several proven advanced control techniques, such as feedforward, override or adaptive gain. ARC {{is also a}} catch-all term {{used to refer to}} any customized or non-simple technique that does not fall into any other category. ARCs are typically implemented using <b>function</b> <b>blocks</b> or custom programming capabilities at the DCS level. In some cases, ARCs reside at the supervisory control computer level.|$|E
5000|$|IEC 61499-1 {{defines the}} {{architecture}} for distributed systems. In IEC 61499 the cyclic execution model of IEC 61131 {{is replaced by}} an event driven execution model. The event driven execution model allows an explicit specification of the execution order of <b>function</b> <b>blocks.</b> If necessary, periodically executed applications can be implemented by using the E_CYCLE function block for the generation of periodic events as described in Annex A of IEC 61499-1.|$|E
5000|$|Like IEC 61131-3 <b>{{function}}</b> <b>blocks,</b> IEC 61499 {{function block}} types specify both an interface and an implementation. In contrast to IEC 61131-3, an IEC 61499 interface contains event {{inputs and outputs}} in addition to data inputs and outputs. Events {{can be associated with}} data inputs and outputs by WITH constraints. IEC 61499 defines several function block types, all of which can contain a behavior description in terms of service sequences: ...|$|E
3000|$|The basic {{implementation}} of the ZMSSD <b>function</b> <b>block</b> computes {{the means of the}} pixel values in a window m [...]...|$|R
5000|$|Service {{interface}} <b>function</b> <b>block</b> - SIFB: The {{source code}} is hidden and its functionality is only described by service sequences.|$|R
5000|$|Trinity Integrated Systems Ltd of Sale, Cheshire 100% {{migration}} of legacy safety PLC ladder logic to industry standard IEC-61131 <b>function</b> <b>block</b> code ...|$|R
