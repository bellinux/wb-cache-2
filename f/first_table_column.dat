0|2015|Public
30|$|Two-column family One column {{family to}} store the <b>first</b> RDB <b>table</b> <b>columns</b> and a second column family {{to store the}} second RDB <b>table</b> <b>columns.</b>|$|R
2500|$|An example {{illustrates}} how Cantor's construction works {{and leads to}} a proof that [...] Consider the sequence: , , , , , , , , , … This sequence is obtained by ordering the rational numbers in (0,nbsp&1) by increasing denominators, ordering those with the same denominator by increasing numerators, and omitting reducible fractions. Since this sequence is dense in , the construction generates infinitely many intervals. The table below shows the first five steps of the construction. The <b>table's</b> <b>first</b> <b>column</b> contains the intervals (an,nbsp&bn). The second column lists the terms visited during {{the search for the}} first two terms in (an,nbsp&bn). These two terms are in red.|$|R
50|$|An example {{illustrates}} how Cantor's construction works {{and leads to}} a proof that xn ∉ (an, bn). Consider the sequence: , , , , , , , , , … This sequence is obtained by ordering the rational numbers in (0, 1) by increasing denominators, ordering those with the same denominator by increasing numerators, and omitting reducible fractions. Since this sequence is dense in 1, the construction generates infinitely many intervals. The table below shows the first five steps of the construction. The <b>table's</b> <b>first</b> <b>column</b> contains the intervals (an, bn). The second column lists the terms visited during {{the search for the}} first two terms in (an, bn). These two terms are in red.|$|R
50|$|Gadfly also {{supports}} the searched DELETE and UPDATE; INSERT VALUES and INSERT subselect; CREATE/DROP INDEX, and DROP TABLE. These have the informal syntax:DELETE FROM table WHERE conditionUPDATE table SET col=expr col=expr... WHERE conditionINSERT INTO <b>table</b> <b>column...)</b> VALUES (value value...)INSERT INTO <b>table</b> <b>column...)</b> subselectCREATE UNIQUE INDEX name ON <b>table</b> (<b>column</b> column...)DROP <b>TABLE</b> tableDROP INDEX nameMultiple statements may be executed in one cursor.execute(S) by separating the statements with semicolons in S, for example S {{might have the}} string value:DROP INDEX tdindex;DROP TABLE templikesSQL is case insensitive.|$|R
50|$|Substantial {{adaptation}} of object (e.g. <b>tables,</b> <b>columns</b> etc.) names.|$|R
5000|$|NIS+ {{implements}} permissions on directories, <b>tables,</b> <b>columns</b> and rows.|$|R
500|$|The <b>table's</b> <b>columns</b> (except for Remarks and Images) are sortable {{pressing}} the arrow symbols.|$|R
50|$|Edit <b>table</b> <b>columns,</b> indexes {{and foreign}} keys. Virtual columns on MariaDB servers are supported.|$|R
500|$|The <b>table's</b> <b>columns</b> (except for Details and Image) are sortable by {{pressing}} the arrow symbols.|$|R
5000|$|RDBMS-OO Mappers: These tools {{attempt to}} map RDBMS data {{structures}} (<b>tables,</b> <b>columns,</b> rows) onto Perl objects.|$|R
50|$|Trapeze, a {{spreadsheet}} on the Mac, went further and explicitly supportednot just <b>table</b> <b>columns,</b> but also matrix operators.|$|R
5000|$|Note: The {{third place}} match was {{abolished}} in 2010. The <b>table's</b> <b>column</b> [...] "Third" [...] display the losing semifinalists from season 2010-11 onwards.|$|R
50|$|Such double-digit {{letters for}} bullet points are AA, BB, CC, etc., {{as opposed to}} the number-like place value system {{explained}} above for <b>table</b> <b>columns.</b>|$|R
30|$|A {{universal}} table [23] contains pre-specified {{number of}} fields. It {{consists of a}} Tenant_id <b>column,</b> a <b>table</b> <b>column</b> and all the data columns. Tenant_id is used to uniquely identify the data of a tenant whereas the <b>table</b> <b>column</b> refers to the id of the table for that tenant. This approach has been originated from Universal Relation where a table holds all the columns from all the tables. This approach {{is relatively easy to}} implement and queries are applied directly to the table.|$|R
50|$|At runtime the {{scenario}} is run against each {{row in the}} <b>table.</b> <b>Column</b> values are substituted {{for each of the}} named placeholders in {{the scenario}}.|$|R
5000|$|Note: The {{third place}} match was {{abolished}} in 2010. The <b>table's</b> <b>column</b> [...] "Third place" [...] display the losing semifinalists from the 2010-11 season onwards.|$|R
40|$|Abstract. This work {{addresses}} disambiguating Web tables- annotating content {{cells with}} named entities and <b>table</b> <b>columns</b> with semantic type information. Con-trary to state-of-the-art that builds features {{based on the}} entire table content, this work uses a method that starts by annotating <b>table</b> <b>columns</b> using automatically selected partial data (i. e., a sample), then using the type information to guide content cell disambiguation. Different sample selection methods are introduced and tested {{to show that they}} contribute to higher accuracy in cell disambiguation, comparable accuracy in column type annotation with reduced computation. ...|$|R
5|$|The <b>table's</b> <b>columns</b> (except for Images) are sortable {{pressing}} the arrows symbols. The following gives {{an overview of}} what {{is included in the}} table and how the sorting works.|$|R
5000|$|... {{visibility}} [...] - [...] Prior to 2.5, {{the value}} [...] was unsupported in <b>table</b> <b>columns.</b> On rows, {{it had the}} same effect as [...] and was therefore not compliant.|$|R
50|$|The <b>table's</b> <b>columns</b> (except for Remarks and Images) are sortable by table headings. The {{following}} {{gives an}} overview of what {{is included in the}} table and how the sorting works.|$|R
50|$|Note (8): Java array {{size limit}} of 2,147,483,648 (231) objects per array applies. This limit applies to number of {{characters}} in names, rows per <b>table,</b> <b>columns</b> per <b>table,</b> and characters per /.|$|R
5000|$|Time Period {{definitions}} use two standard <b>table</b> <b>columns</b> as {{the start}} and end of a named time period, with closed-open semantics. This provides compatibility with existing data models, application code, and tools ...|$|R
50|$|This is a {{particularly}} useful and widely used notation for labelling the axes of graphs or for the headings of <b>table</b> <b>columns,</b> where repeating the unit after each numerical value can be typographically inconvenient.|$|R
30|$|From the <b>table’s</b> <b>first</b> four <b>columns</b> {{we observe}} that Auchan {{is the only}} {{supermarket}} that have occupied the first quartile for the entire study period; in other words, it was always among the lowest-priced stores. Mercadona was located in the two first quartiles for almost {{two thirds of the}} period. At the other extreme, Eroski was the most expensive supermarket 88 % of the time and El Corte Inglés was among the least expensive only 2.7 % of the time. Carrefour was usually located in the second quartile, and Condis was most often located in the third quartile. Looking at the distribution of utilities (last four <b>columns</b> of the <b>table),</b> we can see that there is less concentration in particular quartiles because the distribution of utilities is more spread out. These observed patterns support the notion that price dispersion is due to mixed strategies in combination with chain heterogeneity. In other words, each chain has its own price distribution from which to draw and—depending on the extent of firm heterogeneity—the respective supports of those distributions may overlap.|$|R
30|$|Note: Table {{reports the}} means of {{variables}} listed in the <b>table.</b> <b>Column</b> (1) reports the means for the sample of firms in Malaysia and column (2) reports the means for the sample of firms in Thailand.|$|R
50|$|The {{table lists}} the {{original}} Class 6E1 number, series and year built for each Class 18E, Series 1 locomotive, {{as well as}} the year it was rebuilt to Class 18E. All the <b>table</b> <b>columns</b> are sortable.|$|R
30|$|We {{study how}} a {{standard}} clustering heuristic {{on a single}} relaxation attribute (that is, <b>table</b> <b>column)</b> can induce a horizontal fragmentation of a database table; in [2] a taxonomy-based fragmentation was used instead of a clustering-based fragmentation.|$|R
50|$|The {{standard}} has {{two main}} purposes: definition and exchange. The core object is the data element concept, since it defines a concept and, ideally, describes data independent of its representation {{in any one}} system, <b>table,</b> <b>column</b> or organisation.|$|R
5000|$|Logical schema: {{describes}} {{the structure of}} some domain of information. This consists of descriptions of (for example) <b>tables,</b> <b>columns,</b> object-oriented classes, and XML tags. The logical schema and conceptual schema are sometimes implemented as one and the same.|$|R
5|$|The <b>table's</b> <b>columns</b> (except for Remarks, Type and Image) are sortable {{pressing}} the arrows symbols. The following gives {{an overview of}} what {{is included in the}} table and how the sorting works. Not all tables have all of the following columns.|$|R
30|$|The {{respondents}} {{hold that}} with a single ASM in the upper orbit, the constellation will operate with a probability of half for more than 6 years (<b>Table</b> 3, <b>column</b> 5) {{but not more than}} 8 years (<b>Table</b> 2, <b>column</b> 5).|$|R
5|$|The <b>table's</b> <b>columns</b> (except for Remarks and Design and material) are sortable {{pressing}} the arrows symbols. The following gives {{an overview of}} what {{is included in the}} table and how the sorting works. Not all tables have all of the following columns.|$|R
30|$|The method k-anonymity {{suppresses}} <b>table</b> <b>columns</b> {{or replace}} them for keeping each E {{with at least}} k registers. It seems safe, but only 4 points marking the position on the time are enough to identify uniquely 95 % of the cellphone users [190].|$|R
5000|$|Main <b>table</b> <b>columns</b> are {{typically}} {{the source of}} query constraints, as opposed to dimension tables in the classical star schema. By starting queries with the smaller table, many results are filtered out early in the querying process, thereby streamlining the entire search path.|$|R
2500|$|This {{fascination with}} Combinatorics (a {{mechanical}} means {{of determining the}} possible permutations [...] and range {{of a series of}} concepts by arrangement in <b>tables,</b> <b>columns,</b> triangular and circular charts [...] ) was fueled by Kuhlmann's discovery of 'Ars magna sciendi sive Combinatorics '(1669) by Athanasius Kircher.|$|R
50|$|Entities and {{attributes}} are abstract {{counterparts to}} <b>tables</b> and <b>table</b> <b>columns</b> in a database. In {{addition to the}} properties which are needed to define a database table, further properties of entities and attributes can be set to create compatibility to Java and Macromedia Flex.|$|R
