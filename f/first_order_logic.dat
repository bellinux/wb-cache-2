1301|10000|Public
5|$|As a {{consequence}} of bounded expansion, the subgraph isomorphism problem, of finding whether a pattern graph of bounded size exists as a subgraph of a larger graph, can be solved in linear time when the larger graph has bounded book thickness. The {{same is true for}} detecting whether the pattern graph is an induced subgraph of the larger graph, or whether it has a graph homomorphism to the larger graph. For the same reason, the problem of testing whether a graph of bounded book thickness obeys a given formula of <b>first</b> <b>order</b> <b>logic</b> is fixed-parameter tractable.|$|E
25|$|Bounded local treewidth {{is closely}} related to the {{algorithmic}} theory of bidimensionality, and every graph property definable in <b>first</b> <b>order</b> <b>logic</b> can be decided for an apex-minor-free graph family in an amount of time that is only slightly superlinear.|$|E
25|$|Expressive adequacy. The {{standard}} that Brachman and most AI researchers use to measure expressive adequacy is usually <b>First</b> <b>Order</b> <b>Logic</b> (FOL). Theoretical limitations {{mean that a}} full implementation of FOL is not practical. Researchers should be clear about how expressive (how much of full FOL expressive power) they intend their representation to be.|$|E
5000|$|Proof of the undecidability of <b>first</b> <b>order</b> {{predicate}} <b>logic</b> (Church's theorem 1936) ...|$|R
5000|$|Per Lindström, <b>First</b> <b>Order</b> Predicate <b>Logic</b> with Generalized Quantifiers, Theoria 32, 1966, 186-195.|$|R
5000|$|Proof of the {{semantic}} completeness of <b>first</b> <b>order</b> predicate <b>logic</b> (Gödel's completeness theorem 1930) ...|$|R
25|$|The {{formation}} rules {{define the}} terms and formulas of <b>first</b> <b>order</b> <b>logic.</b> When terms and formulas are represented as strings of symbols, these rules {{can be used to}} write a formal grammar for terms and formulas. These rules are generally context-free (each production has a single symbol on the left side), except that the set of symbols may be allowed to be infinite and there may be many start symbols, for example the variables in the case of terms.|$|E
25|$|Set {{theory as}} a {{foundation}} for mathematical analysis, topology, abstract algebra, and discrete mathematics is likewise uncontroversial; mathematicians accept that (in principle) theorems in these areas can be derived from the relevant definitions and the axioms of set theory. Few full derivations of complex mathematical theorems from set theory have been formally verified, however, because such formal derivations are often much longer than the natural language proofs mathematicians commonly present. One verification project, Metamath, includes human-written, computer‐verified derivations of more than 12,000 theorems starting from ZFC set theory, <b>first</b> <b>order</b> <b>logic</b> and propositional logic.|$|E
25|$|Logic {{sentences}} {{that can be}} expressed in classical propositional calculus have an equivalent expression in Boolean algebra. Thus, Boolean logic is sometimes used to denote propositional calculus performed in this way. Boolean algebra {{is not sufficient to}} capture logic formulas using quantifiers, like those from <b>first</b> <b>order</b> <b>logic.</b> Although the development of mathematical logic did not follow Boole's program, the connection between his algebra and logic was later put on firm ground in the setting of algebraic logic, which also studies the algebraic systems of many other logics. The problem of determining whether the variables of a given Boolean (propositional) formula can be assigned {{in such a way as}} to make the formula evaluate to true is called the Boolean satisfiability problem (SAT), and is of importance to theoretical computer science, being the first problem shown to be NP-complete. The closely related model of computation known as a Boolean circuit relates time complexity (of an algorithm) to circuit complexity.|$|E
5000|$|Per Lindström, <b>First</b> <b>Order</b> Predicate <b>Logic</b> with Generalized Quantifiers, Theoria 32, 1966, 186-195. (Lindström quantifiers) ...|$|R
5000|$|Proof of the {{consistency}} of <b>first</b> <b>order</b> predicate <b>logic</b> (David Hilbert and Wilhelm Ackermann 1928) ...|$|R
5000|$|M. Makkai, G. E. Reyes: <b>First</b> <b>Order</b> Categorical <b>Logic,</b> Lecture Notes in Mathematics, 611, Springer, 1977, viii+301 pp.|$|R
25|$|Primitives. What is the {{underlying}} framework {{used to represent}} knowledge? Semantic networks {{were one of the}} first knowledge representation primitives. Also, data structures and algorithms for general fast search. In this area there is a strong overlap with research in data structures and algorithms in computer science. In early systems the Lisp programming language which was modeled after the lambda calculus was often used as a form of functional knowledge representation. Frames and Rules were the next kind of primitive. Frame languages had various mechanisms for expressing and enforcing constraints on frame data. All data in frames are stored in slots. Slots are analogous to relations in entity-relation modeling and to object properties in object-oriented modeling. Another technique for primitives is to define languages that are modeled after <b>First</b> <b>Order</b> <b>Logic</b> (FOL). The most well known example is Prolog but there are also many special purpose theorem proving environments. These environments can validate logical models and can deduce new theories from existing models. Essentially they automate the process a logician would go through in analyzing a model. Theorem proving technology had some specific practical applications in the areas of software engineering. For example, it is possible to prove that a software program rigidly adheres to a formal logical specification.|$|E
500|$|... 2-satisfiability is NL-complete, {{meaning that}} {{it is one of}} the [...] "hardest" [...] or [...] "most expressive" [...] {{problems}} in the complexity class NL of problems solvable nondeterministically in logarithmic space. Completeness here means that a deterministic Turing machine using only logarithmic space can transform any other problem in NL into an equivalent 2-satisfiability problem. [...] Analogously to similar results for the more well-known complexity class NP, this transformation together with the Immerman–Szelepcsényi theorem allow any problem in NL to be represented as a second order logic formula with a single existentially quantified predicate with clauses limited to length 2. Such formulae are known as SO-Krom. [...] Similarly, the implicative normal form can be expressed in <b>first</b> <b>order</b> <b>logic</b> with the addition of an operator for transitive closure.|$|E
2500|$|The first {{proposition}} is {{the only}} one whose domain of quantification is unrestricted ("all objects"), so this {{is the only}} one that can be expressed in <b>first</b> <b>order</b> <b>logic.</b> It is logically equivalent to: ...|$|E
40|$|A {{construction}} {{principle for}} natural deduction systems for arbitrary finitely-many-valued <b>first</b> <b>order</b> <b>logics</b> is exhibited. These systems are systematically obtained from sequent calculi, {{which in turn}} can be automatically extracted from the truth tables of the logics under consideration. Soundness and cut-free completeness of these sequent calculi translate into soundness, completeness and normal form theorems for the natural deduction systems. ...|$|R
40|$|Abstract. In {{this paper}} we {{emphasize}} {{the links between}} model theory and tilings. More precisely, after giving the definitions of what tilings are, we give a natural way to have {{an interpretation of the}} tiling rules in <b>first</b> <b>order</b> <b>logics.</b> This opens the way to map some model theoretical properties onto some properties of sets of tilings, or tilings themselves. 1...|$|R
40|$|The {{overall goal}} {{of this paper is}} to {{investigate}} the theoretical foundations of algorithmic verification techniques for <b>first</b> <b>order</b> linear <b>logic</b> specifications. The fragment of linear logic we consider in this paper is based on the linear logic programming language called LO (Andreoli and Pareschi 1990) enriched with universally quantified goal formulas. Although LO was originally introduced as a theoretical foundation for extensions of logic programming languages, it can also be viewed as a very general language to specify a wide range of infinite-state concurrent systems (Andreoli 1992; Cervesato 1995). Our approach is based on the relation between backward reachability and provability highlighted in our previous work on propositional LO programs (Bozzano et al. 2002). Following this line of research, we define here a general framework for the bottom-up evaluation of <b>first</b> <b>order</b> linear <b>logic</b> specifications. The evaluation procedure is based on an effective fixpoint operator working on a symbolic representation of infinite collections of <b>first</b> <b>order</b> linear <b>logic</b> formulas. The theory of well quasi-orderings (Abdulla et al. 1996; Finkel and Schnoebelen 2001) can be used to provide sufficient conditions for the termination of the evaluation of non trivial fragments of <b>first</b> <b>order</b> linear <b>logic...</b>|$|R
2500|$|A key {{trade-off}} in {{the design}} of a knowledge representation formalism is that between expressivity and practicality. The ultimate knowledge representation formalism in terms of expressive power and compactness is <b>First</b> <b>Order</b> <b>Logic</b> (FOL). [...] There is no more powerful formalism than that used by mathematicians to define general propositions about the world. However, FOL has two drawbacks as a knowledge representation formalism: [...] ease of use and practicality of implementation. [...] <b>First</b> <b>order</b> <b>logic</b> can be intimidating even for many software developers. Languages which do not have the complete formal power of FOL can still provide close to the same expressive power with a user interface that is more practical for the average developer to understand. The issue of practicality of implementation is that FOL in some ways is too expressive. With FOL it is possible to create statements (e.g. quantification over infinite sets) that would cause a system to never terminate if it attempted to verify them.|$|E
2500|$|The second notion {{was derived}} from work in {{predicate}} calculus (predicate logic, <b>first</b> <b>order</b> <b>logic)</b> and is prominent in modern theories of syntax and grammar. In this approach, the predicate of a sentence mostly corresponds to the main verb and any auxiliaries that accompany the main verb; whereas the arguments of that predicate (e.g. the subject [...] and object noun phrases) are outside the predicate.|$|E
2500|$|Skolem {{used the}} term [...] "relative" [...] to {{describe}} this state of affairs, where the same set is included in two models of set theory, is countable in one model, and is not countable in the other model. He described this as the [...] "most important" [...] result in his paper. Contemporary set theorists describe concepts that do {{not depend on the}} choice of a transitive model as absolute. From their point of view, Skolem's paradox simply shows that countability is not an absolute property in <b>first</b> <b>order</b> <b>logic.</b> (Kunen 1980 p.141; Enderton 2001 p.152; Burgess 1977 p.406).|$|E
40|$|A {{language}} L over an alphabet A {{is said to}} have {{a neutral}} letter if there is a letter e # A such that inserting or deleting e's from any word in A # does not change its membership (or non [...] membership) in L. The presence of a neutral letter affects the definability of a language in <b>first</b> [...] <b>order</b> <b>logic.</b> It was conjectured that it renders all numerical predicates apart from the order predicate useless, i. e., that if a language L with a neutral letter is not definable in <b>first</b> [...] <b>order</b> <b>logic</b> with linear <b>order,</b> then it is not definable in <b>first</b> [...] <b>order</b> <b>logic</b> with any set N of numerical predicates. We investigate this conjecture in detail, showing that it fails already for N = {+, #}, or, possibly stronger, for any set N that allows counting up to the m times iterated logarithm, lg (m), for any constant m. On the positive side, we prove the conjecture for the case of all monadic numerical predicates, for N = {+}, for the fragment BC(# 1) of <b>first</b> [...] <b>order</b> <b>logic,</b> and for binary alphabets. # Supported by NSF grant CCR- 9988260. + Supported by NSF grant CCR- 9877078. # Supported by NSERC and FCAR. ...|$|R
40|$|ISBN 978 - 5 - 94057 - 377 - 7 International audienceIn {{this paper}} we {{emphasize}} {{the links between}} model theory and tilings. More precisely, after giving the definitions of what tilings are, we give a natural way to have {{an interpretation of the}} tiling rules in <b>first</b> <b>order</b> <b>logics.</b> This opens the way to map some model theoretical properties onto some properties of sets of tilings, or tilings themselves...|$|R
40|$|We {{exhibit a}} {{construction}} principle for natural deduction systems for arbitrary finitely-many-valued <b>first</b> <b>order</b> <b>logics.</b> These systems are systematically obtained from sequent calculi, {{which in turn}} can be extracted from the truth tables of the logics under consideration. Soundness and cut-free completeness of these sequent calculi translate into soundness, completeness and normal form theorems for the natural deduction systems. Keywords: Many-valued logic, natural deduction, sequent calculus, normal form, cut-free derivation...|$|R
2500|$|Second-order {{arithmetic}} {{can refer}} to a first order theory (in spite of the name) with two types of variables, thought of as varying over integers and subsets of the integers. (There is also a theory of arithmetic in second order logic that is called second order arithmetic. It has only one model, unlike the corresponding theory in <b>first</b> <b>order</b> <b>logic,</b> which is incomplete.) The signature will typically be the signature 0, S, +, [...] of arithmetic, together with a membership relation [...] between integers and subsets (though there are numerous minor variations). [...] The axioms are those of Robinson arithmetic, together with axiom schemes of induction and comprehension.|$|E
2500|$|However, in the 1960s Abraham Robinson {{showed how}} {{infinitely}} large and infinitesimal numbers can be rigorously defined {{and used to}} develop the field of non-standard analysis. Robinson developed his theory nonconstructively, using model theory; however {{it is possible to}} proceed using only algebra and topology, and proving the transfer principle {{as a consequence of the}} definitions. In other words hyperreal numbers per se, aside from their use in nonstandard analysis, have no necessary relationship to model theory or <b>first</b> <b>order</b> <b>logic,</b> although they were discovered by the application of model theoretic techniques from logic. [...] Hyper-real fields were in fact originally introduced by Hewitt (1948) by purely algebraic techniques, using an ultrapower construction.|$|E
2500|$|Quine's {{set theory}} and its {{background}} logic were {{driven by a}} desire to minimize posits; each innovation is pushed as far as it can be pushed before further innovations are introduced. For Quine, there is but one connective, the Sheffer stroke, and one quantifier, the universal quantifier. All polyadic predicates can be reduced to one dyadic predicate, interpretable as set membership. His rules of proof were limited to modus ponens and substitution. He preferred conjunction to either disjunction or the conditional, because conjunction has the least semantic ambiguity. He was delighted to discover early in his career that all of <b>first</b> <b>order</b> <b>logic</b> and set theory could be grounded in a mere two primitive notions: abstraction and inclusion. For an elegant introduction to the parsimony of Quine's approach to logic, see his [...] "New Foundations for Mathematical Logic," [...] ch. 5 in his From a Logical Point of View.|$|E
40|$|In this paper, {{we present}} AiC+, an {{extension}} of the AiC framework designed for the explanation of human actions especially in the environmental field. We use <b>first</b> <b>order</b> <b>logics</b> to describe the semantics used to explain the action selection of the agent (actor) using an agent hierarchy system and a fuzzy typing relation. An example is illustrated using the AiC+ to validate the framework and discuss possible future extensions to the framework...|$|R
40|$|Services, respectively, {{to process}} {{information}} provided on the Web automatically. For this purpose, languages for representing the semantics of data {{by means of}} ontologies have been proposed such as RDF(S) and OWL. While the semantics of RDF(S) requires a non-standard model-theory that goes beyond <b>first</b> <b>order</b> <b>logics,</b> OWL is intended to model subsets of <b>first</b> <b>order</b> <b>logics.</b> OWL consists of three variants that are layered on each other. The less expressive variants OWL-Light and OWL-DL correspond to the Description Logics SHIF(D) and SHOIN (D) [1], respectively, and thus to subsets of <b>First</b> <b>Order</b> <b>Logics</b> [2]. While RDF and OWL are W 3 C recommendations and hence a kind of standard, a lot of proposals emerged recently for representing Logic Programming (LP) variants on the Web. Such proposals are e. g. SWRL 1 and WRL 2. Furthermore, a working group exists at the W 3 C for defining a rule interchange format 3. Therefore, it can be expected that rule languages will {{play an important role}} in the SW. The Description Logics (DL) and the LP paradigm are orthogonal having just a small subset in common [3] and a comparison reveals a balanced amount of advantages and disadvantages of one compared to the other e. g. concerning the efficience of certain reasoning tasks [4]. The SW will consist of independent peers each providing information that describes overlapping domains by different ontologies or logic programs specified in different knowledge representation languages of the DL and the LP paradigm. In order to enable intelligent software tools to utilize the information represented by these peers in a coherent manner, the ontologies and logic programs need to be aligned by means of mappings. An number of approaches for learning mappings between ontologies exist already [5]. Most of them detect very simple matchings and can be used for learning mappings between ontologies and logic programs as well...|$|R
40|$|Kamp's theorem {{states that}} there is a {{temporal}} logic with two modalities ("until" and "since") which is expressively complete for the <b>first</b> <b>order</b> monadic <b>logic</b> of <b>order</b> over the real line. In this paper we show {{that there is}} no temporal logic with finitely many modalities which is expressively complete for the future fragment of <b>first</b> <b>order</b> monadic <b>logic</b> of <b>order</b> over the real line (a future formula over the real time line is a formula whose truth value at a point is independent of what happened in the past) ...|$|R
50|$|Rete {{supports}} only boolean, <b>first</b> <b>order</b> <b>logic.</b>|$|E
50|$|Propositional {{variables}} are represented as nullary predicates in <b>first</b> <b>order</b> <b>logic.</b>|$|E
5000|$|EFA is {{a system}} in <b>first</b> <b>order</b> <b>logic</b> (with equality). Its {{language}} contains: ...|$|E
5000|$|Proof of the {{consistency}} of <b>first</b> <b>order</b> monadic predicate <b>logic</b> (Leopold Löwenheim 1915) ...|$|R
40|$|An {{interpretation}} of star free expressions over the reals is provided. The expressive power of star free expressions {{is compared to}} the expressive power of monadic first-order <b>logic</b> of <b>order</b> over the reals. It is proved that these formalisms have the same expressive power. This result provides a generalization of the classical McNaughton Papert theorem [3] from the finite orders {{to the order of}} the reals. 1 Introduction A fundamental theorem due to McNaughton and Papert [3] states that a regular language is definable by a star free expression if and only if it is definable in <b>first</b> <b>order</b> monadic <b>logic</b> of <b>order.</b> This theorem was extended to !-regular languages in Ladner [2] and Thomas [9]. Moreover, more refined results were obtained in Thomas [10] and in Perrin and Pin [4], which show the correspondence between fragments of monadic <b>first</b> <b>order</b> <b>logics</b> and dot-depth hierarchy of star free expressions. The above results deal with discrete (time) linear orders. In this paper an interpreta [...] ...|$|R
5000|$|Proof of the {{semantic}} completeness of <b>first</b> <b>order</b> monadic predicate <b>logic</b> (Leopold Löwenheim 1915) ...|$|R
