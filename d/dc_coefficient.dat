67|264|Public
2500|$|The {{previous}} quantized <b>DC</b> <b>coefficient</b> is used {{to predict}} the current quantized <b>DC</b> <b>coefficient.</b> The {{difference between the two}} is ...|$|E
2500|$|For example, using −415 (the <b>DC</b> <b>coefficient)</b> and {{rounding}} to {{the nearest}} integer ...|$|E
2500|$|Taking the DCT {{coefficient}} matrix (after {{adding the}} difference of the <b>DC</b> <b>coefficient</b> back in) ...|$|E
5000|$|In JPEG, {{the image}} <b>DC</b> <b>coefficients</b> of the DCT blocks are {{predicted}} by applying DC prediction {{from the left}} neighbor transform block, and no other coeffients are predicted. In JPEG XR, 4 × 4 blocks are grouped into macroblocks of 16 × 16 samples, and the 16 <b>DC</b> <b>coefficients</b> from the 4 × 4 blocks of each macroblock are passed through another level of frequency transformation, leaving three types of coefficients to be entropy coded: the macroblock <b>DC</b> <b>coefficients</b> (called <b>DC),</b> macroblock-level AC <b>coefficients</b> (called [...] "lowpass"), and lower-level AC coefficients (called AC). Prediction of coefficient values across transform blocks {{is applied to the}} <b>DC</b> <b>coefficients</b> and to an additional row or column of AC coefficients as well.|$|R
50|$|The <b>DC</b> <b>coefficients</b> {{and motion}} vectors are DPCM-encoded.|$|R
30|$|Replace the LSBs of {{the first}} <b>DC</b> <b>coefficients</b> with the side information.|$|R
2500|$|Note the top-left corner entry {{with the}} rather large magnitude. This is the <b>DC</b> <b>coefficient</b> (also called the {{constant}} component), which defines the basic hue {{for the entire}} block. The remaining 63 coefficients are the AC coefficients (also called the alternating components). [...] The advantage of the DCT is its tendency to aggregate most of the signal {{in one corner of}} the result, as may be seen above. The quantization step to follow accentuates this effect while simultaneously reducing the overall size of the DCT coefficients, resulting in a signal that is easy to compress efficiently in the entropy stage.|$|E
2500|$|Before {{computing}} the DCT of the 8×8 block, {{its values}} are shifted from a positive range to one centered on zero. For an 8-bit image, each {{entry in the}} original block falls in the range [...] The midpoint of the range (in this case, the value 128) is subtracted from each entry to produce a data range that is centered on zero, so that the modified range is [...] This step reduces the dynamic range requirements in the DCT processing stage that follows. (Aside from the difference in dynamic range within the DCT stage, this step is mathematically equivalent to subtracting 2048 from the <b>DC</b> <b>coefficient</b> after performing the transform– which {{may be a better}} way to perform the operation on some architectures since it involves performing only one subtraction rather than 64 of them.) ...|$|E
50|$|The {{previous}} quantized <b>DC</b> <b>coefficient</b> is used {{to predict}} the current quantized <b>DC</b> <b>coefficient.</b> The {{difference between the two}} isencoded rather than the actual value. The encoding of the 63 quantized AC coefficients does not use such prediction differencing.|$|E
40|$|A novel image {{clustering}} algorithm {{was proposed}} in compressed domain. Firstly, DCT <b>coefficients</b> and <b>DC</b> <b>coefficients</b> are extracted from image consequences and an Information System is achieved by using <b>DC</b> <b>coefficients.</b> Secondly, Information System is reduced by introducing reduction theory of Rough Sets (RS), so the concise representation of the image is obtained by reduced <b>DC</b> <b>coefficients.</b> Finally, by introducing subdividing theory of RS, the image is clustered objectively. Based on the experimental results obtained in this study, the proposed algorithm enjoys following advantages. (1) the image is processed in compressed domian, the computing complexity is decrease. (2) RS is introduced to preprepare the image data, the effectiveness is enhanced...|$|R
3000|$|Hadamard {{transform}} to decorrelate the <b>DC</b> <b>coefficients</b> {{before the}} quantization process (see [32] for details).|$|R
40|$|In this study, {{we propose}} a novel key frame {{extraction}} algorithm based on Rough Sets (RS) in Discrete Cosine Transform (DCT) compressed-domain. Firstly, we extract DCT coefficients in compressed-domain, select and preprocess the <b>DC</b> <b>coefficients</b> that derived from DCT coefficients. Secondly, We construct Information System with <b>DC</b> <b>coefficients.</b> Finally, we reduce Information System using attributes reduced theory of RS and obtained {{the representation of}} the video frames by reduced <b>DC</b> <b>coefficients.</b> Experimental results show that the proposed algorithm is fast and effective. Compared to conventional algorithm, our algorithm enjoys the following advantages: (1) the numbers of the key frame extracted using our algorithm become more scientific; (2) the algorithm can avoid the expensive computations in decompression processes...|$|R
50|$|Since the <b>DC</b> <b>coefficient</b> {{value is}} {{statistically}} correlated from one block to the next, it is compressed using DPCM encoding. Only the (smaller) amount {{of difference between}} each DC value {{and the value of}} the <b>DC</b> <b>coefficient</b> in the block to its left needs to be represented in the final bitstream.|$|E
5000|$|For example, using −415 (the <b>DC</b> <b>coefficient)</b> and {{rounding}} to {{the nearest}} integer ...|$|E
5000|$|Taking the DCT {{coefficient}} matrix (after {{adding the}} difference of the <b>DC</b> <b>coefficient</b> back in) ...|$|E
30|$|<b>DC</b> <b>coefficients</b> {{from each}} block of the {{visually}} protected JPEG bitstream are extracted {{to generate the}} DC image.|$|R
30|$|As {{described}} in “DCT based scrambling”, block-based scrambling of the DCT coefficients {{was performed to}} produce visually protected images. For simplicity, we scrambled only blocks of AC coefficients while preserving the original position of the <b>DC</b> <b>coefficients.</b> The size of the DC images, constructed using the <b>DC</b> <b>coefficients</b> of the protected images, was 64  ×  64 pixels. These protected images and thumbnails were assumed to be stored on the same server.|$|R
3000|$|Replace the LSBs of the <b>DC</b> <b>coefficients</b> {{with the}} {{original}} values (which were extracted along with the payload) [...]...|$|R
50|$|The FDCT process {{converts}} the 8x8 {{block of}} uncompressed pixel values (brightness or color difference values) into an 8x8 indexed array of frequency coefficient values. One {{of these is}} the (statistically high in variance) <b>DC</b> <b>coefficient,</b> which represents the average value of the entire 8x8 block. The other 63 coefficients are the statistically smaller AC coefficients, which are positive or negative values each representing sinusoidal deviations from the flat block value represented by the <b>DC</b> <b>coefficient.</b>|$|E
50|$|Unfortunately, most long-distance {{communication}} channels cannot reliably transport a DC component. The DC component is {{also called the}} disparity, the bias, or the <b>DC</b> <b>coefficient.</b> The simplest possible line code, unipolar, gives too many errors on such systems, because it has an unbounded DC component.|$|E
50|$|When {{describing}} a periodic {{function in the}} time domain, the DC bias, DC component, DC offset, or <b>DC</b> <b>coefficient</b> is the mean value of the waveform. If the mean amplitude is zero, there is no DC offset. A waveform without a DC component {{is known as a}} DC-balanced or DC-free waveform.|$|E
40|$|Arrangements for {{recording}} and reproducing datareduced videoinformation are described. The recording arrangement comprises a datareduction unit (3) and a formatting unit (4). The formatting unit (4) generates packets (Pi) each having a first, {{second and third}} packet portion (PP 1, PP 2 and PP 3). The first packet portion comprises a sync word (SW) and an identification word. The second packet portion comprises datareduced videoinformation of a first and a second datablock (MB 0, MB 1). A datablock comprises <b>DC</b> <b>coefficients</b> (DCi) and most significant and least significant AC coefficients (MACi, LACi). The videoinformation comprised {{in the first and}} the second datablock are stored in the second packet portion (PP 2), such that the <b>DC</b> <b>coefficients</b> of the first datablock (DC 0) are stored first, the plurality of most significant AC coefficients (MAC 0) of the first datablock are stored next, the <b>DC</b> <b>coefficients</b> of the second datablock (DC 1) are stored last in the second packet portion, and the plurality of most significant AC coefficients (MAC 1) of the second datablock are stored before the <b>DC</b> <b>coefficients</b> of the second datablock in the second packet portion. This enables an improved reproduction of the videosignal in a feature mode...|$|R
30|$|Visual {{degradation}}: high-visual degradation is achieved. Indeed, most of {{the image}} energy is concentrated in <b>DC</b> <b>coefficients,</b> thus, encrypting them affects considerably the image content.|$|R
3000|$|... into nonoverlapped 8 × 8 {{blocks of}} pixels and process DCT, {{quantization}} and rounding as presented in (16). Remove <b>DC</b> <b>coefficients.</b> Obtain a', a [...]...|$|R
5000|$|The level (magnitude) of non-zero {{coefficients}} {{tends to}} be higher {{at the start of}} the reordered array (near the <b>DC</b> <b>coefficient)</b> and lower towards the higher frequencies. CAVLC takes advantage of this by adapting the choice of VLC look-up table for the “level” parameter depending on recently coded level magnitudes.|$|E
5000|$|Note the top-left corner entry {{with the}} rather large magnitude. This is the <b>DC</b> <b>coefficient</b> (also called the {{constant}} component), which defines the basic hue {{for the entire}} block. The remaining 63 coefficients are the AC coefficients (also called the alternating components). [...] The advantage of the DCT is its tendency to aggregate most of the signal {{in one corner of}} the result, as may be seen above. The quantization step to follow accentuates this effect while simultaneously reducing the overall size of the DCT coefficients, resulting in a signal that is easy to compress efficiently in the entropy stage.|$|E
5000|$|Before {{computing}} the DCT of the 8×8 block, {{its values}} are shifted from a positive range to one centered on zero. For an 8-bit image, each {{entry in the}} original block falls in the range [...] The midpoint of the range (in this case, the value 128) is subtracted from each entry to produce a data range that is centered on zero, so that the modified range is [...] This step reduces the dynamic range requirements in the DCT processing stage that follows. (Aside from the difference in dynamic range within the DCT stage, this step is mathematically equivalent to subtracting 2048 from the <b>DC</b> <b>coefficient</b> after performing the transform - which {{may be a better}} way to perform the operation on some architectures since it involves performing only one subtraction rather than 64 of them.) ...|$|E
3000|$|Read the LSBs of {{the first}} 81 <b>DC</b> <b>coefficients</b> to extract the payload size and the {{positions}} of the AC coefficients used for embedding [...]...|$|R
40|$|It is {{a common}} {{approach}} for JPEG and MPEG encryption systems to provide higher protection for <b>dc</b> <b>coefficients</b> and less protection for ac coefficients. Some authors have employed a cryptographic encryption algorithm for the <b>dc</b> <b>coefficients</b> and left the ac coefficients to techniques based on random permutation lists which {{are known to be}} weak against known-plaintext and chosen-ciphertext attacks. In this paper we show that in block-based DCT, it is possible to recover <b>dc</b> <b>coefficients</b> from ac coefficients with reasonable image quality and show the insecurity of image encryption methods which rely on the encryption of dc values using a cryptoalgorithm. The method proposed in this paper combines dc recovery from ac coefficients and the fact that ac coefficients can be recovered using a chosen ciphertext attack. We demonstrate that a method proposed by Tang to encrypt and decrypt MPEG video can be completely broken...|$|R
30|$|Error tolerance: the {{proposed}} algorithm is not tolerant to errors that occur at <b>DC</b> <b>coefficients.</b> The avalanche effect of DES in CBC mode causes important error propagation.|$|R
3000|$|... be {{a random}} {{variable}} representing an integer transform coefficient, {{which can be}} either uniform (for a <b>DC</b> <b>coefficient)</b> or Laplacian/Cauchy (for an AC coefficient).|$|E
40|$|Abstract: When {{encryption}} and authentication {{techniques are}} applied to image or video data, sometimes it is advanta-geous to limit the operation to the DC DCT coefficient of each 8 × 8 block in a picture. In this work, the performance of such an approach is evaluated. This problem is considered as an image quality problem, and the metric structural similarity is used to show that by authenticating the <b>DC</b> <b>coefficient,</b> about 60 % of the information can be guaranteed; by encrypting the <b>DC</b> <b>coefficient,</b> about 80 % of the information can be hindered. ...|$|E
30|$|In 1996, Cox et al. [14] {{advised that}} the {{watermark}} should be {{embedded in the}} low-frequency coefficients of DCT domain to ensure the robustness. To improve this method, Lu et al. [15] used a cocktail watermark to increase robustness and HVS to maintain high fidelity of the watermarked image. Barni and Hsu [16, 17], respectively, recommended that the watermark should be embedded in the middle frequency coefficients to reduce the distortion. But Huang et al. in [18] {{points out that the}} <b>DC</b> <b>coefficient</b> is more proper to be used for embedding watermark, and this conclusion is obtained based on his robustness test between the <b>DC</b> <b>coefficient</b> and two low-frequency coefficients.|$|E
40|$|Abstract — A new blind gray-level {{watermarking}} {{scheme is}} described. In the proposed method, the host image is first divided into 4 × 4 non-overlapping blocks. For each block, two first AC coefficients of its Hadamard transform are then estimated using <b>DC</b> <b>coefficients</b> of its neighbor blocks. A gray-level watermark is then added into estimated values. Since embedding watermark {{does not change}} the <b>DC</b> <b>coefficients,</b> watermark extracting could be done by estimating AC coefficients and comparing them with their actual values. Several experiments are made and results suggest the robustness of the proposed algorithm...|$|R
40|$|JPEG is {{a common}} image format in the WWW and can {{potentially}} be used to hide data for secure internet communication and watermark for copyright control. In this paper, we propose an algorithm to embed the secret or watermark information. The proposed algorithm, named Watermarking by <b>DC</b> <b>Coefficients</b> Modification (WDCM), assumes that the quality factor used in JPEG compression is known. We observe that it is perceptually undetectable if the <b>DC</b> <b>coefficients</b> in certain texture-rich blocks are modified by a small amount. We thus embed the secret information as a binary bit sequence in the quantized <b>DC</b> <b>coefficients</b> in those texture rich blocks. The watermark embedding process can be applied in compression domain without re-encode the data. The information bits are randomized by some pseudo-random noise (PN) sequences, the keys of which are needed for the decoding of the secret information. By embedding {{the information in the}} DC components, the proposed algorithm is robust to common JPEG compression if the quality factor is known. 1...|$|R
40|$|Digital {{watermarking}} algorithms are prune {{to different}} attacks. Of these geometric attacks {{are recognized as}} one of the strongest attacks for digital watermarking technology. Normalization watermarking algorithm is resistant to geometrical distortions and <b>DC</b> <b>coefficients</b> are perceptually most significant and more robust to many unintentional attacks (signal processing) and intentional attacks (unauthorized removal). In this paper we propose a robust non-blind watermarking algorithm based on <b>DC</b> <b>coefficients</b> and normalization. By applying discrete wavelet transformation technique (DWT) followed by block based Discrete Cosine Transformation (DCT) technique, DC components are obtained. The cover image is normalized using normalization algorithm in different frequency bands using wavelet decomposition and then block based DCT is applied. In the <b>DC</b> <b>coefficients</b> of the sub-band of the image, watermark is embedded. The algorithm resistant to geometrical distortions (rotation, scaling) and different other attacks (histogram equalization, noise) on different contrast images. The quantitative measurements like SNR (Signal to Noise Ratio) ...|$|R
