2815|10000|Public
25|$|Alternatively, it is {{possible}} to <b>iterate</b> over all keys of an array.|$|E
25|$|This {{can be used}} to <b>iterate</b> a transformation, or to animate one by {{breaking}} it up into steps.|$|E
25|$|Repeat steps 2 and 3 {{for each}} of the {{remaining}} smaller cubes, and continue to <b>iterate</b> ad infinitum.|$|E
40|$|AbstractThe general {{notion of}} {{look-ahead}} on pushdowns {{is used to}} prove that (1) the deterministic <b>iterated</b> pushdown languages are closed under complementation, (2) the deterministic <b>iterated</b> pushdown languages are properly included in the non-deterministic <b>iterated</b> pushdown languages; the counter example is a very simple linear context-free language, independent {{of the amount of}} iteration, (3) LL(k) <b>iterated</b> indexed grammars can be parsed by deterministic <b>iterated</b> pushdown automata, and (4) it is decidable whether an <b>iterated</b> indexed grammar is LL(k). Analogous results hold for <b>iterated</b> pushdown automata with regular look-ahead on the input, and LL-regular <b>iterated</b> indexed grammars...|$|R
50|$|Care must {{be taken}} when {{referring}} to <b>iterated</b> exponentials, as {{it is common to}} call expressions of this form <b>iterated</b> exponentiation, which is ambiguous, as this can either mean <b>iterated</b> powers or <b>iterated</b> exponentials.|$|R
40|$|Abstract. <b>Iterated</b> local {{search is}} a {{stochastic}} local search (SLS) method that combines a perturbation step with an embedded local search algorithm. In this article, we propose {{a new way}} of hybridizing <b>iterated</b> local search. It consists in using an <b>iterated</b> local search as the embedded local search algorithm inside another <b>iterated</b> local search. This nesting of local searches and <b>iterated</b> local searches can be further <b>iterated,</b> leading to a hierarchy of <b>iterated</b> local searches. In this paper, we experimentally examine this idea applying it to the quadratic assignment problem. Experimental results on large, structured instances show that the hierarchical <b>iterated</b> local search can offer advantages over using a “flat ” <b>iterated</b> local search and make it a promising technique to be further considered for other applications. ...|$|R
25|$|If, {{for some}} {{positive}} integer n, the n-th <b>iterate</b> of T, Tn, is identically zero, then T {{is said to}} be nilpotent.|$|E
25|$|When {{there are}} no numbers left in the set to <b>iterate</b> over, {{consider}} the current largest number {{to be the largest}} number of the set.|$|E
25|$|Casson's {{idea was}} to <b>iterate</b> this {{construction}} {{an infinite number of}} times, {{in the hope that the}} problems about double points will somehow disappear in the infinite limit.|$|E
40|$|The {{constant}} depth {{threshold circuit}} complexity of <b>iterated</b> addition, multiplication, and <b>iterated</b> multiplication in rings ZZ[ff], where ff is an algebraic integer, is studied. It is shown that <b>iterated</b> addition is 1 [...] approximable, multiplication is 2 [...] approximable, and <b>iterated</b> multiplication is 3 [...] approximable...|$|R
5000|$|... #Subtitle level 2: Fractional <b>iterates</b> and flows, and {{negative}} <b>iterates</b> ...|$|R
30|$|We {{know that}} Picard <b>iterates</b> of nonexpansive {{mappings}} fail to converge {{even on a}} Banach space. Therefore, Mann [2] <b>iterates</b> were introduced to approximate fixed points of nonexpansive mappings. Mann <b>iterates</b> were not adequate for the approximation of fixed points of pseudocontractive mappings and {{this led to the}} introduction of Ishikawa <b>iterates</b> [3].|$|R
25|$|Gul Bara and Tapa {{are also}} {{variants}} {{of the game}} popular in southeastern Europe and Turkey. The play will <b>iterate</b> among Backgammon, Gul Bara, and Tapa until {{one of the players}} reaches a score of 7 or 5.|$|E
25|$|In {{the first}} step, we {{collapse}} all multiple edges to single edges, {{so that the}} graph is simple. Next, we <b>iterate</b> over the vertices of the graph, pushing any vertex matching the conditions for S4 or S5 onto the appropriate stack.|$|E
25|$|The LEAVE {{statement}} {{may be used}} to {{exit the}} loop. Loops can be labeled, and leave may leave a specific labeled loop in a group of nested loops. Some PL/I dialects include the <b>ITERATE</b> statement to terminate the current loop iteration and begin the next.|$|E
40|$|AbstractAn <b>iterated</b> pushdown is a pushdown of pushdowns of … of pushdowns. An <b>iterated</b> {{exponential}} function is 2 to the 2 to the … to the 2 to some polynomial. The main result presented {{here is that}} the nondeterministic 2 -way and multi-head <b>iterated</b> pushdown automata characterize the deterministic <b>iterated</b> exponential time complexity classes. This is proved by investigating both nondeterministic and alternating auxiliary <b>iterated</b> pushdown automata, for which similar characterization results are given. In particular it is shown that alternation corresponds to one more iteration of pushdowns. These results are applied to the 1 -way <b>iterated</b> pushdown automata: (1) they form a proper hierarchy with respect to the number of iterations, and (2) their emptiness problem is complete in deterministic <b>iterated</b> exponential time. Similar results are given for <b>iterated</b> stack (checking stack, nonerasing stack, nested stack, checking stack-pushdown) automata...|$|R
40|$|In this paper, {{the well}} known <b>iterated</b> Galerkin method and <b>iterated</b> Galerkin-Kantorovich regularization method for {{approximating}} {{the solution of}} Fredholm integral equations of the second kind are generalized to Hammerstein equations with smooth and weakly singular kernels. The order of convergence of the Galerkin method and those of superconvergence of the <b>iterated</b> methods are analyzed. Numerical examples are presented to illustrate the superconvergence of the <b>iterated</b> Galerkin approximation for Hammerstein equations with weakly singular kernels. Key words: the <b>iterated</b> Galerkin method, the <b>iterated</b> Galerkin-Kantorovich regularization, Hammerstein equations with weakly singular kernels, superconvergence. Mathematics Subject Classification (1990) : 65 B 05, 45 L 10. ...|$|R
40|$|In {{this paper}} we propose a concept of rationalizable {{solution}} for two-player decision-form games: the solution by <b>iterated</b> elimination of non-reactive strategies. Several original theorems are proved about this kind of solution. We study the relations between solutions by <b>iterated</b> elimination of non reactive strategies and game equilibria. We present an existence theorem for bistrategies surviving the <b>iterated</b> elimination and an existence theorem for solution by <b>iterated</b> elimination in contracting games. We, also, show that an equilibrium of a game survives <b>iterated</b> elimination of non-reactive strategies. At the end we prove a characterization of solvability by <b>iterated</b> elimination of non-reactive strategies. ...|$|R
25|$|Some <b>iterate</b> {{the linear}} {{interpolation}} (Newton's method) {{to calculate the}} time of collision with a much higher precision {{than the rest of}} the simulation. Collision detection utilizes time coherence to allow even finer time steps without much increasing CPU demand, such as in air traffic control.|$|E
25|$|A field {{extension}} {{is called}} a cyclic extension if its Galois group is a cyclic group. The Galois group of every finite extension of a finite field is finite and cyclic, with an <b>iterate</b> of the Frobenius endomorphism as its generator. Conversely, given a finite field F and a finite cyclic group G, there is a finite field extension of F whose Galois group is G.|$|E
25|$|Using CAE programs, a {{mechanical}} design team can quickly and cheaply <b>iterate</b> {{the design process}} to develop a product that better meets cost, performance, and other constraints. No physical prototype need be created until the design nears completion, allowing {{hundreds or thousands of}} designs to be evaluated, instead of a relative few. In addition, CAE analysis programs can model complicated physical phenomena which cannot be solved by hand, such as viscoelasticity, complex contact between mating parts, or non-Newtonian flows.|$|E
40|$|We {{develop a}} notion of <b>iterated</b> monoidal {{category}} and show that this notion corresponds in a precise way {{to the notion of}} <b>iterated</b> loop space. Specifically the group completion of the nerve of such a category is an <b>iterated</b> loop space and free <b>iterated</b> monoidal categories give rise to finite simplicial operads of the same homotopy type as the classical little cubes operads used to parametrize the higher H-space structure of <b>iterated</b> loop spaces. <b>Iterated</b> monoidal categories encompass, as a special case, the notion of braided tensor categories, as used in the theory of quantum groups. Comment: 55 pages, 3 PostScript figure...|$|R
30|$|It <b>iterates</b> {{over the}} {{frequent}} itemsets in transaction databases by <b>iterating</b> method.|$|R
40|$|Some {{function}} space {{laws of the}} <b>iterated</b> logarithm for Brownian {{motion with}} values in finite and infinite dimensional vector spaces are shown to follow from Hincin's classical law of the <b>iterated</b> logarithm and some martingale techniques. A law of the <b>iterated</b> logarithm for Brownian motion in a differentible manifold is also stated. Law of the <b>iterated</b> logarithm Brownian motion...|$|R
25|$|In {{some cases}} there are {{regions in the}} complex plane which are not {{in any of these}} basins of attraction, meaning the iterates do not converge. For example, if one uses a real initial {{condition}} to seek a root of , all subsequent iterates will be real numbers and so the iterations cannot converge to either root, since both roots are non-real. In this case almost all real initial conditions lead to chaotic behavior, while some initial conditions <b>iterate</b> either to infinity or to repeating cycles of any finite length.|$|E
25|$|The {{programs}} used in computational chemistry {{are based}} on many different quantum-chemical methods that solve the molecular Schrödinger equation associated with the molecular Hamiltonian. Methods that do not include any empirical or semi-empirical parameters in their equations– being derived directly from theoretical principles, with no inclusion of experimental data– are called ab initio methods. This {{does not imply that}} the solution is an exact one; they are all approximate quantum mechanical calculations. It means that a particular approximation is rigorously defined on first principles (quantum theory) and then solved within an error margin that is qualitatively known beforehand. If numerical iterative methods must be used, the aim is to <b>iterate</b> until full machine accuracy is obtained (the best that is possible with a finite word length on the computer, and within the mathematical and/or physical approximations made).|$|E
25|$|Node lookups {{can proceed}} asynchronously. The {{quantity}} of simultaneous lookups is denoted by α and is typically three. A node initiates a FIND_NODE request by querying to the α nodes {{in its own}} k-buckets that are the closest ones to the desired key. When these recipient nodes receive the request, they will look in their k-buckets and return the k closest nodes to the desired key that they know. The requester will update a results list with the results (node ID's) he receives, keeping the k best ones (the k nodes that are closer to the searched key) that respond to queries. Then the requester will select these k best results and issue the request to them, and <b>iterate</b> this process again and again. Because every node has a better knowledge of his own surroundings than any other node has, the received results will be other nodes that are every time {{closer and closer to}} the searched key. The iterations continue until no nodes are returned that are closer than the best previous results. When the iterations stop, the best k nodes in the results list are the ones in the whole network that are the closest to the desired key.|$|E
40|$|ABSTRACT. In {{this paper}} we propose a concept of rationalizable {{solution}} for two-player decision-form games: the solution by <b>iterated</b> elimination of non-reactive strategies. Sev-eral original theorems are proved about this kind of solution. We study the relations be-tween solutions by <b>iterated</b> elimination of non reactive strategies and game equilibria. We present an existence theorem for bistrategies surviving the <b>iterated</b> elimination and an ex-istence theorem for solution by <b>iterated</b> elimination in contracting games. We, also, show that an equilibrium of a game survives <b>iterated</b> elimination of non reative strategies. At the end we prove a characterization of solvability by <b>iterated</b> elimination of non-reactive strategies. 1...|$|R
5000|$|For ordinals {{less than}} , the {{notation}} coincides with <b>iterated</b> base [...] notation (the pieces being themselves written in <b>iterated</b> Cantor normal form): e.g., [...] will be written , or, more accurately, [...] For ordinals less than , we similarly write in <b>iterated</b> base [...] and then write {{the pieces in}} <b>iterated</b> base [...] (and write the pieces of that in <b>iterated</b> Cantor normal form): so [...] is written , or, more accurately, [...] Thus, up to , we always use the largest possible -number base which gives a non-trivial representation.|$|R
50|$|There {{are many}} chaotic maps. Well-known <b>iterated</b> {{functions}} include the Mandelbrot set and <b>iterated</b> function systems.|$|R
25|$|Croteam used {{an array}} of {{automated}} and in-place tools to help rapidly design, debug, and test the game for playability. In one aspect, they recognized {{in the development of}} a puzzle game was that while puzzles could be designed with specific solutions, the process of creating the video game around the puzzle could create unsolvable situations or unforeseen shortcuts. To address this, they used a bot, developed by Croteam member Nathan Brown who had previously developed bots for other games including the ones incorporated into ports of Serious Sam 3 for consoles. The bot, named Bot, would watch the playthrough of a puzzle by a human player in terms of broad actions such as placing boxes on a switch for the completion of a puzzle. Then, as the puzzle's environment was tuned and decorated, they would have Bot attempt to solve the puzzle, testing to make sure it did not run into any dead-ends. If it did encounter any, Bot reported these through an in-house bug reporting system and then used game cheats to move on and finish out testing, which took between 30 and 60 minutes for the full game. As such, they were able to quickly <b>iterate</b> and resolve such problems when new features were introduced to the game. Overall, Croteam estimates they logged about 15,000 hours with Bot before the release of the public test version, and expect to use similar techniques in future games. They also used human playtesters to validate other more aesthetic factors of the games prior to the title's release.|$|E
500|$|Python {{features}} sequence unpacking where multiple expressions, each evaluating {{to anything}} that can be assigned to (a variable, a writable property, etc), are associated in the identical manner to that forming tuple literals and, as a whole, are put on the left hand side of the equal sign in an assignment statement. The statement expects an iterable object on the right hand side of the equal sign that produces the same number of values as the provided writable expressions when iterated through, and will <b>iterate</b> through it, assigning each of the produced values to the corresponding expression on the left.|$|E
500|$|Christian metal is not {{a solitary}} style of music, but rather an ideological {{umbrella}} term that comprises almost every subgenre of heavy metal music. The musicians within Christian metal bands typically base their lyrics on Judeo-Christian traditions. The lyrical approach of Christian metal bands is somewhat varied, as some emphasize {{the positive aspects of}} faith matters while others <b>iterate</b> the teachings of Christ. Some bands keep their message hidden in metaphors. Only a minority take an aggressive attitude towards those who speak against Christianity, [...] "preaching full-on fire and brimstone and Old Testament style God's wrath back at extreme Satanists". References to eschatology and apocalyptic themes, particularly the ongoing spiritual warfare between good and evil as well as the Last Judgment and fall from grace are typical.|$|E
40|$|A {{class of}} <b>iterated</b> {{processes}} is studied by proving a joint functional limit theorem {{for a pair}} of independent Brownian motions. This Strassen method is applied to prove global (t [...] > [infinity]), as well as local (t [...] > 0), LIL type results for various <b>iterated</b> processes. Similar results are also proved for <b>iterated</b> random walks via invariance. <b>Iterated</b> Brownian motions Strassen method LIL type results...|$|R
40|$|We {{investigate}} the frame bounds of <b>iterated</b> non-perfect reconstruction filter banks. We provide frame bounds valid for <b>iterated</b> FBs with an arbitrary {{number of stages}} using the frame bounds of the underlying frame on the real line. Conversely, given the frame bounds of the <b>iterated</b> FB, we derive bounds for the underlying wavelet frame. Key words: <b>Iterated</b> filter bank, wavelet filter bank, frame bounds. ...|$|R
40|$|Ranking theory {{delivers}} {{an account}} of <b>iterated</b> contraction; each ranking function induces a specific <b>iterated</b> contraction behavior. The paper gives a complete axiomatization of that behavior, i. e., {{a complete set of}} laws of <b>iterated</b> contraction. It does so by showing how to reconstruct a ranking function from its <b>iterated</b> contraction behavior uniquely up to multi-plicative constant and thus how to measure ranks on a ratio scale...|$|R
