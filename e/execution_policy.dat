52|477|Public
25|$|New default {{execution}} policy: On Windows Servers, {{the default}} <b>execution</b> <b>Policy</b> is now RemoteSigned.|$|E
25|$|In {{highlighting}} {{the severity of}} the Free State's <b>execution</b> <b>policy,</b> however, {{it is important not to}} exaggerate its extent. The Free State took a total of over 12,000 Republicans prisoner during the war, of whom roughly 80, less than 1% were executed. How those who were executed were chosen from the others captured in arms is unclear; however, many more men were sentenced to the death penalty than were actually shot. This was intended to act as a deterrent to anti-Treaty fighters in the field, who knew that their imprisoned comrades were likely to be executed if they kept up their armed campaign.|$|E
2500|$|Unless an <b>{{execution}}</b> <b>policy</b> [...] is defined, {{the execution}} of Petri nets is nondeterministic: when multiple transitions are enabled at the same time, {{any one of them}} may fire.|$|E
40|$|This thesis {{examines}} the <b>executions</b> <b>policy</b> {{undertaken by the}} pro-treatyite Provisional/Free State Government during the Irish Civil War (1922 – 23). Following the Irish War of Independence (1919 – 21) and subsequent Anglo-Irish Treaty Ireland‘s previously united nationalist movement fractured into opposing factions. The ensuing Civil War, fought between the Government and the anti-treatyite militants, known as the Irregulars, played an integral {{role in the development}} of the modern Irish State. Remarkably, this conflict has been marginalised in Irish revolutionary historiography. Similarly, the significance of the Government‘s official <b>executions</b> <b>policy</b> during the conflict has been further neglected and consigned to a footnote in existing works on the Civil War. Yet the execution of eighty-one fellow Irishmen and former comrades by the first independent Irish Government became one of the defining characteristics of the War. The proposition which underpins this study is that this <b>executions</b> <b>policy</b> had a significant impact on the dynamic of the Civil War, making it a far more ruthless and divisive affair. Moreover, it left an enduring legacy of bitterness in post-war Ireland, one which is still to be completely surmounted. In essence, this thesis presents an in-depth analysis of the effect of the <b>executions</b> <b>policy</b> on the character, course and outcome of the Irish Civil War...|$|R
40|$|This paper proposes adding two new <b>execution</b> <b>{{policies}}</b> to the Parallelism TS and P 0075 R 0. These policies add {{support for}} execution with relaxed sequencing restricted {{to a single}} OS thread: A unseq_execution_policy and constant unseq analogous to the other policy types and constants in the Parallelism TS, with sequencing semantics similar t...|$|R
40|$|The {{existing}} Version 1 of the Parallelism TS exposes parallel execution to the programmer in {{the form}} of standard algorithms that accept <b>execution</b> <b>policies.</b> A companion executor facility would both provide a suitable substrate for implementing these algorithms in a standard way and provide a mechanism for exercising programmatic control over where parallel work should be executed...|$|R
50|$|He has {{continually}} criticised Japanese <b>execution</b> <b>policy</b> {{since his}} release.|$|E
5000|$|New default {{execution}} policy: On Windows Servers, {{the default}} <b>execution</b> <b>Policy</b> is now RemoteSigned.|$|E
5000|$|Unless an <b>{{execution}}</b> <b>policy</b> [...] is defined, {{the execution}} of Petri nets is nondeterministic: when multiple transitions are enabled at the same time, {{any one of them}} may fire.|$|E
40|$|The {{algorithms}} and <b>execution</b> <b>policies</b> {{specified by}} the Parallelism TS are designed to permit implementation on the broadest range of platforms. In addition to preemptive thread pools common on some platforms, implementations of these algorithms may {{want to take advantage}} of a number of mechanisms for parallel execution, including cooperative fibers, GPU threads, and SIMD vector units, among others. A suitabl...|$|R
40|$|We {{analyze the}} optimal {{execution}} {{problem of a}} portfolio manager trading multiple assets. In addition to the liquidity and risk of each individual asset, we consider cross-asset interactions in these two dimensions, which substantially changes {{the nature of the}} problem. Focusing on the market microstructure, we build a tractable order book model to capture the supply/demand dynamics in a multi-asset setting, which allows us to formulate and solve the portfolio execution problem. We find that cross-asset risk and liquidity considerations are of critical importance in constructing the optimal <b>execution</b> <b>policies.</b> We show that even when our goal is to trade a single asset, its optimal execution may involve transitory trades in other assets. In general, optimally managing the risk of the portfolio during the execution process affects the synchronization of trading in different assets. Moreover, correlations in the liquidity across assets lead to complex patterns in the optimal <b>execution</b> <b>policies.</b> In particular, we highlight cases where aggregate costs can be reduced by temporarily overshooting one’s target portfolio. ...|$|R
5000|$|Advise the President on the <b>execution</b> of <b>policies</b> and {{politics}} regarding Human Rights and Corruption.|$|R
50|$|A web-based Administrator User Interface {{provides}} administrators with {{a simplified}} and easy-to-use interface to the Techila Server. The Administrator User Interface allows monitoring system activity, view and control job execution, <b>execution</b> <b>policy,</b> monitor and control Techila Workers and Techila Worker Groups, control security settings, and manage users.|$|E
50|$|However, the Danish FSA {{ordered an}} {{independent}} investigation of whether trades executed manually and {{performed on the}} Bank's electronic trading system are generally being executed {{in accordance with the}} Bank's common trading conditions and Best <b>Execution</b> <b>Policy.</b> In late August, it was announced by the Danish FSA that the investigation would be done by Oliver Wyman, the international consulting company.|$|E
50|$|In {{highlighting}} {{the severity of}} the Free State's <b>execution</b> <b>policy,</b> however, {{it is important not to}} exaggerate its extent. The Free State took a total of over 12,000 Republicans prisoner during the war, of whom roughly 80, less than 1% were executed. How those who were executed were chosen from the others captured in arms is unclear; however, many more men were sentenced to the death penalty than were actually shot. This was intended to act as a deterrent to anti-Treaty fighters in the field, who knew that their imprisoned comrades were likely to be executed if they kept up their armed campaign.|$|E
40|$|This paper {{presents}} TERRA and ACQUA two {{mechanisms that}} support adaptable definition {{and execution of}} workflows. TERRA generates and stores structures (objects, events, reactions) necessary for executing a workflow. AQUA executes workflows according to a parametric behaviour model that represents workflow <b>execution</b> <b>policies</b> in terms of dimensions associated to values. TERRA and ACQUA provide mechanisms for modifying {{the structure of a}} workflow and its associated behaviour...|$|R
50|$|Creating and {{ensuring}} the <b>execution</b> of <b>policies</b> {{and strategies for}} healthcare in Dubai’s public and private healthcare sectors.|$|R
5000|$|Business process {{management}} (BPM) - To perform model-driven <b>execution</b> of <b>policies</b> and processes defined as Business Process Model and Notation (BPMN) models ...|$|R
40|$|This {{research}} {{studied the}} application of a software-based ring <b>execution</b> <b>policy,</b> the type of which has previously been implemented via hardware mechanisms, to an open source operating system. Such an <b>execution</b> <b>policy</b> is orthogonal to, and may be used in conjunction with, other mandatory (viz, secrecy, integrity) and discretionary policies. It allows processes running with otherwise similar privileges (such as the root user, or secrecy attributes) to be differentiated with respect to priority or privilege regarding system resources and execution. We have found {{that it is possible to}} construct a mandatory ring <b>execution</b> <b>policy</b> whose primary function is to restrict subjects from executing certain file system objects, and that this may result in a more coherent and manageable policy than what can be expected from various discretionary (e. g., policy-bypass or privilege-grouping) mechanisms. Background This research studied {{the application of}} a software-based ring <b>execution</b> <b>policy,</b> the type of which has previously been implemented via hardware mechanisms, to an open sourc...|$|E
40|$|Möbius is an {{extensible}} {{framework and}} tool for performance and dependability modeling, and supports multiple modeling formalisms and solvers. As a framework, Möbius must be sufficiently general {{to capture the}} various formalism behaviors. Specifically, the Möbius <b>execution</b> <b>policy</b> must be flexible enough to accommodate the execution policies of all formalisms implemented in the framework. We know of no existing <b>execution</b> <b>policy</b> which is capable of doing this and meeting the many other goals of the framework. We present the Möbius <b>execution</b> <b>policy</b> that addresses these needs. In developing the policy, we have generalized the various preemption policies and made {{all aspects of the}} <b>execution</b> <b>policy</b> state-dependent, which has never before been considered. Because all aspects may be state-dependent, we also had to relax the assumption that work proceeds at a constant rate; this is also novel. Finally, we show that within the context of Möbius, the extra structure and overhead needed to implement a particular behavior can largely be avoided except when that behavior is present in a model. ...|$|E
40|$|A {{model is}} defined in which {{questions}} concerning delay bounded asynchronous parallel systems may be investigated. It is shown that synchronization problems, similar to the “firing squad synchronization problem”, cannot be solved by delay bounded asynchronous systems. Three conditions called persistence, determinacy, and single change are introduced. These conditions are shown to be sufficient to guarantee that a synchronous <b>execution</b> <b>policy</b> can be relaxed to an asynchronous <b>execution</b> <b>policy</b> with no change to {{the result of the}} computation. This is a Church-Rosser type theorem, but in addition, the asynchronous execution time is shown to be only (D+ 1) times the synchronous execution time where D is the delay bound. Finally, a wide class of recognition problems is identified which can be solved by linear asynchronous structures...|$|E
40|$|The paper {{describes}} a programming environment {{based on the}} timed Petri net paradigm with generally distributed transition firing times and with several <b>execution</b> <b>policies.</b> The user interaction {{is supported by a}} X Window-based graphical interface. The graphical editor, which allows both bottom-up and top-down modeling, is based on a hierarchy (toolkit) of graphical objects (widgets). A discrete-event simulator is provided: it is composed by a set of basic simulation objects assembled from the model description. A simulator prototype has been developed using the C++ programming language...|$|R
40|$|Scaling large {{iterative}} graph processing applications through {{parallel computing}} {{is a very}} important problem. Several graph processing frameworks have been proposed that insulate developers from low-level details of parallel programming. Most of these frameworks are based on the bulk synchronous parallel (BSP) model in order to simplify application development. However, in the BSP model, vertices are processed in fixed rounds, which often leads to slow convergence. Asynchronous executions can significantly accelerate convergence by intelligently ordering vertex updates and incorporating the most recent updates. Unfortunately, asynchronous models do not provide the programming simplicity and scalability advantages of the BSP model. In this paper, we combine the easy programmability of the BSP model with the high performance of asynchronous execution. We have designed GRACE, a new graph programming platform that separates application logic from <b>execution</b> <b>policies.</b> GRACE provides a synchronous iterative graph programming model for users to easily implement, test, and debug their applications. It also contains a carefully designed and implemented parallel execution engine for both synchronous and user-specified built-in asynchronous <b>execution</b> <b>policies.</b> Our experiments show that asynchronous execution in GRACE can yield convergence rates comparable to fully asynchronous executions, while still achieving the near-linear scalability of a synchronous BSP system. 1...|$|R
25|$|Another factor {{contributing}} to the <b>executions</b> <b>policy</b> was the escalating level of violence. In {{the first two months}} of the Civil War (July–August 1922), Free State forces had successfully taken all the territory held by Republicans and the war seemed all but over. After the Anti-Treaty side resorted to guerrilla tactics in August–September, National Army casualties mounted and they even lost control over some of the territory taken in the Irish Free State offensive. The town of Kenmare, for example, was re-taken by Anti-Treaty fighters on 9 September and held by them until early December.|$|R
40|$|Domain {{specific}} visual languages express significant {{system configurations}} and behaviours. They are mainly {{used to express}} some form of system transformation, characterised by its pre-and post-conditions and by an <b>execution</b> <b>policy.</b> We propose an approach to management of transitions, independent from the adopted diagram-matic notation, and describe an application...|$|E
40|$|This paper {{explores the}} {{implications}} for investment firms and clients that arise out of {{an interpretation of the}} Market in Financial Instruments Directive (MiFID) best execution requirements from a law and economics perspective. While best execution is often framed as a matter of investor protection, research on market microstructure suggests that there is, in fact, an efficiency rationale (and not only a distributional rationale) for having some degree of best execution regulation. In terms of the specific rules of MiFID, the analysis reveals that an investment firm’s best <b>execution</b> <b>policy</b> will play a central role. MiFID’s best execution concept is process- based, ie investment firms need to show that they took measures leading to best execution in expectation; actual best execution is not required. The paper also discusses current issues such as the form of the <b>execution</b> <b>policy</b> and the appropriate number of execution venues...|$|E
40|$|So far, {{the main}} focus of {{research}} on adaptability in multiagent systems (MASs) has been on the agents ’ behavior, for example on developing new learning techniques and more flexible action selection mechanisms. In this paper, we introduce a different type of adaptability in MASs, called time management adaptability. Time management adaptability focuses on adaptability in MASs with respect to execution control. First, time management adaptability allows a MAS to be adaptive with respect to its execution platform, anticipating arbitrary and varying timing delays which can violate correctness. Second, time management adaptability allows the <b>execution</b> <b>policy</b> of a MAS to be customized at will to suit the needs of a particular application. We discuss the essential parts of time management adaptability: (1) we employ time models as a means to explicitly capture the <b>execution</b> <b>policy</b> derived from the application’s execution requirements, (2) we classify and evaluate time management mechanisms which can be used to enforce time models, and (3) we introduce a MAS execution control platform which combines both previous parts to offer high-level execution control...|$|E
5000|$|... {{control of}} ministerial <b>policy</b> <b>execution</b> in human {{development}} and culture ...|$|R
40|$|Which {{policies}} are enforceable? ∗ Characterization for an abstract setting ∗ Enforcement via <b>execution</b> monitoring <b>policies</b> system enforcement mechanism allowed action? In the following: How to check policy compliance of system behavior? behavior | = policy? 2 Story so far [...] . Which {{policies are}} enforceable? ∗ Characterization for an abstract setting ∗ Enforcement via <b>execution</b> monitoring <b>policies</b> system enforcement mechanism allowed action? In the following: How to check policy compliance of system behavior? behavior | = policy? 2 Why relevant? Policies are omnipresent {{but not all}} are enforceable Even when enforceable, the enforcement mechanism might be missconfigured or corrupte...|$|R
50|$|Development and <b>execution</b> of {{monetary}} <b>policy</b> designed to achieve price stability.|$|R
40|$|This {{document}} describes enhancements made to {{the popular}} OpenSSH authentication service to restrict the execution of OpenSSH processes by applying a ring-based program <b>execution</b> <b>policy.</b> We also apply a label-based mandatory access control (MAC) policy to limit a user's login shell to run at a specific security level within the user's authorized security clearance range. While still rudimentary, these enhancements illustrate the usefulness of a ring- based execution mechanism for restricting program behavior...|$|E
40|$|Adaptive Agents and Multi-Agent Systems III: Adaptation and Multi-Agent LearningSo far, {{the main}} focus of {{research}} on adaptability in multi-agent systems (MASs) has been on the agents' behavior, for example on developing new learning techniques and more flexible action selection mechanisms. In this paper, we introduce a different type of adaptability in MASs, called time management adaptability. Time management adaptability focuses on adaptability in MASs with respect to execution control. First, time management adaptability allows a MAS to be adaptive with respect to its execution platform, anticipating arbitrary and varying timing delays which can violate correctness. Second, time management adaptability allows the <b>execution</b> <b>policy</b> of a MAS to be customized at will to suit the needs of a particular application. We discuss the essential parts of time management adaptability: (1) we employ time models as a means to explicitly capture the <b>execution</b> <b>policy</b> derived from the application's execution requirements, (2) we classify and evaluate time management mechanisms which can be used to enforce time models, and (3) we introduce a MAS execution control platform which combines both previous parts to offer high-level execution control. status: publishe...|$|E
40|$|We {{present a}} new block diagram {{language}} for describing synchronous software. It coordinates {{the execution of}} synchronous, concurrent software modules, allowing real-time systems to be assembled from precompiled blocks specified in other languages. The semantics we present, based on fixed points, is deterministic even {{in the presence of}} instantaneous feedback. The <b>execution</b> <b>policy</b> develops a static schedule—a fixed order in which to execute the blocks that makes the system execution predictable. We present exact and heuristic algorithms for finding schedules that minimize system execution time, and show that good schedules can be found quickly. The scheduling algorithms are applicable to other problems where large systems of equations need to be solved...|$|E
50|$|The Ministry of Parliamentary Reforms and Mass media {{states that}} its {{principal}} objectives are the formulation, co-ordination and the <b>execution</b> of <b>policies</b> {{in relation to}} the mass media and also the parliamentary affairs.|$|R
5000|$|... (a) In {{development}} and <b>execution</b> of the <b>policies</b> {{of the international}} government.|$|R
5000|$|... {{coordination}} and synchronization of formulation, determination, and <b>execution</b> of ministerial <b>policy</b> in industry ...|$|R
