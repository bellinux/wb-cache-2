6|1|Public
50|$|Demon Internet {{was born}} out of Demon Systems, a bespoke {{business}} software development company formed by Cliff Stanford, Grahame Davies and Owen Manderfield. In a discussion of the need for a home-oriented <b>dialup</b> <b>IP</b> service on the CIX boards, Stanford suggested that if 200 people stepped up with a year's subscription, he would use Demon's infrastructure to create such a service.|$|E
50|$|The email {{relaying}} {{service was}} called Phonenet, after the telephone-specific channel of the MMDF software developed by Crocker. The CSNET name service allowed manual and automated email address lookup based on various user attributes, such as name, title, or institution. The X.25 tunneling allowed an institution to connect {{directly to the}} ARPANET via a commercial X.25 service (Telenet), by which the institution's TCP/IP traffic would be tunneled to a CSNET computer that acted as a relay between the ARPANET and the commercial X.25 networks. CSNET also developed dialup-on-demand (<b>Dialup</b> <b>IP)</b> software to automatically initiate or disconnect SLIP sessions as needed to remote locations. CSNET was developed on Digital Equipment Corporation (DEC) VAX-11 systems using BSD Unix, but it grew to support a variety of hardware and operating system platforms.|$|E
40|$|At CITI, we run dataless AFS clients over <b>dialup</b> <b>IP</b> networks. Improving Rx {{performance}} {{is critical to}} that task. In this paper, we report on our progress in adapting Rx to networks characterized by low bandwidth, high delay, or variable round-trip time. Our focus is on adding facilities for congestion avoidance and control, and on compressing Rx headers. Although our work is ongoing, we have overcome several hurdles, and are now getting impressive data transfer rates over ordinary dialup lines...|$|E
50|$|Bandwidth {{to support}} the Air Force’s AN does not {{currently}} exist. Only time can tell until enough bandwidth is freed up by obsolete technology. This creates the challenge of creating better ways of compressing data and developing more efficient ways to utilize the bandwidth currently available. One interim solution developed by Northrop Grumman is the <b>Dialup</b> rate <b>IP</b> over existing radios (DRIER). DRIER enables airborne or ground-based tactical users to select and download mission-critical data directly from the Joint STARS platform using existing, narrowband line-of-sight or beyond-line-of-sight UHF communications links. Users can {{also serve as a}} relay point, providing critical handover information between aircraft entering and exiting mission orbits.|$|R
40|$|At CITI, we run dataless AFS clients over <b>dialup</b> <b>IP</b> networks. Improving Rx {{performance}} {{is critical to}} that task. In this paper, we report on our progress in adapting Rx to networks characterized by low bandwidth, high delay, or variable round-trip time. Our focus is on adding facilities for congestion avoidance and control, and on compressing Rx headers. Although our work is ongoing, we have overcome several hurdles, and are now getting impressive data transfer rates over ordinary dialup lines. November 2, 1993 Center for Information Technology Integration University of Michigan 519 West William Street Ann Arbor, MI 48103 - 4943 [...] [...] Bachmann/Honeyman/Huston [...] [...] The Rx Hex D. Bachmann bachmann@austin. ibm. com P. Honeyman honey@citi. umich. edu L. B. Huston lhuston@citi. umich. edu 1. Introduction AFS [1] was designed with high-speed networking and continuous connectivity as a given, and this bias {{is reflected in the}} AFS transport layer, a UDP-based [2] remote procedure call (RPC) [...] ...|$|E
40|$|We identifit three {{fundamental}} {{requirements for}} scalable net-work services: incremental scalability and oveflow growth provi-sioning, 24 x 7 availability through fault masking, and cost-effectiveness. We argue that clusters of commodity workstations interconnected by a high-speed SAN are exceptionally well-suited to meeting these challenges for Internet-server workloads, pro-vided the software infrastructure for managing partial failures and administering a large cluster {{does not have}} to be reinvented for each new service. To this end, we propose a general, layered archi-tecture for building cluster-based scalable network services that encapsulates the above requirements for reuse, and a service-pro-gramming model based on composable workers thatpe$onn trans-formation, aggregation, caching, i and customization (TACC) of Internet content. For both performance and implementation sim-plicity, the architecture and TACC programming model exploit BASE, a weaker-than-ACID data semantics that results from trad-ing consistency for availability and relying on sof state for robust-ness in failure management., Our,qychitecture can be used as an “off the shelf * irtfrastructural platfonn for creating new network services, allowing authors to focus on the “content ” of the service {by composing TACC building blocks) rather than its implementa-tion. We discuss two real implemeritations of services based on this architecture: TranSend, a Web distillation proxy deployed to the UC Berkeley <b>dialup</b> <b>IP</b> population, and HotBot, the commercial implementation of the Inktomi search engine. We present detailed measurements of TranSend’s performance based on substantial cli-ent traces, as well as anecdotal evidence from the TranSend and HotBot experience, to support the claims made for the architecture. ...|$|E
40|$|We {{identify}} three fundamental {{requirements for}} scalable net-work services: incremental scalability and overflow growth provisioning, 24 x 7 availability through fault masking, and cost-effectiveness. We argue that clusters of commodity workstatio ns interconnected by a high-speed SAN are exceptionally well-suitedto meeting these challenges for Internet-server workloads, provided the software infrastructure for managing partial failures andadministering a large cluster {{does not have}} to be rei nvented for each new service. To this end, we propose a general, layered archi-tecture for building cluster-based scalable network services that encapsulates the above requirements for reuse, and a service-pro-gramming model based on composable workers that perform transformation, aggregation, caching, and customization (TACC) ofInternet content. For both performance and implementation simplicity, the architecture and TACC programming model exploitBASE, a weaker-than-ACID data semantics that results fro m trading consistency for availability and relying on soft state for robust-ness in failure management. Our architecture can be used as an "off the shelf" infrastructural platform for creating new networkservices, allowing authors to focus on the "cont ent" of the service (by composing TACC building blocks) rather than its implementa-tion. We discuss two real implementations of services based on this architecture: TranSend, a Web distillation proxy deployed to theUC Berkeley <b>dialup</b> <b>IP</b> population, and HotBot, the commercial implementation of the Inktomi search engine. We present detailedmeasurements of TranSend's performance based on substantial client traces, as well as anecdotal evidence from the TranSend andHotBot experience, to support the claims made fo r the architecture...|$|E

