0|10000|Public
40|$|In shape-memory polymers, large strain can {{be fixed}} at a low {{temperature}} and thereafter recovered at a high temperature. If the shape-memory polymer is held at a high temperature for a long time, the irrecoverable strain can attain a new intermediate shape between the shape under the maximum stress and the primary shape. <b>Irrecoverable</b> strain <b>control</b> {{can be applied to}} the fabrication of a shape-memory polymer element with a complex shape in a simple method. In the present study, the influence of the strain-holding conditions on the shape recovery and the <b>irrecoverable</b> strain <b>control</b> in polyurethane shape-memory polymer is investigated by tension test of a film and three-point bending test of a sheet. The higher the shape-holding temperature and the longer the shape-holding time, the higher the irrecoverable strain rate. The equation that expresses the characteristics of the <b>irrecoverable</b> strain <b>control</b> is formulated...|$|R
40|$|A <b>control</b> <b>structure</b> for {{production}} systems {{derived from the}} <b>control</b> <b>structure</b> of a programmed grammar is introduced. This type of <b>control</b> <b>structure</b> is {{proved to be more}} general and flexible than the classical <b>control</b> <b>structure</b> based on the concept of a Markov Normal algorithm. A method is discussed for inferring a <b>control</b> <b>structure</b> consistent with the observations of the behaviour of a production system whose rules are known. Finally, some criteria are given for choosing a suitable <b>control</b> <b>structure</b> from the set of <b>control</b> <b>structures</b> actually inferred...|$|R
25|$|Most {{programming}} languages with <b>control</b> <b>structures</b> have {{an initial}} keyword {{which indicates the}} type of <b>control</b> <b>structure</b> involved. Languages then divide {{as to whether or}} not <b>control</b> <b>structures</b> have a final keyword.|$|R
50|$|The C shell {{provides}} <b>control</b> <b>structures</b> {{for both}} condition-testing and iteration. The condition-testing <b>control</b> <b>structures</b> are the if and switch statements. The iteration <b>control</b> <b>structures</b> are the while, foreach and repeat statements.|$|R
50|$|Most {{programming}} languages with <b>control</b> <b>structures</b> have {{an initial}} keyword {{which indicates the}} type of <b>control</b> <b>structure</b> involved. Languages then divide {{as to whether or}} not <b>control</b> <b>structures</b> have a final keyword.|$|R
40|$|AbstractAn {{instance}} of a <b>control</b> <b>structure</b> is a mapping which takes {{one or more}} programs into a new program whose behavior is based on that of the original programs. An {{instance of}} a <b>control</b> <b>structure</b> is effective iff it is effectively computable. In order to study the interrelationships of <b>control</b> <b>structures,.</b> we consider abstract programming systems (numberings of the partial recursive functions) in which some <b>control</b> <b>structures,</b> effective or otherwise, are present, but others are not. This paper uses the techniques of recursive function theory, including recursion theorems and priority arguments to prove the independence of certain <b>control</b> <b>structures</b> in abstract programming systems. For example, we have obtained the following results. In effective numberings of the partial recursive functions, the one-one effective Kleene recursion theorem and the one-one effective (partial) if-then-else <b>control</b> <b>structure</b> are independent, but together, they yield all effective <b>control</b> <b>structures.</b> In any effective numbering, the effective Kleene form of the double recursion theorem yields all effective <b>control</b> <b>structures...</b>|$|R
40|$|This paper {{deals with}} the {{optimisation}} of <b>control</b> <b>structures</b> for multivariable process control systems. Incremental optimisation of <b>control</b> <b>structures</b> is the task of improving the performance of an existing <b>control</b> <b>structure</b> by incrementally introducing or removing dynamic connections in the <b>control</b> <b>structure.</b> A preliminary method {{for the detection of}} an improving structural change in an existing <b>control</b> <b>structure</b> is presented. The method is applied to the control of a pulverized coal injection process to show its validity and has proven to give good results. Godkänd; 2007; 20080103 (wolfgang...|$|R
40|$|Aim The aim of {{this study}} is to explore based on internationally {{recognised}} frameworks: 1. how internal <b>control</b> <b>structures</b> are applied in Sweden among different sectors; 2. how organizational size and environment affect internal control structures; and 3. the impact of internal <b>control</b> <b>structures</b> on organizational performance. Methods A quantitative method was used in the data collection and analysis. The sample consisted of 1117 organizations operating in Sweden. A mean analysis was conducted to measure the level of internal <b>control</b> <b>structures</b> among different industries, organizational sizes, and different choices of listing in the stock exchange market. Person’s correlation analysis was then used to explore possible correlations between external environmental factors and internal <b>control</b> <b>structures,</b> and internal <b>control</b> <b>structures</b> and organizational performance. Lastly, a structural model was built to measure the impact of internal <b>control</b> <b>structures</b> on organizational performance. The measurements of internal <b>control</b> <b>structures</b> and organizational performance are based on COSO framework’s principles and objectives. Results This study gives an insight on how internal <b>control</b> <b>structures</b> are applied across industrial sectors in Sweden, with financial institutions and manufacturing organizations having notably higher levels of internal <b>control</b> <b>structures.</b> Additionally, it provides evidence of the impact external environmental factors have on internal <b>control</b> <b>structures.</b> Furthermore, it shows that organizations that are listed in the Swedish stock exchange market have an equivalent level of internal <b>control</b> <b>structures</b> to those registered in the American stock exchange market. In contrast, organisations that are not listed in the stock exchange market have a notably lower level of internal <b>control</b> <b>structures.</b> Lastly, it illustrates the positive impact the presence of internal <b>control</b> <b>structures</b> has on organizational performance. 3 | P a g e Conclusion The results highlight a crucial role the supervisory authority Finansinspektionen (FI) has in regulating the Swedish financial market. They also show that the stability of the Swedish business environment has had a positive impact on the level of internal <b>control</b> <b>structures...</b>|$|R
40|$|AbstractIn any learnability setting, {{hypotheses}} are conjectured {{from some}} hypothesis space. Studied herein are the influence on learnability {{of the presence}} or absence of certain <b>control</b> <b>structures</b> in the hypothesis space. First presented are <b>control</b> <b>structure</b> characterizations of some rather specific but illustrative learnability results. The presence of these <b>control</b> <b>structures</b> is thereby shown essential to maintain full learning power. Then presented are the main theorems. Each of these non-trivially characterizes the invariance of a learning class over hypothesis space V and the presence of a particular projection <b>control</b> <b>structure,</b> called proj, in V as: V has suitable instances of all denotational <b>control</b> <b>structures.</b> In a sense, then, proj epitomizes the <b>control</b> <b>structures</b> whose presence need not help and whose absence need not hinder learning power...|$|R
40|$|A {{method for}} {{measuring}} the complexity of <b>control</b> <b>structures</b> is presented. It {{is based on the}} size of a grammar describing the possible execution sequences of the <b>control</b> <b>structure.</b> This method is applied to a number of <b>control</b> <b>structures,</b> including Pascal's <b>control</b> <b>structures,</b> Dijkstra's operators, and a structure recently proposed by Parnas. The verification of complexity measures is briefly discussed. (Author) Prepared for: Naval Postgraduate School, Monterey, California 93943. [...] Cover. [URL]...|$|R
50|$|The {{reservoir}} requires 88 dykes {{to prevent}} overflow {{outside of the}} reservoir. The highest of these dykes is 36 m and the longest at 6 km. The two reservoirs require three <b>control</b> <b>structures</b> to regulate flow. The Gabbro <b>Control</b> <b>Structure</b> which regulated the Ossokmanuan reservoir, the Lobstick <b>Control</b> <b>Structure</b> that regulates the Smallwood reservoir and the Whitefish <b>Control</b> <b>Structure</b> for the forebay reservoirs. Both forebays are further regulated by spillways to prevent flooding.|$|R
40|$|This thesis {{describes}} {{a set of}} computer program <b>control</b> <b>structures</b> which permits the application of certain structured programming techniques to the IBM/ 360 assembly language (ALC). The <b>control</b> <b>structures</b> are implemented by programmerdefined instructions known as macros. A history of computer software is presented, providing {{a basis for the}} emergence of structured programming. A survey of the major concepts of structured programming with special attention to <b>control</b> <b>structures</b> and their significance to structured programming follows. The macros developed in this study include DO, ENDDO, LEAVE, CASE, and ENDCASE. They provide a looping <b>control</b> <b>structure,</b> a loop-escape construct, and a selective <b>control</b> <b>structure.</b> Examples of usage are given...|$|R
40|$|The {{study of}} {{asynchronous}} <b>control</b> <b>structures</b> used for enforcing the coordination required {{to carry out}} an activity that exhibits concurrency is of considerable interest and importance. A large class of these <b>control</b> <b>structures</b> can be adequately and concisely described by Petri-nets. The Petri-net, being a graphical model, {{promises to be a}} powerful tool in the design of such <b>control</b> <b>structures.</b> However, precisely because it is a graphical model, the Petri-net is not amenable to elegant mathematical analysis. Hence it is difficult to find answers to significant questions regarding the structure and behavior of asynchronous <b>control</b> <b>structures</b> if their sole available descriptions are in the form of Petri-nets. For this reason, the problem of formulating valid algebraic models for the above-mentioned class of <b>control</b> <b>structures</b> is studied. In particular, attention is confined to those <b>control</b> <b>structures</b> that can be described by marked graphs, which are a restricted type of Petrinets. Two algebraic models called the C-D model and the Poset model are formulated and their validity is established. Both these models represent the <b>control</b> <b>structure</b> under study by specifying the cause-effect relationship imposed by the <b>control</b> <b>structure</b> on the flow of signals that are associated with it. Finally, {{as an example of the}} application of these two models, a simple scheme for realizing marked-graph-describable asynchronous <b>control</b> <b>structures</b> is demonstrated...|$|R
40|$|Stabilization of casing-heading {{instability}} from gas-lift wells {{is important}} since it increases production and reduces operational problems. This thesis is a contribution within feedback control stabilization of gas-lift wells with casing-heading dynamics. The main advantage of stabilizing the gas-lift well by feedback control, compared to traditional methods, is the limited production loss associated with feedback control stabilization. Two types of <b>control</b> <b>structures</b> are investigated in this thesis. The first type is <b>control</b> <b>structures</b> utilizing direct {{measurement of the}} process variable to be stabilized. The second type is <b>control</b> <b>structures</b> utilizing observers for estimation of the desired process variable. Six different <b>control</b> <b>structures</b> for stabilization of the single gas-lift well have been investigated. All six <b>control</b> <b>structures</b> were able to stabilize the gas-lift well. These <b>control</b> <b>structures</b> have been investigated by simulation studies and thereafter verified by experiments in a laboratory scal...|$|R
30|$|To {{test whether}} or not there was a {{difference}} in the mean efficacy percentages between the different <b>control</b> <b>structures</b> a one-way ANOVA was used. Where significant differences between the <b>control</b> <b>structures</b> were observed, Bonferroni post hoc tests were employed to determine which of the <b>control</b> <b>structures</b> differed significantly from each other in one-to-one comparisons.|$|R
5000|$|Because {{closures}} delay evaluation—i.e., {{they do not}} [...] "do" [...] {{anything until}} they are called—they {{can be used to}} define <b>control</b> <b>structures.</b> For example, all of Smalltalk's standard <b>control</b> <b>structures,</b> including branches (if/then/else) and loops (while and for), are defined using objects whose methods accept closures. Users can easily define their own <b>control</b> <b>structures</b> also.|$|R
40|$|This talk {{will touch}} on how {{standard}} usage patterns for the Goto statement became embodied in higher level <b>control</b> <b>structures,</b> {{ways in which}} higher level <b>control</b> <b>structures</b> can often express {{the intent of the}} programmer more clearly than lower level <b>control</b> <b>structures,</b> some of the controversy surrounding the Goto statement, common reasons for and ways of using Goto, and common ways of implementing arbitrary <b>control</b> <b>structures</b> in languages that do not contain the Goto statement. The latest version of this handout is available fro...|$|R
40|$|Abstract. In computability theory, program self-reference is formalized by the not-necessarily-constructive form of Kleene’s Recursion Theorem (krt). In a {{programming}} {{system in which}} krt holds, for any preassigned, algorithmic task, there exists a program that, in a sense, creates a copy of itself, and then performs that task on the self-copy. Herein, properties complementary to krt are considered. Of particular interest are those properties involving the implementation of <b>control</b> <b>structures.</b> One main result is that no property involving the implementation of denotational <b>control</b> <b>structures</b> is complementary to krt. This {{is in contrast to}} a result of Royer, which showed that implementation of if-then-else — a denotational <b>control</b> <b>structure</b> — is complementary to the constructive form of Kleene’s Recursion Theorem. Examples of non-denotational <b>control</b> <b>structures</b> whose implementation is complementary to krt are then given. Some such <b>control</b> <b>structures</b> so nearly resemble denotational <b>control</b> <b>structures</b> that they might be called quasi-denotational...|$|R
50|$|<b>Control</b> <b>structures</b> {{include the}} usual {{iterative}} and conditional Do Loops, If-Then-Else statements, and Case statements, {{with some more}} complex variants, such as ElseIf and nested <b>control</b> <b>structures.</b>|$|R
5000|$|The basic <b>control</b> <b>structures</b> {{include all}} of the {{standard}} dBase, and Clipper <b>control</b> <b>structures</b> as well as additional ones inspired by the C or Java programming languages: ...|$|R
40|$|This paper {{presents}} a hierarchical <b>control</b> <b>structure</b> for Multi terminal HVDC grids. The hierarchical <b>control</b> <b>structure</b> {{is inspired by}} the three-layer <b>control</b> <b>structure</b> of largescale AC power systems and it is divided into primary, secondary and tertiary <b>control.</b> This <b>structure</b> permits to create an easy interaction between power dispatch and the lower controllers. Moreover, a generalized voltage droop (GVD) characteristic is also proposed which facilitates control issues inside the Multi terminal HVDC grids. In the proposed <b>control</b> <b>structure,</b> the coefficients of the GVD characteristics are set based on the solution of a DC power flow algorithm, executed in the secondary control level. Postprint (published version...|$|R
5000|$|What {{may not be}} {{apparent}} is the <b>control</b> <b>structure</b> implicit in this unit. The [...] command marks {{the entrance to a}} judging block This <b>control</b> <b>structure</b> is one of TUTOR's unique features.|$|R
40|$|There are two {{theories}} on {{the determinants of}} the <b>control</b> <b>structure</b> of the firm. The first theory postulates that the <b>control</b> <b>structure</b> is determined by company-specific characteristics. The second theory emphasises the importance of institutional characteristics in shaping this structure. In this paper, we test the validity of both theories {{in the context of}} a cross-listing, which causes a change to the company's legal environment. We find that the initial <b>control</b> <b>structure,</b> risk and size determine the <b>control</b> <b>structure</b> post cross-listing and that cross-listing on better quality markets facilitates the evolution of control towards more dispersed control. To conclude, company characteristics have a greater impact than country characteristics on the company's decision to cross-list and are also better at explaining the change in the <b>control</b> <b>structure</b> post cross-listing...|$|R
30|$|Similarly the {{combination}} of <b>control</b> <b>structures</b> targeted at maximising pigeon reduction would improve in efficacy if the open cabling ducts and ceiling boards that provide alternative perching sites are attended to. According to Ryzhov and Mursejev (2010), the success and efficacy of <b>control</b> <b>structures</b> to reduce pigeon populations depend on the conditions of usage. The success of <b>control</b> <b>structures</b> is therefore dependent on the context of application and factors influencing a site. Blanket statements on the expected percentage reduction of pigeon populations by <b>control</b> <b>structures</b> cannot be guaranteed as each site and pigeon population index interaction is unique as seen on the Muckleneuk campus. Similar studies at other sites considering building design and optimal pigeon <b>control</b> <b>structure</b> placement {{would need to be}} undertaken to confirm a range of efficacies for visual deterrents and physical barriers specific for managing pigeons.|$|R
40|$|A {{homogeneous}} charge {{compression ignition}} (HCCI) engine requires closed-loop control of combustion phasing for reliable operation. Variable valve actuation (VVA) {{has previously been}} shown to enable cycle-to-cycle, cylinder-individual control with high precision, but suffers from a narrow operating range. Adding variable exhaust gas recirculation (EGR) to the closed-loop <b>control</b> <b>structure</b> can extend the operating range. A mid-ranging <b>control</b> <b>structure</b> is presented here for combined VVA and EGR actuations in a multi-cylinder engine. The <b>control</b> <b>structure</b> is simple to implement and preserves the fast, cylinderindividual, and precise actuation of the VVA system while extending the operating range. Experimental results verify {{the performance of the}} <b>control</b> <b>structure...</b>|$|R
40|$|Viewgraphs on {{experiment}} and simulation for <b>control</b> <b>structure</b> interaction (CSI) are presented. Topics covered include: <b>control</b> <b>structure</b> interaction; typical control/structure interaction system; CSI problem classification; actuator/sensor models; modeling uncertainty; noise models; real-time computations; and discrete versus continuous...|$|R
40|$|The Python {{programming}} language {{does not have}} a built in switch/case <b>control</b> <b>structure</b> as found in many other high level {{programming language}}s. It is thought by some that this is a deficiency in the language, and the <b>control</b> <b>structure</b> should be added. This paper demonstrates that not only is the <b>control</b> <b>structure</b> not needed, but that the methods available in Python are more expressive than built in case statements in other high level languages...|$|R
40|$|Future multiterminal HVDC {{systems are}} {{expected}} to utilize dc voltage droop controllers, and several <b>control</b> <b>structures</b> have been proposed in the literature. This paper proposes a methodology to analyze the impact of various types of droop <b>control</b> <b>structures</b> using small-signal stability analysis considering all possible combinations of droop gains. The different <b>control</b> <b>structures</b> are evaluated by the active power transfer capability {{as a function of}} the droop gains, considering various possible stability margins. This reveals the flexibility and robustness against active power flow variations, due to disturbances for all of the implementations. A case study analyzing a three-terminal HVDC VSC-based grid with eight different kinds of droop control schemes points out that three <b>control</b> <b>structures</b> outperform the remaining ones. In addition, a multivendor case is considered where the most beneficial combinations of <b>control</b> <b>structures</b> have been combined in order to find the best performing combination...|$|R
40|$|Exploring the {{disturbance}} rejection capability of possible multi-loop <b>control</b> <b>structures</b> for the ALSTOM gasifier benchmark process and selecting the appropriate <b>control</b> <b>structure</b> {{are presented in}} this paper. Generalised relative disturbance gain (GRDG) analysis is used for <b>control</b> <b>structure</b> determination. In order to carry out GRDG analysis, process models {{in the form of}} transfer functions are obtained from the discrete time models identified using the output-error (OE) system identification method from the simulated process operation data. Models identified with the OE method can provide accurate long range prediction (or simulation) performance and, hence, lead to accurate transfer function models. The GRDG analysis of four control schemes proposed by Asmar et al. (2000) clearly shows that the <b>control</b> <b>structure</b> employed by the baseline controller is the most favoured multi-loop <b>control</b> <b>structure.</b> This study provides explanations for the impressive performance of the ALSTOM baseline controller that were not available before...|$|R
25|$|In {{contrast}} to most other major programming languages, Lisp allows implementing <b>control</b> <b>structures</b> using the language. Several <b>control</b> <b>structures</b> are implemented as Lisp macros, {{and can even}} be macro-expanded by the programmer {{who wants to know}} how they work.|$|R
50|$|The {{language}} allows ordinary recursive data types, such {{as might}} be found in ML, which are required to be finite, and corecursive data types, which are allowed to be potentially infinite. The <b>control</b> <b>structure</b> for operating on recursive data types is primitive recursion or paramorphism, and the <b>control</b> <b>structure</b> for corecursive data types is primitive co-recursion or apomorphism. Neither <b>control</b> <b>structure</b> can operate over the other kind of data, so all paramorphisms terminate and all apomorphisms are productive.|$|R
40|$|Teaching {{programming}} {{has always}} been a difficult subject, especially <b>control</b> <b>structures.</b> The introduction of Initial Learning Environments like GameMaker and Alice made learning these <b>control</b> <b>structures</b> easier and more fun. A new environment in this area is App Inventor, created by Google and now maintained by MIT. App Inventor allows the user to create apps for the mobile operating system Android. This research aims to answer whether App Inventor really makes learning <b>control</b> <b>structures</b> more fun and easier. A series of lessons has been created, which teaches the basic <b>control</b> <b>structures</b> using App Inventor. This series of lessons was tested at a Dutch secondary school and resulted in positive results but different opinions among the students...|$|R
40|$|This paper {{addresses}} broad {{issues relating}} {{the application of}} artificial intelligence (AI) technologies to the operation and control of large scale interconnected electric power systems. A fundamental issue discussed in this paper is the <b>control</b> <b>structure</b> of power systems. An evaluation of the <b>control</b> <b>structure</b> yields the characteristic requirements of knowledge-based systems and can indicate a means of integrating &quot;intelligent &quot; control with &quot;algorithmic &quot; control systems. As a result the nature of an overall knowledge-based philosophy can be speculated. The paper presents a hypothesis that the structure of knowledge, in a knowledge-based system, should evolve as {{the structure of the}} power system evolves in real-time. This hypothesis is explored in terms of the distributed and centralized power system <b>control</b> <b>structures,</b> and the hierarchies that exist in the <b>control</b> <b>structures.</b> The hierarchical nature of the <b>control</b> <b>structures</b> suggest a hierarchical structure in the knowledge-based system. Parallelism between the power system. <b>control</b> <b>structure</b> and the structure of knowledge, in the knowledge-based system, is conjectured as a fundamental requirement of the information processing (IP) system. The evolution of knowledge then is speculated to occur through a process involving le...|$|R
40|$|Abstract: Two {{non-linear}} <b>control</b> <b>structures</b> {{are considered}} for position control of an electrohydraulic actuator. The first <b>control</b> <b>structure</b> {{is derived from}} a direct near input–output (IO) linearization of the actuator model with position as output. The second <b>control</b> <b>structure</b> is a cascade of a near IO linearizing pressure force controller as an inner loop to a feedback plus feedforward outer-loop position controller. In the present paper, it is shown that the two <b>control</b> <b>structures</b> are theoretically equivalent. Then, it is highlighted that the equivalence can be exploited to extract a simple and intuitive tuning procedure for selecting the gains of one <b>control</b> <b>structure</b> from the gains of the other structure. This result is particularly useful for tuning the near IO linearizing position controller as the interpretation of its gains is obscured by the non-linear state transformation of the feedback linearization. Some numerical simulation and experimental results are included to demonstrate the identified tuning procedure...|$|R
40|$|There {{has been}} {{significant}} interest in understanding how {{the distribution of}} parental control over international joint ventures (IJV) influences IJV outcomes (e. g., parent conflict, survival, performance). Yet, the accumulation {{of research on the}} relationship between <b>control</b> <b>structure</b> and IJV outcomes has been somewhat inconclusive and even contradictory. We contribute to this research stream by developing an organizational justice-based contingency model relating parental <b>control</b> <b>structure</b> to parent conflict. We suggest that the level of conflict between IJV parents will depend on the consistencies between the <b>control</b> <b>structure</b> and parents’ contribution of proprietary resources, and between <b>control</b> <b>structure</b> and the parents’ abilities to effectively monitor operations. Our analysis of Vietnamese joint ventures provides some support for our model, and suggests that the relationship between parent <b>control</b> <b>structure</b> and IJV outcomes is perhaps more complex than previously thought. Journal of International Business Studies (2005) 36, 156 – 174. doi: 10. 1057 /palgrave. jibs. 8400121...|$|R
30|$|The {{pest control}} company {{marketing}} and selling the pigeon <b>control</b> <b>structures</b> identified the optimal placement of each <b>control</b> <b>structure</b> tested {{in this study}} per building on campus to ensure that each building was suitably covered by the chosen <b>structure</b> for pigeon <b>control</b> purposes.|$|R
