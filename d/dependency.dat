10000|10000|Public
5|$|Behavioral predispositions to the drug, such as impulse {{effects and}} <b>dependency.</b>|$|E
5|$|<b>Dependency</b> graphs without {{circular}} dependencies form DAGs.|$|E
5|$|<b>Dependency</b> using mice.|$|E
40|$|AbstractWe {{investigate}} whether a sound and complete formal system for join <b>dependencies</b> can be found. We present {{a system that}} is sound and complete for tuple generating <b>dependencies</b> and is strong enough to derive join <b>dependencies</b> from join <b>dependencies</b> using only generalized join <b>dependencies</b> in the derivation. We also present a system that sound and complete for tuple generating <b>dependencies</b> and is complete for extended join <b>dependencies</b> (which are a special case of generalized join <b>dependencies).</b> Finally, we construct a Gentzen-style system that is sound and complete for join <b>dependencies.</b> The last two systems have unbounded inference rules...|$|R
40|$|Dr. Chien-Chung Chan Since {{processors}} {{spend most}} of the time in executing loop nests because of the <b>dependencies,</b> minimizing <b>dependencies</b> across loops is vital for compiler optimization. This paper explores two methods, sums of data <b>dependencies</b> and dominant data <b>dependencies</b> for eliminating <b>dependencies</b> in multi-dimensional loops. The first method eliminates <b>dependencies</b> by combining other <b>dependencies</b> and method two eliminates <b>dependencies</b> by making use of the distance of the dependence. We also present how to apply loop transformation techniques to these methods to explore much better results. To conclude we provide an algorithm for minimizing the number of <b>dependencies</b> in multi-dimensional loops...|$|R
40|$|AbstractWe {{introduce}} {{and motivate}} {{the study of}} numerical <b>dependencies</b> which are a generalization of functional <b>dependencies.</b> We prove that there does not exist a finite set of sound and complete inference rules for numerical <b>dependencies</b> {{in contrast to the}} case of functional <b>dependencies.</b> We also prove that nontrivial numerical <b>dependencies</b> which are not functional <b>dependencies</b> cannot be expressed by Horn formulas in first-order logic, and show some applications of numerical <b>dependencies...</b>|$|R
5|$|An Advanced Packaging Tool (APT) tool allows {{administering}} an installed Debian {{system to}} retrieve and resolve package dependencies from repositories. APT tools share <b>dependency</b> information and cached packages.|$|E
5|$|In this context, a <b>dependency</b> graph is a graph {{that has}} a vertex for each object to be updated, and an edge {{connecting}} two objects whenever one of them needs to be updated earlier than the other. A cycle in this graph is called a circular <b>dependency,</b> and is generally not allowed, because {{there would be no}} way to consistently schedule the tasks involved in the cycle.|$|E
5|$|In this example, {{instruction}} 3 {{cannot be}} executed before (or even in parallel with) instruction 2, because instruction 3 uses a result from instruction 2. It violates condition 1, and thus introduces a flow <b>dependency.</b>|$|E
25|$|Morphological <b>dependencies</b> obtain between {{words or}} parts of words. When a given word or part of a word {{influences}} the form of another word, then the latter is morphologically dependent on the former. Agreement and concord are therefore manifestations of morphological <b>dependencies.</b> Like semantic <b>dependencies,</b> morphological <b>dependencies</b> can overlap with and point {{in the same direction}} as syntactic <b>dependencies,</b> overlap with and point in the opposite direction of syntactic <b>dependencies,</b> or be entirely independent of syntactic <b>dependencies.</b> The arrows are now used to indicate morphological <b>dependencies.</b>|$|R
40|$|Changes in {{business}} processes correlate {{with changes in}} <b>dependencies.</b> The fundamental question we deal with in this paper is which <b>dependencies</b> may show up {{in business}} processes and how to find those <b>dependencies.</b> This paper presents a generic classification of <b>dependencies</b> that may show up in every situation. All of these <b>dependencies</b> {{have to be taken}} care off through coordination mechanisms. It is argued that starting from a classification of <b>dependencies</b> one can search for <b>dependencies</b> that are present in a business process; one can introduce new <b>dependencies,</b> or change old <b>dependencies.</b> In this paper we merely present the classification (not how to use it) ...|$|R
5000|$|Functional <b>dependencies</b> however {{should not}} be {{confused}} with inclusion <b>dependencies,</b> which are the formalism for foreign keys; even though they are used for normalization, functional <b>dependencies</b> express constraints over one relation (schema), whereas inclusion <b>dependencies</b> express constraints between relation schemas in a database schema. Furthermore, the two notions do not even intersect in the classification of dependencies: functional <b>dependencies</b> are equality-generating <b>dependencies</b> whereas inclusion <b>dependencies</b> are tuple-generating <b>dependencies.</b> Enforcing referential constraints after relation schema decomposition (normalization) requires a new formalism, i.e. inclusion <b>dependencies.</b> In the decomposition resulting from Heath's theorem, there's nothing preventing the insertion of tuples in [...] having some value of X not found in [...]|$|R
5|$|Lynott died in {{hospital}} in Salisbury, Wiltshire, on 4 January 1986, aged 36, having suffered from internal abscesses, pneumonia and septicaemia, {{brought on by}} his drug <b>dependency,</b> which led to multiple organ failure.|$|E
5|$|New Zealand {{is one of}} 16 realms {{within the}} Commonwealth. The Realm of New Zealand is the entire area over which the Queen of New Zealand is sovereign, and {{comprises}} New Zealand, Tokelau, the Ross <b>Dependency,</b> the Cook Islands and Niue. The Cook Islands and Niue are self-governing states in free association with New Zealand. The New Zealand Parliament cannot pass legislation for these countries, but with their consent can act on behalf of them in foreign affairs and defence. Tokelau is a non-self-governing territory, but is administered by a council of three elders (one from each Tokelauan atoll). The Ross <b>Dependency</b> is New Zealand's territorial claim in Antarctica, where it operates the Scott Base research facility. New Zealand nationality law treats {{all parts of the}} realm equally, so most people born in New Zealand, the Cook Islands, Niue, Tokelau and the Ross <b>Dependency</b> are New Zealand citizens.|$|E
5|$|One can {{ask whether}} the problem is at least {{solvable}} in a time arbitrarily highly dependent on G, but with a fixed polynomial <b>dependency</b> {{on the size of}} H.|$|E
40|$|International audienceInclusion <b>dependencies</b> {{together}} with functional <b>dependencies</b> form {{the most important}} data <b>dependencies</b> used in practice. Inclusion <b>dependencies</b> are important for various database applications such as database design and maintenance, semantic query optimization and efficient view maintenance of data warehouse. Existing approaches for discovering inclusion <b>dependencies</b> consist in producing the whole set of inclusion <b>dependencies</b> holding in a database, leaving the task of selecting the interesting ones to an expert user. In this paper we {{take another look at}} the problem of discovering inclusion <b>dependencies.</b> We exploit the logical navigation, inherently available in relational databases through workloads of SQL statements, as a guess to automatically find out only interesting inclusion <b>dependencies.</b> This assumption leads us to devise a tractable algorithm for discovering interesting inclusion <b>dependencies.</b> Within this framework, approximate <b>dependencies,</b> i. e. inclusion <b>dependencies</b> which almost hold, are also considered. As an example, we present a novel application, namely self-tuning the logical database design, where the discovered inclusion <b>dependencies</b> can be used effectively...|$|R
2500|$|Semantic <b>dependencies</b> are {{understood}} in terms of predicates and their arguments. The arguments of a predicate are semantically dependent on that predicate. Often, semantic <b>dependencies</b> overlap with and point {{in the same direction as}} syntactic <b>dependencies.</b> At times, however, semantic <b>dependencies</b> can point in the opposite direction of syntactic <b>dependencies,</b> or they can be entirely independent of syntactic <b>dependencies.</b> The hierarchy of words in the following examples show standard syntactic <b>dependencies,</b> whereas the arrows indicate semantic dependencies: ...|$|R
5000|$|A {{notion of}} logical {{implication}} is defined for functional <b>dependencies</b> {{in the following}} way: a set of functional <b>dependencies</b> [...] logically implies another set of <b>dependencies</b> , if any relation R satisfying all <b>dependencies</b> from [...] also satisfies all <b>dependencies</b> from this is usually written [...] The notion of logical implication for functional <b>dependencies</b> admits a sound and complete finite axiomatization, known as Armstrong's axioms.|$|R
5|$|In 1981, Giurgiu and Călărași {{were split}} from Ialomița {{and the former}} county of Ilfov, while in 1997, Ilfov County, which had been a <b>dependency</b> of the {{municipality}} of Bucharest for nearly two decades, was reinstated. The county borders set in 1968 are still largely in place today, but the functions of different authorities have changed due to administrative reforms in the 1990s.|$|E
5|$|Many regions have {{prescribed}} standards which ambulances should, or must, meet {{in order}} to be used for their role. These standards may have different levels which reflect the type of patient which the ambulance is expected to transport (for instance specifying a different standard for routine patient transport than high <b>dependency),</b> or may base standards on the size of vehicle.|$|E
5|$|Route 17 {{has been}} the object of several studies {{exploring}} a Bergen BRT, a bus rapid transit system that would potentially alleviate some traffic congestion and decrease automobile <b>dependency.</b> While funding has not been identified, the potential routes of the system have centered around the vicinity radiating from the malls of Paramus.|$|E
40|$|Transaction <b>dependencies</b> {{have been}} {{recognized}} as a valuable method in describing restrictions on the executions of sets of transactions. A transaction closure is a generalized transaction structure consisting {{of a set of}} related transactions which are connected by special <b>dependencies.</b> Traditionally, relationships between transactions are formulated by binary <b>dependencies.</b> However, there are applications scenarios where <b>dependencies</b> must be specified among more than two transactions. Since n-ary <b>dependencies</b> cannot be expressed by binary <b>dependencies,</b> appropriate extensions are required. In this paper, we extend the concept of transaction closure by ternary termination <b>dependencies.</b> We show how n-ary termination <b>dependencies</b> can be expressed by binary and ternary termination <b>dependencies.</b> As a result, we present rules for reasoning about the combination of these termination <b>dependencies.</b> 1 Introduction The concept of transaction closure [10] provides a uniform framework [...] ...|$|R
5000|$|A {{canonical}} cover [...] for F (a set {{of functional}} <b>dependencies</b> on a relation scheme) {{is a set}} of <b>dependencies</b> such that F logically implies all <b>dependencies</b> in , and [...] logically implies all <b>dependencies</b> in F.|$|R
5000|$|Given {{a set of}} {{functional}} <b>dependencies</b> , an Armstrong relation is a relation which satisfies all the functional <b>dependencies</b> in the closure [...] and only those <b>dependencies.</b> Unfortunately, the minimum-size Armstrong relation for a given set of <b>dependencies</b> can have a size which is an exponential function {{of the number of}} attributes in the <b>dependencies</b> considered.|$|R
5|$|Several {{geographical}} {{features are}} named for Worsley, including Mount Worsley on South Georgia, Cape Worsley in the British Antarctic Territory, the Worsley Icefalls in the Ross <b>Dependency</b> and Worsley Harbour at Spitzbergen. Worsleys Road in the Christchurch suburb of Cracroft {{is named for}} his grandfather; it was built by him as an access road for his farm.|$|E
5|$|The X-ray {{spectroscopy}} done by Henry Moseley in 1914 {{showed a}} direct <b>dependency</b> between spectral line and effective nuclear charge. This {{led to the}} nuclear charge, or atomic number of an element, being used to ascertain its place within the periodic table. With this method, Moseley determined the number of lanthanides and showed the gaps in the atomic number sequence at numbers 43, 61, 72, and 75.|$|E
5|$|The first {{priority}} in suspected or confirmed pituitary apoplexy is stabilization of the circulatory system. Cortisol deficiency can cause severe low blood pressure. Depending on {{the severity of}} the illness, admission to a high <b>dependency</b> unit (HDU) may be required.|$|E
40|$|One of {{the reasons}} why {{large-scale}} software development is difficult is the number of <b>dependencies</b> that software engineers need to face: e. g., <b>dependencies</b> among the software components and among the development tasks. These <b>dependencies</b> create a need for communication and coordination that requires continuous effort by software developers. Empirical studies, including our own, suggest that technical <b>dependencies</b> among software components create social <b>dependencies</b> among the software developers implementing these components. Based on this observation, we developed Ariadne, a Java plug-in for Eclipse. Ariadne analyzes a Java project to identify program <b>dependencies</b> and collects authorship information about the project by connecting to a configuration management repository. Through this process, Ariadne can “translate ” technical <b>dependencies</b> among software components into social <b>dependencies</b> among software developers. This paper describes the design of Ariadne, how it identifies technical <b>dependencies</b> among software components, how it extracts information from configuration management systems and, finally, how it translates this into social <b>dependencies.</b> Ariadne’s purpose is to create a bridge between technical and social <b>dependencies...</b>|$|R
40|$|Functional <b>dependencies</b> add {{semantics}} to {{a database}} schema# and {{are useful for}} studying vari# ous problems# such as database design# query optimization and how <b>dependencies</b> are carried into a view. In {{the context of a}} nested relational model# these <b>dependencies</b> can be extended by using path expressions instead of attribute names# resulting in a class of <b>dependencies</b> that we call nested functional <b>dependencies</b> #NFDs#. NFDs de#ne a natural class of <b>dependencies</b> in complex data struc# tures# in particular they allow the speci#cation of many useful intra# and inter#set <b>dependencies</b> #i. e. # <b>dependencies</b> that are local to a set and <b>dependencies</b> that require consistency between sets#. Such constraints cannot be captured by existing notions of functional# multi#valued# or join <b>dependencies.</b> This paper presents the de#nition of NFDs and gives their meaning by translation to logic. It then presents a sound and complete set of eight inference rules for NFDs# and discusses approaches to handling th [...] ...|$|R
40|$|View Integration is {{investigated}} {{with the}} help of three classes of interrelational <b>dependencies,</b> II-I-cluslon <b>dependencies,</b> exclusion <b>dependencies</b> and union functional <b>dependencies</b> The process of view integration 1 s divided Into two steps, combination and optlmlzatlon View combination consists in deflnlng new interrelational <b>dependencies</b> that capture similarities between different views The optimization step tries to reduce redundancy {{and the size of the}} schema Finally, general results about interrelational <b>dependencies</b> are presented that lead to an optimization procedure for a restricted class of schemas...|$|R
5|$|The {{impacts on}} lifelines {{may also be}} inter-dependent. The {{vulnerability}} of each lifeline may depend on: the type of hazard, the spatial density of its critical linkages, the <b>dependency</b> on critical linkages, susceptibility to damage and speed of service restoration, state of repair or age, and institutional characteristics or ownership.|$|E
5|$|The {{lack of a}} {{permanent}} population would seem to prevent the British overseas territories of South Georgia and the South Sandwich Islands and British Antarctic Territory, the New Zealand territory of Ross <b>Dependency</b> and the Australian external territories of Australian Antarctic Territory, Ashmore and Cartier Islands, Coral Sea Islands and Heard Island and McDonald Islands from competing.|$|E
5|$|The {{province}} of Punjab, in which Faisalabad {{is the second}} largest city, has prevalent sociocultural distinctions. Population sizes vary by district but some distinguishing factors include a young age structure, high age <b>dependency</b> ratio, {{a higher percentage of}} males, a higher proportion of married population, and heterogeneity in castes and languages.|$|E
50|$|In general, it's {{considered}} {{good practice}} to prefer explicit <b>dependencies</b> whenever possible. This is because explicit <b>dependencies</b> {{are easier to}} map and analyze than implicit <b>dependencies.</b>|$|R
40|$|This paper {{presents}} a canonical extension of object-oriented development for roles and context-dependent behavior. We syntactically distinguish between classes as natural types and roles as role types. Thereby a class consists of roles and their <b>dependencies.</b> The visibility and {{the access to}} an object depends on its current role. We develop powerful facilities to organize the <b>dependencies</b> of roles: equality and functional <b>dependencies</b> between attributes, equality <b>dependencies</b> between methods and complex <b>dependencies</b> called inheritance and class <b>dependencies.</b> This supports information hiding as well as encapsulation...|$|R
5000|$|Managed build <b>dependencies,</b> {{installation}} <b>dependencies,</b> conflicts, breaks.|$|R
