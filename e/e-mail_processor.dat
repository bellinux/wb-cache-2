1|8|Public
40|$|The EnerGuide for Houses (EGH) {{database}} is {{a management}} information tool and central depository for tracking residential energy evaluations and measuring {{benefits from the}} energy evaluations delivered across Canada. The EGH database is a comprehensive computer-based system developed by Natural Resources Canada (NRCan) {{for the management of}} its energy efficiency oriented programs. Energy advisors perform detailed house energy efficiency evaluations and use the energy analysis software to recommend energy efficiency measures to homeowners. The energy analysis software generates a detailed house data file. Once the house evaluation is complete, the energy advisor sends the house data to the EGH database. The EGH database contains an <b>e-mail</b> <b>processor</b> to download the house data from service organizations. This data is subsequently verified and further assembled in a database file. Each data file contains information on the house’s physical characteristics and its energy requirements. Information collected in the database can be used by internal program personnel to generate statistics such as the number of house evaluations performed across the country or technical house characteristics data and also assist in making policy decisions. The database contains files for more than 165, 000 houses rated across Canada of which about 26, 000 have been re-evaluated after homeowners implemented energy efficiency retrofits. The concepts and database structure allow for the implementation and management of a large-scale energy efficiency program through various delivery channels...|$|E
40|$|Tertiary {{education}} institutions {{would like to}} be recognized for social, knowledge and economic contributions in South Africa. There has also been an increase in the different uses of the Internet (e. g. online banking, online shopping, learning and teaching within tertiary {{education institutions}}.) Those institutions use some form of technology like <b>e-mail,</b> word <b>processors,</b> spreadsheets, Internet etc. This increase has contributed to the electronic learning revolution and some South African tertiary institutions are making that technology-based paradigm shift for this reason. This paper starts with a brief introduction to the concept of e-Learning, presenting a compelling case why institutions implement e-Learning and describes the difference between technology-delivered e-Learning and technology-enhanced e-Learning. The discussion includes some advantages and disadvantages of Technology-enhanced e-Learning and then examines some learner, facilitator and technology aspects of technology-enhanced e-Learning. It continues with...|$|R
40|$|Part 9 : Short PapersInternational audienceWith {{tackling}} the dilemma between the privacy concern and information utilization in mind, an efficient pairing-based instantiation {{of a new}} primitive, which we call Selective Disclosure scheme, is proposed in this paper. Selective Disclosure scheme allows the document issuer to distribute and publish the outsourced document in a secure way such that it achieves fine-grained authorized reading by selective parts in a document to different visitors and only one copy is needed. It is proved secure against fully adaptive adversaries in the random oracle model. The Selective Disclosure technique will be of use by embedding or integrating it into various word <b>processors,</b> <b>e-mail,.</b> etc...|$|R
5000|$|AOCE {{aimed to}} fix {{all of these}} issues at the same time. At [...] "one end" [...] of the system, AOCE focused on the {{underlying}} delivery and addressing systems, generalizing the e-mail concept so the system could be used to deliver anything from <b>e-mail</b> to word <b>processor</b> documents to print jobs. Addressing was another issue the market was struggling with, so AOCE would offer a single universal addressing mechanism and address book, one that could support not only people's e-mail addresses, but the [...] "addresses" [...] of things like printers and fax machines as well. These could be looked up in an interface much easier to use than the existing solution, the Chooser.|$|R
40|$|This {{presentation}} {{analyzes the}} transformations {{at the level}} of the daily judiciary practices caused by what has become known as scientific proof (by focusing the particular case of DNA typing) and by the use of the new information and communication technology (ICT), such as the use of personal computers’ tools, hence at the magistrates dispose, such as word <b>processor,</b> <b>e-mail</b> and internet and changes on trial’s social interactions, namely by the use of video conferencing during trials. Another relevant aspect of the presence of the ICTs under study is the perceptions about the possible impacts on citizen’s rights raised by the creation of information systems containing personal data (namely genetic information) used for justice administration purposes. Fundação para a Ciência e a Tecnologia (FCT...|$|R
40|$|Recently, as ICT infiltrates {{our society}} widely, the typing skill that is basic {{to all the}} ICT skills has　become {{important}} more and more. That is, {{it seems to be}} very important {{to be able to do}} touch typing　in order to master PC such as using the word <b>processor,</b> <b>e-mails,</b> and spread sheets, etc. In this study, to make a data to think the directionality of teaching the typing skill, freshmen in a university being made to evaluate themselves of the typing test, the relationship between the evaluation and the input speed was examined. As a result, it has become clear that the freshmen tend to feel typing alphabets more difficult than Roman alphabets. In addition, while they are typing what they feel to be difficult, their tension rise and they feel the passage of time to be fast, which leads to their difficulty to put out　enough results...|$|R
40|$|We {{propose a}} {{hierarchical}} stimulus presentation paradigm for a P 300 -based Hangul (Korean script) input system. A P 300 -based input system (or speller) {{is one of}} the most promising noninvasive brain-computer interface (BCI) applications based on its direct applicability in many computer programs. Although the previous row/column stimulus presentation paradigm has been well-suited to the English input, it may not be optimal for a Hangul input because Hangul has a distinct hierarchical structure. To overcome the limitation of the previous paradigms, we developed a new P 300 -based Hangul input system by taking the unique hierarchical structure of Hangul into account for creating a hierarchical stimulus presentation paradigm. By using the hierarchical structure, we can effectively reduce the window size of the interface without loss of classification accuracy. A performance comparison shows that the hierarchical paradigm exhibits higher classification accuracy than the row/column paradigm even with a smaller window size. Thus, the proposed hierarchical paradigm is more efficient to spell Hangul and will be more useful for BCI-based Hangul input for a text messenger, <b>e-mail</b> program, word <b>processor</b> and other similar applications. close...|$|R
40|$|Original title: Achterstand en afstand. New {{computer}} and Internet applications are rapidly penetrating our daily lives. Thinking {{back to a}} world without <b>e-mail,</b> Internet, word <b>processors</b> and databases, it is amazing how rapidly we have become accustomed to the convenience and efficiency of these applications. Yet not everyone is equally adept at using them. This sometimes puts people at a disadvantage {{because they have no}} access to unique information or irreplaceable communication opportunities. In other cases it can isolate people because they fail to connect with what has become a dominant lifestyle. Not everyone has the ability or the desire to become adept at using all kinds of new software. This raises new questions for policy and research, such as: What is needed to become - and remain - familiar with modern ICT? Which groups fail to do this and why? What are the consequences of this for everyday life? This report explores the position of the elderly, the low-educated, the economically inactive and ethnic minorities. It is found that these groups - for various reasons - have fewer ICT skills {{than the rest of the}} population. The study looks at which factors influence this disadvantage and what consequences it has for the groups studied. Among the topics covered are the social integration of older people and job-seeking behaviour by the unemployed...|$|R
40|$|XXXIII, 603 p.; 24 cmLibro ElectrónicoEn cub. : Remix the Web {{to create}} {{cutting-edge}} web applicationsHow {{many times have}} you seen a web site and said, “This would be exactly what I wanted— if only... ” If only you could combine the statistics here with data from your company’s earnings projections. If only you could take the addresses for those restaurants and plot them on one map. How often have you entered the date of a concert into your calendar with a single click instead of retyping? How often do you wish that you could make all the different parts of your digital world—your <b>e-mail,</b> your word <b>processor</b> documents, your photos, your search results, your maps, your presentations—work together more seamlessly? After all, it’s all digital and malleable information—shouldn’t it all just fit together? In fact, below the surface, all the data, web sites, and applications you use could fit together. This book teaches you how to forge those latent connections—to make the Web your own—by remixing information to create your own mashups. A mashup, {{in the words of the}} Wikipedia, is a web site or web application “that seamlessly combines content from more than one source into an integrated experience. ” 1 Learning how to draw content from the Web together into new integrated interfaces and applications, whether for yourself or for other others, is the central concern of this book. ¿Cuántas veces ha visto usted a un sitio web y le dijo: "Esto sería exactamente lo que quería- si sólo... "Si sólo pudiera combinar las estadísticas aquí con los datos de las ganancias de su empresa proyecciones. Si tan sólo pudiera tener las direcciones de los restaurantes y colócalas en una mapa. ¿Cuántas veces has entrado en la fecha de un concierto en su calendario con un solo clic en lugar de volver a escribir? ¿Con qué frecuencia desea que usted podría hacer todas las diferentes partes de su mundo digital, el correo electrónico, los documentos procesador de textos, fotos, resultados de la búsqueda, sus mapas, sus presentaciones, trabajar juntos con mayor perfección? Después de todo, todo es digital y maleable que la información shouldn't a sólo encajan entre sí? De hecho, debajo de la superficie, todos los datos, sitios web, y aplicaciones que utiliza podría encajar. Este libro te enseña a forjar esas conexiones latentes a hacer de la web su propio por información remezcla para crear su propia mashups. Un mashup, en palabras de la Wikipedia, es un sitio web o aplicación web "que combina a la perfección el contenido de más de una fuente en una experiencia integrada. " 1 Aprender a dibujar el contenido de la Web junto a nuevos interfaces integradas y aplicaciones, ya sea para usted o para otros, es el centro de preocupación de este libro. The modern Web is awash with data and services just waiting to be used, but how do you make effective use of all this information? The answer lies in APIs (such as Google Maps, Flickr, and Amazon Web Services) and remixing, or mashups. "Pro Web 2. 0 Mashups: Remixing Data and Web Services" teaches you everything you need to create useful, dynamic real-world applications using APIs, web services, Ajax, web standards, and server-side languages. All you need to make full use of this book is basic knowledge of HTML, CSS, and JavaScript, and at least one server-side language (such as PHP or ASP. NET). Highlights include the following: Looks at the overall shape of todays Web from a developers point of view [...] what are its main features, and what is available for us to use to develop applications? Contains real-world examples of creating mashups using all the major APIs. Contains examples written in multiple server-side languages. What you'll learn Understand how the constituent parts of the modern Web fit together [...] web standards, Ajax, APIs, libraries, tagging, blogs, wikis, and more. Create different types of mashup, for example mapping mashups, search functionality, calendars, RSS/Atom feeds, social bookmarking, online storage systems, open document formats, and more. Build Web 2. 0 applications using HTML, CSS, JavaScript, Ajax, server-side languages, APIs, and libraries Who is this book for? This book is for any web developer who is already comfortable with HTML, CSS, JavaScript, and at least one server-side language and wants to learn how to create Web 2. 0 applications. About the Apress Pro Series The Apress Pro series books are practical, professionaltutorials to keep you on and moving up the professional ladder. You have gotten the job, now you need to hone your skills in these tough competitive times. The Apress Pro series expands your skills and expertise in exactly the areas you need. Master the content of a Pro book, and you will always be able to get the job done in a professional development project. Written by experts in their field, Pro series books from Apress give you the hard-won solutions to problems you will face in your professional programming career. Related Titles Beginning Google Maps Applications with PHP and Ajax: From Novice to Professional Beginning Google Maps Applications with Rails and Ajax: From Novice to Professional Building Flickr Applications with PHP Pro DOM Scripting with Ajax, APIs and Libraries Pro Ajax and the. NET 2. 0 Platform Pro Ajax and Java Frameworks. About the Author xxi About the Technical Reviewer xxiii Acknowledgments xxv Introduction xxvii PART 1 Remixing Information Without Programming CHAPTER 1 Learning from Specific Mashups 3 Looking for Patterns in Mashups 3 Housingmaps. com 5 What Is Being Combined? 5 Why Are the Constituent Elements Being Combined? What’s the Problem Being Solved? 5 Where Is the Remixing Happening? 6 How Are These Elements Being Combined? 6 Comparable Mashups 7 Google Maps in Flickr 7 What Is Being Combined? 8 Why Are the Constituent Elements Being Combined? What’s the Problem Being Solved? 8 How Are These Elements Being Combined? 12 Comparable Mashups 13 LibraryLookup Bookmarklet 13 Configuring a LibraryLookup Bookmarklet 14 Invoking the LibraryLookup Bookmarklet 15 How Does This Mashup Work? 16 How Can This Mashup Be Extended? 17 Comparable Mashups 18 Tracking Other Mashups 18 Summary 18 vii CHAPTER 2 Uncovering the Mashup Potential of Web Sites 21 What Makes Web Sites and Applications Mashable 22 Ascertaining the Fundamental Entities of the Web Site 22 Public APIs and Existing Mashups 23 Use of Ajax 24 Embedded Scriptability 24 Browser Plug-Ins 25 Getting Data In and Out of the Web Site 25 The Community of Users and Developers 25 Mobile and Alternative Interfaces and the Skinnability of the Web Site 26 Documentation 26 Is the Web Site Run on Open Source? 26 Intellectual Property, Reusability, and Creative Commons 26 Tagging, Feeds, and Weblogging 27 URL Languages of Web Sites 27 Some Mashups Briefly Revisited 28 Flickr: The Fundamentally Mashup-Friendly Site 29 Resources in Flickr 29 Users and Photos 30 Data Associated with an Individual Photo 33 Tags 34 User’s Archive: Browsing Photos by Date 36 Sets 37 Collections 37 Favorites 37 A User’s Popular Photos 38 Contacts 38 Groups 38 Account Management 40 Browsing Through Flickr 40 Search 41 Geotagged Photos in Flickr 42 The Flickr Organizer 43 Recent Activities 44 Mailing Interfaces 44 Interfacing to Weblogs 44 Syndication Feeds: RSS and Atom 45 Mobile Access 45 Third-Party Flickr Apps 45 viii CONTENTS Creative Commons Licensing 46 Cameras 46 The Mashup-by-URL-Templating-and-Embedding Pattern 47 Google Maps 49 URL Language of Google Maps 49 Viewing KML Files in Google Maps 51 Connecting Yahoo! Pipes and Google Maps 51 Other Simple Applications of the Google Maps URL Language 52 Amazon 53 Amazon Items 53 Lists 55 Tags 55 Subject Headings 55 del. icio. us 56 Screen-Scraping and Bots 58 Summary 60 CHAPTER 3 Understanding Tagging and Folksonomies 61 Tagging in Flickr 62 Tags in Flickr 63 How Tags Are Used in Practice 63 Creating Your Own Tags 64 Syntax of Tags in Flickr 64 Potential Weaknesses of Tags 65 Singular and Plural Forms of Tags in Flickr 65 Hacking the Tagging System: Geotagging and Machine Tags 66 Interesting Apps Using Flickr Tags 67 Tagging in del. icio. us 67 Mechanics of Adding Tags in del. icio. us 68 Dealing with Case and Multiword Phrases 68 Getting More Information 69 Gathering Content Through Tags in Technorati 71 Searching Technorati with Tags 71 How Technorati Finds Tags on the Web 72 Word Inflections and Syntactic Constraints in Technorati Tags 72 Using Tags to Mash Up Flickr and del. icio. us 72 Other Systems That Use Tagging 73 Relationship of Tags to Formal Classification Schemes 73 Summary 75 CONTENTS ix CHAPTER 4 Working with Feeds, RSS, and Atom 77 What Are Feeds, and Why Are They Important? 78 RSS 2. 0 78 RSS 1. 0 80 Atom 1. 0 82 Extensions to RSS 2. 0 and Atom 1. 0 84 Feeds from Flickr 86 Flickr Feed Parameters 86 Examining the Flickr Feeds 87 Exchange Formats Other Than RSS and Atom 90 Feeds from Other Web Sites 92 Finding Feeds and Feed Autodiscovery 93 Feeds from Weblogs 94 Wikipedia Feeds 94 Google and Yahoo! News 95 News Aggregators: Showing Flickr Feeds Elsewhere 96 Validating Feeds 98 Scraping Feeds Using GUI Tools 98 Remixing Feeds with Feedburner 99 Remixing Feeds with Yahoo! Pipes 100 A Simple First Pipe with Yahoo! News 101 Google News and Refactoring Pipes 102 Wikinews and NY Times: Filtering Feeds 103 Pulling the Feeds Together 104 Summary 104 CHAPTER 5 Integrating with Blogs 105 Integration Scenarios for Blogs 105 Sending Flickr Pictures to Blogs 106 Configuring Flickr for Integration with Blogs 107 Blogging a Flickr Picture 110 How Does the Flickr Blog Integration Work? 110 Desktop Blogging Tools 111 Combining Feeds and Blogging to Generate Feedback Flows 113 Flock: Bringing Together Blogs and Flickr 114 RSD: Discoverability of Blog APIs 115 Linkbacks 116 Wiki Integration at an Early Stage 116 Summary 117 x CONTENTS PART 2 Remixing a Single Web Application Using Its API CHAPTER 6 Learning Web Services APIs Through Flickr 121 An|$|R

