2|373|Public
50|$|The Intel 80486, {{also known}} as the i486 or 486 ("four-eighty-six"), is a higher {{performance}} follow-up to the Intel 80386 microprocessor. The 80486 was introduced in 1989 and was the first tightly pipelined x86 design as well as the first x86 chip to use more than a million transistors, due to a large on-chip cache and an <b>integrated</b> <b>floating-point</b> <b>unit.</b> It represents a fourth generation of binary compatible CPUs since the original 8086 of 1978.|$|E
50|$|The Nintendo 64's central {{processing}} unit (CPU) is the NEC VR4300, a less expensive derivative of the 64-bit MIPS Technologies R4300i. Built by NEC on a 0.35 µm process, the VR4300 is a RISC 5-stage scalar in-order execution processor, with <b>integrated</b> <b>floating-point</b> <b>unit,</b> internal 24 KB direct-mapped L1 cache (16 KB for instructions, 8 KB for data). The 4.6 million transistor CPU is cooled passively by an aluminum heatspreader that makes contact with a steel heat sink above.|$|E
50|$|The PA-7100 is a {{microprocessor}} developed by Hewlett-Packard (HP) that implemented the PA-RISC 1.1 instruction set architecture (ISA). It {{is also known}} as the PCX-T and by its code-name Thunderbird. It was introduced in early 1992 and was the first PA-RISC microprocessor to <b>integrate</b> the <b>floating-point</b> <b>unit</b> (FPU) on-die. It operated at 33 - 100 MHz and competed primarily with the Digital Equipment Corporation (DEC) Alpha 21064 in the workstation and server markets. PA-7100 users were HP in its HP 9000 workstations and Stratus Computer in its Continuum fault-tolerant servers.|$|R
5000|$|Execution cores. (single {{precision}} <b>floating-point</b> <b>units,</b> {{double precision}} <b>floating-point</b> <b>units,</b> special function units (SFUs)).|$|R
5000|$|Limited <b>floating-point</b> <b>unit</b> (multiply/divide) {{throughput}} for non-parallel computations or single-threaded processes; {{this is due}} to {{the smaller}} number of <b>floating-point</b> <b>units</b> in each CPU core compared to some previous designs.|$|R
2500|$|... (NB. This website {{contains}} {{open source}} floating-point IP cores {{for the implementation}} of floating-point operators in FPGA or ASIC devices. The project double_fpu contains verilog source code of a double-precision <b>floating-point</b> <b>unit.</b> The project fpuvhdl contains vhdl source code of a single-precision <b>floating-point</b> <b>unit.)</b> ...|$|R
5000|$|POWER6 {{also takes}} {{advantage}} of ViVA-2, Virtual Vector Architecture, which enables the combination of several POWER6 nodes {{to act as a}} single vector processor. Each core has two integer <b>units,</b> two binary <b>floating-point</b> <b>units,</b> an AltiVec unit, and a novel decimal <b>floating-point</b> <b>unit.</b> The binary <b>floating-point</b> <b>unit</b> incorporates “many microarchitectures, logic, circuit, latch and integration techniques to achieve a 6-cycle, 13-FO4 pipeline,” according to a company paper. [...] Unlike the servers from IBM's competitors, the POWER6 has hardware support for IEEE 754 decimal arithmetic and includes the first decimal <b>floating-point</b> <b>unit</b> <b>integrated</b> in silicon. More than 50 new floating point instructions handle the decimal math and conversions between binary and decimal. This feature was also added to the z10 microprocessor featured in the System z10.|$|R
5000|$|The <b>floating-point</b> <b>unit</b> (FPU) Motorola 68882 {{executed}} scalar floating-point arithmetic.|$|R
50|$|Its 64-bit double {{precision}} <b>floating-point</b> <b>unit,</b> and 128-bit VMX unit (using the AltiVec instruction set), can perform a theoretical 12 floating-point operations per cycle, as all Power Architecture <b>floating-point</b> <b>units</b> can do <b>floating-point</b> multiply-adds, and come no smaller than 64-bits. That gives 3.2 billion clock cycles * 12 = 38.4 billion floating-point operations/second.|$|R
5000|$|DC523 <b>floating-point</b> <b>unit</b> (codenamed KIWI or [...] "F-chip" [...] during development) ...|$|R
5000|$|Four ALUs, two AGUs/load-store <b>units,</b> and two <b>floating-point</b> <b>units</b> per core.|$|R
50|$|The pixel {{rendering}} loop {{was implemented}} in assembly. The texture coordinates perspective correction and interpolation was done using the <b>floating-point</b> <b>unit,</b> {{due to the}} limited number of integer registers; it also allows to compute expensive division operation (part of perspective correction) on the <b>floating-point</b> <b>unit</b> in parallel with integer interpolation (in other words, at no cost).|$|R
500|$|... armhf: ARM hard-float {{architecture}} (ARMv7 instruction set) requiring hardware with a <b>floating-point</b> <b>unit</b> ...|$|R
5000|$|Optional <b>floating-point</b> <b>unit</b> (FPU): {{single-precision}} only IEEE-754 compliant. It {{is called}} the FPv4-SP extension.|$|R
5000|$|Optional <b>Floating-Point</b> <b>Unit</b> (FPU): {{single-precision}} only IEEE-754 compliant. It {{is called}} the FPv5 extension.|$|R
5000|$|Two 82-bit <b>floating-point</b> multiply-accumulate <b>units,</b> two SIMD <b>floating-point</b> multiply-accumulate <b>units</b> (two 32-bit {{operations}} each) ...|$|R
50|$|These {{microprocessors}} {{are compatible}} with MIPS R3000 and have an integrated MIPS R3010 compatible <b>floating-point</b> <b>unit.</b>|$|R
5000|$|SAM4E (2013) series {{based on}} the ARM Cortex-M4F, first Atmel MCU that has a FPU (<b>Floating-Point</b> <b>Unit).</b>|$|R
40|$|The IEEE- 754 floating-point standard, used {{in nearly}} all floating-point applications, is {{considered}} one of the most important standards. Deep datapath and algorithm complexity have made the verification of such <b>floating-point</b> <b>units</b> a very hard task. Most simulation and reachability analysis verification tools fail to verify a circuit with a deep datapath like most industrial <b>floating-point</b> <b>units.</b> Theorem proving, however, offers a better solution to handle such verification...|$|R
40|$|We {{propose that}} {{processor}} hardware {{can be used}} more effectively if <b>floating-point</b> <b>units</b> are augmented to perform simple integer operations. Existing floating-point registers and datapaths are used to support these integer operations. Some integer instructions, those not used for computing addresses and accessing memory, can then be off-loaded to the <b>floating-point</b> <b>units.</b> Consequently, these integer instructions are decoupled from memory accessing, and additional instruction bandwidth is available for integer programs. This paper reports {{the results of a}} preliminary study of integer benchmark programs compiled for the SPARC architecture. The results indicate that between 10 % and 39 % of the instructions in the integer benchmarks can be executed in the augmented <b>floating-point</b> <b>units.</b> Furthermore, these instructions are all simple add, subtract and logical instructions. ...|$|R
40|$|Abstract—Hardware {{support for}} floating-point (FP) {{arithmetic}} is a mandatory feature of modern microprocessor design. There are many alternatives in <b>floating-point</b> <b>unit</b> (FPU) design, and overall performance can be greatly {{affected by the}} organization of a <b>floating-point</b> <b>unit.</b> In this paper, design considerations and trade-off factors are evaluated for two types of <b>floating-point</b> <b>unit</b> architecture and implementation optimized under different design goals. The implementation results of the proposed FPUs based on standard cell methodology in TSMC 0. 18 µm technology exhibit that both designs are well optimized for their target applications. A single-instruction issue design is implemented in very small area; however, a design capable of concurrently executing FP add and multiply instructions is achievable with only a modest 24 % area increase. I...|$|R
5000|$|Optional <b>Floating-Point</b> <b>Unit</b> (FPU): (single precision) or (single and double-precision), both IEEE-754-2008 compliant. It {{is called}} the FPv5 extension.|$|R
50|$|The R4600 {{uses the}} <b>floating-point</b> <b>unit</b> to perform not only floating-point {{multiply}} and divide, but also integer multiply and divide.|$|R
25|$|A <b>floating-point</b> <b>unit</b> (FPU, colloquially a math coprocessor) {{is a part}} of a {{computer}} system specially designed to carry out operations on floating-point numbers.|$|R
50|$|The UC3 core, {{announced}} at the Electronica 2010 in Munich Germany on November 10, 2010, is the first 32-bit AVR microcontroller with a <b>floating-point</b> <b>unit.</b>|$|R
50|$|The ATSAM4 {{is based}} on the ARM Cortex-M4 core. The SAM4E {{includes}} a FPU (<b>Floating-Point</b> <b>Unit).</b> The SAM4C includes a dual-core ARM Cortex-M4 (one core with a FPU).|$|R
50|$|Probably {{the most}} commercially {{successful}} MISC {{was the original}} INMOS transputer architecture that had no <b>floating-point</b> <b>unit.</b> However, many eight-bit microcontrollers (for embedded computer applications) fit into this category.|$|R
50|$|The {{hardware}} <b>floating-point</b> <b>unit,</b> if fitted, ran autonomously. When a floating-point {{operation was}} started integer instructions could be {{run in parallel}} until {{the result of the}} floating-point operation was needed.|$|R
50|$|Conceptually the Cortex-M4 is a Cortex-M3 plus DSP instructions, and {{optional}} <b>floating-point</b> <b>unit</b> (FPU). If a core {{contains an}} FPU, {{it is known}} as a Cortex-M4F, otherwise it is a Cortex-M4.|$|R
5000|$|... cAll models feature: on-chip <b>floating-point</b> <b>unit,</b> Enhanced Intel SpeedStep Technology (EIST), Intel 64, XD bit (an NX bit implementation), Intel VT-x, Smart Cache.*dAll models support: MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 ...|$|R
40|$|As {{densities of}} FPGA are {{increasing}} day by day, {{the feasibility of}} doing floating point calculations on FPGAs has improved. Moreover, recent works in FPGA architecture have changed the design tradeoff space by providing new fixed circuit functions which may be employed in floating-point computations. By using high density multiplier blocks and shift registers efficient computational unit can be developed. This paper evaluates {{the use of such}} blocks for the design of <b>floating-point</b> <b>units</b> including adder, subtractor, multiplier and divider. <b>Floating-point</b> <b>unit</b> is a part of a computer system specially designed to carry out operations on floating point numbers. Addition, subtraction, multiplication, divisi...|$|R
40|$|FPGAs are {{increasingly}} {{being used in the}} high performance and scientific computing community to implement floating-point based hardware accelerators. In this paper we analyze the floating-point multiplier and adder/subtractor units by considering the number of pipeline stages of the units as a parameter and use throughput/area as the metric. We achieve throughput rates of more than 240 Mhz (200 Mhz) for single (double) precision operations by deeply pipelining the units. To illustrate the impact of the <b>floating-point</b> <b>units</b> on a kernel, we implement a matrix multiplication kernel based on our <b>floating-point</b> <b>units</b> and show that a state-of-the-art FPGA device is capable of achieving about 15 GFLOPS (8 GFLOPS) for the single (double) precision floating-point based matrix multiplication. We also show that FPGAs are capable of achieving upto 6 x improvement (for single precision) in terms of the GFLOPS/W (performance per unit power) metric over that of general purpose processors. We then discuss the impact of <b>floating-point</b> <b>units</b> on the design of an energy efficient architecture for the matrix multiply kernel. ...|$|R
30|$|Although our {{methodology}} for modeling the TI C 6416 T VLIW processor power consumption is applicable for other VLIW processors, for different targeted processor architecture we can reconsider {{the distinction of}} the processor architecture into functional blocks as shown in Figure 4. For example, if the new target architecture includes a <b>floating-point</b> <b>unit,</b> Figure 4 has to be modified by including a new functional block that represents the <b>floating-point</b> <b>unit</b> together with the parameters affecting its power consumption such as the access rate. Thus, {{as long as the}} power consumption of the functional blocks remains independent, our presented power estimation methodology is intended to work equally on all VLIW architectures.|$|R
40|$|This paper {{presents}} a low-cost, single-cycle <b>floating-point</b> <b>unit</b> developed for digital audio processing applications. In the unit, the serial steps of floating-point operations are paralleled to reduce critical path delay, and hardware resources are {{shared with the}} integer datapath to minimize area overhead. Its area overhead is as small as 38 % of the fixed-point datapath, and the critical path delay is 6 ns in 0. 25 µm CMOS technology, which makes it well suited to modern audio applications such as MP 3 and AAC. The <b>floating-point</b> <b>unit</b> is verified through an efficient test vector generation method developed to reduce verification time significantly. 1...|$|R
50|$|Each {{processing}} unit was an independent one-board microcomputer. Motorola's microprocessor MC68020 (25MHz) {{was used as}} the CPU.The local memory was 4MBytes with 100ns 1Mbit DRAM.The QCDPAX utilized LSI Logic's <b>floating-point</b> processing <b>unit</b> L64133 onthe market. L64133 had peak performance of the 33MFLOPS.The <b>floating-point</b> processing <b>unit</b> controller, newly developed by the gate array, was alsoutilized to derive the performance from the FPU by controlling the direct memory accessbetween the data memory and <b>floating-point</b> processing <b>unit.</b>|$|R
50|$|Intel's i486SX was a {{modified}} Intel 486DX microprocessor with its <b>floating-point</b> <b>unit</b> (FPU) disabled. It {{was intended as}} a lower-cost CPU for use in low-end systems. Computer manufacturers that used these processors include Packard Bell, Compaq, ZEOS and IBM.|$|R
