3|10000|Public
50|$|In computing, load {{balancing}} improves {{the distribution of}} workloads across multiple computing resources, such as computers, a computer cluster, network links, central processing units, or disk drives. Load balancing aims to optimize resource use, maximize throughput, minimize response time, and avoid overload of any single resource. Using multiple components with {{load balancing}} instead of a single component may increase reliability and availability through redundancy. Load balancing usually involves dedicated software or hardware, such as a multilayer switch or a <b>Domain</b> <b>Name</b> <b>System</b> <b>server</b> process.|$|E
5000|$|A <b>domain</b> <b>name</b> <b>system</b> <b>server</b> {{translates}} a human-readable {{domain name}} (such as [...] ) into a numerical IP address {{that is used}} to route communications between nodes. Normally if the server doesn't know a requested translation it will ask another server, and the process continues recursively. To increase performance, a server will typically remember (cache) these translations for a certain amount of time. This means if it receives another request for the same translation, it can reply without needing to ask any other servers, until that cache expires.|$|E
5000|$|... (i) {{a service}} provider, as that term {{is defined in}} section 512(k)(1) of title 17, United States Code, or other {{operator}} of a <b>domain</b> <b>name</b> <b>system</b> <b>server</b> shall take reasonable steps that will prevent a domain name from resolving to that domain name's Internet protocol address;(ii) a financial transaction provider, as that term is defined in section 5362(4) of title 31, United States Code, shall take reasonable measures, as expeditiously as practical, to prevent--(I) its service from processing transactions for customers located within the United States based on purchases associated with the domain name; and(II) its trademarks from being authorized for use on Internet sites associated with such domain name; and(iii) a service that serves contextual or display advertisements to Internet sites shall take reasonable measures, as expeditiously as practical, to prevent its network from serving advertisements to an Internet site accessed through such domain name.|$|E
50|$|A DNS {{hosting service}} is a service that runs <b>Domain</b> <b>Name</b> <b>System</b> <b>servers.</b> Most, but not all, <b>domain</b> <b>name</b> registrars include DNS hosting service with registration. Free DNS hosting {{services}} also exist. Many third-party DNS hosting services provide Dynamic DNS.|$|R
50|$|RACE {{encoding}} is {{a method}} for encoding foreign languages that use non-English characters (Chinese, Japanese, etc.) in ASCII characters for storage in <b>domain</b> <b>name</b> <b>system</b> <b>servers.</b> All <b>names</b> without non-English characters are unchanged. RACE codes {{are made up of}} digits, letters and dashes.|$|R
50|$|December 2012 saw {{the release}} of Million Short DNS, a series of <b>domain</b> <b>name</b> <b>system</b> <b>servers</b> {{programmed}} to exclude specific domains on the internet, redirecting them instead to an error page. Servers are available to exclude either the top million, hundred thousand, ten thousand, thousand, or hundred sites on the internet.|$|R
5000|$|... dig (domain {{information}} groper) is {{a network}} administration command-line tool for querying <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers.</b>|$|R
5000|$|At {{least one}} domain {{controller}} and <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server</b> running Windows Server 2008 SP2 or Windows Server 2008 R2.|$|R
25|$|A {{standard}} practice in implementing name resolution in applications {{is to reduce}} the load on the <b>Domain</b> <b>Name</b> <b>System</b> <b>servers</b> by caching results locally, or in intermediate resolver hosts. Results obtained from a DNS request are always associated with the time to live (TTL), an expiration time after which the results must be discarded or refreshed. The TTL is set by the administrator of the authoritative DNS server. The period of validity may vary from a few seconds to days or even weeks.|$|R
50|$|The Caching Name Server (CNS) was a {{high-end}} commercial caching-only <b>domain</b> <b>name</b> <b>system</b> (DNS) <b>server</b> software product from Nominum, a company founded by Paul Mockapetris, {{the inventor of}} the <b>Domain</b> <b>Name</b> <b>System.</b>|$|R
5000|$|To avoid burdening the <b>Domain</b> <b>Name</b> <b>System</b> root <b>servers</b> with traffic, caching {{name servers}} should never request name server records for localhost, or forward {{resolution}} to authoritative name servers.|$|R
50|$|In {{computer}} science, Decentralized Object Location and Routing (DOLR) is a scalable, location-independent routing technology. It uses location-independent names, or aliases, {{for each}} node in the network, {{and it is}} an example of peer-to-peer networking that uses a structured-overlay system called Tapestry. It was designed to facilitate large internet applications with millions of users physically distributed around the globe and using a variety of wireless and wired interfaces, specifically in situations where a traditional unstructured network of popular <b>Domain</b> <b>name</b> <b>system</b> <b>servers</b> would fail to perform well.|$|R
5000|$|DNS {{management}} {{software is}} computer software that controls <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server</b> clusters. DNS data is typically deployed on multiple physical servers. The main purposes of DNS management software are: ...|$|R
50|$|This article {{presents}} {{a comparison of}} the features, platform support, and packaging of independent implementations of <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>name</b> <b>server</b> software.|$|R
50|$|One of {{the most}} {{commonly}} used applications of load balancing is to provide a single Internet service from multiple servers, sometimes known as a server farm. Commonly load-balanced systems include popular web sites, large Internet Relay Chat networks, high-bandwidth File Transfer Protocol sites, Network News Transfer Protocol (NNTP) <b>servers,</b> <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> and databases.|$|R
50|$|Hostnames are human-readable nicknames that {{correspond}} to the address of a device connected to a network. They are used by various <b>naming</b> <b>systems,</b> e.g., Network Information Service (NIS), <b>Domain</b> <b>Name</b> <b>System</b> (DNS), <b>Server</b> Message Block (SMB) {{and the meaning of}} hostname varies according to the <b>naming</b> <b>system</b> used. A hostname meaningful to a Microsoft NetBIOS workgroup may be an invalid Internet hostname.|$|R
50|$|The server team is {{responsible}} for {{most or all of}} the servers within the organization. This includes <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> network authentication, network shares, network resources, email accounts, and all aspects of server software. It may also include more advanced services such as those related to databases, storage or content management systems, specialized proprietary services, and other industry-specific server-based applications.|$|R
5000|$|Several {{software}} packages {{have been written}} supporting the management of community currencies. In 1998, Richard Kay, a Senior Lecturer at Birmingham City University, wrote a [...] "Multi-registry System" [...] specification for routing and processing community currency transactions using an approach designed to be decentralized, with no single point of control or failure, using the <b>Domain</b> <b>Name</b> <b>System</b> for <b>server</b> discovery.|$|R
30|$|We use a {{combination}} of network scanning and vulnerability assessment techniques. In particular, we first use basic reconnaissance techniques, like IP sweeps, NIC whois querying, and TCP/UDP port-scanning, in order to identify if a host is reachable and exposed to external attacks. In addition, these techniques help determine the role of host, e.g., web, mail, or <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server,</b> within the infrastructure.|$|R
50|$|In this case, {{the hosts}} most {{vulnerable}} to attack are those that provide services to users outside of the local area network, such as e-mail, Web and <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers.</b> Because of the increased potential of these hosts suffering an attack, they are placed into this specific subnetwork {{in order to protect}} the rest of the network should any of them become compromised.|$|R
50|$|The <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> {{sometimes}} {{likened to}} a telephone directory, translate browser requests for <b>domain</b> <b>names</b> into the IP address assigned to that computer or network. The original bill requires these servers to stop referring requests for infringing domains to their assigned IP addresses. DNS is robust by design against failure and requires that {{a lack of}} response is met by inquiries to other DNS servers.|$|R
5000|$|Networking device hostnames {{ending with}} [...]local are often {{employed}} in private networks, {{where they are}} resolved either via the multicast <b>domain</b> <b>name</b> service (mDNS) or local <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers.</b> The implementation of both approaches on the same network can be problematic, however, resolving such names via unicast DNS servers has fallen into disfavor as computers, printers and other devices supporting zero-configuration networking (zeroconf) have become increasingly common.|$|R
50|$|IPv6 hosts {{that use}} {{stateless}} autoconfiguration may require information {{other than an}} IP address or route. DHCPv6 {{can be used to}} acquire this information, even though it is not being used to configure IP addresses. DHCPv6 is not necessary for configuring hosts with the addresses of <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> because they can be configured using Neighbor Discovery Protocol, which is also the mechanism for stateless autoconfiguration.|$|R
50|$|The UPnP {{architecture}} supports zero configuration networking. A UPnP compatible device {{from any}} vendor can dynamically join a network, obtain an IP address, announce its name, advertise or convey its capabilities upon request, {{and learn about}} the presence and capabilities of other devices. Dynamic Host Configuration Protocol (DHCP) and <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers</b> are optional and are only used if they {{are available on the}} network. Devices can disconnect from the network automatically without leaving state information.|$|R
50|$|The Neighbor Discovery Protocol (NDP, ND) is a {{protocol}} in the Internet protocol suite used with Internet Protocol Version 6 (IPv6). It operates at the Network Layer of the Internet model (RFC 1122), and {{is responsible for}} address autoconfiguration of nodes, discovery of other nodes on the link, determining the addresses of other nodes, duplicate address detection, finding available routers and <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> address prefix discovery, and maintaining reachability information of other active neighbor nodes.|$|R
5000|$|In Internet computing, NSD (for [...] "name server daemon") is an {{open-source}} <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server.</b> It {{was developed}} by NLnet Labs of Amsterdam {{in cooperation with the}} RIPE NCC, from scratch as an authoritative name server (i.e., not implementing the recursive caching function by design). The intention of this development is to add variance to the [...] "gene pool" [...] of DNS implementationsused by higher level name servers and thus increase the resilience of DNS against software flaws or exploits.|$|R
40|$|In recent years, adversaries {{have been}} {{launching}} distributed {{denial of service}} (DDoS) attacks aimed at DNS (<b>Domain</b> <b>Name</b> <b>System)</b> <b>servers</b> in various levels, and since t he DNS is a most critical fundamental service of the Internet that provides mapping between <b>domain</b> <b>names</b> and IP addresses and a prerequisite for many other services, DDoS attacks successfully causing the unavailability of DNS could bring huge losses. In this paper, we present a n easily implemented and practical scheme that can significantly alleviate {{the impact of the}} DNS DDoS attacks. Firstly, we propose interactive communications among DNS servers to obtain status information of others and with the premise we support that nameservers should not clean-up TTL-expired domain-name records in the cache when they detected that relevant nameservers are unavailable. Secondly, an evaluation based on the data of 511, 781, 146 DNS queries collected from four different DNS servers on the Internet shows that the DNS could still work s well in the duration of a DDoS attack by applying our approach. And further, a long term DNS analysis of about 173 days proves the prerequisite for the validity of our project on the Internet today. </p...|$|R
40|$|A {{group of}} web-server {{system can be}} {{deployed}} to support high request rate. The <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers</b> act as a mediator between the client and web-servers. It dispatches the client request among the web-servers through the URL-name to IP-address mapping mechanism. In this paper, we propose a group of web-server system arranged in the multiple logical ring connection, in which the DNS evaluate {{the performance of the}} proposed web-server system by using adaptive load balancing algorithm. We show the performance measurements for the proposed syste...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. This memo does not specify an Internet standard of any kind. Distribution of this memo is unlimited. This memo describes errors often found in both the operation of <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers,</b> and in the data that these DNS servers contain. This memo tries to summarize current Internet requirements as well as common practice in the operation and configuration of the DNS. This memo also tries to summarize or expand upon issues raised in [RFC 1537]. 1...|$|R
40|$|<b>Domain</b> <b>Name</b> <b>Systems</b> (DNS) <b>servers</b> {{provide a}} {{critical}} service to users and application on the internet. It translates human friendly names into IP addresses and vice versa. DNS has {{two kinds of}} service types, one is the authoritative DNS which provides complete information about some part of <b>domain</b> <b>name</b> space, which they load from a file or from another name server, {{and the other is}} the recursive DNS which queries the information into the authoritative DNS and delivers the replied information into the client. This paper focuses on the Non-authoritative naming resolution of DNS...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. This memo describes a set of practices intended to enable an authoritative name server operator {{to provide access to}} a single named server in multiple locations. The primary motivation for the development and deployment of these practices is to increase the distribution of <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers</b> to previously under-served areas of the network topology and to reduce the latency for DNS query responses in those areas. 1...|$|R
5000|$|Once more, {{the court}} judged {{in favor of}} Prodigy, saying that Prodigy {{internet}} service {{did not include the}} complete address of a piece of information, as required by the Sargent patent. The Uniform Resource Locator ( [...] "URL") standard that uniquely names the location of resources requires additional information, {{in the form of a}} TCP/IP protocol, in order to access a web page from a web server. More specifically, when a user requests information, the web browser the user is using first obtains the IP address of the server where the corresponding information resides and then accesses the external <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server</b> to get the desired information. Thus, the way internet finds the location of requested information is not complete as specified in the Sargent patent.|$|R
5000|$|For example, in the <b>domain</b> <b>name</b> <b>system,</b> a <b>name</b> <b>server</b> in a company's {{local area}} network often {{forwards}} requests to the internet service provider's (ISP's) name servers, instead of resolving the <b>domain</b> <b>name</b> directly [...] - [...] {{it can be said}} that the ISP's name servers are upstream to the local server. Conversely, the ISP's servers typically resolve <b>domain</b> <b>names</b> from the domain's authoritative origin servers [...] - [...] the authoritative servers are said to be upstream to the ISP's servers. Note that the hierarchy of resolvers is unrelated to the actual <b>domain</b> <b>name</b> hierarchy.|$|R
50|$|From {{the early}} days of the network until his death during 1998, Jon Postel oversaw address {{allocation}} and other Internet protocol numbering and assignments in his capacity as Director of the Computer Networks Division at the Information Sciences Institute of the University of Southern California, under a contract from the Department of Defense. This function eventually became known as the Internet Assigned Numbers Authority (IANA), and as it expanded to include management of the global <b>Domain</b> <b>Name</b> <b>System</b> (DNS) root <b>servers,</b> a small organization grew. Postel also served as RFC Editor.|$|R
40|$|Malicious {{web pages}} that launch drive-by-download attacks on web browsers have {{increasingly}} {{become a problem}} in recent years. High-interaction client honeypots are security devices that can detect these malicious web pages on a network. However, high-interaction client honeypots are both resource-intensive and unable to handle the increasing array of vulnerable clients. This paper presents a novel classification method for detecting malicious web pages that involves inspecting the underlying server relationships. Because of the unique structure of malicious front-end web pages and centralized exploit servers, merely {{counting the number of}} <b>domain</b> <b>name</b> extensions and <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>servers</b> used to resolve the host names of all web servers involved in rendering a page is sufficient to determine whether a web page is malicious or benign, independent of the vulnerable web browser targeted by these pages. Combining high-interaction client honeypots and this new classification method into a hybrid system leads to performance improvements...|$|R
40|$|Online {{information}} {{security is a}} major concern for both users and companies, since data transferred via the Internet is becoming increasingly sensitive. The World Wide Web uses Hypertext Transfer Protocol (HTTP) to transfer information and Secure Sockets Layer (SSL) to secure the connection between clients and servers. However, Hypertext Transfer Protocol Secure (HTTPS) is vulnerable to attacks that threaten the privacy of information sent between clients and servers. In this paper, we propose Enc-DNS-HTTP for securing client requests, protecting server responses, and withstanding HTTPS attacks. Enc-DNS-HTTP is based on the distribution of a web server public key, which is transferred via a secure communication between client and a <b>Domain</b> <b>Name</b> <b>System</b> (DNS) <b>server.</b> This key is used to encrypt client-server communication. The scheme is implemented in the C programming language and tested on a Linux platform. In comparison with Apache HTTPS, this scheme is shown to have more effective resistance to attacks and improved performance since it does not involve a high number of time-consuming operations...|$|R
