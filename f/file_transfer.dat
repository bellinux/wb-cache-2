2103|1279|Public
5|$|The {{built-in}} Bluetooth 2.1 + EDR interface allows wireless headphones and keyboards to be {{used with}} the iPad. However iOS does not currently support <b>file</b> <b>transfer</b> via Bluetooth. iPad also features 1024×768 VGA video output for limited applications, screen capture, connecting an external display or television through an accessory adapter.|$|E
5|$|Above the {{transport}} layer, {{there are certain}} protocols that are sometimes used and loosely fit in the session and presentation layers, most notably the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols. These protocols ensure that data transferred between two parties remains completely confidential. Finally, at the application layer, are many of the protocols Internet users would be familiar with such as HTTP (web browsing), POP3 (e-mail), FTP (<b>file</b> <b>transfer),</b> IRC (Internet chat), BitTorrent (file sharing) and XMPP (instant messaging).|$|E
5|$|Voice over Internet Protocol (VoIP) allows data packets to be {{used for}} {{synchronous}} voice communications. The data packets are marked as voice type packets and can be prioritized by the network administrators so that the real-time, synchronous conversation is less subject to contention with other types of data traffic which can be delayed (i.e. <b>file</b> <b>transfer</b> or email) or buffered in advance (i.e. audio and video) without detriment. That prioritization is fine when the network has sufficient capacity for all the VoIP calls taking {{place at the same time}} and the network is enabled for prioritization i.e. a private corporate style network, but the Internet is not generally managed in this way and so there can be a big difference in the quality of VoIP calls over a private network and over the public Internet.|$|E
50|$|Pidgin {{supports}} <b>file</b> <b>transfers</b> {{for many}} protocols. It lacks some protocol-specific features like the folder sharing available from Yahoo. Direct, peer-to-peer <b>file</b> <b>transfers</b> are supported over protocols such as XMPP and MSN.|$|R
5000|$|Unlike AS1 or AS3 <b>file</b> <b>transfers,</b> AS2 <b>file</b> <b>transfers</b> offer several [...] "MDN return" [...] options {{instead of}} the {{traditional}} options of [...] "yes" [...] or [...] "no". Specifically, the choices are: ...|$|R
2500|$|Pidgin {{supports}} <b>file</b> <b>transfers</b> {{for many}} protocols. It lacks some protocol-specific features like the folder sharing available from Yahoo. [...] Direct, peer-to-peer <b>file</b> <b>transfers</b> are supported over protocols such as XMPP and MSN.|$|R
5|$|The Steam client {{includes}} a digital storefront called the Steam Store through which users can purchase computer games. Once {{the game is}} bought, a software license is permanently attached to the user's Steam account, allowing {{him or her to}} download the software on any compatible device. Game licenses can be given to other accounts under certain conditions. Content is delivered from an international network of servers using a proprietary <b>file</b> <b>transfer</b> protocol. Steam sells its products in US and Canadian dollars, euros, pounds sterling, Brazilian reais, Russian rubles, Indonesian rupiah and Indian rupees depending on the user's location. From December 2010, the client supports the Webmoney payment system, which is popular in many European, Middle Eastern, and Asian countries. Starting in April 2016, Steam began accepting payments in Bitcoin, valued based on the user's geolocation, with transactions handled by BitPay. The Steam storefront validates the user's region; the purchase of titles may be restricted to specific regions because of release dates, game classification, or agreements with publishers. Since 2010, the Steam Translation Server project offers Steam users to assist with the translation of the Steam client, storefront, and a selected library of Steam games for twenty-seven languages. Steam also allows users to purchase downloadable content for games, and for some specific game titles such as Team Fortress 2, the ability to purchase in-game inventory items. In February 2015, Steam began to open similar options for in-game item purchases for third-party games.|$|E
25|$|Goodput or data {{transfer}} rate refers to the achieved average net bit rate that is delivered to the application layer, exclusive of all protocol overhead, data packets retransmissions, etc. For example, {{in the case of}} <b>file</b> <b>transfer,</b> the goodput corresponds to the achieved <b>file</b> <b>transfer</b> rate. The <b>file</b> <b>transfer</b> rate in bit/s can be calculated as the file size (in bytes) divided by the <b>file</b> <b>transfer</b> time (in seconds) and multiplied by eight.|$|E
25|$|<b>File</b> <b>transfer</b> {{protocol}} filesystem translator.|$|E
40|$|Roberts, Massouli {{and co-authors}} have {{introduced}} and studied a flow level model of Internet congestion control, {{that represents the}} randomly varying number of flows present in a network where bandwidth is dynamically shared between elastic <b>file</b> <b>transfers.</b> In this paper we consider a generalization of the model to include streaming traffic as well as <b>file</b> <b>transfers,</b> under a fairness assumption that includes TCP-friendliness as a special case. We establish stability, under conditions, for a fluid model of the system. We also {{assess the impact of}} each traffic type on the other: <b>file</b> <b>transfers</b> are seen by streaming traffic as reducing the available capacity, whereas for <b>file</b> <b>transfers</b> the presence of streaming traffic amounts to replacing sharp capacity constraints by relaxed constraints. The integration of streaming traffic and <b>file</b> <b>transfers</b> has a stabilizing effect on the variability of the number of flows present in the system...|$|R
50|$|Because File Explorer and Photos {{can handle}} <b>file</b> <b>transfers</b> on their own, Phone Companion is not {{required}} for <b>file</b> <b>transfers.</b> What it offers users is a visible shortcut to the transfer activities, which users may have been unaware previously.|$|R
40|$|Introduction The {{flow control}} {{algorithm}} {{widely used in}} the current Internet is the TCP flow control. Despite having an aggressive (exponential) ramp up phase, the throughput during slow start is typically much less than in the congestion avoidance mode due to {{the small size of}} the initial window, time-outs triggered by packet loss during slow-start, etc. This results in a poor response time for short <b>file</b> <b>transfers</b> and {{raises the question of whether}} it is possible to improve performance for short <b>file</b> <b>transfers</b> without significantly degrading it for long <b>file</b> <b>transfers.</b> This question assumes particular importance in the context of the finding by a number of researchers that file sizes on the Web have a heavy-tailed distribution [4]. A related problem is that of sharing bandwidth between <b>file</b> <b>transfers</b> and real-time traffic such as Internet telephony or video conferencing. Real-time flows are usually long-lived with very different quality of service requirements from <b>file</b> <b>transfers</b> a...|$|R
25|$|Trivial <b>File</b> <b>Transfer</b> Protocol (TFTP) is {{a simple}} lockstep <b>File</b> <b>Transfer</b> Protocol which allows a client to get a file from or put a file onto a remote host. One of its primary uses is {{in the early stages}} of nodes booting from a local area network. TFTP has been used for this {{application}} because it is very simple to implement.|$|E
25|$|Retroshare — F2F decentralised {{communication}} platform with secure VOIP, instant messaging, <b>file</b> <b>transfer</b> etc.|$|E
25|$|If {{there is}} a problem during the <b>file</b> <b>transfer</b> and data was corrupted, it is only {{necessary}} to resend the few corrupted RAR files instead of resending the entire large file.|$|E
5000|$|Use caution when opening {{attachments}} {{and accepting}} <b>file</b> <b>transfers</b> ...|$|R
25|$|Pidgin {{does not}} {{currently}} support pausing or reattempting <b>file</b> <b>transfers.</b>|$|R
5000|$|Bittorent, Gnutella {{and other}} {{distributed}} <b>file</b> <b>transfers</b> systems use peer-to-peer ...|$|R
25|$|In {{an attempt}} to reduce <b>file</b> <b>transfer</b> times, an {{informal}} file encoding known as yEnc was introduced in 2001. It achieves about a 30% reduction in data transferred by assuming that most 8-bit characters can safely be transferred across the network without first encoding into the 7-bit ASCII space.|$|E
25|$|Because file {{names have}} to be {{exchanged}} between software environments (think network <b>file</b> <b>transfer,</b> file system storage, backup and file synchronization software, configuration management, data compression and archiving, etc.), {{it is very important}} not to lose file name information between applications. This led to wide adoption of Unicode as a standard for encoding file names, although legacy software might be non-Unicode-aware.|$|E
25|$|Compatibility with extant {{systems and}} protocols: Repositories can be {{published}} via Hypertext Transfer Protocol (HTTP), <b>File</b> <b>Transfer</b> Protocol (FTP), rsync (removed in Git 2.8.0), or a Git protocol over either a plain socket, or Secure Shell (ssh). Git {{also has a}} CVS server emulation, which {{enables the use of}} extant CVS clients and IDE plugins to access Git repositories. Subversion and svk repositories can be used directly with git-svn.|$|E
5000|$|Schedule and {{automate}} <b>file</b> <b>transfers</b> from automated {{systems and}} repositories ...|$|R
5000|$|Pidgin {{does not}} {{currently}} support pausing or reattempting <b>file</b> <b>transfers.</b>|$|R
50|$|A long-tailed or {{heavy-tailed}} {{probability distribution}} {{is one that}} assigns relatively high probabilities to regions far from the mean or median. A more formal mathematical definition is given below. In the context of teletraffic engineering a number of quantities of interest {{have been shown to}} have a long-tailed distribution. For example, if we consider the sizes of <b>files</b> <b>transferred</b> from a web-server, then, to a good degree of accuracy, the distribution is heavy-tailed, that is, there are a large number of small <b>files</b> <b>transferred</b> but, crucially, the number of very large <b>files</b> <b>transferred</b> remains a major component of the volume downloaded.|$|R
25|$|TFTP is {{a simple}} {{protocol}} for transferring files, implemented {{on top of the}} UDP/IP protocols using well-known port number 69. TFTP was designed to be small and easy to implement, and therefore it lacks most of the advanced features offered by more robust <b>file</b> <b>transfer</b> protocols. TFTP only reads and writes files from or to a remote server. It cannot list, delete, or rename files or directories and it has no provisions for user authentication.|$|E
25|$|In June 1981 The TFTP Protocol (Revision 2) was {{published}} as RFC 783 and later updated in July 1992 by RFC 1350 which fixed {{among other things}} the Sorcerer's Apprentice Syndrome. In March 1995 the TFTP Option Extension RFC 1782 updated later in May 1998 by RFC 2347, defined the option negotiation mechanism which establishes the framework for <b>file</b> <b>transfer</b> options to be negotiated prior to the transfer using a mechanism {{which is consistent with}} TFTP's original specification.|$|E
25|$|HSMM {{can support}} {{most of the}} traffic that the Internet {{currently}} does, including video chat, voice, instant messaging, email, the Web (HTTP), <b>file</b> <b>transfer</b> (FTP), and forums. The only differences being that with HSMM, such services are community instead of commercially implemented and it is mostly wireless. HSMM can even {{be connected to the}} Internet and used for web surfing, although because of the FCC regulations on permitted content, this is done only when directly used for ham radio activities (under Part 97). Using high gain directional antennas and amplifiers, reliable long-distance wireless links over many miles are possible and only limited by propagation and the radio horizon.|$|E
25|$|Version 0.98.4 added RUDP (reliable UDP) and {{improved}} partial <b>file</b> <b>transfers.</b>|$|R
5000|$|<b>File</b> <b>transfers</b> {{utilizing}} Zmodem, Xmodem, Ymodem, SFTP, {{and also}} via Xftp.|$|R
40|$|A {{large part}} of digital data {{communication}} relies on transferring information across computer networks {{in the form of}} <b>file</b> <b>transfers.</b> The three most important considerations for <b>file</b> <b>transfers</b> are making them as efficient, reliable and user friendly as possible. Setting up explicit <b>file</b> <b>transfers</b> over a direct connection can be very complicated for non specialists because most programs provide a swarm of details. This gives users greater control over their transfers but increases the chance of errors occurring. Indirect <b>file</b> <b>transfers,</b> such as those found over instant messaging systems, can be easy to set up but, they fail to utilize the full potential of users ‟ connections which slows down transfers. This project simplifies setting up direct <b>file</b> <b>transfers</b> by making them as autonomous as possible and only asking for user input where absolutely necessary. A rapid cyclic development approach has been followed where the program has been constantly reviewed by users providing feedback which has been acted upon. The result is a program which is very small (about 276 times smaller than Windows Live Messenger), very fast (bringing the utilization of the user‟s bandwidth up to 100 % in the upload and/o...|$|R
25|$|In 1995, {{the company}} began to develop network {{encryption}} technologies, again {{in response to a}} growing number of similar requests from its customers. Early products in this sphere included PowerTelnet which is comparable to today's ssh, and PowerFTP, which provided encrypted <b>file</b> <b>transfer.</b> In February 1996, Freedman realized that this technology could be generalized, resulting in a general-purpose network encryption solution that would encrypt the traffic of any application, without requiring much, if any, modification to that application. Chmilar, Huxley, and Lowe worked hard to prepare a demonstrable version of this new CipherLink product in time for the Networld+Interop trade show in April, 1996. The product was well received, and became a finalist for the Best Product of Show award at the trade show that year.|$|E
25|$|Network {{services}} include offerings such as file sharing, print services, email, web sites, and <b>file</b> <b>transfer</b> protocols (FTP), most {{of which}} can have compromised security. At {{the front line of}} security are hardware devices known as firewalls or intrusion detection/prevention systems. At the operating system level, {{there are a number of}} software firewalls available, as well as intrusion detection/prevention systems. Most modern operating systems include a software firewall, which is enabled by default. A software firewall can be configured to allow or deny network traffic to or from a service or application running on the operating system. Therefore, one can install and be running an insecure service, such as Telnet or FTP, and not have to be threatened by a security breach because the firewall would deny all traffic trying to connect to the service on that port.|$|E
25|$|The {{emergence}} {{and growth}} of blogs in the late 1990s coincided {{with the advent of}} web publishing tools that facilitated the posting of content by non-technical users who did not have much experience with HTML or computer programming. Previously, a knowledge of such technologies as HTML and <b>File</b> <b>Transfer</b> Protocol had been required to publish content on the Web, and as such, early Web users tended to be hackers and computer enthusiasts. In the 2010s, the majority are interactive Web 2.0 websites, allowing visitors to leave online comments, and it is this interactivity that distinguishes them from other static websites. In that sense, blogging {{can be seen as a}} form of social networking service. Indeed, bloggers do not only produce content to post on their blogs, but also often build social relations with their readers and other bloggers. However, there are high-readership blogs which do not allow comments.|$|E
40|$|We use flow-level {{models to}} study the {{integration}} of two types of Internet traffic, elastic <b>file</b> <b>transfers</b> and streaming traffic. Previous studies have concentrated on just one type of traffic, such as the flow level models of Internet congestion control, where network capacity is dynamically shared between elastic <b>file</b> <b>transfers,</b> with a randomly varying number of such flows. We consider the addition of streaming traffic in two cases, under a fairness assumption that includes TCP-friendliness as a special case, and under certain admission control schemes. We establish sufficient conditions for stability, using a fluid model of the system. We also {{assess the impact of}} each traffic type on the other: <b>file</b> <b>transfers</b> are seen by streaming traffic as reducing the available capacity, whereas for <b>file</b> <b>transfers</b> the presence of streaming traffic amounts to replacing sharp capacity constraints by relaxed constraints. Simulation results suggest that the integration of streaming traffic and <b>file</b> <b>transfers</b> has a stabilizing effect on the variability of the number of flows present in the system. Keywords: Internet, Quality of Service, Fairness, Elastic Traffic, Streaming Traffic, Fluid Models, Flow Level Intgration quitable du trafic dans l'Internet: modles fluides de flots et leur analyse...|$|R
40|$|Data {{traffic in}} {{networks}} {{has always been}} dominated by <b>file</b> <b>transfers,</b> an observation that has motivated previous work in scheduling <b>file</b> <b>transfers.</b> While these previous research contributions address <b>file</b> <b>transfers,</b> they do not address the special considerations required of packet-switched networks, in particular the issues of routing and of simultaneous transmissions of files. In this paper, we generalize previous formulations of the problem to include routing and to allow for simultaneous transmissions of several files. A few theoretical results are presented. Keywords: Data <b>transfers,</b> <b>File</b> <b>transfers,</b> Scheduling, Routing, Large scale networking applications, NP-Completeness, Algorithms. 1 Introduction We consider the joint problem of scheduling and routing the transfers of very large files. Our research is motivated by the increasing size and ambition of future networking applications, many of which {{will result in the}} movement of very large amounts of data across networks. For examp [...] ...|$|R
50|$|<b>Files</b> <b>transferred</b> over Shell {{protocol}} (FISH) is {{a network}} protocol that uses Secure Shell (SSH) or Remote Shell (RSH) to <b>transfer</b> <b>files</b> between computers and manage remote files.|$|R
