85|263|Public
2500|$|The Start menu {{was first}} {{introduced}} in Windows 95 and Windows NT 4.0 to overcome the shortcomings of Program Manager in previous operating systems. Program Manager consisted of a simple multiple <b>document</b> <b>interface</b> (MDI) which allowed users to open separate [...] "program groups" [...] and then execute the shortcuts to programs contained within. It lacked the ability to nest groups within other groups.|$|E
2500|$|Smuxi {{supports}} nick colors {{which are}} identical across channels and networks, a Caret Mode {{as seen in}} Firefox that allows to navigate through the messages using the keyboard, theming with colors and fonts, configurable tray-icon support, optional stripping of colours and formattings and convenience features like CTCP support, channel search and nickname completion. [...] It has a tabbed <b>document</b> <b>interface,</b> tabbed user interface, and support for multiple servers. [...] Smuxi can attach to a local backend engine or a remote engine utilizing the Engine drop down menu (similar to screen used with irssi). It also includes, in client-server operation, a visual marker showing the user's last activity in an open session, and ignore filtering. July 25, 2010.|$|E
5000|$|Multiple {{files are}} {{presented}} using {{a mixture of}} tabbed <b>document</b> <b>interface</b> and multiple <b>document</b> <b>interface.</b>|$|E
50|$|The name TDI implies {{similarity}} to the Microsoft Windows standards for multiple <b>document</b> <b>interfaces</b> (MDI) and single <b>document</b> <b>interfaces</b> (SDI), but TDI does not {{form part of}} the Microsoft Windows User Interface Guidelines.|$|R
5000|$|With {{multiple}} <b>document</b> <b>interfaces</b> (and also tabbed <b>document</b> <b>interfaces),</b> {{a single}} menu bar and/or toolbar is shared between all child windows, reducing clutter and increasing {{efficient use of}} screen space. This argument is less relevant on an operating system which uses a common menu bar.|$|R
50|$|The {{following}} table compares {{general and}} technical information for <b>document</b> <b>interfaces.</b>|$|R
5000|$|SDI (single <b>document</b> <b>interface)</b> or tabbed MDI (multiple <b>document</b> <b>interface)</b> modes, PMDI (pseudo multi-window interface) ...|$|E
5000|$|Multi <b>Document</b> <b>Interface</b> - The {{multiple}} <b>document</b> <b>interface</b> menu contains small preview {{images of}} the documents currently open ...|$|E
50|$|On November 29, 2001, Opera 6 was {{released}} with new features including Unicode support, and offering a single <b>document</b> <b>interface</b> {{as well as}} the multiple <b>document</b> <b>interface</b> allowed by previous versions.|$|E
50|$|<b>Interface</b> control <b>documents</b> are a {{key element}} of systems {{engineering}} as they control the <b>documented</b> <b>interface(s)</b> of a system, as well as specify a set of interface versions that work together, and thereby bound the requirements.|$|R
50|$|The {{web client}} {{application}} {{is served by}} a NodeJS server, which also provides a REST based web services API {{that can be used}} for third party integration. The web services API uses Google's Discovery Service model to provide a self <b>documenting</b> <b>interface.</b>|$|R
40|$|Set {{of three}} reports {{describes}} work on Protoflight Manipulator Assembly (PFMA). "Performance Characteristics of Protoflight Manipulator Assembly" presents parameters of PFMA after refurbishment of operating components. "End Effector and Task Board Development for the Protoflight Manipulator Assembly" describes special tools and adaptations allowing PFMA {{to be used}} for servicing equipment. "Modular Software Development for the Protoflight Manipulator Assembly" <b>documents</b> <b>interface</b> and control software for PFMA...|$|R
5000|$|Multiple {{document}} interface#Comparison {{with single}} <b>document</b> <b>interface</b> ...|$|E
5000|$|Multiple <b>document</b> <b>interface</b> (MDI) with tiling and {{minimizing}} supported ...|$|E
5000|$|Tabbing {{navigation}} {{should not}} be confused with tabbed <b>document</b> <b>interface</b> ...|$|E
50|$|Given the {{description}} above of how applications interface to the CCI, itâ€™s {{clear that we}} need a way of <b>documenting</b> those <b>interfaces,</b> both in terms of the technology employed (e.g. is it Java/JMS or Web services/SOAP?) but also the functionality of the application, the data used, the pre- and post-conditions, etc. The Frameworx contract specification provides a means to <b>document</b> these <b>interfaces,</b> and these are therefore contract defined interfaces.|$|R
50|$|The {{architecture}} of the interpreter internally is object oriented and provides a clean and well <b>documented</b> <b>interface</b> to embed the interpreter into any application written in C or C++. The whole source code is extensively documented and commented, which is an outstanding feature compared to other embeddable script language implementations. Slides in HTML format with English narration in RealAudio format are also available to get a jump start learning the architecture and module, preprocessor and embedding developments.|$|R
5000|$|A simple XML {{persistence}} storage {{layer is}} used for to store user data in background. All data objects represent their model as XOM <b>document</b> <b>interfaces</b> which are serialized as XML files. The data files and settings are stored in a subdirectory of a user home that enables to share a single application installation between different users of the same machine. For migrating data between separate installations, the special ZIP-based format of a [...] "packed project" [...] is used.|$|R
5000|$|... #Subtitle level 3: Window {{managers}} {{that provide}} a tabbed <b>document</b> <b>interface</b> ...|$|E
5000|$|Multiple files can {{be edited}} using tabbed <b>{{document}}</b> <b>interface</b> or Multiple <b>document</b> <b>interface</b> or any mixture of them. A special feature in Vedit {{is that a}} document window can be 'full size'. The size of such window is adjusted automatically (as with maximized windows), but overlapping windows can be used at the same time.|$|E
5000|$|Office Tab [...] enables tabbed <b>document</b> <b>interface</b> (TDI) of Microsoft Office applications.|$|E
50|$|The object {{interfaces}} {{provided by}} ILU hide implementation distinctions between different languages, between different address spaces, and between operating system types. ILU {{can be used}} to build multi-lingual object-oriented libraries ("class libraries") with well-specified language-independent interfaces. It {{can also be used to}} implement distributed systems. It can also be used to define and <b>document</b> <b>interfaces</b> between the modules of non-distributed programs. ILU interfaces can be specified in either the Object Management Group's CORBA Interface Definition Language (OMG IDL), or ILU's Interface Specification Language (ISL).|$|R
40|$|In this study, {{has been}} created software, that support XML <b>documents</b> <b>interfacing</b> with open source data base {{management}} systems. 	This system enables in XML document write SQL query or queries. When this XML document (file) will be requested from internet browser, this system generate a new XML document in which instead placed SQL query or queries, would be inserted generated query answer from data base written in XML format. 	This system {{has been created}} similar as Microsoft product SQLXML. Only our system has a feature, that it interfacing with open source data base management systems, such as MySQL...|$|R
40|$|Abstract: The Microsoft Windows kernel {{provides}} a heap-like memory management, called "pools". Whenever some kernel-mode code requires {{an amount of}} memory, it is allocated from a pool. Ignoring the <b>documented</b> <b>interface</b> and searching the whole dump of physical memory for signatures of pool allocations allows the forensic exam-iner to gain information not only from currently active but also from freed and not yet overwritten allocations. Understanding the inner mechanics of memory pools enables an examiner to connect certain finds in memory to the originating piece of code. As an example this articles describes the steps necessary to detect traces of network activity in a memory dump. ...|$|R
5000|$|Multiple <b>document</b> <b>interface,</b> {{including}} {{management of}} included files in a WinEdt project definition file.|$|E
50|$|Future plans include porting {{the user}} {{interface}} from Tk to GTK+, a multiple <b>document</b> <b>interface,</b> and multi-font, fully integrated multiline text.|$|E
50|$|The SPA {{approach}} {{on the web}} {{is similar to the}} Single <b>Document</b> <b>Interface</b> (SDI) presentation technique popular in native desktop applications.|$|E
40|$|Services {{can be seen}} as an {{extension}} of the component and object oriented paradigms. Just like objects and components services need well defined, well <b>documented</b> <b>interfaces.</b> However, unlike most components and objects, services must be designed to work in a wide range of computing environments. Service design must cope with problems ranging from the integration of remote-procedure based legacy systems to the use state-of-art message based orchestration servers. In this paper we provide an overview of three fundamental approaches to service interface design; method centric, constrained and message centric interface design. Furthermore, we briefly discuss how each approach impact the use of web service standards and conclude with future research directions...|$|R
50|$|Sysedit (SYSEDIT.EXE) is a {{specialized}} text/ASCII editor for core Microsoft Windows configuration files (such as PROTOCOL.INI, WIN.INI, SYSTEM.INI, CONFIG.SYS, and AUTOEXEC.BAT). This executable is {{installed in the}} Windows system directory: %windir%\SYSTEM (Windows 3.x and 9x editions) or %windir%\SYSTEM32 (Windows NTx editions). Sysedit was bundled with and automatically installed by every version of Windows from Windows 3.0 up to Windows 98 SE. Support was discontinued with Windows Me. At {{the time of its}} initial release, Sysedit was commonly used to demonstrate multiple <b>document</b> <b>interfaces</b> (MDI). It opens all of the aforementioned configuration files at once in separate daughter windows whenever launched. It still uses the System font from older versions of Windows.|$|R
5000|$|Marcus, Aaron. Graphic Design for Electronic <b>Documents</b> and User <b>Interfaces.</b> Reading: Addison-Wesley Longman, 1992.|$|R
50|$|The user {{interface}} treats each quiz {{as a separate}} document. The <b>document</b> <b>interface</b> makes available the questions in a tree-view on the left hand side and a large preview pane on the right hand side. This pane can display {{a preview of the}} question, section or entire quiz. The software uses a multiple <b>document</b> <b>interface</b> allowing a number of quizzes to be open simultaneously. Drag and drop is used to re-order questions within a quiz and copy questions between quizzes.|$|E
50|$|The client can be run in tabbed <b>document</b> <b>interface</b> or {{multiple}} windows mode for channels and queries, or just detached independent window for specific channels or queries.|$|E
5000|$|Dia (...) is {{free and}} open source {{general-purpose}} diagramming software, developed originally by Alexander Larsson. Dia uses a controlled single <b>document</b> <b>interface</b> (SDI) similar to GIMP and Inkscape.|$|E
50|$|Applications {{developed}} for the tablet PC cater to the configuration and functionality available on the platform. Many forms of applications incorporate a pen-friendly user interface and/or the ability to hand write directly in the <b>document</b> or <b>interface.</b>|$|R
50|$|The {{connections}} between the Morpheus vehicle and ALHAT were <b>documented</b> in ICD (<b>Interface</b> Control <b>Documents).</b>|$|R
50|$|TC6 {{creates a}} {{recommendation}} for preferred automotive xMII standards. The <b>document</b> specifies relevant <b>interface</b> enhancements covering automotive requirements.|$|R
