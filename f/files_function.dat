4|320|Public
5000|$|C {{does not}} have a notion of modules. However, {{separate}} object files (and hence also the translation units used to produce object <b>files)</b> <b>function</b> similarly to separate modules, and if a source file does not include other source files, internal linkage (translation unit scope) may be thought of as [...] "file scope, including all header files".|$|E
30|$|Taking those eight sets of data, we {{synthesize}} each architecture to 130 -nm CMOS {{standard cell}} ASIC technology with Synopsys Design Compiler and a run gate-level simulation with Mentor ModelSim. From {{the results of}} the gate-level simulation, we acquire gate activity for the Synopsys Power compiler. From the Synopsys Power compiler, we acquire power used by individual architectural components of the processor core, such as interconnection network, individual register <b>files,</b> <b>function</b> units, instruction fetch, and instruction decode.|$|E
40|$|The {{experimental}} data PalateData is already provided and stored within the MmPalateMiRNA package in a compiled format, as an RGList object (a specialized class defined in Bioconductor package limma [1] for two-color microarray data). Here, we illustrate {{how to read}} in {{the data from the}} raw ImaGene files [2], available from GEO DataSets 1, accession number GPL 10179. This can be accomplished several ways, but the read. maimages function in limma provides a convenient interface. R> library("limma") The R script in Additional File 3, “ReadingRawData. R ” contains all the R code discussed in this file. The names of the raw files are read using the list. <b>files</b> <b>function</b> and stored as a two-column matrix, where the first column contains the names of the files containing green channel (cy 3) data (the control samples) and the second column contains names of files containing red channel (cy 5) data (the experimental samples). An additional feature is the possibility to incorporate spot-quality weights, via the wt. fun argument in the read. maimages function. These weights which can be used in the downstream analysis of the data, e. g. when evaluating differential expression. Here, we assign weights inversely to the “Flag ” field provided for each probe, using the function wt. function. Note that the rawfiles argument specifies the directory where the raw data files are located, e. g. here “C:/palate/rawdata”. The names of each data file were provided by Milteny...|$|E
5000|$|Within the <b>file,</b> <b>function</b> calls {{would look}} like this: HelloWorld ...|$|R
2500|$|... mapping - Simple mapping and GIS [...]shp and raster <b>file</b> <b>functions</b> ...|$|R
50|$|On {{some old}} systems a file named {{networks}} is present that has similar to hosts <b>file</b> <b>functions</b> containing names of networks.|$|R
40|$|Alsberg, B., Clare, A. (2010) Wiki based {{management}} of chemometric research projects. Journal of Chemometrics 24 (7 - 8), 408 - 417. Special Issue: Proceedings of the 11 th Scandinavian Symposium on Chemometrics, SSC 11 As research projects grow in size, {{there is a}} tendency for the number of management tasks to increase even faster. There are many different data objects and relations which need to be managed as part of the whole project: raw data, script <b>files,</b> <b>function</b> files, results, plots, tables etc. Here it is suggested that a combination of wiki and version control software can be used as very effective and efficient tools in the {{management of}} chemometric research projects. A wiki provides a system for editing, viewing and navigating hyperlinked documents using web browsers. Easy syntax allows fast construction of web pages and hyperlinks without having to write HTML. Version control systems provide shared storage for source code and data (such as m-files, Python and Perl scripts, plot and diagram source files, LaTeX files etc). Items stored in version control are given version numbers and can be retrieved, worked upon and updated by multiple users in different locations without conflict. At the top level of a project wiki the main ideas and goals are described whereas at the bottom level there are scripts, tables and raw data. The structure suggested by the different levels supports a common understanding of the need to record information and of which information to record. All levels can rapidly be accessed by following hyperlinks in the wiki. Combining information into new wiki pages is also very easy in this framework. Peer reviewe...|$|E
5000|$|Foo, Bar, Baz, and Qux (and {{combinations}} thereof) {{are commonly}} used as placeholders for <b>file,</b> <b>function</b> and variable names. Foo and bar probably relate to FUBAR.|$|R
2500|$|The [...]FileFunction {{attribute}} is {{the standardized}} method to link each layer in the PCB with its corresponding Gerber file in the fabrication data. If attributes are not supported only informal methods are available. A simple informal {{method is to}} express the <b>file</b> <b>function</b> clearly in the file name. Sometimes the file extension is abused to indicate the <b>file</b> <b>function</b> - e.g[...]BOT for the bottom layer rather than the standard extension [...]GBR. This is very impractical as the customary link between format and extension is lost.|$|R
2500|$|There {{are several}} {{software}} technical sizing methods {{that have been}} widely described. The most common technical sizing method is number of Lines of Code (#LOC) per technology, number of <b>files,</b> <b>functions,</b> classes, tables, etc., from which backfiring Function Points can be computed; ...|$|R
50|$|Rover, the software's dog mascot, reappeared in XP's <b>File</b> Search <b>function.</b>|$|R
5000|$|Integrated Autoconf-like {{support for}} finding #include <b>files,</b> libraries, <b>functions</b> and typedefs.|$|R
5000|$|Batch <b>file</b> {{management}} <b>functions</b> (copy, move, delete, save-for-web) {{through a}} multi-function rule-based plug-in.|$|R
25|$|In 1977, the Canadian firm Telecompute Integrated Systems, Inc. {{released}} a business-oriented APL interpreter known as TIS APL, for Z80-based systems. It featured the {{full set of}} <b>file</b> <b>functions</b> for APL, plus a full screen input and switching of right and left arguments for most dyadic operators by introducing the ~. prefix to all single character dyadic functions such as - or /.|$|R
40|$|SAA {{distributed}} {{file access}} to the CICS environment IBM's Customer Information Control System (CICS) is the leading product family in the on-line transaction processing (OLTP) market, OLTP systems are being used by many enterprises to implement their daily business processes and manage operational data such as accounts, inventories, and orders. CICS/Distributed Data Management (CICS/DDM) implements the distributed <b>file</b> <b>function</b> of Systems Applrcatio...|$|R
5000|$|In 1977, the Canadian firm Telecompute Integrated Systems, Inc. {{released}} a business-oriented APL interpreter known as TIS APL, for Z80-based systems. It featured the {{full set of}} <b>file</b> <b>functions</b> for APL, plus a full screen input and switching of right and left arguments for most dyadic operators by introducing the [...] prefix to all single character dyadic functions such as [...] or [...]|$|R
50|$|Script XML <b>files</b> are <b>functions</b> of Javascript and XQuery {{that may}} be called from the triggers.|$|R
5000|$|<b>File</b> {{inclusion}} <b>functions,</b> e.g. (in PHP): [...] is {{an example}} of a Remote File Inclusion vulnerability ...|$|R
40|$|Basic {{engineering}} {{problem solving}} using the C programming language. Topics include loops, selection, input/output, <b>files,</b> <b>functions,</b> arrays, complex variables, pointers, structures, and dynamic memory. Students will {{learn how to}} approach solving problems in engineering and science; how to develop algorithms, using advanced techniques such as recursion, searching, s 01 ting and linked lists, to solve those problems; and how to implement those algorithms in the C language...|$|R
40|$|MATLABDesk {{calculator}} operations Booleans Nonstandard numbers Loops and conditionals Script <b>file</b> <b>Functions</b> Variable {{scope and}} parameter passingI: Linear Algebra Vectors Definition of vectors Applications of vectorsBasic operations on vectorsDot productVectors in MATLAB: Basic operationsPlotting vectors in MATLABVectors in other programming languagesMatrices Definition of matrices Applications of matrices Simple operations on matrices Multiplying a matrix times a vector Linear transformation Systems of linear equations Matrix multiplication Vectors as matrices Algebraic properties of matrix mu...|$|R
5000|$|PHP {{supported}} memory-mapping {{techniques in}} a number of native <b>file</b> access <b>functions</b> such as file_get_contents (...) but has removed this in 5.3 (see revision log).|$|R
40|$|Abstract. This is {{the user}} manual for the kluwer. cls class file for the {{preparation}} of articles to be submitted to journals, spin-offs of journals or edited volumes {{to be published by}} Kluwer Academic Publishers. The kluwer. cls is a generic class, which allows us to use a trivial con-version to different layouts. The kluwer. cls class <b>file</b> <b>functions</b> similar to the article class file of LATEX 2 ", but it has some extra fields in the preamble and some extended commands fo...|$|R
50|$|Unlike {{some other}} secure email services, Mailfence {{is more of}} a {{groupware}} offering secure email but also Calendar, Contacts, Instant Messaging and <b>File</b> sharing <b>functions.</b>|$|R
50|$|Most {{programming}} languages {{provide an}} interface to the <b>file</b> system <b>functions</b> {{of the operating}} system, including the ability to set (change) the working directory of the program.|$|R
5000|$|Most of the C <b>file</b> input/output <b>functions</b> {{are defined}} in [...] (or in the C++ header , which {{contains}} the standard C functionality {{but in the}} [...] namespace).|$|R
50|$|MassTransit Enterprise, a Managed File Transfer server from GroupLogic, Inc, (Arlington, Virginia, USA), runs on Windows and Macintosh {{operating}} systems {{and provides a}} range of managed <b>file</b> transfer <b>functions.</b>|$|R
5000|$|<b>File</b> system {{manipulation}} <b>functions,</b> e.g., delete, rename, change directory ...|$|R
5000|$|In {{the heading}} of a source file, the keyword [...] is used instead of [...] At {{the end of the}} <b>file,</b> the <b>functions</b> to be {{exported}} are listed in [...] clause.|$|R
50|$|Many {{operating}} systems include support {{for more than}} one file system. Sometimes the OS and the file system are so tightly interwoven {{that it is difficult to}} separate out <b>file</b> system <b>functions.</b>|$|R
40|$|Abstract. This paper {{describes}} the software {{of the track}} state inspection system based on LABVIEW, which includes serial communication, data extraction, strap-down algorithm, acceleration integral and saving the results. Serial communication module uses VISA to program in order to realize communication between the IMU (inertial measurement unit) and upper computer. According to the output data format, data extraction module separates the signal of three axes’ accelerations and angular-rates by Match Pattern Function. Strap-down algorithm and acceleration integral modules are programmed by Math Script. The measurement results are saved by Write to Spreadsheet <b>File</b> <b>Function.</b> Finally, it’s to design a convenient humanized operation interface...|$|R
40|$|An {{important}} step toward efficient software maintenance is {{to locate the}} code relevant to a particular feature. In this paper we report a study applying an execution slice-based technique to a reliability and performance evaluator to identify the code which is unique to a feature, or is common {{to a group of}} features. Supported by tools called ATAC and Vue, the program features in the source code can be tracked down to <b>files,</b> <b>functions,</b> lines of code, decisions, and then c- or p-uses. Our study suggests that the technique can provide software programmers and maintainers with a good starting point for quick program understanding...|$|R
40|$|There {{are many}} {{instances}} where all files in a directory {{need to be}} processed {{in exactly the same}} manner. If the files in the directory are not assigned using an incremental naming convention, or if the number of files in the directory change with each request, processing the files can be problematic. This paper helps to resolve this problem by using SAS ® external <b>file</b> <b>functions.</b> These functions can open a directory, determine the number of members of the directory, identify the file names {{that can be used to}} process the data, and close the directory. File processing can be done dynamically without ever knowing the physical file name...|$|R
5000|$|Scripts {{can access}} <b>files</b> with the <b>functions</b> $RandomRead (...) and $ReadLine (...) , and the {{commands}} CreateFile and AppendText.|$|R
50|$|Functions often {{fall into}} easily {{identifiable}} groups of similar capabilities, mathematics functions for instance, or handling text <b>files.</b> <b>Functions</b> are often gathered together in collections known as libraries that are supplied {{with the system}} or, more commonly in the past, the programming language. Each language has its own method of calling functions so the libraries written for one language may not work with another; the semantics for calling functions in C is different from Pascal, so generally C programs cannot call Pascal libraries and vice versa. The commonly used {{solution to this problem}} is to pick one set of call semantics as the default system for the platform, and then have all programming languages conform to that standard.|$|R
40|$|Instructions for an Audio Performance/Scissors Recording’ is a {{score for}} a {{performance}} using an amplified scissors that can be downloaded and interpreted by a performer anywhere in the world. The <b>file</b> <b>functions</b> as a manual for the performer with guidance for creating the instrument and preparing the performance space while it also provides a template for the actual sonic pattern to be followed in the live performance. Created originally for ‘Storageroom’ an online platform featuring complete exhibitions that are available for download, the piece was exhibited and interpreted in a live performance by Ayelet Lerman for the File Transfer Protocol, the contemporary section of the Haifa-Jerusalem-Tel Aviv exhibition at the Museum of Art, Haifa, Israel...|$|R
40|$|The zip-file {{contains}} the MATLAB 5. 0 Code: ode 45 ext. m, {{a modified version}} of Matlab's ODE 45. M R-K-algorithm to allow for backward integration, ramsey. m, the neoclassical growth model, and ramsdot. m, a <b>function</b> <b>file</b> containing the ODE for ramsey. m. ode 45 mod. m, A further modified version of ODE 45. M, which allows to specify accuracy in approximation of the initial value (k 0). ramsey 2. m, the neoclassical growth model for Ode 45 mod, and ramsdot 2. m, a <b>function</b> <b>file</b> containing the ODE for ramsey 2. m. perli. m, the general two-sector growth model according to Benhabib and Perli (1994), and perlipol. m, <b>function</b> <b>file</b> containing the ODE for perli. m. ...|$|R
