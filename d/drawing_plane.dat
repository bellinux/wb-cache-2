20|495|Public
2500|$|The rule of marteloio has sailors plot routes by <b>drawing</b> <b>plane</b> triangles on a chart, {{as if the}} world's surface were flat. [...] While {{this might}} be {{practical}} enough for sailing confined to the compact latitudes of the Mediterranean Sea, it is quite misleading on a grander scale.|$|E
50|$|HeeksCAD makes {{extensive}} use of local coordinate systems. For example, these are used to define the <b>drawing</b> <b>plane</b> and the direction of an extrusion.|$|E
50|$|The rule of marteloio has sailors plot routes by <b>drawing</b> <b>plane</b> triangles on a chart, {{as if the}} world's surface were flat. While {{this might}} be {{practical}} enough for sailing confined to the compact latitudes of the Mediterranean Sea, it is quite misleading on a grander scale.|$|E
50|$|The Wigner-Seitz {{cell in the}} {{reciprocal}} space {{is known as the}} first Brillouin zone. It is made by <b>drawing</b> <b>planes</b> normal to the segments joining nearest lattice points to a particular lattice point, through the midpoints of such segments.|$|R
40|$|An upward <b>plane</b> <b>drawing</b> of a {{directed}} acyclic graph is a <b>plane</b> <b>drawing</b> of the digraph {{in which}} each directed edge is represented as a curve monotone increasing in the vertical direction. Thomassen [24] has given a non-algorithmic, graph-theoretic characterization of those directed graphs with a single source that admit an upward <b>plane</b> <b>drawing.</b> We present an efficient algorithm to test whether a given single-source acyclic digraph has an upward <b>plane</b> <b>drawing</b> and, if so, to find a representation of one such drawing. This result is made more significant {{in light of the}} recent proof, by Garg and Tamassia, that the problem is NP-complete for general digraphs [12]. The algorithm decomposes the digraph into biconnected and triconnected components, and defines conditions for merging the components into an upward <b>plane</b> <b>drawing</b> of the original digraph. To handle the triconnected components we provide a linear algorithm to test whether a given <b>plane</b> <b>drawing</b> of a single source digraph admits an [...] ...|$|R
40|$|Abstract. An upward <b>plane</b> <b>drawing</b> of a {{directed}} acyclic graph is a <b>plane</b> <b>drawing</b> of the digraph {{in which}} each directed edge is represented as a curve monotone increasing in the vertical direction. Thomassen [24] hasgiven a non-algorithmic, graph-theoretic characterization of those directed graphs with a single source that admit an upward <b>plane</b> <b>drawing.</b> We present an e cient algorithm to test whether a given single-source acyclic digraph has an upward <b>plane</b> <b>drawing</b> and, if so, to nd a representation of one such drawing. This result is made more signi cant in light ofthe recent proof, by Garg and Tamassia, {{that the problem is}} NP-complete for general digraphs [12]. The algorithm decomposes the digraph into biconnected and triconnected components, and denes conditions for merging the components into an upward <b>plane</b> <b>drawing</b> of the original digraph. To handle the triconnected components weprovide a linear algorithm to test whether a given <b>plane</b> <b>drawing</b> of a single source digraph admits an upward <b>plane</b> <b>drawing</b> with the same faces and outer face, which also gives a simpler, algorithmic proof of Thomassen's result. The entire testing algorithm (for general single-source {{directed acyclic graph}}s) operates in O(n 2) timeandO(n) space (n being the number of vertices in the input digraph) and represents the rst polynomial time solution to the problem...|$|R
5000|$|While <b>drawing</b> <b>plane</b> of shadows, {{there are}} two {{dominant}} two problems: The first concerns the problem of deep struggle in case the flat geometry is not awarded on the part covered with the shadow of shadows and outside. See the section that relates to this. Another problem relates {{to the extent of}} the shadows outside the area where the plane there.|$|E
5000|$|Mathematically, the {{parallel}} {{projection of the}} point [...] on the -plane gives [...] The constants [...] and [...] uniquely specify a parallel projection. When , the projection {{is said to be}} [...] "orthographic" [...] or [...] "orthogonal". Otherwise, it is [...] "oblique". The constants [...] and [...] are not necessarily less than 1, and as a consequence lengths measured on an oblique projection may be either larger or shorter than they were in space. In a general oblique projection, spheres of the space are projected as ellipses on the <b>drawing</b> <b>plane,</b> and not as circles as you would expect them from an orthogonal projection.|$|E
40|$|There is {{a growing}} {{recognition}} that elements of heuristic significance play a large part in practical 3 D descriptive geometry when a graphical method of solving space or solid analytic problems is employed (Slaby, 1976). Some of these elements are related to personal development, {{as the ability to}} understand abstract geometrical concepts evolves throughout one‟s life. Prospective teachers ‟ perceptions about the professional learning of descriptive geometry may vary in relation to solving problems of 3 D space via a 2 D <b>drawing</b> <b>plane</b> with the use of different projecting methods (Bakó, 2006). Solving problems of spatial dimensions requires a creative imagination, space analysis skills and visualisation, which themselves can be harnessed and taken to another level of understanding through practice. In doing so, there is a use of the projecting drawings, which are solely intended to interpret the spatial relation, solve problems and offer solutions (C. f. Stachel, 2005 : 1). A variety of projecting methods in geometry have the main purpose to represent spatial objects on a <b>drawing</b> <b>plane.</b> For the purpose of systematisation in this study, from a comprehensive survey of these methods show that can be summarised in thre...|$|E
40|$|<b>Draw</b> <b>planes</b> in IR 3 {{that are}} {{orthogonal}} to the x axis, and intersect the x axis at {{the points of}} a Poisson process with intensity; similarly, <b>draw</b> <b>planes</b> orthogonal to the y and z axes using independent Poisson processes (with the same intensity). Taken together, these planes naturally define a randomly stretched rectangular lattice. Consider bond percolation on this lattice where each edge of length ` is open with probability e Γ`, and these events are independent given the edge lengths. We show that this model exhibits a phase transition: for large enough there is an infinite open cluster a. s., and for small all open clusters are finite a. s. We prove this result using the method of paths with exponential intersection tails, which is not applicable in two dimensions. The question whether the analogous process in the plane exhibits a phase transition is open. 1 Introduction Let G = (V; E) be a graph, and suppose that the edges are labeled with (possibly dependent) random [...] ...|$|R
5000|$|... {{from the}} {{three-dimensional}} source object with the <b>drawing</b> surface (projection <b>plane).</b>|$|R
50|$|The Goldner-Harary graph is a planar graph: {{it can be}} <b>drawn</b> in the <b>plane</b> {{with none}} of its edges crossing. When <b>drawn</b> on a <b>plane,</b> all its faces are triangular, making it a maximal planar graph. As with every maximal planar graph, it is also 3-vertex-connected: the removal of any two of its {{vertices}} leaves a connected subgraph.|$|R
40|$|In John Tantalo’s on-line game Planarity {{the player}} {{is given a}} non-plane straight-line drawing of a planar graph. The aim {{is to make the}} <b>drawing</b> <b>plane</b> as quickly as {{possible}} by moving vertices. In this paper we investigate the related problem MinMovedVertices which asks for the minimum number of vertex moves. First, we show that MinMoved-Vertices is NP-hard and hard to approximate. Second, we establish a connection to the graph-drawing problem 1 BendPointSetEmbeddability, which yields similar results for that problem. Third, we give bounds for the behavior of MinMovedVertices on trees and general planar graphs...|$|E
40|$|In John Tantalo’s on-line game Planarity {{the player}} {{is given a}} nonplane straight-line drawing of a planar graph. The player can move vertices, which always keep straight-line {{connections}} to their neighbors. The aim {{is to make the}} <b>drawing</b> <b>plane</b> as quickly as possible. In this paper we investigate the related problem MinMovedVertices which asks for the minimum number of vertex moves. First, we show that MinMovedVertices is NP-hard and hard to approximate. Second, we establish a connection to the graph-drawing problem 1 BendPointSetEmbeddability, which yields similar results for that problem. Third, we give bounds for the behavior of MinMovedVertices on several classes of planar graphs, namely cycles, paths, trees, and general planar graphs. ...|$|E
40|$|This paper {{proposes a}} method that resembles a natural pen and paper {{interface}} to create curve based 3 D sketches. The system is particularly useful for representing initial 3 D design ideas without much effort. Users interact with the system by {{the help of a}} pressure sensitive pen tablet. The input strokes of the users are projected onto a <b>drawing</b> <b>plane,</b> which serves as a paper that they can place anywhere in the 3 D scene. The resulting 3 D sketch is visualized emphasizing depth perception. Our evaluation involving several naive users suggest that the system is suitable for a broad range of users to easily express their ideas in 3 D. We further analyze the system {{with the help of an}} architect to demonstrate the expressive capabilities. © 2013 Springer-Verlag London...|$|E
5000|$|... #Caption: A star graph <b>drawn</b> in the <b>plane</b> with {{edges of}} unit length.|$|R
50|$|Four {{independent}} {{boxes are}} <b>drawn</b> on <b>plane</b> ground {{as shown in}} the figure. The blue line indicates the path along which the danner moves and the orange lines indicate the path along which the players move. A danner is decided after the chain cut.|$|R
25|$|Every graph {{that can}} be <b>drawn</b> on a <b>plane</b> can be <b>drawn</b> on the sphere as well, and vice versa.|$|R
40|$|The {{question}} of how to interactively create and edit 3 D meshes using a 2 D interface is one that has proven difficult to answer. The limitations of the interface require software designers to infer 3 D actions from 2 D gestures, often in ways that may be unintuitive to users. Similarly, the problem of inferring 3 D information from sketched 2 D strokes is made difficult by the need to extrapolate depth information {{in a manner consistent with}} the user’s design intentions. This paper presents a method of creating 3 D meshes by connecting a series of cross-sections projected onto a moveable <b>drawing</b> <b>plane,</b> with the goal of simplifying the mesh-creation process to the point where complex objects and surfaces can be created with just a few user strokes...|$|E
40|$|Corrosion {{behavior}} of deformed galvanneal steel sheets has been evaluated {{as a function}} of their degree of deformation under four different strain paths namely, biaxial, uniaxial (<b>drawing),</b> <b>plane</b> strain and tensile mode. A correlation between the degree of deformation and the loss in the extent of corrosion protection offered by these coatings in 3. 5 wt. % NaCl solution has been established by carrying out electrochemical studies such as potentiodynamic polarization and electrochemical impedance spectroscopy. An almost linear relation has been found to exist between the effective strain applied to the specimen and damage caused to the coating. While uniaxial, plane strain and tensile modes of deformation have been found to affect the coating corrosion resistance almost to the same extent, the biaxial deformation has been found to cause a greater damage to the coating. © Elsevie...|$|E
40|$|We {{consider}} {{the problem of}} <b>drawing</b> <b>plane</b> graphs such that the vertices are represented by grid points and edges are drawn as straight lines. It is an open problem to determine the minimum size ¯ Θ of grids that admit straight-line drawings of all n-vertex plane graphs. Algorithms are known for producing drawings in grids of size (n Γ 2) Θ (n Γ 2) and b 2 (n Γ 1) = 3 c Θ b 8 (n Γ 1) = 3 c. The currently known lower bound is that each dimension satisfies ¯; b 2 (n Γ 1) = 3 c. In this note, we slightly improve this lower bound by showing that ¯ = b 2 (n Γ 1) = 3 c implies d 2 n= 3 e. Thus {{it is impossible to}} achieve the minimum width and height simultaneously...|$|E
50|$|Born in Jadotville (now Likasi) in the Belgian Congo (now Democratic Republic of the Congo), {{he moved}} to Brussels, Belgium with his parents when he was ten years old, and went to school in Jodoigne. His main hobby {{at the time was}} <b>drawing,</b> {{especially}} <b>planes</b> and other technological items.|$|R
50|$|There {{are certain}} curves called trisectrices which, if <b>drawn</b> on the <b>plane</b> using other methods, {{can be used}} to trisect {{arbitrary}} angles.|$|R
5000|$|... #Caption: The Petersen graph is a unit {{distance}} graph: {{it can be}} <b>drawn</b> in the <b>plane</b> {{with each}} edge having unit length.|$|R
40|$|We {{consider}} {{the problem of}} <b>drawing</b> <b>plane</b> graphs with an arbitrarily high vertex degree orthogonally into the plane such {{that the number of}} bends on the edges should be minimized. It has been known how to achieve the bend minimum without any respect {{to the size of the}} vertices. Naturally, the vertices should be represented by uniformly small squares. In addition we might require that each face should be represented by a non-empty region. This would allow a labeling of the faces. We present an efficient algorithm which is provably achieves the bend minimum following these constraints. Omitting the latter requirement we conjecture that the problem becomes NP-hard. For that case, we give advices for good approximations. We demonstrate the effectiveness of our approaches giving some interesting examples. (orig.) SIGLEAvailable from TIB Hannover: RR 4367 (95 - 21) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
40|$|In John Tantalo’s on-line game Planarity {{the player}} {{is given a}} non-plane straight-line drawing of a planar graph. The aim {{is to make the}} <b>drawing</b> <b>plane</b> as quickly as {{possible}} by moving vertices. In this paper we investigate the related problem MinMovedVertices which asks for the minimum number of vertex moves. First, we show that MinMovedVertices is NP-hard and hard to approximate. Second, we establish a connection to the graph-drawing problem 1 BendPointSetEmbeddability, which yields similar results for that problem. Third, we give bounds for the behavior of MinMovedVertices on trees and general planar graphs. This work was started on the 9 th 2 ̆ 2 Korean 2 ̆ 2 Workshop on Computational Geometry and Geometric Networks organized by A. Wolff and X. Goaoc, July 30 –August 4, 2006 in Schloß Dagstuhl, Germany. Further contributions were made at the 2 nd Workshop on Graph Drawing and Computational Geometry organized by W. Didimo and G. Liotta, March 11 – 16, 2007 in Bertinoro, Italy...|$|E
40|$|In John Tantalo’s on-line game Planarity {{the player}} {{is given a}} non-plane straight-line drawing of a planar graph. The aim {{is to make the}} <b>drawing</b> <b>plane</b> as quickly as {{possible}} by moving vertices. Pach and Tardos have posed a related problem: can any straight-line drawing of any planar graph with n vertices be made plane by vertex moves while keeping vertices fixed for some absolute constant ? It is known that three vertices can always be kept (if n¿=¿ 5). We still do not solve the problem of Pach and Tardos, but we report some progress. We prove that the number of vertices that can be kept actually grows with the size of the graph. More specifically, we give a lower bound of on this number. By the same technique we show {{that in the case of}} outerplanar graphs we can keep a lot more, namely vertices. We also construct a family of outerplanar graphs for which this bound is asymptotically tight...|$|E
30|$|These design {{sketches}} {{displayed a}} basic <b>drawing</b> of a <b>plane</b> with body parts indicated (wings, tail, etc.) or a template of a plane.|$|R
25|$|A {{planar graph}} is a graph whose {{vertices}} and edges can be <b>drawn</b> in a <b>plane</b> such that no {{two of the}} edges intersect.|$|R
25|$|Apollonian {{networks}} may be <b>drawn</b> in the <b>plane</b> {{with any}} prescribed area in each face; if the areas are rational numbers, so {{are all of}} the vertex coordinates.|$|R
40|$|Ankara : The Department of Computer Engineering and the Graduate School of Engineering and Science of Bilkent Univ., 2012. Thesis (Master's) [...] Bilkent University, 2012. Includes bibliographical refences. This thesis {{proposes a}} method that resembles a natural pen and paper {{interface}} to create curve based 3 D sketches. The system is particularly useful for representing initial 3 D design ideas without much effort. Users interact with the system by {{the help of a}} pressure sensitive pen tablet, and a camera. The input strokes of the users are projected onto a <b>drawing</b> <b>plane,</b> which serves as a paper that they can place anywhere in the 3 D scene. The resulting 3 D sketch is visualized emphasizing depth perception by implementing several monocular depth cues, including motion parallax performed by tracking user’s head position. Our evaluation involving several naive users suggest that the system is suitable for a broad range of users to easily express their ideas in 3 D. We further analyze the system {{with the help of an}} architect to demonstrate the expressive capabilities of the system that a professional can benefit. Yıldız, CansınM. S...|$|E
40|$|In {{the thesis}} spatial ability is {{considered}} {{as the ability}} to manipulate, generate and retain well-structured visual images. Three elements of spatial ability are presented in detail: spatial visualization, spatial relations and mental rotations. Spatial ability {{plays an important role in}} school mathe- matics when students learn about space geometry. Students use different manipulatives to help them through studying. Computer programs for spa- tial geometry are not yet introduced into learning process. As an example, Gutierrez method is described in the thesis. It consists of three steps: ma- nipulation of real objects, manipulation of 3 -dimensional representation on a computer screen, and reading or <b>drawing</b> <b>plane</b> representations on paper. It is proved that computer programs for spatial geometry increase students motivation for learning, also computer diagrams are always precise and terms convenient for exploration. Students can also explore different ways to get the solution. The aim of my pilot research is to investigate how much the ninth grade students rely on diagrams, real objects and computer models when dealing with spatial geometry problems. 23 ninth grade students, divided in two groups, participated in the research. Students in the first group only used real objects during learning about pyramids, whereas in the second group, students had next to real objects also available computer models made in program SketchUp. As a result no significant difference was obtained between the achivements of both groups in solving spatial geometry problems. Also, there was no significant influence of sex or grade in mathematics. During the learning process students who used program SketchUp were more active than others. They were motivated for work, they always answered questions and they also asked more questions during class. They especially enjoyed exploring plane sections with SketchUp. ...|$|E
40|$|In {{this paper}} {{we present a}} sketch {{modelling}} system which we call Stilton. The program resembles a desktop VRML browser, allowing a user to navigate a 3 D model in a perspective projection, or panoramic photographs, which the program maps onto the scene as a ‘floor ’ and ‘walls’. We place an imaginary 2 D <b>drawing</b> <b>plane</b> {{in front of the}} user, and any geometric information that user sketches onto this plane may be reconstructed to form solid objects through an optimisation process. We show how the system can be used to reconstruct geometry from panoramic images, or to add new objects to an existing model. While panoramic imaging can greatly assist with some aspects of site familiarisation and qualitative assessment of a site, without the addition of some foreground geometry they offer only limited utility in a design context. Therefore, we suggest that the system may be of use in ‘just-intime’ CAD recovery of complex environments, such as shop floors, or construction sites, by recovering objects through sketched overlays, where other methods such as automatic line-retrieval may be impossible. The result of using the system in this manner is the ‘sketching of space ’ — sketching out a volume around the user — and once the geometry has been recovered, the designer is free to quickly sketch design ideas into the newly constructed context, or analyse the space around them. Although end-user trials have not, as yet, been undertaken we believe that this implementation may afford a user-interface that is both accessible and robust, and that the rapid growth of pen-computing devices will further stimulate activity in this area. Key words: Sketch design, Line-drawing interpretation, Image-based rendering 1 Introduction — Greenfields and Brownfields? Sophisticated three-dimensional CAD modelling systems are now routinely employed to ensure the cost effective design and construction {{of a wide range of}} commercial and industrial facilities. The spatially indexed database system...|$|E
3000|$|... aWireless link {{refers to}} the {{communication}} channel between two neighboring nodes. bA planar graph is a graph that can be <b>drawn</b> in the <b>plane</b> with no crossing edges.|$|R
40|$|We {{introduce}} a new graph drawing convention for 2. 5 D hierarchical drawings of directed graphs. The vertex set is partitioned both into layers of vertices <b>drawn</b> in parallel <b>planes</b> and into k≥ 2 subsets, called walls, and also <b>drawn</b> in parallel <b>planes.</b> The planes of the walls are perpendicular to the planes of the layers. We present a method for computing such layouts and introduce five alternative algorithms for partitioning the vertex set into walls which correspond to different aesthetic requirements. We evaluate our method with an extensive computational study...|$|R
50|$|This {{characterization}} of recurrence and transience is very useful, and specifically {{it allows us}} to analyze the case of a city <b>drawn</b> in the <b>plane</b> with the distances bounded.|$|R
