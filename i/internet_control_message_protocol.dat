102|4562|Public
25|$|The {{internet}} {{layer is}} not only agnostic of data structures at the transport layer, but it also does not distinguish between operation of the various transport layer protocols. IP carries data {{for a variety of}} different upper layer protocols. These protocols are each identified by a unique protocol number: for example, <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) and Internet Group Management Protocol (IGMP) are protocols 1 and 2, respectively.|$|E
2500|$|The Internet {{protocol}} suite does not presume any specific hardware or software environment. [...] It only requires that hardware and a software layer exists that {{is capable of}} sending and receiving packets on a computer network. As a result, the suite has been implemented on essentially every computing platform. A minimal implementation of TCP/IP includes the following: Internet Protocol (IP), Address Resolution Protocol (ARP), <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP), Transmission Control Protocol (TCP), User Datagram Protocol (UDP), and Internet Group Management Protocol (IGMP). In addition to IP, ICMP, TCP, UDP, Internet Protocol version 6 requires Neighbor Discovery Protocol (NDP), ICMPv6, and IGMPv6 and is often accompanied by an integrated IPSec security layer.|$|E
5000|$|... #Subtitle level 3: <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) flood ...|$|E
40|$|IPv 6 {{as we know}} offers {{variety of}} {{enhancements}} including increased addressing capacity, Quality of service (QoS) provisioning, built in security through IPSec, and also improved routing and mobility efficiency over IPv 4. BD-SIIT is a bidirectional stateless <b>internet</b> protocol/Internet <b>control</b> <b>messaging</b> <b>protocol</b> is an IPv 6 transition mechanism that allows IPv 6 -only hosts to talk to IPv 4 -only hosts. The BD-SIIT involves a stateless mapping or Bidirectional translation algorithm between IPv 4 and IPv 6 packet headers {{as well as between}} <b>Internet</b> <b>control</b> <b>messaging</b> <b>protocol</b> version 4 (ICMPv 4) and ICMPv 6 messages whereas Dual stack transition mechanism(DSTM) is also designed perform IPv 4 to IPv 6 transition for IPv 6 dominant network [...] This paper clearly specifies comparative and behavior analysis carried out on the two major IPv 6 interoperation mechanisms: BD-SIIT and DSTM for the high level compatibility smooth transition, and interoperation between IPv 4 and IPv 6. We implement the BD-SIIT and DSTM in order to study their behavior using difference evaluation performance metrics such as Throughput, EED, and RTT. The NS- 2 simulator is used to implement the BD-SIIT and DSTM mechanisms. The simulation results show that DSTM performance metrics are performing better than BD-SIIT when especially larger lengths packets are used...|$|R
40|$|Accurate {{measurement}} of network parameters such as available bandwidth, link capacity, delay, packet loss and jitter {{are used to}} support and monitor several network functions, e. g., traffic engineering, Quality-of-Service (QoS) routing, end-to-end transport performance optimization, and link capacity planning. However, proactive network measurement schemes can impact both the data traffic and the measurement process itself, affecting {{the accuracy of the}} estimation if a significant amount of probe traffic is injected into the network. In this work, we propose two measurement schemes, one for measuring available bandwidth and the other for measuring link capacity, both of them use a combination of data probe packets and <b>Internet</b> <b>Control</b> <b>Messaging</b> <b>Protocol</b> (ICMP) packets. Our schemes perform available-bandwidth and link-capacity measurements in a short time and {{with a small amount of}} probe traffic. We show a performance study of our measurement schemes and compare their accuracy to those of other existing measurement schemes. We show that the proposed schemes achieve shorter convergence time than other existing schemes and high accuracy...|$|R
40|$|Today, the Internet {{consists}} of native IPv 4 (IPv 4 -only), native IPv 6 and both IPv 4 /IPv 6 dual networks. Currently both IPv 4 and IPv 6 existing protocols are considered as incompatible protocols. Unfortunately IPv 4 and IPv 6 are incompatible protocols when both the versions {{are available and}} the users of internet want to connect without any restrictions, a transition mechanism is required. Since {{a huge amount of}} resources have been invested on current IPv 4 based Internet, how to smoothly transit the Internet from IPv 4 to IPv 6 is also a great tremendous and interesting research topic. During the time of migration from IPv 4 to IPv 6 networks, a number of transition mechanisms have been proposed by IETF to ensure smooth, stepwise and independent changeover. The development of Internet Protocol Version 6 (IPv 6), {{in addition to being a}} fundamental step to support growth of Internet is at the base of the increase IP functionality and Performance. It will enable the deployment of new applications over the Internet, opening a broad scope of technological development. BD-SIIT is one of the transitional technique which is mentioned in the IETF draft to perform the transition from IPv 4 /IPv 6. We implement the BD-SIIT transition algorithm. The Stateless <b>Internet</b> Protocol/Internet <b>Control</b> <b>Messaging</b> <b>Protocol</b> Translation (SIIT) [RFC 2765] is an IPv 6 transition mechanism that allows IPv 6 -only hosts to talk to IPv 4 -only hosts. The mechanism involves a stateless mapping or bidirectional translation algorithm between IPv 4 and IPv 6 packet headers as well as between <b>Internet</b> <b>Control</b> <b>Messaging</b> <b>Protocol</b> version 4 (ICMPv 4) and ICMPv 6 messages. SIIT is a stateless IP/ICMP translation, which means that the translator is able to process each conversion individually without any reference to previously translated packets. Most IP header field translations are relatively simple however; there is one issue, namely, how to translate the IP addresses between IPv 4 and IPv 6 packets. The NS- 2 simulator is used to implement the BDSIIT mechanism...|$|R
5000|$|ICMP (<b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol)</b> {{for network}} {{maintenance}} and debugging ...|$|E
5000|$|RFC 792, <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP), J. Postel, September 1981 ...|$|E
50|$|<b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> version 6 (ICMPv6) is the {{implementation}} of the <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) for Internet Protocol version 6 (IPv6). ICMPv6 is defined in RFC 4443. ICMPv6 {{is an integral part of}} IPv6 and performs error reporting and diagnostic functions (e.g., ping), and has a framework for extensions to implement future changes.|$|E
40|$|AbstractRapid {{development}} of telecommunication technologies and the ever growing network users demands have made network congestion a prominent problem in today's Internet. Congestion brings significant performance degradation {{to the network}} the Quality-of-Service (QoS). The Active Queue Management algorithms (AQM) are used to reduce congestion. In this paper, two AQM algorithms Extended Queue Management Backward Congestion Control Algorithm (EQMBCCA) and QMBCCA, which we have proposed earlier are taken in to consideration. QMBCCA makes use of ISQ (<b>Internet</b> <b>Control</b> <b>Messaging</b> <b>Protocol</b> (ICMP) Source Quench) signaling mechanism and also the CE (Congestion Experienced) bit whenever the average queue size crosses minimum threshold value. Both of them are redundantly used even for mild congestions. EQMBCCA introduces a configurable intermediate threshold value IntThres between the minimum and maximum values and generates ISQ signals only if the congestion crosses this threshold value. Therefore the generation of ISQ messages is significantly reduced here. There is also reliability since CE bits are also set in the packets once congestion occurs. The two algorithms are compared in terms of ISQ traffic, HTTP packet loss, fairness and average web object transfer delay for short lived web transfers. We {{have found that the}} performance of EQMBCCA is almost equal to that of QMBCCA and there is a significant reduction in the ISQ traffic in the reverse direction...|$|R
40|$|One of {{the major}} {{challenges}} faced by the IPv 6 community {{in recent years has}} been to define the scenarios, in which Multihoming transitioning mechanisms must be used and which ones should be selected given a specific scenario. The concept of IPv 4 /IPv 6 multihoming transitioning is one of the hot vigorous topic. The Multihoming transition between IPv 4 and IPv 6 internet will be a very long process as they are completely incompatible two protocols. Also it is impossible to switch the entire internet over night. As we know IPv 4 and IPv 6 coexist for a long time,and requires the transition and inter-operation mechanism. Due to this reason several transition mechanisms have been implemented which can be used to create IPv 6 smooth transition. This paper clearly specifies a multi homing based MBD-SIIT(Multi homing Bi-directional Stateless <b>Internet</b> Protocol/Internet <b>control</b> <b>messaging</b> <b>Protocol</b> Translation) Stateless based a new IPv 4 -IPv 6 novel transition mechanism in 4 G networks. This research work presents a new IPv 4 /IPv 6 transition method based on MBD-SIIT new technology. Compared with other existing transition methods,the proposed new method is a Multi homing Bidirectional Intelligent Transition System(MBDITS) which deals the intelligent method of transformation and adaptation between IPv 4 to IPv 6 and vice-versa. According to the various draw-backs of IPv 6 tunneling strategy and translation mechanism we believe that this MBD-SIIT or MBDITS reduces the size of a as well as rate of overall transmission as compared with encapsulation method. The proposed IPv 4 /IPv 6 can handle all transition requirements:(1) Automatic;(2) High Performance. This paper mainly elaborates the state of the art in IPv 4 /IPv 6 transition,summarizes,and evaluates the performance issues of MBD-SIIT Transition mechanism and presents the possible innovative route for the future research...|$|R
50|$|Hole {{punching}} {{does not}} require any knowledge of the network topology to function. ICMP hole punching, UDP hole punching and TCP hole punching respectively use <b>Internet</b> <b>Control</b> <b>Message,</b> User Datagram and Transmission Control Protocols. Using TCP nefarious hole punching, {{it is possible to}} send compressed SYN packets through into a common ACK path.|$|R
5000|$|ICMPv4 and ICMPv6, <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> version 4 and version 6 ...|$|E
5000|$|Tests IP channel between {{monitoring}} system and another computer or network device with <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) protocol.|$|E
5000|$|New <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> for IPv6 (ICMPv6) {{messages}} {{to discover the}} set of home agents and to obtain the prefix of the home link ...|$|E
40|$|Abstract-Internet <b>Control</b> <b>Message</b> <b>Protocol</b> is a {{protocol}} which is mainly {{used to provide}} information relating to errors on networked machines. Considering the few controls that IP protocol carries out, it not only allows errors to be corrected but also informs the protocols of neighboring layers of these errors. So, ICMP protocol is used by all routers, who use it to indicate an error (called a Delivery Problem). ICMP error messages are sent over the network in a datagram form, like any other data. So, the error messages themselves can be subject to errors. ICMP messages are used by the network administrators for troubleshooting the networks. Even though this protocol has many advantages, {{there are some of}} the flaws such as security,which is a major concern to be considered and to be eliminated. In this paper, we present an existing scenario and provide the authentication mechanism for ICMP messages. We also propose enhanced Packet format for ICMP message {{in such a way that}} authentication can be done. Kerberos algorithm is used for authentication mechanism which uses private key encryption method...|$|R
40|$|The paper {{describes}} a general purpose high performance data transfer protocol for data intensive applications over high bandwidth networks. The protocol, named SABUL, has demonstrated {{the efficiency and}} fairness features in both experimental and practical applications. SABUL is a lightweight, reliable, application level protocol. It uses UDP to transfer data and TCP to feedback <b>control</b> <b>messages.</b> The <b>protocol</b> uses a rate based congestion control that tunes the inter-packet time. This algorithm is proven to be TCP friendly. In addition, the protocol also specifies the transparent memory copy avoidance...|$|R
40|$|Colloque avec actes et comité de lecture. internationale. International audienceIn this paper, {{we present}} an {{overview}} of "Modeling, Specifying and Testing IPv 6 Protocols" project. The aim of the project is to formalize IPv 6 protocols and to allow simulation and automatic generation of test suites for conformance and interoperability testing. Protocol behavior is specified with SDL and test suites are described with TTCN (Tree and Tabular Combined Notation). Our methodology for formalizing, verifying and generating abstract test suites is based on ObjectGeode from Telelogic. A selection of corresponding executable test suites are provided in C language and are ready to apply to an existing implementation. The set of protocols that have been specified includes "Internet Protocol version 6 ", "Neighbor Discovery for IPv 6 ", "Internet <b>Control</b> <b>Message</b> <b>Protocol</b> for IPv 6 ", "Multicast Listener Discovery for IPv 6 " and "RIPng for IPv 6 ". A brief overview of each protocol is given before the general approach used is presented. An example is given based on a small protocol MLD for which all steps have been applied and executable test suite have been coded in C language and executed in an active environment...|$|R
50|$|IGMP {{messages}} are carried in bare IP packets with IP protocol number 2. There is no transport layer used with IGMP messaging, {{similar to the}} <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol.</b>|$|E
50|$|The {{function}} of arping {{is analogous to}} the utility ping for probing the network with the <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) at the Internet Layer of the Internet Protocol Suite.|$|E
50|$|Stacheldraht uses {{a number}} of {{different}} denial-of-service (DoS) attacks, including User Datagram Protocol (UDP) flood, <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) flood, Transmission Control Protocol (TCP) SYN flood and Smurf attack.|$|E
40|$|In {{the modern}} {{technological}} world, {{with the increasing}} dependency on Internet the security threats are on the rise. Distributed Denial of Service (DDoS) attack {{is one of the}} biggest threats. The attackers tend to exhaust the network resources, while ingeniously hiding their identity, making the defence process extremely difficult. Many researchers have proposed various solutions to traceback the true origin of attack. Among them In-ternet <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) traceback was considered an industry standard by Internet Engineering Task Force (IETF). ICMP Traceback (ITrace) does not require any change in the existing infrastructure. However it consumes considerable bandwidth and requires a large number of packets to traceback an attacker. This work proposes a Single Packet ICMP Traceback technique using Router Interface (SPITRI). It traces the origin of flooding attack with a single ICMP packet. The bandwidth overhead incurred by SPITRI is several times lesser than ITrace. SPITRI was simulated over the CAIDA Ark dataset. It can traceback the attackers with high accuracy, with zero false positive and zero false negative result. The efficacy of the proposed scheme is demonstrated by simulating and comparing it with ITrace, and the latest router interface based single packet traceback scheme...|$|R
40|$|The paper {{presents}} a causal protocol for very large group communication systems. The protocol {{does not make}} any assumption concerning the group structure nor the network topology. It aims to minimize and control the flow of causal information through two mechanisms. First, it reduces the amount of causal information (CI) timestamped per message by avoiding the transmission of redundant information. The second original mechanism we propose controls and bounds the size of transmitted CI, without losing causality, {{through the use of}} additional <b>control</b> <b>messages.</b> Our <b>protocol</b> guarantees a great flexibility, as well as the minimization of exchanged causal information. In addition, it accelerates the knowledge of the system concerning its causal past...|$|R
40|$|International audienceWireless sensor {{networks}} (WSNs) {{have recently}} received growing attention {{as they have}} great potential for many distributed applications in different scenarios. Whatever the scenario, most WSNs are actually connected to an external network, through which sensed information are passed to the <b>Internet</b> and <b>control</b> <b>messages</b> can reach the WSN. This paper presents WISeMid, a middleware that focuses on integrating Internet and WSN at service level instead of integrating protocol stacks and/or mapping logical addresses. WISeMid allows the integration of WSN and Internet services by providing transparency of access, location and technology. To validate WISeMid, some results of a power consumption evaluation of the middleware are presented...|$|R
50|$|PMTUD is {{standardized}} for IPv4 in RFC 1191 and for IPv6 in RFC 1981. RFC 4821 {{describes an}} extension to the techniques that works without support from <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol.</b>|$|E
50|$|Protocols {{not based}} on TCP and UDP require other {{translation}} techniques. <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) packets typically relate to an existing connection {{and need to be}} mapped using the same IP address and port mappings as established in that connection.|$|E
50|$|In addition, a Network Management Guard {{has been}} created to protect network and {{security}} management systems from the networks they monitor and control. This provides a full application level proxy for Simple Network Management Protocol (SNMP) and <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP).|$|E
40|$|Distributed Denial-of-Service (DDoS) {{attacks are}} {{becoming}} a major problem to both the internet and internet services. Congestion is caused by malicious hosts that are not obeying traditional end-to-end congestion control; the problem must be handled by routers. Functionality is added to each router to detect and preferentially drop packets that probably belong to an attack. Client puzzles have been advocated as a promising countermeasure to Denial-of-Service (DoS) attacks in the recent years. In order to identify the attackers, the victim server issues a puzzle to the client. When the client is able to solve the puzzle, it {{is assumed to be}} authentic and the traffic from it is allowed into the server. In order to attain the advantages of both pushback and puzzle solving techniques, a hybrid scheme called router-based pushback technique, which involves both techniques {{to solve the problem of}} DDoS attacks, is proposed. In this proposal, the puzzle-solving mechanism is pushed back to the core routers rather than to the victim. The router-based client puzzle mechanism checks the host system whether it is legitimate or not by providing a puzzle to be solved by the client. distributed denial-of-service; DDoS attacks; <b>internet</b> <b>control</b> <b>message</b> protocols; ICMP; simulation tools; hacking; internet routers; end-to-end congestion control; client puzzles; router-based pushback techniques; internet hosts; critical infrastructures; defence mechanisms...|$|R
40|$|A novel {{algorithm}} {{for performing}} parallel, distributed computer simulations on the <b>Internet</b> using IP <b>control</b> <b>messages</b> is introduced. The algorithm employs carefully constructed ICMP packets which enable the required computations {{to be completed}} {{as part of the}} standard IP communication protocol. After providing {{a detailed description of the}} algorithm, experimental applications in the areas of stochastic neural networks and deterministic cellular automata are discussed. As an example of the algorithms potential power, a simulation of a deterministi...|$|R
40|$|Syntax Notation One CIM : Common Information Model CMIP : Common Management Information Protocol CMIS : Common Management Information Services CMISE : Common Management Information Service Element CMOT : Common Management Information Protocol over TCP COM : Component Object Model CORBA : Common Object Request Broker Architecture DCE : Distributed Computing Environment DCOM : Distributed Component Object Model DCP : Distributed Computing Protocol DII : Dynamic Invocation Interface DME : Distributed Management Environment ix DP : Delegate Program DSI : Dynamic Skeleton Interface GDMO : Guidelines for the Description of Managed Objects HMMP :HyperMedia Management Protocol HMOM :HyperMedia Object Manager HNM : Hierarchical Network Management HTML : Hypertext Markup Language HTTP : Hypertext Transfer <b>Protocol</b> ICMP :Internet <b>Control</b> <b>Message</b> <b>Protocol</b> IDL :Interface De nition Language IETF :Internet Engineering Task Force IIOP :Internet Inter-ORB Protocol IP :Internet Protocol IR :Interface Repository ISO :International Organization for Standardization JDMK :Java Dynamic Management Kit JIDM :JointInter-Domain Management JMX :Java Management eXtension M 2 M : Manager to Manager Mbd : Management by {{delegation}} MIB : Management Information Base MO : Managed Object MOC : Managed Object Class MRB : Management Request Broker NMP :Network Management Procedure x OMG : Object Management Group ORB : Object Request Broker OSF : Open Software Foundation OSI : Open Systems Interconnection RFC : Request For Comment RMI : Remote Method Invocation RMON : Remote Network Monitoring RPC : Remote Procedure Call SNMP : Simple Network Management Protocol TCP : Transmission Control Protocol TINA : Telecommunication Information Networking Architecture U [...] ...|$|R
50|$|Ping {{operates}} {{by sending}} <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP/ICMP6) Echo Request packets {{to the target}} host and waiting for an ICMP Echo Reply. The program reports errors, packet loss, and a statistical summary of the results, typically including the minimum, maximum, the mean round-trip times, and standard deviation of the mean.|$|E
50|$|ICMP hole {{punching}} is {{a technique}} employed in network address translator (NAT) applications for maintaining <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) packet streams that traverse the NAT. NAT traversal techniques are typically required for client-to-client networking applications on the Internet involving hosts connected in private networks, especially in peer-to-peer and Voice over Internet Protocol (VoIP) deployments.|$|E
50|$|BWPing {{is a tool}} {{to measure}} {{bandwidth}} and response times between two hosts using <b>Internet</b> <b>Control</b> <b>Message</b> <b>Protocol</b> (ICMP) echo request/echo reply mechanism. It does not require any special software on the remote host. The only requirement {{is the ability to}} respond on ICMP echo request messages. BWPing supports both IPv4 and IPv6 networks.|$|E
40|$|International audienceAn Internet-based {{remote control}} system is {{designed}} and implemented. The communication {{is based on the}} Master-Slave structure. The Master PC communicates with the Slave from about 40 km away by UDP protocol. In order to guarantee the Master and Slave clocks to be synchronized, the NTP (Network Time Protocol) is used in both sides. The packets are sent together with time-stamps. The controller design (Master) relies on a remote observer that achieves a state prediction of the application (Slave), despite the variable communication delays. The Slave comprises a PC and a robot Miabot of Merlin company. Internet-based remote systems are subject to variable time delays (including communication and data-sampling delays). We have continuously tested the RTT (round-triptime) between the two PCs in the day-time and night-time by the <b>protocol</b> ICMP (<b>Internet</b> <b>Control</b> <b>Message).</b> From these tests, an evaluation of the maximal time delay is obtained. The structure allows one to guarantee an exponential stabilization performance, which is proven via a Lyapunov-Krassovski functional technique and involves the estimated delay upperbound. This means that the guaranteed decay rate is computed (via some LMI optimization) in relation to some maximal value of the communication delays. Of course, for greater delay values, the performance cannot be guaranteed anymore and an alternative solution has to be considered. In our system, we give a command for the robot to stop until the communication comes back to a sufficient quality...|$|R
40|$|Abstract: In this article, an Internet-based {{remote control}} system is {{designed}} and im-plemented. The communication {{is based on the}} Master-Slave structure. The Master PC communicates with the Slave from about 40 km away by UDP protocol. In order to guarantee the Master and Slave clocks to be synchronized, the NTP (Network Time Protocol) is used in both sides. The packets are sent together with time-stamps. The controller design (master) relies on a remote observer that achieves a state prediction of the application (slave), despite the variable communication delays. The Slave comprises a PC and a robot Miabot of Merlin company. The protocol Bluetooth is used between the local PC and the robot. Internet-based remote systems are subject to variable time delays (including communication and data-sampling delays) and data packets losses (due to the unstable Internet network). We have continuously tested the RTT (round-trip-time) between the two PCs in the daytime and nighttime by the <b>protocol</b> ICMP (<b>Internet</b> <b>Control</b> <b>Message).</b> From these tests, an evaluation of the maximal time delay is obtained. Our structure allows one to guarantee an exponential stabilization performance, which is proven via a Lyapunov-Krassovski functional technique and involves the estimated delay upperbound. This means that the guaranteed decay rate is computed (via some LMI optimization) in relation to some maximal value of the communication delays. Of course, for greater delay values, the performance cannot be guaranteed anymore and an alternative solution has to be considered. In our system, we give a command for the robot to stop until the communication comes back to a sufficient quality...|$|R
40|$|A {{wireless}} {{mesh network}} (WMN) {{is expected to}} be a key enabler for next generation networking due to its infrastructure-less strengths such as scalability, cost-efficient rapid deployment, and long distance communications. To boost the strength of WMNs, it is required to balance loads among multiple gateways as well as mesh nodes. However, there have been only few practical and easily-implementable solutions for load balancing of WMNs. In this paper, we propose a distributed autonomous load balancing routing mechanism for anycast WMNs where most traffic flows are for the Internet access through any mesh gateways. Without flooding of <b>control</b> <b>messages,</b> our <b>protocol</b> finds optimized paths implicitly considering geographical distance and a congestion degree based on analogy of physics theory, Poisson’s equation and by use of a distributed form of a finite element method. Through simulations, we assess the performance of our protocol compared with the anycast modifications of traditional shortest-path routing and geographic routing under dynamically varying network scenarios...|$|R
