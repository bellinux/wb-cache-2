15|189|Public
25|$|Maf'at, {{decided to}} start the program that would include the system's {{research}} and {{a demonstration of the}} <b>intercepting</b> <b>system.</b> In 2007, Israel commissioned the development of Iron Dome, choosing Israeli contractor Rafael over the American giant Lockheed Martin. Israeli company mPrest Systems was put in charge of programming the core of Iron Dome's battle management system. Iron Dome went from the drawing board to combat readiness within less than four years, a remarkably short period of time for a weapons system designed from scratch, according to military experts.|$|E
5000|$|In 2005, Brig. Gen. Danny Gold, {{then head}} ofMaf'at, {{decided to start}} the program that would include the system's {{research}} and {{a demonstration of the}} <b>intercepting</b> <b>system.</b> In 2007, Israel commissioned the development of Iron Dome, choosing Israeli contractor Rafael over the American giant Lockheed Martin. Israeli company mPrest Systems was put in charge of programming the core of Iron Dome's battle management system. Iron Dome went from the drawing board to combat readiness within less than four years, a remarkably short period of time for a weapons system designed from scratch, according to military experts. There was no system like this, anywhere in the world, in terms of capabilities, speed, accuracy. We felt like a start-up. Eyal Ron, a manager at mPrest [...] According to the leading developers of Iron Dome, due to schedule and low-cost settings constraints, some of the missile components have been taken from a toy car sold by Toys [...] "R" [...] Us.|$|E
50|$|In August 2013, Raytheon and Rafael Advanced Defense Systems {{began to}} seek {{funding for a}} {{fourth-generation}} Patriot <b>intercepting</b> <b>system,</b> called the Patriot Advanced Affordable Capability-4 (PAAC-4). The system aims to integrate the Stunner interceptor from the jointly-funded David's Sling program with Patriot PAC-3 radars, launchers, and engagement control stations. The two-stage, multimode seeking Stunner would replace single-stage, radar-guided PAC-3 missiles produced by Lockheed Martin. Government and industry sources claim the Stunner-based PAAC-4 interceptors will offer improved operational performance at 20 percent of the $2 million unit cost of the Lockheed-built PAC-3 missiles. The companies are seeking $20 million in U.S. government funding to demonstrate cost and performance claims through a prototype PAAC-4 system. Israeli program officials have said that a previous teaming agreement between Raytheon and Rafael would allow the U.S. company to assume prime contractor status, and produce at least 60 percent of the Stunner missile in the United States. The Missile Defense Agency {{has said that the}} U.S. Army is considering use of the Stunner as a potential solution to future U.S. military requirements.|$|E
5000|$|Electronic Maintenance MOS' {{included}} 32D Technical Controller, 33B {{intercept equipment}} repairman, 33C Intercept Receiver Repairman, 33D <b>Intercept</b> Record <b>System</b> Repairmen, 33E20 Microbarographic Equipment Repairman, 33F Digital Demultiplex <b>Intercept</b> <b>Systems</b> Repairman, 34F Digital Systems Terminal Equipment Repairman and 33G Electronics Countermeasures System Repairmen and a 44 man Special Operations Detachment or field teams to conduct clandestine combat operations, among others. ASA {{had its own}} separate training facilities, Military Police force, communication centers and chain of command. In 1976, all 33 MOS designations were consolidated into one field, 33S Electronic Repairman. The designation became Electronic Warfare <b>Intercept</b> <b>Systems</b> Repairman.|$|R
50|$|After {{the basic}} POST checks are complete, the option ROMs are {{normally}} initialized. This {{gives them the}} chance to hook (<b>intercept)</b> <b>system</b> interrupts, {{in order to provide}} increased functionality to the system.|$|R
5000|$|The {{report found}} that ground {{operators}} at Nurrungar {{played a part in}} the tragedy, which the Air Force described as a [...] "worst case combination of events"; these were in turn compounded by failures in the MIM-104 Patriot <b>intercept</b> <b>system</b> deployed near the Dhahran base itself.|$|R
40|$|UMView is {{a partial}} virtual machine and userspace {{hypervisor}} capable of <b>intercepting</b> <b>system</b> calls and modifying their behavior {{according to the}} calling process' view. In order to provide flexibility and modularity UMView supports modules loadable at runtime using a plugin architecture. UMView in particular is {{the implementation of the}} View-OS concept which negates the global view assumption which is so radically established in the world of OSes and virtualization...|$|E
40|$|The Provenance Aware Storage Systems project (PASS) {{currently}} collects system-level provenance by <b>intercepting</b> <b>system</b> {{calls in}} the Linux kernel and storing the provenance in a stackable filesystem. While this approach is reasonably efficient, it suffers from two significant drawbacks: each new revision of the kernel requires reintegration of PASS changes, the stability of which must be continually tested; also, {{the use of a}} stackable filesystem makes it difficult to collect provenance on root volumes, especially during early boot. In this paper we describe an approach to collecting system-level provenance from virtual guest machines running under the Xen hypervisor. We make the case that our approach alleviates the aforementioned difficulties and promotes adoption of provenance collection within cloud computing platforms. ...|$|E
40|$|Sandboxing {{systems are}} {{extremely}} useful for secure execution of untrusted applications. Many of the sandboxing systems proposed so far provide security by <b>intercepting</b> <b>system</b> calls invoked by an application and controlling their execution. However, {{a problem in}} existing sandboxing systems {{is the amount of}} overhead required for security checks performed after system call interceptions. In this paper, we propose a sandboxing system that executes speculative security checks. The proposed system predicts the behavior of a sandboxed application and executes speculative security checks in parallel with the application, thus reducing the overhead. Behavior is predicted based on system call profiles in past executions of the application. We implemented the system on Linux and made a preliminary evaluation. 1...|$|E
50|$|The first {{automatic}} <b>intercept</b> <b>systems</b> used rotating magnetic drums containing multiple recorded phrases, with {{a computer}} or mechanical control system playing phrases in the proper sequence. Initially, the caller was given the option {{to remain on the}} line for a live operator after the announcement was completed; this has now been removed.|$|R
25|$|A further key {{disadvantage}} in the convoy support and interception battles {{that dominated the}} Battle of the Mediterranean was the intelligence advantage the British held in their Ultra <b>intercept</b> <b>system.</b> Ultra decrypts provided the Royal Navy with key information on convoy routes, times of departure, time of arrival, and make up of the convoy.|$|R
5000|$|L'Adroit is a [...] {{patrol vessel}} {{specially}} designed by DCNS for maritime protection missions. It {{has a wide}} range of capabilities deployed through prevention and action assets optimized for maritime surveillance and policing duties, including fast commando boats, assault or transport helicopter, unmanned surveillance vehicles, electronic warfare <b>intercept</b> <b>systems,</b> shell doors, secure high-bitrate communication facilities and command aids.|$|R
40|$|To protect {{important}} network {{resources from}} threats or malicious access, {{one has to}} implement security at both network level and host level. Any IDS or IDPS achieves this by normally using a set of pre-defined rule-sets. However, existing evasion techniques have become more intelligent by invading the network or a host by effectively pre-judging the rules defined and used by IDS/IDPS. In addition, the false positives rate is usually high for such systems, which also hampers overall network performance. The paper aims to describe how a novice approach helps identifying applications as an attacker or a victim by <b>intercepting</b> <b>system</b> calls on Windows. Our system introduces three main modules: Network Interceptor, Event Collector and Administrative Server. Together, they identify an attack with help of NIDS along with the name and version of the attacker and victim applications that we can protect in future. This paper firs...|$|E
40|$|This paper {{presents}} a concept study that demonstrates a transparent (non [...] intrusive {{to the application}} or the kernel) active replication and TMR [...] based fault tolerance in PC/Linux platforms. The target platform is the low [...] cost clusters of PCs that are increasingly more often found in the budget [...] oriented internet service industry. The solution we adopted is based on two ideas: 1) <b>intercepting</b> <b>system</b> calls and making the replicas agree on their parameters and return values, and 2) replacing the file system service by one that is aware of replication and can provide consistent replies to the replicas' requests. The first idea is implemented using the kernel's process [...] tracing hooks (ptrace). For the second, we modified an existing user [...] space NFS server. The result {{is a system that}} can preserve the consistency between replicas in some applications; although not all functionalities of Unix are currently supported we plan to extend the scope of coverag...|$|E
40|$|Abstract — Fast virus {{scanning}} {{is becoming}} increasingly important in today’s Internet. While Moore’s law continues to double CPU cycle speed, virus scanning applications fail to ride on the performance wave due to their frequent random memory accesses. This paper proposes Hash-AV, a virus scanning “booster ” technique that aims {{to take advantage of}} improvements in CPU performance. Using a set of hash functions and a bloom filter array that fits in CPU second-level (L 2) caches, Hash-AV determines the majority of “no-match ” cases without accesses to main memory. Experiments show that Hash-AV improves the performance of the open-source virus scanner Clam-AV by a factor of 2 to 10. The key to Hash-AV’s success lies in a set of “bad but cheap ” hash functions that are used as initial hashes. The speed of Hash-AV makes it well suited for “on-access” virus scanning, providing greater protections to the user. Through <b>intercepting</b> <b>system</b> calls and wrapping glibc libraries, we have implemented an “on-access ” version for Hash-AV+Clam-AV. The on-access scanner can examine input data at a throughput of over 200 Mb/s, making it suitable for network-based virus scanning. I...|$|E
50|$|Careto {{normally}} installs {{a second}} and more complex backdoor program called SGH. SGH is easily modifiable and also has a wider arsenal including the ability to <b>intercept</b> <b>system</b> events, file operations, and performing {{a wider range of}} surveillance features. The information gathered by SGH and Careto can include encryption keys, virtual private network configurations, and SSH keys and other communication channels.|$|R
50|$|Upsetting this {{development}} to all-missile systems {{is the current}} move to stealth aircraft. Long range missiles depend on long-range detection to provide significant lead. Stealth designs cut detection ranges {{so much that the}} aircraft is often never even seen, and when it is, it is often too late for an <b>intercept.</b> <b>Systems</b> for detection and tracking of stealthy aircraft are a major problem for anti-aircraft development.|$|R
5000|$|... : Egyptian Navy - 3 boats (plus two in reserve) remain [...] from 13 {{transferred}} from the Soviet Union in 1966-8, {{some of which were}} sunk during the Yom Kippur War in 1973. The survivors were re-engined in 1994 and given Litton Triton radar <b>intercept</b> <b>systems.</b> 5 ex-Yugoslav boats were bought in 2004 for less than $1m a piece, refitted in Montenegro and delivered in 2007.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe Management System for Heterogeneous Networks (MSHN) requires {{the gathering of}} resource usage information of applications that run within the MSHN system and status information of the resources {{within the scope of}} the MSHN scheduler. The MSHN scheduler uses this information to make decisions. This thesis investigates one method of gathering the required information: a client library. This research develops the mechanism and policy for the client library's resource monitoring role and carefully documents how applications can be easily linked with this client library. During run time the client library gathers information on an application's resource utilization by <b>intercepting</b> <b>system</b> calls and through the use of operating system functions. Resource information gathered includes total runtime, local and remote disk use, network use, memory use, CPU use, and time blocked waiting on user input. The client library also determines end-to-end perceived status of the resources that the application uses. Specifically, this thesis develops a policy for passively gathering network performance characteristics, i. e., latency and throughput. The per system call overhead added varied from less than 1 % to 326 %, with an average of 3 % overhead added to the run-time of test programs[URL] United States Arm...|$|E
40|$|Record label {{companies}} {{would like to}} identify potential artists {{as early as possible}} in their careers, before other companies approach the artists with competing contracts. The vast number of candidates makes the process of identifying the ones with high success potential time consuming and laborious. This paper demonstrates how datamining of P 2 P query strings can be used in order to mechanize most of this detection process. Using a unique <b>intercepting</b> <b>system</b> over the Gnutella network, we were able to capture an unprecedented amount of geographically identified (geo-aware) queries, allowing us to investigate the diffusion of music related queries in time and space. Our solution is based on the observation that emerging artists, especially rappers, have a discernible stronghold of fans in their hometown area, where they are able to perform and market their music. In a file sharing network, this is reflected as a delta function spatial distribution of content queries. Using this observation, we devised a detection algorithm for emerging artists, that looks for performers with sharp increase in popularity in a small geographic region though still unnoticable nation wide. The algorithm can suggest a short list of artists with breakthrough potential, from which we showed that about 30 % translate the potential to national success...|$|E
40|$|With {{the advent}} of Flash based solid state devices (SSDs), the {{differences}} in physical devices used to store data in computers {{are becoming more and}} more pronounced. Effectively mapping the differences in storage devices to the files, and applications using the devices, is the problem addressed in this dissertation. This dissertation presents the Umbrella File System (UmbrellaFS), a layered file system designed to effectively map file and device level differences, while maintaining a single coherent directory structure for users. Particular files are directed to appropriate underlying file systems by <b>intercepting</b> <b>system</b> calls connecting the Virtual File System (VFS) to the underlying file systems. Files are evaluated by a policy module that can examine both filenames and file metadata to make decisions about final placement. Files are transparently directed to and moved between appropriate file systems based on their characteristics. A prototype of UmbrellaFS is implemented as a loadable kernel module in the 2. 4 and 2. 6 Linux kernels. In addition to providing the ability to direct files to file systems, UmbrellaFS enables different decisions at other layers of the storage stack. In particular, alternate page cache writeback methods are presented through the use of UmbrellaFS. A multiple queue strategy based on file sequentiality and a sorting strategy are presented as alternatives to standard Linux cache writeback protocols. These strategies are implemented in a 2. 6 Linux kernel and show improvements in a variety of benchmarks and tests...|$|E
40|$|The Microprobe is an {{embedded}} device for intercepting of network communication. It {{is a part}} of the Sec 6 Net Lawful <b>Intercept</b> <b>System</b> (SLIS). It would be useful to run the Microprobe as a~standalone device. Without it, the microprobe requires connection to SLIS infrastructure which is a~prerequisite to run the Microprobe.   The goal of this thesis is to describe ways how to transfer SLIS to the Microprobe architecture...|$|R
25|$|In {{the middle}} 20th century in North America when a call {{could not be}} completed, for example because the phone number was not assigned, had been disconnected, or was {{experiencing}} technical difficulties, the call was routed to an intercept operator who informed the caller. In the 1970s this service was converted to Automatic <b>Intercept</b> <b>Systems</b> which automatically choose and present an appropriate intercept message. Disconnected numbers are reassigned to new users after the rate of calls to them declines.|$|R
25|$|Enhance {{emulation}} {{software and}} security software. Alcohol 120% and Daemon Tools are commercial examples of non-hostile rootkits used to defeat copy-protection mechanisms such as SafeDisc and SecuROM. Kaspersky antivirus software also uses techniques resembling rootkits {{to protect itself}} from malicious actions. It loads its own drivers to <b>intercept</b> <b>system</b> activity, and then prevents other processes from doing harm to itself. Its processes are not hidden, but cannot be terminated by standard methods (It can be terminated with Process Hacker).|$|R
40|$|We {{present a}} {{software}} solution for energy-aware reconfiguration of WSNs. An hybrid approach is proposed for reprogramming sensor nodes, that combines {{the efficiency of}} execution of native code with the flexibility and ease of programming of virtual machines. The main idea is to adapt the behaviour of the application by <b>intercepting</b> <b>system</b> calls to primitives and library functions made by the application, and modify the effect of such calls by executing specific fragments of code, called adaptlets, to customise the application behaviour. This is achieved by the intervention of an adaptation layer that is seamlessly inserted at the interface between the application and the operating system. The adaptation layer is distinct from the application, and embeds a tiny virtual machine that executes adaptlets meant for post-deployment configuration of the application. Differently from other approaches, where the entire application is interpreted, adaptlets are tied only to specific services, while {{the bulk of the}} application is still written in native code. This makes the proposed approach able to preserve the compactness and efficiency of native code and to have little impact on the overall application performance. The adaptation layer has been implemented {{in the context of the}} TinyOS operating system, and the instruction set is inspired to the Java bytecode. Examples illustrating the programming of the adaptation layer are presented together with their experimental validation. Furthermore, in order to support battery-aware operations, we developed B-MAC+, an enhancement of B-MAC, a popular contention-based protocol for WSNs. In particular, we make clear how receivers running the standard B-MAC protocol waste energy during the reception of long preambles and we propose a more efficient solution. Also, we explore the possibility of adopting opportunistic computing paradigms to overcome the problem of executing applications when the size of the program is larger than the amount of memory available on a single node. We propose a technique based on the idea of dividing the application into smaller and cooperating code fragments. Each fragment of the application fits the resources available on a single node, and an opportunistic cooperation between nodes [...] either on the path to the base station or within a given region [...] can be used to resemble the global computation. FInally, we report on our work towards developing a simulation and analysis framework for WSN algorithms within a theorem prover. Specifically, we explored the possibility of using the evaluation mechanism of the Prototype Verification System (PVS) to specify, test and verify WSN communication protocols during the very early stages of their design. The specification of the algorithm is expressed with an extensible set of programming primitives, and properties of interest are evaluated with ad hoc network simulators automatically generated from the formal specification...|$|E
40|$|Being one of {{the most}} {{spectacular}} events in nature, lightning is basically a transient high current electric discharge in the atmosphere, which extends up to kilometres. Cloud to ground discharge is the most hazardous one as far as ground based structures are considered. Among the different phases of a lightning flash, return stroke is considered to be the most energetic phase and is basically responsible for most of the damages. Hence, much emphasis has been given to return stroke modeling. A more realistic modeling of return stroke is very essential to accurately study the interaction of return stroke with the structures on ground. As return stroke is dominated by electromagnetic phenomenon, an electromagnetic model will be the most suitable one. It does not call for any assumption on the mode of wave propagation, as well as, electromagnetic coupling between the different channel portions. There are mainly two approaches adopted for electromagnetic models i. e. frequency domain and time domain approach. Time domain approach is more reliable as it can handle, in principle, the nonlinear processes in the lightning channel. It is also free of numerical frequency domain to time domain inversion problem, which are found to be quite severe. However, most of the previous works on time domain electromagnetic models suffered from following two serious limitations - (i) the initial charge on the channel, which forms the true excitation for the problem, is not considered and (ii) instead of the non-linearly rising conductivity of the channel, a constant resistance is employed. For a realistic simulation of the interaction between the channel and any <b>intercepting</b> <b>system,</b> a time domain model with the above two major aspects being fully represented is very essential. In an earlier work, all these aspects have been fully considered but a domain based numerical modelling was employed. Consequently, it was difficult to consider the down conductor and further the number of unknowns was considerably large. In view of this, the present work is taken up and its scope is defined as to develop a boundary based numerical time domain electromagnetic model in which the initial charge on the channel and the non-linearly evolving channel conductance are fully considered. For the electrical engineering applications, electromagnetic aspects of the lightning phenomena {{is more important than the}} other associated physical processes and hence, importance is given only to the electromagnetic aspects. In other words, the light emission, thunder, chemical reactions at the channel etc. are not considered. Also, for most of the electrical engineering applications, the critical portion of current would be the region up to and around the peak and hence, modeling for this regime will be given prime importance. Owing to the complexity of the problem, some simplifying assumptions would be very essential. The literature indicates that these assumptions do not affect the adequate representation of the phenomena. Lightning channel is considered to be vertically straight without any branches. Earth is considered to be perfectly conducting. Explicit reference to dynamically varying channel radius, temperature and the air density is not made. However, it is assumed that the arc equation employed to describe the temporal changes in conductivity would adequately take care of these parameters. Lightning channel is represented by a highly conducting small core, which is surrounded by a weakly conducting corona sheath. The initial charge on the channel is deduced by solving for electrostatic field, with leader portion set to possess an axial gradient of 60 V/cm and the streamer portion to 5 – 10 kV/cm. The radius of the corona sheath is set iteratively by enforcing a gradient of 24 kV/cm up to its radial boundary. As analytical solution for the problem is impractical, suitable numerical solution is sought. Since the spatial extension of this time marching problem is virtually unbound and that the significant conduction is rather solely confined to an extremely small cross section of the channel core, a boundary-based method is selected. Amongst the numerical methods, the present work employs the moment method for the solution of the fields associated with the return strokes. A numerical solution of the Electric Field Integral Equation (EFIE) for thin structures has been developed in the literature. The same approach has been employed in the present work, however, with suitable modifications to suit the lightning problem. The code was written in MATLAB and integrations involved in the EFIE were solved using MATLAB symbolic computation. Before introducing the channel dynamic conductance and the initial charge on the channel, the code developed is validated by comparing the results for a center fed dipole antenna with that given in the literature. Also, NEC (Numeric Electromagnetic Code) simulations for various cases of monopole and dipole antenna were performed. The results from the code developed are shown to have good matching with that obtained from NEC based time domain results. In an earlier work, the dynamic conductance of the return stroke channel core, which is a high current electric arc, was represented by a first order arc equation. The same approach is employed in the present work also. Similarly, the transition from streamer to leader was modeled by Braginskii’s spark law and the same has been considered in the present work. A value of 10 - 5 S/m was used for minimum value of streamer conductance. For numerical stability, upper (Gmax = 3 S/m) and lower bounds (Gmin = 0. 0083 S/m) for the channel conductance are forced. Preliminary simulations were run with and without dynamic channel conductance. The initial charge distribution along the channel formed the excitation. Results clearly show that without the dynamically varying channel conductance, no streamer to leader transition and hence, no return stroke evolution can occur. In other words, the non-linearly evolving channel conductance is mainly responsible for the evolution of the return stroke. In order to consider the charge neutralization by the return stroke, the charge deposited by it is diffused into the corona sheath. A fixed value of the corona sheath conductance is employed and the diffusion process is modeled by an equation derived from the continuity equation. To study the effect of corona sheath, simulations were run with and without corona. From the simulation results it was observed that the corona sheath causes increase in peak value of the stroke current, as well as, time to front and a decrease in the velocity of propagation. For the validation of the model, the basic characteristics of the return stroke current like the current wave shape, temporal variation of stroke current at different heights, velocity of propagation and the vertical electric fields at various radial distances were compared with available field/experimental data. A good agreement was seen and based on this, it is concluded that the present work has successfully developed a boundary based time domain numerical model for the lightning return stroke. Natural lightning being a stochastic process, the values of the parameters associated with it would differ in every event. On other hand, any deterministic model like the one developed in the present work predicts a fixed pattern of the simulated quantities. Therefore, it was felt that some of the model parameters must be permitted to vary so that a range of results could be obtained rather than a single pattern of results. Incidentally, the model parameters like arc time constant, settling value of arc conductivity/gradient, bounds for channel conductivity, streamer gradient, radius of the core etc. are not precisely known for the natural lightning environment. Further, some of them are known to vary within an event. Considering these and that simplicity is very important in already complex model, the above-mentioned parameters are taken as tunable parameters (of course to be varied within the prescribed range) for deducing the return stroke currents with some desired characteristics. A study on the influence of these parameters is made and suggestions are provided. Simulations for the nominal range of stroke currents are made and results are presented. These simulations clearly show the role of cloud potential, which in turn dictates the length of final bridging streamer, on the return stroke currents. The spatio-temporal variation of the current, charge deposited by the return stroke and the channel conductivity are presented which, reveal the dynamic processes leading to the evolution of return stroke current. Subsequently, simulations for two cases of stroke to elevated strike object are attempted. The upward leader was modeled quite similar to the descending one. Many interesting findings are made. In summary, the present work has successfully developed a boundary-based time domain numerical electromagnetic model for the lightning return stroke, wherein, the initial charge deposited on the channel and the non-linearly rising channel conductance have been appropriately considered. Simulation using the model clearly depicts the dynamic evolution of the return stroke. The characteristics of the simulated return strokes are in good agreement with the field data. Some of the parameters of the model are suggested as tunable parameters, which permit simulation of strokes with different characteristics...|$|E
50|$|In {{the middle}} 20th century in North America when a call {{could not be}} completed, for example because the phone number was not assigned, had been disconnected, or was {{experiencing}} technical difficulties, the call was routed to an intercept operator who informed the caller. In the 1970s this service was converted to Automatic <b>Intercept</b> <b>Systems</b> which automatically choose and present an appropriate intercept message. Disconnected numbers are reassigned to new users after the rate of calls to them declines.|$|R
5000|$|In {{an attempt}} to confront the Invaders and defend the planet, an elite but highly secret {{organization}} of peace-keepers called the Alien Exterminating Global <b>Intercept</b> <b>System</b> (more commonly known as A.E.G.I.S.), was set up with special funding from the government. They rely {{on the ability of}} [...] "Gate Keepers", who have the power to open dimensional [...] "gates" [...] of a paranormal energy that give them their superpowers. These superpowers are the only weapons that have any effect on Invaders.|$|R
50|$|Fault {{injection}} {{can take}} many forms. In the testing of operating systems for example, fault injection is often performed by a driver (kernel-mode software) that <b>intercepts</b> <b>system</b> calls (calls into the kernel) and randomly returning a failure {{for some of the}} calls. This type of fault injection is useful for testing low level user mode software. For higher level software, various methods inject faults. In managed code, it is common to use instrumentation. Although fault injection can be undertaken by hand, a number of fault injection tools exist to automate the process of fault injection.|$|R
5000|$|Bruno Gruselle, in 2010, {{noted that}} French policy makers {{considered}} the 1972 Anti-Ballistic Missile (ABM) Treaty and {{the doctrine of}} Mutual assured destruction to be the cornerstones of strategic stability. Some French analysts, notably Camille Grand, view missile defense as jeopardizing both the doctrine and the Treaty, as well as risking a new arms race, which {{is reflected in the}} development of advanced missile defense counter measures and decoys as well as a higher number of and more maneuverable independently targetable reentry vehicles [...] - as well as the <b>intercept</b> <b>systems</b> designed to defeat them.|$|R
50|$|In {{addition}} to the missile tubes, the submarines are fitted with four 21-inch (533-mm) torpedo tubes and carry the Spearfish heavyweight torpedo allowing them to engage submerged or surface targets at ranges up to 65 km. Two SSE Mark 10 launchers are also fitted, allowing the boats to deploy Type 2066 and Type 2071 decoys, and a UAP Mark 3 electronic support measures (ESM) <b>intercept</b> <b>system</b> is carried. A 'Core H' reactor is fitted {{to each of the}} boats during their long-overhaul refit periods, ensuring that none of the submarines will ever need re-fuelling.|$|R
50|$|Little {{is known}} about the second <b>intercept</b> <b>system,</b> which had its main station at Ludwigsfelde with branch {{stations}} at Koenigsberg, Gleiwitz, Muenster and Husum. What is known is that Ludwigsfelde station was very well equipped with 80 receiving sets. It was completely destroyed by an air attack on 2 January 1944 and was not back in operation until the Autumn 1944. Colonel Kettler stated under TICOM interrogation that it kept up a monthly average of 7,280 press reports and 7340 phone transmissions during the period from January to June 1944.|$|R
40|$|In {{this paper}} we show how {{to extend the}} {{functionality}} of standard operating systems completely at the user level. Our approach works by <b>intercepting</b> selected <b>system</b> calls at the user level, using tracing facilities such as the /proc file system provided by many Unix operating systems. The behavior of some <b>intercepted</b> <b>system</b> calls is then modified to implement new functionality. This approach does not require any re-linking or recompilation of existing applications. In fact, the extensions can even be dynamically "installed" into already running processes. The extensions work completely at the user level and install without system administrator assistance. We used this approach to implement a global file system, called Ufo, which allows users to treat remote files exactly {{as if they were}} local. Currently, Ufo supports file access through the FTP and HTTP protocols and allows new protocols to be plugged in. While several other projects have implemented global file system abstractions, t [...] ...|$|R
40|$|In {{this article}} we show how to extend {{a wide range of}} {{functionality}} of standard operating systems completely at the user level. Our approach works by <b>intercepting</b> selected <b>system</b> calls at the user level, using tracing facilities such as the /proc file system provided by many Unix operating systems. The behavior of some <b>intercepted</b> <b>system</b> calls is then modified to implement new functionality. This approach does not require any relinking or recompilation of existing applications. In fact, the extensions can even be dynamically "installed" into already running processes. The extensions work completely at the user level and install without system administrator assistance. Individual users can choose what extensions to run, in effect creating a personalized operating system view for themselves. We used this approach to implement a global file system, called Ufo, which allows users to treat remote files exactly as if they were local. Currently, Ufo supports file access through the FTP and HTTP protocols and allows new protocols to be plugged in. While several other projects have implemented global file system abstractions, they all require either changes to the operating system or modifications to standard libraries. The article gives a detailed performance analysis of our approach to extending the OS and establishes that Ufo introduces acceptable overhead for common applications even though <b>intercepting</b> individual <b>system</b> calls incurs a high cost...|$|R
50|$|A {{major feature}} of the system was its ability to run {{programs}} that were designed to run on IBM's mainstream operating system (MVS). This was accomplished using an MVS emulator that <b>intercepted</b> <b>system</b> calls at the Supervisor Call instruction (SVC) level. Most third-party applications ran in this mode. Rather than write {{their own version of}} an application, the MUSIC/SP developers would usually start from the MVS version and rebuild it to run in MVS emulation mode. Since the MVS emulation was a very limited subset of the real thing, the applications generally ran more efficiently on MUSIC/SP.|$|R
50|$|By {{attaching}} {{to another}} process using the ptrace call, a tool has extensive {{control over the}} operation of its target. This includes manipulation of its file descriptors, memory, and registers. It can single-step through the target's code, can observe and <b>intercept</b> <b>system</b> calls and their results, and can manipulate the target's signal handlers and both receive and send signals on its behalf. The ability to write into the target's memory allows not only its data store to be changed, but also the application's own code segment, allowing the controller to install breakpoints and patch the running code of the target.|$|R
