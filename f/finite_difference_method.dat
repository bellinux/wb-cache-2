4289|10000|Public
5|$|An {{approximation}} to {{the curve}}-shortening flow can be computed numerically, by approximating the curve as a polygon {{and using the}} <b>finite</b> <b>difference</b> <b>method</b> to calculate the motion of each polygon vertex. Alternative methods include computing a convolution of polygon vertices and then resampling vertices on the resulting curve, or repeatedly applying a median filter to a digital image whose black and white pixels represent the {{inside and outside of}} the curve.|$|E
25|$|Common {{applications}} of the <b>finite</b> <b>difference</b> <b>method</b> are in computational science and engineering disciplines, such as thermal engineering, fluid mechanics, etc.|$|E
25|$|Partial {{differential}} equations are solved by first discretizing the equation, bringing {{it into a}} finite-dimensional subspace. This {{can be done by}} a finite element method, a <b>finite</b> <b>difference</b> <b>method,</b> or (particularly in engineering) a finite volume method. The theoretical justification of these methods often involves theorems from functional analysis. This reduces the problem to the solution of an algebraic equation.|$|E
30|$|In this process, the {{discrete}} Lagrangian function {{needs to}} be defined for the discrete variational principle. The Lagrangian function can be discretized by using <b>finite</b> <b>difference</b> <b>methods.</b> In our paper, we use the nonstandard <b>finite</b> <b>difference</b> <b>methods</b> rather than the classical <b>finite</b> <b>difference</b> <b>methods</b> to approximate the Lagrangian function. The nonstandard <b>finite</b> <b>difference</b> <b>methods</b> developed by Mickens [24 – 29] have better performances than the classical ones in terms of numerical stability, {{and they can be}} constructed flexibly to preserve some important properties and conservation laws of the original models. The rules of designing nonstandard <b>finite</b> <b>difference</b> schemes are listed in Section  2.|$|R
5000|$|<b>Finite</b> <b>difference</b> <b>methods</b> for {{option pricing}} are {{numerical}} methods used in mathematical finance for the valuation of options. [...] <b>Finite</b> <b>difference</b> <b>methods</b> were first applied to option pricing by Eduardo Schwartz in 1977.|$|R
40|$|Finite element and <b>finite</b> <b>difference</b> <b>methods</b> are {{examined}} {{in order to}} bring out their relationship. It is shown that both methods use two types of discrete representations of continuous functions. They differ in that <b>finite</b> <b>difference</b> <b>methods</b> emphasize the discretization of independent variable, while finite element methods emphasize the discretization of dependent variable (referred to as functional approximations). An important point is that finite element methods use global piecewise functional approximations, while <b>finite</b> <b>difference</b> <b>methods</b> normally use local functional approximations. A general conclusion is that finite element methods are best designed to handle complex boundaries, while <b>finite</b> <b>difference</b> <b>methods</b> are superior for complex equations. It is also shown that <b>finite</b> volume <b>difference</b> <b>methods</b> possess many of the advantages attributed to finite element methods...|$|R
25|$|The {{equations}} used {{to model}} the option are often expressed as partial differential equations (see for example Black–Scholes equation). Once expressed in this form, a finite difference model can be derived, and the valuation obtained. A number of implementations of finite difference methods exist for option valuation, including: explicit finite difference, implicit finite difference and the Crank-Nicholson method. A trinomial tree option pricing model can {{be shown to be}} a simplified application of the explicit <b>finite</b> <b>difference</b> <b>method.</b> Although the finite difference approach is mathematically sophisticated, it is particularly useful where changes are assumed over time in model inputs– for example dividend yield, risk free rate, or volatility, or some combination of these– that are not tractable in closed form.|$|E
25|$|Currently {{there are}} two Poisson solvers {{implemented}} in BioMOCA based on the <b>finite</b> <b>difference</b> <b>method.</b> One uses the pre-conditioned Conjugate Gradient scheme (pCG) and is used by default. The later is borrowed from an APBS solver, which uses a V-multi-grid scheme. Other than the numerical approach to solve the Poisson equation, {{the main difference between}} the two solvers is on how they address the permittivity in the system. In the first solver, a dielectric value is assigned to each cell in the grid, while in the APBS solver the dielectric coefficients are defined on the grid nodes. As discussed earlier box integration method is used in the pCG solver, which allows us to treat the Poisson equation in the most accurate way. Even though a full multigrid solver based on box-integration method has been under development, there is a neat way to reuse the already exiting code and treat the ion channel systems.|$|E
25|$|Bode {{designed}} the velocity computing networks of Director T-15 by applying a <b>finite</b> <b>difference</b> <b>method</b> instead of differentiation. Under this scheme the target positional coordinates were {{stored in a}} mechanical memory, usually a potentiometer or a cam. The velocity was then calculated by taking {{the difference between the}} coordinates of the current position and the coordinates of the previous reading that were stored in memory and dividing by the difference of their respective times. This method was more robust than the differentiation method and it also smoothed out signal disturbances since the finite time-step size was less sensitive to random signal impulses (spikes). It also introduced for the first time an algorithm better suited to modern digital signal processing theory rather than to the classical Calculus-based analog signal processing approach that was followed then. Not coincidentally it {{is an integral part of}} modern digital control theory and digital signal processing and it is known as the backward difference algorithm. In addition the Director T-15 operated only in rectangular coordinates thus eliminating coordinate transformation-based errors. These design innovations paid performance dividends and the Director T-15 was twice as accurate as its predecessor and it converged on a target twice as fast.|$|E
40|$|Parallel flow: {{experimental}} work, mathematical study (through <b>finite</b> <b>differences</b> <b>method</b> {{compare with}} <b>finite</b> elements method) (software: Matlab) and simulation of this behavior (software: Comsol 3. 4) - Velocity profile along z-direction in a rectangular duct: experimental work, mathematical study (through <b>finite</b> <b>differences</b> <b>method</b> compare with <b>finite</b> elements method) (software: Matlab) and simulation of this behavior (software: Comsol 3. 4) - Slug flow: experimental work, mathematical study (through <b>finite</b> <b>differences</b> <b>method</b> compare with <b>finite</b> elements method) (software: Matlab) and simulation of this behavior (software: Comsol 3. 4) - Production of microchannels, different surface modifications in microchannels (hydrophilic, hydrophobic) - Manipulation of different products inside the channels for one efficient method extraction due to different chemical nature: Diffusion and mass transfer: experimental work, mathematical study (through <b>finite</b> <b>differences</b> <b>method</b> compare with <b>finite</b> elements method) (software: Matlab) and simulation of this behavior (software: Comsol 3. 4...|$|R
40|$|This paper {{develops}} a new framework for designing and analyzing convergent <b>finite</b> <b>difference</b> <b>methods</b> for approximating both classical and viscosity solutions of second order fully nonlinear partial differential equations (PDEs) in 1 -D. The {{goal of the}} paper is to extend the successful framework of monotone, consistent, and stable <b>finite</b> <b>difference</b> <b>methods</b> for first order fully nonlinear Hamilton-Jacobi equations to second order fully nonlinear PDEs such as Monge-Ampère and Bellman type equations. New concepts of consistency, generalized monotonicity, and stability are introduced; among them, the generalized monotonicity and consistency, which are easier to verify in practice, are natural extensions of the corresponding notions of <b>finite</b> <b>difference</b> <b>methods</b> for first order fully nonlinear Hamilton-Jacobi equations. The main component of the proposed framework {{is the concept of}} "numerical operator", and the main idea used to design consistent, monotone and stable <b>finite</b> <b>difference</b> <b>methods</b> is the concept of "numerical moment". These two new concepts play the same roles as the "numerical Hamiltonian" and the "numerical viscosity" play in the <b>finite</b> <b>difference</b> framework for first order fully nonlinear Hamilton-Jacobi equations. In the paper, two classes of consistent and monotone <b>finite</b> <b>difference</b> <b>methods</b> are proposed for second order fully nonlinear PDEs. The first class contains Lax-Friedrichs-like methods which also are proved to be stable and the second class contains Godunov-like methods. Numerical results are also presented to gauge the performance of the proposed <b>finite</b> <b>difference</b> <b>methods</b> and to validate the theoretical results of the paper. Comment: 23 pages, 8 figues, 11 table...|$|R
40|$|This is an Accepted Manuscript of {{an article}} {{published}} by Taylor & Francis in International Journal of Computer Mathematics on 09 / 10 / 2017, available online: [URL] consider <b>finite</b> <b>difference</b> <b>methods</b> for solving nonlinear fractional differential equations in the Caputo fractional derivative sense with non-uniform meshes. Under {{the assumption that the}} Caputo derivative of the solution of the fractional differential equation is suitably smooth, Li et al. <b>Finite</b> <b>difference</b> <b>methods</b> with non-uniform meshes for nonlinear fractional differential equations, Journal of Computational Physics, 316 (2016), 614 - 631, obtained the error estimates of <b>finite</b> <b>difference</b> <b>methods</b> with non-uniform meshes. However the Caputo derivative of the solution of the fractional differential equation in general has a weak singularity near the initial time. In this paper, we obtain the error estimates of <b>finite</b> <b>difference</b> <b>methods</b> with non-uniform meshes when the Caputo fractional derivative of the solution of the fractional differential equation has lower smoothness. The convergence result shows clearly how the regularity of the Caputo fractional derivative of the solution affect the order of convergence of the <b>finite</b> <b>difference</b> <b>methods.</b> Numerical results are presented that confirm the sharpness of the error analysis...|$|R
500|$|In front {{tracking}} {{methods for}} curve shortening, the curve undergoing the evolution is discretized as a polygon. The <b>finite</b> <b>difference</b> <b>method</b> {{is used to}} derive formulas for the approximate normal vector and curvature at each vertex of the polygon, and these values are used {{to determine how to}} move each vertex in each time step. Although the curve-shortening flow is defined by the motion of a curve perpendicularly to itself, some parameterizations of the curve-shortening flow may allow the vertices that approximate the curve to move non-perpendicularly. In effect, this allows the vertices to move along the curve, as the curve evolves. Choosing a careful reparameterization can help redistribute the vertices more evenly along the curve in situations where perpendicular motion would cause them to bunch up. [...] write that these methods are fast and accurate but that it is much more complicated to extend them to versions of the curve-shortening flow that apply to more complicated inputs than simple closed curves, where it is necessary to deal with singularities and changes of topology.|$|E
2500|$|<b>Finite</b> <b>difference</b> <b>method</b> [...] used {{to solve}} partial {{differential}} equations; ...|$|E
2500|$|Analytical or closed-form {{solutions}} to the differential equations can be obtained when the geometry, [...] constitutive relations, and boundary conditions are simple enough. Otherwise one must generally resort to numerical approximations such as the finite element method, the <b>finite</b> <b>difference</b> <b>method,</b> and the boundary element method.|$|E
40|$|Disclosed are {{exemplary}} <b>finite</b> <b>difference</b> <b>methods</b> for electromagnetically simulating planar multilayer structures. The exemplary <b>finite</b> <b>difference</b> <b>methods</b> simulate multilayer planes {{by combining}} the admittance matrices of single plane pairs and equivalent circuit models for such single plane pairs based on multilayer <b>finite</b> <b>difference</b> approximation. Based on the methods, coupling between different layers through electrically large apertures can be modeled very accurately and efficiently. Georgia Tech Research Corporatio...|$|R
40|$|Abstract. This paper {{develops}} a new framework for designing and analyzing convergent <b>finite</b> <b>difference</b> <b>methods</b> for approximating both classical and viscosity solutions of second order fully nonlinear partial differential equations (PDEs) in 1 -D. The {{goal of the}} paper is to extend the successful framework of monotone, consistent, and stable <b>finite</b> <b>difference</b> <b>methods</b> for first order fully nonlinear Hamilton-Jacobi equations to second order fully nonlinear PDEs such as Monge-Ampère and Bellman type equations. New concepts of consistency, generalized monotonicity, and stability are introduced; among them, the generalized monotonicity and consistency, which are easier to verify in practice, are natural extensions of the corresponding notions of <b>finite</b> <b>difference</b> <b>methods</b> for first order fully nonlinear Hamilton-Jacobi equations. The main component of the proposed framework {{is the concept of}} a “numerical operator”, and the main idea used to design consistent, generalized monotone and stable <b>finite</b> <b>difference</b> <b>methods</b> is the concept of a “numerical moment”. These two new concepts play the same roles the “numerical Hamiltonian ” and the “numerical viscosity ” play in the <b>finite</b> <b>difference</b> framework for first order fully nonlinear Hamilton-Jacobi equations. In the paper, two classes of consistent and monotone <b>finite</b> <b>difference</b> <b>methods</b> are proposed for second order fully nonlinear PDEs. The first class contains Lax-Friedrichs-like methods which also are proved to b...|$|R
40|$|In this talk, I’d like {{to present}} an {{overview}} of our recent works on the <b>finite</b> <b>difference</b> <b>methods</b> for the time fractional differential equation. Outline Approximations to the Caputo’s fractional derivatives <b>Finite</b> <b>difference</b> <b>methods</b> for the time fractional sub-diffusion equation Dirichlet boundary conditions Neumann boundary condition Space unbounded domain problem <b>Finite</b> <b>difference</b> <b>methods</b> for the time fractional diffusion-wave equation Dirichlet boundary conditions Neumann boundary conditions <b>Finite</b> <b>difference</b> <b>methods</b> for the multi-term time fractional diffusion-wave equation ADI methods for the multi-dimensional time fractional equations Fractional sub-diffusion equation Fractional diffusion-wave equation 1. 1 Definition of the Caputo fractional derivative For a given positive real number γ, n − 1 < γ 6 n, the Caputo fractional derivative with the order of γ, is defined by C 0 Dγt f (t) = 1 Γ(n − γ) ∫ t 0 f (n) (ξ) (t − ξ) γ−n+ 1 dξ. I Case γ ∈ (0, 1) : C 0 Dγt f (t) ...|$|R
2500|$|The <b>finite</b> <b>difference</b> <b>method</b> (FDM) has {{historical}} {{importance and}} is simple to program. [...] It is currently only used in few specialized codes, which handle complex geometry with high accuracy and efficiency by using embedded boundaries or overlapping grids (with the solution interpolated across each grid).|$|E
2500|$|In {{numerical}} analysis, the Alternating Direction Implicit (ADI) {{method is}} a <b>finite</b> <b>difference</b> <b>method</b> for solving parabolic, hyperbolic and elliptic partial differential equations. It is most notably used {{to solve the}} problem of heat conduction or solving the diffusion equation in two or more dimensions. [...] It is an example of an operator splitting method.|$|E
2500|$|Other {{techniques}} such as <b>finite</b> <b>difference</b> <b>method</b> (FDM) and finite-volume method (FVM) are employed to solve problems relating heat and mass transfer, fluid flows, fluid surface interaction, etc. In recent years meshfree methods like the smoothed particle hydrodynamics are gaining popularity in case of solving problems involving complex geometries, free surfaces, moving boundaries, and adaptive refinement.|$|E
40|$|Abstract. We prove an optimal-order error {{estimate}} in a degenerate-diffusion weighted energy {{norm for}} implicit Euler and Crank-Nicolson <b>finite</b> <b>difference</b> <b>methods</b> to two-dimensional time-dependent advection-diffusion equations with degenerate diffusion. In the estimate, the generic constants depend only on certain Sobolev {{norms of the}} true solution {{but not on the}} lower bound of the diffusion. This estimate, combined with a known stability estimate of the true solution of the governing partial differential equations, yields an optimal-order estimate of the <b>finite</b> <b>difference</b> <b>methods,</b> in which the generic constants depend only on the Sobolev norms of the initial and right-hand side data. Key Words. convergence analysis, degenerate advection-diffusion equations, <b>finite</b> <b>difference</b> <b>methods,</b> optimal-order error estimate...|$|R
30|$|These {{advantages}} of nonstandard <b>finite</b> <b>difference</b> <b>methods</b> {{have been shown}} in many numerical applications. González-Parra et al. [33, 34] developed some nonstandard <b>finite</b> <b>difference</b> <b>methods</b> to preserve the positivity condition and population conservation law of biological models. Jordan [35] and Malek [36] constructed nonstandard <b>finite</b> <b>difference</b> schemes for heat transfer problems. For symplectic systems, Mickens [28] derived a nonstandard <b>finite</b> <b>difference</b> variational integrator for symplectic ODEs. Recently, Ma et al. [37] developed a nonstandard <b>finite</b> <b>difference</b> scheme for stochastic differential equations with additive noises.|$|R
5000|$|<b>Finite</b> <b>Difference</b> <b>Methods</b> for Ordinary and Partial Differential Equations, Steady State and Time Dependent Problems, SIAM (2007).|$|R
2500|$|There are {{two broad}} {{categories}} of numerical methods: gridded or discretized methods and non-gridded or mesh-free methods. In the common <b>finite</b> <b>difference</b> <b>method</b> and {{finite element method}} (FEM) the domain is completely gridded ("cut" [...] into a grid or mesh of small elements). The analytic element method (AEM) and the boundary integral equation method (BIEM — sometimes also called BEM, or Boundary Element Method) are only discretized at boundaries or along flow elements (line sinks, area sources, etc.), {{the majority of the}} domain is mesh-free.|$|E
2500|$|... where Px, Py, and Pz are the {{components}} of the polarization vector in the x, y, and z directions respectively, and the coefficients, [...] must be consistent with the crystal symmetry. [...] To investigate domain formation and other phenomena in ferroelectrics, these equations are often used {{in the context of a}} phase field model. [...] Typically, this involves adding a gradient term, an electrostatic term and an elastic term to the free energy. [...] The equations are then discretized onto a grid using the <b>finite</b> <b>difference</b> <b>method</b> and solved subject to the constraints of Gauss's law and Linear elasticity.|$|E
2500|$|The forward finite {{difference}} approximation is unconditionally stable, but {{leads to}} an implicit set of equations (that must be solved using matrix methods, e.g. LU or Cholesky decomposition). The similar backwards difference is only conditionally stable, but it is explicit {{and can be used}} to [...] "march" [...] forward in the time direction, solving one grid node at a time (or possibly in parallel, since one node depends only on its immediate neighbors). Rather than the <b>finite</b> <b>difference</b> <b>method,</b> sometimes the Galerkin FEM approximation is used in space (this is different from the type of FEM often used in structural engineering) with finite differences still used in time.|$|E
5000|$|<b>Finite</b> <b>Difference</b> <b>Methods</b> for Partial Differential Equations (with Wolfgang Wasow), John Wiley, New York, 1966, 444 pp.|$|R
50|$|A regular grid is a {{tessellation}} of n-dimensional Euclidean {{space by}} congruent parallelotopes (e.g. bricks). Grids {{of this type}} appear on graph paper and {{may be used in}} finite element analysis as well as finite volume <b>methods</b> and <b>finite</b> <b>difference</b> <b>methods.</b> Since the derivatives of field variables can be conveniently expressed as <b>finite</b> <b>differences,</b> structured grids mainly appear in <b>finite</b> <b>difference</b> <b>methods.</b> Unstructured grids offer more flexibility than structured grids and hence are very useful in finite element and finite volume methods.|$|R
40|$|A new {{technique}} to prove convergence of <b>finite</b> <b>difference</b> <b>methods</b> applied to nonlinear PDEs arising in {{computational fluid dynamics}} is presented. The underlying systems may be hyperbolic, parabolic or of mixed type like the Navier-Stokes equations. Implicit <b>finite</b> <b>difference</b> <b>methods</b> are analyzed. The essential idea leading to success is {{the introduction of a}} pilot function, that is highly attractive to the numerical approximation and converges itself to the solution of the underlying system...|$|R
2500|$|The {{finite volume}} method {{is a method}} for {{representing}} and evaluating partial differential equations as algebraic equations. Similar to the <b>finite</b> <b>difference</b> <b>method,</b> values are calculated at discrete places on a meshed geometry. [...] "Finite volume" [...] refers to the small volume surrounding each node point on a mesh. In the finite volume method, volume integrals in a partial differential equation that contain a divergence term are converted to surface integrals, using the divergence theorem. These terms are then evaluated as fluxes at the surfaces of each finite volume. Because the flux entering a given volume is identical to that leaving the adjacent volume, these methods are conservative. Another advantage of the finite volume method {{is that it is}} easily formulated to allow for unstructured meshes. The method is used in many computational fluid dynamics packages.|$|E
5000|$|... #Subtitle level 3: Mimetic <b>finite</b> <b>difference</b> <b>method</b> and nodal mimetic <b>finite</b> <b>difference</b> <b>method</b> ...|$|E
5000|$|... #Subtitle level 2: Comparison to the <b>finite</b> <b>difference</b> <b>method</b> ...|$|E
30|$|Uniform <b>finite</b> <b>difference</b> <b>methods</b> are {{constructed}} via nonstandard <b>finite</b> <b>difference</b> <b>methods</b> for the numerical solution of singularly perturbed quasilinear initial value problem for delay differential equations. A numerical method is constructed for this problem which involves the appropriate Bakhvalov meshes on each time subinterval. The method {{is shown to}} be uniformly convergent {{with respect to the}} perturbation parameter. A numerical example is solved using the presented method, and the computed result is compared with exact solution of the problem.|$|R
50|$|MATHEMATICS: The {{areas of}} {{mathematics}} most related to computational mechanics are partial differential equations, linear algebra and numerical analysis. The most popular numerical methods used are the <b>finite</b> element, <b>finite</b> <b>difference,</b> and boundary element methods {{in order of}} dominance. In solid mechanics finite element methods are far more prevalent than <b>finite</b> <b>difference</b> <b>methods,</b> whereas in fluid mechanics, thermodynamics, and electromagnetism, <b>finite</b> <b>difference</b> <b>methods</b> are almost equally applicable. The boundary element technique is in general less popular, but has a niche in certain areas including acoustics engineering, for example.|$|R
30|$|In this section, {{we first}} {{introduce}} {{the concepts of}} discrete variational integrators, the corresponding multisymplectic structures, and the rules of nonstandard <b>finite</b> <b>difference</b> <b>methods.</b>|$|R
