10000|10000|Public
5|$|As {{described}} previously, {{the molecules}} that underlie LTP {{can be classified}} as mediators or modulators. A mediator of LTP is a molecule, such as the NMDA receptor or calcium, whose presence and activity is necessary <b>for</b> <b>generating</b> LTP under nearly all conditions. By contrast, a modulator is a molecule that can alter LTP but is not essential for its generation or expression.|$|E
5|$|NIRA, as {{implemented}} by the NRA, became notorious <b>for</b> <b>generating</b> large numbers of regulations. The agency approved 557 basic and 189 supplemental industry codes in two years. Between 4,000 and 5,000 business practices were prohibited, some 3,000 administrative orders running to over 10,000 pages promulgated, and thousands of opinions and guides from national, regional, and local code boards interpreted and enforced the Act.|$|E
5|$|Perl's text-handling {{capabilities}} {{can be used}} <b>for</b> <b>generating</b> SQL queries; arrays, hashes, {{and automatic}} memory management {{make it easy to}} collect and process the returned data. For example, in Tim Bunce's Perl DBI application programming interface (API), the arguments to the API can be the text of SQL queries; thus it is possible to program in multiple languages at the same time (e.g., <b>for</b> <b>generating</b> a Web page using HTML, JavaScript, and SQL in a here document). The use of Perl variable interpolation to programmatically customize each of the SQL queries, and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting data sets from each SQL query, allows a high-level mechanism for handling large amounts of data for post-processing by a Perl subprogram.|$|E
30|$|Step 5 Find {{power losses}} <b>for</b> <b>generated</b> population.|$|R
5000|$|Automated code {{simplification}} <b>for</b> <b>generated</b> models, <b>for</b> example.|$|R
5000|$|Support <b>for</b> <b>generated</b> models (just switch two [...]genmodel properties) ...|$|R
5|$|Adiantum viridimontanum largely reproduces asexually by {{branching}} {{rather than}} sexually through spores. While wind-blown spores {{can result in}} sexual reproduction for the species, most spores probably fall within a relatively short radius of the plant. In addition, reproduction through spore dispersal requires the spore to land in suitable conditions <b>for</b> <b>generating</b> a gametophyte, typically in bright sunlight on thin serpentine soils. These requirements allow A.viridimontanum to colonize recently disturbed sites on ultramafic outcrops, where bedrock has been exposed and competing plants have been removed. The populations appear stable, with the long life of individuals compensating for low recruitment rates.|$|E
5|$|Beryllium is non-magnetic. Therefore, tools {{fabricated}} out of beryllium-based {{materials are}} used by naval or military explosive ordnance disposal teams for work on or near naval mines, since these mines commonly have magnetic fuzes. They are also found in maintenance and construction materials near magnetic resonance imaging (MRI) machines {{because of the high}} magnetic fields generated. In the fields of radio communications and powerful (usually military) radars, hand tools made of beryllium are used to tune the highly magnetic klystrons, magnetrons, traveling wave tubes, etc., that are used <b>for</b> <b>generating</b> high levels of microwave power in the transmitters.|$|E
5|$|Doris Schattschneider {{identifies}} 11 {{strands of}} mathematical and scientific research anticipated or directly inspired by Escher. These are {{the classification of}} regular tilings using the edge relationships of tiles: two-color and two-motif tilings (counterchange symmetry or antisymmetry); color symmetry (in crystallography); metamorphosis or topological change; covering surfaces with symmetric patterns; Escher's algorithm (<b>for</b> <b>generating</b> patterns using decorated squares); creating tile shapes; local versus global definitions of regularity; symmetry of a tiling induced by the symmetry of a tile; orderliness not induced by symmetry groups; the filling of the central void in Escher's lithograph Print Gallery by H. Lenstra and B. de Smit.|$|E
30|$|Determine {{active power}} loss <b>for</b> <b>generated</b> {{population}} by performing load flow.|$|R
5000|$|... genisoimage (short <b>for</b> <b>generate</b> ISO image), {{which was}} forked from the mkisofs program in cdrtools.|$|R
30|$|Next we {{formulate}} {{the corresponding}} {{extension of the}} Pogorelov interior estimate [2] <b>for</b> <b>generated</b> prescribed Jacobian equations.|$|R
5|$|In the 1920s, Michael Heidelberger and Oswald Avery {{observed}} that antigens could be precipitated by antibodies {{and went on}} to show that antibodies are made of protein. The biochemical properties of antigen-antibody-binding interactions were examined in more detail in the late 1930s by John Marrack. The next major advance was in the 1940s, when Linus Pauling confirmed the lock-and-key theory proposed by Ehrlich by showing that the interactions between antibodies and antigens depend more on their shape than their chemical composition. In 1948, Astrid Fagreaus discovered that B cells, in the form of plasma cells, were responsible <b>for</b> <b>generating</b> antibodies.|$|E
5|$|On September 10, 2013, a Deep Impact mission {{status report}} {{explained}} that mission controllers believe the computers on the spacecraft are continuously rebooting themselves {{and so are}} unable to issue any commands to the vehicle's thrusters. As {{a result of this}} problem, communication with the spacecraft was explained to be more difficult, as the orientation of the vehicle's antennas is unknown. Additionally, the solar panels on the vehicle may no longer be positioned correctly <b>for</b> <b>generating</b> power.|$|E
5|$|The Solar updraft tower (SUT) is a renewable-energy {{power plant}} <b>for</b> <b>generating</b> {{electricity}} from low temperature solar heat. Sunshine heats the air beneath {{a very wide}} greenhouse-like roofed collector structure surrounding the central base of a very tall chimney tower. The resulting convection causes a hot air updraft in the tower by the chimney effect. This airflow drives wind turbines placed in the chimney updraft or around the chimney base to produce electricity. Plans for scaled-up versions of demonstration models will allow significant power generation, and may allow development of other applications, such as water extraction or distillation, and agriculture or horticulture.|$|E
30|$|Using the estimates, (3.12) and (3.13), we {{can thus}} {{conclude}} from Theorem  1.1, the following global second derivative estimate <b>for</b> <b>generated</b> prescribed Jacobian equations.|$|R
5000|$|... rmic RmiServerNote {{that since}} version 5.0 of J2SE support <b>for</b> {{dynamically}} <b>generated</b> stub files has been added, and rmic is only provided for backwards compatibility with earlier runtimes, or for programs that don't provide an explicit port number (or zero) when exporting remote objects, which is required <b>for</b> <b>generated</b> stubs to be possible, {{as described in}} the Javadoc for UnicastRemoteObject. See the comment in the constructor above.|$|R
40|$|When {{people are}} {{actively}} involved in generating to-be-remembered information (e. g., solving the fragment fr_g), they tend to remember that information better than material they simply read (e. g., frog). Given that the strategies involved in generation tasks are distinct from those used in standard memory tasks, {{little is known about}} how providing cues (i. e., part of the set of to-be-remembered information) might influence memory <b>for</b> <b>generated</b> material. Two experiments explored the joint influence of part-set cuing and generation on memory performance. Preliminary evidence indicated that part-set cuing inhibition might be stronger <b>for</b> <b>generated</b> than read items...|$|R
5|$|A {{catalytic}} triad {{refers to}} the three amino acid residues that function together at {{the centre of the}} active site of some hydrolase and transferase enzymes (e.g. proteases, amidases, esterases, acylases, lipases and β-lactamases). An Acid-Base-Nucleophile triad is a common motif <b>for</b> <b>generating</b> a nucleophilic residue for covalent catalysis. The residues form a charge-relay network to polarise and activate the nucleophile, which attacks the substrate, forming a covalent intermediate which is then hydrolysed to regenerate free enzyme and release the product. The nucleophile is most commonly a serine or cysteine amino acid, but occasionally threonine. Because enzymes fold into complex three-dimensional structures, the residues of a catalytic triad can be far from each other along the amino-acid sequence (primary structure), however, they are brought close together in the final fold.|$|E
5|$|As {{a highly}} popular video game series {{with a large}} and active fan base, the Halo trilogy {{has given rise to}} an array of video {{productions}} in an emerging entertainment medium, machinima. Virtually all machinima footage based around the Halo games is taken from the multiplayer modes of the main trilogy games. Most productions are set outside Halo canon, while others are based on fan fiction closely relating to the official story. Halo 3 includes a saved film function that allows camera angles not possible in previous games, and other features that simplify production. The game {{has become one of the}} most popular tools <b>for</b> <b>generating</b> machinima, and Microsoft updated its user license agreement to allow noncommercial distribution of such films.|$|E
5|$|The {{emblem of}} Central Java {{province}} and Magelang Regency bears {{the image of}} Borobudur. It has become the symbol of Central Java, and also Indonesia on a wider scale. Borobudur has become the name of several establishments, such as Borobudur University, Borobudur Hotel in Central Jakarta, and several Indonesian restaurants abroad. Borobudur has been featured in Rupiah banknote, stamps, numbers of books, publications, documentaries and Indonesian tourism promotion materials. The monument {{has become one of}} the main tourism attraction in Indonesia, vital <b>for</b> <b>generating</b> local economy in the region surrounding the temple. The tourism sector of the city of Yogyakarta for example, flourish partly because of its proximity to Borobudur and Prambanan temples.|$|E
40|$|Abstract: Code {{generation}} from {{models is}} a core activity in model-driven development (MDD). For complex systems {{it is usually}} impossible to generate the entire software system from models alone. Thus, MDD requires mechanisms <b>for</b> integrating <b>generated</b> and handwritten code. Applying such mechanisms without considering their effects can cause issues in projects with many model and code artifacts, where a sound integration <b>for</b> <b>generated</b> and handwritten code is necessary. We {{provide an overview of}} mechanisms <b>for</b> integrating <b>generated</b> and handwritten code for object-oriented languages. In addition to that, we define and apply criteria to compare these mechanisms. The results are intended to help MDD tool developers in choosing an appropriate integration mechanism. ...|$|R
50|$|In view of {{the well}} known and {{exceedingly}} useful structure theorem <b>for</b> finitely <b>generated</b> modules over a principal ideal domain (PID), it is natural {{to ask for a}} corresponding theory <b>for</b> finitely <b>generated</b> modules over a Dedekind domain.|$|R
40|$|AbstractThe present work {{examines}} {{the relationship between}} random-dot stereograms (via the disparity range parameter) and color-vision mechanisms (via the luminance channel and red-green and tritan directions at isoluminance). The results clearly indicate that the variations in the stereograms along red-green confusion lines contribute to stereopsis. Stereoscopic perception depends on spatial information <b>for</b> stereograms <b>generated</b> with variations along tritan confusion lines. For observers who perceive stereopsis via tritan directions, the results show a gradation in the disparity range, with the disparity range <b>for</b> stereograms <b>generated</b> by luminance variations being greater than <b>for</b> stereograms <b>generated</b> in red-green directions; the latter range is, in turn, greater than <b>for</b> stereograms <b>generated</b> along tritan directions. © 1997 Elsevier Science Ltd. All rights reserve...|$|R
25|$|In 1840, Wheatstone {{brought out}} his magneto-electric machine <b>for</b> <b>generating</b> {{continuous}} currents.|$|E
25|$|A {{subset of}} the PostScript page {{description}} programming language, <b>for</b> <b>generating</b> the layout and graphics.|$|E
25|$|Additionally, Hood {{was among}} the first to study, at the gene level, the MHC (major {{histocompatibility}} complex) gene family and the T-cell receptor gene families as well as being among first to demonstrate that alternative RNA splicing was a fundamental mechanism <b>for</b> <b>generating</b> alternative forms of antibodies. He showed that RNA splicing is the mechanism <b>for</b> <b>generating</b> the membrane bound and the secreted forms of antibodies.|$|E
40|$|Abstract: In model-driven {{development}} (MDD) software emerges by systematically transforming abstract {{models to}} concrete source code. Ideally, performing those transformations is {{to a large}} extent the task of code generators. One approach for developing a new code generator is to write a reference implementation and separate it into handwritten and generatable code. Typically, the generator developer manually performs this separation — a process that is often time-consuming, labor-intensive, difficult to maintain and may produce more code than necessary. Software categories provide a way for separating code into designated parts with defined dependencies, for example, “Business Logic ” code that may not directly use “Technical ” code. This paper presents an approach that uses the concept of software categories to semi-automatically determine candidates <b>for</b> <b>generated</b> code. The main idea is to iteratively derive the categories for uncategorized code from the dependencies of categorized code. The candidates <b>for</b> <b>generated</b> or handwritten code finally are code parts belonging to specific (previously defined) categories. This approach helps the generator developer in finding candidates <b>for</b> <b>generated</b> code more easily and systematically than searching by hand and is a step towards tool-supported development of generative software. ...|$|R
40|$|In model-driven {{development}} (MDD) software emerges by systematically transforming abstract {{models to}} concrete source code. Ideally, performing those transformations is {{to a large}} extent the task of code generators. One approach for developing a new code generator is to write a reference implementation and separate it into handwritten and generatable code. Typically, the generator developer manually performs this separation a process that is often time-consuming, labor-intensive, difficult to maintain and may produce more code than necessary. Software categories provide a way for separating code into designated parts with defined dependencies, for example, "Business Logic" code that may not directly use "Technical" code. This paper presents an approach that uses the concept of software categories to semi-automatically determine candidates <b>for</b> <b>generated</b> code. The main idea is to iteratively derive the categories for uncategorized code from the dependencies of categorized code. The candidates <b>for</b> <b>generated</b> or handwritten code finally are code parts belonging to specific (previously defined) categories. This approach helps the generator developer in finding candidates <b>for</b> <b>generated</b> code more easily and systematically than searching by hand and is a step towards tool-supported development of generative software. Comment: 6 pages, 7 figures, Proceedings of the 3 rd International Conference on Model-Driven Engineering and Software Development, pp. 498 - 503, Angers, France, SciTePress, 201...|$|R
50|$|Category 2 {{would include}} those live signals {{obtained}} using multiple microphones {{to capture the}} acoustic properties of a room.The signals oriented <b>for</b> <b>generate</b> acoustic fields, obtained by a linear grouping of microphones, belong to this group. Such signalshave a very high cross correlation between all channels.|$|R
25|$|Many {{formulas}} <b>for</b> <b>generating</b> triples {{with particular}} properties {{have been developed}} {{since the time of}} Euclid.|$|E
25|$|In 1980, Loren Carpenter gave a {{presentation}} at the SIGGRAPH where he introduced his software <b>for</b> <b>generating</b> and rendering fractally generated landscapes.|$|E
25|$|As a {{sustainable}} energy source, wood fuel also remains viable <b>for</b> <b>generating</b> electricity {{in areas with}} easy access to forest products and by-products.|$|E
40|$|Abstract. We {{describe}} algorithms {{for testing}} polycyclicity and nilpotency <b>for</b> finitely <b>generated</b> subgroups of GL(d, Q) and thus {{we show that}} these properties are decidable. Variations of our algorithm {{can be used for}} testing virtual polycyclicity and virtual nilpotency <b>for</b> finitely <b>generated</b> subgroups of GL(d, Q). 1...|$|R
50|$|The {{feed-in tariff}} {{provides}} bonuses <b>for</b> electricity <b>generated</b> by cogeneration of 160%, {{taking into account}} thermal energy use of 20% of all primary energy used. The bonuses <b>for</b> solar <b>generated</b> electricity and cogeneration are cumulative. Remuneration of the generated electricity is guaranteed over the whole plant lifetime.|$|R
5000|$|... the Schwinger-Dyson {{equation}} <b>for</b> the <b>generating</b> functional is ...|$|R
