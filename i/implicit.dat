10000|28|Public
5|$|C# is more type safe than C++. The only <b>implicit</b> {{conversions}} {{by default}} {{are those that}} are considered safe, such as widening of integers. This is enforced at compile-time, during JIT, and, in some cases, at runtime. No <b>implicit</b> conversions occur between Booleans and integers, nor between enumeration members and integers (except for literal 0, which can be implicitly converted to any enumerated type). Any user-defined conversion must be explicitly marked as explicit or <b>implicit,</b> unlike C++ copy constructors and conversion operators, which are both <b>implicit</b> by default.|$|E
5|$|In {{psychological}} assessments, the birthday-number {{effect has}} been exploited to measure <b>implicit</b> self-esteem. The Number Preference Task is often used {{in combination with the}} more popular Letter Preference Task, sometimes jointly called the Initials and Birthday Preference Task (IBPT). The most popular method to measure <b>implicit</b> self-esteem is the <b>Implicit</b> Association Test.|$|E
5|$|Mainstream {{parallel}} programming languages remain either explicitly parallel or (at best) partially <b>implicit,</b> {{in which a}} programmer gives the compiler directives for parallelization. A few fully <b>implicit</b> {{parallel programming}} languages existâ€”SISAL, Parallel Haskell, SequenceL, System C (for FPGAs), Mitrion-C, VHDL, and Verilog.|$|E
5|$|Boxing is the {{operation}} of converting a value-type object into a value of a corresponding reference type. Boxing in C# is <b>implicit.</b>|$|E
5|$|C# {{supports}} strongly typed <b>implicit</b> variable declarations {{with the}} keyword var, and implicitly typed arrays with the keyword new {{followed by a}} collection initializer.|$|E
5|$|For {{both the}} bribery and {{gratuity}} subsections, {{the courts have}} interpreted an <b>implicit</b> exception for campaign contributions.|$|E
5|$|If n > m, and if {{the rank}} of the Jacobi matrix attains its maximal value m, f is locally {{invertible}} at that point, by the <b>implicit</b> function theorem.|$|E
5|$|In {{psychological}} assessments, the name-letter {{effect has}} been exploited to measure self-esteem. There {{are two types of}} self-esteem: explicit self-esteem (a person's deliberate and conscious evaluation of themselves) and <b>implicit</b> self-esteem. Because by definition <b>implicit</b> self-esteem is not accessible to introspection, measures of it do not rely on direct self-reports but on the degree to which objects associated with the self generate positive versus negative thoughts.|$|E
5|$|The {{existence}} of <b>implicit</b> power, he explains, is {{why people are}} capable of tolerating social inequality {{for an extended period}} of time (Russell 1938:8).|$|E
5|$|Another {{group of}} {{researchers}} has framed the cause {{in terms of}} social psychology, specifically the self-esteem theory. Beginning with Greenwald and Banaji in 1995, this group states that the name-letter effect results from <b>implicit</b> self-esteem, a person's tendency to evaluate him or herself positively in a spontaneous, automatic, or unconscious manner. Most people like themselves. The halo effect of self-esteem spreads to any attributes associated with the self, including the name and its letters. As early as 1926 Syz discovered that a person's own name is special compared to others, eliciting physical responses measurable on the skin. It is thought that when a person recognizes the letters in his or her name, that person experiences positive feelings of <b>implicit</b> self-esteem. These positive feelings induce subjects to unknowingly select the letters of their own name, producing the name-letter effect.|$|E
5|$|In 2002 the {{researchers}} Pelham, Mirenberg, and Jones explored Casler's first explanation, arguing {{that people have}} a basic desire {{to feel good about}} themselves and behave according to that desire. These automatic positive associations would influence feelings about almost anything associated with the self. Given the mere ownership effect, which states that people like things more if they own them, {{the researchers}} theorised that people would develop an affection for objects and concepts that are associated with the self, such as their name. They called this unconscious power <b>implicit</b> egotism. Uri Simonsohn suggested that <b>implicit</b> egotism only applies to cases where people are nearly indifferent between options, and therefore it would not apply to major decisions such as career choices. Low-stakes decisions such as choosing a charity would show an effect. Raymond Smeets theorised that if <b>implicit</b> egotism stems from a positive evaluation of the self, then people with low self-esteem would not gravitate towards choices associated with the self, but possibly away from them. A lab experiment confirmed this.|$|E
5|$|Stieger, Voracek, and Formann {{recommend}} that the task be administered twice, that the effects be calculated separately for first-name initial and last-name initial, that the task be accompanied with the birthday-number task, and that the instructions focus on liking rather than attractiveness. They suggest {{it may be useful}} to use not just initials but all name letters for measuring <b>implicit</b> self-esteem, something which Hoorens says is her most important recommendation. The Letter Preference Task has been used to measure <b>implicit</b> self-esteem in contexts as diverse as depression, physical health, social acceptance, unrealistic optimism, feedback sensitivity, self-regulation, and defensiveness.|$|E
5|$|Stieger, Voracek, and Formann {{recommend}} that the task involve both letter preference and number preference, that it be administered twice, and that the instructions focus on liking rather than attractiveness. The Number Preference Task {{has been used to}} measure <b>implicit</b> self-esteem in contexts as diverse as parenting and mental habits.|$|E
5|$|The Letter Preference Task is the second-most popular {{method to}} measure <b>implicit</b> self-esteem, surpassed {{only by the}} <b>Implicit</b> Association Test. The task has also been called the Name Letter Preference Task, Name-Letter-Ratings Measure, and Initial Preference Task. There is no {{standard}} method for applying the task. The most commonly used one is a letter rating task, which involves having participants judge all {{the letters of the}} alphabet. Even within this method there are variations in the instructions (how much you like the letters or how attractive you find them), in the rating scales (five-point, seven-point, or nine-point), in the order of the letters (random or alphabetical), and in data collection (paper-and-pencil or computer-based).|$|E
5|$|The {{conference at}} Calais was {{something}} of a political triumph, but even though the French government gave <b>implicit</b> support for Henry's remarriage and Francis I himself held private conference with Anne, the French King maintained alliances with the Pope which he could not explicitly defy.|$|E
5|$|This {{approach}} has been widely adopted, particularly within Australia. Several other regulators have similar approaches. It is also described as the enforcement pyramid by some regulators although enforcement {{is only one of}} the compliance strategies <b>implicit</b> in the model.|$|E
5|$|This {{problem was}} first {{addressed}} by C.R. Illingworth in 1950. In incompressible flow, the velocity profile is linear because the fluid temperature is constant. When {{the upper and}} lower walls are maintained at different temperatures, the velocity profile is complicated, but it turns out it has an exact <b>implicit</b> solution.|$|E
25|$|This {{process has}} been studied {{extensively}} in social psychology as <b>implicit</b> associations and <b>implicit</b> attitudes, a component of <b>implicit</b> cognition. <b>Implicit</b> attitudes are evaluations that occur without conscious awareness towards an attitude object or the self. These evaluations are generally either favorable or unfavorable. They come about from various influences in the individual experience. <b>Implicit</b> attitudes are not consciously identified (or they are inaccurately identified) traces of past experience that mediate favorable or unfavorable feeling, thought, or action towards social objects. These thoughts, feelings or actions have an influence on behavior of which the individual may not be aware.|$|E
25|$|In {{computational}} complexity theory, several complexity {{classes have}} been defined {{in connection with}} <b>implicit</b> graphs, defined as above by a rule or algorithm for listing the neighbors of a vertex. For instance, PPA is the class of problems in which one is given as input an undirected <b>implicit</b> graph (in which vertices are -bit binary strings, with a polynomial time algorithm for listing the neighbors of any vertex) and a vertex of odd degree in the graph, and must find a second vertex of odd degree. By the handshaking lemma, such a vertex exists; finding one {{is a problem in}} NP, but the problems that can be defined in this way may not necessarily be NP-complete, as it is unknown whether PPA=NP. PPAD is an analogous class defined on <b>implicit</b> directed graphs that has attracted attention in algorithmic game theory because it contains the problem of computing a Nash equilibrium. The problem of testing reachability of one vertex to another in an <b>implicit</b> graph may also be used to characterize space-bounded nondeterministic complexity classes including NL (the class of problems that may be characterized by reachability in <b>implicit</b> directed graphs whose vertices are -bit bitstrings), SL (the analogous class for undirected graphs), and PSPACE (the class of problems that may be characterized by reachability in <b>implicit</b> graphs with polynomial-length bitstrings). In this complexity-theoretic context, the vertices of an <b>implicit</b> graph may represent the states of a nondeterministic Turing machine, and the edges may represent possible state transitions, but <b>implicit</b> graphs may also be used to represent many other types of combinatorial structure. PLS, another complexity class, captures the complexity of finding local optima in an <b>implicit</b> graph.|$|E
25|$|<b>Implicit</b> {{transactions}} {{were supported}} in Jet 3.0. These are transactions that are started automatically {{after the last}} transaction was committed to the database. <b>Implicit</b> transactions in Jet occurred when an SQL DML statement was issued. However, {{it was found that}} this had a negative performance impact in 32-bit Windows (Windows 95, Windows 98), so in Jet 3.5 Microsoft removed <b>implicit</b> transactions when SQL DML statements were made.|$|E
25|$|The Ã©tale {{requirement}} is {{the condition that}} would allow one to apply the <b>implicit</b> function theorem {{if it were true}} in algebraic geometry (but it isn't â€” <b>implicit</b> algebraic functions are called algebroid in older literature).|$|E
25|$|In {{the study}} of graph algorithms, an <b>implicit</b> graph {{representation}} (or more simply <b>implicit</b> graph) is a graph whose vertices or edges are not represented as explicit objects in a computer's memory, but rather are determined algorithmically from some more concise input.|$|E
25|$|The Aanderaaâ€“Karpâ€“Rosenberg {{conjecture}} concerns <b>implicit</b> graphs {{given as}} a set of labeled vertices with a black-box rule for determining whether any two vertices are adjacent. This definition differs from an adjacency labeling scheme in that the rule may be specific to a particular graph rather than being a generic rule that applies to all graphs in a family. Because of this difference, every graph has an <b>implicit</b> representation. For instance, the rule could be to look up the pair of vertices in a separate adjacency matrix. However, an algorithm that is given as input an <b>implicit</b> graph of this type must operate on it only through the <b>implicit</b> adjacency test, without reference to how the test is implemented.|$|E
25|$|<b>Implicit</b> {{self-esteem}} {{refers to}} a person's disposition to evaluate themselves positively or negatively in a spontaneous, automatic, or unconscious manner. It contrasts with explicit self-esteem, which entails more conscious and reflective self-evaluation. Both explicit self-esteem and <b>implicit</b> self-esteem are subtypes of self-esteem proper.|$|E
25|$|This {{assumption}} is <b>implicit</b> {{in the last}} assumption.|$|E
25|$|This {{can also}} be found using <b>implicit</b> differentiation.|$|E
25|$|JavaScript {{supports}} <b>implicit</b> {{and explicit}} delegation.|$|E
25|$|The <b>implicit</b> {{initialization}} vector (IV) {{was replaced with}} an explicit IV.|$|E
25|$|This {{effect has}} been {{demonstrated}} for explicit retrieval as well as <b>implicit</b> retrieval.|$|E
25|$|<b>Implicit</b> {{measures}} of self-esteem {{began to be}} used in the 1980s. These rely on indirect {{measures of}} cognitive processing thought to be linked to <b>implicit</b> self-esteem, including the Name Letter Task. Such indirect measures are designed to reduce awareness of the process of assessment. When used to assess <b>implicit</b> self-esteem, psychologists feature self-relevant stimuli to the participant and then measure how quickly a person identifies positive or negative stimuli. For example, if a woman was given the self-relevant stimuli of female and mother, psychologists would measure how quickly she identified the negative word, evil, or the positive word, kind.|$|E
25|$|English {{tort law}} is the law {{governing}} <b>implicit</b> civil responsibilities {{that people have to}} one another, as opposed to those responsibilities laid out in contracts. It provides legal remedies, often the payment of money, to those who have been damaged by someone else's failure to meet these <b>implicit</b> responsibilities. Other countries' tort laws can work quite differently.|$|E
25|$|Euler {{also allowed}} multi-valued {{functions}} whose values {{are determined by}} an <b>implicit</b> equation.|$|E
25|$|CTM allows {{modeling}} of hierarchical refinements in the classification tree, also called <b>implicit</b> dependencies.|$|E
25|$|Stereotyping {{is mostly}} <b>implicit,</b> unconscious, and {{facilitated}} by the availability of pejorative labels and terms.|$|E
25|$|In {{contrast}} to explicit phylogenetic methods, which compare the agreement between gene and species trees, <b>implicit</b> phylogenetic methods compare evolutionary distances or sequence similarity. Here, an unexpectedly short or long distance from a given reference {{compared to the}} average can be suggestive of an HGT event (see Figure 1). Because tree construction is not required, <b>implicit</b> approaches tend to be simpler and faster than explicit methods.|$|E
25|$|A {{differential}} algebraic equation (DAE) is a {{differential equation}} comprising differential and algebraic terms, given in <b>implicit</b> form.|$|E
