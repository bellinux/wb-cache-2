61|153|Public
50|$|Partial-order {{plans are}} known to easily and optimally solve the Sussman Anomaly. Using this type of <b>incremental</b> <b>{{planning}}</b> system solves this problem quickly and efficiently. This {{was a result of}} partial-order planning that solidified its place as an efficient planning system.|$|E
50|$|Transportation planning, or {{transport}} planning, {{has historically}} followed the rational planning model of defining goals and objectives, identifying problems, generating alternatives, evaluating alternatives, and developing plans. Other models for planning include rational actor, transit oriented development, satisficing, <b>incremental</b> <b>planning,</b> organizational process, collaborative planning, and political bargaining.|$|E
50|$|Transportation {{planning}} is the field {{involved with the}} siting of transportation facilities (generally streets, highways, sidewalks, bike lanes and public transport lines). Transportation planning historically has followed the rational planning model of defining goals and objectives, identifying problems, generating alternatives, evaluating alternatives, and developing the plan. Other models for planning include rational actor, satisficing, <b>incremental</b> <b>planning,</b> organizational process, and political bargaining. However, planners are increasingly expected to adopt a multi-disciplinary approach, especially due to the rising importance of environmentalism. For example, the use of behavioral psychology to persuade drivers to abandon their automobiles and use public transport instead. The role of the transport planner is shifting from technical analysis to promoting sustainability through integrated transport policies.Southern, A. (2006), Modern-day transport planners need to be both technically proficient and politically astute, Local Transport Today, no. 448, 27 July 2005.|$|E
50|$|On May 25, 2007, President Bush {{signed into}} law a {{supplemental}} appropriation bill (H.R. 2206), which contains the Fair Minimum Wage Act of 2007. This provision amended the FLSA {{to provide for the}} increase of the federal minimum wage by an <b>incremental</b> <b>plan,</b> culminating in a minimum wage of $7.25 per hour by July 24, 2009.|$|R
40|$|Significant advancements in {{hypersonic}} airbreathing vehicle {{technology have}} been made in the country's research centers and industry over the past 40 years. Some of that technology is being validated with the X- 43 flight tests. This paper presents an overview of hypersonic airbreathing technology status within the US, and a hypersonic technology development plan. This plan builds on the nation's large investment in hypersonics. This affordable, <b>incremental</b> <b>plan</b> focuses technology development on hypersonic systems, which could be operating by the 2020 's...|$|R
40|$|International audienceIn {{this paper}} we propose an {{efficient}} and <b>incremental</b> <b>plan</b> recognition method for cognitive assistance. We design our unique method based on graph matching and heuristic chaining rules {{in order to deal}} with interleaved and sequential activities. The finding of this research work is to be applied to predict abnormal behavior of the users, and optimize assistance for them. We have studied a use case of kitchen environment during lunch time that we will discuss in this paper and targeted Dementia patients. We will present implementation details as well as our evaluation plan...|$|R
40|$|This paper {{presents}} the basic results and ideas of dynamic programming {{as they relate}} most directly {{to the concerns of}} planning in AI. These form the theoretical basis for the <b>incremental</b> <b>planning</b> methods used in the integrated architecture Dyna. These <b>incremental</b> <b>planning</b> methods are based on continually updating an evaluation function and the situation-action mapping of a reactive system. Actions are generated by the reactive system and thus involve minimal delay, while the <b>incremental</b> <b>planning</b> process guarantees that the actions and evaluation function will eventually be optimal [...] no matter how extensive a search is required. These methods are well suited to stochastic tasks and to tasks in which a complete and accurate model is not available. For tasks too large to implement the situation-action mapping as a table, supervised-learning methods must be used, and their capabilities remain a significant limitation of the approach...|$|E
40|$|In this paper, {{we study}} {{strategies}} in <b>incremental</b> <b>planning</b> for ordering and grouping subproblems partitioned by the subgoals of a planning problem. To generate a {{rich set of}} partial orders for ordering subproblems, we propose an algorithm based on a relaxed plan that ignores the delete lists. The new algorithm considers both the initial and the goal states and can effectively order subgoals {{in such a way}} that greatly reduces the number of invalidations during <b>incremental</b> <b>planning.</b> We have also considered trade-offs between the granularity of the subgoal sets and the complexity of solving the overall planning problem. We propose an efficient strategy for dynamically adjusting the grain size in partitioning in order to minimize the total complexity. We further evaluate a redundantordering scheme that uses two different subgoal orders to improve the solution quality, without greatly sacrificing run-time efficiency. Experimental results on using Metric-FF, YAHSP, and LPG-TD-speed as the embedded planners in <b>incremental</b> <b>planning</b> sho...|$|E
40|$|This paper {{presents}} a thorough theoretical {{analysis of a}} recently developed anytime <b>incremental</b> <b>planning</b> algorithm called Anytime Dynamic A* (AD*). The analysis includes proofs for the correctness of the algorithm and {{as well as the}} proofs for several properties of the algorithm related to its efficiency...|$|E
5000|$|January 2015 to October 2016 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
5000|$|October 1999 to September 2000 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
5000|$|September 2010 to June 2011 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
40|$|This paper {{discusses}} the analogical/case-based planning approach developed in PRODIGY-/ANALOGY. The technique involves planning for complex problems by the multi-case reuse of sim-pler past plans that are conjunctively {{similar to a}} new planning situation. The paper demonstrates this effective <b>incremental</b> <b>planning</b> strategy by providing empirical results {{on the performance of}} PRODIGY/ANALOGY solving 1000 problems in a complex logistics transportation domain. ...|$|E
40|$|In this paper, {{we propose}} an {{algorithm}} for coordinating {{a group of}} mobile robots that go through predefined paths in a dynamic industrial environment. Coordination diagrams are used for representing the possible collisions among the vehicles. We exploit this information for developing a centralised and <b>incremental</b> <b>planning</b> algorithm that allows to coordinate the vehicles and {{to take into account}} unexpected events that can occur in an industrial environment. Simulation tests have been executed in order to compare the performance of our algorithm with the one currently implemented by the company...|$|E
40|$|Language {{production}} comprises conceptual, grammatical, {{and word}} form encoding {{as well as}} articulation. This paper focuses on word form or phonological encoding. Phonological encoding in speech production can be subdivided {{into a number of}} sub-processes such as segmental, metrical, and syllabic encoding. Each of these processes is briefly described and illustrated with examples from my own research. Special attention is paid to time course issues introducing behavioural and electrophysiological research methods such as LRPs and ERPs. It is concluded that phonological encoding is an <b>incremental</b> <b>planning</b> process taking into account segmental, metrical, and syllabic encoding. Models of spoken language productio...|$|E
5000|$|March 2002 to September 2002 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
5000|$|February 1999 to June 1999 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
5000|$|February 2004 to December 2004 - <b>Planned</b> <b>Incremental</b> Availability ...|$|R
40|$|In {{this paper}} we propose a {{methodology}} for coordinating a group of mobile robots that go through predefined paths in a dynamic industrial environment. The technique is developed to be implemented into a real industrial framework. Coordination diagrams are used for representing the possible collisions among the vehicles. We exploit this information for developing a centralized and <b>incremental</b> <b>planning</b> algorithm that allows to coordinate the vehicles and to take into account unexpected events that can occur in an industrial environment. Simulation tests considering a real plant have been executed in order to compare the performance of our technique with the one currently implemented by the company...|$|E
40|$|International audienceA {{knowledge-based}} system that automates {{the execution of}} image segmentation processes is presented. Given an image {{and a set of}} segmentation tasks, our system, named BORG, generates, performs and optimises the processing of classical segmentation operators, in order to produce new images that satisfy these tasks. Such a system must have capabilities for self-configuration to different segmentation tasks and to different image classes. The authors describe the design principles for building image segmentation applications based on the generation of a graph of operators that can deal with the whole set of images belonging to some given class. A model of the hierarchical and <b>incremental</b> <b>planning</b> process used for building this graph is presented and the system architecture is discussed. An application dealing with biomedical images is also described...|$|E
40|$|Early {{attempts}} to formulate information systems (IS) strategies {{concentrated on the}} analytical task of deriving IS strategies from business plans. The limitations of the static plans that often resulted from these formal studies were, however, soon discovered. The critics suggested informal and <b>incremental</b> <b>planning</b> to ensure flexibility, creativity and strategic thinking to comprise emergent strategies as well as planned strategies. In previous IS planning research, {{there appears to be}} a contradiction between the published planning methods and the generally held views about effective implementation of IS planning process. The explicit methods described in IS literature predominantly assume a comprehensive IS planning process. Despite the fact that many researchers consider incremental approaches to be more effective, methods that can be used to facilitate incremental IS planning are few, not detailed enough and not comprehensive. ...|$|E
5000|$|March 1997 to September 1997 - <b>Planned</b> <b>Incremental</b> Availability - bridle catcher removed ...|$|R
5000|$|July 2012 to February 2013 - <b>Planned</b> <b>Incremental</b> Availability - CIWS {{replaced}} on aft port sponson ...|$|R
5000|$|February 2004 to August 2004 - <b>Planned</b> <b>Incremental</b> Availability - catwalk grating was {{replaced}} and flight deck resurfaced.|$|R
40|$|<b>Incremental</b> <b>planning</b> is {{performed}} periodically {{to decide how}} a backbone optical network has to be updated to serve the forecast traffic during the next planning period. Based on reliable traffic prediction, new equipment is installed and its capacity {{is ready to be}} used. Nonetheless, due among others to the introduction of new services, exact prediction is not usually available, which leads to install more capacity than that required thus, increasing network expenditures. To reduce expenses, we propose to monitor some performance metrics and launch the incremental capacity planning problem (INCA) to meet the target performance when some performance metric drops under a threshold. A heuristic algorithm is proposed to solve INCA in practical times. We show that INCA produces savings in terms of used cards with respect to periodical planning thus, demonstrating the utility of our proposal. Peer ReviewedPostprint (published version...|$|E
40|$|International audienceRecent decision-theoric {{planning}} algorithms {{are able}} to find optimal solutions in large problems, using Factored Markov Decision Processes (FMDPs). However, these algorithms need a perfect knowledge {{of the structure of}} the problem. In this paper, we propose SDYNA, a general framework for addressing large reinforcement learning problems by trial-and-error and with no initial knowledge of their structure. SDYNA integrates <b>incremental</b> <b>planning</b> algorithms based on FMDPs with supervised learning techniques building structured representations of the problem. We describe SPITI, an instantiation of SDYNA, that uses incremental decision tree induction to learn the structure of a problem combined with an incremental version of the Structured Value Iteration algorithm. We show that SPITI can build a factored representation of a reinforcement learning problem and may improve the policy faster than tabular reinforcement learning algorithms by exploiting the generalization property of decision tree induction algorithms...|$|E
40|$|One {{approach}} for computing plans for reactive agents is is to check goal statements over state trajectories modeling predicted behaviors of an agent. This paper describes a powerful extension {{of this approach}} to handle time, safety, and liveness goals that are specified by Metric Temporal Logic formulas. Our planning method {{is based on an}} <b>incremental</b> <b>planning</b> algorithm that generates a reactive plan by computing a sequence of partially satisfactory reactive plans converging towards a completely satisfactory one. Partial satisfaction means that an agent controlled by the plan accomplishes its goal only for some environment events. Complete satisfaction means that the agent accomplishes its goal whatever the environment event occur during the execution of the plan. As such, our planner can be stopped at any time to yield a useful plan. Keywords: Planning, control, reactive agents, temporal goals. Introduction Reactive agents play an increasingly important role in many computer applicat [...] ...|$|E
5000|$|November 2010 to March 2012 - <b>Planned</b> <b>Incremental</b> Availability - 2 CIWS {{added to}} forward {{starboard}} sponson enlargement/new port stern sponson.|$|R
5000|$|March 2007 to November 2007 - <b>Planned</b> <b>Incremental</b> Availability - 2 RAM replace 1 CIWS/1 Mk-29 at forward port sponson/aft {{starboard}} sponson ...|$|R
50|$|The <b>planned</b> <b>incremental</b> {{steps toward}} {{migrating}} {{a suite of}} services to a more efficient suite or toward evolving current services to a future implementation.|$|R
40|$|Abstract: This article {{deals with}} {{the design of a}} system that automates the {{generation}} of image processing applications. Users describe tasks to perform on images and the system constructs a specific plan, which, after being executed, should yield the desired results. Our approach of this problem belongs to the more general category of systems for the supervision of a library of operators. The generation of an application is here considered as the dynamic building of chains of image processing through the selection, parameter tuning and scheduling of existing operators. To develop such a system, we suggest to use a knowledge-rich resolution model and to integrate seven design rules. The BORG system has been developed following these prescriptions. It hinges on hierarchical, opportunistic and <b>incremental</b> <b>planning</b> by means of knowledge sources of the Blackboard model, which enable to take into account planning, evaluation and knowledge acquisition issues...|$|E
40|$|Reinforcement {{learning}} {{addresses the}} problem of learning to select actions {{in order to maximize}} one's performance in unknown environments. To scale reinforcement learning to complex real-world tasks, such as typically studied in AI, one must ultimately be able to discover the structure in the world, in order to abstract away the myriad of details and to operate in more tractable problem spaces. This paper presents the SKILLS algorithm. SKILLS discovers skills, which are partially defined action policies that arise in the context of multiple, related tasks. Skills collapse whole action sequences into single operators. They are learned by minimizing the compactness of action policies, using a description length argument on their representation. Empirical results in simple grid navigation tasks illustrate the successful discovery of structure in reinforcement learning. 1 Introduction Reinforcement learning comprises a family of <b>incremental</b> <b>planning</b> algorithms that construct reactive con [...] ...|$|E
40|$|A {{software}} development life cycle model (SDLC) {{consists of a}} set of processes (planning, requirements, design, development, testing, installation and maintenance) defined to accomplish the task of developing a software application that is functionally correct and satisfies the user’s needs. These set of processes, when arranged in different orders, characterize different types of life cycles. When developing a database, the order of these tasks is very important to efficiently and correctly transform the user’s requirements into an operational database. These SDLCs are generally defined very broadly and are not specific for a particular type of application. In this paper the authors emphasize {{that there should be a}} SDLC that is specific to database applications. Database applications do not have the same characteristics as other software applications and thus a specific database development life cycle (DBDLC) is needed. A DBDLC should accommodate properties like scope restriction, progressive enhancement, <b>incremental</b> <b>planning</b> and pre-defined structure. Software Development, Database, DBMS, lifecycle model, traditional lifecycles...|$|E
50|$|On 10 January 2000, Theodore Roosevelt {{entered a}} <b>Planned</b> <b>Incremental</b> Availability (PIA) at the Norfolk Naval Naval Shipyard, Portsmouth, Virginia for a six-month {{maintenance}} period.|$|R
50|$|The <b>planned</b> <b>incremental</b> {{steps toward}} {{migrating}} {{a suite of}} systems to a more efficient suite, or toward evolving a current system to a future implementation.|$|R
40|$|The TraumAID {{system is}} a tool for {{assisting}} physicians during the initial definitive management phase of patients with severe injuries. Originally, TraumAID was conceived as a rule-based expert system combined with a planner. After this architecture had been implemented and evaluated, we began to face {{the issue of how}} TraumAID could communicate its plans to physicians in order to influence their behavior and {{have a positive effect on}} patient outcome. It was hypothesized that a critiquing approach, in which the system is told what actions the user intends to carry out and produces a critique in response to those intentions, might be appropriate. ^ To meet the needs of physicians engaged in managing trauma cases, critiques must be updated and made available rapidly. They must be clear and succinct, containing only relevant information while still including enough justification to make them convincing. To address the need for these features in the system, I have developed a critiquing architecture consisting of three components: <b>incremental</b> <b>plan</b> recognition, plan evaluation, and critique generation. I have implemented this architecture in TraumaTIQ, a critiquing interface for the TraumAID system. Comparison of TraumaTIQ 2 ̆ 7 s comments on 97 actual management plans with comments made by three local trauma experts showed that TraumaTIQ produced 48. 3...|$|R
