1218|2095|Public
25|$|Logico-linguistic modeling. A {{method for}} {{building}} <b>knowledge-based</b> <b>system</b> that uses Prolog.|$|E
50|$|An {{expert system}} {{is an example}} of a <b>knowledge-based</b> <b>system.</b> Expert systems were the first {{commercial}} systems to use a knowledge-based architecture. A <b>knowledge-based</b> <b>system</b> is essentially composed of two sub-systems: the knowledge base and the inference engine.|$|E
5000|$|... #Caption: Figure 4. Machine {{translation}} in a <b>knowledge-based</b> <b>system.</b>|$|E
40|$|A {{proposed}} {{role for}} <b>knowledge-based</b> <b>systems</b> within NASA's Software Support Environment (SSE) is described. The SSE is chartered to support all software {{development for the}} Space Station Freedom Program (SSFP). This includes support for development of <b>knowledge-based</b> <b>systems</b> and the integration of these systems with conventional software systems. In addition to the support of development of <b>knowledge-based</b> <b>systems,</b> various software development functions provided by the SSE will utilize <b>knowledge-based</b> <b>systems</b> technology...|$|R
40|$|Report {{discusses}} {{approach to}} verification and validation of <b>knowledge-based</b> <b>systems.</b> Also known as "expert systems". Concerned mainly with development of methodologies for verification of <b>knowledge-based</b> <b>systems</b> critical to flight-research systems; e. g., fault-tolerant control systems for advanced aircraft. Subject matter also has relevance to <b>knowledge-based</b> <b>systems</b> controlling medical life-support equipment or commuter railroad systems...|$|R
40|$|The article {{presents}} the <b>knowledge-based</b> <b>systems</b> developed {{by using the}} intelligent ATOM software and the experience with their application for teaching and university cooperation. The theoretical bases of the solution are Topic Maps; a software tool is introduced and individual cases of <b>knowledge-based</b> <b>systems</b> are described. The article reflects the {{years of experience in}} the cooperation of the <b>knowledge-based</b> <b>systems</b> development. © 2013 IADIS...|$|R
5000|$|Logico-linguistic modeling. A {{method for}} {{building}} <b>knowledge-based</b> <b>system</b> that uses Prolog.|$|E
50|$|The {{original}} use of {{the term}} knowledge-base was to describe one of the two sub-systems of a <b>knowledge-based</b> <b>system.</b> A <b>knowledge-based</b> <b>system</b> consists of a knowledge-base that represents facts about the world and an inference engine that can reason about those facts and use rules and other forms of logic to deduce new facts or highlight inconsistencies.|$|E
5000|$|SubL: {{a variant}} of Common Lisp used for the {{implementation}} of the Cyc <b>knowledge-based</b> <b>system</b> ...|$|E
5000|$|<b>Knowledge-based</b> <b>systems</b> {{were first}} {{developed}} by artificial intelligence researchers. These early <b>knowledge-based</b> <b>systems</b> were primarily expert systems - in fact, {{the term is}} often used synonymously with expert systems. The difference is in the view taken to describe the system: [...] "expert system" [...] refers {{to the type of}} task the system is trying to assist with - to replace or aid a human expert in a complex task; [...] "knowledge-based system" [...] refers to the architecture of the system - that it represents knowledge explicitly (rather than as procedural code). While the earliest <b>knowledge-based</b> <b>systems</b> were almost all expert systems, the same tools and architectures can and have since been used for a whole host of other types of systems - i.e., virtually all expert <b>systems</b> are <b>knowledge-based</b> <b>systems,</b> but many <b>knowledge-based</b> <b>systems</b> are not expert systems.|$|R
40|$|<b>Knowledge-based</b> <b>systems</b> {{have the}} {{potential}} to greatly increase the capabilities of future aircraft and spacecraft and to significantly reduce support manpower needed for the space station and other space missions. However, a credible validation methodology must be developed before <b>knowledge-based</b> <b>systems</b> can be used for life- or mission-critical applications. Experience with conventional software has shown that the use of good software engineering techniques and static analysis tools can greatly reduce the time needed for testing and simulation of a system. Since exhaustive testing is infeasible, reliability must be built into the software during the design and implementation phases. Unfortunately, many of the software engineering techniques and tools used for conventional software are of little use in the development of <b>knowledge-based</b> <b>systems.</b> Therefore, research at Langley is focused on developing a set of guidelines, methods, and prototype validation tools for building highly reliable, <b>knowledge-based</b> <b>systems.</b> The use of a comprehensive methodology for building highly reliable, <b>knowledge-based</b> <b>systems</b> should significantly decrease the time needed for testing and simulation. A proven record of delivering reliable systems {{at the beginning of the}} highly visible testing and simulation phases is crucial to the acceptance of <b>knowledge-based</b> <b>systems</b> in critical applications...|$|R
40|$|A {{study was}} {{conducted}} to determine the feasibility of using <b>knowledge-based</b> <b>systems</b> architectures for inflight research of primary flight display information management issues. The feasibility relied on the ability to integrate <b>knowledge-based</b> <b>systems</b> with existing onboard aircraft systems. And, given the hardware and software platforms available, the feasibility also depended on the ability to use interpreted LISP software with the real time operation of the primary flight display. In addition to evaluating these feasibility issues, the study determined whether the software engineering advantages of <b>knowledge-based</b> <b>systems</b> found for this application in the earlier workstation study extended to the inflight research environment. To study these issues, two integrated <b>knowledge-based</b> <b>systems</b> were designed to control the primary flight display according to pre-existing specifications of an ongoing primary flight display information management research effort. These two systems were implemented to assess the feasibility and software engineering issues listed. Flight test results were successful in showing the feasibility of using <b>knowledge-based</b> <b>systems</b> inflight with actual aircraft data...|$|R
5000|$|... 1984. [...] "ISIS—a <b>knowledge‐based</b> <b>system</b> for factory scheduling". With S.F. Smith in: Expert systems 1 (1), p. 25-49 ...|$|E
5000|$|Cyc, a long running {{project with}} the aim to create a <b>knowledge-based</b> <b>system</b> that {{provides}} {{a huge amount of}} common sense knowledge ...|$|E
50|$|There {{may be a}} lack of {{consensus}} over what distinguishes a legal expert system from a <b>knowledge-based</b> <b>system</b> (also called an intelligent <b>knowledge-based</b> <b>system).</b> While legal expert systems are held to function {{at the level of}} a human legal expert, knowledge-based systems may depend on the ongoing assistance of a human expert. True legal expert systems typically focus on a narrow domain of expertise as opposed to a wider and less specific domain {{as in the case of}} most knowledge-based systems.|$|E
5000|$|AIAI specialises in Intelligent and <b>Knowledge-based</b> <b>systems,</b> including: ...|$|R
40|$|In recent years, {{knowledge-based}} {{software technology}} has proven {{itself to be}} a valuable tool for solving hitherto intractable problems. Developers of <b>knowledge-based</b> <b>systems</b> must ensure that the system will give its users accurate advice or correct solutions to their problems. Thus, <b>knowledge-based</b> <b>systems</b> must be debugged and validated {{just like any other}} piece of software. It has been found {{that one of the most}} important problems in developing <b>knowledge-based</b> <b>systems</b> is the lack of methods to verify and validate its KB. The aim of this article is to define a methodology and its supporting tool set that are used together in order to completely test <b>knowledge-based</b> <b>systems.</b> The suggested testing methodology couples different verification and validation activities that are collectively valuable in raising the level of <b>system</b> correctness <b>Knowledge-based</b> <b>systems</b> (KBSs) can be defined to be “A computerized system that uses knowledge about some domain to arrive at a solution to a problem from that domain. This solution is essentially the same as that concluded by a person knowledgeable about the domain of a problem when confronte...|$|R
5000|$|Information technology: {{information}} theory, information science, information retrieval, database <b>systems,</b> <b>knowledge-based</b> <b>systems,</b> rule-based systems, expert systems, {{decision support}} systems, intelligent agent technology.|$|R
5000|$|... 1 Compton, P., Peters, L., Edwards, G., and Lavers, T.G., Experience with Ripple-Down Rules. <b>Knowledge-Based</b> <b>System</b> Journal: p. in press, 2006 (accepted July 30, 2005) ...|$|E
5000|$|Comerford, JB., Blockley, DI, Davis, JP. and Sipit 1989, A <b>knowledge-based</b> <b>system</b> to {{interpret}} results froms pulse-echo pile integrity tests, Proceedings of the Institution of Civil Engineers 1991 90:1, pp. 189-204 ...|$|E
5000|$|It is {{important}} that a knowledge engineer incorporates validation procedures into their systems within the program code. After the <b>knowledge-based</b> <b>system</b> is constructed, it can be maintained by the domain expert [...]|$|E
5000|$|... 1988. Knowledge {{acquisition}} for <b>knowledge-based</b> <b>systems.</b> Edited with J.H. Boose.|$|R
40|$|We {{investigate}} the formal specification {{of the dynamic}} reasoning process of <b>knowledge-based</b> <b>systems.</b> The main contributions of the paper are: defining a formal framework for describing the dynamic reasoning behaviour of <b>knowledge-based</b> <b>systems</b> which unifies existing approaches; defining a semantics for the specification of the dynamic reasoning behaviour of a knowledgebased system within the states as algebra setting that overcomes several shortcomings of the existing approaches; and providing {{for the first time}} an axiomatization and proof theory of specification languages for <b>knowledge-based</b> <b>systems.</b> We achieve this by developing the logical language MLPM (Modal Logic of Predicate Modification). 1 INTRODUCTION The model of expertise as developed in the KADS-I and CommonKADS projects [13] has become a widely used framework for developing and describing <b>knowledge-based</b> <b>systems</b> (KBS). Such a model of expertise can be used to describe the reasoning process and the knowl [...] ...|$|R
40|$|In {{this paper}} we {{describe}} {{a framework for}} defining and operationalizing conceptual models of distributed <b>knowledge-based</b> <b>systems</b> which extends published approaches by the notion of "agents" and multiple task decompositions. The main part deals with techniques underlying our distributed interpreter. We show how a client-server-architecture can be implemented which allows prototyping distributed <b>knowledge-based</b> <b>systems.</b> Further we describe our mechanism which manages task interactions and supports dependency-directed backtracking efficiently. 1 INTRODUCTION AND OVERVIEW Model-based development of <b>knowledge-based</b> <b>systems</b> {{is the state of}} the art in knowledge engineering. A well-known approach in Europe is KADS [14] which allows to model <b>knowledge-based</b> <b>systems</b> on a very high level of abstraction. For this methodology, several formal and/or operational languages were developed [5]. These do not support the distribution of tasks among several agents. Our goal is the development of a frame [...] ...|$|R
50|$|Question-answering-system: As a <b>knowledge-based</b> <b>system,</b> a question-answering-system {{is able to}} give {{answers to}} {{questions}} asked in natural language. Thus, an efficient dialogue between human and system should be enabled. On {{the basis of the}} collected data (cf. big data), the city is able to see which topics the citizens engage with.|$|E
50|$|Functions {{supported}} by the current COTS environment include: system specification/diagramming,process flowcharting, information modeling, computer-aided design of products, plant layout, material flow analysis, ergonomic workplace design, mathematical modeling, statistical analysis, line balancing, manufacturing simulation, investment analysis, project management, <b>knowledge-based</b> <b>system</b> development, spreadsheets, document preparation, user interface development, document illustration, forms and database management.|$|E
5000|$|Knowledge {{acquisition}} is {{the process}} used to define the rules and ontologies required for a <b>knowledge-based</b> <b>system.</b> The phrase was first {{used in conjunction with}} expert systems to describe the initial tasks associated with developing an expert system, namely finding and interviewing domain experts and capturing their knowledge via rules, objects, and frame-based ontologies.|$|E
40|$|The {{literature}} on validation and verification of <b>knowledge-based</b> <b>systems</b> contains {{a catalogue of}} anomalies for <b>knowledge-based</b> <b>systems,</b> such as redundant, contradictory or deficient knowledge. Detecting such anomalies is a method for verifying <b>knowledge-based</b> <b>systems.</b> Unfortunately, the traditional formulation of the anomalies in the literature is very specific to a rule-based knowledge representation, which greatly restricts their applicability. In this paper, we show how the traditional anomalies can be reinterpreted in terms of conceptual models (in particular KADS inference structures). For this purpose, we present a formalisation of KADS inference structures which enables us to apply the traditional rulebase anomalies to these inference structures. This greatly improves {{the usefulness of the}} anomalies, since they can now be applied to a much wider class of <b>knowledge-based</b> <b>systems.</b> Besides this reformulation and wider applicability of the traditional anomalies, further contribution [...] ...|$|R
5000|$|The {{most recent}} {{advancement}} of <b>knowledge-based</b> <b>systems</b> {{has been to}} adopt the technologies {{for the development of}} systems that use the internet. The internet often has to deal with complex, unstructured data that can't be relied on to fit a specific data model. The technology of <b>knowledge-based</b> <b>systems</b> and especially the ability to classify objects on demand is ideal for such systems. The model for these kinds of <b>knowledge-based</b> Internet <b>systems</b> is known as the Semantic Web.|$|R
40|$|The main {{objective}} of the paper is to highlight the characteristics of <b>knowledge-based</b> <b>systems</b> and to present the concept „community of practice” {{in the context of}} knowledge-based economy. The paper addresses the new trends and challenges of knowledge dynamics within communities of practice and examines the emergence of this type of communities. <b>knowledge-based</b> <b>systems,</b> emergence, adaptation, communities of practice...|$|R
5000|$|Implementing a {{reliability}} {{program is}} not simply a software purchase; it's not just a checklist of items that must be completed that will ensure you have reliable products and processes. A reliability program is a complex learning and <b>knowledge-based</b> <b>system</b> unique to your products and processes. It is supported by leadership, built on the skills that you develop within your team, integrated into your business processes and executed by following proven standard work practices.|$|E
50|$|Wielinga studied Physics at the University of Amsterdam, {{where he}} was awarded a PhD in 1972 for a study in nuclear physics. He has {{performed}} research on the methodology of <b>knowledge-based</b> <b>system</b> design and knowledge acquisition. In 1986, Wielinga was appointed full professor of Social Science Informatics (SWI) in the Faculty of Psychology. Wielinga leads several research projects, including KADS, ACKnowledge, REFLECT and KADS-II {{and was one of}} the main contributors to the development of the KADS methodology for knowledge based system development.|$|E
5000|$|In {{order to}} {{implement}} {{the policies of the}} fourth development national program, as well as to strengthen the <b>knowledge-based</b> <b>system</b> and considering the increasing significance of research and technology and in order to improve the capacities for generation and preservation of science and technology, to support outstanding Iranian researchers, to create research capacities at national level and particularly to stop the increasing trend of brain drain and {{to implement the}} enactment of INSF board of trustees on 6 July 2005, the temporary charter for research chair was compiled as the following: ...|$|E
5000|$|Trevor J. M. Bench-Capon, ed., <b>Knowledge-based</b> <b>systems</b> {{and legal}} {{applications}} (London: Academic Press, 1991) ...|$|R
40|$|A {{number of}} {{important}} use cases for public administration (“e-governance”) applications of legal <b>knowledge-based</b> <b>systems</b> are identified. For each use case, a data flow model is developed showing processes and document types sufficient to implement the use case. Our main goal is to identify document types which, if standardized, would enable a modular set of interoperable components for building legal <b>knowledge-based</b> <b>systems...</b>|$|R
40|$|De Tré G., Vandermeulen D., Hermans J., Claes P., Nielandt J., Bronselaer A., ''Bipolar {{comparison}} of 3 D ear models'', Information processing {{and management of}} uncertainty in <b>knowledge-based</b> <b>systems,</b> proceedings 15 th international conference on information processing and management of uncertainty in <b>knowledge-based</b> <b>systems</b> - IPMU' 2014, vol. 444, pp. 160 - 169, July 15 - 19, 2014, Montpellier, France. status: publishe...|$|R
