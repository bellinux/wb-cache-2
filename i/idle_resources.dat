208|211|Public
500|$|The book {{advocated}} activist {{economic policy}} by government to stimulate demand {{in times of}} high unemployment, for example by spending on public works. [...] "Let us be up and doing, using our <b>idle</b> <b>resources</b> to increase our wealth," [...] he wrote in 1928. [...] "With men and plants unemployed, it is ridiculous {{to say that we}} cannot afford these new developments. It is precisely with these plants and these men that we shall afford them." ...|$|E
2500|$|The book {{advocated}} activist {{economic policy}} by government to stimulate demand {{in times of}} high unemployment, for example by spending on public works. [...] "Let us be up and doing, using our <b>idle</b> <b>resources</b> to increase our wealth," [...] he wrote in 1928. [...] "With men and plants unemployed, it is ridiculous {{to say that we}} cannot afford these new developments. It is precisely with these plants and these men that we shall afford them." [...] Where the market failed to properly allocate resources, the government was required to stimulate the economy until private funds could start flowing again– a [...] "prime the pump" [...] kind of strategy designed to boost industrial production.|$|E
2500|$|Also in 1931, Hayek critiqued Keynes's Treatise on Money (1930) in his [...] "Reflections on {{the pure}} theory of Mr. J. M. Keynes" [...] and {{published}} his lectures at the LSE in book form as Prices and Production. Unemployment and <b>idle</b> <b>resources</b> are, for Keynes, {{caused by a}} lack of effective demand; for Hayek, they stem from a previous, unsustainable episode of easy money and artificially low interest rates. [...] Keynes asked his friend Piero Sraffa to respond. Sraffa elaborated on the effect of inflation-induced [...] "forced savings" [...] on the capital sector and about the definition of a [...] "natural" [...] interest rate in a growing economy. (Sraffa–Hayek debate) Others who responded negatively to Hayek's work on the business cycle included John Hicks, Frank Knight, and Gunnar Myrdal. [...] Kaldor later wrote that Hayek's Prices and Production had produced [...] "a remarkable crop of critics" [...] and that the total number of pages in British and American journals dedicated to the resulting debate [...] "could rarely have been equalled in the economic controversies of the past." ...|$|E
5000|$|... #Caption: World Community Grid {{screensaver}} {{that uses}} <b>idle</b> system <b>resources</b> to help analyze proteins.|$|R
40|$|Even a {{fully loaded}} {{computer}} system, where the bottleneck resource is constantly busy, often has some idle capacities available on other resources. This proposal argues for using these idle capacities speculatively, increasing system performance for correct predictions. In such a system, all resources will ideally be constantly loaded with either regular foreground tasks, or speculative idle-time tasks. The key contribution of this proposal {{is a model}} for non-interfering use of <b>idle</b> <b>resource</b> capacity, based on three principles: resource prioritization between regular foreground and idle-time use, preemptability of idle-time processing, and isolation of speculative side effects. Current operating systems fail to provide all three capabilities. Without new mechanisms, processing of speculative tasks can delay or even starve foreground processing, and result in a decreased foreground performance, instead of increasing it. Under the proposed model, speculative tasks only execute using otherwise <b>idle</b> <b>resource</b> capacities; the model also shields foreground processing from {{the side effects of}} their presence in the system. Thus, speculation can no longer delay or interfere with foreground processing. Based o...|$|R
5000|$|Folding@home, a {{distributed}} computing project that uses <b>idle</b> processing <b>resources</b> of personal computers owned by volunteers who have installed the software on their systems ...|$|R
50|$|Dynamic Clustering: A core {{function}} that enables rapid elasticity {{which allows the}} administrator to easily add and delete <b>idle</b> <b>resources</b> as needed.|$|E
50|$|Each Peer in the {{community}} is an entity that owns a number of resources and occasionally needs more computing power than these resources can provide. Whenever a Peer needs more power, it requests resources to {{the community}}. Whenever it has <b>idle</b> <b>resources,</b> it allocates them {{to one of the}} requesters. As there are no guarantees about the quality of service obtained from the <b>idle</b> <b>resources</b> donated to the community, not all applications are suitable for OurGrid.|$|E
50|$|The OurGrid Community is a {{peer-to-peer}} {{resource sharing}} system focused on providing resources to BoT applications. The central mission of OurGrid Community {{is that the}} sharing be done using the network of favours model. In this model, each Peer offers access to its <b>idle</b> <b>resources</b> to the community. In return, when there is work that exceeds local capacity, a Peer expects {{to gain access to}} the <b>idle</b> <b>resources</b> of other participants. The system aims to allow users of BoT applications to easily obtain access and use the community's computational resources, dynamically forming an on-demand, large-scale, grid.|$|E
40|$|The {{following}} {{topics are}} presented in view graph form and include the following: scheduling application; the motivation for the Flexible Envelope Request Notation (FERN); characteristics of FERN; types of information needed in requests; where information is stored in requests; FERN structures; generic requests; resource availability for pooled resources; expressive notation; temporal constraints; time formats; changes to FERN; sample FERN requests; the temporal relationship between two steps; maximum activity length to limit step delays; alternative requests; the temporal relationship between two activities; and <b>idle</b> <b>resource</b> usage between steps...|$|R
5000|$|Maximum {{utilization}} of power cars: Separate locomotives facilitate movement of costly motive power assets as needed; thereby avoiding the expense associated with tied up or <b>idle</b> power <b>resources.</b>|$|R
30|$|This {{method is}} simple and {{resource}} saving. For a hypercall sequence of length n, there is at most 6 mn/k instructions need to be executed. As 6 m/k is a constant, the complexity is O(n), which is very suitable in real-time monitoring. While other advanced machine learning methods need to do complex computing whose complexity may be O(n^ 2) or even more. Besides, we can also store the hypercalls into disk and do the analysis offline when there is <b>idle</b> <b>resource,</b> which is very common in cloud service.|$|R
50|$|In {{order to}} reduce the time {{required}} to search the key-space, portions of the work effort can be farmed out <b>idle</b> <b>resources.</b> As opposed to rainbow tables this technique allows CHAOS to perform brute-force attacks against irregular or salted algorithms.|$|E
50|$|Social {{online storage}} {{applications}} allow their users to collaboratively create file archives containing files of any type. Files {{can either be}} edited online or from a local computer, which {{has access to the}} storage system. Such systems can be built upon existing server infrastructure (e.g. GDrive) or leverage <b>idle</b> <b>resources</b> by applying P2P technology (e.g. Wuala). Such systems are social because they allow public file distribution and direct file sharing with friends.|$|E
50|$|The {{contributions}} of each user are recorded and user contribution statistics are publicly available. Due {{to the fact}} that the processing time of each workunit varies from computer to computer depending on the difficulty of the workunit, the speed of the computer and the amount of <b>idle</b> <b>resources</b> available, contributions are usually measured in terms of points. Points are awarded for each workunit depending on the effort required to process that workunit.|$|E
40|$|The {{problem of}} solving games is {{introduced}} as a memory-bound computation (requiring {{a great deal}} more memory than is physically available) and distributed network memory is introduced as a possible technique for providing large amounts of relatively fast memory (compared to disk-based virtual memory) to these applications. A specialized system is built and evaluated for managing large shared, read-only memory spaces for parallel access. A large amount of eort is focused on robustness and proper <b>idle</b> <b>resource</b> management. The nal system provides signicantly better access times than were previously possible. ...|$|R
5000|$|... avoids <b>idling</b> the compute <b>resources</b> without minute-by-minute human {{supervision}} ...|$|R
30|$|The {{hybrid system}} also {{referred}} to as System I in this paper, is compared with other alternative systems such as a system described in [41]. The authors of [41] describe a greedy approach that acquires resources as and when required. This system is modified by incorporating a mechanism to remove <b>idling</b> <b>resources</b> to improve its performance. This modified system uses a broker that scales up when it needs an additional resource and scales down if no more requests are pending on a particular resource. This enables the broker to increase its profits by ensuring <b>idling</b> <b>resources</b> are returned to the service provider. This system is called the non-proactive system or System II. A hybrid system that functions as System II during the training period (accepting all client requests) and switches to the proactive system (System I) {{at the end of the}} training period is an interesting topic for future research. In System III, users obtain the resources directly from the public cloud provider without broker (in the intermediary enterprise) intervention. With this system, users incur the additional overhead of starting and stopping resources as well as handling the matchmaking and scheduling operations. Thus, for System III, only total user cost is compared to that of System I and System II, as there is no broker involved and thus no broker profit is accrued.|$|R
50|$|For example, if {{the economy}} is {{producing}} less than potential output, government spending {{can be used to}} employ <b>idle</b> <b>resources</b> and boost output. Government spending does not have {{to make up for the}} entire output gap. There is a multiplier effect that boosts the impact of government spending. For instance, when the government pays for a bridge, the project not only adds the value of the bridge to output, but also allows the bridge workers to increase their consumption and investment, which helps to close the output gap.|$|E
5000|$|OurGrid {{was mainly}} {{developed}} at the Federal University of Campina Grande (Brazil), which has run an OurGrid instance named [...] "OurGrid" [...] since December 2004. Anyone can freely and easily join it {{to gain access to}} large amount of computational power and run parallel applications. This computational power is provided by the <b>idle</b> <b>resources</b> of all participants, and is shared {{in a way that makes}} those who contribute more get more when they need. Currently, the platform can be used to run any application whose tasks (i.e. parts that run on a single machine) do not communicate among themselves during execution, like most simulations, data mining and searching.|$|E
5000|$|The book {{advocated}} activist {{economic policy}} by government to stimulate demand {{in times of}} high unemployment, for example by spending on public works. [...] "Let us be up and doing, using our <b>idle</b> <b>resources</b> to increase our wealth," [...] he wrote in 1928. [...] "With men and plants unemployed, it is ridiculous {{to say that we}} cannot afford these new developments. It is precisely with these plants and these men that we shall afford them." [...] Where the market failed to properly allocate resources, the government was required to stimulate the economy until private funds could start flowing again—a [...] "prime the pump" [...] kind of strategy designed to boost industrial production.|$|E
50|$|It avoids <b>idling</b> the {{computing}} <b>resources</b> with minute-by-minute {{manual intervention}} and supervision.|$|R
5000|$|It avoids <b>idling</b> the {{computing}} <b>resources</b> without minute-by-minute {{human interaction}} and supervision ...|$|R
50|$|In {{addition}} to resolving file system fragmentation, Diskeeper also prevents fragmentation before it happens by optimizing {{the process of}} data being written to disk. Diskeeper can also defragment files on-the-fly, using only <b>idle</b> system <b>resources</b> as needed.|$|R
50|$|Various factors {{explain the}} very high rate of {{economic}} development {{of the country in}} the 1950s and the general slowdown since the 1960s. During the reconstruction period after the Korean War, there were opportunities for extensive economic growth—attainable through the communist regime's ability to marshall <b>idle</b> <b>resources</b> and labor and to impose a low rate of consumption. This general pattern of initially high growth resulting in a high rate of capital formation was mirrored in other Soviet-type economies. Toward the end of the 1950s, as reconstruction work was completed and idle capacity began to diminish, the economy had to shift from the extensive to the intensive stage, where the simple communist discipline of marshaling underutilized resources became less effective. In the new stage, inefficiency arising from emerging bottlenecks led to diminishing returns. Further growth would only be attained by increasing efficiency and technological progress.|$|E
50|$|When a {{military}} coup in 1961 led by general Park Chung-hee overthrew the Democratic Party, the result was {{a military}} junta under the SCNR. During this time, the first national Five-Year Plan (1962-1966) was implemented, becoming an important factor in the Miracle on the Han River. It aimed to develop the nation's economy through expansion of agriculture and energy industries such as coal and electric power; development of basic industries such as chemical fertilizer, cement, oil refinery, iron, and steel; expansion of social overhead capital including roads, railways, and ports; full utilisation of <b>idle</b> <b>resources</b> including increased employment; conservation and utilisation of land; export promotion to improve the balance of payments; and promotion of science and technology. While this first Five-Year Plan did not bring about an immediately self-reliant economy, it brought a period of growth and modernization in preparation for long-term economic success and policy reform.|$|E
50|$|Foxton {{improves}} {{power efficiency}} {{at any given}} clock rate, {{but that is not}} the primary reason it was developed. Itanium 2 processors implement a wide microarchitecture, which has enormous computing capacity (theoretically capable of sustaining a throughput of six instructions per cycle). However, many software applications can not utilize all the available execution resources, lacking adequate instruction level parallelism. <b>Idle</b> <b>resources</b> mean lower transistor switching activity, thus lower overall power consumption. Because Itanium 2 maintains such a wide and capable architecture, the decrease in power consumption for average code execution can be substantial. Since modern MPUs clock rates are constrained by power, not filling out the power envelope translates to lost performance. Foxton takes advantage of this decrease by increasing clock frequencies to accelerate performance, while keeping total power consumption below specified thresholds. The result is a processor architecture that can dynamically optimize performance versus power consumption across a broad range of workloads.|$|E
30|$|The above example shows strong {{evidence}} {{of the importance of}} map service virtualization and its online resource management. Currently, our traditional TerraFly system is deployed on the 8 physical Reader Tier nodes and 2 Loader Tier nodes. It works well for supporting up to 800 concurrent users, and about 6 GB fresh data can be load each hour by the 2 Loader nodes (Refer to 4.3 Resource Model); but the system scalability is limited due to its fixed physical capacity. It cannot shift resources between Reader and Loader Tier s even when one tier has <b>idle</b> <b>resource</b> and another has insufficient resources. The inability of shifting resources between tiers results the waste of resources.|$|R
40|$|Should {{fiscal policy}} {{be used to}} fight recessions? Most economists would answer that, for normal {{economic}} ups and downs, business cycle stabilization {{should be left to}} monetary policy and that fiscal policy should focus on long-term goals. The main argument is that monetary policy can act quickly when output falls below an economy’s potential or when inflation varies from its optimal rate, and that these actions can be reversed quickly as conditions change. By contrast, modifications to the fiscal code {{take a long time to}} enact and implement and can be very difficult to undo. than one-for-one. For instance, since government spending is one component of GDP, an increase in government purchases, by putting <b>idle</b> <b>resource...</b>|$|R
40|$|One of {{the main}} goals of {{distributed}} systems is allowing <b>idle</b> processing <b>resources</b> to be utilized. To accomplish this, there must be mechanisms to distribute tasks across machines. We examine the task management mechanisms provided by several distributed operating systems, and analyze their e ectiveness. ...|$|R
5000|$|Also in 1931, Hayek critiqued Keynes's Treatise on Money (1930) in his [...] "Reflections on {{the pure}} theory of Mr. J. M. Keynes" [...] and {{published}} his lectures at the LSE in book form as Prices and Production. Unemployment and <b>idle</b> <b>resources</b> are, for Keynes, {{caused by a}} lack of effective demand; for Hayek, they stem from a previous, unsustainable episode of easy money and artificially low interest rates. Keynes asked his friend Piero Sraffa to respond. Sraffa elaborated on the effect of inflation-induced [...] "forced savings" [...] on the capital sector and about the definition of a [...] "natural" [...] interest rate in a growing economy. (Sraffa-Hayek debate) Others who responded negatively to Hayek's work on the business cycle included John Hicks, Frank Knight, and Gunnar Myrdal. [...] Kaldor later wrote that Hayek's Prices and Production had produced [...] "a remarkable crop of critics" [...] and that the total number of pages in British and American journals dedicated to the resulting debate [...] "could rarely have been equalled in the economic controversies of the past." ...|$|E
5000|$|The General Theory {{argues that}} demand, not supply, {{is the key}} {{variable}} governing the overall level of economic activity. Aggregate demand, which equals total un-hoarded income in a society, {{is defined by the}} sum of consumption and investment. In a state of unemployment and unused production capacity, one can only enhance employment and total income by first increasing expenditures for either consumption or investment. Without government intervention to increase expenditure, an economy can remain trapped in a low employment equilibrium - the demonstration of this possibility has been described as the revolutionary formal achievement of the work.The book advocated activist economic policy by government to stimulate demand in times of high unemployment, for example by spending on public works. [...] "Let us be up and doing, using our <b>idle</b> <b>resources</b> to increase our wealth," [...] he wrote in 1928. [...] "With men and plants unemployed, it is ridiculous to say that we cannot afford these new developments. It is precisely with these plants and these men that we shall afford them." ...|$|E
30|$|Workqueue with Replication (WQR) {{algorithm}} {{does the}} same as WQ [25]. However, {{when there are no}} more tasks to be executed and there are still <b>idle</b> <b>resources,</b> the tasks that are still running are replicated in these <b>idle</b> <b>resources,</b> i.e., they are also executed in these resources. When a task replica terminates, all its replicas are stopped. The idea is that when a task is replicated there is a chance that a replica is assigned to a faster node, thus augmenting the probability of a faster completion of the task.|$|E
5000|$|CSC's Rasmussen felt [...] "very dubious" [...] about TSS/360 {{and decided}} that his <b>idle</b> CSC <b>resources</b> should be put to use {{creating}} a [...] "credible time-sharing system for the S/360", which became known as CP-40. Project leader was Robert Creasy, {{who had been a}} CTSS programmer.|$|R
40|$|Data centers {{form the}} {{underpinnings}} {{of the global}} technology revolution that is cloud computing. There is enormous pressure for data center growth and expansion, to meet the computational demands of an increasingly digital world. With energy costs over-taking server costs in data centers, energy is fast becoming a significant bottleneck to data center scale-out. Further, the global data center energy footprint is growing {{to be a significant}} burden on the world’s energy resources. Yet energy is a signally ill-managed resource in most data centers; average data center energy efficiency is less than 50 %. With increasing industry awareness of the magnitude and urgency of this problem, many solutions are cropping up to combat each of the several sources of data center energy inefficiency. The objective of this dissertation is three-fold: First, we examine the causes of data center energy inefficiency from first principles, and identify the challenges involved in addressing them. We find two categories of energy inefficiency: <b>Idle</b> <b>resource</b> energy consumption, and support infrastructure energy consumption. Second, we present solu-tions to address each form of inefficiency. We describe two ways to combat <b>idle</b> <b>resource</b> energy consumption, and also present a systemic solution to tackle both forms of energy inefficiency. Finally, throughout this dissertation, we examine the related work and lit-erature, and attempt to map them into the solution space to identify how the solutions relate with each other, and what gaps remain to be addressed. The cloud has the potential to enable everything from ubiquitous computing and universal access to knowledge, to smart power grids, greater social connectivity, and near-infinite extensibility of compute/storage power. The cloud turns computation into a utility, and by doing so, has the potential to make it accessible to a much larger part of the world. This dissertation explores ways to enable sustainable scaling of the data centers that power the cloud and enable this vision...|$|R
40|$|Repetitive {{projects}} {{involve the}} repetition of activities along the stages of the project. Since the resources required to perform these activities move from one stage to the other, a main objective of scheduling these projects is to maintain the continuity of work of these resources so as to minimize the <b>idle</b> time of <b>resources.</b> This requirement, {{often referred to as}} work continuity constraints, involves a trade-off between total project duration and the <b>resource</b> <b>idle</b> time. The contribution of this paper is threefold. Firstly, we provide an extensive literature summary of the topic under study. Although most research papers deal with the scheduling of construction projects, we show that this can be extended to many other environments. Secondly, we propose an exact search procedure for scheduling repetitive projects with work continuity constraints. This algorithm iteratively shifts repeating activities further in time in order to decrease the <b>resource</b> <b>idle</b> time. We have embedded this recursive search procedure in a horizon-varying algorithm in order to detect the complete trade-off profile between <b>resource</b> <b>idle</b> time and project duration. The procedure has been coded in Visual C++ and has bee...|$|R
