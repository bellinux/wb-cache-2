163|0|Public
25|$|A 32-bit big <b>endian</b> integer, {{giving the}} number of entries in the table.|$|E
25|$|In CANopen, multi-byte {{parameters}} are always sent least significant byte first (little <b>endian).</b> The {{same is true}} for Ethernet Powerlink.|$|E
25|$|A set of 32-bit big <b>endian</b> integers. One {{for each}} symbol, {{recording}} the {{position within the}} archive of the header for the file containing this symbol.|$|E
25|$|Endianness is {{a problem}} when a binary file created on a {{computer}} is read on another computer with different endianness. Some CPU instruction sets provide native support for <b>endian</b> byte swapping, such as bswap (x86 - 486 and later), and rev (ARMv6 and later).|$|E
25|$|An {{example of}} the first case is the binary XLS file format that is {{portable}} between Windows and Mac systems and always little <b>endian,</b> leaving the Mac application to swap the bytes on load and save when running on a big-endian Motorola 68K or PowerPC processor.|$|E
25|$|Although most games {{depend on}} the use of DirectX APIs not {{available}} on Mac OS X (on either processor type), it should be easier to port OS-independent code, such as OpenGL, now that developers no longer have to resolve <b>endian,</b> and other ISA dependency issues associated with moving from x86 to PowerPC.|$|E
25|$|Many {{of these}} {{architectures}} can be switched via software to default {{to a specific}} <b>endian</b> format (usually done when the computer starts up); however, on some systems the default endianness is selected by hardware on the motherboard and cannot be changed via software (e.g. the Alpha, which runs only in big-endian mode on the Cray T3E).|$|E
25|$|Some {{architectures}} (including ARM versions 3 and above, PowerPC, Alpha, SPARC V9, MIPS, PA-RISC, SuperH SH-4 and IA-64) {{feature a}} setting {{which allows for}} switchable endianness in data fetches and stores, instruction fetches, or both. This feature can improve performance or simplify the logic of networking devices and software. The word bi-endian, when said of hardware, denotes the capability of the machine to compute or pass data in either <b>endian</b> format.|$|E
2500|$|This method {{also allows}} shellcode {{to be placed}} after the {{overwritten}} return address on the Windows platform. Since executables are mostly based at address 0x00400000 and x86 is a Little <b>Endian</b> architecture, the last byte of the return address must be a null, which terminates the buffer copy and nothing is written beyond that. This limits {{the size of the}} shellcode {{to the size of the}} buffer, which may be overly restrictive. DLLs are located in high memory (above 0x01000000) and so have addresses containing no null bytes, so this method can remove null bytes (or other disallowed characters) from the overwritten return address. Used in this way, the method is often referred to as [...] "DLL Trampolining".|$|E
5000|$|... uClibc runs on {{standard}} and MMU-less Linux systems. It supports i386, x86-64, ARM (big/little <b>endian),</b> AVR32, Blackfin, h8300, m68k, MIPS (big/little <b>endian),</b> PowerPC, SuperH (big/little <b>endian),</b> SPARC, and v850 processors.|$|E
5000|$|Behind the <b>Endian</b> Firewall is the Italian <b>Endian</b> Spa from Appiano, South Tyrol and a {{community}} of volunteer developers and helpers. The license model of <b>Endian</b> provides a commercial version and a free version: ...|$|E
5000|$|An {{architecture}} may use [...] "big" [...] or [...] "little" [...] endianness, or both, or be configurable to use either. Little <b>endian</b> processors order bytes {{in memory}} {{with the least}} significant byte of a multi-byte value in the lowest-numbered memory location. Big <b>endian</b> architectures instead order them with the most significant byte at the lowest-numbered address. The x86 architecture {{as well as several}} 8-bit architectures are little <b>endian.</b> Most RISC architectures (SPARC, Power, PowerPC, MIPS) were originally big <b>endian</b> (ARM was little <b>endian),</b> but many (including ARM) are now configurable.|$|E
5000|$|... suswapbytes Swap the bytes in SU data {{to convert}} data from big <b>endian</b> to little <b>endian</b> byte order, {{and vice versa}} ...|$|E
50|$|Numeric {{values in}} VOS are always big <b>endian,</b> {{regardless}} of the endianness of the underlying hardware platform. On little <b>endian</b> servers with x86 processors, the compilers do a byte swap before reading or writing values to memory to transform the data to or from the native little <b>endian</b> format.|$|E
5000|$|TIFF files {{begin with}} either [...] or [...] {{followed}} by 42 as a two-byte integer in little or big <b>endian</b> byte ordering. [...] is for Intel, which uses little <b>endian</b> byte ordering, so {{the magic number}} is [...] [...] is for Motorola, which uses big <b>endian</b> byte ordering, so the magic number is [...]|$|E
5000|$|Both {{the free}} <b>Endian</b> Firewall Community and the {{commercial}} <b>Endian</b> UTM Software are tailored for installation {{on your own}} hardware. The <b>Endian</b> Firewall Community is licensed under the GPL and is therefore open source software that can be downloaded for free. The community version does not include support and not all {{the features of the}} commercial version are available.|$|E
50|$|The file format, {{which is}} binary, uses 32-bit little <b>endian</b> format for all integer fields, and 32-bit binary IEEE 754 format for all {{floating}} point fields (also little <b>endian).</b>|$|E
5000|$|Contrary to {{that the}} ITU {{explicitly}} defined the byte order in its recommendations regarding G.726 or respectively ADPCM, but in two different ways. Recommendation X.420 states, that it shall be little <b>endian,</b> respecting recommendation I.366.2 Annex E it should be big <b>endian.</b> This led to contradicting decisions in various implementations, as some manufacturers opted for little <b>endian</b> and others for big <b>endian.</b> The consequence was, that these implementations were incompatible, as decoding using the wrong byte order results in a heavily distorted audio signal. Therefore the unclear definition was fixed by the RFC 3551, which replaces RFC 1890. Section 4.5.4 in RFC 3551 defines the classical MIME-types G726-16, 24, 32 and 40 as little <b>endian</b> and introduces new MIME types for bis <b>endian,</b> which are AAL2-G726-16, 24, 32 and 40. The payload type was changed to dynamic, {{in order to prevent}} confusion. Instead of payload type 2 a dynamic payload in the range from 96 to 127 shall be used: ...|$|E
50|$|The <b>Endian</b> Firewall {{includes}} {{support for}} load balancing, {{which means you}} can add another connection to the Internet from the red network; <b>Endian</b> Firewall then distributes the network load on both interfaces.|$|E
5000|$|AAC, AC3, ADPCM MICROSOFT, ADPCM YAMAHA, A-LAW, AMR NB, AMR WB, MP2, MP3, OPUS, Vorbis, WAV-PCM 16 little <b>endian,</b> WAV-PCM 16 little <b>endian,</b> WAV-PCM 24 Little-Endian, WAV-PCM U8, WMA V7, WMA V8 ...|$|E
5000|$|Newer {{implementations}} {{respect the}} RFC 3551 and clearly distinct between G726-xx (little <b>endian)</b> and AAL2-G726-xx (big <b>endian).</b> The Gigaset C610 IP DECT phone, e.g., generates the following code in its SIP INVITE: ...|$|E
50|$|<b>Endian</b> Firewall is an {{open-source}} router, firewall and gateway security Linux distribution {{developed by}} the South Tyrolean company <b>Endian.</b> The product is available as either free software, commercial software with guaranteed support services, or as a hardware appliance (including support services).|$|E
5000|$|<b>Endian</b> Firewall: Friendly {{refinement}} of IPCop {{with the aim}} to expand the software functions to create a comprehensive security gateway software. As with SmoothWall, <b>Endian</b> Firewall also includes features in the commercial version functions that are missing from the free community version.|$|E
5000|$|Unicode {{text files}} encoded in UTF-16 often {{start with the}} Byte Order Mark to detect endianness ( [...] for big <b>endian</b> and [...] for little <b>endian).</b> And on Microsoft Windows, UTF-8 text files often start with the UTF-8 {{encoding}} of the same character, [...]|$|E
5000|$|... memcpy {{will put}} 0x1010C042 (little <b>endian)</b> in My_Float value. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ ...|$|E
5000|$|Support for Unicode file names {{stored in}} UTF-16 little <b>endian</b> format.|$|E
50|$|In Oceania {{dates are}} most {{commonly}} {{written in the}} little <b>endian</b> form.|$|E
50|$|It {{provides}} a means for transforming data between different architectures and protocols, such as Big <b>Endian</b> to Little <b>Endian,</b> or EBCDIC to ASCII. This is accomplished {{through the use of}} message data exits. Exits are compiled applications that run on the queue manager host, and are executed by the IBM MQ software at the time data transformation is needed.|$|E
5000|$|... → dynamic {{payload type}} 96 and G.726 {{according}} to X.420, thus little <b>endian,</b> {{as defined in}} RFC 3551 → dynamic payload type 97 and G.726 according to I.366.2 Annex E, thus big <b>endian,</b> as defined in RFC 3551 [...] → static payload type 2 and G.726 with unpredictable endianness, like G.721 according to the deprecated RFC 1890 ...|$|E
5000|$|A 32-bit big <b>endian</b> integer, {{giving the}} number of entries in the table.|$|E
5000|$|Lack of {{portability}} across endianness (current release {{works only}} on little <b>endian</b> devices) ...|$|E
5000|$|In July 2005, the <b>Endian</b> {{firewall}} was OSDir elected Project of the Week.|$|E
5000|$|The {{main task}} of <b>Endian</b> Firewall is as a gateway, router and firewall, and {{can act as}} a proxy for web, email, FTP, SIP and DNS. Up to four {{different}} networks (dependent on the number of network cards installed in the host PC) are normally managed. Networks are configured through the web interface. With <b>Endian</b> these are differentiated by their color coding: ...|$|E
50|$|DTED data {{is stored}} in a big <b>endian</b> format where {{negative}} numbers are signed magnitude.|$|E
5000|$|External 64 KB little <b>endian</b> data {{space on}} certain models, {{including}} the Mega8515 and Mega162.|$|E
50|$|SlugOS/BE is the Big <b>Endian</b> {{version of}} the SlugOS {{alternative}} firmware for the Linksys NSLU2.|$|E
