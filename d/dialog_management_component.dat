0|1732|Public
40|$|We {{describe}} RavenClaw, a new <b>dialog</b> <b>management</b> framework {{developed as}} a successor to the Agenda [1] architecture used in the CMU Communicator. RavenClaw introduces a clear separation between task and discourse behavior specification, and allows rapid development of <b>dialog</b> <b>management</b> <b>components</b> for spoken <b>dialog</b> systems operating in complex, goal-oriented domains. The system development effort is focused entirely on the specification of the dialog task, while a rich set of domain-independent conversational behaviors are transparently generated by the dialog engine. To date, RavenClaw {{has been applied to}} five different domains allowing us to draw some preliminary conclusions as to the generality of the approach. We briefly describe our experience in developing these systems. 1...|$|R
40|$|The {{importance}} of <b>dialog</b> <b>management</b> systems {{has increased in}} recent years. Dialog systems are created for domain specific applications, so that a high demand for a flexible dialog system framework arises. There are two basic approaches for <b>dialog</b> <b>management</b> systems: a rule-based approach and a statistic approach. In this paper, we combine both methods and form a hybrid <b>dialog</b> <b>management</b> system in a scalable agent based framework. For deciding of the next dialog step, two independent systems are used: the Java Rule Engine (JESS) as expert system for rule-based solutions, and the Partially Observable Markov Decision Process (POMDP) as model-based solution for more complex dialog sequences. Using a speech recognizer and text-to-speech systems, the human can be guided through a dialog with approximately ten steps. Index Terms — <b>dialog</b> <b>management,</b> hybrid framework 1...|$|R
40|$|<b>Dialog</b> <b>management</b> is of {{particular}} importance in telephone-based services. In this paper we describe our recent activities in <b>dialog</b> <b>management</b> and natural language generation in the LIMSI RAILTEL system for access to rail travel information. The aim of LEMLAP project RAILTEL {{was to assess the}} capabilities of spoken language technology for interactive telephone information services. Because all interaction is over the telephone, oral <b>dialog</b> <b>management</b> and response generation are very important aspects of the overall system design and usability. Each dialog is analysed to determine the source of any errors (speech recognition, understanding, information retreival, processing, or <b>dialog</b> <b>management).</b> An analysis is provided for 100 dialogs taken from the RAILTEL field trials with naive subjects accessing timetable information. 1. INTRODUCTION The LE-MLAP project RAILTEL "Railway Telephone Information Service" aimed to evaluate spoken language technology in the context of interactive voi [...] ...|$|R
40|$|This paper {{proposes a}} method to model {{confirmation}}s for example-based <b>dialog</b> <b>management.</b> To enable the system to provide a confirmation to the user in an appropriate time, we employed a multiple dialog state representation approach for keeping track of user input uncertainty and implemented a confirmation agent which decides when the information ga-thered from the user contains an error. We developed a car navigation dialog system to evaluate our proposed method. Evaluations with simulated dialogs show our approach is useful for handling misunderstanding errors in example-based <b>dialog</b> <b>management.</b> Index Terms — <b>dialog</b> <b>management,</b> <b>dialog</b> modeling, spoken dialog system, confirmation dialogs 1...|$|R
40|$|Spoken <b>dialog</b> <b>management</b> {{remains one}} of the most {{challenging}} topics in natural language processing (NLP) and artificial intelligence (AI). There are various different spoken <b>dialog</b> <b>management</b> theories (Cole et al., 1997; Pieraccine and Huerta, 2005) and models (e. g. Figure 1. 1), but there’s no unified programming language and framework to describe and represent all of them. Traditional programming languages...|$|R
40|$|We outline {{a set of}} key {{challenges}} for <b>dialog</b> <b>management</b> in physically situated interactive systems, and propose a core shift in perspec-tive that places spoken dialog {{in the context of}} the larger collaborative challenge of managing parallel, coordinated actions in the open world. Multiple models for <b>dialog</b> <b>management</b> have been proposed, studied, and evaluated in the research community (i. a. Allen et al, 2001; Bohus and Rud...|$|R
40|$|This {{paper has}} been {{developed}} to draw a comparison between various available approaches for dialogue management. Currently there is much interest in building interactive human-computer interfaces which involve spoken input and output. Spoken dialogue system usually combines speech recognition with natural language understanding, language generation and dialogue <b>management.</b> <b>Dialog</b> systems are created for domain specific applications, so that a high demand for a flexible dialog system framework arises. There have been several approaches to <b>dialog</b> <b>management.</b> In this paper we present three different approaches to the <b>dialog</b> <b>management...</b>|$|R
5000|$|A similar {{approach}} is taken in TRIPS (a DS for multi-agent collaborative problem solving). They split the <b>dialog</b> <b>management</b> into several modules: ...|$|R
40|$|My {{research}} interests are: {{the use of}} semantic annotations and relation detection in answer selection for dialog systems, integration of answer-selection using logical deduction present in question-answering systems in dialog systems, {{the maintenance of the}} context in question-answering systems in order to simulate <b>dialog</b> <b>management</b> systems, application of transaction logic (as a logic of state changes) and flogic (frames+rules) in <b>dialog</b> knowledge <b>management,</b> automatic generation of information utility functions for ranking slots in frames for dialog systems, and the creation of voice portals as <b>dialog</b> <b>management</b> systems. 1. 1 Past, Current and Future Work My research so far has focused on logical formalisms for <b>dialog</b> <b>management</b> using plan-based approaches (Fodor, Huerta, 2006), standardization of <b>dialog</b> <b>management</b> markup languages and architectures for voice portals (Fodor, Huerta 2005, Fodor, 2006), <b>dialog</b> <b>management</b> approaches for decision processes (Fodor, 2007), and the use of semantic annotations and relation detection in answer selection for dialog systems. SmartKom (Lockelt, 2004), TRINDIKIT (Larsson and Traum, 2000) showed that real dialog systems can be successfully developed over artificial intelligence planning techniques. This requires the conversation acts to be defined like any other planning action with preconditions and effects on the internal state (i. e. context of the conversation). Many times these dialogue systems do not leverage powerful artificial intelligence deduction systems or their logical formalisms were too simple to represent complex preconditions and effects. In (Fodor, Huerta, 2006) we developed a dialog system over Flora 2 system to allow definition of complex types, default negation and quantifiers (universal and existential) over the expressions in the preconditions and the effects of the dialog acts...|$|R
50|$|This {{may help}} authors re-use general rules for <b>dialog</b> <b>management</b> rules, based on dialog theories. DSs {{developed}} with TrindiKit include: GoDiS, MIDAS, EDIS and SRI Autorate.|$|R
40|$|This paper {{discusses}} {{development of}} a multi-domain conversational dialog system for simultaneously managing chats and goal-oriented dialogs. In this paper, we present a UMDM (Unified Multi-domain Dialog Manager) using a novel example-based <b>dialog</b> <b>management</b> technique. We have developed an effective utterance classifier with linguistic, semantic, and keyword features for domain switching and an example-based dialog modeling technique for domain-portable dialog models. Our experiments show that our approach is very useful and effective in multi-domain dialog system. Index Terms — <b>dialog</b> <b>management,</b> multi-domain <b>dialog</b> system, domain spotter, example-based dialog modeling 1...|$|R
5000|$|VoiceXML has tags that {{instruct}} the voice browser to provide speech synthesis, automatic speech recognition, <b>dialog</b> <b>management,</b> and audio playback. The {{following is an}} example of a VoiceXML document: ...|$|R
40|$|A {{field of}} spoken dialog systems is {{a rapidly growing}} {{research}} area because the performance improvement of speech technologies motivates the possibility of building systems that a human can easily operate in order to access useful information via spoken languages. Among the components in a spoken dialog system, the <b>dialog</b> <b>management</b> plays major roles such as discourse analysis, database access, error handling, and system action prediction. This survey covers design issues and recent approaches to the <b>dialog</b> <b>management</b> techniques for modeling the dialogs. We also explain the user simulation techniques for automatic evaluation of spoken dialog systems...|$|R
40|$|There {{are many}} task-oriented dialog systems, {{but few of}} them can cope with the {{issues such as the}} multiple-topic issue, the topic {{changing}} issue, the information sharing among different topics, and the difference in importance for different information items. To provide efficient solutions, a plan-based <b>dialog</b> <b>management</b> structure named Topic Forest is proposed, which makes the mixed-initiative dialog control easier. The Topic Forest based reasoning engine with a certain strategy for both remembering and forgetting is also described. The reasoning strategy is designed to be domain-independent; therefore it makes the <b>dialog</b> <b>management</b> model easy to be ported to any other different domains. 1...|$|R
40|$|The AIML {{language}} was created {{with a goal}} of authoring of simple chat bots. Therefore it lacks some {{of the features of}} advanced dialog systems. One of them is the support for <b>dialog</b> <b>management,</b> which is beneficial in many applications that the language has already spread into due to its popularity. This thesis solves the problem of <b>dialog</b> <b>management</b> implementation in pure AIML by using the augmented transition networks in design and code generation. It results in a development environment that supports the chosen solution, thus facilitating the design of more complex bots, while maintaining compatibility with standard interprets...|$|R
40|$|DoctorA generic <b>dialog</b> <b>management</b> {{framework}} {{has been}} extensively required to build various spoken dialog systems in the real world. This dissertation proposes an example-based approach for a generic <b>dialog</b> <b>management</b> framework in the spoken dialog systems. The basic idea {{of this approach is}} to find the most similar example given the current dialog state using heuristic similarity functions. This approach has been applying to implement multiple applications such as car navigation, weather information, TV program guidance, and chatbot for both information access and entertainment. Moreover, we desgiend and implemented a multi-domain dialog system based on this approach to simultaneously manage task-oriented and chat dialogs. In practice, traditional spoken dialog systems have still difficulty selecting which action to take in a given situation because recognition and understanding errors are prevalent due to noise and unexpected inputs. To solve this problem, this dissertation also presents a hybrid approach to improving the robustness of the example-based dialog model by using agenda-based <b>dialog</b> <b>management</b> techniques. Given the agenda graph and multiple recognition hypotheses, the system can predict the next action to maximize multi-level score functions and trigger error recovery strategies to handle exceptional cases due to misunderstandings or unexpected focus shifts. The proposed methods were tested by developing a spoken dialog system for a building guidance domain in an intelligent robot. This system was then evaluated by simulated and real users. The experimental results show that our methods can effectively develop robust <b>dialog</b> <b>management</b> for spoken <b>dialog</b> systems...|$|R
5000|$|ChatScript is a {{combination}} [...] Natural Language engine and [...] <b>dialog</b> <b>management</b> system designed initially for creating chatbots, but is currently also used for various forms of NL processing. It is written in C++. The engine is an open source project at SourceForge. and GitHub.|$|R
40|$|In {{this paper}} we {{describe}} a statistical shared plan-based approach to dialog modeling and <b>dialog</b> <b>management.</b> We apply {{this approach to}} a corpus of human-human spoken dialogs. We compare the performance of models trained on transcribed and automatically recognized speech, and present ideas for further improving the models. 1...|$|R
40|$|We {{show that}} partial {{evaluation}} can be usefully {{viewed as a}} programming model for realizing mixed-initiative functionality in interactive applications. Mixed-initiative interaction between two participants is one where the parties can take turns at any time to change and steer the flow of interaction. We concentrate on the facet of mixed-initiative referred to as `unsolicited reporting' and demonstrate how out-of-turn interactions by users can be modeled by `jumping ahead' to nested dialogs (via partial evaluation). Our approach permits the view of <b>dialog</b> <b>management</b> systems {{in terms of their}} native support for staging and simplifying interactions; we characterize three different voice-based interaction technologies using this viewpoint. In particular, we show that the built-in form interpretation algorithm (FIA) in the VoiceXML <b>dialog</b> <b>management</b> architecture is actually a (well disguised) combination of an interpreter and a partial evaluator...|$|R
40|$|The {{quality and}} the {{efficiency}} of all the activities developed {{in the field of}} the social <b>dialog</b> <b>management</b> are dependent, in great measure by the quality of the communications relations between the involved actors. The increase {{of the importance of the}} social dialog is reflected at the level of hundreds of multicultural companies that try to develop a new type of management - the one that has the capacity and the ability of orqestrating the productive combination of individuals and of the efficient functioning within these new cultures. In planning a communications process which is destined to a international auditorium we must analyze every component of this with the purpose of pushing away every barrier of background noise that would alter the desired results. social <b>dialog</b> <b>management,</b> negotiation, formal structure, informal structure...|$|R
5000|$|Providing <b>dialog</b> box <b>management</b> (short-cut keys, tab key processing) ...|$|R
40|$|Modeling user {{interfaces}} as dialogs provides a conceptual frame-work to address global coherence {{and efficiency of}} interactions. While non-probabilistic approaches provide convincing results and transpar-ent dialog behavior, probabilistic techniques can help to account for inherent uncertainties in user input. In this paper, we present three patterns for probabilistic <b>dialog</b> <b>management</b> or support thereof. ...|$|R
40|$|The {{emergence}} of smart devices and {{recent advances in}} spoken language technology are currently extending the use of conversational interfaces and spoken interaction to perform many tasks. The <b>dialog</b> <b>management</b> task of a conversational interface consists of selecting the next system response considering the user's actions, the dialog history, {{and the results of}} accessing the data repositories. In this paper we describe a <b>dialog</b> <b>management</b> technique adapted to multi-task conversational systems. In our proposal, specialized dialog models are used to deal with each specific subtask of dialog objective for which the dialog system has been designed. The practical application of the proposed technique to develop a dialog system acting as a customer support service shows that the use of these specialized dialog models increases the quality and number of successful interactions with the system in comparison with developing a single dialog model...|$|R
40|$|IWSDS 2010 : the 2 nd International Workshop on Spoken Dialogue Systems Technology, October 1 - 2, 2010, Gotemba, Japan. We {{proposed}} a weighted finite-state transducer-based dialog manager (WFSTDM) {{which was a}} platform for expandable and adaptable dialog systems. In this platform, all rules and/or models for <b>dialog</b> <b>management</b> (DM) are expressed in WFST form, and the WFSTs are used to accomplish various tasks via multiple modalities. With this framework, we constructed a statistical dialog system using the user concept and system action tags which were acquired from an annotated corpus of human-to-human spoken dialogs as input and output labels of the WFST. We introduced a spoken language understanding (SLU) WFST for converting user utterances to user concept tags, a dialog scenario WFST for converting user concept tags to system action tags and a sentence generation (SG) WFST for converging system action tags to system utterances. The tag sequence probabilities of the dialog scenario WFST were estimated by using a spoken dialog corpus for hotel reservation. The SLU, scenario and SG WFSTs were then composed to be a <b>dialog</b> <b>management</b> WFST which determines the next action of the system responding to the user input. In our previous research, we evaluated the dialog strategy by referring to the manual transcription. Then in this paper, we present the performance of WFSTDM when speech recognition hypotheses are input. To alleviate degradation of the DM performance caused by speech recognition errors, we expand the WFSTDM for handling multiple hypotheses of speech recognition and confidence score which indicate acoustic and linguistic reliability of speech recognition. We also evaluated the accuracy of SLU results and the correctness of system actions selected by the <b>dialog</b> <b>management</b> WFST. We confirmed that the performance of <b>dialog</b> <b>management</b> was enhanced by choosing the optimal action among all the WFST paths for multiple hypotheses (N-best) of speech recognition in consideration of confidence score...|$|R
40|$|This {{paper is}} {{organized}} as follows. We first introduce our VSA system briey. Then we consider {{what is a}} cooperative response in the dialog of guidance tasks. In section 4, we describe a <b>dialog</b> <b>management</b> system (DMS) with a learning module. Experimental results shown in section 5 prove the capability and characteristics of our learning mechanism...|$|R
40|$|In this paper, we {{describe}} {{the evaluation of the}} <b>dialog</b> <b>management</b> and response generation strategies being developed for retrieval of touristic information, selected as a common domain for the ARC AUPELF-B 2 action. A large number of spoken dialog systems {{have been reported in the}} literature making use of different strategies for <b>dialog</b> <b>management.</b> Comparing and evaluating different strategies is a difficult task, which often remains unexplored, because in most cases evaluation approaches require a unified database structure and efficient integration of data from several disparate sources and forms. To avoid this problem, we implemented two dialog strategy versions within the same general platform. We investigate qualitative and quantitative criteria for evaluation of these dialog control strategies: in particular, by testing the efficiency of our system with and without automatic mechanisms for guiding the user via suggestive prompts. An evaluation phase has been carried out to assess [...] ...|$|R
40|$|In {{this paper}} we {{describe}} a systematic approach {{for creating a}} <b>dialog</b> <b>management</b> system based on a Construct Algebra, a collection of relations and operations on a task representation. These relations and operations are analytical components for building higher level abstractions called dialog motivators. The dialog manager, consisting {{of a collection of}} dialog motivators, is entirely built using the Construct Algebra. 1 INTRODUCTION The dialog manager described in this paper implements a novel approach to the problem of <b>dialog</b> <b>management.</b> There are three major contributions: the task knowledge representation, a Construct Algebra and a collection of dialog motivators. The task knowledge representation exploits object-oriented paradigms. The dialog motivators provide the dialog manager with the dialog strategies that govern its behavior. The Construct Algebra provides the building blocks needed to create new dialog motivators and analyze them. The first main component of this dialog m [...] ...|$|R
40|$|In {{this paper}} we {{describe}} a systematic approach {{for creating a}} <b>dialog</b> <b>management</b> system based on a Construct Algebra, a collection of. relations and operations on a task representation. These relations and operations are analytical components for building higher level abstractions called dialog motivators. The dialog manager, consisting {{of a collection of}} dialog motivators, is entirely built using the Construct Algebra. ...|$|R
40|$|In this paper, we {{describe}} technology and experience with an experimental personal information manager, which {{interacts with the}} user primarily but not exclusively through speech recognition and synthesis. This device, which controls a client PDA, {{is known as the}} Personal Speech Assistant (PSA). The PSA contains complete speech recognition, speech synthesis and <b>dialog</b> <b>management</b> systems. Packaged in a hand-sized enclosure, of size and physical design to mate with the popular Palm III personal digital assistant, the PSA includes its own battery, microphone, speaker, audio input and output amplifiers, processor and memory. The PSA supports speaker-independent English speech recognition using a 500 -word vocabulary, and English speech synthesis on an arbitrary vocabulary. We survey the technical issues we encountered in building the hardware and software for this device, and the solutions we implemented, including audio system design, power and space budget, speech recognition in adverse acoustic environments with constrained processing resources, <b>dialog</b> <b>management,</b> appealing applications, and overall system architecture. 1...|$|R
40|$|The {{development}} of task-oriented spoken language dialog system requires expertise in multiple domains including speech recognition, natural spoken language understanding and generation, <b>dialog</b> <b>management</b> and speech synthesis. The dialog manager {{is the core}} of a spoken language dialog system, and makes use of multiple knowledge sources. In this contribution we report on our methodology for developing and testing different strategies for <b>dialog</b> <b>management,</b> drawing upon our experience with several travel information tasks. In the LIMSI ARISE system for train travel information we have implemented a 2 -level mixedinitiative dialog strategy, where the user has maximum freedom when all is going well, and the system takes the initiative if problems are detected. The revised dialog strategy and error recovery mechanisms have resulted in a 5 - 10 % increase in dialog success depending upon the word error rate. INTRODUCTION The dialog manager {{is the core of}} a spoken language dialog system (SLDS). [...] ...|$|R
40|$|We {{propose a}} dialog system that creates {{responses}} {{based on a}} large-scale dialog corpus retrieved from Twitter and real-time crowdsourcing. Instead of using complex <b>dialog</b> <b>management,</b> our system replies with the utterance from the database that is most similar to the user input. We also propose a realtime crowdsourcing framework for handling the case {{in which there is}} no adequate response in the database. ...|$|R
40|$|Abstract—The paper {{discusses}} {{the benefits of}} metacognitive guidance for a natural language dialog agent. These capabilities may be included directly in the agent or through a general purpose external module. We report on the specific case of handling pause time in dialog, using a metacognitive loop within the agent, and discuss future experiments implementing guidance for this example also using the general module. Keywords-metacognition; <b>dialog</b> <b>management</b> I...|$|R
40|$|Dialog man_ggetnent {{addresses}} two specific problems: (l) {{providing a}} coherent overall structure to interaction that {{extends beyond the}} single turn, (2) correctly managing mixedinitiative interaction. We propose a <b>dialog</b> <b>management</b> architecture based on the following elements: handlers that manage interaction focussed on tightly coupled sets of information, a product that reflects mutually agreed-upon information and an agenda that orders the topics relevant to task completion...|$|R
40|$|Abstract. The {{main goal}} of <b>dialog</b> <b>management</b> {{is to provide}} all {{information}} needed to perform e. g. a SQL-query, a navigation task, etc. Two principal approaches for <b>dialog</b> <b>management</b> systems exist: system directed ones and mixed-initiative ones. In this paper, we combine both approaches mentioned above in a novel way, and {{address the problem of}} natural intuitive <b>dialog</b> <b>management.</b> The objective of our approach is to provide a natural dialog flow. The whole dialog is therefore represented in a finite state machine: the information gathered during the dialog is represented in the states of the finite state machine; the transitions within the state machine denote the dialog steps into which the dialog is separated. The information is obtained from each natural spoken sentence by hierarchical decoding into tags, e. g. the name-tag and the address-tag. These information tags are gathered during the dialog; either by human initiative or by distinct questioning by the dialog manager. The models use information from the semantic information tags, the dialog history, and the training corpus. From all these integrated parts we achieve the best path {{to the end of the}} dialog by Viterbi decoding through the transition network after each information step. From the Air Travel Information System (ATIS) database, we extract all 21650 naturally spoken questions and the SQL-queries as answers for the trainings phase. The experiments have been realized on 200 automatically generated dialog sentences. The system obtains the semantic information in all test-sentences and leads the dialogs successfully to the end. In 66. 5 % of the sample dialogs we achieve the minimum of the required dialog steps. Hence, 33. 5 % of the dialogs have over-length...|$|R
40|$|Abstract—The {{development}} of Web applications based on Service Oriented Architectures (SOA) is {{challenged by the}} lack of support to the specification of explicit context adaptation policies. As an answer to this issue, we present the Context Aware Workflow Execution framework (CAWE), which enriches SOA with (a) context-aware workflow management; (b) <b>dialog</b> <b>management</b> capabilities supporting the adaptation of the interaction with the individual user, and (c) context-dependent User Interface generation. I...|$|R
40|$|Various {{knowledge}} {{sources are}} used for spoken dialog systems such as task model, domain model, and agenda. An agenda graph {{is one of the}} knowledge sources for a <b>dialog</b> <b>management</b> to reflect a discourse structure. This paper proposes a clustering and linking method to automatically construct an agenda graph from human-human dialogs. Preliminary evaluation shows our approach would be helpful to reduce human efforts in designing prior knowledge. ...|$|R
