4|14|Public
5|$|Also, {{after the}} <b>device</b> <b>descriptor</b> is retrieved, the host will perform another control {{transfer}} exchange, but instead {{to set the}} address of the USB device to a new ADDRx.|$|E
50|$|The Unit Control Block (UCB) {{for each}} device {{points to a}} <b>Device</b> <b>Descriptor</b> Table (DDT), which {{identified}} routines needed for device dependent processing, e.g., handling of Attention interrupts, appending of RESERVE CCWs, appending of Set File Mask and Seek.|$|E
5000|$|Application {{software}} opens a CAN <b>device</b> <b>descriptor</b> {{and gets}} back a file descriptor. Using this file descriptor standard operating system functions like [...] and [...] {{are used to}} exchange CAN frames with other CAN nodes on a CAN bus.|$|E
5|$|This {{allows the}} host to perform bus {{management}} action like enumerating new USB devices via retrieving the new <b>device</b> <b>device</b> <b>descriptors.</b> Retrieval of the <b>device</b> <b>descriptors</b> would especially allow {{for determining the}} USB Class, VID, and PID, which are often used for determining the correct USB driver for the device.|$|R
40|$|Many {{studies have}} been {{conducted}} in order to develop systems that respond to user goals in domotic environments. These systems generally offer predefined scenarios corresponding to general goals and enable users to select those they want to trigger. We claim that such behaviors cannot be hardwired: user scenario definition should be supported. In this article, we propose the specification of a component-based domotic system that tackles this issue. This system offers users high level Guis to define their own scenarios from functionalities of the devices detected in the environment. These scenarios are automatically implemented: components are generated from <b>device</b> <b>descriptors,</b> assembled and the resulting software is run. ...|$|R
50|$|Resources {{other than}} memory, such as network sockets, {{database}} handles, user interaction windows, and file and <b>device</b> <b>descriptors,</b> are not typically handled by garbage collection. Methods used to manage such resources, particularly destructors, may suffice to manage memory as well, leaving {{no need for}} GC. Some GC systems allow such other resources {{to be associated with}} a region of memory that, when collected, causes the other resource to be reclaimed; this is called finalization. Finalization may introduce complications limiting its usability, such as intolerable latency between disuse and reclaim of especially limited resources, or a lack of control over which thread performs the work of reclaiming.|$|R
40|$|International audienceMany {{studies have}} been {{conducted}} in order to develop systems that respond to user requirements in domotic environments. These systems generally offer predefined scenarios corresponding to general requirements and enable users to select those he/she wants to trigger. We claim that such behaviors cannot be hardwired: user scenario definition should be supported. In this article, we propose the specification of a component-based domotic system that tackles this issue. This system automatically detects available devices in the environment and offers users high level Guis to define their own scenarios from functionalities of the detected devices. These scenarios are then automatically implemented by the system: components are generated from <b>device</b> <b>descriptors,</b> assembled as prescribed by the scenarios and the resulting software is run by a rule execution engin...|$|R
40|$|The FT 200 XD is a USB to I 2 C {{interface}} {{with the following}} advanced features: Single chip USB to I 2 C interface. Up to 3. 4 MHz, high speed mode, I 2 C supported Entire USB protocol handled on the chip. No USB specific firmware programming required. Fully integrated 2048 byte multi-time-programmable (MTP) memory storing <b>device</b> <b>descriptors</b> and CBUS I/O configuration. Fully integrated clock generation with no external crystal required plus optional clock output selection enabling a glue-less interface to external MCU or FPGA. 512 byte receive buffer and 512 byte transmit buffer utilising buffer smoothing technology to allow for high data throughput. FTDI’s royalty-free Virtual Com Port (VCP) and Direct (D 2 XX) drivers eliminate the requirement for USB driver development in most cases. Unique USB FTDIChip-ID ™ feature. Configurable CBUS I/O pin. Transmit and receive LED drive signals...|$|R
40|$|Abstract: The “UPCARE ” {{model was}} {{developed}} {{as a tool to}} help reporters or investigators describe and analyze medical device use problems. It is also intended to serve as a structured repository for additional information on use problems. The content and structure was developed from discussions with nurses (various specialty areas), and biomedical engineers, and was further supported by analyses of known use problems with medical and non-medical <b>devices.</b> Key <b>descriptors</b> from these interviews were incorporated into the model if they provided useful and accurate information while still being applicable to more than a single device or device type. 1...|$|R
40|$|The FT 240 X is a USB to {{parallel}} FIFO {{interface with}} the following advanced features: Single chip USB to parallel FIFO bidirectional data transfer interface. Entire USB protocol handled on the chip. No USB specific firmware programming required. Fully integrated 2048 byte multi-time-programmable (MTP) memory, storing <b>device</b> <b>descriptors</b> and FIFO I/O configuration. Fully integrated clock generation with no external crystal required plus optional clock output selection enabling glue-less interface to external MCU or FPGA. Data transfer rates up to 1 Mbyte / second. 512 byte receive buffer and 512 byte transmit buffer utilising buffer smoothing technology to allow for high data throughput. FTDI’s royalty-free Virtual Com Port (VCP) and Direct (D 2 XX) drivers eliminate the requirement for USB driver development in most cases. Configurable FIFO interface I/O pins. Synchronous and asynchronous bit bang interface options. USB Battery Charger Detection. Allows for USB peripheral devices to detect {{the presence of a}} higher power source to enable improved charging. Device supplied pre-programmed with unique USB serial number. USB Power Configurations; supports bus- powered, self-powered and bus-powered with power switching. Integrated + 3. 3 V level converter for USB I/O. True 3. 3 V CMOS drive output and TTL input; operates down to 1 V 8 with external pull-ups. Tolerant of 5 V input. Configurable I/O pin output drive strength; 4 mA(min) and 16 mA(max). Integrated power-on-reset circuit. Fully integrated AVCC supply filtering- no external filtering required...|$|R
40|$|The FT 245 R is a USB to {{parallel}} FIFO {{interface with}} the following advanced features: Single chip USB to parallel FIFO bidirectional data transfer interface. Entire USB protocol handled on the chip. No USB specific firmware programming required. Fully integrated 1024 bit EEPROM storing <b>device</b> <b>descriptors</b> and FIFO I/O configuration. Fully integrated USB termination resistors. Fully integrated clock generation with no external crystal required. Data transfer rates up to 1 Mbyte / second. 128 byte receive buffer and 256 byte transmit buffer utilising buffer smoothing technology to allow for high data throughput. FTDI‟s royalty-free Virtual Com Port (VCP) and Direct (D 2 XX) drivers eliminate the requirement for USB driver development in most cases. Unique USB FTDIChip-ID ™ feature. Configurable FIFO interface I/O pins. Synchronous and asynchronous bit bang interface options. Device supplied pre-programmed with unique USB serial number. Supports bus powered, self powered and high-power bus powered USB configurations. Integrated + 3. 3 V level converter for USB I/O. Integrated level converter on FIFO interface for interfacing to external logic running at between + 1. 8 V and + 5 V. True 5 V/ 3. 3 V/ 2. 8 V/ 1. 8 V CMOS drive output and TTL input. Configurable I/O pin output drive strength. Integrated power-on-reset circuit. Fully integrated AVCC supply filtering- no external filtering required. + 3. 3 V (using external oscillator) to + 5. 25 V (using internal oscillator) Single Supply Operation. Low operating and USB suspend current. Low USB bandwidth consumption. UHCI/OHCI/EHCI host controller compatible. USB 2. 0 Full Speed compatible. - 40 °C to 85 °C extended operating temperature range...|$|R
5000|$|GEM {{provides}} an API with explicit memory management primitives. Through GEM, a user space program can create, handle and destroy memory objects {{living in the}} GPU's video memory. These objects, called [...] "GEM objects", are persistent from the user space program's perspective, and don't need to be reloaded every time the program regains control of the GPU. When a user space program needs a chunk of video memory (to store a framebuffer, texture or any other data required by the GPU), it requests the allocation to the DRM driver using the GEM API. The DRM driver keeps track of the used video memory, {{and is able to}} comply with the request if there is free memory available, returning a [...] "handle" [...] to user space to further refer the allocated memory in coming operations. GEM API also provides operations to populate the buffer and to release it when it is not needed anymore. Memory from unreleased GEM handles gets recovered when the user space process closes the DRM <b>device</b> file <b>descriptor</b> [...] - intentionally or because it terminates.|$|R
40|$|Approved {{for public}} release, {{distribution}} is unlimitedThis thesis presents Concept of Operations (CONOPS) for two specific automated language translation (ALT) devices, the P 2 Phraselator and the Voice Response Translator (VRT). The CONOPS for each device are written as Appendix A and Appendix B respectively. The {{body of the}} thesis presents a broad introduction to {{the present state of}} ALT technology for the reader who is new to the general subject. It pursues this goal by introducing the human language translation problem followed by nine characteristic descriptors of ALT technology devices to provide a basic comparison framework of existing technologies. The premise is that ALT technology is presently in a state where it is tackled incrementally with various approaches. Two tables are provided that illustrate six commercially available <b>devices</b> using the <b>descriptors.</b> A scenario is then described in which the author observed the two subject ALT devices (depicted in the CONOPS in the Appendices) being employed within an international military exercise. Some unique human observations {{associated with the use of}} these devices in the exercise are discussed. A summary is provided of the Department of Defense (DOD) process that is exploring ALT technology devices, specifically the Language and Speech Exploitation Resources (LASER) Advanced Concept Technology Demonstration ACTD. Lieutenant Commander, United States Nav...|$|R
40|$|The ongoing MPEG {{standardization}} of Compact Descriptors for Visual Search (CDVS) focuses on image search for mobile applications {{and in that}} process, the extraction of local descriptors constitutes an important step. These local descriptors extracted from an image are further aggregated into global descriptors that are used for efficient retrieval of matching images from a database for a given query image. Current CDVS Test Model (TM) implements the global descriptor using the uncompressed Scale Invariant Feature Transform (SIFT) points. At the mobile <b>devices,</b> the global <b>descriptor</b> (GD) is computed as the quantized Fisher Vector of up to 300 SIFT points w. r. t a SIFT space Gaussian Mixture Model (GMM). It is noted that such an approach requires significant overhead in communication to transmit the global descriptor, especially at low bit rate. Hence, we propose an alternative and efficient way to re-construct the global descriptor from the local descriptors at the server side. The difference between the reconstructed GD and the original GD, are then selectively coded {{to strike a balance}} between bit rate cost and performance. The experiments on CDVS datasets shows around 0. 5 % increase in true positive rate and 1 % decrease in false positive rate. Index Terms — compact visual descriptor, global descriptor, mobile visual searc...|$|R
40|$|In dense urban areas, {{collisions}} involving pedestrians {{and vehicles}} present a significant challenge for public health. Achieving pedestrian safety is complicated because countless intersection roadway characteristics—traffic control devices, roadway geometry, and sociodemographic and behavioral decision-making—can influence pedestrian-vehicle collisions (PVCs). In the past, {{studies have examined}} influences of multiple roadway, sociodemographic, and built environment factors on PVCs. Few studies, however, specifically examine relationships, ‘at’ or ‘near’ intersections, where pedestrian collisions frequently occur. This study measures the influences of multiple intersection roadway characteristics—including various built environment, traffic control <b>devices,</b> and sociodemographic <b>descriptors</b> of neighborhoods surrounding the intersection sites—on pedestrian-vehicle collisions (PVCs) in Washington D. C. from 2010 to 2014. Using collision and roadway attribute data sets obtained from the Metropolitan Police Department of the District of Columbia, the District Department of Transportation, and the U. S. Census, this study consisted of four stages of analysis: 1. archival review of all PVCs, 2. spatial mapping, 3. negative binomial regression modeling, and 4. field observations of seven intersections with {{the highest number of}} PVCs over pedestrian demand index (PDI). Findings include some significant relationships between multiple intersection roadway characteristics and PVCs. Based on the findings of this analysis, some countermeasures—such as updating the PDI annually, extending the sidewalks, and increasing the number of streetlights, area of sidewalk, and raised crosswalks—are recommended to enhance pedestrian safety at roadway intersections...|$|R
40|$|The {{driving force}} of {{synthetic}} biology is the desire to build programmable cellular systems de novo modeled on their natural counterparts. To achieve this, environmental signals must be sensed and integrated to generate an appropriate output. Sensors and actuators can be created according to naturally occurring riboswitches. The implementation of systems that can process many inputs initially requires {{the availability of the}} corresponding sensor domains, called aptamers. Many of the currently used synthetic riboswitches rely on only a handful of ligands as their external input. It is therefore desirable to expand the toolbox by adding other ligand specificities. Harnessing the potential of in vitro selected aptamers to function as in vivo regulators in yeast, the current literature was screened for suitable synthetic and natural aptamers. Candidates were then assayed for their ability to reduce reporter gene expression at the translational level in presence of their cognate ligands, essentially functioning as a roadblock to the scanning ribosome in the 5 ’-UTR. The results revealed a wide range of basal expressions, but no switching phenotypes. Since the aptamers had not been adapted to the expression system, the results confirmed either the inability of most highly in vitro evolved aptamers to exhibit the structural changes necessary for riboswitching or the requirement of natural aptamers for a dedicated expression platform. In case of the in vitro generated neomycin aptamer, an in vivo screening yielded aptamers with regulatory activity. Following this example, ciprofloxacin-binding aptamers were subjected to the screening and one aptamer was found that exhibited 2 -fold regulation. This aptamer was then subjected to further analysis. In an approach to improve existing riboswitches and derive rules for riboswitch design, dimers of the tetracycline riboswitch were set to control reporter expression by the described regulatory mechanisms. Modifying one riboswitch was sufficient to obtain a range of basal expressions levels and switching factors that could then be used to train a computational model based on data from more than 100 different constructs. After setting desired output parameters with respect to basal expression and switching factors the model computed corresponding sequences that were tested in a second iterative approach. These results partly mirrored the first data recording, but also showed that the model could reproduce the sequence-activity relationships learned from the first recording. Moreover, non-regulating sequences were almost completely erased and the abundance of switches with desired switching factors was increased. Leaving the refinement of riboswitches at the nucleotide level, a third study was conducted to elucidate the performance of a logic NOR gate constructed from the neomycin and tetracycline riboswitches at the <b>device</b> level. A <b>descriptor</b> for the performance of this RNA logic gate was sought to be applied to assess its functionality at the single-cell level, since the correct functionality of (RNA) devices in each single cell is a prerequisite for their adaption to a genetic circuit. To this end the Receiver-Operator-Characteristics (ROC) analysis was identified as a suitable performance measure to account for cell-to-cell variability compromising the full separation of two Boolean states by overlapping populations. Complemented by the transient induction and repression kinetics of the constructed NOR gate recorded by flow cytometry and microfluidics-based fluorescence microscopy, data was derived that allowed mapping the performance of the NOR gate with respect to speed and accuracy of the logic operation. In most studies only steady state data from bulk cultures are collected and these information are lost. A hierarchical stochastic model was built and calibrated with the transient single-cell data that enabled the in silico completion of the device characterization at the steady state level for various induction levels and repressor concentrations. In general, such data can then be used to simulate the experimentally inaccessible gate performance. Additionally, the model facilitated the computational investigation of a possible re-design of the gate for which the model prediction proved to be correct in vivo, highlighting both the appropriateness of the experiment design to obtain meaningful data and the applicability of in silico approaches to predict the correct in vivo phenotype...|$|R

