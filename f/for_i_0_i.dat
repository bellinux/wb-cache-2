4|10000|Public
40|$|This paper generalises the cointegrating {{model of}} Phillips (1991) to allow <b>for</b> <b>I</b> (<b>0),</b> <b>I</b> (1) and I (2) {{processes}}. The model has a simple form that permits {{a wider range}} of I (2) processes than are usually considered, including a more flexible form of polynomial cointegration. Further, the specification relaxes restrictions identified by Phillips (1991) on the I (1) and I (2) cointegrating vectors and restrictions on how the stochastic trends enter the system. To date there has been little work on Bayesian I (2) analysis and so this paper attempts to address this gap in the literature. A method of Bayesian inference in potentially I (2) processes is presented with application to Australian money demand using a Jeffreys prior and a shrinkage prior. ...|$|E
40|$|This paper generalizes the cointegrating {{model of}} Phillips (1991) to allow <b>for</b> <b>I</b> (<b>0),</b> <b>I</b> (1) and I (2) {{processes}}. The model has a simple form that permits {{a wider range}} of I (2) processes than are usually considered, including a more flexible form of polynomial cointegration. Further, the specification relaxes restrictions identified by Phillips (1991) on the I (1) and I (2) cointegrating vectors and restrictions on how the stochastic trends enter the system. To date there has been little work on Bayesian I (2) analysis and so this paper attempts to address this gap in the literature. A method of Bayesian inference in potentially I (2) processes is presented with application to Australian money demand using a Jeffreys prior and a shrinkage prior. Cointegration, Bayesian, I (2) Analysis, Money demand,...|$|E
40|$|The {{problem is}} more {{difficult}} if d is not known. We first consider the 2 lane lost-cow problem with two paths P 1 and P 2. Any deterministic online algorithm can be described by a sequence of non-negative numbers f 0 = 0; f 1; f 2; f 3; : : :, where f i indicates how far we follow path P imod 2 in the i-th step. We also set f Γ 1 = 0. If {{we want to be}} optimal we must have f i ! f i+ 2 <b>for</b> <b>i</b> <b>0,</b> <b>i.</b> e., each time we explore path P i we go farther than the previous time we explored the path. But how should we choose the f i to minimize the total travel distance? It turns out that the doubling strategy works well i...|$|E
5000|$|... <b>for</b> <b>i</b> in 0..<10 { // 0..<10 {{constructs}} a half-open range, so {{the loop}} body // is repeated <b>for</b> <b>i</b> = <b>0,</b> <b>i</b> = 1, …, i = 9.}for i in 0...10 { // 0...10 constructs a closed range, so the loop body // is repeated <b>for</b> <b>i</b> = <b>0,</b> <b>i</b> = 1, …, i = 9, i = 10.} ...|$|R
50|$|Hi(X) vanish <b>for</b> <b>i</b> < <b>0</b> or <b>i</b> > 2n.|$|R
5000|$|Let pi = <b>0</b> <b>for</b> <b>i</b> < <b>0</b> or <b>i</b> > m, and qi = <b>0</b> <b>for</b> <b>i</b> < <b>0</b> or <b>i</b> > n. The Sylvester matrix is the (m + n) × (m + n)-matrix {{such that}} the {{coefficient}} of the i-th row and the j-th column is pm + j - <b>i</b> <b>for</b> j ≤ n and qj - <b>i</b> <b>for</b> j > n: ...|$|R
40|$|Based on {{an idea of}} Granger (1986, Oxford Bulletin of Economics and Statistics 48, 213 – 228), we analyze a new vector {{autoregressive model}} defined from the {{fractional}} lag operator 1 − (1 − L) null. We first derive conditions {{in terms of the}} coefficients for the model to generate processes that are fractional of order zero. We then show {{that if there is a}} unit root, the model generates a fractional process X null of order d, d > 0, for which there are vectors β so that β‼ Xnull is fractional of order d − b, 0 b ≤ d. We find a representation of the solution that demonstrates the fractional properties. Finally we suggest a model that allows for a polynomial fractional vector, that is, the process X null is fractional of order d, β‼ Xnull is fractional of order d − b, and a linear combination of β‼ Xnull and Δ null Xnull is fractional of order d − 2 b. The representations and conditions are analogous to the well-known conditions <b>for</b> <b>I</b> (<b>0),</b> <b>I</b> (1), and I (2) variables. ...|$|E
30|$|Open {{image in}} new window, where 1 ≤ u <b>i</b> ≤ v <b>i,</b> <b>for</b> <b>0</b> ≤ <b>i</b> ≤ t.|$|R
5000|$|... unitA::functionA (...) { if (someNumber > <b>0)</b> { <b>for</b> ( [...] <b>i</b> = <b>0</b> <b>i</b> < someNumber i++ [...] ) { unitB->functionB (...) } } } ...|$|R
50|$|Once {{represented}} in RNS, many arithmetic operations can be efficiently {{performed on the}} encoded integer. For the following operations, consider two integers, A and B, represented by ai and bi in an RNS system defined by mi (<b>for</b> <b>i</b> from <b>0</b> ≤ <b>i</b> ≤ N).|$|R
40|$|Let k be a {{field and}} let D be a k-linear {{algebraic}} triangulated category with split idempotents. Let Σ be the suspension functor of D and let s be a 2 -spherical object of D, that is, the morphism space D(s,Σis) is k <b>for</b> <b>i</b> = <b>0</b> and <b>i</b> = 2 and vanishes otherwise. Assume that s classically generates D, that is, each object of D can b...|$|R
3000|$|Assume {{that the}} functor F has a left-adjoint F_† :C_ 1 →C_ 0. Then for any [n] ∈Δ _+ ⊂Δ, the {{pullback}} functor s^*:F^[n]→ F^[0] admits a fully faithful left-adjoint s_!. Moreover, an object 〈κ,{c_·}〉∈ F^[n] {{lies in the}} essential image of the functor s_! iff <b>for</b> any <b>i,</b> <b>0</b> < <b>i</b> < n, the map F_† (κ (i)) → c_i+ 1 adjoint to the map κ (i) →κ (i+ 1) [...] F(c_i+ 1) is an isomorphism.|$|R
40|$|Let F denote an algebraically closed field. Let V denote a {{vector space}} over F with finite {{positive}} dimension, and let A, A ∗ be a tridiago-nal pair on V. Let {θi}di= 0 (resp. {θ∗i}di= 0) denote a standard ordering of the eigenvalues of A (resp. A∗). We assume θi = q 2 i−d (resp. θ∗i = qd− 2 <b>i)</b> <b>for</b> (<b>0</b> ≤ <b>i</b> ≤ d). We show that A, A ∗ is isomorphic to A∗, A...|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00040 G0000:0050 load r2, n i < n0060 cmp r1, r20070 bge G000100800090 for (j = 0; j < n; j++)0100 {0110 r3 = #0 j = 00120 G0002:0130 load r4, n j < n0140 cmp r3, r40150 bge G000301600170 Ai,j = 0.0;0180 load r7, n0190 r8 = r1 * r7 {{calculate}} subscript i * n + j0200 r9 = r8 + r30210 r10 = r9 * #8 calculate byte address0220 fr3 = #0.00230 fstore fr3, Ar1002400250 r3 = r3 + #1 j++0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0300 load r12, n calculate subscript i * n + i0310 r13 = r1 * r120320 r14 = r13 + r10330 r15 = r14 * #8 calculate byte address0340 fr4 = #1.00350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10390 br G00000400 }0410 G0001: ...|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00050 load r2, n0220 fr3 = #0.00340 fr4 = #1.00040 G0000:0060 cmp r1, r2 i < n0070 bge G000100800190 r8 = r1 * r2 {{calculate}} subscript i * n0117 r20 = r8 + r2 limit0118 r10 = r8 * #8 {{initial value}} of r100119 r22 = r20 * #8 new limit0090 for (j = 0; j < n; j++)0100 {0120 G0002:0147 cmp r10, r22 r10 = 8*(r8 + j) < 8*(r8 + n) = r220150 bge G000301600170 Ai,j = 0.0;0230 fstore fr3, Ar1002400245 r10 = r10 + #8 strength reduced multiply0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0320 r14 = r8 + r1 calculate subscript i * n + i0330 r15 = r14 * #8 calculate byte address0350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10390 br G00000400 }0410 G0001: ...|$|R
40|$|AbstractLet Y = (X, (Ri), 0 ⩽i⩽d) be a {{symmetric}} d-class association scheme, with intersection numbers pijh and Krein parameters qijh (<b>0</b> ⩽ h, <b>i,</b> j ⩽ d), and <b>for</b> each <b>i</b> (<b>0</b> ⩽ <b>i</b> ⩽ d) {{define the}} ith (reduced) intersection diagram Di (resp. representation diagram Di∗) on the nodes 0, 1,…, d by drawing an undirected arc between any distinct h, j for which pijh > 0 (resp. qijh > 0). Y is called P-polynomial (resp. Q-polynomial) if some Di (resp. Di∗) is a path. We obtain positive semi-definite matrices G(i) and G(i) ∗ (<b>0</b> ⩽ <b>i</b> ⩽ d) that yield new inequalities for the pijh and qijh. We show <b>for</b> each <b>i</b> (<b>0</b> ⩽ <b>i</b> ⩽ d), Di∗ being a forest, the vanishing of G(i), {{and the existence}} of a certain geometric representation of X are all equivalent. A similar result relates G(i) ∗ and Di. Denoting by a leaf in any diagram a node adjacent to exactly one other, we show there is at most one leaf besides the O-node in any connected Di∗ for a P-polynomial scheme. We combine this with the above results and get an interpretation of the Q-polynomial property for P-polynomial schemes. Finally, we use equations induced by the vanishing of some G(i) to obtain a simple proof of a theorem of D. Leonard, that the intersection numbers of a P- and Q-polynomial scheme can be found from 5 parameters...|$|R
5000|$|Less commonly, one has {{the notion}} of the stable range of an ideal I in a ring R. The stable range of the pair (R,I) is the {{smallest}} integer n such that for any elements v0, ... vn in R that generate the unit ideal and satisfy vn [...] 1 mod <b>I</b> and vi [...] <b>0</b> mod <b>I</b> <b>for</b> <b>0</b> ≤ <b>i</b> ≤ n-1, there exist t1, ... tn in R such that vi - v0ti <b>for</b> 1 ≤ <b>i</b> ≤ n also generate the unit ideal. As above, in this case we say that (R,I) satisfies the Bass stable range condition SRn+1.|$|R
40|$|Accepted <b>for</b> {{publication}} February <b>i</b> <b>0,</b> <b>i</b> 992 We {{investigated the}} relationships between relaxation, cyclic AMP (cAMP) accumulation and cAMP-dependent protein kinase (cAMP-PK) activity in canine tracheal smooth muscle. In time course and concentration-response studies, forskolin and isopro-terenol elicited relaxation of isolated trachealis strips that was accompanied {{by an increase in}} cAMP content and an activation of cAMP-PK. Although these results were consistent with the proposal that cAMP is a second messenger mediating relaxation of airway smooth muscle, close inspection of the data revealed a discrepancy in the relationship between cAMP accumulation and relaxation. To induce equivalent degrees of tracheal relaxa-tion, forskolin generated greater increments in cAMP accumula-tion than did isoproterenol. On the other hand, the activatio...|$|R
40|$|In {{this paper}} we develop a simple {{procedure}} that delivers tests {{for the presence}} of a broken trend in a univariate time series that do not require knowledge of the form of serial correlation in the data and are robust as to whether the shocks are generated by an <b>I</b> (<b>0)</b> or an <b>I</b> (1) process. Two trend break models are considered: the first holds the level fixed while allowing the trend to break, while the latter allows for a simultaneous break in level and trend. For the known break date case, our proposed tests are formed as a weighted average of the optimal tests appropriate <b>for</b> <b>I</b> (<b>0)</b> and <b>I</b> (1) shocks. The weighted statistics are shown to have standard normal limiting null distributions and to attain the Gaussian asymptotic local power envelope, in each case regardless of whether the shocks are <b>I</b> (<b>0)</b> or <b>I</b> (1). In the unknown break date case, we adopt the method of Andrews (1993) and take a weighted average of the statistics formed as the supremum over all possible break dates, subject to a trimming parameter, in both the <b>I</b> (<b>0)</b> and <b>I</b> (1) environments. Monte Carlo evidence suggests that our tests are in most cases more powerful, often substantially so, than the robust broken trend tests of Sayginsoy and Vogelsang (2004). An empirical application highlights the practical usefulness of our proposed tests. ...|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00050 load r2, n0130 load r4, n killed; use r20180 load r7, n killed; use r20300 load r12, n killed; use r20220 fr3 = #0.00340 fr4 = #1.00040 G0000:0060 cmp r1, r2 i < n0070 bge G000100800190 r8 = r1 * r2 {{calculate}} subscript i * n0310 r13 = r1 * r2 killed; use r8 calculate subscript <b>i</b> * n0090 <b>for</b> (j = 0; j < n; j++)0100 {0110 r3 = #0 j = 00120 G0002:0140 cmp r3, r2 j < n0150 bge G000301600170 Ai,j = 0.0;0200 r9 = r8 + r3 calculate subscript i * n + j0210 r10 = r9 * #8 calculate byte address0230 fstore fr3, Ar1002400250 r3 = r3 + #1 j++0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0320 r14 = r8 + r1 calculate subscript i * n + i0330 r15 = r14 * #8 calculate byte address0350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10390 br G00000400 }0410 G0001: ...|$|R
40|$|A field {{experiment}} {{was designed to}} study the response of Mungbean to deficit irrigation levels and sowing methods. Randomized Complete Block Design (RCBD) with split plot arrangement replicated three times. Water treatments were controlled at <b>I</b> <b>0</b> (zero percent irrigation), <b>I</b> 33 (33 % of full irrigation), I 67 (67 % of full irrigation) and I 100 (full irrigation). Full irrigation was determined {{on the basis of}} 65 % management allowed deficit (MAD). Results shows that I 67 and I 100 not significant for pods plant- 1 while these were highly significant for the sowing methods. The pods per plant are highly significant <b>for</b> <b>I</b> <b>0</b> and <b>I</b> 33 levels. The sowing methods and irrigation levels both have significant impact on grain yield and biological yield. The biological yields continuously and consistently increase with the increase in irrigation levels. The harvest index of Mungbean and its water productivity both increase in irrigation levels certain level. The maximum irrigation applied at 65 % MAD substantially decreases the Mungbean water productivity when compared to the harvest index. It was concluded that Mungbean MAD in semi-arid region of Peshawar may be exploited further; more moisture contents may be further extracted before applying next irrigation in raised bed technique in special and as usual in flat beds...|$|R
40|$|A cut (A; B) in a graph G {{is called}} internal, i N(A) 6 = B and N(B) 6 = A. In this paper, we study the {{structure}} of internal cuts in chordal graphs. We show that if (A; B) is an internal cut in a chordal graph, then <b>for</b> each <b>i,</b> <b>0</b> <b>i</b> (G) + 1, there exists a clique K i such that jK i j = (G) + 1, jK i T Aj = i and jK i T Bj = k+ 1 i, where (G) is the vertex connectivity of G. In general, there can be an exponential number of internal cuts in a chordal graph, {{while the number of}} maximal cliques can be at most n (G) 1 [2]. Also there exists chordal graphs, all of whose maximal cliques are of size (G) + 1. Thus, above result throws some light as to the way the cliques are arranged in chordal graphs, with respect to their cuts. We also show that in a chordal graph G, every internal cut should contain at least (G) ((G) + 1) 2 edges. This lower bound is tight, in the sense that there exists chordal graphs with internal cuts having exactly (G) ((G) + 1) 2 edges...|$|R
40|$|<b>For</b> <b>i,</b> j > <b>0,</b> <b>i</b> + j = 1, {{the set of}} badly approximable vectors {{with weight}} (i, j) is defined by Bad(i, j) = {(x, y) ∈^ 2 : ∃ c > 0 ∀ q∈, {q||qx||^ 1 /i, q||qy||^ 1 /j} > c}, where ||x|| is the {{distance}} of x to the nearest integer. In 2010 Badziahin-Pollington-Velani solved Schmidt's conjecture which was stated in 1982, proving that Bad(i, j) ∩ Bad(j, i) is nonempty. Using Badziahin-Pollington-Velani's technique with reference to fractal sets, {{we were able to}} improve their results: Assume that we are given a sequence (i_t, j_t) with i_t, j_t > 0, i_t + j_t = 1. Then, the intersection of Bad(i_t, j_t) over all t is nonempty...|$|R
5000|$|... {{the powers}} &gamma; <b>i</b> <b>for</b> <b>0</b> &le; <b>i</b> &le; 3 {{can be written}} out as linear {{combinations}} of 1, , , and [...] with integer coefficients. Taking these as a system of linear equations, or by factoring, one can solve for [...] and [...] over [...] (one gets, for instance, [...] ), which implies that this choice of &gamma; is indeed a primitive element in this example. A simpler argument, assuming the knowledge of all the subfields as given by Galois theory, is to note the independence of 1, , , and [...] over the rationals; this shows that the subfield generated by &gamma; cannot be that generated by [...] or [...] or , exhausting all the subfields of degree 2. Therefore, {{it must be the}} whole field.|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00050 load r2, n0220 fr3 = #0.00340 fr4 = #1.00055 r8 = r1 * r2 set {{initial value}} for r80056 r40 = r8 * #8 initial value for r8 * 80057 r30 = r2 * #8 {{increment}} for r400058 r20 = r8 + r2 copied from 01170058 r22 = r20 * #8 initial value of r220040 G0000:0060 cmp r1, r2 i < n0070 bge G000100800118 r10 = r40 strength reduced expression to r400090 for (j = 0; j < n; j++)0100 {0120 G0002:0147 cmp r10, r22 r10 = 8*(r8 + j) < 8*(r8 + n) = r220150 bge G000301600170 Ai,j = 0.0;0230 fstore fr3, Ar1002400245 r10 = r10 + #8 strength reduced multiply0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0320 r14 = r8 + r1 calculate subscript i * n + i0330 r15 = r14 * #8 calculate byte address0350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10385 r8 = r8 + r2 strength reduce r8 = r1 * r20386 r40 = r40 + r30 strength reduce expression r8 * 80388 r22 = r22 + r30 strength reduce r22 = r20 * 80390 br G00000400 }0410 G0001: ...|$|R
40|$|AbstractFor each {{positive}} integer k {{we consider}} the smallest positive integer f(k) (dependent only on k) such that the following holds: Each connected graph G with chromatic number χ(G) = k can be properly vertex colored by k colors so that for each pair of vertices xo and xp in any color class there exist vertices x 1, x 2, …, xp- 1 of the same class with dist(xi, xi+ 1) ⩽ f(k) <b>for</b> each <b>i,</b> <b>0</b> ⩽ <b>i</b> ⩽ p − 1. Thus, the graph is k-colorable with the vertices of each color class placed throughout the graph so that no subset of the class is at a distance > f(k) from {{the remainder of the}} class. We prove that f(k) < 12 k when the order of the graph is ⩾ k(k − 2) + 1...|$|R
40|$|Given a {{sequence}} of n elements, the All Nearest Smaller Values (ANSV) problem is to find, for each element in the sequence, the nearest element to the left (right) that is smaller, or to report that no such element exists. Berkman, Schieber, and Vishkin [4] give an ANSV algorithm that runs in O(lg n) time on an (n= lg n) -processor CREW PRAM. In this paper, we present an O(lgn) -time n-processor normal hypercube algorithm for the ANSV problem. Furthermore, we prove that any normal hypercube algorithm requires ΩΓ n) processors to solve the ANSV problem in O(lg n) time. We use our ANSV algorithm to give the first O(lgn) -time n-processor normal hypercube algorithms for triangulating a monotone polygon and for constructing a Cartesian tree. 1 Introduction The All Nearest Smaller Values (ANSV) problem is defined as follows. Let W = hw <b>i</b> : <b>0</b> <b>i</b> ! ni be {{a sequence}} of n elements. <b>For</b> each w <b>i,</b> <b>0</b> <b>i</b> ! n, {{we want to find}} the nearest element to the left of w i in W and the nearest el [...] ...|$|R
40|$|Convex and Submodular {{functions}} play {{an important}} role in many applications, and in particular in combinatorial optimization. Here we study two special cases: convexity in one dimension and submodularity in two dimensions. The latter type of functions are equivalent to the well known Monge matrices. A matrix V = fv i;j g i=n 1;j=n 2 i;j= 0 is called a Monge matrix if <b>for</b> every <b>0</b> <b>i</b> < <b>i</b> n 1 and <b>0</b> j < j n 2, we have v i;j + v <b>i</b> v i;j <b>0</b> + v i;j. If inequality holds in the opposite direction then V is an inverse Monge matrix (supermodular function). Many problems, such as the traveling salesperson problem and various transportation problems, can be solved more efficiently if the input is a Monge matrix...|$|R
40|$|Let P(x,y,n) {{be a real}} {{polynomial}} and let {G, } be {{a family}} of graphs, where the set of vertices of G, is (1. 2, [...] .,n} and <b>for</b> 1 <b>I</b> <b>i</b> <b>0.</b> Motivated by a question of Babai, we {{show that there is}} a positiye constant c depending only on P such that either G or its complement G, contains _a complete subgraph on at least c 2 In& vertices. Similarly, either G, or G, contains a complete bipartite subgraph with at least cntn vertices in each color class. Similar results are proved for graphs defined by real polynomials in a more general way, showing that such graphs satisfy much stronger Ramsey bounds than do random graphs. This may partially explain the difficulties in finding an explicit construction for good Ramsey graphs...|$|R
40|$|Let K denote an algebraically closed {{field and}} let q denote a nonzero scalar in K {{that is not}} a root of unity. Let V denote a vector space over K with finite {{positive}} dimension and let A,A ∗ denote a tridiagonal pair on V. Let θ 0,θ 1, [...] .,θd (resp. θ ∗ 0,θ ∗ 1, [...] .,θ ∗ d) denote a standard ordering of the eigenvalues of A (resp. A ∗). We assume there exist nonzero scalars a,a ∗ in K such that θi = aq 2 i−d and θ ∗ i = a ∗ q d− 2 <b>i</b> <b>for</b> <b>0</b> ≤ <b>i</b> ≤ d. We display two irreducible Uq (̂ sl 2) -module structures on V and discuss how these are related to the actions of A and A∗...|$|R
40|$|Abstract. Using results derived in Berestycki et al. [1] we {{correct the}} celebrated {{formulae}} of Hagan et al. [4, 3]. We derive explicitly the correct zero order {{term in the}} expansion of the implied volatility in time to maturity. The new term is consistent as β → 1. Furthermore, numerical simulations show that it reduces or eliminates known pathologies of the earlier formula. In this small note 1 we comment the celebrated formulae of Hagan and Woodward [4] and Hagan et al. [3], point out some inconsistencies and compare them with the results of Berestycki et al. [1]. Consider the following model for the underlying (we take r = 0 which should be interpreted as St representing the forward value process) dSt = σtS β t dW 1 t, S 0 = s, dσt = νσtdW 2 t, σ 0 = α, where d〈W 1,W 2 (1) 〉t = ρdt, β ∈ (0, 1), |ρ | ≤ 1, which is known as the SABR model. We take ν ≥ 0 and note that putting ν = 0 we obtain a local volatility model. Consider now the Taylor expansion of the implied volatility surface in time to maturity τ <b>I</b> = <b>I</b> <b>0</b> (x,τ) = <b>I</b> <b>0</b> (1 + <b>I</b> 1 τ) + O(τ 2), (2) where I 0,I 1 are functions of x. Hagan et al. [3] were first to obtain explicit expressions <b>for</b> <b>I</b> <b>0</b> and <b>I</b> 1. They used perturbation theory (combined with impressive intuition). More recently, Berestycki et al. [1] treated the subject in a rigorous analytical manner. They proved in particular that <b>I</b> <b>0</b> (x) = limτ→ 0 I(x,τ) is well defined and characterized it via a solution to eikonal equation (or via Varadhan’s signed geodesic distance). We now compare their expression <b>for</b> <b>I</b> <b>0</b> with that of [3] and of [4] (case of ν = 0). Let K be the strike and put x = ln(s/K). Direct, but somewhat tedious, computations yiel...|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00050 load r2, n0220 fr3 = #0.00340 fr4 = #1.00055 r8 = r1 * r2 set {{initial value}} for r80056 r40 = r8 * #8 initial value for r8 * 80057 r30 = r2 * #8 {{increment}} for r400058 r20 = r8 + r2 copied from 01170058 r22 = r20 * #8 initial value of r220040 G0000:0060 cmp r1, r2 i < n0070 bge G000100800190 r8 = r1 * r2 killed calculate subscript i * n0117 r20 = r8 + r2 killed - dead code0118 r10 = r40 strength reduced expression to r400119 r22 = r20 * #8 killed strength reduced0090 for (j = 0; j < n; j++)0100 {0120 G0002:0147 cmp r10, r22 r10 = 8*(r8 + j) < 8*(r8 + n) = r220150 bge G000301600170 Ai,j = 0.0;0230 fstore fr3, Ar1002400245 r10 = r10 + #8 strength reduced multiply0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0320 r14 = r8 + r1 calculate subscript i * n + i0330 r15 = r14 * #8 calculate byte address0350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10385 r8 = r8 + r2 strength reduce r8 = r1 * r20386 r40 = r40 + r30 strength reduce expression r8 * 80388 r22 = r22 + r30 strength reduce r22 = r20 * 80390 br G00000400 }0410 G0001: ...|$|R
40|$|Let double-struck K denote an algebraically closed {{field and}} let q denote a nonzero scalar in double-struck K {{that is not}} a root of unity. Let V denote a vector space over double-struck K with finite {{positive}} dimension and let A, A* denote a tridiagonal pair on V. Let θ 0, θ 1, [...] ., θd (resp. θ 0 *, θ 1 *, [...] ., θd*) denote a standard ordering of the eigenvalues of A (resp. A*). We assume there exist nonzero scalars a, a* in double-struck K such that θi = aq 2 i-d and θi* = a*qd- 2 <b>i</b> <b>for</b> <b>0</b> ≤ <b>i</b> ≤ d. We display two irreducible Uq(sl 2) -module structures on V and discuss how these are related to the actions of A and A*. © 2006 Springer Science + Business Media, LLC...|$|R
5000|$|... 0010 <b>for</b> (<b>i</b> = <b>0,</b> <b>i</b> < n; i++)0020 {0030 r1 = #0 i = 00050 load r2, n0220 fr3 = #0.00340 fr4 = #1.00055 r8 = r1 * r2 set {{initial value}} for r80056 r40 = r8 * #8 initial value for r8 * 80057 r30 = r2 * #8 {{increment}} for r400058 r20 = r8 + r2 copied from 01170058 r22 = r20 * #8 initial value of r22005A r14 = r8 + #1 copied from 0320005B r15 = r14 * #8 initial value of r15 (0330)005C r49 = r2 + 1005D r50 = r49 * #8 strength reduced increment0040 G0000:0060 cmp r1, r2 i < n0070 bge G000100800118 r10 = r40 strength reduced expression to r400090 for (j = 0; j < n; j++)0100 {0120 G0002:0147 cmp r10, r22 r10 = 8*(r8 + j) < 8*(r8 + n) = r220150 bge G000301600170 Ai,j = 0.0;0230 fstore fr3, Ar1002400245 r10 = r10 + #8 strength reduced multiply0260 br G00020270 }0280 G0003:0290 Ai,i = 1.0;0320 r14 = r8 + r1 killed dead code0330 r15 = r14 * #8 killed strength reduced0350 fstore fr4, Ar1503600370i++0380 r1 = r1 + #10385 r8 = r8 + r2 strength reduce r8 = r1 * r20386 r40 = r40 + r30 strength reduce expression r8 * 80388 r22 = r22 + r30 strength reduce r22 = r20 * 80389 r15 = r15 + r50 strength reduce r15 = r14 * 80390 br G00000400 }0410 G0001: ...|$|R
40|$|This paper {{studies the}} descriptional {{complexity}} of (i) sequences over a finite alphabet; and (ii) subsets of N (the natural numbers). If (s(i)) <b>i</b> <b>0</b> is a sequence over a finite alphabet Δ, then we define the k-automaticity of s, A k s (n), {{to be the}} smallest possible number of states in any deterministic finite automaton that, <b>for</b> all <b>i</b> with <b>0</b> <b>i</b> n, takes i expressed in base k as input and computes s(i). We give examples of sequences that have high automaticity in all bases k; for example, we show that the characteristic sequence of the primes has k-automaticity A k s (n) = ΩΓ n 1 = 43) for all k 2, thus making quantitative the classical theorem of Minsky and Papert that the set of primes expressed in base 2 is not regular. Research {{supported in part by}} a grant from NSERC. Manuscrit re¸cu le 5 avril 1996. 348 Jeffrey Shallit We give examples of sequences with low automaticity in all bases k, and low automaticity in some bases and high in others. We also obtain b [...] ...|$|R
40|$|This note is {{dedicated}} to the memory of our teacher E. W. Dijkstra, since he would have appreciated the problem and would probably have solved it nicer than we can do below. Our problem is about three ascending sequences of numbers. It was inspired by [2], exercise C- 3. 1 (p. 213), which is about two ascending sequences. In order to formulate the problem and its solution, we need some notation on sequences. If s is a sequence of length N, we denote its elements by s. <b>i</b> <b>for</b> <b>0</b> ≤ <b>i</b> < N. Sequence s is called ascending iff s. (i − 1) ≤ s. <b>i</b> <b>for</b> all <b>i</b> with <b>0</b> < <b>i</b> < N. We write (s|j) to denote the initial segment of s with length j, which consists of the elements s. <b>i</b> with <b>0</b> ≤ <b>i</b> < j. Note that s. (j − 1) is the last element of (s|j). Let a, b, c be three ascending sequences of length N. Let abc be the ordered merge of these sequences, which is an ascending sequence of length 3 · N. Given is a natural number m. The aim is to construct an efficient algorithm for the determination of numbers i, j, k such that the ordered merge of (a|i), (b|j...|$|R
