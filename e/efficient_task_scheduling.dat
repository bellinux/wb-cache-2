46|4876|Public
40|$|Due to the {{heterogeneity}} and geographically distribution of Grid resources, effective and <b>efficient</b> <b>task</b> <b>scheduling</b> algorithms are required. Resource load balancing and minimizing makespan are the fundamental goals of effective and <b>efficient</b> <b>task</b> <b>scheduling.</b> It becomes more complicated when various QoS demands arise from users. In this paper, we have presented two algorithms, QoS Guided Weighted Mean Time-min and QoS Guided Weighted Mean Time Min-Min Max-Min Selective, for QoS based Grid task scheduling. Both algorithms consider the resource performance and QoS demands of tasks for scheduling. The algorithms are simulated using GridSim. The {{results show that}} the proposed algorithms outperform in makespan, resource utilization and load balancing than other algorithms such as, Weighted Mea...|$|E
30|$|Many {{applications}} for energy harvesting sensor networks, such as structural health monitoring [3], disaster recovery [4], and health monitoring [5], require real-time reliable network protocols and <b>efficient</b> <b>task</b> <b>scheduling.</b> In such networks, {{it is important}} to dynamically schedule node and network tasks based on the remaining energy and current energy intake, as well as predictions about future energy availability.|$|E
40|$|<b>Efficient</b> <b>task</b> <b>scheduling</b> is {{fundamental}} {{for the success}} of the Grids, since it directly affects the Quality of Service (QoS) offered to the users. Efficient scheduling policies should be evaluated based not only on performance metrics that are of interest to the infrastructure side, such as the Grid resources utilization efficiency, but also on user satisfaction metrics, such as th...|$|E
40|$|This paper {{presents}} a Quality of Security Service (QoSS) costing framework and demonstration. A method for quantifying {{costs related to}} the security service and for storing and retrieving security information is illustrated. We describe a security model for tasks, which incorporates the ideas of variant security services invoked by the task, dynamic network modes, abstract security level choices and resource utilization costs. The estimated costs can be fed into a resource management system to facilitate the process of estimating <b>efficient</b> <b>task</b> <b>schedules.</b> Integration and scalability issues have been taken into account during {{the design of the}} QoSS costing demonstration, which we believe is suitable for incorporation into a resource management system research prototype 1. 1...|$|R
40|$|AbstractCloud {{computational}} platforms {{today are}} very promising for execution of scientific applications since they provide {{ready to go}} infrastructure for almost any task. However, complex tasks, which contain {{a large number of}} interconnected applications, which are usually called workflows, require <b>efficient</b> <b>tasks</b> <b>scheduling</b> in order to satisfy user defined QoS, like cost or execution time (makespan). When QoS has some restrictions – limited cost or deadline – scheduling becomes even more complicated. In this paper we propose heuristic algorithm for scheduling workflows in hard-deadline constrained clouds – Levelwise Deadline Distributed Linewise Scheduling (LDD-LS) – which, in combination with implementation of IC-PCP algorithm, is used for initialization of proposed metaheuristic algorithm – Cloud Deadline Coevolutional Genetic Algorithm (CDCGA). Experiments show high efficiency of CDCGA, which makes it potentially applicable for scheduling in cloud environments...|$|R
40|$|In this paper, {{we propose}} an <b>efficient</b> single-resource <b>task</b> <b>scheduling</b> {{algorithm}} for the Communication, Ocean, and Meteorological Satellite. Among general satellite planning {{functions such as}} constraint check, priority check, and <b>task</b> <b>scheduling,</b> this paper focuses on the <b>task</b> <b>scheduling</b> algorithm, which resolves conflict among tasks which have an exclusion relation and the same priority. The goal of the proposed <b>task</b> <b>scheduling</b> algorithm is to maximize the number of tasks that can be scheduled. The rationale of the algorithm is that a discarded <b>task</b> can be <b>scheduled</b> instead of a previously selected one depending on the expected benefit acquired by doing so. The evaluation {{results show that the}} proposed algorithm enhances the number of tasks that can be scheduled considerably...|$|R
30|$|A {{data center}} is {{required}} to handle {{a large number of}} tasks demanding different computational resources, e.g. CPU, memory, and communications. Under this variety, servers may provide different response times and consume different levels of energy for different types of tasks. In this paper, we focus on the study of <b>efficient</b> <b>task</b> <b>scheduling</b> to minimize the energy consumption of a data center by reducing the number of active servers.|$|E
30|$|As cloud {{computing}} and its applications {{have come into}} wide use such as security [1], IoT [2], and vehicular ad hoc networks [3], {{it is important for}} cloud users to provide an <b>efficient</b> <b>task</b> <b>scheduling</b> technique since {{cloud computing}} is based on the pay as you go pricing model [4]. For a cloud user, it is important to finish the cloud user’s tasks as quickly as possible in cloud computing environments [5].|$|E
40|$|In {{this paper}} we propose a model of {{distributed}} multi-core processors with software controlled dynamicvoltage scaling. We consider the problem of energy <b>efficient</b> <b>task</b> <b>scheduling</b> with a given deadline on thismodel. We consider send-receive task graphs in which the initial task sends data to multiple intermediatetasks, and the final task collects the data from these intermediate tasks with the restriction that the initialand final tasks should be assigned on the same core...|$|E
40|$|Abstract-A {{dynamic and}} <b>efficient</b> grid <b>task</b> <b>scheduling</b> {{strategy}} was proposed {{in this paper}} by combining the genetic algorithm and the ant algorithm. The proposed method integrated the global search capability of the genetic algorithm and the solution precision of the ant algorithm; moreover, it avoided the imprecise local solution, prematurity and degradation phenomena of genetic scheduler, and overcame the inefficiency of the ant algorithm at its initial search stage. The simulation {{results show that the}} proposed scheduling strategy has an obvious superiority of scheduling efficiency in the large-scale grid <b>task</b> <b>scheduling</b> environment, and is better than the genetic algorithm and the ant algorithm as a whole. Keywords-Grid <b>task,</b> <b>Scheduling</b> strategy, Chromosome...|$|R
40|$|We {{describe}} a peer-to-peer self-organizing overlay net-work for our global computing system. The preliminary simulation {{results show that}} the network has some small-world characteristics such as higher clustering coefficient and short path length, which leads to an <b>efficient</b> heuristic <b>task</b> <b>scheduling</b> algorithm on which any volunteer peer with limited knowledge about the global network can dis-patch its excrescent computation tasks to powerful nodes globally, in a way contrary to the current global comput-ing system in which a global broker is responsible for the <b>task</b> <b>scheduling.</b> We argue that our approach is a starting point to eliminate the broker component which makes current global systems unscalable...|$|R
40|$|Abstract- In {{this paper}} {{introduces}} a more <b>efficient</b> algorithm for <b>task</b> <b>scheduling</b> based on Priority Based Scheduling in cloud computing and {{the implementation of}} it [...] . Profit Based <b>Task</b> <b>scheduling</b> algorithm only takes the initial research on <b>task</b> <b>scheduling</b> in Cloud platform. However many issues remain open. Further improvement {{should be done to}} handle more complicated scenario involving dynamic factors such as dynamically changing cloud environment and other QoS attributes. The improvement of this algorithm should concentrate on discussing simultaneous instead of independent <b>task</b> <b>scheduling</b> in Cloud environment...|$|R
40|$|<b>Efficient</b> <b>task</b> <b>scheduling</b> is {{essential}} to obtain high performance in distributed computing environment. Achieving a better makespan is a key issue in designing and development of task scheduling algorithms. Several algorithms have been proposed for homogeneous and heterogeneous distributed computing systems. In this paper, we proposed a new static scheduling algorithm called Leveled DAG Prioritized Task (LDPT) to efficiently schedule tasks on homogeneous distributed computing systems. LDPT aims to improve the efficiency of the system by minimizing the schedule length...|$|E
40|$|The {{aims of the}} {{research}} are to develop a distributed simulation environment and to investigate techniques that support <b>efficient</b> <b>task</b> <b>scheduling</b> algorithms in fault-tolerant, real-time, distributed, and wireless embedded systems. Techniques we developed include deadline-based real-time scheduling, priority-based scheduling, redundant resource allocation for fault-tolerance, energy-aware, and signal-strength-aware scheduling. A system model is proposed and a prototype of the distributed simulation environment is implemented. Three scheduling algorithms and sample applications are designed and implemented in the environment. Experiment data are collected for analyzing {{the effectiveness of the}} algorithms...|$|E
40|$|The {{progress}} of GPU (Graphics Processing Unit) technology opens {{a new avenue}} for boosting computing power. This work is an at-tempt to exploit GPU for accelerating VLSI circuit optimization. We propose GPU-based parallel computing techniques and apply them on simultaneous gate sizing and threshold voltage assign-ment, which is often employed in practice for performance and power optimization. These techniques are aimed to fully utilize the benefits of GPU through <b>efficient</b> <b>task</b> <b>scheduling</b> and memory or-ganization. Compared to conventional sequential computation, our techniques can provide up to 56 × speedup without any sacrifice on solution quality...|$|E
40|$|Abstract. Modern {{multi-core}} processors {{suffer from}} the lack of a programming model which allows efficient utilization of the available hardware. Massive software overhead is required to handle <b>task</b> <b>scheduling</b> and synchronization, resulting in power inefficiencies. In this paper we present a C++ based, real-time enabled task level programming model, which allows <b>efficient</b> hardware utilization. <b>Task</b> <b>scheduling</b> and synchronization is performed by a hardware unit at run-time. The automated scheduler unit is guided by offline information extracted from source code by a specialized compiler...|$|R
30|$|Uddin et al [171] {{analyzed}} three energy <b>efficient</b> algorithms for <b>task</b> <b>scheduling</b> to get {{the most}} efficient algorithm. The evaluated algorithms are Resource Aware Scheduling Algorithm (RASA), Two Phases Power Convergence (TPPC) and Power Aware Load Balancing (PALB). Three parameters are defined to evaluate the algorithms: a) power efficiency, b) cost effectiveness, and c) the amount of CO 2 emissions. The authors focused on dynamics power management techniques.|$|R
40|$|High {{performance}} clusters {{have been}} widely used to provide amazing computing capability for both commercial and scientific applications. However, huge power consumption has prevented the further application of large-scale clusters. Designing energyefficient scheduling algorithms for parallel applications running on clusters, especially on the high performance heterogeneous clusters, is highly desirable. In this regard, we propose a novel scheduling strategy called energy <b>efficient</b> <b>task</b> duplication <b>schedule</b> (EETDS for short), which can significantly conserve power by judiciously shrinking communication energy cost when allocating parallel tasks to heterogeneous computing nodes. We present the preliminary simulation results for Gaussian and FFT parallel task models to prove the efficiency of our algorithm. 1...|$|R
40|$|Task Scheduling is an {{important}} issue in Grid Environment of multiprocessors system. The problem of scheduling a set of dependent and independent Task in a distributed system is considered. In this paper we are going to study a detailed study on tabu search, BFO and its hybridization. Tabu search is a heuristic procedure which uses its adaptive memory structures in order to find optimal solution in grid scheduling. Bacterial Foraging Optimization Algorithm is a well-known optimization algorithm for Task scheduling. The Hybridization of tabu-BFO approach is considered for reliability factor which increase the performance by means of <b>efficient</b> <b>Task</b> <b>Scheduling...</b>|$|E
40|$|AbstractIn the {{emerging}} e-commerce scenario, information captured by enterprises through their web-based applications has been exploding. Extensive use of applications based on multimedia and social media effects in exponential growth of data. Cloud computing system (or simply cloud) provides the required infrastructure for storing the large data generated by these applications. <b>Efficient</b> <b>task</b> <b>scheduling</b> {{in the cloud}} will reduce the task completion time and hence improve {{the performance of the}} cloud. In this paper, we have proposed an efficient cloud scheduling algorithm {{based on the results of}} the analysis performed on the log which consists of previous scheduling information for improving the performance of the cloud...|$|E
40|$|Abstract —This papers {{deals with}} a new task {{scheduling}} algorithm for distributed heterogeneous computing environments. In distributed and parallel computing system, <b>efficient</b> <b>task</b> <b>scheduling</b> of computationally intensive applications {{is one of the}} most essential and difficult issues. Although a large number of scheduling heuristics have been presented in the literature, most of them target only homogeneous computing systems, and connected via memory, bus, or LAN. But today parallel and distributed system is organized with platform that is heterogeneous. And they are connected via Internet so each platform has different ability of computation performance and different network bandwidth. Therefore we propose improved scheduling strategy considering characters of heterogeneous system...|$|E
40|$|<b>Efficient</b> {{multiprocessor}} <b>task</b> <b>scheduling</b> is a long-studied {{and difficult}} problem {{that continues to}} be a topic of considerable research. Approximate solutions to this NPcomplete problem typically combine search techniques and heuristics. Traditional solutions require a deterministic search of the solution space, which is computationally and temporally exhaustive. Genetic algorithms are known to provide robust, stochastic solutions for numerous optimization problems. This paper describes the design and implementation of a genetic algorithm for minimizing the schedule length for a general task graph to be executed on a multiprocessor system. The implementation is scalable and adaptable to a variety of task graphs and parallel processing systems. Several improvements over state-of-the-art approaches lead to a robust solution. 1...|$|R
40|$|In {{parallel}} {{and distributed}} computing, {{development of an}} <b>efficient</b> static <b>task</b> <b>scheduling</b> algorithm for directed acyclic graph (DAG) applications is an important problem. The static <b>task</b> <b>scheduling</b> problem is NP-complete in its general form. The complexity of the problem increases when <b>task</b> <b>scheduling</b> {{is to be done}} in a heterogeneous environment, consisting of processors with varying processing capabilities and network links with varying bandwidths. List scheduling algorithms are generally preferred since they generate good quality schedules with less complexity. But these list algorithms leave {{a lot of room for}} improvement, especially when these algorithms are used in specialized heterogeneous environments This paper presents an hybrid genetic <b>task</b> <b>scheduling</b> algorithm for the tasks run on the network of heterogeneous systems and represented by Directed Acyclic Graphs (DAGs). First, the algorithm assigns a coupling factor to each task to present the <b>tasks</b> should be <b>scheduled</b> onto the same processor by avoiding the large communication time. Second, the algorithm generate some high quality initial solution by <b>scheduling</b> the <b>tasks</b> which are strongly coupled with each other onto the same processor, and improve the quality of the solution by using coupling initial solutions, random solution, near optimal solutions obtained by the list scheduling algorithm in the crossover and mutation operator. The performance of the algorithm is illustrated by comparing with the existing effectively scheduling algorithms...|$|R
40|$|In this paper, {{we address}} the energy-aware DVS {{scheduling}} problems for non-preemptive periodic task sets in real-time systems. Based on Greedy method, we propose a novel heuristic, Average Power Directed (APD), {{to maximize the}} system value under energy constraints, as well as keep the system functional during the whole mission period. Under the energy constrained situation given in this paper, experiments on large number of task sets demonstrate that compared with Greedy method, APD method increased the system value by average 35. 1 %. Even compared with Genetic Algorithm (GA), the APD method achieves improvement by 7. 3 %. When the system becomes tighter energy constrained, the energy efficiency of APD increases rapidly within large scope, which proves the energy awareness of this method. APD method has high performance and linear complexity, which facilitate it an <b>efficient</b> energy-aware <b>task</b> <b>scheduling</b> algorithm...|$|R
40|$|In Desktop grid {{computing}} environment, {{range of}} computing devices coexists starting from personal computers to supercomputers. These devices are interconnected {{to provide a}} variety of computational capabilities in order to execute applications that have diverse requirements. An important decision for such computing infrastructure is how to optimally allocate computational and communication resources to these applications and to schedule their execution {{in order to maximize}} performance benefits. In order to utilize the power of desktop grid completely, we need an <b>efficient</b> <b>task</b> <b>scheduling</b> algorithm to assign tasks to resources in a desktop grid. In this paper, we propose a Batch Mode Scheduling (Mid_Max algorithm) for the desktop grid environment. Compared to other methods, it performs well...|$|E
40|$|The {{problem of}} <b>efficient</b> <b>task</b> <b>scheduling</b> {{is one of}} the most {{important}} and most difficult issues in homogeneous computing environments. Finding an optimal solution for a scheduling problem is NP-complete. Therefore, it is necessary to have heuristics to find a reasonably good schedule rather than evaluate all possible schedules. List-scheduling is generally accepted as an attractive approach, since it pairs low complexity with good results. List-scheduling algorithms schedule tasks in order of priority. This priority can be computed either statically (before scheduling) or dynamically (during scheduling). This paper presents the characteristics of the two main static and the two main dynamic list-scheduling algorithms. It also compares their performance in dealing with random generated graphs with various characteristics...|$|E
40|$|<b>Efficient</b> <b>task</b> <b>scheduling</b> is {{essential}} for obtaining high performance in heterogeneous distributed computing systems. Several algorithms are proposed for heterogeneous distributed computing systems. In this paper, a new static scheduling algorithm is proposed called Highest Communicated Path of Task (HCPT) algorithm to efficiently schedule tasks on the heterogeneous distributed computing systems. Our algorithm {{is based on the}} list-scheduling technique. The algorithm not only is focused on reducing the makespan, but also provides better performance than the other algorithms in terms of speedup and efficiency. It consists of three phases, level sorting phase, task-prioritizing phase and processor selection phase. From the theoretical analysis of the HCPT algorithm with other algorithms for a Directed A-cyclic Graph (DAG), the better performance is observed...|$|E
40|$|A {{distributed}} {{system is a}} software system in which components located on networked computers communicate and coordinate their actions by passing messages. Most of the existing solutions on <b>task</b> <b>scheduling</b> and resource management in distributed computing environment {{are based on the}} traditional client / server model, enforcing a homogeneous policy on making decisions and limiting the flexibility, unpredictable reliability and scalability of the system. Thus, we need well organized system architecture to provide high system availability with <b>task</b> <b>scheduling</b> scheme for {{distributed system}} especially on Grid and Cloud. In this paper, we propose an <b>efficient</b> rescheduling based <b>task</b> <b>scheduling</b> algorithm named improved Min-Min Algorithm (I Min-Min) which performs scheduling in order to enhance system performance in any distributing system. The proposed method has two-phases. In the first phase the traditional Min-Min algorithm is executed and in the second phase the tasks are rescheduled to use the unutilized resources effectively...|$|R
40|$|In {{networked}} embedded sensor systems, {{data fusion}} {{is a viable}} solution to significantly reduce energy consumption while achieving real-time guarantee. Emerging data fusion applications demand <b>efficient</b> <b>task</b> allocation and <b>scheduling</b> techniques. However, existing approaches can not be effectively applied concerning both network topology and wireless communications. In this paper, we formally model TATAS, the Topology-Aware <b>Task</b> Allocation and <b>Scheduling</b> problem for real-time data fusion applications, and show it is NP-complete. We also propose an efficient three-phase heuristic to solve the TATAS problem. We implement our technique and conduct experiments based on a simulation environment. Experimental results show that, as compared with traditional approaches, our technique can achieve significant energy saving and effectively meet the real-time requirements as well. Department of ComputingRefereed conference pape...|$|R
40|$|Energy <b>efficient</b> {{real-time}} <b>task</b> <b>scheduling</b> {{attracted a}} lot of attention in the past decade. Most of the time, deterministic execution lengths for tasks were considered, but this model fits less and less with the reality, especially with the increasing number of multimedia applications. It’s why {{a lot of}} research is starting to consider stochastic models, where execution times are only known stochastically. However, authors consider that they have a pretty much precise knowledge about the properties of the system, especially regarding to the worst case execution time (or worst case execution cycles, WCEC). In this work, we try to relax this hypothesis, and assume that the WCEC can vary. We propose miscellaneous methods to react to such a situation, and give many simulation results attesting that with a small effort, we can provide very good results, allowing to keep a low deadline miss rate as well as an energy consumption similar to clairvoyant algorithms...|$|R
40|$|This paper {{presents}} an <b>efficient</b> <b>task</b> <b>scheduling</b> algorithm for multiprocessor systems based on clustering with task duplication. This algorithm has {{a relatively small}} time complexity of O(|E | log |V|) for a task graph of |V | nodes and |E | edges. Results from an extensive simulation run on randomly generated graphs {{as well as several}} application graphs demonstrate a significant improvement in using the proposed technique over several well-known fast techniques. Schedule lengths produced by the proposed algorithm are in general comparable to the ones generated by techniques with a much larger computation time requirement. Actual processing time required by this technique is among the smallest in all advanced techniques, while the number of processors needed is also among the least in all techniques...|$|E
40|$|Cloud {{computing}} is a latest new computing paradigm where applications, {{data and}} IT services are provided across dynamic and geographically dispersed organization. How {{to improve the}} global throughput and utilize Cloud computing resources proficiently and gain the maximum profits with job scheduling system {{is one of the}} Cloud computing service providers’ ultimate objectives. The motivation {{of this paper is to}} establish a scheduling mechanism which follows the Lexi – search approach to find an optimal feasible assignment. Task scheduling has been treated as general assignment problem to find the minimal cost. Here cost matrix is generated from a probabilistic factor based on some most vital condition of <b>efficient</b> <b>task</b> <b>scheduling</b> such as task arrival, task waiting time and the most important task processing time in a resource. The cost for assigning a task into a resource is probabilistic result considering the above criteria...|$|E
40|$|Abstract:- <b>Efficient</b> <b>task</b> <b>scheduling</b> is {{essential}} for achieving high performance computing applications for distributed systems. Most of existing real-time systems consider schedulability as a main goal and ignores other effects such as machines failures. In this paper we develop an algorithm to efficiently schedule parallel task graphs (fork-join structures). Our scheduling algorithm considers more than one factor at the same time. These factors are scheduability, reliability of the participating processors and achieved degree of parallelism. To achieve most of these goals, we composed an objective function that combines these different factors simultaneously. The proposed objective function is adjustable to provide the user {{with a way to}} prefer one factor to the others. The simulation results indicate that our algorithm produces schedules where the applications deadlines are met, reliability is maximized and the application parallelism is exploited...|$|E
40|$|Abstract—The recent {{emergence}} of 3 D partially reconfigurable FPGAs implies {{that we need}} <b>efficient</b> online hardware <b>task</b> <b>scheduling</b> and placement algorithms for such architectures. However, the algorithms available in the literature for 3 D FPGAs create a “blocking-effect”. That is, these algorithms tend to make a wrong decision in finding a location of each arriving hardware <b>task</b> during runtime <b>scheduling</b> and placement on 3 D partially reconfigurable FPGAs. This leads to currently <b>scheduled</b> <b>tasks</b> blocking future hardware <b>tasks</b> from being <b>scheduled</b> and satisfying their deadlines. We need {{to solve this problem}} to maximize the performance of partially reconfigurable runtime systems implemented using 3 D chip technology. We propose a novel placement and scheduling algorithm with a blocking-aware heuristic to make better decisions at runtime. Based on evaluation using both synthetic and real workloads, our algorithm reduce...|$|R
40|$|Most of the {{existing}} solutions on <b>task</b> <b>scheduling</b> and resource management in grid computing {{are based on the}} traditional client / server model, enforcing a homogeneous policy on making decisions and limiting the flexibility, unpredictable reliability and scalability of the system. Thus, we need well organized system architecture to provide high system availability with <b>task</b> <b>scheduling</b> scheme for Grid system. In this paper, we integrate Grid with P 2 P on to the extended Hypercube topology for <b>task</b> <b>scheduling</b> and load balancing, which gives optimal makespan and balances the load. We propose an <b>efficient</b> SPA based <b>task</b> <b>scheduling</b> algorithm named Double Min Min Algorithm which performs scheduling in order to enhance system performance in Hypercubic P 2 P Grid (HPGRID). The simulation result shows that the SPA based Double Min Min scheduling minimizes the makespan with load balancing and guarantees the high system availability in system performance. At last, the SPA based Double Min Min algorithm is compared with traditional Min Min and Max Min algorithm, by the experiment evaluation it shows that the new algorithm has a better quality of system load balancing and the utilization of system resources...|$|R
40|$|The {{changing}} {{trends of}} high-performance computing from expensive massively parallel machines to medium or small scale general-purpose parallel machines and clusters of workstations {{as well as}} combinations of distributed heterogeneous machines further emphasize the need for developing novel techniques {{for the management of}} computing resources through highly <b>efficient</b> dynamics <b>task</b> allocation, <b>scheduling</b> and load balancing algorithms. This paper presents dynamic scheduling techniques and includes works reporting a wide spectrum of related research. The distinctive feature of dynamic scheduling for parallel and distributed systems is that it takes the notion of time into consideration. In other words, dynamic scheduling is management of computing resources according to their time-dependent states...|$|R
