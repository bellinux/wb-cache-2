3|16|Public
50|$|AmiKit is a {{freeware}} {{compilation of}} more than 350 pre-installed Amiga programs. An <b>integrated</b> <b>emulator</b> enables the user to experience this high-end AmigaOS configuration on Windows, Mac OS, Linux or Android systems. An external source of Amiga ROMs and operating system is required, however.|$|E
40|$|The new {{generation}} of microprocessors, property of Texas Instruments, lets us use not only the {{new generation}} of microprocessors with FRAM memory, but also the new Experimenter's Board. The <b>integrated</b> <b>emulator</b> frees us from using external debug elements, through a USB connection that provides us with the necessary supply of the UART set and communications. The experimental board has been amplified with the CC 3000 module installation for the wireless communications. The connections between computer, microprocessor and mobile phone along their usual scenarios, will be the goal of this project...|$|E
40|$|Analysis of ‘Sea-U’ Branded Fish Ball Consumers Behaviour And The Implication On Marketing Mix of PT. Mitra Pangan Lestari M YULIAN MEIRAD The {{purpose of}} this study were to {{identify}} characteristic of fish ball product consumers, to analyze consumers perception of important fish balls attributes, and to identify consumers atfitudes, perceptions and motivations that influenced SEA-U fish balls consumsion behavior. The data were collected from 96 puposive selected respondents in Jakarta and Bogor. The study utilized Cluster, CHAID, Correspondence and Thurstone methods to analysis the data. The results showed that the respondents could be divided into 4 segments, that were <b>integrated,</b> <b>emulator,</b> experential and achiever. The consumers that consume fish balls were mostly female. The attribute that be the main priority was the taste of fish balls. This study suggest that {{in order to maintain the}} customers satisfaction, the company should improve and develop the product so that it meets consumers want and desire. ...|$|E
50|$|MorphOS {{itself has}} a fully <b>integrated</b> 68k <b>emulator</b> for running many Amiga applications, which were almost {{exclusively}} compiled for the 68k processor, while MorphOS itself is PowerPC. Trance supplements this functionality by adding JIT compilation, increasing {{the speed of}} the emulation. It does not interfere with the full integration of 68k and PowerPC tasks MorphOS provides.|$|R
50|$|An Operator Training Simulator (OTS) is a {{computer-based}} training system {{that uses a}} dynamic simulation model of an industrial process, usually <b>integrated</b> with an <b>emulator</b> of the process plant's Distributed Control System (DCS).|$|R
30|$|Network {{simulators}} with node <b>emulators</b> <b>integrate</b> {{the advantages}} of both the network simulators and node emulators. The network simulator provides the detailed network model. The node emulator gives accurate timing information of the software execution because they simulate the system performance with instruction cycle granularity. However, the interconnection between the network simulator and node emulator may take much time.|$|R
50|$|A {{corporation}} {{formerly known}} as ARDI developed a product called Executor, which can run a compatible selection of 68k Macintosh applications, and is hosted upon either the DOS or Linux operating systems on an Intel CPU. Executor is a cleanroom reimplementation of the Macintosh Toolbox and versions 6 and 7 of the operating system, and an <b>integrated</b> 68k CPU <b>emulator</b> called Syn68k.|$|R
40|$|This thesis {{provides}} {{a set of}} tools for managing uncertainty in Web-based models and workflows. To {{support the use of}} these tools, this thesis firstly {{provides a}} framework for exposing models through Web services. An introduction to uncertainty management, Web service interfaces,and workflow standards and technologies is given, with a particular focus on the geospatial domain. An existing specification for exposing geospatial models and processes, theWeb Processing Service (WPS), is critically reviewed. A processing service framework is presented as a solutionto usability issues with the WPS standard. The framework implements support for Simple ObjectAccess Protocol (SOAP), Web Service Description Language (WSDL) and JavaScript Object Notation (JSON), allowing models to be consumed by a variety of tools and software. Strategies for communicating with models from Web service interfaces are discussed, demonstrating the difficultly of exposing existing models on the Web. This thesis then reviews existing mechanisms for uncertainty management, with an emphasis on emulator methods for building efficient statistical surrogate models. A tool is developed to solve accessibility issues with such methods, by providing a Web-based user interface and backend to ease the process of building and <b>integrating</b> <b>emulators.</b> These tools, plus the processing service framework, are applied to a real case study as part of the UncertWeb project. The usability of the framework is proved with the implementation of aWeb-based workflow for predicting future crop yields in the UK, also demonstrating the abilities of the tools for emulator building and integration. Future directions {{for the development of the}} tools are discussed...|$|R
40|$|The {{electronic}} {{collections of}} today&# 39;s libraries, museums and archives are growing and increasingly {{have a more}} relevant role in the holdings. Memory institutions must address users&# 39; need to access a widening range of digital artefacts. Often the formats of those artefacts are outdated and they cannot be run or rendered on today&# 39;s systems any longer. This is where emulation can provide the required digital environments suitable for a given object type. Practical research is being done at Freiburg University for the Open Planets Foundation on how to <b>integrate</b> different <b>emulators</b> {{for a number of}} original environments into a single graphical desktop. In this case study, options for future reading room systems like stateless Linux workstations are evaluated and prototypical implementations are demonstrated...|$|R
50|$|The {{original}} nanokernel, and {{the tightly}} <b>integrated</b> Mac 68k <b>emulator,</b> {{were written by}} emulation consultant Gary Davidian. Its main purpose is to allow the existing Motorola 68K version of the operating system to run on new hardware. As such, the normal state {{of the system is}} to be running 68K code. The operating system does little until activated by an interrupt, which is quickly mapped to its 68K equivalent within the virtual machine.|$|R
40|$|A {{methodology}} {{aimed at}} prototyping real-time image processing VLSI systems is presented. The prototyping methodology includes the emulation {{of the application}} in its target environment (i. e. in real time and on real-world scenes) and the automatic derivation of a VLSI chip-set implementing the application. Our methodology {{is based on a}} custom emulator called the Data-Flow Functional Computer (DFFC) which is dedicated to real-time image processing. Our method encompasses in a coherent environment: 1) the validation of the high level specification, 2) the simultaneous validation of an implementation of the design suitable for integration and 3) a method for <b>integrating</b> the validated <b>emulator</b> architecture as a VLSI system. The results of the successful prototyping of a defect detector algorithm are presented...|$|R
40|$|Nowadays, {{reconfigurable}} and multiprocessor {{systems are}} becoming increasingly attractive for many applications. Such systems should {{be more and more}} dependable especially if errors occur on bits which change the circuit functionality (reconfiguration bits). In addition, mechatronic and automatically controlled systems often work in harsh environmental conditions which make them more prone to errors due to various disturbances. Thus, designers must consider ways to protect them against such errors. In this paper, a special interest is allowed to the processor architecture dependability. First, we present a stack processor architecture suitable for dependable mechatronic applications (automation, process control) which is implemented using a stack processor emulator. Then, we show the results obtained using a protection method depending on fault injection models <b>integrated</b> on the <b>emulator...</b>|$|R
40|$|Instruction Set Simulators (ISSes) are {{important}} tools for cross-platform software development. The simulation speed {{is a major}} concern and many approaches have been proposed to improve the performance of ISSes. A prevalent technique is compiled simulation, which translates target programs into host instructions. But orders of magnitude of speed deterioration is inevitable since the difference between target and host Instruction Set Architectures (ISAs) can be large. An alternative is to emulate the program without sticking to binary compatibility. The performance problem is solved by using native execution. However, these emulators either require a special programming language, or a given Application Programming Interface (API). Last but not least, it is not trivial to <b>integrate</b> an <b>emulator</b> into a system simulator (which provides devices, external memory, etc., that the embedded programmers do care). In this paper, we propose a fast and generic hybrid simulation approach using virtualization technique to accelerate simulation and simulator-based debugging of C programs. A novel virtual coprocessor (VCP) is introduced as a processing element which executes C functions at high speed. This approach is C 89 compliant and compatible with third party libraries and platform dependent code. It is also retargetable and can be integrated with existing ISSes. Two different ISAs are supported at present: MIPS and mAgic DSP. The average execution speed of the coprocessor is about 100 million simulated instructions per second...|$|R
40|$|Thesis (Master's) [...] University of Washington, 2016 - 06 The Large Hadron Collider (LHC) at the European Center for Nuclear Research (CERN) tracks a {{schedule}} of long physics runs, followed by periods of inactivity known as Long Shutdowns (LS). During these LS phases both the LHC, and the experiments around its ring, undergo maintenance and upgrades. For the LHC these upgrades improve their ability to create data for physicists; the more data the LHC can create the more opportunities there are for rare events to appear that physicists will be interested in. The experiments upgrade so they can record the data and ensure the event won’t be missed. Currently the LHC is in Run 2 having completed the first LS of three. This thesis focuses {{on the development of}} Field-Programmable Gate Array (FPGA) -based readout systems that span across three major tasks of the ATLAS Pixel data acquisition (DAQ) system. The evolution of Pixel DAQ’s Readout Driver (ROD) card is presented. Starting from improvements made to the new Insertable B-Layer (IBL) ROD design, which was part of the LS 1 upgrade; to upgrading the old RODs from Run 1 to help them run more efficiently in Run 2. It also includes the research and development of FPGA based DAQs and <b>integrated</b> circuit <b>emulators</b> for the ITk upgrade which will occur during LS 3 in 2025...|$|R
40|$|The Large Hadron Collider (LHC) at the European Center for Nuclear Research (CERN) tracks a {{schedule}} of long physics runs, followed by periods of inactivity known as Long Shutdowns (LS). During these LS phases both the LHC, and the experiments around its ring, undergo maintenance and upgrades. For the LHC these upgrades improve their ability to create data for physicists; the more data the LHC can create the more opportunities there are for rare events to appear that physicists will be interested in. The experiments upgrade so they can record the data and ensure the event won’t be missed. Currently the LHC is in Run 2 having completed the first LS of three. This thesis focuses {{on the development of}} Field-Programmable Gate Array (FPGA) -based readout systems that span across three major tasks of the ATLAS Pixel data acquisition (DAQ) system. The evolution of Pixel DAQ’s Readout Driver (ROD) card is presented. Starting from improvements made to the new Insertable B-Layer (IBL) ROD design, which was part of the LS 1 upgrade; to upgrading the old RODs from Run 1 to help them run more efficiently in Run 2. It also includes the research and development of FPGA based DAQs and <b>integrated</b> circuit <b>emulators</b> for the ITk upgrade which will occur during LS 3 in 2025...|$|R
40|$|Abstract—A Smart Grid is a {{digitally}} enabled {{electrical grid}} that equips with various embedded devices that can sense, communicate, compute and control. Validating, analyzing and evaluating {{new ideas and}} technologies in Smart Grid require the modeling and emulating of both communication network and power network, {{as well as the}} interactions between them. This paper presents the design, implementation and evaluation of Smart-Grid Common Open Research Emulator (SCORE), the first <b>integrated</b> Smart Grid <b>emulator</b> of both power and communication network. Comparing to the existing works of co-simulation of Smart Grid, SCORE (as an emulator) will significantly reduce the development and test time of new ideas, since the same application program running in SCORE can be easily ported to embedded devices with little or no modification. SCORE supports large-scale emulations since it can be run across multiple network connected computers. I...|$|R
40|$|Instruction-level {{simulation}} {{is necessary}} to evaluate new architectures. However, single-node simulation cannot predict {{the behavior of a}} parallel application on a supercomputer. We present a scalable simulator that couples a cycle-accurate node simulator with a supercomputer network model. Our simulator executes individual instances of IBM’s Mambo PowerPC simulator on hundreds of cores. We <b>integrated</b> a NIC <b>emulator</b> into Mambo and model the network instead of fully simulating it. This decouples the individual node simulators and makes our design scalable. Our simulator runs unmodified parallel message-passing applications on hundreds of nodes. We can change network and detailed node parameters, inject network traffic directly into caches, and use different policies to decide when that is an advantage. This paper describes our simulator in detail, evaluates it, and demonstrates its scalability. We show its suitability for architecture research by evaluating the impact of cache injection on parallel application performance. 1...|$|R
40|$|Abstract—Smart Grid is {{a complex}} cyber-physical system that modernizes the {{traditional}} electric power infrastructure by sensing, control, computation and communication. Validating the functionality, security and reliability of Smart Grid applications within such a system requires the modeling and emulation of both power networks and communication networks, {{as well as the}} interactions between them. In this paper, we present the design, implementation and evaluation of an integrated scalable cyber-physical experiment environment for Smart Grid, called ScorePlus. Compared with previous related works, ScorePlus fills the gap by: 1) Creating and <b>integrating</b> both software <b>emulator</b> and hardware testbed, such that they all follow the same architecture and interface, and the same Smart Grid application program can be tested on either of them without any modification; 2) Providing remote access to the hardware testbed such that users can configure physical devices of the hardware testbed through Internet; 3) Supporting scalable distributed experiments such that multiple software emulators and hardware testbeds running at different locations are able to connect and form a larger Smart Grid system. Index Terms–Cyber-Physical System, Smart Grid, Testbed. I...|$|R
30|$|DTR-ADS {{application}} software {{represented on the}} bottom left of Fig. 5 was <b>integrated</b> to the <b>emulator</b> program {{in order to test}} the delivery of alert signals to mobile devices. In the currently installed DCP network, massive alert relies on radio frequency broadcasting to distribute messages. The popular use of cell phones gave rise to a plethora of applications which greatly improve public dissemination. In particular, it is possible to generate specific alerts, that is, warning messages targeting a specific region at delivery time [2]. Therefore, the only additional information required is location, which {{does not need to be}} fixed, since most modern cell phones are integrated to GPS units [38] or access their position using GPRS [39]. DTR-ADS is a cell phone delivery message system which implements an alert server, a mechanism for users to visualize the entire network map status, and a way to register their location and receive alerts. The emulation version associates a circular zone around each DCP. Every time an alert is issued to that specific alert radius, all pertinent users receive a warning either through a Short Message Service (SMS, [40]) or an interaction with the phone alert software as described in this section.|$|R

