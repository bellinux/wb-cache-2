2|3|Public
40|$|<b>Decimal-to-binary</b> <b>conversion</b> is {{important}} to modern binary computers. The classical method {{to solve this problem}} is based on division operation. In this paper, we investigate a <b>decimal-to-binary</b> <b>conversion</b> method based on addition operation. The method is very easily implemented by software. The cost analysis shows that the latter is more preferable than the classical method. Thus the current Input/Output translation hardware to convert between the internal digit pairs and the external standard BCD codes can be reasonably removed...|$|E
40|$|Decoding tree {{consisting}} of 40 -bit semiconductor read-only memories interconverts binary and decimal numbers 50 to 100 {{times faster than}} current methods. <b>Decimal-to-binary</b> <b>conversion</b> algorithm {{is based on a}} divided-by- 2 iterative equation, binary-to-decimal conversion algorithm utilizes multiplied-by- 2 iterative equation...|$|E
50|$|In {{addition}} to editing the R2RS - R5RS Scheme standards, Clinger's contributions to Scheme {{have included the}} development of compilers for two implementations of the language: MacScheme, and Larceny. He has also invented efficient algorithms for hygienic macro expansion, accurate <b>decimal-to-binary</b> <b>conversions,</b> and bounded-latency generational garbage collection.|$|R
50|$|The first UNIVAC 418-III was {{delivered}} in 1969. It was available with 32,768 to 131,072 words of memory. Memory cycle time {{was reduced to}} 750 nanoseconds. New instructions were added for floating-point arithmetic, binary-to-decimal and <b>decimal-to-binary</b> <b>conversions,</b> and block transfers up to 64 words. The SR register was expanded to 6 bits.The 418-III had two unique hardware features which enabled it to handle continuously high speed serial character streams. One was called the buffer overflow interrupt and the other hardware buffer chaining. By the 1990s, all the 418 hardware was gone, but the California Department of Water Resources was still running 418 emulation on a UNIVAC 1100/60.|$|R
40|$|This note {{discusses}} the main issues in performing correctly rounded <b>decimal-to-binary</b> and binary-to-decimal <b>conversions.</b> It reviews recent work by Clinger and by Steele and White on these conversions and describes some efficiency enhancements. Computational experience with {{several kinds of}} arithmetic suggests that the average computational cost for correct rounding can be small for typical conversions. Source for conversion routines that support this claim is available from netlib...|$|R

