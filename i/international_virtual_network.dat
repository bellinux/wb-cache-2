1|5715|Public
5000|$|Tabeeb, a US-based {{health care}} firm with an <b>international</b> <b>virtual</b> <b>network</b> of {{specialist}} doctors ...|$|E
50|$|The {{area code}} 0181 {{is used for}} <b>international</b> <b>virtual</b> private <b>networks</b> (<b>international</b> user groups). The length of the IVPN block number is three or four digits; the {{terminal}} number may be up to seven digits.|$|R
40|$|The Internet is a {{critical}} resource {{for a new generation}} of small and medium sized enterprise. Specifically, the Internet is important for small entrepreneurial firms in pursuing international opportunities through increased digital integration. As such, the Internet has been identified as a key enabler of international entrepreneurship (Reuber & Fischer, 2011). By facilitating international business for many entrepreneurial SMEs, the Internet has the ability to increase the quality and speed of communications, lower transaction costs, and facilitate the development of international networks. Although the Internet has been found to play a pivotal role in the creation of international relationships and is a mechanism for the creation of international growth opportunities in SMEs (Mathews & Healy, 2008), the role of the international entrepreneurial decision-maker in the development of <b>international</b> <b>virtual</b> <b>networks</b> for leveraging opportunities in internationalisation remains unclear. The findings of this research indicate that developing an ‘international <b>virtual</b> <b>network</b> capability’ forms an important part of the firm’s resource and more specifically dynamic capability base, which is just one component of a firm’s resource bundle that builds towards successful internationalisation via an Internet platform...|$|R
40|$|Colloque avec actes et comité de lecture. internationale. <b>International</b> audienceDynamic <b>Virtual</b> Private <b>Networks</b> (DVPN) are <b>Virtual</b> Private <b>Networks</b> with a {{high degree}} of change in terms of membership, {{implying}} the necessity for fast reconfiguration and provisioning. Their management requires a time and evolution aware network information model capable to capture both temporal and aggregate information. Such a model is proposed in this paper. The resulted model is used in the framework of a programmable and active network based management platform associated with a DVPN service. The particular DVPN service is used in the context of live TV broadcast to subscribed residential users...|$|R
40|$|<b>International</b> audienceProvider-provisioned <b>virtual</b> private <b>networks</b> are {{nowadays}} well-established networking concepts. They are envisaged as {{an extension}} of the basic VPN concept to securely network low-capacity nodes in large-scale personal networks, with the help of network providers. This article presents an adaptation of the Internet Key Exchange(IKEv 2) protocol to the context of dynamic tunneling in personal networks. It relies on the providers' infrastructure to build identity-based security associations. Results of a preliminary security analysis are also provide...|$|R
40|$|This paper deals the {{importance}} of using objects of digital learning from examples prepared in the repository of the project named <b>Virtual</b> <b>International</b> <b>Network</b> of Education (RIVED). Analyze the pedagogic aspects of teacher´s practice in the classroom referring the student apprenticeship by using the digital objects of learning. The theme worked here aims to build and broaden the teaching-learning conditions {{for the improvement of}} work in courses semi-presence and at distance, involving teacher training. Investigate the methodologies contributions involving planning and use of digital objects of learning in on-line teaching...|$|R
40|$|<b>International</b> audienceMost {{existing}} <b>virtual</b> <b>network</b> (VN) provisioning approaches {{assume a}} single administrative domain and therefore, VN deployments {{are limited to}} the geographic footprint of the substrate provider. To enable wide-area VN provisioning, network virtualization architectures {{need to address the}} intricacies of inter-domain aspects, i. e., how to provision VNs with limited control and knowledge of any aspect of the physical infrastructure. To this end, we present a framework for large-scale VN provisioning. We decompose VN provisioning into three steps to overcome the implications of limited information on resource discovery and allocation. We present a new resource selection algorithm with simultaneous node and link mapping to assign resources within each domain. We use a signaling protocol that integrates resource reservations for virtual link setup with Quality-of-Service guarantees. Our experimental results show that small VNs can be provisioned within a few seconds...|$|R
40|$|<b>International</b> audienceThe <b>Virtual</b> Private <b>Networks</b> (VPN) optimal {{bandwidth}} allocation {{problem with}} tree toplogy {{has been widely}} discussed in the literature. Most of the algorithms proposed by researchers {{to solve this problem}} use approximation schemes. In this paper, we propose an exact and efficient Branch-and-Cut algorithm for the problem {{in the context of a}} hose workload model. In particular, we consider the case when the ingress and egress traffic at VPN endpoints are asymetric and the links of the network have unbounded capacities. The algorithm proposed here is based on a linear integer programming formulation for the problem introduced by Kumar et al. [2]. Using this and a deep investigation of the polyhedral structure of that formulation, our algorithm permits to solve large instances of the problem having up to 120 nodes and 10 terminals...|$|R
40|$|<b>International</b> audienceEmbedding of <b>virtual</b> <b>network</b> (VN) {{requests}} {{on top of}} {{a shared}} physical network poses an intriguing combination of theoretical and practical challenges. Two major problems with the state-of-the-art VN embedding algorithms are their indifference to the underlying substrate topology and their lack of reoptimization mechanisms for already embedded VN requests. We argue that topology-aware embedding together with reoptimization mechanisms can ameliorate the performance of the previous VN embedding algorithms in terms of acceptance ratio and load balancing. The major contributions of this paper are twofold: (1) we present a mechanism to differentiate among resources based on their importance in the substrate topology, and (2) we propose a set of algorithms for reoptimizing and re-embedding initially-rejected VN requests after fixing their bottleneck requirements. Through extensive simulations, we show that not only our techniques improve the acceptance ratio, but they also provide the added benefit of balancing load better than the previous proposals...|$|R
40|$|<b>International</b> audienceFor years, <b>Virtual</b> <b>Network</b> Operators (VNOs) are a {{major player}} in the {{satellite}} communication market landscape. Typically, they repackage services leased from Satellite Network Operators (SNOs) to provide their customers with added-value end-to-end services that mostly go beyond the satellite network and cover terrestrial networks. However, the level of control and visibility that VNOs have on their purchased satellite services (and the underlying satellite resources) is limited mainly because of SNOs' protective policies and the closed nature of satellite devices. From the VNO perspective, this refrains the development of novel satellite communication services and complicates the provision process of the services that they offer to their customers. To address these limitations, this paper proposes and elaborates on the idea of exposing to VNOs, an Openflow based switch abstraction of the satellite segment. The feasibility and the opportunities brought by such an abstraction to VNOs are presented as well as the technical requirements to make it a reality. Insights on how it can be implemented are presented complemented with a proof of concept implementation on the OpenSAND satellite system emulation platform...|$|R
40|$|Abstract—Network {{virtualization}} allows {{cloud infrastructure}} providers to accommodate multiple <b>virtual</b> <b>networks</b> {{on a single}} physical network. However, mapping multiple <b>virtual</b> <b>network</b> resources to physical <b>network</b> components, called <b>virtual</b> <b>network</b> embedding (VNE), {{is known to be}} non-deterministic polynomial-time hard (NP-hard). Effective <b>virtual</b> <b>network</b> embedding increases the revenue by increasing the number of accepted <b>virtual</b> <b>networks.</b> In this paper, we propose <b>virtual</b> <b>network</b> embedding algorithm, which improves <b>virtual</b> <b>network</b> embedding by coarsening <b>virtual</b> <b>networks.</b> Heavy Clique matching technique is used to coarsen <b>virtual</b> <b>networks.</b> Then, the coarsened <b>virtual</b> <b>networks</b> are enhanced by using a refined Kernighan-Lin algorithm. The performance of the proposed algorithm is evaluated and compared with existing algorithms using extensive simulations, which show that the proposed algorithm improves <b>virtual</b> <b>network</b> embedding by increasing the acceptance ratio and the revenue. Keywords—cloud computing; network virtualization; resource allocation; substrate <b>network</b> fragmentation; <b>virtual</b> <b>network</b> embedding; <b>virtual</b> <b>network</b> coarsening I...|$|R
40|$|A router {{includes}} {{a plurality of}} <b>virtual</b> <b>networks,</b> a plurality of output links, at least one decoder and arbitration circuitry. Each <b>virtual</b> <b>network</b> has a plurality of <b>virtual</b> <b>network</b> inputs and a plurality of <b>virtual</b> <b>network</b> outputs. Each <b>virtual</b> <b>network</b> output is associated with an output link. The decoder decodes a header of a data unit received on a <b>virtual</b> <b>network</b> {{of one of the}} <b>virtual</b> <b>network</b> inputs. The decoder generates a first request and a second request. The first request is for the allocation of a <b>virtual</b> <b>network</b> output of the <b>virtual</b> <b>network</b> to the <b>virtual</b> <b>network</b> input. The second request is for the allocation of an output link associated with the <b>virtual</b> <b>network</b> output to the <b>virtual</b> <b>network</b> output. The arbitration circuitry performs arbitration of the first request and arbitration of the second request in parallel...|$|R
40|$|Network {{virtualization}} allows {{cloud infrastructure}} providers to accommodate multiple <b>virtual</b> <b>networks</b> {{on a single}} physical network. However, mapping multiple <b>virtual</b> <b>network</b> resources to physical <b>network</b> components, called <b>virtual</b> <b>network</b> embedding (VNE), {{is known to be}} non-deterministic polynomial-time hard (NP-hard). Effective <b>virtual</b> <b>network</b> embedding increases the revenue by increasing the number of accepted <b>virtual</b> <b>networks.</b> In this paper, we propose <b>virtual</b> <b>network</b> embedding algorithm, which improves <b>virtual</b> <b>network</b> embedding by coarsening <b>virtual</b> <b>networks.</b> Heavy Clique matching technique is used to coarsen <b>virtual</b> <b>networks.</b> Then, the coarsened <b>virtual</b> <b>networks</b> are enhanced by using a refined Kernighan-Lin algorithm. The performance of the proposed algorithm is evaluated and compared with existing algorithms using extensive simulations, which show that the proposed algorithm improves <b>virtual</b> <b>network</b> embedding by increasing the acceptance ratio and the revenue. Comment: (IJACSA) International Journal of Advanced Computer Science and Applications, Vol. 6, No. 1, 201...|$|R
40|$|The Internet faces {{well-known}} {{challenges in}} realizing {{modifications to the}} core architecture. To help overcome these limitations, the use of network virtualization has been proposed. Network virtualization enables the deployment of novel network architectures and services on existing Internet infrastructure. <b>Virtual</b> <b>networks</b> run over physical networks and use Internet paths and protocols as essentially a link layer in the <b>virtual</b> <b>network.</b> <b>Virtual</b> <b>networks</b> can also share the resources in the physical substrate. Effective use of the underlying substrate network requires intelligent placement of <b>virtual</b> <b>networks</b> so that underlying resources do not incur over-subscription. Because <b>virtual</b> <b>networks</b> can come and go over time, and underlying networks can experience their own dynamic changes, <b>virtual</b> <b>networks</b> need to be migrated [...] -re-mapped to the physical network during active operation [...] -to maintain good performance. While <b>virtual</b> <b>network</b> placement, {{and to a lesser}} extent migration, has been studied in the past, little attention has been devoted to designing, deploying, and evaluating migration mechanisms for <b>virtual</b> <b>networks.</b> In this dissertation, we design <b>virtual</b> <b>network</b> migration mechanisms for different substrate platforms and further design a system to mitigate the effects of <b>virtual</b> <b>network</b> migration. In particular this dissertation makes the following contributions: 1. With the goal of minimizing the disruption during a <b>virtual</b> <b>network</b> migration, we design three algorithms for scheduling the sequence of virtual router moves that takes a <b>virtual</b> <b>network</b> from its original placement to its new placement. 2. We design and implement a controller-based architecture for <b>virtual</b> <b>network</b> migration on PlanetLab. This work explores the challenges in implementing <b>virtual</b> <b>network</b> migration on real infrastructure. Recommendations are given for infrastructure that support <b>virtual</b> <b>network</b> migration. 3. We propose and implement a mechanism to mitigate the performance degradation resulting from <b>virtual</b> <b>network</b> migration through transport and application layer collaboration. We utilize a centralized controller to notify the end-systems or the gateways about the time of the <b>virtual</b> <b>network</b> migration such that we prevent packet loss to the application traffic of the end-systems. Ph. D...|$|R
40|$|One of {{the main}} {{objectives}} of cloud computing providers is increasing the revenue of their cloud datacenters by accommodating <b>virtual</b> <b>network</b> requests as many as possible. However, arrival and departure of <b>virtual</b> <b>network</b> requests fragment physical network’s resources and reduce the possibility of accepting more <b>virtual</b> <b>network</b> requests. To {{increase the number of}} <b>virtual</b> <b>network</b> requests accommodated by fragmented physical networks, we propose two <b>virtual</b> <b>network</b> embedding algorithms, which coarsen <b>virtual</b> <b>networks</b> using Heavy Edge Matching (HEM) technique and embed coarsened <b>virtual</b> <b>networks</b> on best-fit sub-substrate networks. The performance of the proposed algorithms are evaluated and compared with existing algorithms using extensive simulations, which show that the proposed algorithms increase the acceptance ratio and the revenue...|$|R
40|$|Network {{virtualization}} {{provides the}} ability to run multiple concurrent <b>virtual</b> <b>networks</b> over a shared substrate. However, {{it is challenging to}} design such a platform to host multiple heterogenous and often highly customized <b>virtual</b> <b>networks.</b> Not only minimal interference among different <b>virtual</b> <b>networks</b> is desired, high speed packet processing is also required. This paper presents PdP, a flexible <b>virtual</b> <b>network</b> platform which can achieve high speed packet processing. A PdP node has a cluster of machines that can perform packet processing in parallel. Each <b>virtual</b> <b>network</b> can be allocated with one or multiple forwarding machines so as to satisfy the packet processing requirement of the <b>virtual</b> <b>network.</b> Furthermore, a <b>virtual</b> <b>network</b> hosted in PdP has the freedom to be fully customized. Both the control plane and the data plane of a <b>virtual</b> <b>network</b> run in <b>virtual</b> machines so as to be isolated from other <b>virtual</b> <b>networks.</b> We have built a proofof-concept prototype of the PdP platform using off-the-shelf commodity hardware and open source software. The performance measurement shows promising results. Categories andSubjectDescriptor...|$|R
40|$|International audienceAdapting {{virtualization}} {{concepts to}} satisfy network telecommunication challenges receives {{more and more}} attention. The <b>virtual</b> <b>network</b> environment is formed {{by the amount of}} bounded virtual resources provided by physical <b>network</b> equipments. Deploying <b>virtual</b> <b>network</b> infrastructure has recently caught more research interests due to its flexibility and manageability. However, <b>virtual</b> <b>network</b> deployment is not evident as it should be. Therefore, it is now necessary to provide virtual environment design to coexist <b>virtual</b> <b>networks</b> and their respective operators. In this article, we describe our <b>virtual</b> <b>network</b> environment architecture. We explain the proposed organization strategies to improve <b>virtual</b> <b>network</b> urbanization. The initial results and quantitative analysis of the architecture deployment are exposed...|$|R
40|$|<b>Virtual</b> <b>networks</b> are an {{important}} tool for deploying new services {{on top of the}} Internet. We present the TAO algorithm to automatically manage the topology of <b>virtual</b> <b>networks,</b> allowing nodes to be added and removed automatically, and adjusting the topology to optimize performance. By automating the tasks of maintaining the set of nodes and configuring the tunnels between them, we can reduce the administrative costs and allow scaling to much larger <b>virtual</b> <b>networks</b> than what is currently practical. We focus primarily on the Active Networks testbed, or ABone, though our work has applications in all classes of <b>virtual</b> <b>networks.</b> 1 Introduction <b>Virtual</b> <b>networks</b> are {{an important}} tool used to deploy a variety of new services and algorithms on top of the Internet. Our work is focused on automating the management of <b>virtual</b> <b>networks,</b> both to ease administrative costs and improve network performance as the number of nodes in a <b>virtual</b> <b>network</b> grows. 1. 1 <b>Virtual</b> <b>networks</b> Often referred [...] ...|$|R
3000|$|... better {{economy of}} the {{substrate}} <b>network</b> resources supporting <b>virtual</b> <b>networks.</b> Since <b>virtual</b> <b>networks</b> are built on a physical network infrastructure, {{it is necessary to}} avoid an abuse of these resources with the risk of causing the hosted <b>virtual</b> <b>networks</b> malfunctions.|$|R
50|$|A <b>Virtual</b> <b>Network</b> Adapter is the software-emulated virtual Ethernet adapter. A VPN Client {{can create}} several <b>Virtual</b> <b>Network</b> Adapters on the client computer. A VPN user can {{establish}} a VPN session between the <b>Virtual</b> <b>Network</b> Adapter and the destination Virtual Hub of the remote VPN Server. While the VPN session is established, the VPN user can communicate to the remote VPN <b>network</b> through the <b>Virtual</b> <b>Network</b> Adapter. Since the <b>Virtual</b> <b>Network</b> Adapter works {{as if it}} were the physical one, any applications or operating system components can be used without any modification.|$|R
40|$|The creation, {{deployment}} {{and management}} of network architecture is manual, time consuming and costly. To the network architect the creation process is ad-hoc in nature, based on hand crafting small-scale network prototypes that evolve toward wide scale deployment. We envision a different paradigm where `spawning networks' are capable of profiling, spawning, architecting and managing distinct <b>virtual</b> <b>network</b> architecture on-the-fly. This paper {{provides an overview of}} a <b>virtual</b> <b>network</b> kernel and its life cycle of spawning <b>virtual</b> <b>networks,</b> and focuses particularly on the role of resource management of <b>virtual</b> <b>networks.</b> We describe, virtuosity, a <b>virtual</b> <b>network</b> resource management system that minimizes the complexity of handling multiple spawned <b>virtual</b> <b>networks</b> that operate over multiple timescales. Virtuosity is driven by per-virtual network policy exerting control and management over multiple spawned <b>virtual</b> <b>networks</b> (characterized by a set of resources) and their spawned architectur [...] ...|$|R
5000|$|Users on {{machines}} {{within the}} <b>virtual</b> <b>network</b> {{have access to}} all other machines on the same <b>virtual</b> <b>network.</b>|$|R
30|$|The {{algorithms}} in {{this paper}} model requests dynamically arriving for <b>virtual</b> <b>network</b> establishment on network substrates. Each request specifies the topology of the <b>virtual</b> <b>network,</b> the resources demanded by the <b>virtual</b> <b>network</b> elements, and the QoS requirements, which include a time limit to instantiate it.|$|R
40|$|With their {{widespread}} deployment, {{the need}} to provide QoS in <b>virtual</b> <b>networks</b> is being realized. In an earlier work [1] we showed that traditional scheduling algorithms like WFQ are incapable of providing bounded delay service in a <b>virtual</b> <b>network</b> and presented a class of scheduling algorithms for <b>virtual</b> <b>networks.</b> We also showed that scheduling algorithms with rate control, thus possessing the bounded output burstiness property [1], may be used in a <b>virtual</b> <b>network</b> to provide bounded end-to-end delay. We now present simulation results for rate controlled schedulers in <b>virtual</b> <b>networks</b> to show that the concept of bounded output burstiness is indeed useful and helps reducing the worst case end-to-end delays in <b>virtual</b> <b>networks.</b> We also show that bounded output burstiness reduces sharing among best effort traffic and how best effort traffic can be handled efficiently...|$|R
40|$|Abstract—Network {{virtualization}} is a core {{technology in}} next-generation networks {{to overcome the}} ossification problem that is observed in the current Internet. The key idea of network virtualization is to split physical network resources into multiple logical networks, each supporting different network services and functionalities. One of the key challenges for <b>virtual</b> <b>network</b> in-frastructure providers is to efficiently allocate network resources based on <b>virtual</b> <b>network</b> requests, which {{is referred to as}} the <b>virtual</b> <b>network</b> mapping problem. While several algorithms have been proposed previously to solve this mapping problem, their effectiveness is limited since virtual requests specify the internal topology of the <b>virtual</b> <b>network.</b> In this paper, we argue that such internal topologies lead to unnecessary constraints and less efficient solutions. Instead, we propose an alternate formulation of the problem that represents <b>virtual</b> <b>network</b> requests as traffic matrices. We provide a solutions to solving this traffic-matrix-based mapping problem using a mixed integer programming formulation. Our simulation results show that our approach can map significantly more <b>virtual</b> <b>network</b> requests on a physical network infrastructure than previous mapping algorithms and thus improves the efficient use of networking resources in <b>virtual</b> <b>networks.</b> Index Terms—mixed integer programming, network virtual-ization, traffic matrix, <b>virtual</b> <b>network</b> embedding I...|$|R
40|$|Abstract—We propose, implement, and {{evaluate}} VIPER, {{a system to}} isolate, provide QoS, and manage <b>virtual</b> <b>networks.</b> Contrary to previous approaches, VIPER guarantees a fine sharing of physical resources among <b>virtual</b> <b>networks</b> according to the different parameters that describe the service level agreements. The main components of the proposed system are the resource sharing manager and the <b>virtual</b> <b>network</b> admission controller. The resource sharing manager achieves isolation by dynamically adapting itself to the resource demands of each <b>virtual</b> <b>network.</b> Based on the data monitored by the resource sharing manager, the <b>virtual</b> <b>network</b> admission controller builds network profiles that {{serve as the basis}} for arbitrating the access of new <b>virtual</b> <b>networks</b> to the physical substrate. VIPER also supports two levels of QoS control, one for the <b>virtual</b> <b>network</b> operator and the other for the infrastructure provider, reducing delays by up to 18 times in the analyzed scenarios. We developed a prototype whose evaluation reveals that VIPER, when compared to the other solutions in the literature: (i) enforces contracted agreements, (ii) provides an efficient admission control of new <b>virtual</b> <b>networks,</b> and (iii) reduces physical resource utilization by up to 25 %. I...|$|R
40|$|Abstract-Resources {{assigned}} to <b>virtual</b> <b>network</b> are not optimal resources, which {{are caused by}} some scarce resources. To solve this problem, this paper proposes a novel <b>virtual</b> <b>network</b> mapping algorithm that can realize mapping cost minimizing, called CMVNMA, based on two characteristics of network virtualization environment, that is <b>virtual</b> <b>network</b> has lifecycle and substrate network resources are increased or decreased periodically. CMVNM includes <b>virtual</b> <b>network</b> mapping sub-algorithm (VNMsA) that can label virtual nodes and virtual links which are not allocated optimal resources, and heuristic migration sub-algorithm (HMsA) that can realize saved substrate resources maximization and migration cost minimization. Simulation results show that CMVNMA can save around 15 % substrate network resources, and HMsA can use litter time to save the most substrate network resources than greedy migration algorithm (GMA) and random migration algorithm (RMA). Keywords-migration, <b>network</b> virtualization, <b>virtual</b> <b>network</b> mapping, <b>virtual</b> <b>network</b> resource allocation. ...|$|R
40|$|The DECOS {{integrated}} architecture {{supports the}} sharing of a single time-triggered network for multiple application subsystems. As its communication infrastructure each application subsystem possesses a <b>virtual</b> <b>network</b> with guaranteed temporal properties, which is realized {{on top of the}} physical time-triggered network. This paper presents a solution for the model-based design of <b>virtual</b> <b>networks</b> in order to reduce development time and avoid design faults. A graphical modeling tool enables system engineers to create a <b>virtual</b> <b>network</b> model that captures all relevant properties for instantiating <b>virtual</b> <b>networks</b> in a specific application. The <b>virtual</b> <b>network</b> model forms the input to a code generator, the output of which can be deployed on the target system together with the application code. The development process is exemplified in an automotive example, which exploits <b>virtual</b> <b>networks</b> for application subsystems derived from present-day automotive architectures...|$|R
40|$|This {{document}} describes {{issues associated}} with providing multi-tenancy in large data center networks and how these issues may be addressed using an overlay-based network virtualization approach. A key multi-tenancy requirement is traffic isolation so that one tenant’s traffic is not visible to any other tenant. Another requirement is address space isolation so that different tenants can use the same address space within different <b>virtual</b> <b>networks.</b> Traffic and address space isolation is achieved by assigning one or more <b>virtual</b> <b>networks</b> to each tenant, where traffic within a <b>virtual</b> <b>network</b> can only cross into another <b>virtual</b> <b>network</b> in a controlled fashion (e. g., via a configured router and/or a security gateway). Additional functionality is required to provision <b>virtual</b> <b>networks,</b> associating a <b>virtual</b> machine’s <b>network</b> interface(s) with the appropriate <b>virtual</b> <b>network</b> and maintaining that association as the virtual machine is activated, migrated, and/or deactivated. Use of an overlay-based approach enables scalable deployment on large network infrastructures. Narten, et al. Informational [Page 1...|$|R
40|$|Assigning <b>virtual</b> <b>network</b> {{resources}} to physical <b>network</b> components, called <b>Virtual</b> <b>Network</b> Embedding, {{is a major}} challenge in cloud computing platforms. In this paper, we propose a memetic elitist pareto evolutionary algorithm for <b>virtual</b> <b>network</b> embedding problem, which is called MEPE-VNE. MEPE-VNE applies a non-dominated sorting-based multi-objective evolutionary algorithm, called NSGA-II, to reduce computational complexity of constructing a hierarchy of non-dominated Pareto fronts and assign a rank value to each <b>virtual</b> <b>network</b> embedding solution based on its dominance level and crowding distance value. Local search is applied to enhance <b>virtual</b> <b>network</b> embedding solutions and speed up convergence of the proposed algorithm. To reduce loss of good solutions, MEPE-VNE ensures elitism by passing <b>virtual</b> <b>network</b> embedding solutions with best fitness values to next generation. Performance of the proposed algorithm is evaluated and compared with existing algorithms using extensive simulations, which show that the proposed algorithm improves <b>virtual</b> <b>network</b> embedding by increasing acceptance ratio and revenue while decreasing the cost incurred by substrate network. Comment: URL: [URL] ISSN 1913 - 8989 E-ISSN 1913 - 8997,Published by Canadian Center of Science and Educatio...|$|R
40|$|The {{internet}} {{is a means of}} communication that cannot be disregarded by contemporaryeducational systems. Public and private incentive policies aimed at the application ofdigital devices in the exchange of knowledge in and outside schools have beenimplemented in the last decades. However, risks posed by academic research on line arewidely acknowledged with regard to the quality of information (Lourenço, 2010). One of themain aspects of this issue is the selection of reliable and potentially educational pagesdeveloped for specific target audiences. This study has the objective of providingguidelines for those who intend to develop sites, wiki pages, and educational PBwikisfocused on Biochemistry, or even adapt existing ones. Considering {{the fact that there is}} nospecific legislation for the use of the Internet in Brazil, it is necessary to stimulate selfregulationof the sector in order to establish minimum quality standards, safety, andreliability of sites containing information in the educational area. Thus, it is necessary toestablish some parameters to help guiding research for educational purposes on theinternet. To be a potentially didactic Biochemistry page, one must follow this set oforientation: clearly establish the target audience and, then, define the contents the properway. Once the materials have been organized, establish, whenever possible and pertinent,links with references to professional and/ or research home pages, to ProfessionalAssociations in the Biochemistry field, among others. Link the page to an institutionalresearch program, such as <b>International</b> <b>Virtual</b> Education <b>Network,</b> a program developedby the Brazilian Distance Education Department. Finally, it is necessary to provideinteractive possibilities and dynamic images of the biochemical processes studied in classthat will justify and differentiate the page from the many existing ones. Such proceduresare essential to guarantee that online searches made for educational purposes find qualitytheoretical and pedagogical information...|$|R
30|$|One of {{the main}} {{concerns}} regarding availability is the abuse of physical resources by <b>virtual</b> <b>networks.</b> <b>Virtual</b> <b>networks</b> may attempt to use as much resources as possible {{in order to maximize}} their performance. If the environment is not adequately protected, this behavior may lead to the exhaustion of physical resources, compromising the availability of other <b>virtual</b> <b>networks</b> hosted on the same substrate. Therefore, physical resources must be shared in a fair manner, and actions performed by a <b>virtual</b> <b>network</b> must not negatively impact others.|$|R
30|$|Although {{isolation}} {{is one of}} the main security requirements in virtual networking, there are cases in which distinct <b>virtual</b> <b>networks</b> must be able to cooperate. The federation of <b>virtual</b> <b>networks</b> can, for example, enable end-to-end connectivity – through virtual devices of distinct <b>virtual</b> <b>networks</b> – or allow access to distinct services. However, it may not be possible to provide interoperability due to the heterogeneous nature of <b>virtual</b> <b>networks</b> (which may implement different, incompatible protocols). Chowdhury et al. [25] partially tackle this issue with a framework that manages identities in this kind of environment. The main objective of the work is to provide a global identification system. To this end, the authors employ a decentralized approach in which controllers and adapters are placed in each <b>virtual</b> <b>network.</b> Controllers provide functionalities such as address allocation and name resolution, while adapters act as gateways between <b>virtual</b> <b>networks,</b> performing address and protocol translations. The proposed global identification system does not restrict the internal identification mechanisms used locally by <b>virtual</b> <b>networks,</b> allowing each <b>virtual</b> <b>network</b> to keep its own internal naming scheme. Additionally, global identifiers used by this framework are unique, immutable, and not associated with physical location, in order to not hinder the security or mobility of virtual devices.|$|R
40|$|Abstract—Virtual network embedding, {{which means}} mapping <b>virtual</b> <b>networks</b> {{requested}} by users to a shared substrate network maintained by an Internet Service Provider, {{is a key}} function that network virtualization needs to provide. Prior work on <b>virtual</b> <b>network</b> embedding has primarily focused on maximizing the the revenue of the Internet Service Provider and did not consider the energy cost in accommodating such requests. As energy cost is {{more than half of}} the operating cost of the substrate networks, while trying to accommodate more <b>virtual</b> <b>network</b> requests, minimizing energy cost is critical for infrastructure providers. In this work, we make the first effort towards energy aware <b>virtual</b> <b>network</b> embedding. We first pro-pose an energy cost model and formulate the energy aware <b>virtual</b> <b>network</b> embedding problem as an integer linear programming problem. We then propose two efficient energy aware <b>virtual</b> <b>network</b> embedding algorithms: a heuristic based algorithm and a particle swarm optimization technique based algorithm. We implemented our algorithms in C++ and performed side-by-side comparison with prior algorithms. The simulation results show that our algorithms significantly reduce the energy cost by up to 50 % over the existing algorithm for accommodating the same sequence of <b>virtual</b> <b>network</b> requests. Index Terms—Network virtualization, <b>virtual</b> <b>network</b> embed-din...|$|R
30|$|One of {{the main}} issues in network {{virtualization}} is the efficient mapping of <b>virtual</b> <b>networks</b> onto the substrate network[4, 5]. This mapping determines the allocation of routers and links of the <b>virtual</b> <b>network</b> onto the routers and links of the substrate network. However, {{the search for the}} optimal mapping of <b>virtual</b> <b>networks</b> is an NP-hard problem[6].|$|R
40|$|With {{more and}} more mission‐critical networking‐intensive workloads being virtualized and consolidated, <b>virtual</b> <b>network</b> {{performance}} {{has never been more}} important and relevant than today. VMware has been continuously improving the performance of its <b>virtual</b> <b>network</b> devices. VMXNET Generation 3 (VMXNET 3) is the most recent <b>virtual</b> <b>network</b> device from VMware, and was designed from scratch for high performanc...|$|R
