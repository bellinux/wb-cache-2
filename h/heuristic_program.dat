16|457|Public
50|$|Takizawa et al. (1996) {{reported}} on a <b>heuristic</b> <b>program</b> for detecting puns in the Japanese language.|$|E
50|$|In 1961 in his {{dissertation}} at the Massachusetts Institute of Technology with Marvin Minsky, Slagle developed the first expert system, SAINT (Symbolic Automatic INTegrator), {{which is a}} <b>heuristic</b> <b>program</b> that solves symbolic integration problems in freshman calculus.|$|E
40|$|Warehouse Location is a nonconvex {{programming}} problem {{involving the}} geographic placing and sizing of intermediate facilities in distribution studies. The nonconvexities {{are caused by}} economies of scale associated {{with the cost of}} building and operating the facilities. A <b>heuristic</b> <b>program</b> has been developed for solving warehouse location problems when these economies are representable by continuous concave functions. The paper discusses the heuristics used and computational experience with the program on "practical" problems. On the basis of two numerical examples for which an optimal solution was obtained through a special purpose experimental mixed integer programming code, it is conjectured (1) that near optimal solutions can be achieved using the <b>heuristic</b> <b>program</b> and (2) that optimal sizing and locating of facilities are very sensitive to the shapes of the warehousing cost functions. ...|$|E
5000|$|<b>Heuristic</b> <b>Programming</b> in Artificial Intelligence (with D. F. Beal), 1989.|$|R
5000|$|... 1979-1984: Research Assistant, <b>Heuristic</b> <b>Programming</b> Project, Department of Computer Science, Stanford University.|$|R
40|$|Intelligent problem-solving, {{whether by}} man or by machine, implies {{selective}} {{rather than just}} rapid behavior. Humans achieve this selectivity through heuristics [...] principles that, on the average, contribute to reduction of search in problem-solving. <b>Heuristic</b> <b>programming</b> is the construction of computer problem-solving programs whose behavior is similarly organized. This paper surveys the present and potential use of <b>heuristic</b> <b>programming</b> in management science. ...|$|R
40|$|Abstract: In this paper, {{the authors}} present a noble {{heuristic}} reading machine for blind people. The {{goal of this}} paper is to use intelligent-control method to settle down the reading machine by a touch-pat device for blind people. The proposed “A noble heuristic reading device for blind people”can efficiently help blind people for reading and train the blind people learning the dot-touched words as well. First of all, the feedback control theorem associated with some sensors is used to accomplish the action of automatic fixed position of the reading machine. Second, a <b>heuristic</b> <b>program</b> used to analyze a certain word by converting dot-touched signals into meaningful code will transfer word-code into phonetic signals and speak out for blind people effectively and precisely through personal computer interface. There are three units in the proposed design, which includes the hardware structure, the analysis for certain word-meaning and the phonetic output of the specified words. The test results show that the proposed smart reading machine can effectively prompt learning and reading effects for blind people. Key-Words: Intelligent control method, touch-pat, <b>heuristic</b> <b>program,</b> feedback control theorem and phonetic signal, programming...|$|E
40|$|Graduation date: 1979 This thesis extends Wagner-Whitin's Planning Horizon Theorem to {{discount}} situations in multiperiod multiple-item dynamic lot sizing problems. Three heuristic techniques are developed using the Least Unit Cost Method, Silver-Meal Method, and Inoue-Chang Method. The three techniques are described and compared {{in terms of}} their effectiveness in dealing with the dynamic lot sizing problem. These techniques are modified in order to apply to single-item discount situations. The performance of these modified techniques are tested by using Kaimann's data with discount data added and 100 additional sets of randomly generated data. A <b>heuristic</b> <b>program</b> has been developed {{for each of the three}} methods. Each program is designed to handle joint-order multiperiod, multiple-item dynamic lot sizing problems. In addition, both no discount and with discount situations are studied in the development of each program. All the above programs were first developed under the assumption that no split orders occurred. A mathematical programming model was then developed for the situations where the split orders were allowed. The difficulties involved in searching solutions using the mixed integer programming model are discussed. A two-item problem with one discount level is selected to illustrate the developed programs. The performance of the heuristic programs are measured and estimated through the use of dynamic programming techniques applied to some selected special situations as benchmarks. The comparisons of performance of the heuristic programs among themselves are also conducted based upon the costs of reaching solutions and the optimality of the solutions reached by using those programs. In our testing examples, the average costs of solutions reached by the heuristic methods based upon the Least Unit Cost Method, Silver-Meal Method, and Inoue-Change Method are - 560. 9, - 1475. 28, and - 1742. 36 respectively. The average CPU times for each <b>heuristic</b> <b>program</b> to reach a solution for a 12 -period two-item single discount problem are 0. 052 sec., 0. 064 sec., and 0. 054 sec. respectively. A conclusion is reached that the <b>heuristic</b> <b>program</b> based upon the Inoue-Chang Method has significant advantages over other programs...|$|E
40|$|The general {{conclusion}} of our {{examination of the}} work of the Messrs. Kuehn and Hamburger [Kuehn, A. A., M. J. Hamburger. 1963. A <b>heuristic</b> <b>program</b> for locating warehouses. Management Sci. 9 (4) 643 - 666. ] is that they have made available an important tool {{for the study of the}} warehouse location problem. At present it appears to have significant limitations, but it is likely that further work can make it more useful. Ultimately some combination of these methods as a first approximation, and then the use of simulation techniques may provide the answer. ...|$|E
40|$|Traditionally, fed-batch {{biochemical}} process optimization and control uses complicated off-line optimizers, with no on-line model adaptation or reoptimization. This study demonstrates {{the applicability of}} a class of adaptive critic designs for on-line reoptimization and control of an aerobic fed-batch fermentor. Specifically, the performance of an entire class of adaptive critic designs, viz., <b>heuristic</b> dynamic <b>programming</b> (HDP), dual <b>heuristic</b> <b>programming</b> (DHP) and generalized dual <b>heuristic</b> <b>programming</b> (GDHP), was demonstrated to be superior {{to that of a}} heuristic random optimizer (HRO), on optimization of a fed-batch fermentor operation producing monoclonal antibodies...|$|R
5000|$|Buchanan, B.G. and Shortliffe, E.H. (eds). Rule-Based Expert Systems: The MYCIN Experiments of the Stanford <b>Heuristic</b> <b>Programming</b> Project. Reading, MA: Addison-Wesley, 1984. See http://aaai.org/AITopics/RuleBasedExpertSystems.|$|R
40|$|<b>Heuristic</b> <b>programming</b> was {{the first}} area in which AI methods were tested. The {{favourite}} case-studies were fairly simple toy-problems, such as cryptarithmetic, games, such as checker or chess, and formal problems, such as logic or geometry theorem-proving. These problems are well-defined, roughly speaking, at least in comparison to real-life problems, and as such have {{played the role of}} Drosophila in early AI. In this paper I will investigate the origins of <b>heuristic</b> <b>programming</b> and the shift to more knowledge-based and real-life problem solving...|$|R
40|$|The paper {{describes}} a very apparent application of heuristic problem solving to accounts receivable management, namely in {{the location of}} lock-boxes. Lock-boxes are post office boxes selected in a company's distribution area {{in order to minimize}} the time necessary for the company to collect and to have available the funds remitted by its customers in payment of their obligations. The paper starts with a statement of and {{solution to the problem of}} measuring a given set of locations. Next the difficulties with the formulation are pointed out and a <b>heuristic</b> <b>program</b> to reach a satisfactory solution is described. The program is written in FORTRAN IV and is currently being tested. ...|$|E
40|$|The main {{objective}} {{of this paper is}} presentation of complete details on two procedures for solving transshipment plant location problems: procedures called 2 ̆ 2 Simple Version of 0 RA(1, t) 2 ̆ 2 and 2 ̆ 2 Simple Version of 0 RA(2, t) 2 ̆ 2 in Ladd and Lifferth [61. The second of these two procedures is a 2 ̆ 2 heuristic 2 ̆ 2 procedure or a 2 ̆ 2 <b>heuristic</b> <b>program.</b> 2 ̆ 2 A number of heuristic procedures have already appeared in the literature for solving plant location problems: in papers by King and Logan Chern and Polopolus p 32 ̆ 2 |, Warrack and Fletcher [12] and Candler^ Snyder and Faught [2]...|$|E
40|$|The authors {{present a}} system for the {{recognition}} of handwritten Arabic text using neural networks. This work builds upon previous work that dealt with the vertical segmentation of the written text. However, faced with some problems like overlapping characters that share the same vertical space, we tried to fix that problem by performing horizontal segmentation. In this research we will use two basic neural networks to perform the task; the first one identifies blocks {{that need to be}} horizontally segmented, and the second one performs the horizontal segmentation. Both networks use a set of features that are extracted using a <b>heuristic</b> <b>program.</b> The system was tested and the rate of recognition obtained was over 90 %. This strongly supports the usefulness of proposed measures for handwritten Arabic text. PublishedN/...|$|E
40|$|We {{discuss a}} variety of Adaptive Critic Designs (ACDs) for neurocontrol. These are {{suitable}} for learning in noisy, nonlinear, and nonstationary environments. They have common roots as generalizations of dynamic programming for neural reinforcement learning approaches. Our discussion of these origins leads to an explanation of three design families: <b>Heuristic</b> Dynamic <b>Programming</b> (HDP), Dual <b>Heuristic</b> <b>Programming</b> (DHP), and Globalized Dual <b>Heuristic</b> <b>Programming</b> (GDHP). The main emphasis is on DHP and GDHP as advanced ACDs. We suggest two new modifications of the original GDHP design that are currently the only working implementations of GDHP. They promise to be useful for many engineering applications {{in the areas of}} optimization and optimal control. Based on one of these modifications, we present a unified approach to all ACDs. This leads to a generalized training procedure for ACDs. 1 The authors gratefully acknowledge support from the Texas Tech Center for Applied Research, Ford Moto [...] ...|$|R
40|$|COGENT /COmpiler and GENeralized Translator/ {{programming}} {{system is a}} compiler whose input language enables a description of symbolic and linguistic manipulation algorithms. Primarily {{for use as a}} compiler-compiler, it is also applicable to algebraic manipulation, mechanical theorem proving, and <b>heuristic</b> <b>programming...</b>|$|R
40|$|The MIT Artificial Intelligence Project has {{a variety}} of goals all bound {{together}} by search for principles of intelligent behavior. Among our immediate goals are to develop systems with practical applications for: Visually-controlled automatic manipulation and physical world problem-solving, machine understanding of natural language text and narrative, and advanced applied mathematics. The long-range goals are concerned with simplifying, unifying and extending the techniques of <b>heuristic</b> <b>programming.</b> We expect the results of our work to: make it easier to write and debug large <b>heuristic</b> <b>programs,</b> develop packaged collections of knowledge about many different kinds of things, lending to programs with more resourcefulness, understanding and common sense", and identify and sharpen certain principles for programming intelligence...|$|R
40|$|This {{paper will}} compare {{the concept of}} nature as it appears in the philosophies of the American pragmatist John Dewey and the Chinese text known as the Zhuangzi, with an aim towards mapping out a <b>heuristic</b> <b>program</b> which {{might be used to}} correct various interpretive diﬃ culties in reading each ﬁ gure. 8 I shall argue that Dewey and Zhuangzi both held more complex and {{comprehensive}} philosophies of nature than for which either is typically credited. Such a view of nature turns on the notion of continuity, particularly that between an experiencing organism [Dewey’s “live creature”] and the conditioning environment [Zhuangzi’s “crooked tree”]. Where Dewey’s and Zhuangzi’s ideas about nature converge, one ﬁ nds similarities in prescriptions made for human action, and in the few places where they diﬀ er, one ﬁ nds mutually complementary insights. info:eu-repo/semantics/publishedVersio...|$|E
40|$|Various {{heuristic}} {{and pattern}} recognition techniques {{have been applied}} to a data base of 125 underivatised nucleoside mass spectra to determine certain aspects of structure from an unknown spectrum. A <b>heuristic</b> <b>program</b> has been written encoding nucleoside mass spectral fragmentations {{in order to determine}} molecular weight, formula weight of the purine or pyrimidine base part, and, unsuccessfully, base type. The pattern recognition methods of statistical linear discriminant function analysis, learning machine approach, distance from the mean, and k-nearest neighbour classification have been applied to the same data base divided into training and prediction sets. Analyses were conducted to determine numbers of carbon, oxygen, and nitrogen atoms present in the base alone and in the nucleoside as a whole, substitution patterns, and base type. Prediction success for all approaches was typically in the range 76 - 86 %, or in terms of the figure of merit 0. 20 - 0. 27...|$|E
40|$|This paper {{deals with}} {{technical}} issues relevant to artificial neural net (ANN) training by genetic algorithms. Neural nets have applications ranging from perception to control; {{in the context}} of control, achieving great precision is more critical than in pattern recognition or classification tasks. In previous work, the authors have found that when employing genetic search to train a net, both precision and training speed can be greatly enhanced by an input renormalisation technique. In this paper we investigate the automatic tuning of such renormalisation coefficients, as well as the tuning of the slopes of the transfer functions of the individual neurons in the net. Waiting time analysis is presented {{as an alternative to the}} classical "mean perfomance" interpretation of GA experiments. It is felt that it provides a more realistic evaluation of the real-world usefulness of a GA. 1 The Usefulness of Automatic Parameter Tuning The operator of a <b>heuristic</b> <b>program</b> spends a lot of time pr [...] ...|$|E
40|$|Abstract: This paper {{presents}} {{the design of}} a neurocontroller for a turbogenerator that augments/replaces the conventional Automatic Voltage Regulator (AVR) and the turbine governor. The neurocontroller uses a novel technique based on the Adaptive Critic Designs (ACDs) with emphasis on <b>Heuristic</b> Dynamic <b>Programming</b> (HDP) and Dual <b>Heuristic</b> <b>Programming</b> (DHP). Results are presented to show that the DHP based neurocontroller is robust and performs better than the HDP based neurocontroller, as well as the conventional controller, especially when the system conditions and configuration changes...|$|R
40|$|He {{possesses}} two of {{the three}} qualities for the ideal detective. He has the power of observation and that of deduction. He is wanting only in knowledge [...] . ” Sherlock Holmes, in speaking of Franois de Villard, the French detective Abstract. <b>Heuristic</b> <b>programming</b> was the first area in which AI methods were tested. The favourite case-studies were fairly simple toyproblems, such as cryptarithmetic, games, such as checker or chess, and formal problems, such as logic or geometry theorem-proving. These problems are well-defined, roughly speaking, at least in comparison to real-life problems, and as such have played the role of Drosophila in early AI. In this chapter I will investigate the origins of <b>heuristic</b> <b>programming</b> and the shift to more knowledge-based and real-life problem solving. ...|$|R
40|$|The {{approximate}} {{dynamic programming}} method known as Dual <b>Heuristic</b> <b>Programming</b> (DHP) {{is applied to}} the design of a fuzzy controller for a 4 -wheel, 2 -axle vehicle. This controller is designed to guide an autonomous automobile on a curved road while maintaining lateral acceleration at comfortable levels. 1...|$|R
40|$|We {{address the}} {{question}} of how one evaluates the usefulness of a <b>heuristic</b> <b>program</b> on a particular input. If theoretical tools do not allow us to decide for every instance whether a particular heuristic is fast enough, might we at least write a simple, fast companion program that makes this decision on some inputs of interest? We call such a companion program a timer for the heuristic. Timers are related to program checkers, as defined by Blum [3], in the following sense: Checkers are companion programs that check the correctness of the output produced by (unproven but bounded-time) programs on particular instances; timers, on the other hand, are companion programs that attempt to bound the running time on particular instances of correct programs whose running times have not been fully analyzed. This paper provides a family of definitions that formalize the notion of a timer and some preliminary results that demonstrate the utility of these definitions. 1 Introduction We address the [...] ...|$|E
40|$|Includes bibliographical {{references}} (leaves 60 - 63). In {{this work}} {{we present a}} system for the recognition of handwritten Arabic text using neural networks. This work builds upon previous work done by [Hamid 2001]. That part dealt with the vertical segmentation of the written text. However, faced with some problems like overlapping characters that share the same vertical space, we tried to fix that problem by performing horizontal segmentation. In this research we will use two basic neural networks to perform the task; {{the first one to}} identify blocks that need to be horizontally segmented, and the second one to perform the horizontal segmentation. Both networks use a set of features that are extracted using a <b>heuristic</b> <b>program.</b> The system was tested with over 1500 characters (each character has on average about 50 rows) and the rate of recognition obtained was over 90 %. This strongly supports the usefulness of proposed measures for handwritten Arabic text. 1 bound copy: iv, 63 leaves; ill. (some col.); 30 cm. Available at RNL...|$|E
40|$|This {{dissertation}} will {{compare the}} concept of nature as it appears in the philosophies of the American pragmatist John Dewey and the Chinese daoist Zhuangzi (Chuang Tzu) and will defend two central claims. The first of these is that Dewey and Zhuangzi share a view of nature that is non-reductive, philosophically liberal, and more comprehensive than the accounts recurrent {{in much of the}} Western tradition. This alternate conception of nature is non-reductive in the way that it avoids the physically mechanistic outlook underwriting much of contemporary Anglo-American thought. It is philosophically liberal in that it accepts a more generous and progressive position than predominant Western orthodoxies. And, it is more comprehensive in scope insofar as it draws as much from the social sciences as it does from the natural sciences. The second claim defended will be that the synoptic vision gained from such a comparison offers a new <b>heuristic</b> <b>program</b> for research into the philosophical position known as naturalism, a program that can, at once, avoid the scientistic tendencies of the current, mainstream treatment of nature and reconnect with earlier, more inclusive models. Where Dewey 2 ̆ 7 s and Zhuangzi 2 ̆ 7 s ideas converge, one finds similarities in the prescriptions each made for human action, and where they differ, one finds mutually complementary insights. Finally, this heuristic will be used to refute various interpretations of Dewey and Zhuangzi that tend to understate or ignore the importance of nature within their schemes...|$|E
2500|$|Kronrod had a {{profound}} interest in artificial intelligence known in the USSR {{at the time as}} <b>heuristic</b> <b>programming.</b> He is well known for saying, [...] "chess is the Drosophila of artificial intelligence." [...] This quote graces the top of the American Association for Artificial Intelligence [...] "Games & Puzzles" [...] chess home page.|$|R
5000|$|George's {{research}} interests concerned cybernetics and related fields. In the 1980s his research ranged from [...] "artificial intelligence; industrial and management cybernetics {{with emphasis on}} modelling and <b>heuristic</b> <b>programming</b> approaches to research in organizational behaviour". During his academic career he authored over 20 books ranging from psychology, cybernetics, digital computing and robotics, to philosophy of science.|$|R
40|$|This paper {{presents}} {{the design of}} an optimal neurocontroller that replaces the conventional automatic voltage regulator (AVR) and the turbine governor for a turbogenerator connected to the power grid. The neurocontroller design uses a novel technique based on the adaptive critic designs (ACDs), specifically on <b>heuristic</b> dynamic <b>programming</b> (HDP) and dual <b>heuristic</b> <b>programming</b> (DHP). Results show that both neurocontrollers are robust, but that DHP outperforms HDP or conventional controllers, especially when the system conditions and configuration change. This paper also shows how to design optimal neurocontrollers for nonlinear systems, such as turbogenerators, without having to do continually online training of the neural networks, thus avoiding risks of instability...|$|R
40|$|Graduation date: 1980 The {{purpose of}} land use planning, as {{conducted}} by the Forest Service, is to allocate land uses. The techniques employed in the current planning process fail to take location of the land allocations into account in any systematic manner. The resulting solutions may be inconsistent with planning goals; the land use patterns produced may not provide the maximum value {{of goods and services}} possible while protecting long-term biological productivity of the Forest. This study examines the impact of location on land allocation decisions, developing a strategy and set of techniques for incorporating spatial factors into the allocation process. Three spatial factors affect land allocation decisions: 1) the size of a land unit required to make management of a use practical, conflicts caused by the adjacent location of specific uses, and the need to organizes across the landscape to take advantage of certain characteristics of the planning unit. Three promising strategies are investigated: 1) an optimizing algorithm, 2) an efficient solution algorithm, and 3) an assignment algorithm. The optimizing algorithm replaces the linear program currently employed in the planning process with an integer program able to consider location of land units in the allocation process. The efficient solution algorithm uses an integer program to create a land use pattern from the linear program acreage allocations. Computer core size limitations and the size and complexity of the planning problem prevent application of these strategies. The assignment approach overcomes these difficulties with a heuristic algorithm designed to locate linear program allocations on the platining unit. The computer programs required to support the spatial allocation strategy include: 1) a computer mapping program, 2) a detail reductioti program, 3) an adjacency program, 4) the <b>heuristic</b> <b>program,</b> and 5) a conflict detection program. The mapping program creates land units and keeps track of their location. The detail reduction program eliminates some complexity from the land base data. The adjacency program identifies adjacent land units. The conflict detection program detects conflicts caused by uses located adjacent to each other and violations of minimum land unit size. The spatial allocation strategy and its associated tools are tested on the Clackamas Planning Unit of the Mt. Hood National Forest. Results of this case study indicate that the approach is workable with minor modifications...|$|E
50|$|Expert {{systems were}} first {{developed}} in artificial intelligence laboratories {{as an attempt}} to understand complex human decision making. Based on positive results from these initial prototypes, the technology was adopted by the US business community (and later worldwide) in the 1980s. The Stanford <b>heuristic</b> <b>programming</b> projects led by Edward Feigenbaum was one of the leaders in defining and developing the first expert systems.|$|R
40|$|Abstract—This paper {{proposes a}} novel {{fault-tolerant}} optimal neurocontrol scheme (FTONC) for a static synchronous series compensator (SSSC) {{connected to a}} multimachine benchmark power system. The dual <b>heuristic</b> <b>programming</b> technique and radial basis function neural networks are used to design a nonlinear optimal neurocontroller (NONC) for the external control of the SSSC. Compared to the conventional external linear controller, the NONC improves the damping performance of the SSSC. The internal control of the SSSC is achieved by a conventional linear controller. A sensor evaluation and (missing sensor) restoration scheme (SERS) is designed by using the autoassociative neural networks and particle swarm optimization. This SERS provides a set of fault-tolerant measurements to the SSSC controllers, and therefore, guarantees a fault-tolerant control for the SSSC. The proposed FTONC is verified by simulation studies in the PSCAD/EMTDC environment. Index Terms—Dual <b>heuristic</b> <b>programming</b> (DHP), faulttolerant optimal neurocontrol, missing sensor restoration (MSR), particle swarm optimization (PSO), radial basis funtion network, static synchronous series compensator (SSSC). I...|$|R
40|$|Kalah is {{a simple}} game of {{draughts}} for two players which is well suited for <b>heuristic</b> <b>programming.</b> The paper describes a program which can play Kalah and which adapts itself to the human playing strength. The essence {{of the program is}} formed by a recursive algorithm for analyzing and weighing a given position. A brief description is given of how one can write recursive subprograms in Fortran...|$|R
40|$|The {{purpose of}} this study is to examine single {{facility}} warehouse location models. The need for such a study is primarily two-fold. First, single facility warehouse location models which determine an alleged optimum location through a coordinate system have been developed. Secondly, the need for additional research is necessary because the approaches involving linear <b>programming,</b> simulation, or <b>heuristic</b> <b>programming</b> do not by definition generate an optimal location...|$|R
40|$|Abstract—This paper {{presents}} {{the design of}} an optimal neurocontroller that replaces the conventional automatic voltage regulator (AVR) and the turbine governor for a turbogenerator connected to the power grid. The neurocontroller design uses a novel technique based on the adaptive critic designs (ACDs), specifically on <b>heuristic</b> dynamic <b>programming</b> (HDP) and dual <b>heuristic</b> <b>programming</b> (DHP). Results show that both neurocontrollers are robust, but that DHP outperforms HDP or conventional controllers, especially when the system conditions and configuration change. This paper also shows how to design optimal neurocontrollers for nonlinear systems, such as turbogenerators, without having to do continually online training of the neural networks, thus avoiding risks of instability. Index Terms—Adaptive critics, artificial neural networks (ANNs), neurocontrol, optimal control, turbogenerator control...|$|R
