8|10000|Public
5000|$|<b>Example</b> <b>of</b> <b>search</b> for [...] "LOG" [...] in jsmith's home {{directory}} tree:$ find ~jsmith -exec grep LOG '{}' /dev/null \; -print/home/jsmith/scripts/errpt.sh:cp $LOG $FIXEDLOGNAME/home/jsmith/scripts/errpt.sh:cat $LOG/home/jsmith/scripts/title:USER=$LOGNAME ...|$|E
50|$|TalkMiner, an <b>example</b> <b>of</b> <b>search</b> of {{specific}} fragments from videos by text recognition, analyzes each video once per second looking for identifier {{signs of a}} slide, such as its shape and static nature, captures {{the image of the}} slide and uses Optical Character Recognition (OCR) to detect the words on the slides. Then, these words are indexed in the search engine of TalkMiner, which currently offers to users more than 20,000 videos from institutions such as Stanford University, the University of California at Berkeley, and TED.|$|E
5000|$|<b>Example</b> <b>of</b> <b>search</b> for {{the string}} [...] "ERROR" [...] in all XML files {{in the current}} working {{directory}} tree:$ find [...] -name [...] "*.xml" [...] -exec grep [...] "ERROR" [...] /dev/null '{}' \+ The double quotes (" [...] ") surrounding the search string and single quotes (...) surrounding the braces are optional in this example, but needed to allow spaces and some other special characters in the string. Note with more complex text (notably in most popular shells descended from `sh` and `csh`) single quotes are often the easier choice, since double quotes do not prevent all special interpretation. Quoting filenames which have English contractions demonstrates how this can get rather complicated, since a string with an apostrophe in {{it is easier to}} protect with double quotes:$ find [...] -name [...] "file-containing-can't" [...] -exec grep [...] "can't" [...] '{}' \; -print ...|$|E
25|$|An <b>example</b> <b>of</b> <b>searching</b> {{a target}} {{database}} with a DNA query sequence {{is shown in}} Figure 2.|$|R
5000|$|The oldest <b>example</b> <b>of</b> <b>searching</b> for {{a finite}} p-group by the {{strategy}} of pattern recognition via Artin transfers goes back to 1934, when A. Scholz and O. Taussky ...|$|R
40|$|A {{method for}} {{analysis}} and determination of telecommunication network parameters is developed, and their mathematic models are constructed along with {{determination of the}} parameter domains and ranges of independent variables. A method for optimization and criterion of optimization are presented. An <b>example</b> <b>of</b> <b>searching</b> for optimal parameters of telecommunication network is provided. ??????????? ????? ??????? ? ??????????? ?????????? ???????????????????? ?????, ?? ?????????????? ??????, ?????????? ??????? ????????? ?????????? ? ??????? ??????? ???????? ??????????? ??????????, ?????????? ????? ???????????, ???????? ???????????. ???????? ?????? ?????? ??????????? ???????? ?????????? ???????????????????? ????...|$|R
50|$|An {{important}} <b>example</b> <b>of</b> <b>search</b> personalization is Google. There are {{a host of}} Google applications, all {{of which}} can be personalized and integrated {{with the help of a}} Google account. Personalizing search does not require an account. However, one is almost deprived of a choice, since so many useful Google products are only accessible if one has a Google account. The Google Dashboard, introduced in 2009, covers more than 20 products and services, including Gmail, Calendar, Docs, YouTube, etc. that keeps track of all the information directly under one's name. The free Google Custom Search is available for individuals and big companies alike, providing the Search facility for individual websites and powering corporate sites such as that of the New York Times. The high level of personalization that was available with Google played a significant part in helping remain the world's most favorite search engine.|$|E
40|$|AB - The {{identification}} of promoters and their regulatory elements {{is one of}} the major challenges in bioinformatics and integrates comparative, structural, and functional genomics. Many different approaches have been developed to detect conserved motifs in a set of genes that are either coregulated or orthologous. However, although recent approaches seem promising, in general, unambiguous {{identification of}} regulatory elements is not straightforward. The delineation of promoters is even harder, due to its complex nature, and in silico promoter prediction is still in its infancy. Here, we review the different approaches that have been developed for identifying promoters and their regulatory elements. We discuss the detection of cis-acting regulatory elements using word-counting or probabilistic methods (so-called search by signal" methods) and the delineation of promoters by considering both sequence content and structural features ("search by content" methods). As an <b>example</b> <b>of</b> <b>search</b> by content, we explored in greater detail the association of promoters with CpG islands. However, due to differences in sequence content, the parameters used to detect CpG islands in humans and other vertebrates cannot be used for plants. Therefore, a preliminary attempt was made to define parameters that could possibly define CpG and CpNpG islands in Arabidopsis, by exploring the compositional landscape around the transcriptional start site. To this end, a data set of more than 5, 000 gene sequences was built, including the promoter region, the 5 '-untranslated region, and the first introns and coding exons. Preliminary analysis shows that promoter location based on the detection of potential CpG/CpNpG islands in the Arabidopsis genome is not straightforward. Nevertheless, because the landscape of CpG/CpNpG islands differs considerably between promoters and introns on the one side and exons (whether coding or not) on the other, more sophisticated approaches can probably be developed for the successful detection of "putative" CpG and CpNpG islands in plants"status: publishe...|$|E
40|$|Background When library users {{need to find}} a {{complete}} copy of an unpublished psychological test they often turn to the reference staff for help. The best places to look for unpublished tests are in journal articles and in test compilation reference books but searching for tests in these sources can be difficult. Research databases can help you determine which journal articles made use of a particular test but most databases don 2 ̆ 7 t indicate if a copy of the actual test is included in the article. Searching for tests in reference books is even more difficult. Library catalog records rarely list the individual tests included in a compilation and your library catalog cannot search the compilations not owned by your library or library consortium. Fortunately, there are two resources freely available on the web that can help you determine which tests are available in journal articles and in test compilations. 1. TestLink, a database constructed by Educational Testing Service (ETS) is very useful for locating complete copies of tests in journal articles. 2. Tests and Measures in the Social Sciences: Tests available in Compilation Volumes, is a resource created by Helen Hough at the University of Texas at Arlington. It is an online index of tests available in test compilations. Resources TestLink Searching TestLink {{is the best way to}} determine which tests are available in journal articles. TestLink database records include an Availability field which often lists a reference to a journal article. When a journal article is listed {{a complete}} copy of the test is usually available in the article. Tests included in journal articles are frequently located at the end of the article, in an appendix, but some can be found within methods or results sections. Screen shots show the TestLink homepage with a description of the resource and an <b>example</b> <b>of</b> <b>search</b> results for the test 2 ̆ 2 Acculturation Rating Scale for Mexican Americans 2 ̆ 2. The journal article listed in the Availability field includes an appendix that contains a complete copy of the test...|$|E
40|$|When {{a digital}} library is {{decomposed}} into many geographi-cally distributed repositories, search efficiency becomes an is-sue. Increasing network congestion {{makes this a}} compelling issue. We discuss an effective method for reducing the num-ber of servers needed {{to respond to a}} query and give <b>examples</b> <b>of</b> <b>search</b> space reduction in the NCSTRL distributed digital library...|$|R
40|$|The solving {{of tasks}} on the contact {{interaction}} of two annular punches and isotropic layer with residual deformations is built. Numerical <b>example</b> <b>of</b> <b>searching</b> components <b>of</b> contact strain under the punch is considered. The effect of {{parameters of the}} field of residual deformations and form of punch on distributing contact stresses tensions is analyzed...|$|R
40|$|Rob Chestnut, Requirements & Stakeholder Relations Branch Chief, U. S. Census Bureau, Data Access and Dissemination Systems (DADS), Requirements and Stakeholder Relations Team (RSR) Demonstration {{of new and}} {{enhanced}} features in American FactFinder. The demonstration will highlight features such as Community Facts and Guided Search and will provide some brief <b>examples</b> <b>of</b> <b>searching</b> for data in American FactFinder...|$|R
40|$|Um importante mecanismo da arquitetura orientada a serviços é o componente de registro de serviços. Ele permite a interação entre provedores e clientes, oferecendo um meio de acesso aos serviços desenvolvidos e publicados no registro. Nesta dissertação é proposto o desenvolvimento de um registro de serviços para dar apoio à publicação, busca e classificação de serviços Web, em particular, àqueles relacionados a ferramentas de teste de software. Uma limitação comum dos serviços de registro refere-se às buscas realizadas, pois são basicamente sintáticas e podem trazer resultados pouco relacionados aos interesses do usuário. Para {{resolver}} este problema uma ontologia de teste foi adaptada e incorporada ao registro com o objetivo de oferecer facilidades de busca e agregar informação semântica nos serviços registrados. Uma arquitetura genérica baseada em serviços para o domínio de engenharia de software é apresentada e instanciada para o domínio de teste de software com o objetivo de auxiliar no entendimento e implementação do registro de serviços proposto. Também são apresentados exemplos de ferramentas de teste publicadas no registro e um exemplo de busca e interação com o serviço de teste JaBUTiWS, previamente publicado no registro, que tem por objetivo apoiar o teste estrutural de componentes e serviçosAn important {{mechanism of}} Service Oriented Architecture is the service registry (or service broker). It allows interaction among providers and consumers, offering {{a point to}} access the services developed and published in the registry. In this dissertation we propose {{the development of a}} service broker to support the publication, search and categorization of Web services, particularly those related to software testing tools. A common limitation of service brokers refers to searching facilities since they are primarily syntactic and thus can bring results that are not well related with the userś interest. To tackle this problem a test ontology was adapted and incorporated into the broker with the aim of improving the likelihood of finding the correct service in searches and also to add semantic information to the registered services. A generic service oriented architecture for the software engineering domain is presented and instantiated to the software testing domain with the purpose of facilitating the understanding and implementation of the proposed service registry. We also present some examples of software testing tools published in the registry and an <b>example</b> <b>of</b> <b>search</b> and interaction with the JaBUTiWS testing service, previously published in the registry, which aims to support structural testing of components and service...|$|E
50|$|<b>Examples</b> <b>of</b> human <b>search</b> engines include ApexKB, ChaCha, Mahalo.com and the {{now defunct}} NowNow (from Amazon.com) and Sproose.|$|R
40|$|In {{this paper}} we {{consider}} the problem of designing a self-improving meta-model of job workflow that is sensitive to the change of the computational environment. As an <b>example</b> <b>of</b> <b>searched</b> combinatorial objects permutations and some classes of integral graphs are used. We propose a number of dedicated methods that can improve the execution time of workflow based on decision trees and the replication of some actors in the workflow...|$|R
40|$|Highlights <b>of</b> the <b>search</b> for SUSY at ATLAS are {{presented}} emphasising on the variety <b>of</b> <b>searches</b> that were {{performed in the}} LHC Run I in p-p collisions at a centre of mass of 7 TeV and 8 TeV. Searches for squars, gluinos, third generation squarks and electroweakinos in R-parity conserving scenarios and an <b>example</b> <b>of</b> <b>searches</b> in R-parity violating scenarios are highlighted. Comment: 9 pages, 8 figures, {{to appear in the}} proceedings of the Interplay between Particle and Astroparticle Physics workshop, 18 - 22 August, 2014, held at Queen Mary University of London, U...|$|R
50|$|The website is an <b>example</b> <b>of</b> {{vertical}} <b>search.</b> As <b>of</b> 2016 CV-Library {{is one of}} the top 500 most visited websites in the UK {{according to}} alexa.com.|$|R
40|$|An {{algorithm}} {{for generating}} combinatorial structures {{is said to}} be an orderly algorithm if it produces precisely one representative of each isomorphism class. In this paper we describe a way to construct an orderly algorithm that is suitable for several common searching tasks in combinatorics. We illustrate this with <b>examples</b> <b>of</b> <b>searches</b> in finite geometry, and an extended application where we classify all the maximal partial flocks of the hyperbolic and elliptic quadrics in PG(3; q) for q 13...|$|R
40|$|Artificial {{intelligence}} methods {{find their}} practical usage in many applications including maritime industry. The paper {{concentrates on the}} methods of uninformed and informed search, potentially usable in solving of complex problems based on the state space representation. The problem <b>of</b> introducing the <b>search</b> algorithms to newcomers has its technical and psychological dimensions. The authors show {{how it is possible}} to cope with both of them through design and use of specialized authoring systems. A typical <b>example</b> <b>of</b> <b>searching</b> a path through the maze is used to demonstrate how to test, observe and compare properties <b>of</b> various <b>search</b> strategies. Performance <b>of</b> <b>search</b> methods is evaluated based on the common criteria...|$|R
40|$|Contents Preface 1 1 Introduction 4 1. 1 Spain and Almera........................ 4 1. 2 Department and University................... 5 1. 2. 1 University......................... 5 1. 2. 2 Department........................ 6 1. 3 Packing Circle Problem..................... 6 2 Problem Definition 8 2. 1 Equivalent Formulations..................... 8 2. 2 Characteristics of Packing Circles................ 9 2. 3 Di#erent Solution Approaches.................. 10 2. 3. 1 <b>Examples</b> <b>of</b> Local <b>Search</b> Algorithms......... 11 2. 3. 2 <b>Examples</b> <b>of</b> Global <b>Search</b> Algorithms......... 12 3 Euclidean {{distances}} in {{the plane}} 15 4 Two Branch and Bound based Algorithms 18 4. 1 A branch and bound algorithm................. 18 4. 1. 1 Initial State............... ...|$|R
50|$|The BLAT Search Genome {{available}} on the UCSC website accepts query sequences as text (cut and pasted into the query box) or uploaded as text files. The BLAT Search Genome can accept multiple sequences of the same type at once, up {{to a maximum of}} 25. For multiple sequences, the total number of nucleotides must not exceed 50,000 for DNA searches or 25,000 letters for protein or translated sequence searches.An <b>example</b> <b>of</b> <b>searching</b> a target database with a DNA query sequence is shown in Figure 2.|$|R
50|$|Alan Emtage - Emtage {{developed}} one <b>of</b> {{the first}} <b>examples</b> <b>of</b> an Internet <b>search</b> utility.|$|R
40|$|Abstract. Programmers often {{search for}} Open Source code {{to use in}} their projects. To {{understand}} how and why programmers search for source code, we conducted a web-based survey and collected data from 69 respondents, including 58 specific <b>examples</b> <b>of</b> <b>searches.</b> Analyzing these anecdotes, we found {{that they could be}} categorized along two orthogonal dimensions: motivation (reuse vs. reference <b>example)</b> and size <b>of</b> <b>search</b> target. The targets <b>of</b> these <b>searches</b> could range in size from a block (a few lines of code) to a subsystem (e. g. library or API), to an entire system. Within these six combinations of motivations and target sizes, nine repeating motifs, or archetypes, were created to characterize Internet-scale source code searching. Tools used for searching and the criteria for selecting a component are also discussed. We conclude with guidance on how these archetypes can inform better evaluation <b>of</b> Internet-scale code <b>search</b> engines, as well as the design of new features for these tools...|$|R
5000|$|... #Caption: An <b>example</b> <b>of</b> {{a complex}} <b>search</b> {{combining}} object, title and abstract queries with a date filter ...|$|R
40|$|In {{this note}} a {{selection}} <b>of</b> <b>searches</b> for physics beyond {{the standard model}} with photons in the final states, performed using using 36 pb^- 1 of data collected in pp collisions at √(s) = 7 TeV at the LHC with the CMS detector, is presented. Common {{issues related to the}} reconstruction of photons coming from potential new physics signal are outlined, followed by three <b>examples</b> <b>of</b> <b>searches</b> with the early data. No evident hints of effects beyond the standard model show up. As a consequence, limits on the parameters of models for excited leptons, strong gravity, and warped extra-dimensions are derived. Most of limits presented in this note are the most stringent to date...|$|R
3000|$|Therefore, “Software game {{development}} lifecycle process”, “Computer game {{development design}} process” and “video game testing process” are some <b>examples</b> <b>of</b> the <b>search</b> strings and similar way different search strings were formed {{in order to}} capture all relevant studies.” [...]...|$|R
40|$|Abstract: In {{this paper}} a {{computational}} mode is presented base on DNA molecules. This model incorporates the theoretical simulation {{of the principal}} operations in genetic algorithms. It defines the way of coding of individuals, crossing {{and the introduction of}} the individuals so created into the population. It resolves satisfactorily the problems of fitness coding. It shows also the model projection for the resolution of TSP. This is the basic step that will allow the resolution <b>of</b> larger <b>examples</b> <b>of</b> <b>search</b> problems beyond the scope of exact exponentially sized DNA algorithms like the proposed by Adleman [Adleman, 1994] and Lipton [Lipton, 1995]...|$|R
40|$|We {{explain why}} quantum {{adiabatic}} evolution and simulated annealing perform similarly in certain <b>examples</b> <b>of</b> <b>searching</b> for the minimum of a cost function of n bits. In these examples each bit is treated symmetrically so the cost function depends {{only on the}} Hamming weight of the n bits. We also give two examples, closely related to these, where the similarity breaks down in that the quantum adiabatic algorithm succeeds in polynomial time whereas simulated annealing requires exponential time. Comment: 16 pp., 10 EPS figures, using BoxedEPS macros and LaTeX. Email correspondence to E. Farhi <farhi@mit. edu...|$|R
50|$|Local search {{algorithms}} {{are widely}} applied to numerous hard computational problems, including problems from computer science (particularly artificial intelligence), mathematics, operations research, engineering, and bioinformatics. <b>Examples</b> <b>of</b> local <b>search</b> algorithms are WalkSAT and the 2-opt algorithm for the Traveling Salesman Problem.|$|R
40|$|A {{conflict}} {{is an event}} in which two or more aircraft experience a loss of minimum separation. In this paper, we formulate the problem of solving conflicts arising among several aircraft moving in a shared airspace as a Constraint Satisfaction Problem (CSP). The constraint satisfaction problem being NP-complete, the algorithms developed to solve it have been of two types: non-systematic and systematic search methods. In this paper, we have considered a breakout algorithm as an <b>example</b> <b>of</b> non-systematic <b>search</b> methods and a backtracking procedure that maintains Arc Consistency (MAC) as an <b>example</b> <b>of</b> systematic <b>search</b> methods. The performance of these algorithms was compared experimentally and the Breakout algorithm is shown to be clearly superior...|$|R
40|$|Jet physics {{represents}} {{a powerful tool}} to investigate the properties of quark andgluon interactions. With the advent of LHC, these studies have been possible atan energy never investigated before. In this proceedings we review the main char-acteristics of jets measured by the ATLAS experiment in proton-proton collisionsat center-of-mass energies of 7 and 8 TeV. The experimental results are comparedwith the predictions of the Quantum Chromodymamics, QCD, the standard theory of quark-gluon interactions. A good agreement is found between data and QCD predictions. The jet mesurements provide also a clue {{in the search for}} new physics: a few <b>examples</b> <b>of</b> <b>searches</b> for excited quarks and supersymmetric particles are presented...|$|R
5000|$|... #Caption: An <b>example</b> <b>of</b> a <b>search</b> for [...] in {{the working}} set structure. After finding , it is removed from [...] and {{inserted}} into [...] Finally, a shift from 1 to 4 is performed in which an element is removed from [...] and inserted into [...] for [...]|$|R
40|$|Endeavours {{to guide}} {{managers}} {{through the maze}} of business information. Does not pretend to be a survey of all existing business literature, but provides pointers in three key areas – that of business directories including Internet sources, market information, and company information. Includes some <b>examples</b> <b>of</b> company <b>searches...</b>|$|R
5000|$|The A* search {{algorithm}} is an <b>example</b> <b>of</b> best-first <b>search,</b> as is B*. Best-first algorithms {{are often used}} for path finding in combinatorial search. (Neither A* nor B* is a greedy best-first search as they incorporate the distance from start in addition to estimated distances to the goal.) ...|$|R
50|$|<b>Examples</b> <b>of</b> long-running {{restricted}} <b>searches</b> are Art Shapiro's Butterfly Project in the US (started in 1972), and the UK Butterfly Monitoring Scheme (started in 1976).|$|R
40|$|This paper advocates {{the use of}} a {{portfolio}} of representations for problem solving in complex domains. It describes an approach that decouples efficient storage mechanisms called descriptives from the decision-making procedures that employ them. An architecture that takes this approach can learn which representations are appropriate for a given problem class. <b>Examples</b> <b>of</b> <b>search</b> with {{a portfolio}} of representations are drawn from a broad set of domains. Representation and cognition A representation formally describes objects and their relationships, and provides ways to use them. In a complex domain, however, there may be many plausible representations for the same information about the search space and an agent’s position in it. Reasoning in such a domain ma...|$|R
