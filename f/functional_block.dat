376|1258|Public
25|$|The diagram is {{developed}} in the 1950s and widely used in classical systems engineering. The Functional Flow Block Diagram is {{also referred to as}} Functional Flow Diagram, <b>functional</b> <b>block</b> diagram, and functional flow.|$|E
25|$|Northwest of the Kalita Humphreys Theater is {{this more}} <b>functional</b> <b>block</b> built in 1990 and {{designed}} by Dallas architect Art Rogers. Original design called {{for it to be}} disguised entirely by trees so as not to interfere with Wright's design.|$|E
500|$|By mid-1807, {{fundraising}} was proving difficult; sums {{raised at}} that point were well short of the likely cost of erecting Wilkins's column. The committee informed the architect with regret that [...] "means were not placed in their hands {{to enable them to}} gratify him, as well as themselves, by executing his design precisely as he had given it". [...] They employed Francis Johnston, architect to the City Board of Works, to make cost-cutting adjustments to Wilkins's scheme. Johnston simplified the design, substituting [...] a large <b>functional</b> <b>block</b> or pedestal for Wilkins's delicate plinth, and replacing the proposed galley with a [...] statue of Nelson. [...] Thomas Kirk, a sculptor from Cork, was commissioned to provide the statue, to be fashioned from Portland stone.|$|E
5000|$|Network {{functions}} virtualization {{management and}} orchestration architectural framework (NFV-MANO Architectural Framework) is {{the collection of}} all <b>functional</b> <b>blocks,</b> data repositories used by these blocks, and reference points and interfaces through which these <b>functional</b> <b>blocks</b> exchange information {{for the purpose of}} managing and orchestrating NFVI and VNFs.|$|R
50|$|Given a DSP {{program in}} Data flow graph(DFG) format and a {{unfolding}} factor J,unfolding process transforms the DSP program {{into a new}} one by duplicating the <b>functional</b> <b>blocks</b> and reconnecting the <b>functional</b> <b>blocks</b> while maintaining its DSP functionality. We call the program performed with factor J as J-unfolded DFG.|$|R
40|$|This article {{addresses}} {{the presence and}} size of basic functional modules (motifs) in complex systems. The current view of motifs {{is that they are}} small modules of 3 - 4 “nodes”, which occur significantly more frequently in real-world networks than expected by chance alone. We show that standard <b>functional</b> <b>blocks</b> used to build real-world circuits where a node is interpreted as a primitive component, such as a primitive logic gate (AND, NAND, OR, NOR and NOT etc.), are much larger than the proposed 3 - 4 node motifs. In fact, these <b>functional</b> <b>blocks</b> themselves are typically comprised of a collections of several 3 - 4 node motifs. Further, we show that random-graph models currently cannot generate sub-graphs with the topology of <b>functional</b> <b>blocks,</b> implying that these <b>functional</b> <b>blocks</b> cannot be defined using the notions of statistical over-representation used for motifs. We argue that, for this domain, the statistical over-representation of 3 - 4 node motifs is due to <b>functional</b> <b>blocks</b> consisting of motif-clusters, and not that motifs, in and of themselves, play a significant functional role in a circuit. ...|$|R
2500|$|A <b>functional</b> <b>block</b> diagram is a block diagram, that {{describes}} the functions and interrelationships of a system. The <b>functional</b> <b>block</b> diagram can picture: ...|$|E
50|$|Many {{specific}} types of <b>functional</b> <b>block</b> diagrams have emerged. For example, the functional flow block diagram {{is a combination of}} the <b>functional</b> <b>block</b> diagram and the flow chart. Many software development methodologies are built with specific <b>functional</b> <b>block</b> diagram techniques. An example from the field of industrial computing is the Function Block Diagram (FBD), a graphical language for the design of programmable logic controllers.|$|E
5000|$|... #Caption: <b>FUNCTIONAL</b> <b>BLOCK</b> DIAGRAM OF UDOP CLOSE-IN TRACKING SYSTEM ...|$|E
50|$|Internal {{interfaces}} {{between the}} <b>functional</b> <b>blocks</b> are called reference points (RP).|$|R
5000|$|Identify the <b>functional</b> <b>blocks</b> such as counters, decoders, multipliers, memories, etc.|$|R
5000|$|The main <b>functional</b> <b>blocks</b> {{of a video}} decoder {{typically}} include these: ...|$|R
5000|$|... #Caption: ODOP Doppler radar {{tracking}} system <b>functional</b> <b>block</b> diagram.|$|E
50|$|FFBDs {{are also}} {{referred}} to as Functional Flow Diagrams, <b>functional</b> <b>block</b> diagrams, and functional flows.|$|E
50|$|A {{functional}} specification {{is closely related}} to the requirement specification and may show <b>functional</b> <b>block</b> diagrams.|$|E
25|$|Software PLL (SPLL): <b>Functional</b> <b>blocks</b> are {{implemented}} by software rather than specialized hardware.|$|R
40|$|This master's thesis {{deals with}} design of D class audio final {{amplifier}}, which was output power 400 W for 4 ? load impedance. Designed audio amplifier is specifical for active speaker, {{which consists of}} satelite speakers and subwoofer. Further more it deals also with other <b>functional</b> <b>blocks,</b> e. g. balanced input preamplifier, active crossover and protection for safety running. Outcome of this work are schemes of each <b>functional</b> <b>blocks</b> of D class audio amplifier, whose functionality was verified by simulation. Thesis also contains full reference material including mechanical arrangement of <b>functional</b> <b>blocks</b> on printed connection board. The conclusion contains the measured parameters of function blocks of produced prototype and complete photographic documentation...|$|R
5000|$|The OBSAI Reference Architecture defines four <b>functional</b> <b>blocks,</b> {{interfaces}} between them, {{and requirements}} for external interfaces.|$|R
5000|$|... #Caption: <b>Functional</b> <b>block</b> {{diagram of}} the {{attitude}} control and maneuvering electronics system of the Gemini spacecraft. June 1962.|$|E
50|$|This {{protocol}} {{is primarily}} used for analog and discrete process control devices. The primary advantage is configuration by <b>functional</b> <b>block</b> concept.|$|E
5000|$|A <b>functional</b> <b>block</b> diagram {{in systems}} {{engineering}} and software engineering is a block diagram. It describes the functions and interrelationships of a system.|$|E
30|$|Our {{evaluation}} methodology consists on analyzing the algorithm and its dependencies. We identify the processing tasks that require {{considerable amount of}} time by evaluating their processing times. The algorithm is then partitioned into <b>functional</b> <b>blocks</b> (FBs) performing specific tasks. In {{order to have a}} bounded processing time, a threshold is fixed for each parameter. <b>Functional</b> <b>blocks</b> that impose the most important processing time are then optimized.|$|R
5000|$|Simple {{circuits}} may {{be designed}} by connecting {{a number of}} elements or <b>functional</b> <b>blocks</b> such as integrated circuits.|$|R
40|$|Embodiments of {{the present}} subject matter can enable the {{analysis}} of signal value errors for system models. In an example, signal value errors can be propagated through the <b>functional</b> <b>blocks</b> of a system model to analyze possible effects as the signal value errors impact incident <b>functional</b> <b>blocks.</b> This propagation of the errors can be applicable to many models of computation including avionics models, synchronous data flow, and Kahn process networks...|$|R
5000|$|Functional APIs, (FAPI)s, {{are used}} to {{configure}} or use a low level <b>functional</b> <b>block.</b> The following FAPIs have {{been approved by the}} NPF: ...|$|E
50|$|The Asynchronous Compute Engine (ACE) is a {{distinct}} <b>functional</b> <b>block</b> serving computing purposes. It purpose {{is similar to that}} of the Graphics Command Processor.|$|E
50|$|The CU {{scheduler}} is {{the hardware}} <b>functional</b> <b>block</b> choosing for the SIMD-VU which wavefronts to execute. It picks one SIMD-VU per cycle for scheduling. This {{is not to}} be confused with other schedulers, in hardware or software.|$|E
50|$|Orchestra MultiPLC (multi {{programmable}} logic controller) {{is composed of}} Orchestra Run Time Manager, Orchestra Logic Programming and OrchestraHMI. It allows the execution of a motion control application as one or more programs or <b>functional</b> <b>blocks</b> which may be reused. The controller's open schema accepts and translates XML files. The <b>functional</b> <b>blocks</b> can be prioritised within a series or programmed to operate periodically. New tasks may {{be added to the}} application.|$|R
30|$|The {{unfilled}} blocks {{indicate the}} IDs of requirements from Table 1 that are fulfilled {{by the associated}} <b>functional</b> <b>blocks.</b>|$|R
40|$|Abstract — Functional {{composition}} is an approach {{of a future}} Internet architecture that decomposes the network stack in <b>functional</b> <b>blocks</b> that can be dynamically composed upon connection request. This decomposition resembles the idea of web and telecommunication service in the SOA world. In this paper we will present an architecture to integrate <b>functional</b> <b>blocks</b> from different domains and describe different communication scenarios that demonstrate the advantages and flexibility of such an approach. ...|$|R
50|$|A VHDL {{project is}} multipurpose. Being created once, a {{calculation}} block {{can be used}} in many other projects. However, many formational and <b>functional</b> <b>block</b> parameters can be tuned (capacity parameters, memory size, element base, block composition and interconnection structure).|$|E
50|$|Northwest of the Kalita Humphreys Theater is {{this more}} <b>functional</b> <b>block</b> built in 1990 and {{designed}} by Dallas architect Art Rogers. Original design called {{for it to be}} disguised entirely by trees so as not to interfere with Wright's design.|$|E
50|$|An S5 codec can be {{determined}} by the <b>functional</b> <b>block</b> diagrams of the S5 encoder and of the S5 decoder. According to the standard, S5 encoder shall at least consist of a base S5 encoder; and a S5 decoder shall at least consist of a base S5 decoder.|$|E
40|$|Three <b>functional</b> <b>blocks</b> of the PRIME and PLC G 3 {{technologies}} (encoder/decoder, interleaver, and modulator) are {{studied in}} detail, for a PLC channel with narrow-band interference (NBI). The study reveals that these three blocks {{can be used}} together effectively so as to improve {{the performance of the}} overall system in the presence of NBI. We therefore present effective methods for combating NBI in PRIME and PLC G 3, based on these three <b>functional</b> <b>blocks...</b>|$|R
5000|$|For each node U in the {{original}} DFG, first, we duplicate the J <b>functional</b> <b>blocks</b> as U0, U1, ..., UJ − 1, ...|$|R
40|$|Graduation date: 1973 This paper {{describes}} the system {{design of a}} Fortran hardware compiler which converts the original code of a source program into an intermediate code. This code contains features that allow easy machine code generation. An evaluation is first made on the marketability of such a system and then a brief discussion on {{the features of the}} intermediate code generated by the hardware compiler. The system is divided into a number of <b>functional</b> <b>blocks.</b> Each block consists of a control unit and a set of hardware logic components. The control unit is realized by Programmable Logic Arrays and all hardware components are state-of-the-art products. Estimates on the typical operating speeds of the <b>functional</b> <b>blocks</b> are made. Flow charts and state diagrams are used to describe the logic flow of the <b>functional</b> <b>blocks...</b>|$|R
