0|10000|Public
40|$|The European Commission {{in joint}} {{collaboration}} with Heavy Duty Vehicle manufactures, the Graz University of Technology and other consulting and research bodies {{has been preparing}} a new legislative framework for monitoring and reporting CO 2 emissions from Heavy Duty Vehicles (HDVs) in Europe. In contrast to passenger cars and light commercial vehicles, for which monitoring is performed through chassis dyno measurements, and considering the diversity and particular characteristics of the HDV market, {{it was decided that}} the core of the proposed methodology should be based on a combination of component testing and vehicle simulation. Emphasis is put on accurately simulating the performance of different vehicle components and achieving realistic fuel consumption results. A proof of concept was launched aiming to test and prove that these targets are achievable. A series of experiments were conducted on 2 different trucks, a Daimler 40 ton Euro VI, long haul delivery truck with semi-trailer and a DAF 18 ton Euro V rigid truck. Measurements were performed at the Joint Research Centre’s HDV chassis dyno labs and on the road. A vehicle simulator (Vehicle Energy Consumption Calculation Tool - VECTO) has been developed to be used for official monitoring purposes and the results of the measurements were used for its validation. As inputs the simulation based methodology considers test track measurement of driving resistances (eg air drag), determination of drivetrain losses (e. g. gearbox), determination of power demand of engine auxiliaries (eg. cooling fan) and other consumers (e. g. steering pump), measurement of the engine fuel consumption map as <b>extension</b> <b>to</b> the engine's <b>type</b> <b>approval</b> tests (as described in EURO VI legislation). CO 2 emissions of the vehicle are then calculated using the aforementioned input data for predefined representative driving cycles and mission profiles. For the two Heavy Duty vehicles tested and simulated on the same test route, fuel consumption was calculated always within a ± 3 % range from the real world measurement, and in several cases even closer than that (in the order of ± 1. 5 %). Given the variability of the actual measurement (σ = 2 %), it is concluded that a future certification scheme can be based on vehicle simulation tools. JRC. F. 8 -Sustainable Transpor...|$|R
40|$|SUMMARY Starting {{from the}} 1980 s (diesel-engined) {{vehicles}} {{have been tested}} for exhaust emissions, prior <b>to</b> <b>type</b> <b>approval,</b> using sophisticated standardized transient tests (Transient Cycles). These are usually characterized by long duration consisting of both speed and load changes under varying operating schedules. In the present work, a fast and, relatively, easy to apply approach was developed in order to b...|$|R
50|$|Directive 70/156/EEC: 1998, on the {{approximation}} {{of the laws}} of the Member States relating <b>to</b> the <b>type</b> <b>approval</b> of motor vehicles and their trailers.|$|R
3000|$|... {{the mean}} {{real-world}} per kilometre fuel consumption within segment i and cohort j, by ϕ̃_i,j the corresponding laboratory measured, <b>type</b> <b>approval</b> fuel consumption rate, and by η_∗ j=ϕ_i,j/ϕ̃_i,j the cohort specific ratio of real-world <b>to</b> <b>type</b> <b>approval</b> rates of fuel use, as established by Mock et al. [9, 10]. For lack of better information, we assume this ratio to be uniform across vehicle segments. Also, {{we assume that}} the fuel efficiency of a cohort of passenger cars does not change with the vehicles’ age. Here, again, we rely on Mock et al. [9].|$|R
25|$|These {{restrictions}} do {{not apply}} <b>to</b> autogyros with <b>type</b> <b>approval</b> under CAA CAP643 Section T, which {{are subject to the}} operating limits specified in the <b>type</b> <b>approval.</b>|$|R
25|$|All dates {{listed in}} the tables refer <b>to</b> new <b>type</b> <b>approvals.</b> The EC Directives also specify a second date—usually one year later—which applies to first {{registration}} (entry into service) of existing, previously type-approved vehicle models.|$|R
40|$|Naturally {{occurring}} noncytotoxic vacA type s 2 {{strains of}} Helicobacter pylori have a 12 -residue <b>extension</b> <b>to</b> the vacuolating cytotoxin (VacA) compared with cytotoxic type s 1 strains. We show that adding the region encoding this <b>extension</b> <b>to</b> <b>type</b> s 1 vacA completely abolishes vacuolating cytotoxin activity {{but has no}} effect on VacA production...|$|R
50|$|Vehicles with an EU <b>type</b> <b>approval</b> can {{be marketed}} {{anywhere}} in the European Community. Therefore, a vehicle only needs <b>to</b> receive the <b>type</b> <b>approval</b> certification in one EU country {{in order to be}} accepted in all of the other member countries. <b>To</b> receive a <b>type</b> <b>approval,</b> products may either be brought to a testing facility or manufacturers may opt to maintain their own testing equipment. Nevertheless, US and EU automobiles still must be certified to this single set of rules by an authorised member state agency. A similar system was adopted for the <b>type</b> <b>approval</b> of two- and three-wheeled vehicles, which became effective on 1 January 1994.|$|R
50|$|Customs {{gives the}} green light (Таможня дает добро!); refers <b>to</b> any <b>type</b> of <b>approval,</b> {{especially}} reluctant approval.|$|R
50|$|In 1984 the States Telecommunications Board relaxed its {{monopoly}} {{and began}} to allow some privately purchased equipment {{to be connected to}} the network subject <b>to</b> BABT <b>type</b> <b>approval</b> <b>to</b> ensure that the service was not put at any risk. This was further relaxed in 1996 to include PABX and public pay-phones.|$|R
25|$|The car did not survive; it was sacrificed in a {{crash test}} at MIRA {{facility}} <b>to</b> gain European <b>type</b> <b>approval,</b> even though its construction method was utterly unlike production vehicles.|$|R
50|$|De Havilland {{regarded}} the 166 units manufactured {{as a standard}} production item, supported by their Service Department alongside piston and turbojet engines. It was the first rocket engine <b>to</b> gain formal <b>type</b> <b>approval.</b>|$|R
5000|$|The Glasgow Haskell Compiler {{supports}} {{an extended}} type {{system based on}} the theoretical System Fc. [...] Major <b>extensions</b> <b>to</b> the <b>type</b> system include: ...|$|R
50|$|Currently, {{to carry}} out the career in a {{different}} country of the initial studies, it is necessary <b>to</b> do a <b>type</b> <b>approval</b> or validation. As long as the professional be interested to work in the destiny country.|$|R
30|$|Haskell restricts <b>type</b> classes <b>to</b> have {{a single}} {{parameter}} but the <b>extension</b> <b>to</b> multi-parameter <b>type</b> classes, called Haskell+mptcs in the sequel, is widely used.|$|R
30|$|With {{the power}} rule stated in Lemma 3.4, we can perform its <b>extension</b> <b>to</b> Caputo <b>type</b> nabla (q, h)-fractional {{derivative}} {{of the function}} h_β(t,a) as below.|$|R
50|$|Rexer Ltd. is an {{automobile}} manufacturing company in Estonia. Their first model was the Rex R-10 and that managed <b>to</b> get national <b>type</b> <b>approval.</b> They currently produce the R-12, an AC Cobra replica. It uses the double wishbones from the Lada Niva and a 5.7 litre Chevrolet engine and transmission and steering rod from Ford Scorpio. The R-12 also has national <b>type</b> <b>approval.</b> It is sold {{both as a}} kit car and in completed form.|$|R
50|$|Hong Kong has {{independent}} traffic laws from mainland China. Electric {{bikes are}} considered motorcycles in Hong Kong, and therefore need <b>type</b> <b>approval</b> from the Transport Department, just as automobiles. All electric bikes available in Hong Kong fail <b>to</b> meet the <b>type</b> <b>approval</b> requirement, and the Transport Department has never granted any <b>type</b> <b>approval</b> for an electric bike, making all electric bikes effectively illegal in Hong Kong. Even {{if they got}} <b>type</b> <b>approval,</b> the driver would need a motorcycle driving license to ride. As a side note, Hong Kong doesn't have a moped vehicle class (and therefore no moped driving license), and mopeds are considered motorcycles too.|$|R
30|$|Several {{tests on}} a {{dynamometer}} chassis {{were performed on}} the three vehicles <b>to</b> reproduce the <b>type</b> <b>approval</b> procedures and verify if the emissions standard were respected. The same tests were also used to validate {{the accuracy of the}} data collected through the (E)OBD (European On Board Diagnostic) connector by CTL tool described in the next section.|$|R
50|$|The new {{train is}} {{designated}} Class 407 or new ICE 3 and was originally scheduled to enter {{service at the}} end of 2011. This date has been since been postponed several times. In December 2013 the first four trains delivered to DB were licensed for domestic operation as multiple units and started with passenger traffic. Four more trains are expected for delivery in spring 2014, whereas the remainder of eight trains shall be used by Siemens for test runs in France and Belgium <b>to</b> gain <b>type</b> <b>approval</b> there.|$|R
40|$|International audienceWhere {{object-oriented}} languages {{deal with}} objects {{as described by}} classes, model-driven development uses models, as graphs of interconnected objects, described by metamodels. A number of new languages have been {{and continue to be}} developed for this modelbased paradigm, both for model transformation and for general programming using models. Many of these use single-object approaches <b>to</b> <b>typing,</b> derived from solutions found in object-oriented systems, while others use metamodels asmodel types, but without a clear notion of polymorphism. Both of these approaches lead to brittle and overly restrictive reuse characteristics. In this paper we propose a simple <b>extension</b> <b>to</b> object-oriented <b>typing</b> <b>to</b> better cater for a model-oriented context, including a simple strategy for typing models as a collection of interconnected objects. We suggest <b>extensions</b> <b>to</b> existing <b>type</b> system formalisms <b>to</b> support these concepts and theirmanipulation. Using a simple examplewe show how this extended approach permits more flexible reuse, while preserving type safety...|$|R
40|$|Arc permutations, {{which were}} {{originally}} {{introduced in the}} study of triangulations and characters, have recently been shown to have interesting combinatorial properties. The first part of this paper continues their study by providing signed enumeration formulas with respect to their descent set and major index. Next, we generalize the notion of arc permutations to the hyperoctahedral group in two different directions. We show that these <b>extensions</b> <b>to</b> <b>type</b> $B$ carry interesting analogues of the properties of type $A$ arc permutations, such as characterizations by pattern avoidance, and elegant unsigned and signed enumeration formulas with respect to the flag-major index. Comment: Version to appear in Journal of Combinatoric...|$|R
50|$|The European Commission intends <b>to</b> {{introduce}} a <b>type</b> <b>approval</b> procedure <b>to</b> measure the energy efficiency of mobile {{air conditioning systems}} in vehicles, {{as well as its}} effect on fuel consumption and emissions, and display an efficiency label on the vehicle; the work is being performed by TU Graz (Institute for Internal combustion engines and Thermodynamics), Aristotle University of Thessaloniki (Laboratory of Applied Thermodynamics), TNO and ACEA.|$|R
40|$|Type {{classes and}} type {{families}} are key ingredients in Haskell pro-gramming. Type classes {{were introduced to}} deal with ad-hoc poly-morphism, although {{with the introduction of}} functional dependen-cies, their use expanded <b>to</b> type-level programming. <b>Type</b> families also allow encoding type-level functions, but more directly in the form of rewrite rules. In this paper we show that type families are powerful enough <b>to</b> simulate <b>type</b> classes (without overlapping instances), and we provide a formal proof of the soundness and completeness of this simulation. Encoding instance constraints as type families eases the path <b>to</b> proposed <b>extensions</b> <b>to</b> <b>type</b> classes, like closed sets of instances, instance chains, and control over the search procedure. The only feature which type families cannot simulate is elabora-tion, that is, generating code from the derivation of a rewriting. We look at ways to solve this problem in current Haskell, and propose an <b>extension</b> <b>to</b> allow elaboration during the rewriting phase...|$|R
40|$|Abstract Where {{object-oriented}} languages {{deal with}} objects {{as described by}} classes, model-driven development uses models, as graphs of interconnected objects, described by metamodels. A number of new languages have been {{and continue to be}} developed for this modelbased paradigm, both for model transformation and for general programming using models. Many of these use single-object approaches <b>to</b> <b>typing,</b> derived from solutions found in object-oriented systems, while others use metamodels as model types, but without a clear notion of polymorphism. Both of these approaches lead to brittle and overly restrictive reuse characteristics. In this paper we propose a simple <b>extension</b> <b>to</b> object-oriented <b>typing</b> <b>to</b> better cater for a model-oriented context, including a simple strategy for typing models as a collection of interconnected objects. We suggest <b>extensions</b> <b>to</b> existing <b>type</b> system formalisms <b>to</b> support these concepts and their manipulation. Using a simple example we show how this extended approach permits more flexible reuse, while preserving type safety...|$|R
30|$|Harmonized {{regulations}} {{apply to}} EU member {{states and other}} contractual partners. <b>To</b> receive <b>type</b> <b>approval</b> for motor vehicles, {{especially in terms of}} braking and steering as set by the “Economic Commission for Europe of the United Nations” (UN/ECE) must be fulfilled. Each country that joined the 1958 Agreement or the 1998 Agreement on Global Technical Regulations (GTRs) is allowed to test and authorize manufacturer designs. The Harmonization of Vehicle Regulations starts with regulation ECE R 1 (Headlights) and continues through ECE R 130 (Lane Departure Warning System LDWS) and ECE R 131 (Emergency Braking Systems AEBS).|$|R
50|$|It was {{established}} in July 1982 by the UK government <b>to</b> provide <b>type</b> <b>approval</b> services <b>to</b> the telecommunications terminal industry. At that point in history, British Telecom was a state monopoly, and even by 1982 BT only allowed (via approval) the four British manufacturers (STC, GEC, Plessey, and Thorn-Ericsson) to supply its twenty five types of phone through them, and not independently. However around 200,000 unapproved, independently bought phones were being used on the network. Loyalty to BT was of importance (commercially sensitive) to STC, Plessey and GEC as equipment for BT's exchanges was made exclusively by them.|$|R
40|$|Femtosecond {{selective}} {{control of}} wave packet population is reported for molecular iodine. It is shown that both population and phase {{control of the}} packet motion can be observed by a 2 -D pulse sequence of variable delay times and phase angles. <b>Extension</b> <b>to</b> other <b>type</b> of control experiments is also discussed...|$|R
40|$|Horn clauses and first-order {{resolution}} {{are commonly}} used <b>to</b> implement <b>type</b> classes in Haskell. Several corecursive <b>extensions</b> <b>to</b> <b>type</b> class resolution have recently been proposed, {{with the goal of}} allowing (co) recursive dictionary construction where resolution does not termi- nate. This paper shows, for the first time, that corecursive type class resolution and its extensions are coinductively sound with respect to the greatest Herbrand models of logic programs and that they are induc- tively unsound with respect to the least Herbrand models. We establish incompleteness results for various fragments of the proof system. Comment: Pre-proceedings paper presented at the 26 th International Symposium on Logic-Based Program Synthesis and Transformation (LOPSTR 2016), Edinburgh, Scotland UK, 6 - 8 September 2016 (arXiv: 1608. 02534...|$|R
40|$|This report {{details the}} {{architecture}} {{and implementation of}} an <b>extension</b> <b>to</b> the Scala Actors Library to incorporate a multi cast framework. We will discuss the design stages necessary to arrive at our solution, {{the structure of the}} code itself, the roles that types play in composing Scala Actors with our existing multi cast framework, and the benefit this <b>extension</b> offers <b>to</b> <b>type</b> research. Finally, we demonstrate that our implementation works correctly...|$|R
40|$|The logical {{basis in}} a {{generative}} approach to housing planning is characterized {{in connection with}} historical and actual examples. A row-house grammar is presented and its <b>extensions</b> <b>to</b> other <b>types</b> of houses are critically considered. Finally complete computer generation of small apartments covering the municipal housing production {{of the town of}} Helsinki is discusse...|$|R
50|$|The 1958 Agreement {{operates}} {{on the principles}} of <b>type</b> <b>approval</b> and reciprocal recognition. Any country that accedes to the 1958 Agreement has authority to test and approve any manufacturer's design of a regulated product, regardless of the country in which that component was produced. Each individual design from each individual manufacturer is counted as one individual type. Once any acceding country grants a <b>type</b> <b>approval,</b> every other acceding country is obliged <b>to</b> honor that <b>type</b> <b>approval</b> and regard that vehicle or item of motor vehicle equipment as legal for import, sale and use.Items type-approved according to a UN Regulation are marked with an E and a number, within a circle. The number indicates which country approved the item, and other surrounding letters and digits indicate the precise version of the regulation met and the <b>type</b> <b>approval</b> number, respectively.|$|R
5000|$|Only {{when both}} {{parts of the}} testing are {{completed}} and the equipment fully meets the specifications in the relevant HOSDB Speedmeter Handbook will the equipment be recommended to the Secretary of State to be awarded UK <b>Type</b> <b>Approval.</b> Once recommended an administrative process takes place between the Home Office and the UK manufacturer or distributing agent in which a contract (<b>Type</b> <b>Approval</b> Agreement) is exchanged and agreed between both parties. When that contract is signed then a <b>Type</b> <b>Approval</b> Certificate is signed by a minister at the Home Office; the equipment can then be used to produce certifiable evidence, evidence of speeding that is admissible in UK courts {{without the support of}} a witness. There is no requirement <b>to</b> place the <b>Type</b> <b>Approval</b> Agreement or Certificate of <b>Type</b> <b>Approval</b> before Parliament because the Statutory Instrument defining the [...] "type" [...] of equipment has already been fully ratified by both Houses of Parliament.|$|R
40|$|Scientific {{computation}} {{depends on}} the correct use of dimensions, yet programming languages provide no support for them, leaving the job up to error-prone and lazy human programmers. We investigate an <b>extension</b> <b>to</b> <b>type</b> checking which statically checks equations for dimensional correctness and also infers the dimensions of function parameters and return types. Our work {{is similar to that}} of Andrew Kennedy, but we take a more pragmatic view of the situation by introducing dimension casting and samedimensional numbers which automatically assume the dimension required of them. Our system is an attempt to work around some of the difficulties inherent in dimensional type checking, albeit at the cost of a degree of dimension safety. Categories and Subject Descriptors F. 3. 1 [Logics and meanings of programs]: Specifying an...|$|R
30|$|Potential {{extensions}} {{and improvements}} of the stock-flow model include (i) the integration, into the framework, of behavioural relations endogenising, e. g., scrapping rates, aggregate vehicle miles travelled, or aggregate car purchases, including second hand import, (ii) the <b>extension</b> <b>to</b> a wider set of knock-on effects covered, {{so as to}} include, e. g., particulate matter, NOX emissions, or accidents, and (iii) the <b>extension</b> <b>to</b> other <b>types</b> of vehicles, such as buses, vans and heavy freight vehicles.|$|R
40|$|We examine cursorily {{the concept}} of {{polymorphism}} in programming languages. Polymorphism means {{the ability of a}} language construct, typically a function, <b>to</b> assume many <b>types.</b> We briefly survey different kinds of polymorphism, but concentrate mainly on predicative parametric polymorphism, which can be added as a relatively straightforward and consistent <b>extension</b> <b>to</b> simply <b>typed</b> lambda calculus. Issues with type checking polymorphism are also considered, and a sample implementation is provided...|$|R
