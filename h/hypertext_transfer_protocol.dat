393|1931|Public
5|$|A URL is a URI that, in {{addition}} to identifying a web resource, specifies the means of acting upon or obtaining the representation of it, i.e. specifying both its primary access mechanism and network location. For example, the URL http://example.org/wiki/Main_Page refers to a resource identified as /wiki/Main_Page whose representation, {{in the form of}} HTML and related code, is obtainable via the <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (http:) from a network host whose domain name is example.org.|$|E
25|$|REST is a {{scalable}} {{architecture that}} allows things to communicate over <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> and is easily adopted for IoT applications to provide communication from {{a thing to}} a central web server.|$|E
25|$|Noteworthy alumni have {{graduated}} from the school, including: Roy Fielding, co-creator of <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> and the Apache HTTP Server; Patrick Hanratty, CAD pioneer; Paul Mockapetris, creator of Domain Name System and the first Simple Mail Transfer Protocol server; Steven Joe, CEO of D-Link North America.|$|E
40|$|International Telemetering Conference Proceedings / October 26 - 29, 1998 / Town & Country Resort Hotel and Convention Center, San Diego, CaliforniaOver {{the past}} two years the design and {{implementation}} of secure Internet based data sharing tools which could enable geographically remote contractor teams to access flight and test telemetry data securely over the Internet were presented [1] [2]. Key technologies facilitating these capabilities were the <b>Hypertext</b> <b>Transfer</b> (HTTP) <b>protocol,</b> the Secure Sockets Layer (SSL) protocol, and the Secure Multipurpose Internet Mail Extension (S/MIME) specification. This year we discuss utilizing the Secure Electronic Transaction (SET) specification in tandem with HTTP, SSL, and S/MIME to deploy a system for securely selling telemetry data over the Internet...|$|R
40|$|Effective device {{management}} is not trivial {{due to a}} variety of devices and software. To keep costs to minimum companies must effectively utilize a unified solution for device management. This research investigated Funambol’s implementation of Open Mobile Alliance Device Management (OMA DM) which is the most popular device management solution. Interviews were used to set experiments and create realistic test cases. A set of devices and a collection of Funambol software were used to create device management sessions. All of the sessions were recorded, analysed, manipulated and resent to identify efficient ways of device management. Additionally, an influence of compression and buffer-like mechanisms were checked. Methods and guidelines are provided for efficient use of OMA DM as well as a reliable analysis of OMA DM Sessions under various conditions. It was found that for most data it is best to use a built-in transport <b>protocol</b> compressor. <b>Hypertext</b> <b>Transfer</b> <b>Protocol’s</b> (HTTP) deflate with a combination of client-side buffering-like mechanism at a client side performed best at most cases. Funambol’s implementation of the Binary Extensible Markup Language (WBXML), in most cases, performed very badly, even though it was designed specifically to compress OMA DM Session messages. It was found that for an efficient use of OMA DM a proper software option set (e. g. forced use of compression) may be sufficient...|$|R
5000|$|RFC 2616 (<b>Hypertext</b> <b>Transfer</b> Protocol—HTTP/1.1) offers {{standard}} definitions: ...|$|R
25|$|Compatibility with extant {{systems and}} protocols: Repositories can be {{published}} via <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP), File Transfer Protocol (FTP), rsync (removed in Git 2.8.0), or a Git protocol over either a plain socket, or Secure Shell (ssh). Git {{also has a}} CVS server emulation, which {{enables the use of}} extant CVS clients and IDE plugins to access Git repositories. Subversion and svk repositories can be used directly with git-svn.|$|E
25|$|Application layer {{protocols}} generally {{treat the}} transport layer (and lower) protocols as black boxes which provide a stable network connection across which to communicate, although the applications are usually aware of key {{qualities of the}} transport layer connection such as the end point IP addresses and port numbers. Application layer protocols are often associated with particular client-server applications, and common services have well-known port numbers reserved by the Internet Assigned Numbers Authority (IANA). For example, the <b>HyperText</b> <b>Transfer</b> <b>Protocol</b> uses server port 80 and Telnet uses server port 23. Clients connecting to a service usually use ephemeral ports, i.e., port numbers assigned only {{for the duration of}} the transaction at random or from a specific range configured in the application.|$|E
25|$|Many {{people use}} the terms Internet and World Wide Web, or just the Web, interchangeably, but the two terms are not synonymous. The World Wide Web is the primary {{application}} program that billions of people use on the Internet, and it has changed their lives immeasurably. However, the Internet provides many other services. The Web is a global set of documents, images and other resources, logically interrelated by hyperlinks and referenced with Uniform Resource Identifiers (URIs). URIs symbolically identify services, servers, and other databases, and the documents and resources that they can provide. <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP) is the main access protocol of the World Wide Web. Web services also use HTTP to allow software systems to communicate in order to share and exchange business logic and data.|$|E
40|$|GeoGratis {{is both a}} <b>hypertext</b> {{and file}} <b>transfer</b> <b>protocol</b> (FTP) site that {{distributes}} geospatial data of Canada. It's objective is to expand the use of geospatial data to new user communities through the distribution of intuitive data types and encourage geomatics research, development and education by providing quality Canadian data sets. Data are available for download, without charge. Vector mapping data are available in scales ranging from 1 : 250, 000 to 1 : 30, 000, 000 {{in a variety of}} file formats. Similarly, several types of full resolution satellite imagery are on-line. Three programs with online mapping capabilities and download protocols are featured under Data Visualization: The Canada Land Inventory (CLI), the Great Lakes Mosaic, and Earth Observation Images. Access is provided to numerous Canadian databases such as the National Atlas of Geo-Political Maps, Landsat 7 Level 1 -G Imagery, and the Aerial Photograph Ground Control Database. Each database is outlined by a table with available product types, digital formats, and access options, and is described with an abstract and an outline. Links to information on how to FTP to GeoGratis are provided. A section for outside links connects to related data, software, and resources sites. Educational levels: Graduate or professional, High school, Undergraduate lower division, Undergraduate upper division...|$|R
5000|$|HTTP, <b>Hypertext</b> <b>Transfer</b> ProtocolMIME, Multipurpose Internet Mail ExtensionsSOAP, Simple Object Access ProtocolXML, Extensible Markup Language ...|$|R
50|$|EFTP (various {{expansions}} of {{this have}} been given, including Easy File <b>Transfer</b> <b>Protocol,</b> Ether File <b>Transfer</b> <b>Protocol,</b> and Experimental File <b>Transfer</b> <b>Protocol)</b> {{was a very}} simple file <b>transfer</b> <b>protocol</b> developed {{as part of the}} PUP protocol suite at Xerox PARC in the late 1970s. It was part of the inspiration for the Trivial File <b>Transfer</b> <b>Protocol</b> (TFTP) in the TCP/IP suite.|$|R
25|$|Public {{commercial}} {{use of the}} Internet began in mid-1989 with the connection of MCI Mail and Compuserve's email capabilities to the 500,000 users of the Internet. Just months later on 1 January 1990, PSInet launched an alternate Internet backbone for {{commercial use}}; one of the networks that would grow into the commercial Internet we know today. In March 1990, the first high-speed T1 (1.5 Mbit/s) link between the NSFNET and Europe was installed between Cornell University and CERN, allowing much more robust communications than were capable with satellites. Six months later Tim Berners-Lee would begin writing WorldWideWeb, the first web browser {{after two years of}} lobbying CERN management. By Christmas 1990, Berners-Lee had built all the tools necessary for a working Web: the <b>HyperText</b> <b>Transfer</b> <b>Protocol</b> (HTTP) 0.9, the HyperText Markup Language (HTML), the first Web browser (which was also a HTML editor and could access Usenet newsgroups and FTP files), the first HTTP server software (later known as CERN httpd), the first web server, and the first Web pages that described the project itself. In 1991 the Commercial Internet eXchange was founded, allowing PSInet to communicate with the other commercial networks CERFnet and Alternet. Since 1995 the Internet has tremendously impacted culture and commerce, including the rise of near instant communication by email, instant messaging, telephony (Voice over Internet Protocol or VoIP), two-way interactive video calls, and the World Wide Web with its discussion forums, blogs, social networking, and online shopping sites. Increasing amounts of data are transmitted at higher and higher speeds over fiber optic networks operating at 1-Gbit/s, 10-Gbit/s, or more.|$|E
500|$|The Rosetta@home {{application}} and the BOINC distributed computing platform {{are available for}} the operating systems Windows, Linux, and macOS; BOINC also runs on several others, e.g., FreeBSD. [...] Participation in Rosetta@home requires a central processing unit (CPU) with a clock speed of at least 500MHz, 200megabytes of free disk space, 512megabytes of physical memory, and Internet connectivity. [...] As of July 20, 2016, {{the current version of}} the Rosetta Mini application is 3.73. The current recommended BOINC program version is 7.6.22. [...] Standard <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP) (port 80) is used for communication between the user's BOINC client and the Rosetta@home servers at the University of Washington; HTTPS (port 443) is used during password exchange. [...] Remote and local control of the BOINC client use port 31416 and port 1043, which might need to be specifically unblocked if they are behind a firewall. [...] Workunits containing data on individual proteins are distributed from servers located in the Baker lab at the University of Washington to volunteers' computers, which then calculate a structure prediction for the assigned protein. [...] To avoid duplicate structure predictions on a given protein, each workunit is initialized with a random seed number. [...] This gives each prediction a unique trajectory of descent along the protein's energy landscape. [...] Protein structure predictions from Rosetta@home are approximations of a global minimum in a given protein's energy landscape. [...] That global minimum represents the most energetically favorable conformation of the protein, i.e., its native state.|$|E
2500|$|The {{application}} layer includes the protocols used by most applications for providing user services or exchanging application data over the network connections {{established by the}} lower level protocols. This may include some basic network support services such as protocols for routing and host configuration. Examples of {{application layer}} protocols include the <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP), the File Transfer Protocol (FTP), the Simple Mail Transfer Protocol (SMTP), and the Dynamic Host Configuration Protocol (DHCP). Data coded according to application layer protocols are [...] encapsulated into transport layer protocol units (such as TCP or UDP messages), which in turn use lower layer protocols to effect actual data transfer.|$|E
5000|$|File transfer: File <b>Transfer</b> <b>Protocol</b> (FTP), Trivial File <b>Transfer</b> <b>Protocol</b> (TFTP) ...|$|R
5000|$|The Simple Mail <b>Transfer</b> <b>Protocol</b> (SMTP), {{defined in}} RFC 788 [...] has {{replaced}} the Mail <b>Transfer</b> <b>Protocol.</b>|$|R
50|$|Crax Commander {{improves}} productivity {{by offering}} user configurable keyboard shortcuts, built-in text editor with sync coloring, full user interface customizing including fonts and colors, archive support, and built in File <b>Transfer</b> <b>Protocol</b> (FTP), Server Message Block (SMB), Apple Filing Protocol (AFP), SSH File <b>Transfer</b> <b>Protocol</b> (SSH), and SSH File <b>Transfer</b> <b>Protocol</b> (sFTP).|$|R
2500|$|The terms Internet and World Wide Web {{are often}} used interchangeably in {{everyday}} speech; {{it is common to}} speak of [...] "going on the Internet" [...] when using a web browser to view web pages. However, the World Wide Web or the Web is only one {{of a large number of}} Internet services. The Web is a collection of interconnected documents (web pages) and other web resources, linked by hyperlinks and URLs. As another point of comparison, <b>Hypertext</b> <b>Transfer</b> <b>Protocol,</b> or HTTP, is the language used on the Web for information transfer, yet it is just one of many languages or protocols that can be used for communication on the Internet. The term [...] is a portmanteau of Internet and World Wide Web typically used sarcastically to parody a technically unsavvy user.|$|E
5000|$|... {{delivers}} applications over a web <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP) connection ...|$|E
5000|$|... 80: <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP) {{used in the}} World Wide Web ...|$|E
50|$|Some {{examples}} of service ports used for banner grabbing are {{those used by}} Hyper Text <b>Transfer</b> <b>Protocol</b> (HTTP), File <b>Transfer</b> <b>Protocol</b> (FTP), and Simple Mail <b>Transfer</b> <b>Protocol</b> (SMTP); ports 80, 21, and 25 respectively. Tools commonly used to perform banner grabbing are Telnet,nmap,zmap which is included with most operating systems, and Netcat.|$|R
50|$|The Local Mail <b>Transfer</b> <b>Protocol</b> (LMTP) is a {{derivative}} of ESMTP, {{the extension of}} the Simple Mail <b>Transfer</b> <b>Protocol</b> (SMTP). It is defined in RFC 2033.|$|R
50|$|UDP-based Data <b>Transfer</b> <b>Protocol</b> (UDT), is a {{high-performance}} data <b>transfer</b> <b>protocol</b> designed for <b>transferring</b> large volumetric datasets over high-speed wide area networks. Such settings are typically disadvantageous {{for the more}} common TCP protocol.|$|R
5000|$|Checks {{availability}} and responsiveness of <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP) and HTTPS servers.|$|E
5000|$|HTTP — <b>HyperText</b> <b>Transfer</b> <b>Protocol</b> is {{used for}} HTML (HyperText Markup Language) files.|$|E
5000|$|HTTP/2 - {{developed}} by the IETF's <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> Bis (httpbis) working group.|$|E
50|$|The Quick Mail <b>Transfer</b> <b>Protocol</b> (QMTP) is {{an e-mail}} {{transmission}} protocol {{that is designed}} to have better performance than Simple Mail <b>Transfer</b> <b>Protocol</b> (SMTP), the de facto standard. It was designed and implemented by Daniel J. Bernstein.|$|R
25|$|File <b>transfer</b> <b>protocol</b> {{filesystem}} translator.|$|R
5000|$|... gPhoto has {{support for}} the Picture <b>Transfer</b> <b>Protocol</b> (PTP) and will also connect to devices that use the Media <b>Transfer</b> <b>Protocol.</b> Many cameras are not {{supported}} by gPhoto, but have {{support for the}} USB mass-storage device class, which is well-supported under Linux.|$|R
5000|$|<b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> (HTTP): SAML {{relies heavily}} on HTTP as its {{communications}} protocol.|$|E
5000|$|Convert JMX, SSH, SNMPv2/SNMPv3, Modbus, rsh, stdout to SNMPv2/SNMPv3, SSH, XMPP, syslog, <b>Hypertext</b> <b>Transfer</b> <b>Protocol</b> ...|$|E
50|$|This {{subsection}} specifies a {{means for}} conveying ASN.1-encoded messages for the DVCS protocol exchanges via the <b>HyperText</b> <b>Transfer</b> <b>Protocol.</b>|$|E
5000|$|... {{adapters}} - {{to integrate}} with other technologies and systems (HTTP, AMQP (Advanced Message Queuing Protocol), JMS, XMPP (Extensible Messaging and Presence Protocol), SMTP (Simple Mail <b>Transfer</b> <b>Protocol),</b> IMAP (Internet Message Access <b>Protocol),</b> FTP (File <b>Transfer</b> <b>Protocol)</b> {{as well as}} FTPS/SFTP, file systems, etc.) ...|$|R
30|$|Retrieval: {{the ability}} to {{retrieve}} the required data from a specified source using various methods such as the OGC download service standard, File <b>Transfer</b> <b>Protocol</b> (FTP), Hyper Text <b>Transfer</b> <b>Protocol</b> (HTTP), eXtensible Markup Language-Remote Procedure Call (XML-RPC), Simple Object Access Protocol (SOAP) services, etc.|$|R
50|$|The Media <b>Transfer</b> <b>Protocol</b> (MTP) is an {{extension}} to the Picture <b>Transfer</b> <b>Protocol</b> (PTP) communications protocol that allows media files to be transferred atomically to and from portable devices. Whereas PTP was designed for downloading photographs from digital cameras, Media <b>Transfer</b> <b>Protocol</b> allows the <b>transfer</b> of music files on digital audio players and media files on portable media players, as well as personal information on personal digital assistants. MTP is {{a key part of}} WMDRM10-PD, a digital rights management (DRM) service for the Windows Media platform.|$|R
