325|89|Public
25|$|From an OSI model {{protocol}} stack viewpoint, the technologies used on DAB inhabit the following layers: the audio codec inhabits the presentation layer. Below {{that is the}} data link layer, in charge of statistical time division multiplexing and <b>frame</b> <b>synchronization.</b> Finally, the physical layer contains the error-correction coding, OFDM modulation, {{and dealing with the}} over-the-air transmission and reception of data. Some aspects of these are described below.|$|E
50|$|A {{demultiplexer}} achieves {{this goal}} by maintaining <b>frame</b> <b>synchronization.</b>|$|E
50|$|Self-synchronizing {{codes are}} prefix codes that allow <b>frame</b> <b>synchronization.</b>|$|E
5000|$|Selecting a {{consistent}} field dominance in vision switching and linear editing systems will maintain color <b>framing</b> <b>synchronization.</b> Re-editing old video material already edited {{with a different}} field dominance convention can be problematic, as {{it can lead to}} [...] "flash fields" [...] when old and new edits are made too close together.|$|R
50|$|A frame slip {{should not}} be {{confused}} with a dropped <b>frame</b> where <b>synchronization</b> is not lost, as in the case of buffer overflow, for example.|$|R
3000|$|... where N is {{the total}} number of nodes in the network. Once initial <b>frame</b> length <b>synchronization</b> is completed, then each node carries out the MSA process using the same initial frame length Linit.|$|R
5000|$|<b>Frame</b> <b>synchronization</b> {{of digital}} video output to {{analogue}} input.|$|E
50|$|CRC-based framing {{is a kind}} of <b>frame</b> <b>synchronization</b> used in Asynchronous Transfer Mode (ATM) {{and other}} similar protocols.|$|E
50|$|The frame {{synchronizer}} immediately follows the bit synchronizer in most telemetry applications. Without <b>frame</b> <b>synchronization,</b> decommutation is impossible.|$|E
40|$|Next {{generation}} HbbTV applications promise {{exciting new}} possibilities {{with respect to}} heterogeneous content sources synchronization, like multi-angle picture-in-picture video rendering and. <b>Frame</b> accurate <b>synchronization</b> is {{required in order to}} achieve these new possibilities. In this study, as part of the ongoing European FP 7 Next Generation Hybrid Broadcast Broadband (Hbb-Next) project, we investigated the use of content agnostic timestamp information for media synchronization. We demonstrate that <b>frame</b> accurate <b>synchronization</b> on a single device can be achieved between local transport streams and a remote MPEG-DASH stream using a customized GStreamer based test bed. In future research, we will extend our test bed for inter device and inter destination synchronization...|$|R
3000|$|... [...]) in {{the tree}} minus one, multiplied by the {{respective}} duration of one TDCS cycle. This {{is the amount of}} time the scheduled branches of the network should be inaccessible. If instead of a DCR technique we use a Bandwidth Redistribution technique, this inaccessibility time is zero. Because the hierarchical order of the schedule is kept, the routers will always receive the <b>synchronization</b> <b>frame</b> of their parent immediately before (assuming a schedule favoring downstream transmission), and within the same TDCS cycle. A failure at the reception of the <b>synchronization</b> <b>frame</b> must place the cluster and its respective children in an idle state to avoid inter-cluster collision. Upon the correct reception of the following <b>synchronization</b> <b>frame</b> the cluster shall resume.|$|R
40|$|This paper {{examines}} {{the problem of}} rapid <b>frame</b> and symbol <b>synchronization</b> techniques intended particularly for constant envelope modulation formats M-CPFSK with modulation index h= 1 /M which are used in strictly bandwidth limited narrowband industrial applications. The data aided and non data aided versions of the algorithm based on digital frequency discrimination are discussed and compared against the synchronization techniques found in literature. Sample wise pattern correlation technique for joint <b>frame</b> and symbol <b>synchronization</b> is also studied. With the focus on a practical digital implementation {{the advantages and disadvantages}} of the described approaches are discussed...|$|R
50|$|The {{transmitter}} and {{the receiver}} must agree {{ahead of time}} on which <b>frame</b> <b>synchronization</b> scheme they will use.|$|E
5000|$|Logical {{link control}} (LLC) layer - {{responsible}} for identifying and encapsulating network layer protocols, and controls error checking and <b>frame</b> <b>synchronization.</b>|$|E
5000|$|A {{frame is}} a digital data {{transmission}} unit in computer networking and telecommunication. A frame typically includes <b>frame</b> <b>synchronization</b> features consisting of a sequence of bits or symbols that indicate to the receiver, the beginning, {{and end of the}} payload data within the stream of symbols or bits it receives. If a receiver is connected to the system {{in the middle of a}} frame transmission, it ignores the data until it detects a new <b>frame</b> <b>synchronization</b> sequence.|$|E
30|$|For future {{communication}} systems, {{filter bank}} multicarrier schemes offer {{the flexibility to}} increase spectrum utilization in heterogeneous wireless environments by good separation of signals in the frequency domain. To fully exploit this property for <b>frame</b> detection and <b>synchronization,</b> {{the advantage of the}} filter bank should be taken at the receiver side. In this work, the concept of frequency domain processing for <b>frame</b> detection and <b>synchronization</b> is analyzed and a suitable preamble design as well as corresponding estimation algorithms is discussed. The theoretical performance of the detection and estimation schemes is derived and compared with simulation-based assessments. The results show that, even though the frequency domain algorithms are sensitive to carrier frequency offsets, satisfactory <b>frame</b> detection and <b>synchronization</b> can be achieved in the frequency domain. In comparison to time domain synchronization methods, the computational complexity increases; however, enhanced robustness in shared spectrum access scenarios is gained in case the described frequency domain approach is utilized.|$|R
40|$|Abstract. In {{industrial}} {{fields such}} as seismic explorations, RS 485 is considered a workhorse interface standard, {{and it is the}} most widely used for serial interface found on sensors. However, long-distance transmission at high data throughput {{is one of the key}} features. An improved RS 485 -based high-speed remote transmission method is developed to implement the transmission of large amounts of data from distributed sensors. Based on the signal integrity analysis, the hardware interface designs including interface chips and impedance matching are determined by continuous square-wave pulse transmission. Then a self-defined protocol with the aid of FPGA hardware real-time processing is designed to make high-speed clock recovery and <b>frame</b> <b>synchronizations.</b> The 8 b/ 10 b encoded data streams are transmitted via a twisted-pair cable in the experiment. The experimental results indicate that the designed RS 485 transceiver unit can drive the 220 meter twisted-pair lines at 20 Mbps data speed with an error rate of 1...|$|R
40|$|For future {{communication}} systems, {{filter bank}} multicarrier schemes offer {{the flexibility to}} increase spectrum utilization in heterogeneous wireless environments by good separation of signals in the frequency domain. To fully exploit this property for <b>frame</b> detection and <b>synchronization,</b> {{the advantage of the}} filter bank should be taken at the receiver side. In this work, the concept of frequency domain processing for <b>frame</b> detection and <b>synchronization</b> is analyzed and a suitable preamble design as well as corresponding estimation algorithms is discussed. The theoretical performance of the detection and estimation schemes is derived and compared with simulation-based assessments. The results show that, even though the frequency domain algorithms are sensitive to carrier frequency offsets, satisfactory <b>frame</b> detection and <b>synchronization</b> can be achieved in the frequency domain. In comparison to time domain synchronization methods, the computational complexity increases; however, enhanced robustness in shared spectrum access scenarios is gained in case the described frequency domain approach is utilized...|$|R
50|$|Protocol {{overhead}} can {{be expressed}} {{as a percentage of}} non-application bytes (protocol and <b>frame</b> <b>synchronization)</b> divided {{by the total number of}} bytes in the message.|$|E
50|$|In digital communication, {{preamble}} is {{a sequence}} of known bits sent in each frame. It is used for <b>frame</b> <b>synchronization</b> such as in Ethernet frames, {{as well as for}} channel estimation.|$|E
50|$|The Media Access Control {{sublayer}} also determines {{where one}} frame of data {{ends and the}} next one starts - <b>frame</b> <b>synchronization.</b> There are four means of frame synchronization: time based, character counting, byte stuffing and bit stuffing.|$|E
5000|$|External clock {{synchronization}} by choosing a [...] "preferred" [...] reference frame (like the CMB) {{and using the}} clocks of this frame to synchronize the clocks in all other <b>frames</b> ("absolute" [...] <b>synchronization).</b>|$|R
40|$|Abstract. This paper {{examines}} {{the problem of}} rapid <b>frame</b> and symbol <b>synchronization</b> techniques intended particularly for constant envelope modulation formats Mâ€“CPFSK with modulation index h= 1 /M which are used in strictly bandwidth limited narrowband industrial applications. The data aided and non data aided versions of the algorithm based on digital frequency discrimination are discussed and compared against the synchronization techniques found in literature. Sample wise pattern correlation technique for joint <b>frame</b> and symbol <b>synchronization</b> is also studied. With the focus on a practical digital implementation {{the advantages and disadvantages}} of the described approaches are discussed...|$|R
30|$|On {{the other}} hand, Phase II {{involves}} three steps for slot allocation: an initial <b>frame</b> length <b>synchronization</b> (IFLS) process, a multihop slot allocation (MSA) process, and a global <b>frame</b> length <b>synchronization</b> (GFLS). First, IFLS determines the initial frame length Linit, {{which can be}} used initially for slot allocation in the network. Second, the MSA process allocates a different slot to each flow in a link to eliminate the secondary queuing delay. For example, in Figure 1, two flows exist between Node R 1 and Node R 2. Therefore, the proposed scheme allocates two different slots for two flows in the Node R 1 -to-R 2 link. Although such a slot allocation can eliminate the secondary queuing delay, it results in a large frame length. In such a case, {{it is important to consider}} the order of the slots allocated on a path. Therefore, we show the delay effect by an allocation order as well as demonstrate the manner in which slots should be allocated sequentially in a flow after the routing path is established.|$|R
5000|$|In data packets sent by {{wireless}} communication, and in {{sectors of}} data stored on magnetic media, typically the header {{begins with a}} syncword to allow the receiver to adapt to analog amplitude and speed variations and for <b>frame</b> <b>synchronization.</b>|$|E
50|$|Many {{techniques}} such as carrier recovery, clock recovery, bit slip, <b>frame</b> <b>synchronization,</b> rake receiver, pulse compression, Received Signal Strength Indication, error detection and correction, etc., are only performed by demodulators, although any specific demodulator may perform only some or none of these techniques.|$|E
50|$|Presentation {{time stamps}} (PTS) are {{embedded}} in MPEG transport streams to precisely signal when each audio and video segment is to be presented, to avoid AV-sync errors. However, these timestamps are often added after the video undergoes <b>frame</b> <b>synchronization,</b> format conversion and preprocessing.|$|E
40|$|In this paper, {{compressed}} sensing (CS) {{theory is}} utilized in a medium-access control (MAC) scheme for {{wireless sensor networks}} (WSNs). We propose a new, cross-layer compressed sensing medium-access control (CL CS-MAC) scheme, combining the physical layer and data link layer, where the wireless transmission in physical layer is considered as a compress process of requested packets in a data link layer according to compressed sensing (CS) theory. We first introduced using compressive complex requests to identify the exact active sensor nodes, which makes the scheme more efficient. Moreover, because the reconstruction process is executed in a complex field of a physical layer, where no bit and <b>frame</b> <b>synchronizations</b> are needed, the asynchronous and random requests scheme can be implemented without synchronization payload. We set up a testbed based on software-defined radio (SDR) to implement the proposed CL CS-MAC scheme practically and to demonstrate the validation. For large-scale WSNs, the simulation {{results show that the}} proposed CL CS-MAC scheme provides higher throughput and robustness than the carrier sense multiple access (CSMA) and compressed sensing medium-access control (CS-MAC) schemes...|$|R
40|$|Synchronization is a {{critical}} aspect of virtually all communications systems. Ac-curate <b>frame</b> and symbol <b>synchronization</b> is especially important in time-division multiple access (TDMA) and packet-based systems, or with any protocol that em-ploys training, control, or identication bits interspersed with the raw data. Mul...|$|R
5000|$|Unlike {{unframed}} TDM {{for which}} all bits {{are available for}} payload, framed TDM requires dedicating of some number of bits per <b>frame</b> for <b>synchronization</b> and perhaps various other functions (e.g. 1 bit per T1 frame, 8 bits per E1 frame). Framed TDM {{is often used to}} multiplex multiple voice channels each consisting of 8000 8-bit samples per second in a sequence of timeslots recurring in each frame. When this is done we have [...] "channelized TDM" [...] and additional structure must be introduced.|$|R
50|$|In video, <b>frame</b> <b>synchronization</b> is {{the process}} of {{synchronizing}} display pixel scanning to a synchronization source. When several systems are connected, a synchronization signal is fed from a master system to the other systems in the network, and the displays are synchronized with each other.|$|E
50|$|<b>Frame</b> <b>synchronization</b> is {{necessary}} to identify the timeslots within each 24-channel <b>frame.</b> <b>Synchronization</b> takes place by allocating a framing, or 193rd, bit. This results in 8 kbit/s of framing data, for each DS1. Because this 8-kbit/s channel {{is used by the}} transmitting equipment as overhead, only 1.536 Mbit/s is actually passed on to the user. Two types of framing schemes are superframe (SF) and extended superframe (ESF). A superframe consists of twelve consecutive 193-bit frames, whereas an extended superframe consists of twenty-four consecutive 193-bit frames of data. Due to the unique bit sequences exchanged, the framing schemes are not compatible with each other. These two types of framing (SF, and ESF) use their 8 kbit/s framing channel in different ways.|$|E
50|$|A {{more general}} way of {{measuring}} {{the number of}} bit errors is the Levenshtein distance.The Levenshtein distance measurement is more appropriate for measuring raw channel performance before <b>frame</b> <b>synchronization,</b> and when using error correction codes designed to correct bit-insertions and bit-deletions, such as Marker Codes and Watermark Codes.|$|E
40|$|We have {{developed}} tools and techniques that allow video <b>frame</b> level <b>synchronization</b> of multiple free-running commodity video cameras, microphones, and computer nodes using non-realtime operating systems. The techniques rely on physical audiovisual synchronization pulses, statistical procedures to correlate and interpolate the multiple timestamp streams, and software tools for review to produce smoothed and drift-corrected timestamp streams in our multimodal corpora. In {{this article we}} present those techniques and tools. Our project is open source and we are seeking collaborative developers for future work. Categories and Subject Descriptor...|$|R
40|$|Synchronization is a {{critical}} aspect of virtually all communications systems Ac curate <b>frame</b> and symbol <b>synchronization</b> is especially important in timedivision multiple access TDMA and packetbased systems or with any protocol that em ploys training control or identi	cation bits interspersed with the raw data Mu...|$|R
40|$|A "sandwich" {{repetition}} preamble (sandamble) {{with reduced}} training overhead is introduced and {{compared to a}} conventional repetition preamble with respect to <b>frame</b> and frequency <b>synchronization</b> performance in burst transmission. An optimum metric is derived for sandamble detection. The fundamental idea is independent from the specific modulation scheme, but here results for an Orthogonal Frequency-Division Multiplexing (OFDM) system are studied...|$|R
