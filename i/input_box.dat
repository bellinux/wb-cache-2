51|70|Public
25|$|As of version 2.4 and later, {{the ability}} to {{manually}} resize the text <b>input</b> <b>box</b> of conversations was removed. This led to a fork, Carrier (originally named Funpidgin).|$|E
2500|$|ASP.NET Web pages, known officially as Web Forms, are {{the main}} {{building}} blocks for application development in ASP.NET. There are two basic methodologies for Web Forms, a web application format and a web site format. Web applications need to be compiled before deployment, while web sites structures allows the user to copy the files directly to the server without prior compilation. Web forms are contained in files with a [...] ".aspx" [...] extension; these files typically contain static (X)HTML markup or component markup. The component markup can include server-side Web Controls and User Controls that have been defined in the framework or the web page. For example, a textbox component can be defined on a page as , which is rendered into a html <b>input</b> <b>box.</b> Additionally, dynamic code, which runs on the server, can {{be placed in a}} page within a block <% -- dynamic code -- %>, which is similar to other Web development technologies such as PHP, JSP, and ASP. With ASP.NET Framework 2.0, Microsoft introduced a new code-behind model that lets static text remain on the [...]aspx page, while dynamic code remains in an [...]aspx.vb or [...]aspx.cs or [...]aspx.fs file (depending on the programming language used).|$|E
50|$|This {{function}} reads {{a string}} from an <b>input</b> <b>box</b> and outputs its length.|$|E
5000|$|OS X 10.9 Mavericks {{introduced}} a dedicated emoji input palette in most text <b>input</b> <b>boxes</b> using the key combination [...]|$|R
30|$|Xiangshi, R. and Z. Xiaolei, The Optimal Size of Handwriting Character <b>Input</b> <b>Boxes</b> on PDAs. International Journal of Human-Computer Interaction, 2009. 25 (8): p. 762 – 784.|$|R
40|$|We {{show that}} quantum theory allows for transformations of black boxes that cannot be {{realized}} by inserting the <b>input</b> black <b>boxes</b> within a circuit in a predefined causal order. The simplest {{example of such}} a transformation is the classical switch of black <b>boxes,</b> where two <b>input</b> black <b>boxes</b> are arranged in two different orders conditionally on the value of a classical bit. The quantum version of this transformation - the quantum switch - produces an output circuit where the order of the connections is controlled by a quantum bit, which becomes entangled with the circuit structure. Simulating these transformations in a circuit with fixed causal structure requires either postselection or an extra query to the <b>input</b> black <b>boxes.</b> © 2013 American Physical Society. Link_to_subscribed_fulltex...|$|R
5000|$|As of version 2.4 and later, {{the ability}} to {{manually}} resize the text <b>input</b> <b>box</b> of conversations was removed. This led to a fork, Carrier (originally named Funpidgin).|$|E
5000|$|Func _Example (...) Display an <b>input</b> <b>box</b> and ask {{the user}} to enter some numbers {{separated}} by commas. Local $sInput = InputBox("Find Average", [...] "Enter some numbers separated by commas: 1,2,42,100,3") ...|$|E
5000|$|Feb 10, 2010 - v4.4.0, {{messages}} for text folding in AkelEdit, ability to assign Tab, Shift+Tab in plugins dialog, {{on condition that}} the hotkey <b>input</b> <b>box</b> was activated using the mouse ...|$|E
30|$|Sensitive {{input data}} {{identification}} in Android applications. Supor (Huang et al. 2015) analyzes the descriptive texts of <b>input</b> <b>boxes</b> to analyze their sensitiveness. It first locates all the <b>input</b> <b>boxes</b> of a UI and then searches for their descriptive text. It uses keyword based searching to analyze such texts, and thus could cause many FP and FN because no semantic and syntactic information are considered. Moreover, {{the process of}} generating keywords needs much manual effort and also lacks flexibility of involving new sensitive data categories. UIPicker (Nan et al. 2015) utilizes SVM (Support Vector Machine) to learn the descriptive texts. The features are a set of sensitive keywords. The accuracy tends to increase as the size of training set increases. However {{it is also the}} limitation of this approach, because it causes much manual effort to prepare a well-labeled training set. The features are also limited by the size of sensitive keywords, so that it cannot handle unknown words. Compared with such approaches, S 3 considers complete semantic and syntactic information to give accurate sensitiveness of a descriptive text. Besides, S 3 does not require much manual effort to prepare massive keywords or training set.|$|R
40|$|Structured query {{language}} (SQL) is a classical way to access relational databases. Although SQL is powerful to query relational databases, {{it is rather}} hard for inexperienced users to pose SQL queries, as {{they are required to}} be familiar with SQL syntax and have a thorough understanding of the underlying schema. To provide an alternative search paradigm, keyword search and form-based search are proposed, which only need users to type in keywords in single or multiple <b>input</b> <b>boxes</b> and return answers after users submit a query with complete keywords. However users often feel “left in the dark ” when they have limited knowledge about the underlying data, and have to use a try-and-see approach for finding information. A recent trend of supporting autocomplete in these systems is a first step towards solving this problem. In this paper, we propose a new search method DBease to make databases user-friendly and easily accessible. DBease allows users to explore data “on the fly ” as they type in keywords, even in the presence of minor errors. DBease has the following unique features. Firstly, DBease can find answers as users type in keywords in single or multiple <b>input</b> <b>boxes.</b> Secondly, DBease can tolerate error...|$|R
5000|$|VBScript {{can also}} be used to create {{applications}} that run directly on a workstation running Microsoft Windows. The simplest example is a script that makes use of the Windows Script Host (WSH) environment. Such a script is usually in a stand-alone file with the file extension [...] The script can be invoked in two ways: Wscript.exe is used to display output and receive input through a GUI, such as dialog and <b>input</b> <b>boxes.</b> Cscript.exe is used in a command line environment.|$|R
50|$|The {{seemingly}} meaningless colored blocks {{found in}} the cover booklet can be deciphered with either the <b>input</b> <b>box</b> at or the colored blocks on the back cover, which are arranged as the alphabet.|$|E
50|$|To {{obtain the}} Geohash, the user {{provides}} {{an address to}} be geocoded, or latitude and longitude coordinates, in a single <b>input</b> <b>box</b> (most commonly used formats for latitude and longitude pairs are accepted), and performs the request.|$|E
50|$|Chat room users {{communicate}} through text-based messaging. Most chat room providers are similar and include an <b>input</b> <b>box,</b> a message window, and a participant list. The <b>input</b> <b>box</b> is where users can type their text-based message {{to be sent}} to the providing server. The server will then transmit the message to the computers of anyone in the chat room {{so that it can be}} displayed in the message window. The message window allows the conversation to be tracked and usually places a time stamp once the message is posted. There is usually a list of the users who are currently in the room, so that people can see who is in their virtual community.|$|E
50|$|A {{new class}} of modern tools are {{represented}} by web-based applications. For example, Shiny is a web-based tool developed by Rstudio, an R IDE. With a Shiny app, a modeller has the advantage to represent any which way he or she chooses to represent the predictive model while allowing the user some control. A user can choose a combination of characteristics of interest via sliders or <b>input</b> <b>boxes</b> and results can be generated, from graphs to confidence intervals to tables and various statistics of interests. However, these tools often require a server installation of Rstudio.|$|R
5000|$|Display an <b>input</b> prompt dialog <b>box,</b> storing {{the result}} in the {{variable}} %A: ...|$|R
40|$|Querying, or searching, {{is one of}} {{the most}} {{important}} issues in relational databases. There are many search paradigms, such as Structured Query Language (SQL), keyword search, and form search, a. k. a. Query-By-Example (QBE). Among them, QBE is a good trade-off between usability and functionality. However, existing QBE systems are often inconvenient for users to compose high-quality queries quickly. In this PhD workshop paper we investigate the problem of improving the usability of form-based interfaces by enabling them to (1) response a query in real time and (2) tolerate the misplacing of keywords among <b>input</b> <b>boxes.</b> We give the research challenges for achieving high performance and scalability, and introduce two of our prototype systems. 1...|$|R
50|$|Checks {{the data}} type of the input and give an error message if the input data {{does not match}} with the chosen data type, e.g., In an <b>input</b> <b>box</b> {{accepting}} numeric data, if the letter 'O' was typed instead of the number zero, an error message would appear.|$|E
5000|$|In the [...] "Stream", which {{occupies}} {{the middle of}} three columns on the page, users see updates from those in their Circles. There is an <b>input</b> <b>box</b> which allows users to enter a post. Along with the text entry field there are icons to upload and share photos and videos. The Stream can be filtered to show only posts from specific Circles.|$|E
50|$|Like {{several of}} his earlier albums, this was entirely a solo effort, with Rundgren playing all the instruments. In {{contrast}} to his earlier albums, he produced this album entirely on an Apple laptop computer using Propellerhead's Reason software for composition and Sonoma Wire Works' RiffWorks for recording. All audio processing was done with software tools as well, except for a Line 6 Toneport guitar <b>input</b> <b>box.</b>|$|E
50|$|The {{ground floor}} of the two story {{building}} contained the air-conditioning, transmitter heat exchanger controls, equipment load center data <b>input</b> junction <b>box</b> and ex-Mercury atomic time standard. The first floor contained the 8 equipment racks, the console, and the 3 megawatt transmitter.|$|R
40|$|In a {{previous}} study, interactive 3 D CAPTCHA was proposed {{as an alternative}} method to assist users to pass the CAPTCHA tests easily and pleasurably. In addition, usability issues were reported in the same study. This current study, introduces several design changes of interactive 3 D CAPTCHA to overcome the usability issues. The new design was evaluated by testing the effects of parameters on KLM execution time within experimental studies. Test {{results showed that the}} most effective methods are using arrow keys, using underline characters, using high contrast between foreground and background of cube faces, excluding case sensitivity for input validation and removal of question marks from <b>input</b> <b>boxes.</b> The new design reduced KLM execution time from 45. 9 seconds to 16. 2 seconds...|$|R
40|$|A team at Kansas State University {{recently}} launched the E-Learning Faculty Modules wiki to enhance and support online faculty development. This project is customized for {{teaching in the}} Kansas State University distance-learning program but contains a broad set of information that might be useful to others. This site is constructed using wiki technology, which permits access, multimedia expressiveness, remote collaboration, tracking, and reversibility of postings. Other tools on the site are derived from MediaWiki and its open-source capabilities. The wiki includes an overall ontology, templates, categories, completed and seeded entries, <b>input</b> <b>boxes,</b> and menus that ensure users can easily use and join the community. Taken holistically, these attributes create an ideal venue for sharing ideas and encouraging synergistic improvement of teaching practices. This chapter describes the implementation process of E-LearningFacultyModules. org and gives insight into its purpose, features, and uses...|$|R
50|$|To start chatting, {{users can}} go to the Public tab on their device and see all the nearby conversations that are going on. After {{selecting}} one, they can type in a message in the <b>input</b> <b>box</b> and start chatting. Once they do enter a message they will automatically be joined into that chat and they will get an instant notification whenever a new message arrives.|$|E
5000|$|For example, {{to alter}} every [...] "To" [...] in a {{document}} {{to the word}} [...] "From" [...] you would type in @ON ALL CHANGE [...] "To" [...] TO [...] "From"or @on & change [...] "To" [...] to [...] "From"followed by the transmit key (equivalent to Enter on a PC), and the editor would perform the action. Editing was basically full-screen, with actions not taking place until the user pressed the transmit key, a procedure very similar to today's practice of entering text into an <b>input</b> <b>box</b> in a web page, with no action being taken until the user clicks on the submit button.|$|E
5000|$|The {{machine was}} {{designed}} to fit into small offices {{with a minimum of}} support. It required 5 amps of standard 50 Hz 240 V mains power, the only concern being that it was [...] "free from excessive fluctuations." [...] The case was only 10 inches deep, 4 foot 9 inches high, and 6 foot 9 inches across. This size was chosen to allow it to be placed directly behind a standard office desk, and the power supply was positioned so it projected into the knee-hole area. The reader and <b>input</b> <b>box</b> were normally placed on the desk, while the paper tape punch, a relatively large machine, was separate and sized to provide an even desktop.|$|E
30|$|Table  3 {{presents}} the user <b>input</b> dialog <b>box</b> {{to estimate the}} number of wells needed to estimate the plant capital cost which includes confirmation, exploration, production, injection, surface equipment, and installation. The cost due to pumping is also given in Table  3. Pump costs are estimated based on the depth {{and size of the}} pump.|$|R
50|$|The IDEF0 model {{displayed}} here on {{the left}} is based on a simple syntax. Each activity is described by a verb-based label placed in a <b>box.</b> <b>Inputs</b> are shown as arrows entering {{the left side of the}} activity box while output are shown as exiting arrows on the right side of the box. Controls are displayed as arrows entering the top of the box and mechanisms are displayed as arrows entering from the bottom of the <b>box.</b> <b>Inputs,</b> Controls, Outputs, and Mechanisms are all referred to as concepts.|$|R
40|$|A {{graphical}} {{user interface}} (GUI) is under development for the MEEC family of SGEMP and SREMP simulation codes [1, 2]. These codes are ''workhorse'' legacy codes {{that have been in}} use for nearly two decades, with modifications and enhanced physics models added throughout the years. The MEEC codes are currently being evaluated for use by the DOE in the Dual Revalidation Program and experiments at NIF. The new GUI makes the codes more accessible and less prone to input errors by automatically generating the parameters and grids that previously had to be designed ''by hand''. Physics-based algorithms define the simulation volume with expanding meshes. Users are able to specify objects, materials, and emission surfaces through dialogs and <b>input</b> <b>boxes.</b> 3 D and orthographic views are available to view objects in the volume. Zone slice views are available for stepping through the overlay of objects on the mesh in planes aligned with the primary axes...|$|R
30|$|Descriptive texts {{reveal the}} content of {{surrounding}} data. For example, the sentence “Your password” describes a password <b>input</b> <b>box.</b> The sentence “First Name” describes a first name <b>input</b> <b>box</b> or a field displaying a user’s first name.|$|E
30|$|Noun phrase only (CBNP). The {{noun phrase}} {{directly}} indicates {{the content of}} the surrounding data. For instance, “Your password” indicates a password <b>input</b> <b>box.</b>|$|E
30|$|Additionally, the {{provided}} functionality is smoothly {{integrated into}} the traditional search engine’s GUI, since it occupies just {{a small portion of}} the screen on top of the <b>input</b> <b>box,</b> thus leaving plenty of room for the search results.|$|E
40|$|The {{classical}} orbital {{elements of}} an orbit are eccentricity, angular momentum, inclination, right ascension of ascending node, true anomaly, and argument of perigee. These six parameters define an orbit. Using MATLAB® to model a satellite orbiting Earth in three dimensions, a {{graphical user interface}} was created to allow a user to manipulate the orbital elements to desired quantities. In doing so, each parameter’s impact on the orbit is visually displayed. This furthers the {{understanding of how the}} parameters are linked to the orbit. When the interface is first opened, the default circular orbit has a range of 20, 000 kilometers, an angular momentum of about 133, 929 km 2 /s, an inclination of 45 °, a true anomaly of 30 °, and right ascension of ascending node and argument of perigee of 0 °. This default orbit can easily be changed by sliders and <b>input</b> <b>boxes</b> on the interface. The user-friendly interface allows for anyone to better understand an orbit and its parameters...|$|R
50|$|Imagine {{a website}} has 100 text <b>input</b> <b>boxes.</b> A few are {{vulnerable}} to SQL injections on certain strings. Submitting random strings to those boxes for a while hopefully hits the bugged code path. The error shows itself as a broken HTML page half rendered because of an SQL error. In this case, only text boxes are treated as input streams. However, software systems have many possible input streams, such as cookie and session data, the uploaded file stream, RPC channels, or memory. Errors can happen {{in any of these}} input streams. The test goal is to first get an un-handled error, and then understand the flaw based on the failed test case. Testers write an automated tool to test their understanding of the flaw until it is correct. After that, it may become obvious how to package the payload so that the target system triggers its execution. If this is not viable, one can hope that another error produced by the fuzzer yields more fruit. The use of a fuzzer saves time by not checking adequate code paths where exploits are unlikely.|$|R
50|$|Every join-pattern {{in the set}} must {{conform to}} the <b>box</b> <b>input</b> tuple type specifying a '*' for non {{required}} channels, giving an expression whose type conform to the output tuple, marking '*' the non fed outputs.|$|R
