16|206|Public
5000|$|Larrabee's x86 cores {{were based}} on the much simpler P54C Pentium design which is still being {{maintained}} for use in embedded applications. The P54C-derived core is superscalar but does not include out-of-order execution, though it has been updated with modern features such as x86-64 support, [...] similar to the Bonnell microarchitecture used in Atom. In-order <b>execution</b> <b>means</b> lower performance for individual cores, but since they are smaller, more can fit on a single chip, increasing overall throughput. Execution is also more deterministic so instruction and task scheduling can be done by the compiler.|$|E
50|$|On November 3, 1999, Means and Robert Pictou-Branscombe, a {{maternal}} {{cousin of}} Aquash from Canada, {{held a press}} conference in Denver at the Federal Building to discuss the slow progress of the government's investigation into Aquash's murder. It had been under investigation both by the Denver police, as Aquash had been kidnapped from there, and by the FBI, as she had been taken across state lines and killed on the Pine Ridge Reservation. Both Branscombe and Means accused Vernon Bellecourt, a high-ranking leader of AIM, of having ordered her <b>execution.</b> <b>Means</b> said that Clyde Bellecourt, a founder of AIM, had ensured that it was carried out at the Pine Ridge Reservation. Means said that an AIM tribunal had banned the Bellecourt brothers but tried to keep the reason for the dissension internal to protect AIM.|$|E
5000|$|Following {{this letter}} from Colbert, Charles II {{wrote a letter}} to his sister Henrietta of England which he did not entrust to his {{ordinary}} couriers [...] and which disappeared in suspicious circumstances (See section [...] "Those who died because of it"). According to Marcel Pagnol, it was with this letter that King Charles II asked his sister Henriette to announce to Louis XIV the arrest of the [...] "valet Martin", who was later taken to Calais as suggested by the ambassador Colbert de Croissy. Yet on 13 July, Lionne informed Croissy that [...] "after Roux's execution it is no longer necessary to bring Martin to France". According to Marcel Pagnol, this U-turn from the minister, occurring 22 days after Roux's <b>execution,</b> <b>means</b> in reality that Martin was arrested and lends weight to the theory that the King's order to kidnap Martin was entrusted to a special official, without the ambassador's knowledge. Marcel Pagnol therefore places the arrival of [...] "Martin" [...] (arrested in England) in Calais between 6 and 12 July 1669.|$|E
40|$|Rick Garnett {{was quoted}} in the South Bend Tribune article What do recent botched <b>executions</b> <b>mean</b> for death penalty? on August 31. “As a result of this focus, some minds may change,” said Richard Garnett, a {{professor}} of law at the University of Notre Dame and an expert on capital punishment. “I think it’s still too soon to say if this will be the catalyst for a new abolition movement. ...|$|R
40|$|The {{axillary}} {{brachial plexus}} blockade {{by means of}} stimulating paresthesia and single local anesthetic injection was examined during one year long routine activity in a plastic surgery division. Two-hundred-five blocks were performed evaluating the success percentage, the <b>execution</b> <b>mean</b> time, a sedation utility and the sequelae incidence. The technique was confirmed usefull, easy to perform, well tolerated from the patients. The technique validity, versus the suspiciousness considered by several Authors, is confirmed...|$|R
40|$|Abstract: In this {{research}} paper, {{we have conducted}} work on modeling of local broker policy based on workload profile in Network cloud. For this we are using workload based applications. To handle workload based applications, two Scheduling Policies Random Non-overlap and Workload profile based be used. We compare these two scheduling policies based on three parameters <b>Execution</b> (<b>mean)</b> time, Response (mean) time and Waiting (mean) time. Workload based profile policy gave better results than Random-Non overlap policy {{in terms of time}} performance parameter...|$|R
40|$|This article {{describes}} algorithms to solve Boolean and numerical constraints, and to randomly select values among {{the set of}} solutions. Those algorithms were first designed to generate inputs for testing and simulating reactive real-time programs. As a consequence, the chose a solving technology that allow a fine control in the way solutions are elected. Indeed, a fair selection is sometimes required, while favoring limit cases is often interesting for testing. Moreover, simulating a single reactive <b>execution</b> <b>means</b> generating several hundreds or even several thousands of atomic steps, and thus as many solving steps. Hence, the emphasis is put on efficiency, sometimes sacrificin...|$|E
40|$|The new {{requirements}} stated to {{the school}} today demand the specialization and professionalization of the school principal, processes where his specialized training has a decisive role. A proposal of foundations is presented {{for the creation of}} a theoretical-methodological conception of such training establishing: its singular nature, the need of its development in stages systemically related; its realization through the combination of ways of the postgraduate education, the methodological work and the scientific-pedagogical activity; and its significance as a process where two other sub processes are distinguished: the first one pedagogical, which claims for the application of special didactical-methodological criteria and recommendations, and another managerial, which <b>execution</b> <b>means</b> a group of specific implications...|$|E
40|$|Irregular applications, which rely on pointer-based data structures, {{are often}} {{difficult}} to parallelize. The inputdependent nature of their <b>execution</b> <b>means</b> that traditional parallelization techniques are unable to exploit any latent parallelism in these algorithms. Instead, we turn to optimistic parallelism, where regions of code are speculatively run in parallel while runtime mechanisms ensure proper execution. The performance of such optimistically parallelized algorithms is often dependent on the schedule for parallel execution; improper choices can prevent successful parallel execution. We demonstrate this through the motivating example of Delaunay mesh refinement, an irregular algorithm, which we have parallelized optimistically using the Galois system. We apply several scheduling policies to this algorithm and investigate their performance, showing that careful consideration of scheduling is necessary to maximize parallel performance. 1...|$|E
40|$|We {{present a}} {{systematic}} {{review of the}} effectiveness of vaccinating healthy children to protect others. Primary studies were identified by searching standard electronic databases, internet sites, trials registers and citation lists to January 2004 and subjected to critical appraisal. Eight randomised controlled trials, three community studies and three economic evaluations met the inclusion criteria. The evidence suggests that vaccinating healthy children against influenza has the potential for reducing the impact of influenza epidemics. However, further evidence is needed as limitations of study design or <b>execution</b> <b>mean</b> that the community benefits are difficult to quantify...|$|R
30|$|We do {{not support}} {{speculative}} <b>execution.</b> That <b>means,</b> we will not repeat map or reduce execution and select the faster as the final result, killing the slower one, for it proved to have little contribution to improve the overall execution time.|$|R
5000|$|On January 6, 1989, inmate George [...] "Tiny" [...] Mercer was executed. It was {{the last}} {{execution}} to {{take place at the}} Missouri State Penitentiary and the first <b>execution</b> by <b>means</b> of lethal injection. The execution took place in the facility's disused gas chamber.|$|R
40|$|This paper {{discusses}} {{the need for}} Leaders to move into {{an active role in}} creating, developing and maintaining synergy within quantum organizations. To provide organizational direction for Vision, Mission and performance <b>execution</b> <b>means</b> taking groups, teams and “Communities-of-Practice ” (Wenger, 1999) to a new sustained level of innovative thinking and performance. We must start by recognizing that the leadership role is crucial to moving an organization forward in a positive direction – unfortunately the path there is confusing and not clearly articulated requiring new operational definitions for ‘Change’, ‘Synergy ’ and ‘Leadership’. The operational definitions proposed in this paper will allow a stronger focus on communication around ‘Quantum organizations’, synergy or simply ‘Thinking Together’. The phrase and challenge- “The journey starts with you” applies everywhere...|$|E
40|$|This paper first {{discusses}} two {{strategies for}} controlling robot motions: planning under pre-described models, and reactive local control by evaluating sensor information. A hybrid control concept is then introduced to integrate both the deliberative and the reactive strategies {{so that a}} priori knowledge can be efficiently utilised and on-line sensor data integrated. Based on subgoals for guiding global motion directions, this concept can be decomposed into three components: subgoal planning, subgoal interpolation and subgoal-guided plan <b>execution.</b> <b>Means</b> of realising these components are briefly described. Simulation with examples for both manipulators and mobile robots demonstrates the feasibility of this concept. I. Introduction This work aims at combining advantages of both deliberative and reactive strategies to realise the tasklevel programming of robot motions. Since {{the end of the}} 1970 's, computer scientists, control engineers and mathematicians have begun to investigate the pro [...] ...|$|E
40|$|The {{mission of}} the Office of Legal Counsel {{is to give the}} President advice to guide him in {{fulfilling}} an awesome constitutional obligation: to take care that the laws are faithfully executed. Faithful <b>execution</b> <b>means</b> interpreting the law without stretching it and without looking for loopholes. OLC 2 ̆ 7 s job is not to rubber-stamp administration policies, and it is not to provide legal cover for illegal actions. Unfortunately, the interrogation memos fall far short of professional standards of candid advice and independent judgment. They involve a selective and in places deeply eccentric reading of the law. The memos cherry-pick sources of law that back their conclusions, and leave out sources of law that do not. They read as if they were reverse engineered to reach a pre-determined outcome: approval of waterboarding and the other CIA techniques...|$|E
40|$|In {{this paper}} we give a {{definition}} of "algorithm," "finite algorithm," "equivalent algorithms," {{and what it means}} for a single algorithm to dominate a set of algorithms. We define a derived algorithm which may have a smaller <b>mean</b> <b>execution</b> time than any of its component algorithms. We give an explicit expression for the <b>mean</b> <b>execution</b> time (when it exists) of the derived algorithm. We give several illustrative examples of derived algorithms with two component algorithms. We include <b>mean</b> <b>execution</b> time solutions for two-algorithm processors whose joint density of execution times are of several general forms. For the case in which the joint density for a two-algorithm processor is a step function, we give a maximum-likelihood estimation scheme with which to analyze empirical processing time data...|$|R
30|$|Representation {{of a set}} of valid {{configurations}} applicable at a given <b>execution</b> context, by <b>means</b> of feature model formalisms.|$|R
2500|$|It {{measures}} {{only one}} aspect of performance: time, which <b>means</b> <b>execution</b> time and not the time to acquire or learn a task ...|$|R
40|$|With the {{increasing}} deployment of autonomous machine type devices which highly surpass in number the devices directly controlled by humans, the wireless environment should support efficiently {{and in a}} scalable manner the Machine- 2 -Machine (M 2 M) type of communication enabling new services and business opportunities. However, the current mobile network architecture is designed for human interaction, missing the optimization which {{can be derived from}} the basic characteristics of the machine type communication. This article introduces the concept of device connectivity management as a core network means for indicating governing policies to the wireless connected devices on when and how to communicate {{in order to be able}} to deliver the machine services in an efficient manner in regard to core network available capabilities and to service requirements. Also it includes the <b>execution</b> <b>means</b> in the wireless device for handling these policies. Furthermore, the concept is exemplif ied as an addition to the current 3 GPP Evolved Packet Core architecture and to the Fraunhofer OpenEPC testbed...|$|E
40|$|The dynamic {{composition}} of Web services from independent service providers for complicated distributed applications {{is emerging as}} a key technique in the Internet world for future critical software systems. In such an environment, a user may need to compose some Web services to perform critical tasks along a given execution path that needs high reliability to avoid unacceptable failures due to service crashes. To achieve high reliability, the active parallel replication and standby parallel replication strategies {{can be used for}} managing the redundancy existing in each task of an execution plan. However, more replicas of Web services used during a task <b>execution</b> <b>means</b> higher price a user has to pay for. In this paper, we propose an approach to select necessary Web services from different vendors for the purpose of their composition in a way that satisfies the user-specified reliability, price and response time, while trying to minimize the price and delay of an execution plan. We provide simulation results to study the performance of the proposed approach and compare it with four variations that use different heuristics for service selections...|$|E
40|$|The {{intricate}} procedural and data-driven decision {{trees that}} {{play a critical}} role in complex financial contracts like cash distribution waterfalls in structured finance agreement indentures (e. g., collateralized debt obligations (CDOs)), master limited partnership agreements, and private equity fund agreements are inefficiently depicted as written contracts. As Professor Henry Hu explains in Too Complex to Depict?, the difficulty of translation—or depiction—between original mathematical models, plain English prospectuses, legal contracts, and programmed <b>execution</b> <b>means</b> that often the written depictions that form the basis of disclosures do not accurately define the act of execution. To overcome this, the SEC proposed an amendment to Regulation AB that would require disclosure of special-made cash flow waterfalls programs for asset-backed securities (ABS) to escape the limitations of language. British and Australian regulators have already implemented a similar code disclosure regime. Likewise, Professor Hu goes further and supports a “perfect information ” model that presumably would require disclosure of the actual computer programs used by, e. g., CDO trustees to execute cash distributions. These proposals and implementations create a new problem: perception. In the status quo...|$|E
50|$|Instruction {{simulation}} {{provides the}} opportunity to detect errors BEFORE <b>execution</b> which <b>means</b> that the conditions are still exactly as they were and not destroyed by the error. A very good example from the IBM S/360 world is the following instruction sequence that can cause difficulties debugging without an instruction simulation monitor.|$|R
40|$|In this paper, {{we present}} {{the design of}} Cilk-NOW, a runtime system that adaptively and {{reliably}} executes functional Cilk programs in parallel on a network of UNIX workstations. Cilk (pronounced "silk") is a parallel multithreaded extension of the C language, and all Cilk runtime systems employ a provably efficient threadscheduling algorithm. Cilk-NOW is such a runtime system, and in addition, Cilk-NOW automatically delivers adaptive and reliable execution for a functional subset of Cilk programs. By adaptive <b>execution,</b> we <b>mean</b> that each Cilk program dynamically utilizes a changing set of otherwise-idle workstations. By reliable <b>execution,</b> we <b>mean</b> that the Cilk-NOW {{system as a whole}} and each executing Cilk program are able to tolerate machine and network faults. Cilk-NOW provides these features while programs remain fault oblivious, meaning that Cilk programmers need not code for fault tolerance. Throughout this paper, we focus on end-to-end design decisions, and we show how these decis [...] ...|$|R
50|$|In addition, the {{tribunal}} found, that on 15 June 1942, one of Jost's subordinates {{wrote to the}} RSHA, requesting shipment of a gas van (used by the Einsatzgruppen for <b>executions</b> by <b>means</b> of carbon monoxide asphixiation) and gas hoses for three gas vans on hand. Jost denied any knowledge of this letter but admitted that the subordinate in question {{had the authority to}} order equipment.|$|R
40|$|Abstract. We {{discuss how}} to perform {{symbolic}} execution of large programs {{in a manner that}} is both compositional (hence more scalable) and demand-driven. Compositional symbolic <b>execution</b> <b>means</b> finding feasible interprocedural program paths by composing symbolic executions of feasible intraprocedural paths. By demand-driven, we mean that as few intraprocedural paths as possible are symbolically executed in order to form an interprocedural path leading to a specific target branch or statement of interest (like an assertion). A key originality of this work is that our demand-driven compositional interprocedural symbolic execution is performed entirely using first-order logic formulas solved with an off-the-shelf SMT (Satisfiability-Modulo-Theories) solver – no procedure in-lining or custom algorithm is required for the interprocedural part. This allows a uniform and elegant way of summarizing procedures at various levels of detail and of composing those using logic formulas. This novel symbolic execution technique has been implemented for automatic test input generation in conjunction with Pex, a general automatic testing framework for. NET applications. Preliminary experimental results are enouraging. For instance, our tool was able to generate tests triggering assertion violations in programs with large numbers of program paths that were beyond the scope of non-compositional test generation. ...|$|E
40|$|The Business Activity Law Act regulates {{such areas}} as the {{obligations}} involved in undertaking and conducting business activities by entrepreneurs. These obligations {{have a variety of}} legal characters and they serve a number of different functions. They refer, for instance, to the conditions of conducting a business activity, possession of appropriate professional qualifications to conduct specific types of business activity, registering an entrepreneur and traded products as well as requirements regarding payment transactions in trade with existing entrepreneurs on the market. Violation of one’s obligations entails a number of different legal consequences other than administrative, such as penal liability for violation. However, in order to consider a breach of one>s administrative duties to be a violation of the law, each of the two conditions must be met: the committed act must be unlawful (prohibited by an act under the threat of a penalty) and injurious to the public. A violation of an order does not entail liability for a violation of the law i f the act is not injurious to the public. Criminal provisions are regulated by chapter 9 of the act. However, because of the textual character of any criminal norm, which is to refer to other legislative texts, the definition of a violation is determined not only by the Business Activity Law Act but also other administrative legal norms referred to by the Act. There is a large number of administrative and legal norms regulated in separate acts and binding for an entrepreneur in the course o f conducting a business activity. This article only deals with the criminal consequences of neglecting these obligations. It is a duty of eligible administrative bodies to oversee the discharge of these obligations imposed upon entrepreneurs. If a violation (as defined in chapter 9 of the Act) is disclosed, then eligible administrative bodies have the powers of a public prosecutor, providing that they have disclosed the violation and applied for the punishment in the scope of their competences. The court competent to consider violation cases is the regional court, which applies the procedure proper for violation cases. According to the principle o f criminal law subsidiarity, criminal measures only serve a supplementary function to the administrative means of administrative duty obligations imposed upon entrepreneurs. In administrative law enforcement the main role is played by administrative law instruments including administrative <b>execution</b> <b>means.</b> These <b>execution</b> <b>means</b> are the most apt for the character of the activities that are taken by the administrative bodies and that aim at implementing the norms of material administrative law on undertaking and conducting business activity...|$|E
40|$|Having {{hardware}} {{more capable}} of parallel <b>execution</b> <b>means</b> that more program scheduling decisions {{have to be taken}} to utilize that hardware efficiently. To this end, compilers implement coarse-grained loop transformations in addition to traditionally used fine-grained instruction reordering. Implementors of embedded domain specific languages have to face a difficult choice: to translate operations on collections to a low-level language naively hoping that its optimizer will do the job, or to implement their own optimizer {{as a part of the}} EDSL. We turn ourselves to the concept of loop tiling from the imperative world and find its equivalent for recursive functions. We show the construction of a tiled  functorial map over containers that can be naively translated to a corresponding nested loop. We illustrate the connection between untiled and tiled functorial maps by means of a type-theoretic notion of algebraic ornament. This approach produces an family of container traversals indexed by tile sizes and serves as a basis of a proof that untiled and tiled functorial maps have the same semantics. We evaluate our approach by designing a language of tree traversals as a DSL embedded into Haskell which compiles into C code. We use this language to implement tiled and untiled tree traversals which we benchmark under varying choices of tile sizes and shapes of input trees. For some tree shapes, we show that a tiled tree traversal can be up to 50 % faster than an untiled one under a good choice of the tile size...|$|E
30|$|To {{facilitate}} {{efficient use}} of congestion information, and {{to increase the speed}} of the A* search algorithm, the implementation post-processes traffic information to form majority opinions so that the information can be immediately retrieved during algorithm <b>execution.</b> This <b>means</b> that majority opinions are calculated every time new information is retrieved, which is then stored in a local hash table for constant time (O(1)) retrieval by the A* algorithm.|$|R
3000|$|... [...]. The {{execution}} time of tasks is generated imposing an utilization factor of each point uniformly distributed in each interval. The utilization factor is divided in intervals of length 10 %, ranging from 0.2 to 1.0. In {{order to reduce}} the statistical bias, each obtained result is related to 1, 000 <b>executions,</b> which <b>means</b> that 9, 000 different task sets have been generated during the simulated interval, for each presented result.|$|R
40|$|This paper reports two {{experiments}} with implementations of constructions from theoretical computer science. The first one deals with Kleene's and Rogers' second recursion theorems {{and the second}} is an implementation of Cook's linear time simulation of two way deterministic pushdown automata (2 DPDAs). Both experiments involve the treatment of programs as data objects and their <b>execution</b> by <b>means</b> of interpreters. For our implementations we have been using [...] ...|$|R
40|$|The article {{describes}} the regulation of execution proceedings in administration of the selected European socialist States. The analysis {{is limited to the}} legislations of those States, where the execution proceedings has been more completely regulated. It is the case of Bulgaria, Czechoslovakia, Yougoslavia, Poland and Hungary. In the remaining States the execution proceedings occupies a secondary position and is fragmentarily regulated in various legislations of detailed problems of state's administration. Various normative models adopted in the socialist States can be specified on the grounds of varying modes of regulating the procedure. The author focused on the problem of safeguarding legally protected interests of citizens in the execution proceedings in the compared legislations. The very fact of legislating the proceedings by means of parliamentary acts has the essential effect upon the protection of citizen's interest. Out of detailed questions the following were analysed: mode of regulating some <b>execution</b> <b>means</b> (substituted execution, immediate enforcement), principles of execution proceedings and the system of appeals. The author concludes that the priority is attributed to the protection of State's interest in the specific collission of State's and citizen's interest which is observed in legislations of execution proceedings in the socialist States. Polish legislation however, can effectively protect the interest of citizens in the execution proceedings. The author indicates at the necessity of further actions aiming at more effective citizen's interest protection by means of submitting decisions given in the execution proceedings under judicial control of administrative decisions. Digitalizacja i deponowanie archiwalnych zeszytów RPEiS sfinansowane przez MNiSW w ramach realizacji umowy nr 541 /P-DUN/ 201...|$|E
500|$|The {{practice}} {{appears to}} have been adopted in parts of the Muslim Middle East. Rabbi Petachiah of Ratisbon, a twelfth-century Jewish traveler, reported an <b>execution</b> by this <b>means</b> during his stay in Seljuk-ruled northern Mesopotamia (modern Iraq): ...|$|R
30|$|DIRL, RL, CRL, and Exp 3 are {{evaluated}} {{in terms of}} average execution time and average communication effort. These values are measured from 20 iterations and represent the <b>mean</b> <b>execution</b> times and the mean of Send_Message task executions.|$|R
50|$|Traces {{are easy}} to optimize, since they {{represent}} only one <b>execution</b> path, which <b>means</b> that no control flow exists and needs no handling. Typical optimizations include constant-subexpression elimination, dead-code elimination, register allocation, invariant-code motion, constant folding, and escape analysis.|$|R
30|$|The <b>mean</b> <b>execution</b> {{time was}} 109 s for the {{extraction}} of the line segments and 12 s for the extraction and characterization of features using Matlab on a typical Dual Core 2 × 2.50 GHz machine with 2.0 GB RAM.|$|R
5000|$|The {{implementation}} of {{should include the}} whole standard process along with vendors and subcontractors, {{with the aim of}} minimizing the inclusive costs and total supplies, while simultaneously reducing the total execution time. This approach considerably broadens the range of available options of raising effectiveness, as well as often the time of <b>execution</b> by <b>means</b> of optimization, which takes into account those activities which lie outside the scope of a single enterprise (e.g. deliveries, warranty services) within a single value-adding process.|$|R
