0|10000|Public
40|$|Abstract. We {{present a}} semantic-based toolkit for the {{automated}} selection of Building-Blocks in SAP R/ 3, aimed at easing and improving Best Practices reusability. The automated selection process exploits Abduction-based Concept <b>Covering</b> <b>in</b> <b>Description</b> Logics to select Building Blocks and provides, if necessary, logic-based {{information on what}} remains unavailable. ...|$|R
40|$|In {{the first}} group of paging p. [69] is {{incorrectly}} numbered 66, p. [286] is numbered 289, and p. [32] and [40] are not numbered; in the second group of paging p. [27] is numbered 2. This copy contains the large folded map. mounted on lines and placed <b>in</b> <b>cover.</b> DLCFor <b>description</b> of work cf. Church catalogue, no. 360. Bound by Lortic fils; brown morocco (Eve design) blue doublure with floreated border; monogram of Robert Hoe; blue silk lined guard leaves. Book-plates of Robert Hoe, and C. L. F. Robinson. Ms. note at head of t. -p. : Collegij Soc:[superscript tis] Jesu Louanij, 1636. In another hand the initials M. B...|$|R
2500|$|This {{was another}} major work by Hume and <b>in</b> it he <b>covered</b> <b>descriptions</b> of the nests, eggs and the [...] {{breeding}} seasons of most Indian bird species. It {{makes use of}} notes from contributors to his journals {{as well as other}} correspondents and works of the time. Hume also makes insightful notes such as observations on caged females separated from males that would continue to lay fertile eggs through the possibility of sperm storage and the reduction in parental care by birds that laid eggs in warm locations (mynas in the Andamans, river terns on sand banks).|$|R
5000|$|Create Comic Book Archive <b>files,</b> a <b>description</b> <b>file</b> and a {{password}} can be added.|$|R
5000|$|Creates a <b>description</b> <b>file</b> {{of a new}} flavor {{from the}} results of {{generating}} a distro (gen-distro) ...|$|R
50|$|DMSII {{provided}} an ISAM (indexed sequential access method) model for data access, transaction isolation and database-recovery capabilities. The database schema {{was written in}} the proprietary Data and Structure Definition Language (DASDL). The DASDL source code was compiled with a system utility into a file containing the metadata for the database (known as the <b>description</b> <b>file).</b> A database-utility program would use the database <b>description</b> <b>file</b> to create the remaining components of the database.|$|R
3000|$|... <b>description</b> <b>file.</b> All {{of these}} {{procedures}} are submitted as remote jobs to grid system {{and they take}} place in remote nodes.|$|R
5000|$|GenApi: Using an XML <b>description</b> <b>file,</b> this {{is used to}} {{configure}} the camera and details how to access and control cameras; ...|$|R
40|$|Model reuse is an {{essential}} means {{to meet the demand}} of model development in complex simulation. An effective approach to realize the model reusability is to establish standard model specification including interface specification and representation specification. By standardizing model’s external interfaces, Reusable Component Model Framework (RCMF) achieves the model reusability acting as an interface specification. However, the RCMF model is presently developed just through manual programing. Besides implementing model’s business logic, modeler should also ensure the model strictly following the reusable framework, which is very distracting. And there lacks model description information for instructing model reuse or integration. To address these issues, we first explored an XML-based model <b>description</b> <b>file</b> which completed RCMF as the model representation and then proposed a RCMF model development tool—SuKit. Model <b>description</b> <b>file</b> describes a RCMF model and can be used for regenerating a model and instructing model integration. SuKit can generate a skeleton RCMF model together with a model-customized <b>description</b> <b>file</b> with the configured information. Modeler then just needs to concentrate on the model processing logic. The case study indicates that SuKit has good capability of developing RCMF models and the well-formed <b>description</b> <b>file</b> can be used for model reuse and integration...|$|R
5000|$|XML <b>description</b> <b>file</b> {{based on}} a schema defined by the European Machine Vision Association's GenICam {{standard}} that allows access to camera controls and image streams.|$|R
40|$|Abstract. Aiming at the {{difficulty}} in writing network security test programs, this paper designs and realizes a visualized network security test platform. It first defines a template for security test program, which encapsulates the commonly used network packet operations. Then it provides a visualized design interface, and saves the design results into <b>description</b> <b>files.</b> Finally it resolves the <b>description</b> <b>files</b> to form the security test program. This platform can simplify the design procedure, thus improve the efficiency of writing a network security test program. ...|$|R
40|$|Fieldbus {{technology}} has been widely used in industrial control system. The coexistence {{of different kinds of}} fieldbus standards brings the problem of fieldbus interoperability. This paper proposes a solution named extensible device description based on XML for fieldbus interoperability. With XML we can define standardized fieldbus device description language and uniform interface between configurator and device <b>description</b> source <b>files.</b> The DTD for XML-based fieldbus device <b>description</b> <b>files</b> for fieldbus control system is given in this paper. The interfaces for parsing device <b>description</b> source <b>files</b> are also defined. IEE...|$|R
5000|$|In August 2007, Texterity {{was awarded}} U.S. Patent 7,257,771 for a “system and method for {{converting}} a page <b>description</b> <b>file</b> to a composite representation thereof for fast Web viewing.” ...|$|R
30|$|The {{building}} automation domain also developed specific device descriptions, {{such as the}} ASCII file-based LonMark Device Interface (XIF) Files [6] or the binary EIB/KNX <b>description</b> <b>files</b> for the ETS engineering tool.|$|R
30|$|To {{every action}} (i.e., share, search backup etc.), when the {{operation}} is finished, the operation execution information (multimedia data file accessed, size, etc.) will be recorded into the job information statistics database. This {{is done by the}} statistic module which collects time benchmarks in different places of procession and updates the statistic database which is maintained in a text file in every local pGrid node. Other than the above text file there are i) data object <b>description</b> <b>file</b> which contains the details of the multimedia data and ii) grid node <b>description</b> <b>file</b> which contains the details of nodes.|$|R
50|$|MChess Pro {{has its own}} DOS GUI and as well {{as playing}} chess is able to analyse EPD (Extended Position <b>Description)</b> <b>files.</b> The opening book for the {{software}} is written by Sandro Necchi.|$|R
5000|$|... #Caption: A {{number of}} images exist of the Lancaster County, Pennsylvania area, dated [...] "1938?." [...] The <b>description</b> <b>filed</b> with this {{photograph}} includes the note, [...] "Notice the Amish {{boy on the}} extreme left." ...|$|R
40|$|Supplementary {{information}} for the paper &# 39;QSAR analysis of substituent effects on tambjamine anion transporters&# 39;. DOI: 10. 1039 /c 5 sc 03932 kThe relationship of these data {{can be found in}} the <b>description</b> <b>file</b> (<b>Description</b> of Data mapping within dataset - Mapping_File_Descriptions). The. jmp file was created using JMP® Pro 12. 1. 0 from SAS Institute Inc. </span...|$|R
5000|$|<b>DESCRIPT.ION</b> (a similar <b>file</b> used {{to store}} <b>file</b> <b>descriptions</b> / long names and attributes) ...|$|R
5000|$|Complete {{implementation}} of the internationalization and localization library independent of the underlying operating system, including a large set of locale definition <b>files,</b> character set <b>description</b> <b>files,</b> and utility programs to process these files and generate locale databases ...|$|R
5000|$|List {{of people}} on the <b>cover</b> (<b>descriptions,</b> {{significance}} and the configuration can be found in this article), total of 55 people: ...|$|R
25|$|The machine <b>description</b> <b>file</b> {{contains}} RTL patterns, {{along with}} operand constraints, and code snippets to output the final assembly. The constraints {{indicate that a}} particular RTL pattern might only apply (for example) to certain hardware registers, or (for example) allow immediate operand offsets of only a limited size (e.g. 12, 16, 24, … bit offsets, etc.). During RTL generation, the constraints for the given target architecture are checked. In order to issue a given snippet of RTL, it must match one (or more) of the RTL patterns in the machine <b>description</b> <b>file,</b> and satisfy the constraints for that pattern; otherwise, {{it would be impossible}} to convert the final RTL into machine code.|$|R
30|$|The syntax of the <b>description</b> <b>file</b> is simple, and {{contains}} the bare minimum information required {{to generate the}} deployment graph. Listing ?? provides an example <b>description</b> <b>file</b> for the Wordpress application. Initially, the users define the application modules of their application (e.g., db-server and web-server). For each module, the user provides a list of scripts that contain its sequence number (seq parameter) that indicates its order of execution, {{the path of the}} deployment script (file parameter) that may be any executable file, and (if applicable) a list of script names in which the current script depends to or the scripts to which the current script will send messages to (i.e., input and output parameters respectively).|$|R
50|$|The machine <b>description</b> <b>file</b> {{contains}} RTL patterns, {{along with}} operand constraints, and code snippets to output the final assembly. The constraints {{indicate that a}} particular RTL pattern might only apply (for example) to certain hardware registers, or (for example) allow immediate operand offsets of only a limited size (e.g. 12, 16, 24, … bit offsets, etc.). During RTL generation, the constraints for the given target architecture are checked. In order to issue a given snippet of RTL, it must match one (or more) of the RTL patterns in the machine <b>description</b> <b>file,</b> and satisfy the constraints for that pattern; otherwise, {{it would be impossible}} to convert the final RTL into machine code.|$|R
30|$|Listing 4 {{presents}} the rule instance {{generated from the}} execution rule template of Listing 2 and the <b>description</b> <b>file</b> presented in Listing 3. This rule reads the values of specific sensors, invokes the step and sends the computed commands to specific actuators.|$|R
50|$|In later years, with {{compiler}} code size {{being less}} of a concern, most of the preprocessing constructs were made available in the user level of ALGOL. Only the unsafe constructs and the direct processing of the database <b>description</b> <b>file</b> remain restricted to DMALGOL.|$|R
5000|$|FOCUS {{features}} {{the ability for}} the user to construct a data <b>description</b> <b>file</b> (called a [...] "master file description") referring to the actual data file, or even several different data <b>description</b> <b>files</b> addressing the same data file in different ways, rather than the usual practice of having the file structure hard-coded into the program. In this way, files of any structure from any source can be accessed or produced in many different ways, eliminating much of the data manipulation (for example concatenation, or parsing) usually required with other earlier programming languages to change variable formats or data structures. For instance, the same actual data file can be accessed (read or write) as each record being an 80 byte text string, or as 40 2 character numerical fields, other as 10 8-byte floating point numbers, etc., by the user simply re-writing the appropriate master <b>file</b> <b>description</b> as needed.|$|R
50|$|There is a plug-in/module {{system in}} Octopussy, which is mainly geared towards the {{modification}} of Octopussy reports. Such a plug-in consists {{out of a}} <b>description</b> <b>file,</b> which defines the plug-in name and functions, and a code file with perl code to process the actual data.|$|R
5000|$|In some systems (like {{for example}} BitTorrent), {{instead of a}} top hash the whole hash list is {{available}} on a web site in a small file. Such a [...] "torrent file" [...] contains a <b>description,</b> <b>file</b> names, a hash list and some additional data.|$|R
40|$|We {{present a}} new module system for Java that {{improves}} upon {{many of the}} deficiencies of the Java package system and gives the programmer more control over dynamic linking. Our module system provides explicit interfaces, multiple views of modules based on hierarchical nesting, and more flexible name-space management than the Java package system. Relationships between modules are explicitly specified in module <b>description</b> <b>files.</b> We provide more control over dynamic linking by allowing import statements in module <b>description</b> <b>files</b> to require that imported modules be annotated with certain properties, which we implement by digital signatures. Our module system is compatible enough with standard Java that we have implemented it as a source-to-source and bytecodeto -bytecode transformation wrapped around a standard Java compiler, using a standard JVM...|$|R
50|$|For each WWW search {{interface}} of {{the target}} catalogs, a structure <b>description</b> <b>file</b> is provided which allows the CGI program to be entered. The structure <b>description</b> <b>file</b> describes {{the structure of the}} respective search form and the structure of the resulting hit lists. Important information about the search form is the names of the WWW server, the search fields, and the CGI program {{of the target}} catalog that performs the search. The CGI program of the KVK then transfers the search queries in the KVK in the correct syntax to the correct fields of the target catalog. Important elements of the hit list are the short titles of the hits and the URL links to the full title display of each hit.|$|R
50|$|Originally, DMSII {{maintained}} a data dictionary that the application programmer referenced in its source code. The {{source for the}} data structures was maintained in an ordinary CANDE source file. That source was then compiled with the DASDL compiler, which created the dictionary (<b>description</b> <b>file)</b> if none existed prior. If a dictionary did exist, the new design indicated by the source file was incorporated into the dictionary; the programs to copy {{the data from the}} old file structure(s) and write to the new file structure(s) were automatically generated (a database reorganization task). The application programmer merely needed to re-compile his application source (typically COBOL) against the new <b>description</b> <b>file</b> and the programmer could take advantage of new data elements in the structures.|$|R
50|$|A circuit to be {{analyzed}} using PSpice is described by a circuit <b>description</b> <b>file,</b> which is processed by PSpice and executed as a simulation. PSpice creates an output file to store the simulation results, and such results are also graphically displayed within the OrCAD EE interface.|$|R
50|$|WavPack {{support was}} added to WinZip {{starting}} with version 11.0 beta, released in October 2006. This extension to the ZIP file format was included by PKWARE, the maintainers of the format, in the official APPNOTE.TXT <b>description</b> <b>file</b> starting with version 6.3.2, released on 28 September 2007.|$|R
40|$|ReQuest is a {{semantic}} search engine for specialized domains. It offers searches based on ontologies and resource <b>description</b> <b>files</b> (RDF). ReQuest {{was built to}} evaluate semantic searches against classic Information Retrieval searches. The results of a user survey in the newsdomain showed that the Semantic Web can improve searches...|$|R
40|$|In: Miesenberger K et al (eds). Proceedings of the 10 th International Conference ICCHP 2006 (Linz, Austria, July 2006), LNCS 4061, pp. 215 - 222. Berlin-Heidelberg: Springer-VerlagTwo {{tools are}} {{presented}} which support test case management for accessibility test suites. Creating test suites for the Web Content Accessibility Guidelines 2. 0 is one major {{objective of the}} EU-funded project BenToWeb. Parsifal is a desktop application which easily allows editing test <b>description</b> <b>files.</b> Test <b>description</b> <b>files</b> compose an XML layer containing descriptive information about the particular test cases. Amfortas is a web application which allows controlled evaluation of the test suites by users. Controlled in that sense means, that Amfortas not only stores the evaluation results, but also {{is aware of the}} physical and technical condition of the evaluator. status: publishe...|$|R
