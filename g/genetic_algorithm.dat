10000|10000|Public
25|$|Yang, J. and Honavar, V. (1998). Feature Subset Selection Using a <b>Genetic</b> <b>Algorithm.</b> IEEE Intelligent Systems (Special Issue on Feature Transformation and Subset Selection). vol. 13. pp.44–49.|$|E
25|$|Generally {{heuristic}} algorithm {{relies on}} the iterative strategy, scilicet based on a comparison method, optimizing the results of multiple sequence alignment by the iterative process. Davie M proposed using particle swarm optimization algorithm to solve the multiple sequence alignment problem; Ikeda T proposed a heuristic algorithm {{which is based on}} A* search algorithm; Bimey E first proposed using hidden Markov model to solve the multiple sequence alignment problem; and many other biologists use <b>genetic</b> <b>algorithm</b> to solve it. All these algorithms generally are robust and insensitive to the number of sequences, but they also have shortcoming, for example, the result got from particle swarm optimization algorithm is unstable and its merits depend on the selection of random numbers, the runtime of A * search algorithm is too long and the <b>genetic</b> <b>algorithm</b> is easy to fall into local excellent.|$|E
25|$|Multi-objective {{optimization}} {{has been}} increasingly employed in chemical engineering. In 2009, Fiandaca and Fraga used the multi-objective <b>genetic</b> <b>algorithm</b> (MOGA) {{to optimize the}} pressure swing adsorption process (cyclic separation process). The design problem involved the dual maximization of nitrogen recovery and nitrogen purity. The results provided a good approximation of the Pareto frontier with acceptable trade-offs between the objectives.|$|E
40|$|Abstract. <b>Genetic</b> <b>{{algorithms}},</b> search algorithms {{based on}} the genetic processes observed in natural evolution, {{have been used to}} solve difficult problems in many different disciplines. When applied to very large-scale problems, <b>genetic</b> <b>algorithms</b> exhibit high computational cost and degradation {{of the quality of the}} solutions because of the increased complexity. One of the most relevant research trends in <b>genetic</b> <b>algorithms</b> is the implementation of parallel <b>genetic</b> <b>algorithms</b> with the goal of obtaining quality of solutions efficiently. This paper first reviews the state-of-the-art in parallel <b>genetic</b> <b>algorithms.</b> Parallelization strategies and emerging implementations are reviewed and relevant results are discussed. Second, this paper discusses important issues regarding scalability of parallel <b>genetic</b> <b>algorithms...</b>|$|R
40|$|Abstract — In recent years, several {{approaches}} {{have been developed}} for <b>genetic</b> <b>algorithms</b> to enhance their performance in dynamic environments. Among these approaches, one kind of methods is to adapt genetic operators in order for <b>genetic</b> <b>algorithms</b> to adapt to a new environment. This paper investigates the effect of the selection pressure on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments. A hyper-selection scheme is proposed for <b>genetic</b> <b>algorithms,</b> where the selection pressure is temporarily raised whenever the environment changes. The hyper-selection scheme can be combined with other approaches for <b>genetic</b> <b>algorithms</b> in dynamic environments. Experiments are carried out to investigate the effect of different selection pressures on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments and to investigate the effect of the hyper-selection scheme on the performance of <b>genetic</b> <b>algorithms</b> in combination with several other schemes in dynamic environments. The experimental results indicate that the effect of the hyperselection scheme depends on the problem under consideration and other schemes combined in <b>genetic</b> <b>algorithms.</b> I...|$|R
40|$|<b>Genetic</b> <b>algorithms</b> are {{stochastic}} search techniques {{based on}} the mechanics of natural selection and natural genetics. <b>Genetic</b> <b>algorithms</b> differ from traditional analytical methods by using genetic operators and historic cumulative information to prune the search space and generate plausible solutions. Recent {{research has shown that}} <b>genetic</b> <b>algorithms</b> have a large range and growing number of applications. The research presented in this thesis is that of using <b>genetic</b> <b>algorithms</b> to solve some typical combinatorial optimization problems, namely the Clique, Vertex Cover and Max Cut problems. All of these are NP-Complete problems. The empirical results show that <b>genetic</b> <b>algorithms</b> can provide efficient search heuristics for solving these combinatorial optimization problems. <b>Genetic</b> <b>algorithms</b> are inherently parallel. The Connection Machine system makes parallel implementation of these inherently parallel algorithms possible. Both sequential <b>genetic</b> <b>algorithms</b> and parallel <b>genetic</b> <b>algorithms</b> for Clique, Vertex Cover and Max Cut problems have been developed and implemented on the SUN 4 and the Connection Machine systems respectively...|$|R
25|$|Previously Warwick {{helped develop}} <b>genetic</b> <b>algorithm</b> named Gershwyn, which {{was able to}} exhibit {{creativity}} in producing popular songs, learning what makes a successful record by listening to examples of previous successful songs. Gershwyn appeared on BBC's Tomorrow's World having been successfully used to mix music for Manus, a group consisting of the four younger brothers of Elvis Costello.|$|E
25|$|It {{has also}} been used to produce near-optimal {{solutions}} to the travelling salesman problem. They have an advantage over simulated annealing and <b>genetic</b> <b>algorithm</b> approaches of similar problems when the graph may change dynamically; the ant colony algorithm can be run continuously and adapt to changes in real time. This is of interest in network routing and urban transportation systems.|$|E
25|$|In {{order to}} gain insight into why animals evolve {{swarming}} behaviour, scientists have turned to evolutionary models that simulate populations of evolving animals. Typically these studies use a <b>genetic</b> <b>algorithm</b> to simulate evolution over many generations in the model. These studies have investigated a number of hypotheses explaining why animals evolve swarming behaviour, such as the selfish herd theory the predator confusion effect, the dilution effect, and the many eyes theory.|$|E
40|$|In recent years, several {{approaches}} {{have been developed}} for <b>genetic</b> <b>algorithms</b> to enhance their performance in dynamic environments. Among these approaches, one kind of methods is to adapt genetic operators in order for <b>genetic</b> <b>algorithms</b> to adapt to a new environment. This paper investigates the effect of the selection pressure on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments. A hyper-selection scheme is proposed for <b>genetic</b> <b>algorithms,</b> where the selection pressure is temporarily raised whenever the environment changes. The hyper-selection scheme can be combined with other approaches for <b>genetic</b> <b>algorithms</b> in dynamic environments. Experiments are carried out to investigate the effect of different selection pressures on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments and to investigate the effect of the hyper-selection scheme on the performance of <b>genetic</b> <b>algorithms</b> in combination with several other schemes in dynamic environments. The experimental results indicate that the effect of the hyper-selection scheme depends on the problem under consideration and other schemes combined in <b>genetic</b> <b>algorithms...</b>|$|R
50|$|Parallel {{implementations}} of <b>genetic</b> <b>algorithms</b> {{come in two}} flavors. Coarse-grained parallel <b>genetic</b> <b>algorithms</b> {{assume a}} population {{on each of the}} computer nodes and migration of individuals among the nodes. Fine-grained parallel <b>genetic</b> <b>algorithms</b> assume an individual on each processor node which acts with neighboring individuals for selection and reproduction.Other variants, like <b>genetic</b> <b>algorithms</b> for online optimization problems, introduce time-dependence or noise in the fitness function.|$|R
40|$|Developed by John Holland at the University of Michigan <b>genetic</b> <b>algorithms</b> are a {{heuristic}} search technique {{that can help}} to provide satisfactory results for hard optimization problems. But even using <b>genetic</b> <b>algorithms</b> the computations can require a pretty large amount of time. Since <b>genetic</b> <b>algorithms</b> are an abstraction of natural selection they are very easy to parallelize. There are different ways to parallelize <b>genetic</b> <b>algorithms</b> {{and each of them}} raise different issues. In this paper we try to compare the performance of a few different parallel implementations of <b>genetic</b> <b>algorithms.</b> keywords: <b>Genetic</b> <b>Algorithms,</b> Parallel Processing 1 Introduction. <b>Genetic</b> <b>algorithms</b> (GAs) are an effective search method that simulates the process of natural selection. The purpose of GAs is to provide satisfactory results for optimization problems that are hard to solve using exhaustive techniques. The simple GA consists of following steps. First, it is necessary to encode the parameter set of th [...] ...|$|R
25|$|From {{mathematical}} {{point of}} view ligand docking represents a search for global minimum on the multidimensional surface describing the free energy of protein-ligand binding. With ligands having up to 15-20 degrees of freedom (freely rotatable bonds) and complex nature of energy surface, global optimum search represents generally unsolved scientific task. To tackle this computationally challenging problem Lead-Finder applies unique approach combining <b>genetic</b> <b>algorithm</b> search, local optimization procedures, and a smart exploitation of the knowledge generated during the search run. Rational combination of different optimization strategies makes Lead Finder efficient in terms of coarse sampling of ligand's phase space and refinement of promising solutions.|$|E
2500|$|For {{information}} about chromosomes in genetic algorithms, see chromosome (<b>genetic</b> <b>algorithm)</b> ...|$|E
2500|$|In {{artificial}} intelligence, {{genetic programming}} (GP) {{is a technique}} whereby computer programs are encoded {{as a set of}} genes that are then modified (evolved) using an evolutionary algorithm (often a <b>genetic</b> <b>algorithm,</b> [...] "GA") – it is an application of (for example) genetic algorithms where the space of solutions consists of computer programs. The results are computer programs able to perform well in a predefined task. The methods used to encode a computer program in an artificial chromosome and to evaluate its fitness with respect to the predefined task are central in the GP technique and still the subject of active research.|$|E
40|$|There {{are many}} {{problems}} that standard <b>genetic</b> <b>algorithms</b> fail to solve. Refinements of standard <b>genetic</b> <b>algorithms</b> {{that can be}} used to solve hard problems has caused considerable interest. In this paper, we consider <b>genetic</b> <b>algorithms</b> withexpansion and exploration operators for the maximum satisfiability problem...|$|R
50|$|Furthermore, human-based <b>genetic</b> <b>algorithms</b> {{prove to}} be a {{successful}} measure to counteract fatigue effects introduced by interactive <b>genetic</b> <b>algorithms.</b>|$|R
40|$|<b>Genetic</b> <b>algorithms</b> {{derived from}} {{observations}} {{of nature and}} simu-lation of artificial selection of organisms with multiple loci that control a measurable trait. To date, <b>genetic</b> <b>algorithms</b> evolved into complex and strong informatics tools {{able to deal with}} hard problems of decision, classification, optimization and simulation. A series of studies reported biotechnology hard problems solved using <b>genetic</b> <b>algorithms.</b> In this context, the aim of the present article is to introduce <b>genetic</b> <b>algorithms</b> and to present their suitability for biotechnology hard problems. Impor-tant results are reported in the available literature that deal with the application of <b>genetic</b> <b>algorithms</b> for biotechnology process modelling...|$|R
5000|$|IEC {{methods include}} {{interactive}} evolution strategy, interactive <b>genetic</b> <b>algorithm,</b> interactive genetic programming, and human-based <b>genetic</b> <b>algorithm.,</b> ...|$|E
5000|$|... (HH3) Human-based <b>genetic</b> <b>algorithm</b> (Kosorukoff, 1998) uses both human-based {{selection}} and {{three types of}} human-based innovation (contributing new content, mutation, and recombination). Thus, all operators of a typical <b>genetic</b> <b>algorithm</b> are outsourced to humans (hence the origin of human-based). This idea is extended to integrating crowds with <b>genetic</b> <b>algorithm</b> to study creativity in 2011 (Yu and Nickerson, 2011).|$|E
50|$|In {{evolutionary}} computation, a human-based <b>genetic</b> <b>algorithm</b> (HBGA) is a <b>genetic</b> <b>algorithm</b> {{that allows}} humans to contribute solution suggestions to the evolutionary process. For this purpose, a HBGA has human interfaces for initialization, mutation, and recombinant crossover. As well, {{it may have}} interfaces for selective evaluation. In short, a HBGA outsources the operations of a typical <b>genetic</b> <b>algorithm</b> to humans.|$|E
40|$|<b>Genetic</b> <b>algorithms</b> [1, 2] are {{stochastic}} optimization methods {{inspired by}} natural evolution and genetics. Over {{the last few}} decades, <b>genetic</b> <b>algorithms</b> have been successfully applied to many problems of business, engineering, and science. Because of their operational simplicity and wide applicability, <b>genetic</b> <b>algorithms</b> are now playing an increasingly important role in computational optimization and operations research. This article provides an introduction to <b>genetic</b> <b>algorithms</b> as well as numerous pointers for obtaining additional information...|$|R
40|$|<b>Genetic</b> <b>algorithms</b> {{represent}} {{a class of}} adaptive search techniques that have been intensively studied in recent years, Much of the interest in <b>genetic</b> <b>algorithms</b> {{is due to the}} fact that they provide a set of efficient domain-independent search heuristics which are a significant improvement over traditional "weak methods" without the need for incorporating highly domain-specific knowledge. There is now considerable evidence that <b>genetic</b> <b>algorithms</b> are useful for global function optimization and NP-hurd problems. Recently, there has been a good deal of interest in using <b>genetic</b> <b>algorithms</b> for machine learning problems. This paper provides a brief overview of how one might use <b>genetic</b> <b>algorithms</b> as a key element in learning systems...|$|R
40|$|<b>Genetic</b> <b>algorithms</b> are a {{class of}} {{probabilistic}} optimization techniques that have proved useful {{in a wide variety}} of problem domains. This paper offers an introduction and overview to <b>genetic</b> <b>algorithms</b> and examines some of the finance-related applications to which the technique has been applied. optimization, <b>genetic</b> <b>algorithms,</b> evolutionary algorithms, evolutionary computing, finance,...|$|R
50|$|In {{computer}} science and machine learning, population-based incremental learning (PBIL) is an optimization algorithm, and an estimation of distribution algorithm. This {{is a type}} of <b>genetic</b> <b>algorithm</b> where the genotype of an entire population (probability vector) is evolved rather than individual members. The algorithm is proposed by Shumeet Baluja in 1994. The algorithm is simpler than a standard <b>genetic</b> <b>algorithm,</b> and in many cases leads to better results than a standard <b>genetic</b> <b>algorithm.</b>|$|E
50|$|Application of <b>genetic</b> <b>algorithm</b> in 8-queens problem.|$|E
5000|$|A <b>genetic</b> <b>algorithm</b> for robotic {{assembly}} line balancing http://tx.technion.ac.il/~shnitsb/MyPapers/RALB_InPress.pdf ...|$|E
40|$|The {{first part}} of this {{presentation}} is a tutorial level introduction to the principles of genetic search and models of simple <b>genetic</b> <b>algorithms.</b> The second half covers the combination of <b>genetic</b> <b>algorithms</b> with local search methods to produce hybrid <b>genetic</b> <b>algorithms.</b> Hybrid algorithms can be modeled within the existing theoretical framework developed for simple <b>genetic</b> <b>algorithms.</b> An application of a hybrid to geometric model matching is given. The hybrid algorithm yields results that improve on the current state-of-the-art for this problem...|$|R
40|$|<b>Genetic</b> <b>algorithms</b> {{have been}} used to solve various {{optimization}} problems. One of the advantages of <b>genetic</b> <b>algorithms</b> is that they have the ability to solve complex optimization problems in a simple way. By using <b>genetic</b> <b>algorithms,</b> the near global optimum can be achieved easily. Although in the early development, binary coded <b>genetic</b> <b>algorithms</b> are more popular, recently real coded <b>genetic</b> <b>algorithms</b> are widely used to solve engineering problem’s optimization. The advantage of using real coded <b>genetic</b> <b>algorithms</b> is the ability of the crossover operator to explore a larger domain of interest. As a result the use of crossover in real coded <b>genetic</b> <b>algorithms</b> may have a detrimental effect, as it can explore the domain that is very far from the expected domain. In the civil engineering area, most variables are positive. Therefore, it is needed to develop a crossover operator that can produce positive-only offspring. In this paper an asymmetric crossover is proposed to solve this problem. It is shown in the experiments that this crossover has a good performance in achieving optimum results...|$|R
40|$|This {{article is}} posted here with {{permission}} from IEEE - Copyright @ 2008 IEEEIn recent years, several approaches {{have been developed for}} <b>genetic</b> <b>algorithms</b> to enhance their performance in dynamic environments. Among these approaches, one kind of methods is to adapt genetic operators in order for <b>genetic</b> <b>algorithms</b> to adapt to a new environment. This paper investigates the effect of the selection pressure on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments. A hyper-selection scheme is proposed for <b>genetic</b> <b>algorithms,</b> where the selection pressure is temporarily raised whenever the environment changes. The hyper-selection scheme can be combined with other approaches for <b>genetic</b> <b>algorithms</b> in dynamic environments. Experiments are carried out to investigate the effect of different selection pressures on the performance of <b>genetic</b> <b>algorithms</b> in dynamic environments and to investigate the effect of the hyper-selection scheme on the performance of <b>genetic</b> <b>algorithms</b> in combination with several other schemes in dynamic environments. The experimental results indicate that the effect of the hyper-selection scheme depends on the problem under consideration and other schemes combined in <b>genetic</b> <b>algorithms.</b> This work was supported by UK EPSRC under Grant No. EP/E 060722 / 1 and Brazil FAPESP under Grant Proc. 04 / 04289 - 6...|$|R
5000|$|<b>Genetic</b> <b>algorithm</b> for linear and cyclic {{assignment}} problem http://www.eng.auburn.edu/~aesmith/publications/journal/A%20genetic%20algorithm%20approach%20to%20curve%20fitting.pdf ...|$|E
5000|$|<b>Genetic</b> <b>Algorithm</b> for the Robotic Assembly Plan Problem http://dblp.cloudmining.net/search/author=Jacob+Rubinovitz/ ...|$|E
5000|$|... #Subtitle level 2: Differences from a plain <b>genetic</b> <b>algorithm</b> ...|$|E
40|$|It is {{well known}} that there are many {{problems}} that standard <b>genetic</b> <b>algorithms</b> fail to solve. There are a number of refinements of standard <b>genetic</b> <b>algorithms</b> {{that can be used to}} solve hard problems. In this paper we consider <b>genetic</b> <b>algorithms</b> with expansion operator for the 3 -satisfiability problem. © 2013 Lhachmi El Badri et al...|$|R
40|$|<b>Genetic</b> <b>algorithms</b> {{are a part}} of {{evolutionary}} computing, which is a rapidly growing area of artificial intelligence. As you can guess, <b>genetic</b> <b>algorithms</b> are inspired by Darwin's theory about evolution. Simply said, solution to a problem solved by <b>genetic</b> <b>algorithms</b> is evolved. Various Biological methods are implemented like mutation, cross over and Encoding, for computing the algorithm...|$|R
40|$|In {{this paper}} the Breeder <b>Genetic</b> <b>Algorithms</b> are {{compared}} against both serial and parallel <b>Genetic</b> <b>Algorithms</b> {{by using a}} wide range of optimisation functions taken from the literature. The aim is to investigate how the change of the fitness function influences their problem [...] solving capabilities. The experimental findings show that the Breeder <b>Genetic</b> <b>Algorithms</b> outperform the <b>Genetic</b> <b>Algorithms</b> considered in terms of number of evaluations and robustness. I. Introduction A wide variety of heuristic techniques has been proposed to solve different kinds of optimisation problems. Among these, the <b>Genetic</b> <b>Algorithms</b> (GAs) [1; 2] and their parallel versions [3] should be mentioned. They have proved to be able to efficiently solve difficult optimisation problems. Recently a novel technique, the Breeder <b>Genetic</b> <b>Algorithms</b> (BGAs) [4; 5], particularly suitable to deal with continuous optimisation parameters, has been introduced. BGAs are based on the evolution model typical of GAs, however th [...] ...|$|R
