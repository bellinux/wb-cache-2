20|52|Public
50|$|Such a dialog also assumes {{control over}} the user interface, {{preventing}} the user from proceeding with any other task in the application until the <b>dialog</b> <b>window</b> is closed.|$|E
5000|$|Inspector window - {{a type of}} <b>dialog</b> <b>window</b> {{that shows}} {{a list of the}} current {{attributes}} of a selected object and allows these parameters to be changed on the fly ...|$|E
50|$|Due {{to network}} API variation, {{interactive}} features differ across networks. For instance, the invitation mechanism on MySpace allows direct inviting {{from the game}} page, while Facebook requires a separate <b>dialog</b> <b>window.</b>|$|E
50|$|<b>Dialog</b> <b>windows</b> can {{be created}} in mIRC to better serve user-compatibility.|$|R
50|$|The user {{interface}} is mouse-driven with a toolbar for common tools, and some modal <b>dialog</b> <b>windows.</b> For increased productivity with frequently used functions, an extensive system of keyboard shortcuts is available.|$|R
40|$|Sodium and silicon in coal {{has been}} {{analyzed}} by fast neutron activation analysis. Work also continued on the gamma-ray spectrum processing. The {{final version of}} the analysis program will be run in Windows environment using the advantage of the user friendly graphical interface and the multitasking. The methods for the class of decomposition of the spectra have been implemented, following the logic of the Pascal version of the program. The main effort was expended in implementing the <b>dialog</b> <b>windows</b> for setting the parameters for the decomposition, creating the library spectra, and the input parameters and for creating the <b>dialog</b> <b>windows.</b> An important feature of the program is the saving of all important parameters when exiting...|$|R
50|$|Such a {{requirement}} describes {{an interaction between}} an external agent (the user) and the software system. When the user provides input to the system by clicking the OK button, the program responds (or should respond) by closing the <b>dialog</b> <b>window</b> containing the OK button.|$|E
50|$|The {{graphical}} {{control element}} inspector window {{is a type}} of <b>dialog</b> <b>window</b> that shows a list of the current attributes of a selected object and allows these parameters to be changed on the fly. A common use is in Integrated Development Environments, where the window shows the changing values of variables associated to an object during a debugging session.|$|E
50|$|GIMP 2.8 was {{released}} on May 3, 2012 with several revisions to the user interface. These include a highly criticized redesigned save/export menu that aims to reinforce the idea that information is lost when exporting. The text tool was also redesigned so that a user edits text on canvas instead of in a separate <b>dialog</b> <b>window.</b> This feature {{was one of the}} Google Summer of Code (GSoC) projects from 2006.|$|E
5000|$|... #Caption: [...] "Windows Security" [...] <b>dialog</b> in <b>Windows</b> XP: GINA is {{responsible}} for bringing up this dialog when Ctrl+Alt+Delete key combination is pressed ...|$|R
5000|$|Task manager defines Application or Task as {{a window}} {{owned by a}} {{specific}} thread. Not all windows are shown in this view. For example, modal <b>dialogs</b> (<b>windows</b> {{for which there is}} not a separate thread) do not appear. This is why many dialogs and error messages are not shown. The term Task used in the first column can be confusing, as there is no inherent concept of Tasks on Windows Operating System, except those configured in the Task Scheduler to run periodically.|$|R
5000|$|QuarkXPress 4 (1997) - First {{version with}} bézier curves. Notable {{interface}} improvements are pop-up tools and tabbed <b>dialog</b> boxes. <b>Windows</b> 3.x {{is no longer}} supported.|$|R
5000|$|Several {{companies}} have parodied this belief that users {{do not read}} the end-user-license agreements by adding unusual clauses, knowing that few users will ever read them. As an April Fool's Day joke, Gamestation added a clause stating that users who placed an order on April 1, 2010 agreed to irrevocably give their soul to the company, which 7,500 users agreed to. Although there was a checkbox to exempt out of the [...] "immortal soul" [...] clause, few users checked it and thus Gamestation concluded that 88% of their users did not read the agreement. The program PC Pitstop included a clause in their end-user license agreement stating that anybody who read the clause and contacted the company would receive a monetary reward, but it took four months and over 3,000 software downloads before anybody collected it. During the installation of version 4 of the Advanced Query Tool the installer measured the elapsed time between the appearance and {{the acceptance of the}} end-user license agreements to calculate the average reading speed. If the agreements were accepted fast enough a <b>dialog</b> <b>window</b> “congratulated” the users to their absurdly high reading speed of several hundred words per second. South Park parodied this in the episode [...] "HumancentiPad", where Kyle had neglected to read the terms of service for his last iTunes update and therefore inadvertently agreed to have Apple employees experiment upon him.|$|E
5000|$|King's Quest III was {{the first}} game in which Sierra used a manual-based copy {{protection}} scheme (although technically {{not intended to be}} copy protection). Nearly all AGI games (including King's Quest III) have a disk-based copy protection, requiring the original game disk to be present in order to play the game. This was not entirely effective and unofficial versions were widespread. (This key-disk check was removed from the later-released [...] "King's Quest Collection" [...] versions.) However, to complete King's Quest III, the player needs to create a number of magic spells through alchemical formulas that are only available in the game's manual. Many considered the process slightly overdone; 140 of the 210 possible points in the game are obtained through simply doing what the manual says, leaving less room for real puzzles. Starting with King's Quest IV, later Sierra games would instead ask for but a few actions described in the manual. Most often it was a <b>dialog</b> <b>window</b> appearing once, requesting the player to enter word X from page Y of the manual. This was not a true form of copy protection and was actually considered a game feature (as most puzzles in the game are based on the spells), and thus the complete spell list was reprinted in many of the official guides at the time, including the Official Book of King's Quest: Coventry and Beyond and The King's Quest Companion.|$|E
3000|$|... in the ‘New Database’ <b>dialog</b> <b>window</b> {{the user}} can {{conveniently}} choose the name ‘FraneItalia’ to exploit immediately the QGIS® interface described {{at the end}} of this section; [...]...|$|E
5000|$|... #Caption: The Open <b>dialog</b> box in <b>Windows</b> 7, demonstrating Aero Glass ...|$|R
5000|$|... #Caption: Revised Restart <b>dialog</b> box in <b>Windows</b> Vista and Windows 7 ...|$|R
5000|$|... #Caption: Run <b>dialog</b> box in <b>Windows</b> 8, {{with the}} [...] "winver" [...] command as input.|$|R
40|$|Abstract. Based on Vb {{programming}} language, {{combined with}} the large span suspension bridge in the project construction management, {{research and development of}} a visual simulation of integrated system platform, achieve the data call and control on the dynamic 3 D visual simulation model. Ready to deal with various types of data required for the project, and fundamentally changes the method of mass data management, to realize the “visualization”, “specification ” and “simplification ” of modern construction management, so that all results more intuitive display of data in the <b>dialog</b> <b>window</b> with visual modeling. It’s good call on a variety of data to guide construction...|$|E
40|$|The paper {{presents}} {{two ways}} of special matrix generating using some functions included in the MatLab software package. The MatLab software package contains a set of functions that generate special matrixes used in the linear algebra applications and the signal processing from different activity fields. The paper presents two tipes of special matrixes that can be generated using written sintaxes in the <b>dialog</b> <b>window</b> of the MatLab software and for the command validity we need to press the Enter task. The applications presented in the paper represent eamples of numerical calculus using the MatLab software and belong to the scientific field „Computer Assisted Mathematics” thus creating the symbiosis between mathematics and informatics...|$|E
40|$|Abstract. A {{key factor}} in the further {{progress}} of the Semantic Web is the development and wide-spread usage of rule- and logic-based applications. However, there is an evident lack of software tools that can assist end-users in developing such applications. Consequently, users usually resort to more generic tools that offer support at a syntactic level, but prove inadequate in semantically supporting the user. This paper presents S 2 REd, a Semantic Web rule editor that introduces a supplementary layer of semantic assistance during rule base development. The tool offers semantic assistance via: (i) The Semantic Tag Mapping window that provides a meta-modeling facility for generating schemas over various rule language versions and, (ii) the Namespace <b>Dialog</b> <b>window,</b> for loading ontologies that serve as the underlying vocabulary for expressing rule atoms. S 2 REd assists in developing RuleML rule bases, but is equally suitable for any other XML-based syntax for representing rule sets...|$|E
40|$|A {{programmed}} script {{has been}} developed, that simplifies {{the survey of}} architectural elements based on classic architectural orders. The script {{is based on the}} mathematical transposition of some graphical methods presented by main treatises (Serlio and Vignola) of architectonic orders of XVI century. The proposed code, based on smart part <b>dialog</b> <b>windows,</b> indicates a very limited amount of significant points that must be measured in order to complete determine the geometric description of a specific architectonic classical element. The proposed method has been applied to the survey of the capitals and trabeations of some altars of the Volta Mantovana church (Italy). Comparisons has been made between the geometries obtained by means of the new proposed script and traditional survey techniques, which clearly indicate the validity of the proposed method...|$|R
40|$|Bachelor thesis {{deals with}} the design of {{implementation}} of a new information system to the company Dixons Retail SSC, s. r. o [...] Firstly {{an analysis of the}} current state of the process of credit note handling is made. This process is a supportive process for the whole AP cycle process of the company. The analysis focuses mainly on the description of systems used for credit note handling and the links between them. The design of implementation is focused on the module Invoice Cockpit and its main functions. Afterwards a recommendation of the procedure of conversing data from old systems to new is made and new <b>dialog</b> <b>windows</b> are designed. In the conclusion recommendations of processes, which should follow up a successful implementation of information system are made...|$|R
40|$|E-commerce {{applications}} {{are designed to}} streamline the business processes for an organization. Graphical user interfaces allow business users to perform daily business activities by interacting with e-commerce applications through menu-driven user interface components, such as toolbars and <b>dialog</b> <b>windows.</b> However, business users are often overwhelmed by the enormous functionality available. Users struggle in deciding where to start and where to go next {{in order to accomplish}} tasks required by business processes. In this paper, we utilize the knowledge embedded in business processes to reengineer the user interfaces of existing e-commerce applications that implement business processes. We aim to improve the usability of user interfaces by providing contextual information and guiding users to fulfill business processes step by step. We evaluate our proposed approach by reengineering the user interface of an existing e-commerce application...|$|R
40|$|The recent {{development}} of low cost workstations with high resolution bit mapped displays makes it potentially cost effective for Decision Support Systems (DSS) to have Direct Manipulation User Interface (DMUI). DMUI lets end users {{work with a}} visual representation {{of the state of}} a system that is close to their cognitive model of the system. This kind of DMUI can facilitate end user 2 ̆ 7 s exploitation of the DSS capabilities better than a command or menu user interface. In spite of these advantages, many DSSs do without DMUI because it is too expensive to construct. ^ A User Interface Management System (UIMS) is proposed that would work as a tool for building DMUI less expensively. This UIMS is an extension of text based structure editor generators into graphics called a graphics structure editor generator (GSEG). A language, Interface Definition Language (IDL), is defined for a developer to specify application-specific graphics editors, and an environment which supports GSEG is sketched. ^ The interface specification for this UIMS consists of three parts: graphics structure editors (GSEs), dialog windows and event handling routine. The definition of GSE specifies graphics editors and is made of an attribute grammar, a presentation grammar and mapping constraints of two grammars. The attribute grammar defines the structure of underlying objects to be edited. The presentation grammar defines the structure of graphical objects on the display. Mapping constraints relate these two structures together. The definition of dialog windows specifies contexts of user interface. A <b>dialog</b> <b>window</b> is made of several user interface components such as menus, buttons and text areas as well as GSEs. The definition of event handling routine glues two components together: user interface and functionality. Each user interface component in a <b>dialog</b> <b>window</b> generates high level events which are initiated by low level end user 2 ̆ 7 s actions (mouse and keyboard events). The event handling routine can bind functionality routines to these events from interface components. ^ The UIMS based on GSEG supports high level abstractions in interface specifications and can generate many different graphics editors with significantly less efforts, compared to current implementation tools available such as graphics packages and window systems. The interface specification in IDL gives a logical view of user interface, that is, 2 ̆ 2 What a user interface should be? 2 ̆ 2 rather than 2 ̆ 2 How a user interface should be implemented? 2 ̆ 2...|$|E
40|$|Water {{resources}} are limited and agricultural input costs are steadily increasing; moreover, precipitation {{seems to be}} decreasing in amount or, at least, received in a more irregular manner. Correctly deciding irrigation and fertilization amount and time implies to simultaneously consider phenological and nutritional crop status, weather pattern during the irrigation season and {{taking into account the}} economic and energy budgets. To treat all these complexities, the use of crop simulation models is particularly indicated. Models are strictly connected to academic and research contexts and have not wide-melted farmers and agricultural technicians, despite they are strongly encouraged to optimize the use of water and fertilizer. MiniCSS, a software for the optimization of irrigation and nitrogen (N) fertilization by simulation is here presented. Its primary aim is to be easy to use, thanks to a reduced number of input parameters and a user-friendly <b>dialog</b> <b>window.</b> MiniCSS can perform i) annual/multiannual simulations, ii) simulation experiments by varying irrigation and fertilization intensity, iii) calibration of the model parameters and iv) optimization of other cultural practices. Textual and graphical results are reported as daily values, annual averages, cumulative probability and dose-response curves...|$|E
40|$|The {{aim of the}} diploma thesis was {{to create}} {{independently}} an application, automating a correspondence analysis calculation using MS Excel and taking advantage of VBA programming language. The application was then used to analyse Slovak banking sector. The created application is based on macro sets which can be split up to two parts. The first part produces a contingency table and converts it into a format usable in the second part. Then there is executed the Correspondence Analysis calculation itself. Supplement Matrix is being used, that allows to discharge functions from matrix and linear algebra. The application allows to process any matrix dimension. <b>Dialog</b> <b>window</b> offers four normalization types, shortened and also full output {{and it is possible}} to display row or column variable categories, eventually both. The analysis subject was to find out which of the products are typical for considered banks and for which clients, divided into age categories, is attractive particular bank and/or product. A starting point is a product usage data matrix at a particular bank. There was made a conclusion, {{that it is possible to}} divide banks into more traditional or modern type institutions and also that each bank has a typical product...|$|E
40|$|This paper {{presents}} the {{graphical user interface}} InterBaseView for InterBase [ECD + 92], a multidatabase system processing global applications written in the InterBase Parallel Language (IPL) [BCC + 92] and accessing data from heterogeneous database and file systems. The primary design objective of InterBaseView is to provide users with convenience and confidence in interacting with InterBase. InterBaseView consists of an execution interface and an IPL program editor. During the execution of an IPL transaction program, the execution interface displays the execution history, the dependence relations among subtransactions, the intermediate results, and the final results. It can also request input from users at run-time through <b>dialog</b> <b>windows.</b> From a group of successful acceptable alternative subtransaction sets for a global transaction, a user can select the preferred alternative to commit the global transaction, thus supporting Flex transactions [ELLR 90]. Additionally, t [...] ...|$|R
40|$|The fitting program VEPFIT {{has been}} {{extended}} with applications running under the Microsoft Windows environment facilitating the input and output of the VEPFIT fitting module. We have exploited the Microsoft-WindowsR graphical users interface by making use of <b>dialog</b> <b>windows,</b> scrollbars, command buttons etc. The user communicates with the program simply by clicking and dragging with the mouse pointing device. Keyboard actions are limited to a minimum. Upon changing one or more input parameters {{the results of the}} modeling of the S-parameter and Ps-fraction versus positron implantation energy are updated and displayed. This action can be considered as {{the first step in the}} fitting procedure upon which the user can decide to further adapt the input parameters or to forward these parameters as initial values to the fitting routine. The modeling step has proven to be helpful for designing positron beam experiments...|$|R
50|$|Susan Kare {{has stated}} that Chicago was the first font to be {{developed}} for the Macintosh. Before the team settled on the convention of naming fonts after “world cities”, it was called Elefont (Elefont is also {{the name of a}} bold semi-serif typeface designed by Bob McGrath in 1978). The first bitmap version included only a 12 pt. version. This font, with only very minor changes to spacing, was used for menus, <b>dialogs,</b> <b>window</b> titles, and text labels, through version 7.6 of the system. The TrueType version had many differences from the bitmap version, which became more apparent at greater sizes. One of Chicago’s features was that it could remain legible while being made “grey” (to indicate a disabled menu item) by the removal of every other pixel (since actual grey type was not supported by the original Macintosh graphics hardware). The zero was slashed to distinguish it from capital “O”.|$|R
40|$|Many of today's {{intelligent}} systems are comprised of several modules, perhaps written in different tools and languages, that together {{help solve the}} user's problem. These systems often employ a knowledge-based component that is not accessed directly by the user, but instead operates 'in the background' offering assistance to the user as necessary. In these types of modular systems, an efficient, flexible, and eady-to-use mechanism for sharing data between programs is crucial. To help permit transparent integration of CLIPS with other Macintosh applications, the AI Research Branch at NASA Ames Research Center has extended CLIPS {{to allow it to}} communicate transparently with other applications through two popular data-sharing mechanisms provided by the Macintosh operating system: Apple Events (a 'high-level' event mechanism for program-to-program communication), and AppleScript, a recently-released scripting language for the Macintosh. This capability permits other applications (running on either the same or a remote machine) to send a command to CLIPS, which then responds as if the command were typed into the CLIPS <b>dialog</b> <b>window.</b> Any result returned by the command is then automatically returned to the program that sent it. Likewise, CLIPS can send several types of Apple Events directly to other local or remote applications. This CLIPS system has been successfully integrated with a variety of commercial applications, including data collection programs, electronics forms packages, DBMS's, and email programs. These mechanisms can permit transparent user access to the knowledge base from within a commercial application, and allow a single copy of the knowledge base to service multiple users in a networked environment...|$|E
40|$|THIS MAC APP IS FOR SOLVING NUCLEAR SCHRODINGER EQUATION FOR VIBRATING DIATOMIC MOLECULE ON A SINGLE POTENTIAL CURVE USING 1 -DIMENSIONAL DISCRETE VARIABLE REPRESENTATION METHOD Loading the {{potential}} file: File->Open menu will open <b>dialog</b> <b>window</b> to choose file that contains potential data. The potential data file should contain two columns (R,E), {{first one is}} distance R in bohrs, second is potential energy E in cm- 1 (wavenumbers) Inputs: Atomic masses of atoms composing the AB molecule, Mass A and Mass B should be given in atomic mass units Settings for radial DVR grid: The radial DVR grid is set by providing initial distance R, final distance R and number of grid points between this range. Usually 200, 300 grid points is enough, but sometime it may be good to check larger number for convergence of bound states and smoothness of wave function plots Output: Number of vibrational energies one wants to display in a table {{to the left of}} Input and Output controls For which vibrational state one wants to save the wavefunction to the external file. Limits for x-axis on the plot of the wavefunction or density Buttons: "Calculate Vibrational Energies" button will start DVR calculations and display results of vibrational energies, average distance for given vibrational state, and rotational constant. "Save Energies, R and Bv to a File" will save values from the table to the external file "Save Wavefunction to a File" will save R grid and wavefunction corresponding to the vibrational quantum number selected in the Output control Radio buttons below the table are for selecting what plot will be displayed after clicking on given vibrational energy in the tabl...|$|E
40|$|The Sandvik Coromant {{division}} of Sandvik Group produces and sells products for metalworking applications. Coromant {{is a leading}} manufacturer of cemented carbide tools for turning, milling and drilling. The insert (cemented carbide) {{is the part of}} the tool that does the actual cutting in the workpiece. The thesis assignment was to develop a CAD Toolbox available to insert designers in UGS NX 3 CAD-system at Sandvik Coromant. It could contain for instance geometry or help programs or a combination of them. The main purposes with the Toolbox should be to facilitate the designer’s daily work, maintain standard and to integrate engineering knowledge. The thesis work was carried out at Sandvik Coromant, CTDP department in Sandviken, Sweden. Part of the project task was {{to find out what the}} Toolbox should be filled with in the future and to create the first object in the Toolbox. The chosen example object was the Wiper Cutting Edge, which is a patented insert nose configuration with several connected radii after each other, providing better workpiece surface finish or increased productivity. To find out the designers needs and therefore what objects to add in the Toolbox a survey was conducted at the Design Insert department at Sandvik Coromant. A questionnaire was handed out to the designers and the answers generated a list of widely different objects, for example ready NX 3 drawing templates. A number of NX 3 functions that might be useful in the Toolbox were tested and evaluated in the thesis, e. g. User Interface Styler, User Defined Feature (UDF) and Knowledge Fusion (KF). KF is a Knowledge Based Engineering application within UGS NX 3, which can enable rules controlling the user when designing. To evaluate the different functions a Wiper NX 3 sketch was created meeting the demands from the insert designers and thesis assignment. One stated demand was that the Toolbox has to be compatible with Teamcenter Engineering, which is a Product Lifecycle Management solution from UGS. The final selected Wiper Object solution was Knowledge Fusion enabled UDF’s with added Open C API-functions. Among the advantages with the KF enabled UDF concept compared to other solutions are that a new NX 3 <b>dialog</b> <b>window</b> can be connected to the UDF and that programming rules can evaluate dialog input data and give interactive feedback to the user. Depending on type of Toolbox object the application technique in NX 3 could vary. Sometimes standalone UDF’s are advantageous and sometimes KF could be beneficial to use together with a UDF. The Toolbox objects are accessed through a CAD Toolbox icon toolbar or a CAD Toolbox menu inside NX 3. Validerat; 20101217 (root...|$|E
40|$|Abstract—Several {{aspects of}} secure {{operating}} {{systems have been}} analyzed and described as security patterns. However, existing patterns do not cover explicitly the secure interaction of users with the user interface of applications. Especially graphical user interfaces tend to get complex and vulnerable to spoofing and eavesdropping, e. g., due to key loggers or fake <b>dialog</b> <b>windows.</b> A secure user interface system has to provide a trusted path between the user and the application the user intends to use. The trusted path {{must be able to}} ensure integrity and confidentiality of the transmitted data, and must allow for the verification of the authenticity of the end points. We present a pattern for secure graphical user interface systems and evaluate its use in different implementations. This pattern shows how to fulfill the security requirements of a trusted path while preserving, in a policy-driven way, the flexibility that graphical user interfaces generally demand. Keywords-security pattern; secure GUI; secure windowing system; I...|$|R
30|$|In {{the current}} basic prototype, {{the access to}} tuple centres and ACCs is {{generally}} done at the infrastructure level, and is therefore only within the reach of an expert user; at the same time, for the above reasons, an effort {{has been made to}} make a step towards a more user-friendly approach, as demonstrated by the <b>dialog</b> <b>windows</b> shown in Figure  14 (bottom) for role handling. In fact, although such dialogs are domain-specific and still require a clear understanding of what a role is and of the purpose of role/permission and role/users associations, therefore being aimed at skilled users, they do enable parents to define role-based policies without writing low-level (i.e., ReSpecT) code themselves. Of course, such a feature is unnecessary for closed systems, that are by definition configured by the vendor/installer and then simply “used as they are” by the end users. Since the Butlers architecture allows both kinds of systems, whether such a feature is necessary or not depends, once again, on the vendor’s goals and market targets.|$|R
40|$|CLIMATICA, is a {{software}} for management of climatic data. The software has different features like {{the possibility of}} control and validation of data, the conversion of date formats and of the units of the variables, the calculation of statistical indexes. CLIMATICA can perform management operations on climatic dataset (fusion of more datasets by rows or by columns, reduction of the dataset dimensionality with estimation of statistics), on metadata (input and modification), on variables (deletion, generation and re-calculation) and on records (search, sorting, deletion and input). There are also procedures for interpolation and reconstruction of missing data using multiple linear regression, non-linear regression, neural networks and moving statistics (moving average, etc.). CLIMATICA also includes the weather generator Climak for the estimation of climatic parameters from historical data and for the generation of meteorological variables to evaluate risks or to create climatic scenarios. The management of datasets can be made either by <b>dialog</b> <b>windows</b> or by commands, which also allows the automation of procedures. CLIMATICA presents a wide flexibility that permits to be adapted to specific requirements...|$|R
