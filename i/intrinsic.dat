10000|216|Public
5|$|C2: Therefore, {{non-human}} {{animals do}} not have an <b>intrinsic</b> interest in freedom.|$|E
5|$|In {{contrast}} to Ka, {{which is a}} measure of how much energy is needed to stretch the bilayer, Kb {{is a measure of}} how much energy is needed to bend or flex the bilayer. Formally, bending modulus is defined as the energy required to deform a membrane from its <b>intrinsic</b> curvature to some other curvature. <b>Intrinsic</b> curvature is defined by the ratio of the diameter of the head group to that of the tail group. For two-tailed PC lipids, this ratio is nearly one so the <b>intrinsic</b> curvature is nearly zero. If a particular lipid has too large a deviation from zero <b>intrinsic</b> curvature it will not form a bilayer and will instead form other phases such as micelles or inverted micelles. Addition of small hydrophilic molecules like sucrose into mixed lipid lamellar liposomes made from galactolipid-rich thylakoid membranes destabilises bilayers into micellar phase. Typically, Kb is not measured experimentally but rather is calculated from measurements of Ka and bilayer thickness, since the three parameters are related.|$|E
5|$|Extrinsic and <b>intrinsic</b> defects can {{interact}} producing new defect complexes. Such interaction usually occurs if a diamond containing extrinsic defects (impurities) is either plastically deformed or is irradiated and annealed.|$|E
50|$|There {{are also}} compiler-specific <b>intrinsics</b> {{implementing}} circular shifts, like _rotl8, _rotl16, _rotr8, _rotr16 in Microsoft Visual C++. Clang provides some rotate <b>intrinsics</b> for Microsoft compatibility that suffers the problems above. GCC {{does not offer}} rotate <b>intrinsics.</b> Intel also provides x86 <b>Intrinsics.</b>|$|R
50|$|The HotSpot JVM's {{just-in-time}} compiler {{also has}} <b>intrinsics</b> for specific Java APIs. Hotspot <b>intrinsics</b> are standard Java APIs {{which may have}} an optimized implementations on some platforms.|$|R
50|$|Since mediaLib {{is written}} in C and SIMD {{multimedia}} compiler <b>intrinsics,</b> it should be usable on any system that has an ANSI C compiler that supports SIMD multimedia <b>intrinsics.</b> Systems without SIMD <b>intrinsics</b> support can also use it as pure ANSI C, forgoing any extra acceleration provided by SIMD multimedia instructions. It is also included as part of Solaris 10.|$|R
5|$|For {{surfaces}} in higher dimensions, {{there is more}} than one definition of curvature, including extrinsic (embedding-dependent) measures such as the mean curvature and <b>intrinsic</b> measures such as the Gaussian curvature and Ricci curvature. Correspondingly, there are several ways of defining geometric flows based on curvature, including the mean curvature flow (in which the normal speed of an embedded surface is its mean curvature), the Ricci flow (an <b>intrinsic</b> flow on the metric of a space based on its Ricci curvature) and the Willmore flow (the gradient flow for an energy functional combining the mean curvature and Gaussian curvature). The curve-shortening flow is a special case of the mean curvature flow for one-dimensional curves.|$|E
5|$|In {{addition}} to the <b>intrinsic</b> magnetic moment, Ganymede has an induced dipole magnetic field. Its existence is connected with the variation of the Jovian magnetic field near Ganymede. The induced moment is directed radially to or from Jupiter following {{the direction of the}} varying part of the planetary magnetic field. The induced magnetic moment is an order of magnitude weaker than the <b>intrinsic</b> one. The field strength of the induced field at the magnetic equator is about 60 nT—half of that of the ambient Jovian field. The induced magnetic field of Ganymede is similar to those of Callisto and Europa, indicating that Ganymede also has a subsurface water ocean with a high electrical conductivity.|$|E
5|$|Motor {{systems are}} {{areas of the}} brain that are {{involved}} in initiating body movements, that is, in activating muscles. Except for the muscles that control the eye, which are driven by nuclei in the midbrain, all the voluntary muscles in the body are directly innervated by motor neurons in the spinal cord and hindbrain. Spinal motor neurons are controlled both by neural circuits <b>intrinsic</b> to the spinal cord, and by inputs that descend from the brain. The <b>intrinsic</b> spinal circuits implement many reflex responses, and contain pattern generators for rhythmic movements such as walking or swimming. The descending connections from the brain allow for more sophisticated control.|$|E
40|$|This paper explores {{alternatives}} and issues in developing mechanisms for integrating C++ and <b>Intrinsics</b> widgets in the OSF/Motif^TM # environment. We {{start with a}} discussion of existing interfaces from C++ to user interface toolkit. Next we explain the goals and requirements for the project. We then explain our own method which allows for true <b>Intrinsics</b> subclasses of widgets while remaining in a C++ paradigm. The paper concludes with an example of the C++ subclassing mechanism. Introduction C++ and the <b>Intrinsics</b> are each a separate object-oriented system with its own semantics. Our goal is to make these two systems work together to provide a subclassing mechanism for C++ programmers who are using OSF/Motif. Further we wanted all the functionality of the <b>Intrinsics</b> to remain, and all this must require no changes to the X 11 release 5 <b>Intrinsics.</b> Background There are two kinds of interfaces from C++ to a system such as the X toolkit. The first kind is a wrapper. A wrapper is a C++ [...] ...|$|R
50|$|Clang is {{designed}} to be highly compatible with GCC. Clang's command-line interface is similar to and shares many flags and options with GCC. Clang implements many GNU language extensions and enables them by default. Clang implements many GCC compiler <b>intrinsics</b> purely for compatibility. For example, even though Clang implements atomic <b>intrinsics</b> which correspond exactly with C11 atomics, it also implements GCC's __sync_* <b>intrinsics</b> for compatibility with GCC and libstdc++. Clang also maintains ABI compatibility with GCC-generated object code. In practice Clang can often be used as a drop-in replacement for GCC.|$|R
25|$|Use <b>intrinsics</b> {{supported}} by GCC for the MIPS DSP ASE.|$|R
5|$|Originally {{consisting}} of twenty chapters– one {{was cut in}} later editions– Theory of Literature describes various aspects of literary theory, criticism, and history. After defining various aspects and relationships of literature in general, Wellek and Warren divide analysis of literature based on two approaches: extrinsic, relating to factors outside a work such as the author and society, and <b>intrinsic,</b> relating to factors within such as rhythm and meter. They stress the {{need to focus on}} the <b>intrinsic</b> elements of a work as the best way to truly understand it. In doing so they adapt the phenomenology used by Roman Ingarden.|$|E
5|$|P1: To have a {{moral right}} to freedom, one {{needs to have a}} {{sufficient}} <b>intrinsic</b> interest in freedom.|$|E
5|$|P2: To have a {{sufficient}} and <b>intrinsic</b> interest in freedom implies that freedom by itself {{contributes to a}} person's wellbeing.|$|E
5000|$|... // Using Microsoft's <b>intrinsics</b> {{instead of}} inline assemblyvoid *getTIB (...) { return (void *)__readfsdword(0x18);} ...|$|R
5000|$|TIE {{extended}} {{instructions are}} called [...] "operations" [...] in TIE language. Since TIE compiler generates compiler <b>intrinsics</b> for each TIE operation, the TIE instructions can be invoked directly using the function call semantics of C language. The C compiler {{takes care of}} translating the TIE <b>intrinsics</b> into the appropriate instructions to be executed in the assembly code that is generated.|$|R
40|$|In {{this paper}} I {{show that the}} problem of {{temporary}} <b>intrinsics</b> and a fundamental philosophical problem concerning the doctrine of the incarnation are isomorphic. To do so, I present the problem of temporary <b>intrinsics,</b> along with five responses to the problem. I then present the fundamental problem for Christology, which I call the problem of natural <b>intrinsics.</b> I present six responses to that problem, all but the last analogous to a response to the problem of temporary <b>intrinsics.</b> My goal is not to argue that any individual response to either problem is correct. Instead, my goal is to present and defend an interesting and unnoticed similarity between two different problems, and to note how work on one problem can help with work on the other. This is a penultimate manuscript, and not a final version, of a forthcoming article in Oxford Studies in Philosophy of Religion. As such, please do not cite this version; cite the official version, due out in OSPR VII in 2015...|$|R
5|$|Right to Privacy: Which is an <b>intrinsic</b> part of Article 21 {{that protects}} life and liberty of the citizens.|$|E
5|$|The {{enzymology}} of proteases {{provides some}} of the clearest examples of convergent evolution. These examples reflect the <b>intrinsic</b> chemical constraints on enzymes, leading evolution to converge on equivalent solutions independently and repeatedly.|$|E
5|$|There {{are four}} {{different}} general schemes in which diffusion may take place. Tracer diffusion and chemical diffusion {{differ in the}} level of adsorbate coverage at the surface, while <b>intrinsic</b> diffusion and mass transfer diffusion differ {{in the nature of the}} diffusion environment. Tracer diffusion and <b>intrinsic</b> diffusion both refer to systems where adparticles experience a relatively homogeneous environment, whereas in chemical and mass transfer diffusion adparticles are more strongly affected by their surroundings.|$|E
5000|$|Support {{for most}} SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AES, and AVX(1) <b>intrinsics</b> (X64 only).|$|R
5000|$|Use inline {{template}} in VSDK, {{similar to}} compiler <b>intrinsics,</b> which have C function like interfaces ...|$|R
5000|$|A Compiler Toolchain for the Configured Processor Core that {{includes}} the TIE <b>intrinsics</b> to be used ...|$|R
5|$|Variable {{stars have}} {{periodic}} or random changes in luminosity because of <b>intrinsic</b> or extrinsic properties. Of the intrinsically variable stars, the primary types can be subdivided into three principal groups.|$|E
5|$|Although shoe polish is {{primarily}} intended for leather shoes, some brands specify {{that they may}} be used on non-porous materials, such as vinyl. The polish is generally the same colour as the shoes it will be used upon, or it may be neutral, lacking any <b>intrinsic</b> colour.|$|E
5|$|Ten of {{the twenty}} A-4Gs were lost during the type's service with the RAN. This gave the Skyhawk a poor safety record, {{but the high}} loss rate was at least {{partially}} attributable to the <b>intrinsic</b> dangers involved in operating from an aircraft carrier. Two pilots were killed in these accidents.|$|E
50|$|Microsoftand Intel's C/C++ compilers as well asGCCimplement <b>intrinsics</b> that map {{directly}} to the x86 SIMD instructions (MMX, SSE, SSE2, SSE3, SSSE3, SSE4). The Visual C++ compiler of Microsoft Visual Studio does not support inline assembler forX86-64. To compensate {{for the lack of}} inline assembly, new <b>intrinsics</b> have been added that map to standard assembly instructions that are not normally accessible through C/C++ (e.g.: bit scan).|$|R
5000|$|... {{synthesize}} the <b>intrinsics</b> {{of individual}} {{media and the}} desire to seamlessly cross the boundaries of each medium ...|$|R
5000|$|TurboIMAGE {{consists}} of several utilities {{along with an}} API (referred to as <b>intrinsics</b> by the HP documentation): ...|$|R
5|$|The {{interaction}} with virtual particles also explains the small (about 0.1%) deviation of the <b>intrinsic</b> magnetic {{moment of the}} electron from the Bohr magneton (the anomalous magnetic moment). The extraordinarily precise agreement of this predicted difference with the experimentally determined value is viewed {{as one of the}} great achievements of quantum electrodynamics.|$|E
5|$|The {{standard}} {{was adopted by}} ISO the same year. Two amendments followed in 1989 and 1993, the first introducing <b>intrinsic</b> functions and the other providing corrections. ISO adopted the amendments in 1991 and 1994 respectively, before subsequently taking primary ownership {{and development of the}} standard.|$|E
5|$|Thus, most {{einsteinium}} {{samples are}} contaminated, and their <b>intrinsic</b> properties are often deduced by extrapolating back experimental data accumulated over time. Other experimental techniques {{to circumvent the}} contamination problem include selective optical excitation of einsteinium ions by a tunable laser, such as in studying its luminescence properties.|$|E
30|$|Compute {{the values}} of {{appropriate}} measures for the <b>intrinsics,</b> simple dynamics, and network dynamics features {{for each of the}} graphs GB(t).|$|R
5000|$|Multiple implementation—searching {{through various}} {{approaches}} to implementing the same function, e.g., for SSE support before <b>intrinsics</b> made them available in C code ...|$|R
50|$|Sun {{developed}} an X Window System distribution implementing the OPEN LOOK look and feel, calling it OpenWindows. Developers building OPEN LOOK applications could choose between two graphical programming libraries: the OPEN LOOK <b>Intrinsics</b> Toolkit (OLIT) or XView. The former {{was built on}} the Xt <b>Intrinsics</b> toolkit common to X; the latter used the same programming interface paradigm as the GUI libraries for Sun's earlier SunView window system, making it relatively easy for developers to migrate applications from SunView to X.|$|R
