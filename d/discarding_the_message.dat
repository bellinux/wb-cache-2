2|10000|Public
30|$|All nodes {{receiving}} a route-discovery message decrement the TTL, add the sequence number and source link to their cache and re-broadcast the discovery message, <b>discarding</b> <b>the</b> <b>message</b> when the TTL reaches zero, or the available MTU is insufficient, {{or if the}} sequence number was previously observed.|$|E
3000|$|... 2 are {{calculated}} using Eq. 29 {{to obtain the}} probability mass function (PMF). Thereafter, the number of newly reached nodes by the second rebroadcast is obtained using Eq. 28. This process is repeated {{for all the other}} levels of rebroadcasts until all the nodes have finished rebroadcasting or <b>discarding</b> <b>the</b> <b>message</b> for the first time.|$|E
3000|$|... from (14) {{and thus}} {{validate}} <b>the</b> revocation <b>message.</b> If <b>the</b> revocation <b>message</b> is correctly verified, <b>the</b> receiver <b>discards</b> <b>the</b> buffered <b>messages</b> from [...]...|$|R
5000|$|In 1995 the Church of Scientology {{attempted}} to silence criticism by sending mass [...] "rmgroup" [...] messages to Usenet servers targeting alt.religion.scientology, {{an example of}} the church's continuing efforts to suppress material critical of Scientology on the Internet. Most servers <b>discarded</b> <b>the</b> <b>message,</b> and those that did not were quickly sent [...] "newgroup" [...] <b>messages</b> reestablishing <b>the</b> newsgroup.|$|R
50|$|Update <b>messages.</b> <b>The</b> ACM evaluates update <b>messages</b> {{based on}} <b>the</b> simulation’s update <b>message</b> {{filtering}} criteria that the simulation provides. As discussed in earlier, when an ACM receives an update message {{there are four}} possible outcomes: (1) <b>the</b> ACM <b>discards</b> <b>the</b> <b>message,</b> (2) <b>the</b> ACM sends the simulation a create <b>message,</b> (3) <b>the</b> ACM sends the simulation <b>the</b> update <b>message,</b> or (4) <b>the</b> ACM sends the simulation a delete message.|$|R
3000|$|... 2 are not {{neighbours}} between them, {{they must}} <b>discard</b> <b>the</b> non-corresponding <b>message,</b> but <b>the</b> packet {{already have been}} received and read. This means waste of resources, in terms of processing and energy consumption.|$|R
5000|$|If the UID in <b>the</b> {{election}} <b>message</b> is smaller, and {{the process}} is already a participant (i.e., the process has already sent out an election message with a UID at least as large as its own UID), <b>the</b> process <b>discards</b> <b>the</b> election <b>message.</b>|$|R
50|$|In one of {{the early}} works, Chang and Roberts {{proposed}} a uniform algorithm in which a processor with the highest ID is selected as the leader. Each processor sends its ID in a clockwise direction. A process receiving a message and compares it with its own. If it is bigger, it passes it through, otherwise it will <b>discard</b> <b>the</b> <b>message.</b> They show that this algorithm uses at most O(n^2) messages and O(nlogn) in the average case.Hirschberg and Sinclair improved this algorithm with O(nlogn) message complexity by introducing a 2 directional message passing scheme allowing the processors to send messages in both directions.|$|R
40|$|In network system, network coding allows {{intermediate}} nodes {{to encode}} <b>the</b> received <b>messages</b> beforeforwarding them, thus network coding {{is vulnerable to}} pollution attacks. Besides, the attacks are amplified bythe network coding process {{with the result that}} the whole network maybe pollutes. In this paper, we proposed anovel unconditionally secure authentication code for multi-source network coding, which is robust againstpollution attacks. For the authentication scheme based on theoretic strength, it is robust against those attackersthat have unlimited computational resources, and the intermediate nodes therein can verify the integrity andorigin of <b>the</b> encoded <b>messages</b> received without having to decode them, and the receiver nodes can check themout and <b>discard</b> <b>the</b> <b>messages</b> that fail <b>the</b> verification. By this way, the pollution is canceled out beforereaching the destinations...|$|R
40|$|In Delay Tolerant Networks (DTN), as disconnections between nodes are frequent, {{establishing}} the routing paths {{from the source}} node to the destination node may not be possible. Messages are forwarded in DTN similarly to an infective disease spreading among humans. This paper sets up an evolving model of messages delivery. Also, in this paper, we propose the 'crash' issue. Because large part of persons will turn off their mobile phones and <b>discard</b> <b>the</b> <b>messages</b> received, <b>the</b> 'crash' could happen in DTNs. The 'crash' in DTN means large part of <b>the</b> copies of <b>messages</b> are discarded {{within a short time}} duration. The evolving model is validated by a message forwarding simulation among mobile nodes. In the simulation, we study the influence of 'crashes' on the delivery ratio and delay of Epidemic routing, SprayAndWait and Prophet routing protocols. © 2011 IEEE...|$|R
30|$|The {{definitions}} of innovative functions are clarified first. The RREP_WAIT_TIME {{is a time}} period during the source node sends first RREP packet until receive <b>the</b> RREP control <b>messages.</b> And <b>the</b> MOS_WAIT_TIME is half the value of RREP_WAIT_TIME. The RREP packets are stored in the newly built table viz. Cmg_RREP_Tab. Lastly the Mail_node is utilized to record the malicious nodes in order to <b>discard</b> <b>the</b> control <b>message</b> from these nodes.|$|R
40|$|Abstract: In {{order to}} {{describe}} the strong dependence between the existence and absence of nodes in different times, we propose the Node-markovian graph. At every time step, nodes change their state (existence or not) according to a two-state Markov process. If nodes do not <b>discard</b> <b>the</b> <b>messages</b> stored in them when they quit from the graph, we {{think that they have}} memory, or they do not have memory, and we study the performance of two-hop routing in both situations. We give the upper and lower bound of the performance in this paper. Surprisingly, simulation and numerical results show that difference of the performance between both cases is small when nodes in the graph exist with bigger probability, but they have bigger difference when the probability is smaller, so we think that it is not necessary for nodes to have memory in some cases...|$|R
40|$|Denial-of-service {{attacks are}} a {{significant}} threat to mission critical communication infrastructures, e. g., to industrial control systems. They are relatively easy to perpetrate, as an attacker that has access to communication links or equipment could observe the source and destination addresses for every message, and can identify and <b>discard</b> <b>the</b> <b>messages</b> exchanged between particular communication participants. Mix networks and anonymity networks could render these attacks more difficult by providing anonymous communication via relaying. Nevertheless, relaying introduces overhead and increases <b>the</b> end-to-end <b>message</b> delivery delay, which in practice must often be low. Hence, an important {{question is how to}} optimize anonymity for limited overhead and delay. In this paper we address this question by studying two anonymity networks: MCrowds, an extension of Crowds, which provides unbounded communication delay and Minstrels, which provides bounded communication delay. We derive exact and approximate analytical expressions for the relationship anonymity for these systems. Using MCrowds and Minstrels we show that, contrary to intuition, increased overhead does not always improve anonymity. We investigate the impact of the system's parameters on anonymity and on the optimal anonymity network parameters, and the sensitivity of anonymity to the misestimation of the number of attackers. QC 201040708 </p...|$|R
40|$|Simple flooding, {{probabilistic}} approach, area-based scheme, knowledge-based {{approach and}} Multi hop Vehicular broadcast is {{not suitable for}} VANETs scenario because of its dynamic nature. Relevance scheme is proposed to disseminate <b>the</b> relevant <b>message</b> for sharing in VANETs and <b>discards</b> <b>the</b> redundant <b>messages</b> from <b>the</b> network and improves the over all performance of network. The relevance-based approach does not provide network control and it only broadcast user traffic. This paper presents an improvement in mathematical model to consider the network control. Simulations using NS- 2 show that proposed mathematical model consider the network control and improve the global benefit. Povzetek: Predstavljen je matematičen model izboljšanega nadzora in upravljanja z mrežo. ...|$|R
40|$|Abstract—Traditional {{methods for}} message {{authentication}} {{are based on}} the cryptographic verification of received data using some sort of a shared secret. While this task is not critical for traditional networks, Wireless Sensor Networks (WSNs) may pay a high price for the gained protection – sensor nodes are forced to invest their already scarce resources in receiving a message and executing cryptographic computations, only to <b>discard</b> <b>the</b> <b>message</b> afterwards in case of a failed authentication. This work introduces a different, crypto-free approach for enabling authenticated communication by leveraging peculiarities of wireless communication, in particular its broadcast nature and the feasibility of channel capacity jamming. Instead of receiving and then verifying transmitted data, sensor nodes are prevented from receiving fake data at all. This is achieved by coupling physical characteristics of signal propagation with legitimate transmissions. Such a coupling enables the detection and invalidation of impersonation attacks by using short jamming pulses emitted by surrounding WSN nodes. We justify this concept by designing a novel communication protocol explicitly integrating the jamming feature, and analyze factors which impact the efficiency of successful jamming, such as the frame length, transmission timing accuracy, and various other issues identified through extensive empirical measurements. I...|$|R
50|$|Rydén is {{best known}} for a {{collection}} of nearly 2,000 of these messages published worldwide in many languages as True Life in God. She adheres to the idea that she has been called to transmit to <b>the</b> world <b>the</b> <b>messages</b> she receives. However, Rydén has never published the first ten months' worth of received messages. In 1993, Laurentin said that Rydén planned to publish <b>the</b> first <b>messages.</b> In 1995, Dominican theologian Father François-Marie Dermine, a Canadian-born priest serving as exorcist for the diocese of Bologna, Italy, wrote that Rydén said that she burned <b>the</b> early <b>messages</b> because there were too many, and they were loose scraps, not bound in a notebook. Dermine says that this destruction of <b>the</b> first <b>messages</b> is suspicious, as there would normally be heightened reverence held for them, if they were messages from angels and Jesus. Rydén wrote in 1995 that she destroyed or <b>discarded</b> <b>the</b> first <b>messages.</b>|$|R
40|$|Systems {{exploiting}} network coding {{to increase}} their throughput suffer greatly from pollution attacks which consist of injecting malicious packets in the network. The pollution attacks are amplified by the network coding process, resulting in a greater damage than under traditional routing. In this paper, we address this issue by designing an unconditionally secure authentication code suitable for multicast network coding. The proposed scheme is robust against pollution attacks from outsiders, as well as coalitions of malicious insiders. Intermediate nodes can verify the integrity and origin of the packets received without having to decode, and thus detect and <b>discard</b> <b>the</b> malicious <b>messages</b> in-transit that fail the verification. This way, the pollution is canceled out before reaching the destinations. We analyze {{the performance of the}} scheme in terms of both multicast throughput and goodput, and show the goodput gains. We also discuss applications to file distribution. ...|$|R
5000|$|This {{focus on}} the {{possibility}} that emails and other items will ultimately be converted back to Microsoft Mail format is so extreme that if Outlook/Exchange cannot {{figure out a way}} to encode the complete data in the standard format, it simply encodes the entire message/item in a proprietary binary format called Transport Neutral Encapsulation Format (TNEF) and sends this as an attached file (usually named [...] "winmail.dat") to an otherwise incomplete rendering of the mail/item. If the recipient is Outlook/Exchange it can simply <b>discard</b> <b>the</b> incomplete outer <b>message</b> and use <b>the</b> encapsulated data directly, but if the recipient is any other program, <b>the</b> <b>message</b> received will be incomplete because the data in the TNEF attachment will be of little use without the Microsoft software for which it was created. [...] As a workaround, numerous tools for (partially) decoding TNEF files exist.|$|R
40|$|A new {{cooperative}} protocol {{is proposed}} {{in the context of}} wireless mesh networks. The protocol implements ondemand cooperation, i. e. cooperation between a source terminal and a destination terminal is activated only when needed. In that case, only the best relay among a set of available terminals is re-transmitting <b>the</b> source <b>message</b> to <b>the</b> destination terminal. This typical approach is improved using three additional features. First, a splitting algorithm is implemented to select the best relay. This ensures a fast selection process. Moreover, the duration of the selection process is now completely characterized. Second, only terminals that improve the outage probability of the direct link are allowed to participate to the relay selection. By this means, inefficient cooperation is now avoided. Finally, <b>the</b> destination terminal <b>discards</b> <b>the</b> source <b>message</b> when it fails to decode it. This saves processing time since the destination terminal does not need to combine the replicas of the source message: the one from the source terminal and the one from the best relay. We prove that the proposed protocol achieves an optimal performance in terms of Diversity-Multiplexing Tradeoff (DMT) ...|$|R
40|$|We {{propose a}} new {{cooperative}} Medium Access Control (MAC) protocol {{in the context}} of fixed wireless networks. The protocol implements on-demand cooperation and a selection of the best relay. Hence, cooperation between a source terminal and a destination terminal is activated only when needed. In that case, only the best relay among a set of available terminals is retransmitting <b>the</b> source <b>message</b> to <b>the</b> destination terminal. We improve this typical approach using three additional features. First, we use a splitting algorithm to select the best relay. This ensures a fast selection process. Moreover, the duration of the selection process is now upper bounded by a known value. Second, only terminals that can improve the direct link are allowed to participate to the relay selection. By this mean, inefficient cooperation is now avoided. Finally, <b>the</b> destination terminal <b>discards</b> <b>the</b> source <b>message</b> when it fails to decode it. This saves processing time at the relay candidates. We prove that the proposed protocol achieves an optimal performance in terms of Diversity-Multiplexing Trade-off (DMT) ...|$|R
40|$|International audienceThe Hierarchical Optimized Link State Routing (HOLSR) {{protocol}} {{enhances the}} scalability and heterogeneity of traditional OLSR-based Mobile Ad- Hoc Networks (MANETs). It organizes the network in logical levels and nodes in clusters. In every cluster, it implements the mechanisms and algorithms {{of the original}} OLSR to generate and to distribute control traffic information. However, the HOLSR protocol was designed with no security in mind. Indeed, it both inherits, from OLSR, and adds new security threats. For instance, the existence of misbehaving nodes can highly affect important HOLSR operations, such as the cluster formation. Cluster IDentification (CID) messages are implemented to organize a HOLSR network in clusters. In every <b>message,</b> <b>the</b> hop count field indicates to the receiver the distance in hops to the originator. An attacker may maliciously alter the hop count field. As a consequence, a receiver node may join a cluster head farther away than it appears. Then, the scalability properties in a HOLSR network is affected by an unbalanced distribution of nodes per cluster. We present a solution based {{on the use of}} hash chains to protect mutable fields in CID messages. As a consequence, when a misbehaving node alters the hop count field in a CID <b>message,</b> <b>the</b> receiver nodes are able of detecting and <b>discarding</b> <b>the</b> invalid <b>message...</b>|$|R
30|$|When {{there is}} more than one node in the {{direction}} area, two energy-aware methods can be adopted for selecting the next candidate node. The first method is competitive broadcast. When a node in area α forwards (rebroadcasts) a routing message, it sends with a delay based on the remaining energy, thus the node with more energy will forward a message more quickly. Other nodes with less energy will <b>discard</b> <b>the</b> same routing <b>message</b> when they receive the first forward one. The second method is to let the source node S selecting the node for next hop. It requires the additional information about remaining energy in neighbour knowledge explorations, but it generates much less routing data. We use the second approach for the implementation in this paper.|$|R
40|$|Delay-tolerant {{networks}} (DTNs) {{have the}} great potential to connecting devices and {{regions of the}} world that are presently under-served by current networks. A vital challenge for Delay Tolerant Networks is to determine the routes through the network without ever having an end to end path, or knowing which routers will be connected at any given instant of time. The problem has an added constraint of limited size of buffers at each node. This situation limits the applicability of traditional routing techniques which categorize lack of path as failure of nodes and try to seek for existing end-to-end path. Approaches have been proposed which focus either on epidemic message replication or on previously known information about the connectivity schedule. The epidemic approach, which is basically a flooding technique, of replicating messages to all nodes has a very high overhead and does not perform well with increasing load. It can, however, operate without any prior information on the network configuration. On the other hand, the alternatives, i. e., having a prior knowledge about the connectivity, seems to be infeasible for a self-configuring network. In this project we try to maximize <b>the</b> <b>message</b> delivery rate without compromising on <b>the</b> amount of <b>message</b> <b>discarded.</b> <b>The</b> amount of <b>message</b> <b>discarded</b> has a direct relation to the bandwidth used and the battery consumed. <b>The</b> more <b>the</b> <b>message</b> <b>discarded</b> more is <b>the</b> bandwidth used and battery consumed by every node in transmitting <b>the</b> <b>message.</b> At <b>the</b> same time, with the increase in <b>the</b> number of <b>messages</b> <b>discarded,</b> <b>the</b> cost for processing every message increases and this adversely affects the nodes. Therefore, we have proposed an algorithm where <b>the</b> <b>messages</b> are disseminated faster into the network with lesser number of replication of individual <b>messages.</b> <b>The</b> history of encounter of a node with other nodes gives noisy but valuable information about the network topology. Using this history, we try to route the packets from one node to another using an algorithm that depends on each node’s present available neighbours/contact and the nodes which it has encountered in the recent past. We have also focused on passing <b>the</b> <b>messages</b> to those nodes which are on the move away from the source/forwarder node, as the nodes moving away have a greater probability of disseminating <b>the</b> <b>messages</b> throughout <b>the</b> network and hence increases chances of delivering <b>the</b> <b>message</b> to <b>the</b> destination. ...|$|R
40|$|Delay-Tolerant Networks are {{wireless}} networks with no existing infrastructure, where disconnections between nodes {{may occur}} frequently due to node mobility and power outages. In {{order to achieve}} data delivery, store-and-forward protocols are used in DTN. Thus routing protocols based on epidemic message dissemination has been proposed, such as Epidemic routing. Thus the nodes in such networks are required more buffer space to carry the data until the communication opportunity arrives. When the buffer gets full it needs to <b>discard</b> some of <b>the</b> <b>messages</b> from it based upon the drop policies implemented. As the nodes are mobile, mobility models {{play an important role}} to measure the performance of any protocol. In this paper the performance of Epidemic Router is analyzed with different drop policies by varying the mobility models through the simulation...|$|R
50|$|In philately a {{lettercard}} or {{letter card}} is a postal stationery item {{consisting of a}} folded card with a prepaid imprinted stamp. The {{fact that it is}} folded over gives the writer twice as much room for <b>the</b> <b>message</b> compared with a postal card. <b>The</b> <b>message</b> is written on the inside and the card is then folded and sealed around the edges. The recipient tears off and <b>discards</b> <b>the</b> perforated selvages to open the card.|$|R
30|$|There are 40 RSUs in {{the network}} located at the intersections and midway between intersections. All {{vertical}} road segments are 3 -km long while the horizontal segments are 2 -km long. Each RSU broadcasts four different <b>messages</b> during <b>the</b> simulation time with dissemination periods of 250 s. Then <b>the</b> old <b>messages</b> are replaced with new ones. This replacement causes <b>the</b> vehicles to <b>discard</b> <b>the</b> packets related to <b>the</b> old <b>messages</b> and collect <b>the</b> new <b>message</b> packets instead.|$|R
50|$|The {{receiver}} evaluates each packet {{as it is}} received. If {{there is}} an error, the erroneous packet is <b>discarded.</b> Otherwise <b>the</b> packet is saved {{as a piece of}} <b>the</b> <b>message.</b>|$|R
40|$|The current {{expansion}} of multi-player online games has promoted {{the growth of}} large scale distributed virtual envi-ronments (DVEs). In these systems, peer-to-peer architec-tures have been proved as the most scalable scheme for sup-porting massively multi-player applications. Nevertheless, the interactions among clients that can take place {{in this type of}} systems can lead to the temporal saturation of some of the clients. Since a client saturation has an effect on other clients, these situations limit the performance of peer-to-peer DVEs. In this paper, we propose an adaptive technique for avoiding the saturation of the client computers in DVE systems based on peer-to-peer architectures. This technique is based on monitoring the client state and <b>discarding</b> some of <b>the</b> <b>messages</b> received from other clients when the client is close to saturation. The evaluation results show that the proposed method improves the system performance without having an effect on the awareness rate, regardless of the movement pattern that avatars can follow. As a result, both the performance and the scalability of peer-to-peer DVEs are significantly improved. 1...|$|R
50|$|In {{computer}} science, edge-chasing is an algorithm for deadlock detection in distributed systems. Developed by Chandy Mishra Hass. Whenever {{a process}} A is blocked for some resource, a probe message {{is sent to}} all processes A may depend on. <b>The</b> probe <b>message</b> contains <b>the</b> process id of A along with the path that <b>the</b> <b>message</b> has followed through the distributed system. If a blocked process receives the probe it will update the path information and forward the probe to all the processes it depends on. Non-blocked processes may <b>discard</b> <b>the</b> probe.|$|R
30|$|<b>The</b> <b>message</b> {{which should}} be <b>discarded</b> {{traverses}} all <b>the</b> {{way down to the}} destination, and wastes the link bandwidth on its route.|$|R
50|$|When {{it comes}} to caching <b>the</b> <b>messages</b> there are two scenarios. The first scenario, if a message is new to the {{receiving}} node (meaning the data was not received in previous communication rounds), the node will store <b>the</b> <b>message</b> in cache and transmit this message to its own neighbours. Secondly, if <b>the</b> <b>message</b> is old (meaning the data was already received before, i.e. through another neighbour), <b>the</b> <b>message</b> is <b>discarded.</b> If <b>the</b> cache is full, different strategies can be employed {{in order to make}} room for new messages.|$|R
50|$|On {{protocol}} errors, a receiving module <b>discards</b> <b>the</b> piece it {{has received}} and reports back the error condition to the original source of the piece on the same layer by handing <b>the</b> error <b>message</b> down or in case of the bottom module sending it across.|$|R
30|$|After exchanging <b>the</b> ACK <b>messages,</b> <b>the</b> {{stations}} {{make the}} decision regarding {{whether or not to}} forward the received packet. Specifically, after all ACK messages are received, if a station does not receive any ACK message with a smaller queue length value than itself, it pushes the received packet into the corresponding queue and later forwards it toward its destination. Otherwise, <b>the</b> station <b>discards</b> <b>the</b> received packet.|$|R
30|$|A vehicle can be {{a carrier}} for some RSUs while being just a {{collector}} for others. A vehicle is free to decode any messages received while moving in the network. Therefore, it can carry message packets from multiple RSUs. However, vehicles have limited buffer capacity, and consequently {{they may not be}} able to save all received messages. When a vehicle with a full buffer encounters a new <b>message,</b> it <b>discards</b> <b>the</b> packets of <b>the</b> oldest <b>message</b> to create room for <b>the</b> new <b>message.</b> Since RSUs may disseminate messages which change over time, vehicles must update <b>the</b> <b>messages</b> being carried. This process consists of discarding old message packets and collecting the corresponding new ones.|$|R
5000|$|On his {{personal}} website, author David Brin reveals that while studios were bidding for The Postman, his wife decided during {{a screening of}} Field of Dreams that Kevin Costner should portray The Postman. Brin agreed that the emotions evoked by Field of Dreams matched <b>the</b> <b>message</b> he intended to deliver with his novel. A decade later, after learning Costner would be cast as the lead, Brin said he was [...] "thrilled". Costner <b>discarded</b> <b>the</b> old screenplay (in which <b>the</b> moral <b>message</b> of <b>the</b> novel had been reversed) and hired screenwriter Brian Helgeland; Brin says {{the two of them}} [...] "rescued the 'soul' of the central character" [...] and reverted <b>the</b> story's <b>message</b> back to one of hope.|$|R
40|$|AbstractInformation {{broadcasting}} in MANETs is {{an essential}} building block for cooperative operations, group discussions, and common announcements (e. g., filling routing tables). The flooding is the simplest broadcasting scheme used in MANETs. In this scheme, source nodes broadcast at once packets to all neighbors. Broadcasting through flooding causes increased messages redundancy, collision, and wastage of bandwidth and energy. Several approaches have been proposed to solve these issues and could be classified into two main categories: static schemes and adaptive schemes. In this paper, we introduce an adaptive scheme for information broadcasting in MANETs. This scheme allows nodes to select an appropriate action, either to rebroadcast or to <b>discard</b> receiving <b>messages.</b> <b>The</b> decision {{is based on the}} amount and timestamps of received messages. Simulations have been conducted and results show that the proposed scheme reduces the number of packet transmissions, has better latency and SRB, good reachability, and low energy consumption...|$|R
