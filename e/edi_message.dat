17|46|Public
5000|$|BISAC Committees: BISAC Subject Codes Committee, Identification Committee, Machine Readable Coding (MRC), Metadata Committee, Publisher/Manufacturer <b>EDI</b> <b>Message,</b> Rights Committee, Supply Chain EDI Committee ...|$|E
5000|$|Just In Sequence {{implementations}} {{introduce a}} number of new process requirements on top of Just In Time practices. A production sequence or final assembly sequence must be shared upwards to suppliers and sub-contractors. Feedback to customers must be organized according to the scheduled output to earn all positive financial effects. For these and other reasons, the actual production sequence must be [...] "broadcast" [...] out to all relevant parties once it is firm. This [...] "broadcast" [...] can be done over the phone, paper, email, or other automated IT system. UN/EDIFACT supports an <b>EDI</b> <b>message</b> standard called DELJIT as one standardized way to communicate this information.|$|E
5000|$|Electronic data {{interchange}} (EDI) is {{an electronic}} communication method that provides standards for exchanging data via any electronic means. By {{adhering to the}} same standard, two different companies or organizations, even in two different countries, can electronically exchange documents (such as purchase orders, invoices, shipping notices, and many others). EDI has existed for more than 30 years, {{and there are many}} EDI standards (including X12, EDIFACT, ODETTE, etc.), some of which address the needs of specific industries or regions. It also refers specifically to a family of standards.In 1996, the National Institute of Standards and Technology defined electronic data interchange as [...] "the computer-to-computer interchange of strictly formatted messages that represent documents other than monetary instruments. EDI implies a sequence of messages between two parties, either of whom may serve as originator or recipient. The formatted data representing the documents may be transmitted from originator to recipient via telecommunications or physically transported on electronic storage media." [...] It distinguishes mere electronic communication or data exchange, specifying that [...] "in EDI, the usual processing of received messages is by computer only. Human intervention in the processing of a received message is typically intended only for error conditions, for quality review, and for special situations. For example, the transmission of binary or textual data is not EDI as defined here unless the data are treated as one or more data elements of an <b>EDI</b> <b>message</b> and are not normally intended for human interpretation as part of online data processing.EDI can be formally defined as the transfer of structured data, by agreed message standards, from one computer system to another without human intervention.|$|E
5000|$|... b2een - a {{freeware}} peer-to-peer client used {{to exchange}} <b>EDI</b> <b>messages</b> by companies like Chevron, Areva or GE Oil&Gas ...|$|R
40|$|This paper {{analyses}} {{trends in}} <b>EDI</b> <b>messaging</b> in Denmark. Between 1995 and 1999, {{there has been}} a sharp {{increase in the number of}} companies capable of sending and receiving <b>EDI</b> <b>messages</b> as well as an increase in the number of <b>EDI</b> <b>messages</b> trans- mitted. The major part of the increase is attributed to the health sector. Most of the companies analysed within this paper only apply browser-EDI in business-to-business trade to a limited extent. This analysis highlights the potential for expanding the EDI traffic by its integration with ERP systems within Danish companies (ORACLE, SAP/R 3, Concorde and Navision) and also indicates the large potential for EDI growth and application within the public sector. It is believed that this data highlights and represents significant trends in EDI applications solutions within the Danish marketplace both now and in the future. EDI messaging; Denmark; ERP Systems; Networks; IT industry...|$|R
40|$|Organizations {{exchange}} data electronically {{to perform}} business transactions using Electronic Data Interchange (EDI). In {{order to gain}} insights on such transactions, approaches for inter-organizational business process mining based on the observation of exchanged <b>EDI</b> <b>messages</b> have been recently proposed. In recent approaches, however, only meta-information about the exchanged messages, such as message type, interchange time and sender/receiver information, {{has been used as}} data base for generating event logs. This neglects the opportunity of using business information from observed <b>EDI</b> <b>messages</b> to arrive at more detailed event logs, which in turn enable mining of detailed process models and fine-grained process performance analyses. In addressing this shortcoming, we present EDIminer, a toolset that allows for (i) enhanced visualization of contents of <b>EDI</b> <b>messages,</b> (ii) automatic and/or user-driven definition of mappings of EDI artifacts to events, (iii) generation of events from such mappings, (iv) semi-automatic correlation of events to process instances and (v) generation of industry-standard XES event logs for subsequent application of conventional process mining techniques. We demonstrate the utility of EDIminer by means of an exemplary EDI-based purchase order process based on real-world data...|$|R
40|$|This {{document}} {{is the second}} part of the Technical Interface Specification (TIS) for Direct Trader Input (DTI) to NCTS. It shows the detailed structure of the IE messages, their conditions and rules, and the codes they use. It also shows the structure of the reference numbers and the EDIFACT messages, and a sample <b>EDI</b> <b>message...</b>|$|E
40|$|Electronic Data Interchange (EDI) {{systems are}} used in many domains to support inter-organisational {{information}} exchange. These systems require complex message translation, where data must be transformed from one <b>EDI</b> <b>message</b> format into another. We describe a visual language and support environment which greatly simplify {{the task of the}} systems integrator by using a domain-specific visual language to express data formats and format translations. Complex message translations are automated by an underlying transformation engine. We describe the motivation for this system, its key visual language and transformation engine features, a prototype environment, and experience translating it into a commercial product...|$|E
40|$|Abstract. Current EDI {{standards}} {{include a}} lot of complexity and their integration into existing applications is extremely expensive. This {{is due to the}} fact that current EDI standard messages are based on data schemes intended to capture all data that may appear in any business scenario of the corresponding business transaction. The standards do not capture the business requirements and scenarios that lead to the hierarchical <b>EDI</b> <b>message</b> design. Considering the requirements of modelling inter-organizational business transactions we present concepts based on Unified Process and UML to support modelling EDI scenarios. Resulting UML diagrams can support the design of current EDI messages as well as the design of future EDI standards based on object technology. ...|$|E
50|$|UCS, or Uniform Communication Standard, {{is used by}} {{the grocery}} and retail-oriented {{industries}} for electronic transactions. It is a subset of the X12 national standard consisting of some 300-plus general-purpose <b>EDI</b> <b>messages.</b> Within that large base set, many verticals are built on a small subset with narrow focus.|$|R
40|$|In {{order to}} achieve their goals, {{organizations}} collaborate with business partners. Such collaborations represent enactments of inter-organizational business processes and may be supported through the exchange of Electronic Data Interchange (<b>EDI)</b> <b>messages</b> (e. g., electronic purchase orders, invoices etc.). For gaining insights on such processes, recently two distinct approaches for enabling the application of process mining techniques on inter-organizational business processes based on the interchanged <b>EDI</b> <b>messages</b> have been proposed: (i) Message Flow Mining (MFM) and (ii) Physical Activity Mining (PAM). In this paper, we present {{a case study in}} which we apply the PAM methodology on a real-world EDI data set obtained from a German manufacturer of consumer goods. Our results demonstrate potential insights that can be gained from applying process mining techniques in the context of inter-organizational business processes...|$|R
40|$|EDI �electronic data {{interchange}} � {{messages are}} notoriously lean and di�cult to interpret without additional information. While sympathizing {{with the many}} criticisms {{that have been made}} of the design of EDI protocols, we argue in this paper that there is something basically correct in the noted leanness of <b>EDI</b> <b>messages.</b> We present a framework that describes how interpretation of <b>EDI</b> <b>messages</b> works, and indeed must work. Central elements of this framework are what we call wrapping and unfolding of messages. We demonstrate how to exploit these concepts in formalizations for electronic commerce. In particular, we show how Kimbrough's event semantics for speech acts and Tan's theory of directed obligation can be �t naturally and fruitfully into this framework, and to each other. Much work remains to be done, but the progress in formalization in evidence here should be generalizable...|$|R
40|$|We {{study the}} {{diffusion}} of a universal <b>EDI</b> <b>message</b> standard. Overall diffusion of such standard may be hindered by the slowness of its development, and by the locally bounded nature of EDI positive network externalities. A model that captures these two factors is analyzed: two rms choose one of two possible standards whose performances evolve differently through time; they use either verbal negotiation or unilateral adoption as coordinating principle. It is shown that if {{the performance of the}} universal standard {{at the end of the}} game and/or the degree of interconnection between business communities are too low, then the chances for the standard to permeate from one community to another are rather weak...|$|E
40|$|CLASET is an <b>EDI</b> <b>message</b> {{designed}} {{to facilitate the}} exchange of tree structures such as classifications, code lists, organisational charts, concept definitions, catalogues, etc. The message has been designed in a generic way and provides mechanisms to describe {{the nature of the}} information exchanged within it. All the implementation and software tools are based on a unique Conceptual Data Model (CDM). This CDM can be used to define all information needed about the message and three main data structures: classifications, tables of links between two classifications and updates. This CDM can be used not only as an exchange message, but also as a database model. CLASET is presently implemented in four formats: XML, SGML, UN/EDIFACT and HTML; this list is not at all finite: new syntaxes might come under consideration for inclusion in the message, with the move to yet unknown technologies. ...|$|E
40|$|Part 6 : Health CareInternational audienceFor a {{start this}} paper {{contains}} a short historical overview showing important {{steps in the}} ICT development in Danish healthcare with emphasis on the data network and communications. In 1988 {{the development of a}} national healthcare data network began. It was initiated with experiments with an <b>EDI</b> <b>message</b> for prescriptions, exchanged between GPs and pharmacies. Later more parties, i. e. hospitals, laboratories, municipalities etc. were connected to the network. In the year of 2000 a great part of the paper based messages exchanged between the parties were developed as EDI messages, standardized and in daily use by all parties. The paper ends by describing the development since year 2000, when the strategy was supplemented with new methods, where the exchange mechanism was changed from sending data between parties to sharing data through central national repositories. The role of legislation in the field is discussed...|$|E
40|$|EDI (electronic data interchange) {{messages}} are notoriously lean and di#cult (or impossible) to interpret without additional information. While recognizing and sympathizing {{with the many}} criticisms {{that have been made}} of the design of EDI protocols, we argue in this paper that there is something basically correct, even inevitable, in the noted leanness of <b>EDI</b> <b>messages.</b> By way of making this case, we present a framework that describes how interpretation of <b>EDI</b> <b>messages</b> works, and indeed must work. Central elements of this framework are what we call unwrapping and unfolding of messages. We present and discuss these concepts in some detail. Further, we demonstrate how to exploit these concepts in formalizations for electronic commerce. In particular, we show how Kimbrough's lean event semantics for speech acts, and Tan and Thoen's theory of directed obligation can be fit naturally and fruitfully into this framework, and to each other. Much work remains to be done, but the pro [...] ...|$|R
40|$|EDI (electronic data interchange) {{messages}} are notoriously lean and difficult (or impossible) to interpret without additional information. The authors acknowledge the many {{criticisms of the}} EDI protocols, but {{argue that there is}} something basically correct, even inevitable, in the leanness of <b>EDI</b> <b>messages.</b> They present a framework that describes how <b>EDI</b> <b>messages</b> are interpreted, and indeed must be interpreted. 2 ̆ 2 Unwrapping 2 ̆ 2 and 2 ̆ 2 unfolding 2 ̆ 2 of {{messages are}} the central elements. These concepts are discussed in detail, and the article demonstrates how to exploit them in formalizations for electronic commerce. In particular, it shows how Kimbrough 2 ̆ 7 s lean-event semantics for speech acts, and Tan and Thoen 2 ̆ 7 s theory of directed obligation can be fit naturally and fruitfully into this framework, and to each other. Much remains to be done, but the progress in formalization in evidence here should be generalizable...|$|R
40|$|EDI (electronic data interchange) {{messages}} are notoriously lean and difficult (or impossible) to interpret without additional information. While recognizing and sympathizing {{with the many}} criticisms {{that have been made}} of the design of EDI protocols, we argue in this paper that there is something basically correct, even inevitable, in the noted leanness of <b>EDI</b> <b>messages.</b> By way of making this case, we present a framework that describes how interpretation of <b>EDI</b> <b>messages</b> works, and indeed must work. Central elements of this framework are what we call wrapping and unfolding of messages. We present and discuss these concepts in some detail. Further, we demonstrate how to exploit these concepts in forrealizations for electronic commerce. In particular, we show how Kimbrough's event semantics for speech acts and Tan's theory of directed obligation can be fit naturally and fruitfully into this framework, and to each other. Much work remains to be done, but the progress in forrealization in evidence here should be generalizable...|$|R
40|$|Multi-organizational <b>EDI</b> <b>message</b> {{networks}} are complicated communication environments with various standards and technologies. The role of third party message exchange hubs {{has become more}} important and their tasks more difficult. Current development activities for supporting the utilization of XML in electronic commerce focuses on message standardization and specification of common business architectures, processes, and web practices. A need to visualize EDI messages in different contexts to human readers has received insufficient attention in ongoing activities. In this paper we discuss problems and approaches related to the visualization of EDI messages in XML format. An idea of a standardized master style sheet is described for reducing the efforts needed in the standardization and maintenance of style sheets in a hub service. We also give some recommendations for designing the master style sheets based on our experiences in participating {{the building of a}} commercial hub service. Categories and Subject Descriptors I. 7. 2 [Document and Text Processing]: Document Preparatio...|$|E
40|$|This paper {{examines}} the encoding of speech acts in KQML at length and in ANSI X 12 briefly. KQML is a speech-act-based language developed with ARPA funding, and X 12 is the American standard for {{electronic data interchange}} (<b>EDI)</b> <b>message</b> formats. I conclude that although speech act theory is highly relevant to electronic communication, the needs of computers {{are different from those}} of humans. Computers need to perform concisely speech acts that are clumsy in human speech, such as arranging communication paths. They also need to recognize speech act types as immediately as possible, whereas human language gets along with clumsy encodings of speech acts into grammar. 1. Speech acts in electronic communication Speech act theory [...] - the study of how utterances function as statements, questions, commands, and so on [...] - is no longer just an area of theoretical linguistics; it is finding increasing applications in software engineering. Several groups of researchers are experimenting with knowl [...] ...|$|E
40|$|Currently {{there is}} limited {{security}} offered in the Electronic Data Interchange (EDI) systems. Due {{to the growth of}} global market, Electronic Data Interchange is becoming an important tool for improving business prospects and hence becoming a target for fraud and misuse of information. This thesis attempts to provide security enhancements in the EDI systems. A model of the EDI system, the Direct Store Delivery System is described with security features added for global use. The model uses a Third Party Service Provider providing Message Handling Systems for communication between the trading partners. This thesis describes the security enhancement in the EDI messages using the UN/EDIFACT standard of formatting the EDI messages with the inclusion of certificates, digital signatures in the messages without changing the syntax of the <b>EDI</b> <b>message.</b> Also, a proposal to use X. 500 Directory Services standards for global authentication is described along with other network security services. All these security services are included in the Application layer of the OSI reference model and are transparent to the user. As a result of the proposal, the security services can be implemented on a global ba^is as a step towards an open-edi system...|$|E
40|$|In {{the past}} two years EDI {{developments}} in Dutch Health Care have gained some momentum. These developments are focussed on the communication between hospitals on the one hand, and General Practitioners, Health Care insurers and suppliers of health care products on the other hand. Experiences show that although the results are promising there is a great need for broadly accepted standard <b>EDI</b> <b>messages</b> based on a thorough analysis of the existing information exchange between organisations...|$|R
40|$|International audienceOne of the {{problems}} in the actual electronic commerce is laid on the data heterogeneity (i. e. format and vocabulary). This representation incompatibility, particularly in the EDI (Electronic Data Interchange), is managed manually with help from a human expert consulting the usage guideline of each message to translate. This manual work is tedious, error-prone and expensive. The goal of this work is to partially automate the semantic correspondence discovery between the <b>EDI</b> <b>messages</b> of various standards by using XML Schema as the pivot format. This semi-automatic schema matching algorithm take two schemata of <b>EDI</b> <b>messages</b> as the input, compute the basic similarity between each pair of elements by comparing their textual description and data type. Then, it computes the structural similarity value basing on the structural neighbors of each element (ancestor, sibling, immediate children and leaf elements) with an aggregation function. The basic similarity and structural similarity values are used in the pair wise element similarity computing which is the final similarity value between two elements. The paper shows as well some implementation issues and a scenario of test for EX-SMAL with messages coming from EDIFACT and SWIFT standards...|$|R
40|$|With {{the growing}} use of XML by smaller en medium sized {{companies}} in {{business to business}} communication, {{there is a need}} for larger companies to create an interface to communicate with these smaller companies. Because of the fact that most large companies using EDI to communicate, these companies want to use a simple and cheap solution for this communication problem. This paper make clear that it is possible to wrap <b>EDI</b> <b>messages</b> to XML messages and vice versa using the given wrapping model...|$|R
40|$|Abstract. Choreography {{modeling}} and service integration {{received a lot}} of attention in the last decade. However, most real-world implementations of inter-organizational systems are still realized by traditional Electronic Data Interchange (EDI) standards. In traditional EDI standards, the notion of process or choreography is not explicitly specified. Rather, every business document exchange stands for its own. This lack of process awareness in traditional EDI systems hinders organizations from applying Business Process Management (BPM) methods in such settings. To address this shortcoming, we seek to derive choreographies from <b>EDI</b> <b>message</b> exchanges. Thereby, we employ and extend process mining techniques, which have so far concentrated on business processes within single organizations. We discover the interaction sequences between the partners as well as the business information conveyed in the exchanged documents, which goes beyond the state-of-the-art in process mining. As a result, we lift the information gained on the IT level to the business level. This enables us to derive new insights that help organizations to improve their performance, e. g., an organization may get insights into the value of its business partnerships to support an efficient decision making process. This way we hope to bring the merits of BPM to inter-organizational systems realized by traditional EDI standards. Key words: process mining, EDI, EDIFACT, inter-organizational business processe...|$|E
40|$|Choreography {{modeling}} and service integration {{received a lot}} of attention in the last decade. However, most real-world implementations of inter-organizational systems are still realized by traditional Electronic Data Interchange (EDI) standards. In traditional EDI standards, the notion of process or choreography is not explicitly specified. Rather, every business document exchange stands for its own. This lack of process awareness in traditional EDI systems hinders organizations from applying Business Process Management (BPM) methods in such settings. To address this shortcoming, we seek to derive choreographies from <b>EDI</b> <b>message</b> exchanges. Thereby, we employ and extend process mining techniques, which have so far concentrated on business processes within single organizations. We discover the interaction sequences between the partners as well as the business information conveyed in the exchanged documents, which goes beyond the state-of-the-art in process mining. As a result, we lift the information gained on the IT level to the business level. This enables us to derive new insights that help organizations to improve their performance, e. g., an organization may get insights into the value of its business partnerships to support an efficient decision making process. This way we hope to bring the merits of BPM to inter-organizational systems realized by traditional EDI standards...|$|E
40|$|This paper {{examines}} the encoding of speech acts in KQML at length and in ANSI X 12 briefly. KQML is a speech-act-based language developed with ARPA funding, and X 12 is the American standard for {{electronic data interchange}} (<b>EDI)</b> <b>message</b> formats. I conclude that although speech act theory is highly relevant to electronic communication, the needs of computers {{are different from those}} of humans. Computers need to perform concisely speech acts that are clumsy in human speech, such as arranging communication paths. They also need to recognize speech act types as immediately as possible, whereas human language gets along with clumsy encodings of speech acts into grammar. 1. Speech acts in electronic communication Speech act theory — the study of how utterances function as statements, questions, commands, and so on — is no longer just an area of theoretical linguistics; it is finding increasing applications in software engineering. Several groups of researchers are experimenting with knowledge interchange languages based explicitly on speech act theory [4, 13, 9, 5]. Further, at last year’s HICSS conference, Scott Moore [14] opened an important line of investigation by comparing the repertoire of speech acts used in electronic communications with those used in human speech. Moore analyzed the illocutionary force of X 12 EDI transactions, S. W. I. F. T. securities transactions, and Apple Events in the Macintosh operating system. He found, perhaps surprisingly, that all of these electronic messages display much the same variety of speech act types as human speech. There are a few gaps; for example, computers do not normally express condolences to each other. But the applicability of human-language speech act theory to electronic messaging, even the internal messages used within an operating system, is impressive. Nonetheless, electronic communication is not huma...|$|E
50|$|As {{with most}} ISO {{standards}} dealing with application-level networking, X.400 failed to compete successfully with SMTP, the Internet-based equivalent in North America. However, in Europe, South America, and Asia, X.400 is quite widely implemented, especially for EDI services. In North America, X.400 is still {{used in some}} applications, such as the military, intelligence services and aviation, mainly because the X.400 functions for integrity and security were developed and deployed much earlier than their SMTP counterparts (S/MIME, PGP and SMTP-TLS). For similar reasons, it is sometimes used for transmission of <b>EDI</b> <b>messages</b> between applications.|$|R
40|$|The {{development}} in the late 1980 s of two dimensional bar code symbologies capable of storing kilobytes of information in a single symbol and unlimited data in multiple symbols {{has led to the}} suggestion that bar code {{could be used as a}} medium for transmitting <b>EDI</b> <b>messages.</b> This paper considers whether such a suggestion targets any real business problem and whether such a system would work in practice. Results are reported of three studies conducted addressing different aspects of the feasibility of bar code EDI: its organisational feasibility, its technical feasibility and its practical feasibility...|$|R
50|$|Recommendation 25 and the UN/EDIFACT Standard {{represent}} {{a set of}} internationally agreed standards, directories, and guidelines for the electronic interchange of structured data, between independent computerized information systems. UN/EDIFACT is the international standard for Electronic Data Interchange and is used throughout the commercial and administrative world. UN/EDIFACT accounts for over 90% of all electronic data interchange (<b>EDI)</b> <b>messages</b> exchanged globally. UN/EDIFACT messages are used by almost all national customs administrations, all major seaports and a large range of companies (including over 100 000 in the retail sector), and throughout international supply chains. For example, more than 7 million EDIFACT messages are exchanged {{each year in the}} French agricultural supply chain.|$|R
40|$|This thesis {{describes}} {{the development of}} a SOA-based architecture for integrating large EDI-using manufacturing companies purchasing processes with smaller non-EDI capable manufacturing companies, using online services. The underlying need for this project lies with the fact that these small manufacturing companies risk to miss out on business, due to their inability to communicate via the industry standard EDI format. At the same time, getting EDI-capable involves significant investments in software licenses, connectivity services and consulting or training that these small companies may not be ready to make. The mentor company of this thesis project, System Andersson, produces resource planning software for this type of companies and {{would like to be able}} to provide them with an easy to use way of “jacking in” EDI support into their businesses, without having to make such significant investments. Ideally this feature would be developed as a standalone subscription based service that could be provided to users in such a way that their existing System Andersson software could connect to it and no further hard- or software would be needed on site. This EDI-enabling should be as easy as to be entirely transparent for the end-user companies. The task handed to the author was thus to develop an architecture for how such a subscription based service could be developed. Furthermore, in order to promote re-use and simplify development, the architecture was to be based on SOA concepts. As a result of the project, such an architecture has been developed. The architecture details two services for translating and storing for later delivery a number of <b>EDI</b> <b>message</b> types of the EDIFACT variety. The architecture also specifies communications protocols (SOAP over HTTPS and AS 2 over HTTPS) and APIs (web services) for how to communicate with these services. These specifications can be used to implement a system that performs the necessary integration, so that the smaller companies may indeed communicate via EDI. The fitness of the developed architecture has been tested by implementing a prototype version of such a system based on it. It has also been validated by way of comparing to how well it adheres to SOA design principles. All in all, this design appears to be quite sound and presents a working solution to the studied problem...|$|E
40|$|A key {{criterion}} in the design, procurement and use {{of computer}} systems is performance. Performance typically means the throughput and response time of a system. The effects of poorly performing systems range from dissatisfied users to high penalties for companies due to missed processing deadlines. As a result of continuously increasing hardware performance, companies often solve performance problems by replacing existing hardware with faster machines. One consequence can be that they achieve a performance increase, but the overall performance increase is less than expected. The {{reason for this is}} that the combination of hardware and software does not match. For system designers it would be helpful to have a systematic method which supports them in the design of new systems and in the extension of existing systems. The need for a systematic configuration method is motivated by a typical B 2 B application from the financial industry. Banks have to deal with several payment messages standards like EDIFACT or S. W. I. F. T. which have to be converted into the banks' internal representation for further processing. Such converters have to handle message size ranging from some 100 bytes to about 60 MB and have to fulfil certain performance requirements. To achieve the performance goals, identification of the hardware and software configuration is an important step in the implementation of a distributed message converter system. This thesis presents a systematic approach for the cost performance analysis of distributed job processing systems based on given requirements on throughput and system response time. Our method allows us to search for suitable configurations while minimizing the use of expensive methods for performance evaluation to the largest degree. The method is organized into a hardware and a software configuration step. For each of these configuration steps algorithms were developed. For the hardware configuration step we first approximate single host performance by a coarse model that requires few, inexpensive to obtain, key parameters. Based on it we perform the hardware selection and determine the workload distribution for the selected host configuration. The workload distribution and the hardware configuration are used to build a Layered Queueing Network model (LQN) of the complete system. It is used to determine a software configuration that actually achieves the performance that has been predicted given the hardware configuration. Since evaluations of the complete model are rather expensive, we use a greedy heuristic, which tries to minimize the number of model evaluations required. We have used our method to configure a large distributed system in order to demonstrate the scalability of the method. For a smaller system configuration we compared the predicted results with real system measurements. The verification on the real system shows that the method could be applied successfully to configure a distributed system to reach maximum performance. As we are using queueing networks for system performance modeling, our system configuration method is based on average system performance values. Hence runtime deviations are not covered during the system design phase and have to be handled during runtime by a scheduler to distribute incoming jobs in an optimal way among the hosts. In our case of the <b>EDI</b> <b>message</b> converter it turned out that the standard online scheduling method doesn't fulfil all requirements. Hence we adapted the Bin Stretching scheduling approach to fulfil the functional requirements of deadline processing and priority processing as well as the system performance requirements of low system response times and high system throughput. The algorithm behavior has been analyzed by simulation in different scenarios corresponding to different message distributions. The simulation results shows that the modified Bin-Stretching strategy generally gives better results than the well known list scheduling in the FCFS variety. We were also able to verify on our real message converter system the general good behavior of our algorithm...|$|E
40|$|We {{describe}} a schema matching algorithm EXSMAL that automates the semantic correspondence discovery between the EDI (Electronic Data Interchange) messages of various standards (EDIFACT, SWIFT…) by using XML Schema as the pivot format. This algorithm takes two schemata of <b>EDI</b> <b>messages</b> as the input, computes the basic similarity between {{each pair of}} elements by comparing their textual description and data type. Then, it computes the structural similarity value basing on the structural neighbors of each element (ancestor, sibling, immediate children and leaf elements) with an aggregation function. The basic similarity and structural similarity values {{are used in the}} pair wise element similarity computing which is the final similarity value between two elements. 1...|$|R
40|$|What EDI {{needs is}} a good semantics, that is, a {{workable}} formal theory of what <b>EDI</b> <b>messages</b> mean. As is widely recognized, the point applies to electronic commerce and to communications by artificial agents in general. Some {{progress has been made}} in this direction, but very much work remains to be done. In this paper we introduce and discuss the spanning hypothesis for agent (EDI, electronic commerce, [...] .) communication languages. The spanning hypothesis is a claim about the semantics for a given communication language, and we think it represents a necessary condition for truly successful artificial communication in electronic commerce. After discussing and clarifying the hypothesis, and how it might be confirmed, we present evidence in its favor from an analysis of several EDIFACT transaction sets...|$|R
40|$|In this paper, {{we discuss}} an {{electronic}} business application framework and its related architecture. The framework {{is presented in}} the form of a prototype system which illustrates how XML tools can assist organizations on building and deploying e-commerce applications. The use of the system {{is presented in the}} form of a sample e-commerce application that involves shopping in a virtual store. The framework allows for customers and service providers to be linked through XML/EDI with back-end applications and to trigger e-procurement orders which are sent using either XML or <b>EDI</b> <b>messages.</b> Invoice handling and order tracking are also discussed along with extensions to the proposed architecture that allow for business process logic to be encoded at the server side, in the form of Event Condition Action scripts. ...|$|R
40|$|International audienceEDI is {{characterized}} by the possibility of sending/treating messages between information systems without any human intervention. A large number of translations are needed in order to enable the communication between an enterprise and its suppliers and clients. Therefore, translators and wrappers are needed to enable this task. In this paper, we define a representative framework to map between different representations. We apply this framework for translating <b>EDI</b> <b>messages.</b> We examine the message translation process and show the problems and lack of existing solutions. We also identify the mapping between different messages. Finally, we suggest the use of semi-automatic transformation tool. This translator differs by being easy to use for managers and people with limited technical skills. It facilitates the task of definition {{of a large number of}} translations by using matching techniques between source and target message...|$|R
