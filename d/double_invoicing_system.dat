0|61|Public
50|$|Other {{requirements}} include {{that the}} system must have functionality for membership discount and points accumulation/usage, quantity and promotional discounts, mix and match offers, cash rounding up, invoice/delivery-order issuance with outstanding amount. It should enable a user to adjust the inventory of each product based on physical count, track expiry of perishable goods, change pricing, provide audit trail when modification of inventory records is performed, be capable of multiple outlet functionality, control of stocks from HQ, <b>doubling</b> as an <b>invoicing</b> <b>system,</b> just to name some.|$|R
40|$|Regarding the {{consumption}} tax <b>invoice</b> <b>system,</b> {{it seems that}} there are principally two points of argument. The first point is about whether change to the <b>invoice</b> <b>system</b> is required for the introduction of the multiple tax rate. The second point is about the check effect that an <b>invoice</b> <b>system</b> has. Although the check effect of an <b>invoice</b> <b>system</b> has been discussed in prior literature, this study examines ways to make the check effect even more effective...|$|R
40|$|Colloque avec actes et comité de lecture. In this paper, {{we address}} {{the case study}} {{proposed}} by Habrias- namely specifying an <b>Invoice</b> <b>System.</b> Our specifications are written in TLA+, a formal specification language based on TLA (the Temporal Logic of Actions). We describe an animation language {{that allows us to}} validate our specifications. Finally, the specification, the validation and the verification of the <b>invoice</b> <b>system</b> are illustrated...|$|R
5000|$|... 'Best {{project in}} the use of an {{electronic}} signature in the private sector in 2008' [...] for SEAT’s electronic <b>invoicing</b> <b>system,</b> by the Catalan Certification Agency (CATCert) ...|$|R
50|$|Dermot is {{the author}} of several Open Source Software applications, {{including}} DBOW, a database compiler-compiler or front-end, and beanie, a UNIX-based accounting and <b>invoicing</b> <b>system.</b> He {{is also the author of}} RFC 2431, an RTP payload format for BT.656 video encoding.|$|R
40|$|Financial invoice {{processing}} is {{an important}} part of Company Perintis Mandiri 2 ̆ 7 s daily business. Today, to catch up the advance of technology development, Company Perintis Mandiri has applied a new financial automatic <b>invoice</b> <b>system</b> called IAS. The scope of this research is the effectiveness and efficiency issues arose from the conversion of financial <b>invoice</b> processing <b>system,</b> from manual to automatic, and the significant differences between them. The research method used is qualitative method, study case approach. To present an objective data analysis, the writer analyzes the internal control of the financial <b>invoice</b> processing <b>systems</b> with COSO theory as the reference, by conducting interviews to the respondents. The writer also analyzes the effectiveness and efficiency between the manual and the automatic system by using a simple numerical measurement. At the end, the result of this research is important to be recognized as an input to develop, maintain, and evaluate the current financial <b>invoice</b> processing <b>system</b> used by Company Perintis Mandiri...|$|R
40|$|We {{have chosen}} to look closer at the area of {{security}} for electronic invoices. The purpose of this inquest is to provide our case study with a security analysis of three suggestions and a recommendation of the best solution, according to our test. The three solutions are ISDN via a third party, X. 25 via Internet bank and Mail server. The company in our case study is in this report referred to as X, has a strong market position and a large clientele and therefore {{we were interested in}} analysing and improving X?s electronic <b>invoice</b> <b>system.</b> X was in the position of testing an electronic <b>invoicing</b> <b>system</b> towards a selective group of business customers. The major problem with the system was the security issue regarding transferring the file...|$|R
5000|$|Legal Cost Control ("LCC") Simple <b>Invoice</b> Management <b>System</b> ("SIMS") ...|$|R
30|$|For <b>invoicing</b> <b>systems</b> the {{majority}} (63.87  %) {{of the respondents}} use eLogistics applications where {{the use of the}} “in-house” systems is at the top (52.27  %) followed by the proprietary package (38.64  %). The majority (68.18  %) of the eLogistics application users use their “own hardware” platform followed by “Supplier hardware” platform (13.63  %).|$|R
50|$|Typically, the {{recovery}} operator job logging and <b>invoicing</b> <b>system</b> is based around a personal computer. This will {{be connected to}} the Mobitex data network by a Masc. radio modem (sometimes called a Mobidem) using one of the PC's RS-232 communication ports. Job transmission will entail the motoring organisation's computer using {{the recovery}} operator's unique Mobidem number to call his computer.|$|R
40|$|We {{present a}} PVS {{specification}} of an <b>invoicing</b> <b>system.</b> We use PVS's features to structure the specification, to define types and operations on them. We put {{special emphasis on}} PVS's capabilities to add information to a specification meant to be redundant, and to check that this information for consistency. We heavily use the possibility to define the type of some argument to a function depending on values of other arguments to the function, and to let the system automatically generate lemmas to be proved for checking consistency of function declaration and usage. PVS {{is found to be}} helpful because of the automatic support for doing proofs. 1 Introduction This paper reports work done on a case study proposed by a group at IRIN in Nantes, France. A simple <b>invoicing</b> <b>system</b> was to be specified. The case study description presuppose some knowledge about the application field. Questions like the following have to be answered: What does it mean for the stock when an order is invoi [...] ...|$|R
40|$|We {{present the}} {{complete}} process {{of a formal}} specification and verification of the Chilean electronic <b>invoice</b> <b>system</b> which has been defined by the tax agency. We use this case study as a real-world and real-size example to illustrate our methodology for specification and verification of distributed applications. Our approach {{is based on a}} new hierarchical and parameterized model for synchronised networks of labelled transition systems. In this case study, we use a subset of the model as a graphical specification language. We check this formal specification of the <b>invoice</b> <b>system</b> against its informal requirements, described in terms of parameterized temporal logic formulas. Their satisfiability cannot be checked directly on the parameterized model : we introduce a method and a tool to instantiate the parameterized models and properties, allowing to use standard (finite-state, bisimulation-based) model-checkers for the verification. We also illustrate the use of different methods to avoid the state explosion problem by taking advantage of the parameterized structure and instantiations...|$|R
40|$|In this paper, {{we propose}} {{to model the}} <b>invoicing</b> <b>system</b> using UML. The {{modelling}} process supporting our work is inspired form the Objectory method. This approach {{is based on the}} identification of the system needs and on their implementation in the object-oriented paradigm. For the two cases, we start by determining the system functionalities and its interactions with the environment, and then we propose an object-oriented solution for the <b>invoicing</b> <b>system.</b> In case 1, we choose a minimal interpretation of order invoicing which reduces it to an internal process. The second case is viewed {{as an extension of the}} first case. The two cases permit to highlight some aspects of the Objectory method like the primordial importance of requirements capture. 1 Introduction The case study subject is a general definition of order invoicing. In this paper, we use the UML (Unified Modeling Language [1]) formalism to model it. UML is a graphical object-oriented language which unifies the f [...] ...|$|R
40|$|This thesis {{discusses}} how {{the business}} {{value of an}} <b>invoice</b> <b>system</b> could increase {{with the use of}} IT. The issue is analyzed in purpose to determine what business value an electronic <b>invoice</b> <b>system</b> can contribute to from a sender’s perspective and to create a decision base for a recommendation on the eventual usage of electronic invoicing at Volvo Penta. We have performed an inductive exploratory research in order to perform a productive decision analysis. Desk research and in-depth qualitative interviewing were performed during the case study in order to obtain a full overview of the problem area and the present situation. The most obvious business value that comes from an implementation of electronic invoicing is gain in time and cost. Businesses that use electronic invoicing benefit from decreased invoice handling costs, reduced number of days outstanding for receivables and payables data and faster dispute resolution. Depending on how the invoice is distributed; different value can be achieved. The greatest business value is achieved when the electronic invoicing is connected to payment. The most attractive and value adding solution for Volvo Penta i...|$|R
40|$|This bachelor’s thesis {{describes}} web {{system that}} files users of Internet network and {{can work with}} them. The system allows for complete user management, search, organization of IP addresses, tariffs and user’s devices. New users {{can be stored in}} the router Mikrotik RouterBoard. An important part of the system is also billing users. Administrators can show the history of billings, paid and unpaid <b>invoices.</b> <b>System</b> access is allowed only to authorized administrators...|$|R
50|$|First {{conceived}} in the 1950s, the Taiwan government created a uniform <b>invoice</b> <b>system</b> to encourage honest reporting {{of sales and}} prevent underpayment of taxes by businesspeople. To provide an incentive, the government launched a receipt lottery system. Each receipt is coded with an alphanumeric number, and every two months a lottery drawing is held with prizes ranging up to NT$10 million (approximately $335,000 USD as of February 2012) depending on how many numbers match. The lottery is governed by the Uniform Invoice Award Regulations.|$|R
40|$|The {{purpose of}} this bachelor's thesis is to design and {{implement}} multilanguage <b>invoice</b> <b>system</b> of small company or small trader. The system should enable an effective record of billing documents to be bound to the storage card {{and a list of}} partner companies. The applicability of the system should support the import invoices from other commonly used accounting systems. This documentation describes the various technologies used in developing this system and {{a large part of the}} document is devoted to analysis, design and implementation of the solution. ...|$|R
40|$|Primarasa Food Industry is {{a medium}} scale company {{producer}} of soy sauce. The {{problems faced by}} the company {{is the absence of}} a system that provides the integration of the flows of information among parts of a company to do well planning production and sourcing, so it required an ERP system which can integrate the flow of information in the company. In this research will be made the proposal using module manufacturing management and requisition to <b>invoice</b> <b>system</b> ERP in adempire, whisch the stage of its use started from Process Design, that is the adjustment of the company’s business processes with ERP system business process based on Adempire. Data Integration, inserting the companyÂ’s data into Adempire software. Testing, conducting experiment of the use of Adempire software. and the last Evaluation, namely evaluating the result of such use with the use of manufacturing management and requisition to <b>invoice</b> <b>system</b> ERP in Adempire the company can perform planing the production and purchasing properly, in addition the result of the use of the system by the use of software ERP Adempire in primarasa food industry make the data and document become more organized and integrated in all parts. so that gives ease in the process of access the data and document of primarasa food industry...|$|R
40|$|Abstract. An {{approach}} {{is presented to}} guide the benchmarking of <b>invoice</b> analysis <b>systems,</b> a specific, applied subclass of document analysis systems. The {{state of the art}} of benchmarking of document analysis systems is presented, based on the processing levels: Document Page Segmentation, Text Recognition, Document Classification, and Information Extraction. The restriction to invoices enables and requires a more purposeful, i. e. detailed, targetting of the benchmarking procedures (acquisition of ground truth data, system runs, comparison of data, condensation into meaningful numbers). Therefore the processing of invoices is dissected. The involved data structures are elicited and presented. These are provided, being the building blocks of the actual benchmarking of <b>invoice</b> analysis <b>systems.</b> ...|$|R
40|$|Through observations, interviews, {{conversations and}} evaluation, {{knowledge}} regarding the internal <b>invoice</b> <b>system</b> at Riksbyggen was made. The knowledge {{made it possible}} to find areas where users have problems in interacting with the system and where errors made by users mostly occur. Concerns had been raised regarding the current solution preventing workers from performing their duties when their help is needed elsewhere. The results are two design proposals containing information that has been visualized and ideas of how to combine different sources of information to provide users with more knowledge. To evaluate how successful the results are a heuristic evaluation was made on the prototypes' designs...|$|R
40|$|We {{present a}} case study {{describing}} the formal specification and verification of the Chilean electronic <b>invoice</b> <b>system,</b> which has been defined by the Chilean taxes administration. The system is described by graphical specifications consisting of labelled transition systems, composed using synchronisation networks. Both, transition systems and networks, are parameterized. We use verification tools based on Process Algebra theories to check the requirements on those graphical specifications. We introduce a method and a tool to obtain finite systems from these parameterized ones by fixing the parameters domains, so we can use standard tools for verifying properties in finite systems. We also analyse different methods to avoid the state explosion problem {{by taking advantage of}} the parameterized structure and instantiations...|$|R
50|$|An {{e-invoice}} can {{be defined}} as structured invoice data issued in Electronic Data Interchange (EDI) or XML formats, possibly using Internet-based web forms. These documents can be exchanged {{in a number of ways}} including EDI, XML, or CSV files. They can be uploaded using emails, virtual printers, web applications, or FTP sites. The company may use imaging software to capture data from PDF or paper invoices and input it into their <b>invoicing</b> <b>system.</b> This streamlines the filing process while positively impacting sustainability efforts. Some companies have their own in-house e-invoicing process; however, many companies hire a third-party company to implement and support e-invoicing processes and to archive the data on their own servers.|$|R
40|$|Electronic Invoicing {{services}} (e-Invoicing) {{will have}} {{a pivotal role in}} all the stages of handling Value Added Tax (VAT) for European Member States. Through a systematic introduction of e-invoicing, tax administrators will be able to implement new tools and procedures to carry out alternative controls that are less intrusive on the trading partners. Nevertheless, successful European e-invoicing implementations need to be in compliance with the corresponding European Directive 2001 / 115 /EC. Most contemporary e-Invoicing implementations are proprietary and based on EDI, thus demonstrating great deficiencies. This paper presents an open electronic <b>invoicing</b> <b>system</b> named eInvoke, based on XML, XML cryptography and Web Services, that addresses all security requirements imposed by the Directive. © Springer Science + Business Media, LLC 2006...|$|R
40|$|The {{objective}} of this thesis is to analyse the format of electronic invoicing ISDOC. The thesis focuses on purpose of the establishment of this norm and its practical application in the Czech business environment {{and in the process}} of a communication with the state administration through data boxes. It examines legal aspects of the electronic invoicing in the Czech legislative system, as well as the electronic signature usage. Furthermore it compares the format of the ISDOC norm with formats of the electronic data exchange systems, especially with the complex EDI and EbXML standards. The thesis points out {{the advantages and disadvantages of}} ISDOC standard. The economic system WinStrom 10 was chosen as a practical example of the electronic <b>invoicing</b> <b>system.</b> Finally, the thesis proposes the direction of the ISDOC future development, based on own research on small and medium enterprises invocing systems...|$|R
40|$|Abstract—In {{the pure}} model-driven view of {{software}} engineer-ing, models are the sole artifacts {{to be created}} and maintained and executable source code is entirely generated from the models. However, due to the variety of modern platforms and the complexity of capturing them correctly in models, this vision {{has not yet been}} fully realized. In this paper, we propose an approach that allows combining high-level models with low-level code into an executable system. The approach is based on two modeling languages, one presenting a common abstraction of modeling and programming languages, and the other allowing to express the bridge between the model and code. We illustrate our approach using a running example of an <b>invoicing</b> <b>system</b> for which the business logic requirements are captured by an executable model and the requirements on the graphical user interface are directly mocked up using a GUI designer tool that generates Java code. I...|$|R
30|$|The study {{finds that}} eLogistics {{applications}} are generally used by {{majority of the}} participants in three areas: order management systems, booking (customers, carriers) and <b>invoicing</b> <b>systems.</b> They are less used in the remaining areas, although these areas are core activities of logistics sectors. There is a big difference in the use of eLogistics applications among different groups. The Non-SMEs have usage of eLogistics applications in a higher number of areas than the SMEs. The SMEs need to upgrade their technical and financial capability and skills to achieve higher usage of eLogistics applications. Similarly the TLSP have usage of eLogistics applications in a higher number of areas than the Terminal Operator or the Shipper sub-groups. There is a similarity of use of eLogistics applications (a majority use in seven similar areas) between Non-SME and TLSP sub-groups, possibly {{due to the fact that}} most of the TLSPs are Non-SMEs. It can be noted that the shipper group has a very small sample and thus it was disregarded.|$|R
40|$|Motivating {{enterprises}} by {{provision of}} e-government services in Europe {{acts as a}} powerful incentive for enterprises, in particular for small and medium sized enterprises, to adopt electronic ways of working in their dealings with public administration. A leading example is e-procurement, which facilitates the integration of public administration requirements into the work processes of enterprises and so contributes to building of the European business environment that encourages and supports entrepreneurs and competitiveness. New needs arise for e-government services {{in support of this}} type of cross-border users. The introduction of electronic <b>invoicing</b> <b>systems</b> in public administrations would generate savings both for the public bodies as well as the suppliers interacting with it. These activities covered by the IDABC work programme since 2005 produce guidelines for the implementation of e-procurement systems. The objective is to contribute to the use of electronic invoices in the public sector according to the i 2010 e-government action plan and the e-procurement action plan...|$|R
40|$|In {{this paper}} we present the {{specification}} of an "invoicing system": {{two versions of}} it are shown. The first {{does not take into}} account any interaction with the environment while the second considers it. The specifications are written in PoliS, a coordination language based on multiple tuple spaces. The operational semantics of PoliS allows the specification of behavioral aspects of the systems enhancing the dynamics. We have analyzed the specifications with a parser in order to avoid syntax errors, and with a model checker that helps in understanding the dynamics of the system specified. The model checker allowed us to verify some temporal properties on the <b>Invoicing</b> <b>Systems.</b> Some questions have risen due to the incompleteness of the requirements document: we discuss the possible evolutions of the two specifications. 1 Introduction The comparison among formal techniques for the specification of systems is a very interesting research topic. Different questions and solutions raise fr [...] ...|$|R
40|$|A complex paper-based city tax {{collection}} system made Rio de Janeiro a difficult environment {{for business and}} a source of lost revenue when Eduardo Paes became mayor in 2009. Elected on a promise to set the city’s fiscal house in order, Paes planned to implement an electronic <b>invoicing</b> <b>system</b> based on similar programs piloted in other Brazilian cities. A recent constitutional amendment required all levels of Brazil’s federal system of government to ease the burdens of the country’s tax system. Paes reasoned that the potential efficiency gain from a new system was among the few routes available for increasing revenue. His team had to overcome significant challenges to implement the new system and ensure participation by consumers in monitoring tax payments. Strong political and technical leadership, collaboration, and good design helped to successfully implement the new system, called Nota Carioca. This case study offers other governments at the national or subnational levels useful lessons in improving revenue administration and implementing reforms that feature information technology, stakeholder communication, and partnerships...|$|R
40|$|In [11] M. Jackson {{introduces}} {{the concept of}} problem frame to describe specific classes of problems, {{to help in the}} specification and design of systems, and also to provide a framework for reusability. He thus identifies some particular frames, such as the translation frame (e. g., a compiler), the information system frame, the control frame (or reactive system frame),.... Each frame is described along three viewpoints that are application domains, requirements, and design. Our aim is to use Casl (or possibly a sublanguage or an extension of Casl if and when appropriate) to formally specify the requirements and the design of particular classes of problems (“problem frames”). This goal is related to methodology issues for Casl, that are here addressed in a more specific way, having in mind some particular problem frame, i. e., a class of systems. It is hoped that this will provide both a help in using, in a really effective way, Casl for system specifications, a link with approaches that are currently used in the industry, and a framework for the reusability. This approach is illustrated with some case studies, e. g., the information system frame is illustrated with the <b>invoice</b> <b>system...</b>|$|R
40|$|This is not {{a typical}} {{scientific}} paper. It does not present a new method, with careful experiments to evaluate it, and detailed references to related work. Rather, it recounts some of my experiences over the last 15 years, working with QuickCheck, and its purpose is as much to entertain as to inform. QuickCheck is a random testing tool that Koen Claessen and I invented, which has since become the testing tool of choice in the Haskell community. In 2006 I co-founded Quviq, to develop and market an Erlang version, which we have since applied {{for a wide variety}} of customers, encountering many fascinating testing problems as a result. This paper introduces Quviq QuickCheck, and in particular the extensions made for testing stateful code, via a toy example in C. It goes on to describe the largest QuickCheck project to date, which developed acceptance tests for AUTOSAR C code on behalf of Volvo Cars. Finally it explains a race detection method that nailed a notorious bug plaguing Klarna, northern Europe’s market leader in <b>invoicing</b> <b>systems</b> for e-commerce. Together, these examples give a reasonable overview of the way QuickCheck has been used in industrial practice...|$|R
5000|$|Sample #1 - DI-API: Create an A/R <b>Invoice</b> in the <b>system</b> (company)var <b>invoice</b> = (Documents) company.GetBusinessObject(BoObjectTypes.oInvoices);//Invoice Header Datainvoice.CardCode = [...] "C20000";invoice.DocDate = DateTime.Today;//Invoice Line Data var lines = invoice.Lines;lines.ItemCode = [...] "A0001";lines.Quantity = 2.0;lines.Price = 200.0;lines.Currency = [...] "EUR";//Add invoice to systeminvoice.Add (...) ...|$|R
40|$|This paper {{aimed at}} {{exploring}} {{the transition to}} electronic invoicing in real business settings {{with a focus on}} the transition experiences and post-implementation benefits withdrawn up to the present. To obtain detail-rich findings, multiple case study research was preferred over other research methods. The results of the three case studies were analysed through the prism of IT business value literature and compared to other papers on benefits of e-invoicing. The cases showed that electronic invoice handling technology enhanced control over company invoicing, allowed better management of payables, and indeed increased labour productivity in invoice handling units. These and other realized benefits, such as processing time and cost savings, reduced interest on over due payments, decreased paper waste, etc., are expected to grow as the level of true e-invoice penetration and the development condition of the technology itself will mature. Due to insufficiency of data, the re-utilization patterns of labour released after the automation of invoicing in other more productive duties across the organization were found indecisive. As a transactional type of IT that is prone to network externalities, electronic <b>invoicing</b> <b>system</b> is posited to aid company financials largely through contracting costs, rather than boosting sales. Besides the theoretical implications, the paper also offers practical considerations for implementation of electronic invoice processing technology and further promotion of e-invoicing...|$|R
40|$|MVC {{architecture}} {{is one of}} the most known and used architecture for application development, for both web and desktop based application. New architecture evolved though thanks to the fast-growing industry and it brings new practices that are much more convenient to use. The main goal of this theses is to describe how Redux library, which is based on this new architecture, is used for application development. Redux is only a state management library, another library is needed for creating the user interface. It is possible to create the user interface from the scratch but it takes a lot of time and it is difficult to scale. React library is possibly the most favorite library for creating UI and it works well together with Redux. For these reasons, React was selected as the UI library that will be used in this thesis. While theoretical part of this thesis is focused on describing principles Redux and React libraries are based upon and the best practices for using these libraries, practical part is focused on using the theoretical knowledge in the real world, demonstrated on the web application for invoicing. Development of the <b>invoicing</b> <b>system</b> is described in a way that demonstrates to the reader how to approach web application development, what does it contain and where to start...|$|R
40|$|Length of stay (LOS) has {{important}} implications in various aspects of health services, can vary according {{to a wide range}} of factors. It is noticed that LOS has been neglected mostly in both theoratical studies and practice of health care management in Turkey. The main purpose of this study is to identify factors related to LOS in Turkey. A retrospective analysis of 2. 255. 836 patients hospitalized to private, university, foundation university and other (municipality, association and foreigners/minority hospitals) hospitals which have an agreement with Social Security Institution (SSI) in Turkey, from January 1, 2010, until the December 31, 2010, was examined. Patient’s data were taken from MEDULA (National Electronic <b>Invoice</b> <b>System)</b> and SPSS 18. 0 was used to perform statistical analysis. In this study t-test, one way anova and multinomial logistic regression are used to determine variables that may affect to LOS. The average LOS of patients was 3, 93 days (SD = 5, 882). LOS showed a statistically significant difference according to all independent variables used in the study (age, gender, disease class, type of hospitalization, presence of comorbidity, type and number of surgery, season of hospitalization, hospital ownership/bed capacity/ geographical region/residential area/type of service). According to the results of the multinomial lojistic regression analysis, LOS was negatively affected in terms of gender, presence of comorbidity, geographical region of hospital and was positively affected in terms of age, season of hospitalization, hospital bed capacity/ ownership/type of service/residential area...|$|R
40|$|The globalized market pushes {{companies}} {{to expand their}} business boundaries {{to a whole new}} level. In order to efficiently support this environment, business transactions must be executed over the Internet. However, there are several factors complicating this process, such as the current state of electronic invoices. Electronic invoice adoption is not widespread because of the current format fragmentation originated by national regulations. In this paper we present an approach based on Model-Driven Engineering techniques and abstractions for supporting the core functions of <b>invoice</b> management <b>systems.</b> We compare our solution with the traditional implementations and try to analyze the advantages MDE can bring to this specific domain...|$|R
