28|137|Public
25|$|The arithmetical triangle— a <b>graphical</b> <b>diagram</b> showing {{relationships}} among the binomial coefficients— was presented by mathematicians in treatises dating {{as far back as}} the 10th century, and would eventually become known as Pascal's triangle. Later, in Medieval England, campanology provided examples of what is now known as Hamiltonian cycles in certain Cayley graphs on permutations.|$|E
5000|$|When {{drawing the}} <b>graphical</b> <b>diagram</b> (flow chart), start and ending points should be always {{composed}} before tasks.|$|E
50|$|In essence jBPM takes {{graphical}} process descriptions as input. A {{process is}} composed of tasks that are connected with sequence flows. Processes represent an execution flow. The <b>graphical</b> <b>diagram</b> (flow chart) of a process is {{used as the basis}} for the communication between non-technical users and developers.|$|E
50|$|LinSig for Windows Version 1 {{retained}} the same modelling capabilities as the earlier DOS versions but provided a Windows interface. This version also introduced <b>graphical</b> <b>diagrams</b> into the software showing {{information such as}} the junction's lane layout and the traffic signal controller's staging and phasing.|$|R
50|$|MetaEdit {{was limited}} to {{supporting}} one modeling language at a time, one user at a time, and one representational paradigm - <b>graphical</b> <b>diagrams.</b> MetaEdit+ was designed to extend this to multiple integrated modeling languages, multiple simultaneous users, and multiple representational paradigms - diagrams, matrices and tables.|$|R
40|$|The {{study of}} visual {{programming}} {{was once an}} active field of study, but journal articles on the topic post 1990 ’s are rare. Yet the idea of visual programming is no less valid. <b>Graphical</b> <b>diagrams</b> and modelling tools continue {{to be used to}} aid programming. Integrated development environments (IDEs) rely increasingl...|$|R
50|$|Process Customization is {{achieved}} through JBPM (Java Business Process Management), {{which is an}} open source, flexible and extensible executable work-flow framework. It takes graphical process descriptions as input. A process is composed of tasks that are connected with sequence flows. Processes represent an execution flow. The <b>graphical</b> <b>diagram</b> (flow chart) of a process is {{used as the basis}} for the communication between non-technical users and developers.|$|E
50|$|The {{philosopher and}} {{astronomer}} Rabbi Abraham ibn Ezra (c. 1140) counted the permutations with repetitions in vocalization of Divine Name. He also established the symmetry of binomial coefficients, while a closed formula was obtained {{later by the}} talmudist and mathematician Levi ben Gerson (better known as Gersonides), in 1321.The arithmetical triangle— a <b>graphical</b> <b>diagram</b> showing relationships among the binomial coefficients— was presented by mathematicians in treatises dating {{as far back as}} the 10th century, and would eventually become known as Pascal's triangle. Later, in Medieval England, campanology provided examples of what is now known as Hamiltonian cycles in certain Cayley graphs on permutations.|$|E
50|$|Ladder logic {{has evolved}} into a {{programming}} language that represents a program by a <b>graphical</b> <b>diagram</b> based on the circuit diagrams of relay logic hardware. Ladder logic is used to develop software for programmable logic controllers (PLCs) used in industrial control applications. The name is based on the observation that programs in this language resemble ladders, with two vertical rails and a series of horizontal rungs between them. While ladder diagrams were once the only available notation for recording programmable controller programs, today other forms are standardized in IEC 61131-3 (For example, {{as an alternative to the}} graphical ladder logic form, there is also a more assembly language like format called Instruction list within the IEC 61131-3 standard.).|$|E
50|$|Simple or complex {{statistical}} {{problems can}} be simulated, edited and solved individually with the Statistical Lab. It can be extended by using external libraries. Via these libraries, {{it can also be}} adapted to individual and local demands like specific target groups. The versatile <b>graphical</b> <b>diagrams</b> allow demonstrative visualization of underlying data.|$|R
40|$|Abstract: The {{foundation}} of a generic modelling tool is its flexible diagramming facility. The paper proposes a universal graphical editor definition language based on logical metamodel extended by presentation classes. Some more advanced diagram definition facilities such as patterns and diagram cores are also introduced. Implementation principles of this language, based on <b>Graphical</b> <b>Diagramming</b> Engine are briefly described. Key words: modelling tool, graphical editor, metamodel, editor definition language 1...|$|R
40|$|Space science {{projects}} are reported individually {{for the period}} January 1, 1972 through December 31, 1972. The articles, representing both theoretical and experimental study approaches, present highlights of the research, along with <b>graphical</b> <b>diagrams</b> of important results. Subjects range from laboratory astrophysics to balloon-borne infrared astronomy, from lunar studies to stellar evolution, and from planetary atmospheric investigations to climatology. Applications of research {{for the same period}} are also reviewed, along with their attendant results...|$|R
5000|$|In the Middle Ages, {{combinatorics}} {{continued to}} be studied, largely outside of the European civilization. The Indian mathematician Mahāvīra (c. 850) provided formulae {{for the number of}} permutations and combinations, and these formulas may have been familiar to Indian mathematicians as early as the 6th century CE. [...] The philosopher and astronomer Rabbi Abraham ibn Ezra (c. 1140) established the symmetry of binomial coefficients, while a closed formula was obtained later by the talmudist and mathematician Levi ben Gerson (better known as Gersonides), in 1321.The arithmetical triangle— a <b>graphical</b> <b>diagram</b> showing relationships among the binomial coefficients— was presented by mathematicians in treatises dating {{as far back as the}} 10th century, and would eventually become known as Pascal's triangle. Later, in Medieval England, campanology provided examples of what is now known as Hamiltonian cycles in certain Cayley graphs on permutations.|$|E
40|$|In this paper, an MDE-based {{approach}} to tool building is described. It {{is based on}} a core tool definition metamodel and an interpreter of this metamodel. Besides, an extension of the core metamodel is proposed, allowing for tool-specific model transformations to enrich the behavior of the universal interpreter. As a result, a novel wide-profile tool building platform is obtained. The visualization component of the platform {{is based on a}}n original high-performance <b>graphical</b> <b>diagram</b> presentation engine which embodies advanced graph drawing algorithms...|$|E
30|$|Analysts {{can also}} add a {{decision}} model and connect the model’s options {{to the goals}} and KPIs of the organization. A decision model outlines the different options available to organizations to achieve their goals. This diagram helps managers to visualize the options and define GRL strategies that reflect the result of selecting one of the options. Note {{that this is not}} a new type of <b>graphical</b> <b>diagram</b> and it is only a terminology choice in our methodology to isolate the decision options from goal and performance models.|$|E
30|$|Where, τ 2 is {{the measure}} of {{covariance}} (scale), τ 3 {{is the measure}} of skewness (shape) with values ranging from 0 to 1, and τ 4 is the measure of kurtosis (peakedness). Notable, these ratio estimator equations and their <b>graphical</b> <b>diagrams</b> are particularly good to identify the distributional properties of highly skewed data. Thus, following the above equations rainfall of 6 -h, 12 -h and 24 -h L-moments ratio for each region has shown in this study.|$|R
30|$|The {{concentration}} of various ions as obtained from chemical analysis of ground water samples {{were converted to}} milliequivalent/litre (meq/L) and used to derive certain parameters. They are SAR, SSP, MAR, RSC, PI, KR and total hardness (TH). These parameters help to evaluate the irrigational suitability of ground water in the study area. Moreover, these values were plotted on <b>graphical</b> <b>diagrams</b> like U.S. Salinity, Wilcox, Doneen and Piper to determine the suitability of ground water for agricultural and drinking purposes.|$|R
40|$|This {{thesis is}} {{the review of}} the most used {{personal}} elevator systems, both less and more known ones. Their clasification according to the type of their drive and summary of their advantages, disadvantages and usage in different buildings is introduced in this thesis. Also description of how different systems work, the mode of their functionality and various modifications are mentioned in this summary together with the <b>graphical</b> <b>diagrams.</b> Considerable accent is put on modern systems mostly used in last years...|$|R
40|$|A {{scientific}} article {{can only}} be submitted to one conference. The purpose of this work {{is to create a}} web application which will aid in determining where a given article can still be submitted, using mainly a <b>graphical</b> <b>diagram.</b> The text itself first provides a detailed specification of the problem, then it discusses the choice of individual technologies and the general implementation approach. The following section then briefly describes some implementation details and suggests areas for expansion of the project. The last chapter is dedicated to technical and licensing considerations. The result of the work is a working web application designed for use in academic circles and for further refinement...|$|E
40|$|The CORAS {{security}} risk modelling {{language is a}} customised graphical language for com- munication, documentation and analysis of security threat and risk scenarios. We present a textual syntax and a structured semantics {{for each of the}} five different types of CORAS di- agrams, together with step-by-step instructions on how to translate a <b>graphical</b> <b>diagram</b> via the textual syntax into a readable paragraph of English, using the structured semantics. This enables users of the CORAS language to easily extract the precise meaning of a given diagram. The semantics is modular {{in the sense that the}} semantics of a diagram can be deduced from the semantics of its elements and relations. Oppdragsgiver: n/...|$|E
40|$|The GeneNet {{database}} {{is designed}} for accumulation of information on gene networks. Original technology applied in GeneNet enables description of not only a gene network structure and functional relationships between components, but also metabolic and signal transduction pathways. Specialised software, GeneNet Viewer, automatically displays the <b>graphical</b> <b>diagram</b> of gene networks described in the database. Current release 3. 0 of GeneNet database contains descriptions of 25 gene networks, 945 proteins, 567 genes, 151 other substances and 1364 relationships between components of gene networks. Information distributed between 14 interlinked tables was obtained by annotating 968 scientific publications. The SRS-version of GeneNet database is freely available ([URL]...|$|E
40|$|This article {{presents}} {{a simple and}} rather precise method for analysis and design of a transformer-coupled input rectifier with a filter capacitor, which {{is used as a}} power supply for electronic circuits. It is based on an original logarithmic equation that determines the conduction angle of the rectifier diodes {{as a function of the}} transformer equivalent resistance. This equation can replace the classical design procedure that is based on coefficients taken from nonlinear <b>graphical</b> <b>diagrams.</b> Some experimental results that verify the proposed theory are also presented...|$|R
2500|$|State <b>diagrams,</b> <b>graphical</b> {{representations}} of finite state machines ...|$|R
40|$|<b>Graphical</b> <b>diagrams</b> are {{the main}} {{modelling}} constructs offered by the popular modelling language UML. Because textual representations of models also have their benefits, we investigated the integration of textual and graphical modelling languages, by comparing two approaches. One approach uses grammarware and the other uses modelware. As a case study, we implemented two versions of a textual alternative for Activity Diagrams, which {{is an example of}} a surface language. This paper describes our surface language, the two approaches, and the two implementations that follow these approaches. Keywords: Grammarware; modelware; surface language...|$|R
40|$|When {{working with}} {{diagrams}} in visual environments like <b>graphical</b> <b>diagram</b> editors, diagrams {{have to be}} represented by an internal model. Graphs and hypergraphs are well-known concepts for such internal models. This paper shows how hypergraphs can be uniformly used {{for a wide range}} of different diagram types where hyperedges are used to represent diagram components as well as spatial relationships between components. This paper also proposes a procedure for translating diagrams into their hypergraph model, i. e., a graphical scanner, and a procedure to check the hypergraph against a hypergraph grammar defining the diagrams' syntax, i. e., a parsing procedure. Such procedures are necessary to make use of such a hypergraph model in visual environments that support free-hand editing where the user can modify diagrams arbitrarily...|$|E
40|$|In {{this paper}} we {{introduce}} a novel wide-profile graphical tool-building platform GrTP {{which is based}} on the principle of separating semantic domain model processing and user interface components. This principle is enabled in GrTP by a meta-model for visual information presentation (“interface meta-model”). A novel feature of GrTP is that it consistently bases all work of connecting the domain and interface models on model transformations. These transformations can be produced for different domain models, thus obtaining concrete tools tailored to specific domains within GrTP. The visualization component of GrTP is based on an original high-performance <b>graphical</b> <b>diagram</b> presentation engine which embodies advanced graph drawing algorithms. The paper explains the GrTP platform along with the first practical experience of its usage...|$|E
40|$|Abstract. When {{working with}} {{diagrams}} in visual environments like <b>graphical</b> <b>diagram</b> editors, diagrams {{have to be}} represented by an internal model. Graphs and hypergraphs are well-known concepts for such internal models. This paper shows how hypergraphs can be uniformly used {{for a wide range}} of different diagram types where hyperedges are used to represent diagram components as well as spatial relationships between components. This paper also proposes a procedure for translating diagrams into their hypergraph model, i. e., a graphical scanner, and a procedure to check the hypergraph against a hypergraph grammar defining the diagrams ’ syntax, i. e., a parsing procedure. Such procedures are necessary to make use of such a hypergraph model in visual environments that support free-hand editing where the user can modify diagrams arbitrarily. ...|$|E
40|$|Virtual knot {{theory is}} a {{generalization}} (discovered {{by the author}} in 1996) of knot theory {{to the study of}} all oriented Gauss codes. (Classical knot theory is a study of planar Gauss codes.) Graph theory studies non-planar graphs via <b>graphical</b> <b>diagrams</b> with virtual crossings. Virtual knot theory studies non-planar Gauss codes via knot diagrams with virtual crossings. This paper gives basic results and examples (such as non-trivial virtual knots with trivial Jones polynomial), studies fundamental group and quandles of virtual knots, extensions of the bracket and Jones polynomials, quantum link invariants with virtual framings, Vassiliev invariants and applications to knots in thickened surfaces. Comment: LaTeX, 53 pages, 25 figure...|$|R
40|$|We compare several belief fusion methods, {{including}} the proportional conflict redistribution rules (PCR 5 and PCR 6) for multiple sources. The PCR fusion of evidence methods have shown {{improvement over the}} classical Dempster-Shafer and Bayesian fusion techniques {{in the presence of}} conflicting information. The PCR 6 rule shows improvement over PCR 5 when the number of sources increases. Using Hasse <b>graphical</b> <b>diagrams,</b> we highlight the comparison between the methods. To our knowledge, this is the first such comparison between PCR 5 and PCR 6 with more than two sources. The results point toward a transition between PCR 5 and PCR 6 at three sources...|$|R
40|$|In {{this paper}} a {{graphical}} representation of rules is proposed. The graphical rules are formulated based on Extended Entity-Relationship (EER) diagrams. Such diagrams are compiled into an object-oriented language code that is {{included as a}} component of the developed software system. Other components can be directly coded in an object-oriented language or generated using other graphical tools. We identify and discuss two types of graphical rules: class graphical rules and instance graphical rules. The syntax and semantics of both types of graphical rules are discussed. The graphical rules can contain object-oriented code in addition to <b>graphical</b> <b>diagrams.</b> The methods of integration of diagrams and object-oriented code are described...|$|R
40|$|When {{working with}} {{diagrams}} in visual environments like <b>graphical</b> <b>diagram</b> editors, diagrams {{have to be}} represented by an internal model. Graphs and hypergraphs are well-known concepts for such internal models. This paper shows how hypergraphs can be uniformly used {{for a wide range}} of different diagram types where hyperedges are used to represent diagram components as well as spatial relations between components. Using such an internal model requires a method for translating diagrams into their hypergraph model. Such a graphical scanning method is proposed in this paper. The scanner makes use of a specification of the diagram language. Since the scanner also considers how diagram components are embedded into their context, it is applicable to a wide range of diagram languages and their hypergraph models. Introduction Diagrams are a powerful means to represent complex situations since they directly support visualizing multidimensional relations. The field of visual langua [...] ...|$|E
40|$|Modern {{structural}} equation modeling software programs include user interfaces for the entry of graphical diagrams as a method {{for the production of}} the underlying matrices that are then manipulated in traditional ways to provide parameter estimates and fit statistics. This work presents an algorithm for the solution of the problem in the reverse order: automatically producing a <b>graphical</b> <b>diagram</b> from a matrix formula {{in such a way that}} its components are logically and hierarchically arranged. In the process, the individual path components of expected covariance between variables are calculated and feedback loops or so–called nonrecursive paths are recognized and tagged. Possible uses for this algorithm include automatic recognition of regions of structural underidentification in a model and the didactic graphical display of the components of expected covariance between variables. This algorithm relies on the matrix equations of McArdle and McDonald (1984), a general purpose SEM formulation...|$|E
40|$|AbstractThe {{growth of}} nursing {{databases}} necessitates {{new approaches to}} data analyses. These databases, which {{are known to be}} massive and multidimensional, easily exceed the capabilities of both human cognition and traditional analytical approaches. One innovative approach, knowledge discovery in large databases (KDD), allows investigators to analyze very large data sets more comprehensively in an automatic or a semi-automatic manner. Among KDD techniques, Bayesian networks, a state-of-the art representation of probabilistic knowledge by a <b>graphical</b> <b>diagram,</b> has emerged in recent years as essential for pattern recognition and classification in the healthcare field. Unlike some data mining techniques, Bayesian networks allow investigators to combine domain knowledge with statistical data, enabling nurse researchers to incorporate clinical and theoretical knowledge into the process of knowledge discovery in large datasets. This tailored discussion presents the basic concepts of Bayesian networks and their use as knowledge discovery tools for nurse researchers...|$|E
5000|$|... #Caption: Figure 10: Amplitude {{diagram of}} a 10th order Chebyshev filter plotted using a Bode Plotter application. The chebyshev {{transfer}} function {{is defined by}} poles and zeros which are added by clicking on a <b>graphical</b> complex <b>diagram.</b>|$|R
5000|$|Reverse {{engineering}} {{in this context}} means, that the UML tool reads program source code as input and derives model data and corresponding <b>graphical</b> UML <b>diagrams</b> from it (as opposed to the somewhat broader meaning described in the article [...] "Reverse engineering").|$|R
40|$|Presented thesis {{deals with}} the use of {{transactional}} analysis in psychotherapy, counceling and helping professions. Theoretical part is dedicated to philosophy and history of this specialization, history of ČATA organization in Czech Republic, definition of key words and possibility of using transaction analysis. Practical part is formed by specific cases, which are gained throught the interviews held at the Alien Police Inspectorate, Longterm Residence Permit Group in České Budějovice which uses the analyse of Eric Berne´s games mentioned in transactional analysis. Parts of specific cases are features of games, interviews, <b>graphical</b> <b>diagrams,</b> analysis and evalutions. The aim of this work is to stress the importace of using the Eric Berne´s games in helping professions...|$|R
