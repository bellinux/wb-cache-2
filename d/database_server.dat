1293|1593|Public
25|$|Ruby on Rails is {{typically}} deployed with a <b>database</b> <b>server</b> such as MySQL or PostgreSQL, and a web server such as Apache running the Phusion Passenger module.|$|E
25|$|Visual InterDev: Visual InterDev {{was used}} to create web {{applications}} using Microsoft Active Server Pages (ASP) technologies. It supports code completion and includes <b>database</b> <b>server</b> management tools. It has been replaced with Microsoft Visual Web Developer.|$|E
25|$|In January 2005, {{the project}} ran on 39 {{dedicated}} servers in Florida. This configuration included a single master <b>database</b> <b>server</b> running MySQL, multiple database servers, 21 web servers running the Apache HTTP Server, and seven Squid cache servers.|$|E
50|$|Examples of {{proprietary}} <b>database</b> <b>servers</b> include Oracle, DB2, Informix, and Microsoft SQL Server. Examples of {{free software}} <b>database</b> <b>servers</b> include PostgreSQL; {{and under the}} GNU General Public Licence include Ingres and MySQL. Every server uses its own query logic and structure. The SQL (Structured Query Language) query language {{is more or less}} the same on all relational <b>database</b> <b>servers.</b>|$|R
50|$|Exadata is {{available}} in two variants: one based on two-socket <b>database</b> <b>servers</b> and the other based on eight-socket <b>database</b> <b>servers.</b> The two models differ only in the hardware used for the compute servers. The networking, storage servers and software are the same in both models.|$|R
50|$|Web <b>Servers,</b> Document <b>Servers,</b> <b>Database</b> <b>Servers,</b> and Email Servers.|$|R
25|$|In 1990 Gunther joined Pyramid Technology (now part of Fujitsu Siemens Computers) {{where he}} held {{positions}} as Senior Scientist and Manager of the Performance Analysis Group that {{was responsible for}} attaining industry-high TPC benchmarks on their Unix multiprocessors. He also performed simulations {{for the design of}} the Reliant RM1000 parallel <b>database</b> <b>server.</b>|$|E
25|$|Microsoft SQL Server is a {{relational}} {{database management system}} developed by Microsoft. As a <b>database</b> <b>server,</b> it is a software product with the primary function of storing and retrieving data as requested by other software applicationsâ€”which may run either on the same computer or on another computer across a network (including the Internet).|$|E
25|$|However, {{two weeks}} after its introduction, David Litchfield, Alexander Kornbrust, Cesar Cerrudo and others {{demonstrated}} a whole suite of successful attacks against Oracle products. Oracle Corporation's chief security officer Mary Ann Davidson said that, rather than representing a literal claim of Oracle's products' impregnability, she saw the campaign {{in the context of}} fourteen independent security evaluations that Oracle Corporation's <b>database</b> <b>server</b> had passed.|$|E
50|$|With in-memory {{processing}} the source database is queried only once instead of accessing the database {{every time a}} query is run, thereby eliminating repetitive processing and reducing the burden on <b>database</b> <b>servers.</b> By scheduling to populate the in-memory database overnight, the <b>database</b> <b>servers</b> {{can be used for}} operational purposes during peak hours.|$|R
5000|$|Clients {{can include}} <b>database</b> <b>servers,</b> {{application}} servers, file servers, and individual workstations.|$|R
40|$|Advanced {{telecommunication}} {{applications are}} {{often based on}} a multi-tier architecture, with application <b>servers</b> and <b>database</b> <b>servers.</b> With a rapidly increasing {{development of cloud computing}} and data centers, characterizations of the dynamics for <b>database</b> <b>servers</b> during changing workloads will be a key factor for analysis and performance improvements in these applications. We propose a multi-step ahead response time predictor for database queries based on a nonlinear autoregressive neural network model with exogenous inputs. The estimator shows many promising characteristics which make it a viable candidate for being implemented in admission control products for <b>database</b> <b>servers.</b> Performance of the proposed predictor is evaluated through experiments on a lab setup with a MySQL-server...|$|R
25|$|The {{protocol}} layer implements the external interface to SQL Server. All operations {{that can be}} invoked on SQL Server are communicated to it via a Microsoft-defined format, called Tabular Data Stream (TDS). TDS is an application layer protocol, used to transfer data between a <b>database</b> <b>server</b> and a client. Initially designed and developed by Sybase Inc. for their Sybase SQL Server relational database engine in 1984, and later by Microsoft in Microsoft SQL Server, TDS packets can be encased in other physical transport dependent protocols, including TCP/IP, named pipes, and shared memory. Consequently, access to SQL Server is available over these protocols. In addition, the SQL Server API is also exposed over web services.|$|E
25|$|Feedback loops provide generic {{mechanisms}} for controlling the running, maintenance, {{and evolution of}} software and computing systems. Feedback-loops are important models in the engineering of adaptive software, as they define the behaviour of the interactions among the control elements over the adaptation process, to guarantee system properties at run-time. Feedback loops and foundations of control theory have been successfully applied to computing systems. In particular, they have been applied {{to the development of}} products such as IBM's Universal <b>Database</b> <b>server</b> and IBM Tivoli. From a software perspective, the autonomic (MAPE, monitor analyze plan execute) loop proposed by researchers of IBM is another valuable contribution to the application of feedback loops to the control of dynamic properties and the design and evolution of autonomic software systems.|$|E
25|$|Originally {{introduced}} as a post-release add-on for SQL Server 2000, Notification Services was bundled {{as part of}} the Microsoft SQL Server platform for the first and only time with SQL Server 2005. SQL Server Notification Services is a mechanism for generating data-driven notifications, which are sent to Notification Services subscribers. A subscriber registers for a specific event or transaction (which is registered on the <b>database</b> <b>server</b> as a trigger); when the event occurs, Notification Services can use one of three methods {{to send a message to}} the subscriber informing about the occurrence of the event. These methods include SMTP, SOAP, or by writing to a file in the filesystem. Notification Services was discontinued by Microsoft with the release of SQL Server 2008 in August 2008, and is no longer an officially supported component of the SQL Server database platform.|$|E
5000|$|SQL Interaction Mode, a mode for {{interacting}} with various flavours of SQL <b>database</b> <b>servers.</b>|$|R
5000|$|Information Management Software [...] - [...] <b>database</b> <b>servers</b> and tools, text analytics, {{and content}} management.|$|R
5000|$|... run {{processes}} that consume resources (CPU, memory, disk, network) on the Web and <b>database</b> <b>servers</b> ...|$|R
2500|$|The [...] "glue" [...] module, {{which is}} a DLL, is loaded into memory and becomes the {{interface}} to the MKDE. The MKDE then determines whether it is configured to be a workstation-based configuration or a server-based configuration. It then passes requests via its communications [...] "requester" [...] module onto the <b>database</b> <b>server,</b> or directly modifies the database files if configured in workstation mode.|$|E
2500|$|SQL Server Replication Services {{are used}} by SQL Server to {{replicate}} and synchronize database objects, either in entirety or {{a subset of the}} objects present, across replication agents, which might be other database servers across the network, or database caches on the client side. Lulla follows a publisher/subscriber model, i.e., the changes are sent out by one <b>database</b> <b>server</b> ("publisher") and are received by others ("subscribers"). SQL Server supports three different types of replication: ...|$|E
2500|$|In the Ensembl project, {{sequence}} {{data are}} {{fed into the}} gene annotation system (a collection of software [...] "pipelines" [...] written in Perl) which creates a set of predicted gene locations and saves them in a MySQL database for subsequent analysis and display. Ensembl makes these data freely accessible to the world research community. All the data and code produced by the Ensembl project is available to download, {{and there is also}} a publicly accessible <b>database</b> <b>server</b> allowing remote access. In addition, the Ensembl website provides computer-generated visual displays of much of the data.|$|E
50|$|The company {{provided}} a critically acclaimed relational {{database management system}} (RDBMS) and supporting parallel-processing <b>database</b> <b>servers.</b>|$|R
50|$|This article {{covers the}} {{infrastructure}} domain of service-orientation. Key aspects of service-oriented infrastructure include industrialisation and virtualisation, providing IT infrastructure services via {{a pool of}} resources (web <b>servers,</b> application <b>servers,</b> <b>database</b> <b>servers,</b> servers, storage instances) instead of through discrete instances.|$|R
5000|$|Amazon Relational Database Service (RDS) {{provides}} scalable <b>database</b> <b>servers</b> with MySQL, Oracle, SQL Server, and PostgreSQL support.|$|R
2500|$|Performance/scalability: In 2008, {{performance}} tests between Drupal 6.1 and Joomla 1.5 demonstrated that Drupal's pages were delivered [...] "significantly faster" [...] {{than those of}} Joomla. Despite this, arguments over speed persist. Drupal {{is likely to be}} slower than a special-purpose application for a given task. For example, WordPress typically outperforms Drupal as a single-user blogging tool. Drupal positions itself for broader applications requirements that are outside the scope of more narrowly focused applications. Drupal offers caching to store various page elements, the use of which resulted in a 508% improvement in one benchmark. When using Drupal's default Page Cache mechanism, the cached pages are delivered only to anonymous users, so contributed modules must be installed to allow caching content for logged in users. Like performance, scalability (the ability to add servers to handle growing numbers of visitors with consistent response) can become a concern on large, interactive sites. MySQL's query caching can help reduce the load on the <b>database</b> <b>server</b> caused by Drupal's high query rate. Drupal caches database schema metadata as well as elements such as blocks, forms and menus. Drupal 7 increases performance in database queries and reduces PHP code usage.|$|E
5000|$|Database {{load testing}} {{measures}} {{the capacity of}} the <b>database</b> <b>server</b> to handle queries as well as the response time of <b>database</b> <b>server</b> and client.|$|E
50|$|With all of {{the program}} code {{centralised}} on the <b>database</b> <b>server</b> as well the data, all client nodes can be programmed {{as if they were}} running on the <b>database</b> <b>server.</b>|$|E
5000|$|SQLObject (Model) - data backend {{that can}} create a {{database}} or interface with existing data on many <b>database</b> <b>servers.</b>|$|R
3000|$|... the {{capacity}} W {{of each of}} the <b>database</b> <b>servers</b> based on some configuration information of the distributed database system [...]...|$|R
40|$|Recently, several middleware-based {{approaches}} have been proposed. If we implement all functionalities of database replication {{only in a}} middleware layer, we can avoid {{the high cost of}} modifying existing <b>database</b> <b>servers</b> or scratchbuilding. However, it is a big challenge to propose middleware which can enhance performance and scalability without modification of <b>database</b> <b>servers</b> because the restriction may cause extra overhead. Unfortunately, many existing middleware-based approaches suffer from several shortcomings, i. e., some cause a hidden deadlock, some provide only table-level locking, some rely on total order communication tools, and others need to modify existing <b>database</b> <b>servers.</b> In this paper, we propose Pangea, a new eager database replication middleware guaranteeing snapshot isolation that solves the drawbacks of existing middleware by exploiting the property of the first updater wins rule. We have implemented the prototype of Pangea on top of PostgreSQL servers without modification. An advantage of Pangea is that it uses less than 2000 lines of C code. Our experimental results with the TPC-W benchmark reveal that, compared to an existing middleware guaranteeing snapshot isolation without modification of <b>database</b> <b>servers,</b> Pangea provides better performance in terms of throughput and scalability...|$|R
50|$|Also, a local object pool enables {{some parts}} of the {{execution}} to be deferred from the <b>database</b> <b>server</b> (e.g. tuple insertion and deletion, DDL statements), thus lowering the <b>database</b> <b>server</b> load.|$|E
50|$|With {{its failure}} in office {{automation}} products, Informix refocused {{on the growing}} <b>database</b> <b>server</b> market. In 1994, {{as part of a}} collaboration with Sequent Computer Systems, Informix released its version 6.00 <b>database</b> <b>server,</b> which featured its new Dynamic Scalable Architecture, DSA.|$|E
50|$|Versant FTS: High Availability <b>Database</b> <b>Server.</b>|$|E
5000|$|Physical {{damage to}} <b>database</b> <b>servers</b> caused by {{computer}} room fires or floods, overheating, lightning, accidental liquid spills, static discharge, electronic breakdowns/equipment failures and obsolescence; ...|$|R
50|$|A full InterBase server {{installation}} requires around 40 MB on disk. This {{is significantly}} {{smaller than the}} client installation of many competing <b>database</b> <b>servers.</b> The server uses very little memory when idle. A minimum InterBase client install requires about 400 KB of disk space.|$|R
50|$|<b>Database</b> <b>servers,</b> {{that provide}} access to a shared {{database}} via a database device driver, are not regarded as file servers as they may require Record locking.|$|R
