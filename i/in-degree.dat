815|77|Public
25|$|The {{out-degree}} {{of every}} vertex equals one plus its <b>in-degree.</b>|$|E
25|$|The GRN {{is created}} from a graph with the desired topology, {{imposing}} <b>in-degree</b> and out-degree distributions. Gene promoter activities {{are affected by}} other genes expression products that act as inputs, {{in the form of}} monomers or combined into multimers and set as direct or indirect. Next, each direct input is assigned to an operator site and different transcription factors can be allowed, or not, to compete for the same operator site, while indirect inputs are given a target. Finally, a function is assigned to each gene, defining the gene's response to a combination of transcription factors (promoter state). The transfer functions (that is, how genes respond to a combination of inputs) can be assigned to each combination of promoter states as desired.|$|E
500|$|In a {{citation}} graph the vertices are documents with {{a single}} publication date. The edges represent the citations from the bibliography of one document to other necessarily earlier documents. The classic example comes from the citations between academic papers as {{pointed out in the}} 1965 article [...] "Networks of Scientific Papers" [...] by Derek J. de Solla Price. [...] In this case the citation count of a paper is just the <b>in-degree</b> of the corresponding vertex of the citation network. This is an important measure in citation analysis. Court judgements provide another example as judges support their conclusions in one case by recalling other earlier decisions made in previous cases. A final example is provided by patents which must refer to earlier prior art, earlier patents which are relevant to the current patent claim. By taking the special properties of directed acyclic graphs into account, one can analyse these graphs with techniques not available when analysing the general graphs considered in many studies in network analysis. For instance transitive reduction gives a new insights into the citation distributions found in different applications highlighting clear differences in the mechanisms creating citations networks in different contexts. Another technique is main path analysis, which traces the citation links and suggests the most significant citation chains in a given citation graph.|$|E
30|$|In {{this section}} we {{consider}} the sandwich problem where the property Π {{is to have an}} orientation of given <b>in-degrees.</b>|$|R
40|$|AbstractWe {{consider}} {{the problem of}} orienting {{the edges of the}} n-dimensional hypercube so only two different <b>in-degrees</b> a and b occur. We show that this can be done, for two specified <b>in-degrees,</b> if and only if obvious necessary conditions hold. Namely, we need 0 ⩽a,b⩽n and also there exist non-negative integers s and t so that s+t= 2 n and as+bt=n 2 n− 1. This is connected to a question arising from constructing a strategy for a “hat puzzle”...|$|R
40|$|We {{consider}} {{the problem of}} orienting {{the edges of the}} $n$-dimensional hypercube so only two different <b>in-degrees</b> $a$ and $b$ occur. We show that this can be done, for two specified <b>in-degrees,</b> if and only if an obvious necessary condition holds. Namely, there exist non-negative integers $s$ and $t$ so that $s+t= 2 ^n$ and $as+bt=n 2 ^{n- 1 }$. This is connected to a question arising from constructing a strategy for a "hat puzzle. "Comment: 9 pages, 4 figure...|$|R
5000|$|A {{natural number}} circuit is a circuit, i.e. a {{labelled}} {{directed acyclic graph}} of <b>in-degree</b> at most 2. The nodes of <b>in-degree</b> 0, the leaves, are finite sets of natural numbers, the labels of the nodes of <b>in-degree</b> 1 are &minus;, where [...] and the labels of the nodes of <b>in-degree</b> 2 are +, ×, ∪ and ∩, where , [...] and ∪ and ∩ with the usual set meaning.|$|E
50|$|A {{directed}} graph has an Eulerian trail if {{and only if}} at most one vertex has (out-degree) &minus; (<b>in-degree)</b> = 1, at most one vertex has (<b>in-degree)</b> &minus; (out-degree) = 1, every other vertex has equal <b>in-degree</b> and out-degree, and all of its vertices with nonzero degree belong to a single connected component of the underlying un{{directed graph}}.|$|E
50|$|In this context, {{the simple}} {{reference}} count {{of an object}} is the <b>in-degree</b> of its vertex. Deleting a vertex is like collecting an object. It can only be done when the vertex has no incoming edges, so it {{does not affect the}} out-degree of any other vertices, but it can affect the <b>in-degree</b> of other vertices, causing their corresponding objects to be collected as well if their <b>in-degree</b> also becomes 0 as a result.|$|E
40|$|We present polynomial-time {{approximation}} algorithms {{for some}} degree-bounded directed network design problems. Our main result is for intersecting supermodular connectivity with degree bounds: given a directed graph G = (V, E) with nonnegative edge-costs, a connectivity requirement specified by an intersecting supermodular function f, and upper bounds {av, bv}v∈V on <b>in-degrees</b> and out-degrees of vertices, find a minimum-cost f-connected subgraph of G that satisfies the degree bounds. We give a bicriteria approximation algorithm that for any 0 ≤ ɛ ≤ 1, computes an f-connected sub- 2 graph with <b>in-degrees</b> at most ⌈ av ⌉+ 4, out-degrees at mos...|$|R
40|$|This paper {{addresses}} {{the question of}} burst synchronization in networks of chemically coupled Hindmarsh-Rose neurons. After {{a brief description of}} the model and of an algorithm of numerical de-tection of burst synchronization, we present numerical experiments designed to give an insight on the influence of the network topology on the minimal coupling strength needed to obtain burst synchro-nization in the network. Two topological characteristics are studied: the network diameter and the <b>in-degrees</b> of the nodes. Our numer-ical simulations show that when the diameter grows, the network becomes more difficult to synchronize, while networks with bigger <b>in-degrees</b> of the nodes synchronize more easily...|$|R
3000|$|... where Ã is {{weighted}} {{adjacency matrix}} of directed networks, D̃_O is the weighted diagonal matrix of out-degrees (or row sum of Ã) and D̃_I is the weighted diagonal matrix of <b>in-degrees</b> (or column sum of Ã).|$|R
5000|$|Biased Random Sampling bases its job {{allocation}} on {{the network}} represented by a directed graph. For each execution node in this graph, <b>in-degree</b> means available resources and out-degree means allocated jobs. <b>In-degree</b> will decrease during job execution while out-degree will increase after job allocation.The pseudo-code is following: ...|$|E
50|$|<b>In-degree</b> and {{out-degree}} {{variables are}} related to centrality.|$|E
5000|$|... #Subtitle level 2: <b>In-degree</b> {{distribution}} of gradient networks ...|$|E
30|$|In {{this paper}} we propose to study {{sandwich}} problems for properties Π concerning orientations, such as Eulerian orientation of a mixed graph and orientation with given <b>in-degrees</b> of a graph, or more generally of a mixed graph.|$|R
40|$|Many massive graphs (such as the WWW graph and Call graphs) share certain {{universal}} characteristics {{which can}} be described by the so-called "power law. " In this paper, we examine three important aspects of power law graphs, (1) the evolution of power law graphs, (2) the asymmetry of <b>in-degrees</b> and out-degrees, (3) the "scale invariance" of power law graphs. In particular, we give three increasingly general directed graph models and one general undirected graph model for generating power law graphs by adding at most one node and possibly one or more edges at a time. We will show that for any given edge density and desired power laws for <b>in-degrees</b> and out-degrees, not necessarily the same, the resulting graph will almost surely have the desired edge density and the power laws for the <b>in-degrees</b> and out-degrees. Our most general directed and undirected models include nearly all known power law evolution models as special cases. Finally, we show that our evolution models generate "scale invariant" graphs. We describe a method for scaling the time in our evolution model such that the power law of the degree sequences remains invariant...|$|R
40|$|Abstract. We {{investigate}} {{the problem of}} orienting the edges of an em-bedded graph {{in such a way}} that the <b>in-degrees</b> of both the nodes and faces meet given values. We show that the number of feasible solutions is bounded by 22 g, where g is the genus of the embedding, and all so-lutions can be determined within time O(22 g|E| 2 + |E| 3). In particular, for planar graphs the solution is unique if it exists, and in general the problem of finding a feasible orientation is fixed-parameter tractable in g. In sharp contrast to these results, we show that the problem becomes NP-complete even for a fixed genus if only upper and lower bounds on the <b>in-degrees</b> are specified instead of exact values. ...|$|R
50|$|On a {{directed}} graph, {{the same}} general ideas apply, but different techniques must be used. If the graph is Eulerian, one need only find an Euler cycle. If it is not, one must find T-joins, {{which in this case}} entails finding paths from vertices with an <b>in-degree</b> greater than their out-degree to those with an out-degree greater than their <b>in-degree</b> such that they would make <b>in-degree</b> of every vertex equal to its out-degree. This can be solved as an instance of the minimum-cost flow problem in which there is one unit of supply for every unit of excess <b>in-degree,</b> and one unit of demand for every unit of excess out-degree. As such it is solvable in O(|V|2|E|) time. A solution exists if and only if the given graph is strongly connected.|$|E
50|$|The {{out-degree}} {{of every}} vertex equals one plus its <b>in-degree.</b>|$|E
50|$|A {{directed}} cycle graph has uniform <b>in-degree</b> 1 and uniform out-degree 1.|$|E
40|$|Gene {{regulatory}} networks {{typically have}} low <b>in-degrees,</b> whereby any given gene is regulated by {{few of the}} genes in the network. What mechanisms might be responsible for these low <b>in-degrees?</b> Starting with an accepted framework of the binding of transcription factors to DNA, we consider a simple model of gene regulatory dynamics. In this model, we show that the constraint of having a given function leads {{to the emergence of}} minimum connectivities compatible with function. We exhibit mathematically this behavior within a limit of our model and show that it also arises in the full model. As a consequence, functionality in these gene networks is parsimonious, i. e., is concentrated on a sparse number of interactions as measured for instance by their essentiality. Our model thus provides a simple mechanism for the emergence of sparse regulatory networks, and leads to very heterogeneous effects of mutations. Comment: 9 pages, 5 figure...|$|R
40|$|In the {{previous}} lecture [3] {{we started to}} learn about the structure of the web graph. We observed the phenomenon of Power laws in the out- and <b>in-degrees</b> of web pages and the Small World Networks phenomenon. In this document we study two other phenomena: Bipartite Cores and the Bow-tie structure of the web. We also examine methods of rando...|$|R
30|$|This work is {{concerned}} with the problem of efficiently generating networks from PA models. Some examples of PA models include the models of Price (directed networks with scale-free <b>in-degrees)</b> [16], Barabási and Albert (undirected networks with scale-free degrees) [17], Krapivsky et al. (directed networks with nonindependent in and out-degrees which exhibit marginally scale-free behavior) [18], and Capocci et al. (like Krapivsky’s model, but with reciprocation) [19].|$|R
5000|$|It {{consists}} of a single node with <b>in-degree</b> = 0 (initial node) ...|$|E
5000|$|The {{product of}} <b>in-degree</b> and {{out-degree}} on a k-nearest-neighbour graph (graph degree linkage).|$|E
5000|$|It {{consists}} of a single node with <b>in-degree</b> = 1 and out-degree = 1 ...|$|E
40|$|We {{propose a}} new family of {{directed}} interconnection network graphs for an arbitrary number of nodes. The proposed network graph is almost regular (the difference between the <b>in-degrees</b> and out degrees of nodes is 2, a constant independent {{of the size of}} the network), has a diameter sub logarithmic in the number of nodes, is optimally fault tolerant and can be defined for an arbitrary number of nodes...|$|R
40|$|This paper studies {{synchronization}} via pinning {{control on}} general multi-agent systems with strongly connected topologies. A criterion for reaching network synchronization on strongly connected networks is given. It is {{found that the}} vertices with very small <b>in-degrees</b> should be pinned first and the vertices with very large out-degrees may be pinned from the reformulated lower-order condition. Finally, a simulation example is given to verify the proposed pinning scheme...|$|R
40|$|Abstract Hubness has {{recently}} been established as a significant property of k-nearest neighbor (k-NN) graphs obtained from high-dimensional data using a dis-tance measure, with traits and effects relevant to the cluster structure of data, as well as clustering algorithms. The hubness property is manifested with increasing (intrin-sic) data dimensionality. The distribution of data point <b>in-degrees,</b> i. e. {{the number of times}} points appear among the k nearest neighbors of other points in the data, becomes highly skewed. This results in hub points that can have <b>in-degrees</b> multi-ple orders of magnitude higher than expected. In this chapter we review and refine existing work which explains the mechanisms of the phenomenon, establishes the location of hub points near central regions of clusters in the data, and shows how hubness can negatively affect existing clustering algorithms by virtue of hub points lowering between-cluster distance. Next, we review the newly proposed partitional clustering algorithms, based on K-means, which take advantage of hubness by em-ploying hubs in the process of cluster prototype selection. These “soft ” K-means extensions avoid premature convergence to suboptimal stable cluster configuration...|$|R
5000|$|In a {{gradient}} network, <b>in-degree</b> of a node i, ki (in) is {{the number}} of gradient edges pointing into i, and the <b>in-degree</b> distribution {ki (in)} When the substrate G is random graph, and each pair of nodes is connected with probability P, the scalars [...] hi are i.i.d. (independent identically distributed) the exact expression for R(l) is given by ...|$|E
5000|$|It {{consists}} of a single node with <b>in-degree</b> ≥ 2 or out-degree ≥ 2 (decision/merge points) ...|$|E
5000|$|Running time: The trivial {{solution}} is to pebble an n-vertex graph in n steps using n pebbles. Hopcroft, Paul and Valiant [...] showed that any vertex of an n-vertex graph can be pebbled with O(n/log n) pebbles where the constant depends on the maximum <b>in-degree.</b> This enabled them to prove that DTIME(f(n)) is contained in DSPACE(f(n)/log f(n)) for all time-constructible f. Lipton and Tarjan [...] showed that any n-vertex planar acyclic directed graph with maximum <b>in-degree</b> k can be pebbled using O( [...] √n + k log2 [...] n) pebbles. They also proved {{that it is possible}} to obtain a substantial reduction in pebbles while preserving a polynomial bound on the number of pebbling steps with a theorem that any n-vertex planar acyclic directed graph with maximum <b>in-degree</b> k can be pebbled using O(n2/3 +k) pebbles in O(n5/3 [...] ) time. Alon, Seymour and Thomas [...] showed that any n-vertex acyclic directed graph with no kh -minor and with maximum <b>in-degree</b> k can be pebbled using O(h3/2 n1/2 +k log n) pebbles.|$|E
50|$|By {{mapping the}} www.nd.edu domain {{a network of}} 325,729 nodes and 1,497,135 edges was {{obtained}} whose degree distribution followed a power law with γout=2.45 and γin=2.1 for the out- and <b>in-degrees,</b> respectively. The evidence for the scaling law distribution of the clustering coefficients is significantly weaker {{than in the previous}} cases although there is a clearly visible declining pattern in the distribution of C(k) indicating that the more links a domain has the less interconnected the linked/linking web pages are.|$|R
30|$|The graph {{sandwich}} {{problem for}} property Π {{is defined as}} follows: Given two graphs G 1 =(V,E 1) and G 2 =(V,E 2) such that E 1 ⊆E 2, is there a graph G=(V,E) such that E 1 ⊆E⊆E 2 which satisfies property Π? We propose to study sandwich problems for properties Π concerning orientations, such as Eulerian orientation of a mixed graph and orientation with given <b>in-degrees</b> of a graph. We present a characterization and a polynomial-time algorithm for solving the m-orientation sandwich problem.|$|R
40|$|We {{present a}} novel {{technique}} 2 ̆ 6 amp;# 8212;Compressed Adjacency Matrices 2 ̆ 6 amp;# 8212;for visualizing gene regulatory networks. These directed networks have strong structural characteristics: out-degrees with a scale-free distribution, <b>in-degrees</b> {{bound by a}} low maximum, and few and small cycles. Standard visualization techniques, such as node-link diagrams and adjacency matrices, are impeded by these network characteristics. The scale-free distribution of out-degrees causes {{a high number of}} intersecting edges in node-link diagrams. Adjacency matrices become space-inefficient due to the low <b>in-degrees</b> and the resulting sparse network. Compressed adjacency matrices, however, exploit these structural characteristics. By cutting open and rearranging an adjacency matrix, we achieve a compact and neatly-arranged visualization. Compressed adjacency matrices allow for easy detection of subnetworks with a specific structure, so-called motifs, which provide important knowledge about gene regulatory networks to domain experts. We summarize motifs commonly referred to in the literature, and relate them to network analysis tasks common to the visualization domain. We show that a user can easily find the important motifs in compressed adjacency matrices, and that this is hard in standard adjacency matrix and node-link diagrams. We also demonstrate that interaction techniques for standard adjacency matrices can be used for our compressed variant. These techniques include rearrangement clustering, highlighting, and filtering...|$|R
