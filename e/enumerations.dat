882|10000|Public
5|$|In 1822, the Madras Presidency {{underwent}} {{its first}} census, which returned {{a population of}} 13,476,923. A second census conducted between 1836 and 1837 recorded a population of 13,967,395, an increase of only 490,472 over 15 years. The first quinquennial population enumeration took place from 1851 until 1852. It returned a population of 22,031,697. Subsequent <b>enumerations</b> were made in 1851–52, 1856–57, 1861–62 and 1866–67. The population of Madras Presidency was tallied at 22,857,855, 24,656,509 in 1861–62 and 26,539,052 in 1866–67. The first organised census of India was conducted in 1871 and returned a population of 31,220,973 for the Madras Presidency. Since then, a census has been conducted once every ten years. The last census of British India held in 1941 counted a population of 49,341,810 for the Madras Presidency.|$|E
5|$|A study {{published}} by Mulungushi University indicated that age distortions {{were found in}} census data and a tendency of age heaping with terminal digits of ‘0’ and ‘5’ were common. It also reported that gender differences existed in age reporting in Zambia with more number of males reporting their ages wrongly. But the report acknowledged the difficulties in data collection and stated {{that the quality of}} data collection was better than the previous census <b>enumerations.</b> Another {{study published}} in the US National Library of Medicine National Institutes of Health journal indicated that the census reported very high adult female mortality, particularly a high pregnancy-related mortality in both rural and urban areas twelve months prior to the census. The evaluation of population age, age-at-death, live births were reported to contain data errors. Another study by Demographic Research indicated that the data of people aged above 80 was not accurately captured in most sub-Saharan countries, which prevented research on age-related health ailments and other socio-economic characteristics.|$|E
25|$|Semantic colorization: Improved syntax coloring, various {{user-defined}} or default {{colors for}} C++ syntax such as macros, <b>enumerations,</b> typenames and functions.|$|E
40|$|Using {{properties}} of K-pairs of sets, {{we show that}} every nonzero <b>enumeration</b> degree a bounds a nontrivial initial segment of <b>enumeration</b> degrees whose nonzero elements have all the same jump as a. Some consequences of this fact are derived, that hold in the local structure of the <b>enumeration</b> degrees, including: There is an initial segment of <b>enumeration</b> degrees, whose nonzero elements are all high; there is a nonsplitting high <b>enumeration</b> degree; every noncappable <b>enumeration</b> degree is high; every nonzero low <b>enumeration</b> degree can be capped by degrees of any possible local jump (i. e., any jump that can be realized by <b>enumeration</b> degrees of the local structure); every <b>enumeration</b> degree that bounds a nonzero element of strictly smaller jump, is bounding; every low <b>enumeration</b> degree below a non low <b>enumeration</b> degree a can be capped below a...|$|R
40|$|AbstractWe {{prove the}} {{following}} three theorems on the <b>enumeration</b> degrees of ∑ 20 sets. Theorem A: There exists a nonzero noncuppable ∑ 20 <b>enumeration</b> degree. Theorem B: Every nonzero Δ 20 <b>enumeration</b> degree is cuppable to 0 ′e by an incomplete total <b>enumeration</b> degree. Theorem C: There exists a nonzero low Δ 20 <b>enumeration</b> degree with the anticupping property...|$|R
40|$|This thesis {{discusses}} {{properties of}} the local structure of the <b>enumeration</b> degrees. We begin with some historical background of the subject. vye give motivation for investigating the {{properties of the}} local structure ofthe <b>enumeration</b> degrees and discuss the basic concepts and methods used throughout the thesis. Chapter 2 presents evidence that the study of the structure of <b>enumeration</b> degrees can provide a richer understanding {{of the structure of the}} Thring degrees. We prove that [...] -' -. there exists a II~ <b>enumeration</b> degree which is the bottom of a cone within which the II~ <b>enumeration</b> degrees cannot be cupped to O~. As a corollary we obtain a generalization of Harrington's non-splitting theorem for the ~g Thring degrees. Chapters 3 and 4 are dedicated to the study of properties, specific to the properly ~g <b>enumeration</b> degrees. In Chapter 3 we construct a properly ~g <b>enumeration</b> degree above which there is no splitting of O~. Degrees with this property can be used to define a filter in the local structure of the <b>enumeration</b> degrees that consists entirely of properly ~g <b>enumeration</b> degrees and O~. In Chapter 4 we strengthen the result obtained by Cooper, Li, Sorbi and Yang of the existence of a non-bounding <b>enumeration</b> degree by constructing a I-generic <b>enumeration</b> degree that does not bound a minimal pair. Degrees with this propertyÃ‚Â· can be used to define an ideal consisting of properly ~g <b>enumeration</b> degrees and Oe. Chapters 5 and 6 concern the cupping properties of ~g <b>enumeration</b> degrees and the sub-classes of the ~g <b>enumeration</b> degrees related to the finite and w- levels of the Ershov hierarchy. In Chapter 5 we complement a result by Cooper, Sorbi and Yi by showing that every non-zero. 6. g <b>enumeration</b> degree can be cupped by a partial low. 6. g <b>enumeration</b> degree. On the other hand we show that one cannot computably list a sequence of degrees which contains a cupping partner for every. 6. g <b>enumeration</b> degree. In Chapter 6 we concentrate on the smaller subclasses, where the situation improves. We prove that every non-zero w-c. e. <b>enumeration</b> degree can be cupped by a 3 -c. e. <b>enumeration</b> degree and as the 3 -c. e. <b>enumeration</b> degrees are computably enumerable this property constitutes a difference between the. 6. g <b>enumeration</b> degrees and the w-c. e. <b>enumeration</b> degrees. Furthermore we establish a structural difference between the class of II~ <b>enumeration</b> degrees and the 3 -c. e. <b>enumeration</b> degrees by proving that one cannot find a single Eg <b>enumeration</b> degree that cups every non-zero 3 -c. e. <b>enumeration</b> degree to O~. Finally in Chapter 7 we show that the structure of the 3 -c. e. <b>enumeration</b> degrees is far from trivial as there exists a Lachlan Il() n-spJ~tting pair with top a II~enuIlleration degree and bottom a 3 -c. e. <b>enumeration</b> degree. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
25|$|Properties of {{the natural}} numbers, such as divisibility and the {{distribution}} of prime numbers, are studied in number theory. Problems concerning counting and ordering, such as partitioning and <b>enumerations,</b> are studied in combinatorics.|$|E
25|$|In the US, {{there were}} 51,976 people in 1990 {{with the last}} name Weeks, making it the 675th most common last name. The table below compares this with the {{corresponding}} <b>enumerations</b> of related names {{at that time in}} the US.|$|E
25|$|During the American colonial period, British colonial {{officials}} conducted censuses {{in some of}} the Thirteen Colonies {{that included}} <b>enumerations</b> by race. In addition, tax lists and other reports provided additional data and information about the racial demographics of the Thirteen Colonies during this time period.|$|E
40|$|Zeilberger's <b>enumeration</b> schemes {{can be used}} to {{completely}} automate the <b>enumeration</b> of many permutation classes. We extend his <b>enumeration</b> schemes so that they apply to many more permutation classes and describe the Maple package WILFPLUS, which implements this process. We also compare <b>enumeration</b> schemes to three other systematic <b>enumeration</b> techniques: generating trees, substitution decompositions, and the insertion encoding. Comment: 21 page...|$|R
40|$|We {{prove the}} {{following}} three theorems on the <b>enumeration</b> degrees of # 0 2 sets. Theorem A: There exists a nonzero noncuppable # 0 2 <b>enumeration</b> degree. Theorem B: Every nonzero # 0 2 <b>enumeration</b> degree is cuppable to 0 # e by an incomplete total <b>enumeration</b> degree. Theorem C: There exists a nonzero low # 0 2 <b>enumeration</b> degree with the anticupping property...|$|R
40|$|The <b>enumeration</b> of {{permutation}} classes {{has been}} accomplished {{with a variety of}} techniques. One wide-reaching method is that of <b>enumeration</b> schemes, introduced by Zeilberger and extended by Vatter. In this paper we further extend the method of <b>enumeration</b> schemes to words avoiding permutation patterns. The process of finding <b>enumeration</b> schemes is programmable and allows for the automatic <b>enumeration</b> of many classes of pattern-avoiding words. ...|$|R
25|$|Four conversations are {{described}} in the seventh and eighth cantos of the epic. These include the first conversation between Aṣṭāvakra and Janaka, followed by the three debates of Aṣṭāvakra – {{the first one to}} convince the gatekeeper to let him into the assembly; then his answers to the cryptic questions of Janaka; and finally the Śāstrārtha between Bandī and Aṣṭāvakra, in which the seemingly simple <b>enumerations</b> of the numbers one to thirteen belie enigmas and latent meanings which lie beneath. These conversations in the epic are the same as in the Mahābhārata, and the comparison between the poetry in the Saṃskṛta of Mahābhārata and the Hindi of Aṣṭāvakra is noteworthy.|$|E
500|$|Instances {{of value}} types {{do not have}} {{referential}} identity nor referential comparison semantics - equality and inequality comparisons for value types compare the actual data values within the instances, unless the corresponding operators are overloaded. Value types are derived from , always have a default value, and can always be created and copied. Some other limitations on value types are that they cannot derive from each other (but can implement interfaces) and cannot have an explicit default (parameterless) constructor. Examples of value types are all primitive types, such as [...] (a signed 32-bit integer), [...] (a 32-bit IEEE floating-point number), [...] (a 16-bit Unicode code unit), and [...] (identifies a specific point in time with nanosecond precision). Other examples are [...] (<b>enumerations)</b> and [...] (user defined structures).|$|E
2500|$|By {{the end of}} the decade, {{there were}} only nine {{remaining}} noble houses headed by Forcade males in the Province of Béarn, as evidenced by the <b>enumerations</b> of noble assets made with the framework of the reform of the territory of Béarn between 1670 and 1676, and provided to the Chambre des Comptes of Navarre. These were: ...|$|E
40|$|Abstract. This {{is a brief}} {{introduction}} to several problems related to the <b>enumeration</b> of maps in surfaces. The problems range from requests for bijective proofs to asymptotic problems to an algebraic question. 1. A Very Brief Introduction to Map <b>Enumeration</b> For many years, people have considered various problems in the <b>enumeration</b> of graphs, beginning with the <b>enumeration</b> of trees. Extensive work on the <b>enumeration</b> of maps did not begin until Tutte's work in the 1960 's; however, one map <b>enumeration</b> problem| {{the determination of the}} number of combinatorially inequivalent 3 -dimensional conve...|$|R
40|$|Abstract. The {{cross-section}} <b>enumeration</b> {{problem is}} to list all words of length n in a regular language L in lexicographical order. The <b>enumeration</b> {{problem is to}} list the first m words in L according to radix order. We present an algorithm for the cross-section <b>enumeration</b> problem that is linear in n. We provide {{a detailed analysis of}} the asymptotic running time of our algorithm and that of known algorithms for both <b>enumeration</b> problems. We discuss some shortcomings of the <b>enumeration</b> algorithm found in the Grail computation package. In the practical domain, we modify Mäkinen’s <b>enumeration</b> algorithm to get an algorithm that is usually the most efficient in practice. We performed an extensive performance analysis of the new and previously known <b>enumeration</b> and cross-section <b>enumeration</b> algorithms and found when each algorithm is preferable. ...|$|R
40|$|In {{this paper}} {{we deal with}} <b>enumeration</b> methods for the mean value algorithm, and more {{particular}} the mean value algorithm for queuing networks with single server· and delay server type of stations. Three <b>enumeration</b> metods are discussed, with specific attention for the implementation aspects. The <b>enumeration</b> methods considered are the ordinary lexicographical <b>enumeration,</b> the memory saving <b>enumeration</b> as proposed by Zahorjan and Wong, and the <b>enumeration</b> for the case we consider a queuing network with a constraint on the total population size, rather than with constraints {{on the number of}} clients included in each of the individual client types...|$|R
2500|$|This small [...] "book", {{three pages}} long (Volume 2, parashat Teruma, pages 176b-179a), {{the name of}} which, [...] "Book of the Hidden", attests to its veiled and cryptic character, is {{considered}} by some an important and concentrated part of the Zohar. Its <b>enumerations</b> and anatomical references are reminiscent of the Sefer Yetzirah, the latter being remazim (hints) of divine characteristics.|$|E
2500|$|A {{code for}} a {{lightface}} Borel set gives complete {{information about how}} to recover the set from sets of smaller rank. [...] This contrasts with the boldface hierarchy, where no such effectivity is required. Each lightface Borel set has infinitely many distinct codes. [...] Other coding systems are possible; the crucial idea is that a code must effectively distinguish between effectively open sets, complements of sets represented by previous codes, and computable <b>enumerations</b> of sequences of codes.|$|E
2500|$|Most BP {{speakers}} also diphthongize stressed vowels to , , , etc. (except [...] ), {{before a}} sibilant {{at the end}} of a stressed syllable (written s, x, or z). For instance, Jesus [...] ('Jesus'), faz [...] ('he does'), dez [...] ('ten'). One often common exception to this realization is in the accent of gaúchos. This has led to the use of meia (from meia dúzia 'half a dozen") instead of seis [...] ('six') when making <b>enumerations,</b> to avoid any confusion with três [...] ('three') on the telephone.|$|E
5000|$|<b>Enumeration</b> data type: <b>Enumeration</b> {{values are}} simple strings such as red, green, and blue for an rgb-enumeration. In {{the case that}} an <b>enumeration</b> type is {{declared}} extensible it can be extended in other schemas.|$|R
40|$|<b>Enumeration</b> is listing {{all objects}} that satisfy given properties. We call <b>enumeration</b> of subgraphs {{of a given}} graph, such that those subgraphs have {{specified}} properties, as subgraph <b>enumeration.</b> Similarly We call <b>enumeration</b> of supergraphs of a given graph as subgraph <b>enumeration.</b> In this thesis, we will consider about subgraph/supergraph <b>enumeration</b> algorithms. In areas such as data mining or statistics, subgraph <b>enumeration</b> and supergraph <b>enumeration</b> play important roles to find frequent patterns or to draw on some rules satisfied by the inputs, etc. We developed two types of algorithms of subgraph/supergraph <b>enumeration</b> for chordal and related graphs; one searches graphs to be enumerated by an edge addition or an edge removal; the other defines a neighbor of searching by a simplicial vertex elimination, which is specific for chordal graphs. The first type uses {{the fact that there}} are only O(n 2) edges in a complete graph K n, and achieves polynomial time delay algorithms. We can use this method to develop both subgraph <b>enumeration</b> algorithms and super graph <b>enumeration</b> algorithms. The second type uses nice properties of simplicial vertices and the fact that we can enumerate cliques in a chordal graph quickly. Using this type of algorithm for chordal subgraph <b>enumeration</b> is faster than doing so using the first type (it needs only constant time to enumerate each chordal graph). However, this method is only for the subgraph <b>enumeration.</b> The organization of this thesis is as follows. We first introduce <b>enumeration,</b> focusing particularly on graph <b>enumeration.</b> Chapter 2 provides the preliminaries, notes about terms that we use in this thesis, and explanations about graph classes. In Chapter 3, we discuss the difficulties of our <b>enumeration</b> problems, and explain the framework of the reverse search method. In Chapter 4, we develop algorithms for our <b>enumeration</b> problems. These algorithms are based on the reverse search method. They are of two types: one defines parents such that the difference between a graph and its parent is exactly one, and the other defines parents such that the parent of a graph is obtained by eliminating a simplicial vertex. And, we conclude the thesis in Chapter 5...|$|R
50|$|A {{fixed point}} of an <b>enumeration</b> {{operator}} &Phi; {{is a set}} F such that &Phi;(F) = F. The first <b>enumeration</b> theorem shows that fixed points can be effectively obtained if the <b>enumeration</b> operator itself is computable.|$|R
2500|$|Based on a {{reproduced}} British report, the Sub-Committee 2 criticised the UNSCOP {{report for}} using inaccurate population figures, especially concerning the Bedouin population. The British report, dated 1 November 1947, used {{the results of}} a new census in Beersheba in 1946 with additional use of aerial photographs, and an estimate of the population in other districts. It found that the size of the Bedouin population was greatly understated in former <b>enumerations.</b> In Beersheba, 3,389 Bedouin houses and 8,722 tents were counted. The total Bedouin population was estimated at approximately 127,000; only 22,000 of them normally resident in the Arab state under the UNSCOP majority plan. The British report stated: ...|$|E
6000|$|Mr. Austin, however, {{has other}} moods, and, perhaps, {{he is at}} his best when he is writing about flowers. Occasionally he wearies the reader by tedious <b>enumerations</b> of plants, lacking indeed reticence and tact and {{selection}} in many of his descriptions, but, as a rule, he is very pleasant when he is babbling of green fields. How pretty these stanzas from the dedication are! ...|$|E
60|$|In {{the various}} <b>enumerations</b> {{of the moral}} virtues I had met with in my reading, I found the {{catalogue}} more or less numerous, as different writers included more or fewer ideas under the same name. Temperance, for example, was by some confined to eating and drinking, while by others it was extended to mean the moderating every other pleasure, appetite, inclination, or passion, bodily or mental, even to our avarice and ambition. I propos'd to myself, {{for the sake of}} clearness, to use rather more names, with fewer ideas annex'd to each, than a few names with more ideas; and I included under thirteen names of virtues all that at that time occurr'd to me as necessary or desirable, and annexed to each a short precept, which fully express'd the extent I gave to its meaning.|$|E
5000|$|An <b>enumeration</b> was {{declared}} thus: <b>ENUMERATION</b> (Winter, Spring, Summer, Autumn) : Seasons := Summer ...|$|R
40|$|In {{this thesis}} we study {{the notion of}} <b>enumeration</b> 1 -genericity, various basic {{properties}} of it and its relationship with 1 -genericity. We also study the problem of avoiding uniformity in the � 02 <b>enumeration</b> degrees. In Chapter 2 we give a brief background survey {{of the notion of}} genericity {{in the context of the}} Turing degrees as well as in the <b>enumeration</b> degrees. Chapter 3 presents a brief overview of the relationship between noncupping and genericity in the <b>enumeration</b> degrees. We give a result that will be useful in proving the existence of prime ideals of � 02 <b>enumeration</b> degrees in Chapter 5, namely, we show the existence of a 1 -generic <b>enumeration</b> degree 0 e < a < 00 e which is noncuppable and low 2. In Chapter 4 we investigate the property of incomparability relative to a class of degrees of a speci�c level of the Arithmetical Hierarchy. We show that for every uniform � 02 class of <b>enumeration</b> degrees C, there exists a high � 02 <b>enumeration</b> degree c which is incomparable with any degree b 2 C such that b = 2 f 0 e; 00 e g. Chapter 5 is devoted to the introduction of the notions of 1 - genericity" and <b>enumeration</b> 1 -genericity". We study the distribution of the <b>enumeration</b> 1 -generic degrees and show that it resembles to some extent the distribution of the class of 1 -generic degrees. We also present an application of <b>enumeration</b> 1 -genericity to show the existence of prime ideals of � 02 <b>enumeration</b> degrees. We then look at the relationship between <b>enumeration</b> 1 -genericity and highness. Finally, in Chapter 6 we present two di�erent approaches to the problem of separating the class of the <b>enumeration</b> 1 -generic degrees from the class of 1 -generic degrees. One of them is by showing the existence of a non trivial <b>enumeration</b> 1 - generic set which is not 1 -generic and the other is by proving that there exists a property that both classes do not share, namely, nonsplitting...|$|R
40|$|ACM Great Lakes Symposium on VLSI 2009 (GLSVLSI 2009) : Boston, Massachusetts : May 10 - 12, 2009 Recent {{technology}} mappers for LUT-based FPGAs employ cut <b>enumeration.</b> Although many {{cuts are}} often {{needed to find}} good network, enumerating all cuts with large size consumes run-time very much. The number of cuts exponentially increases {{with the size of}} cuts, which causes long run-time. Furthermore, an inefficiency of bottom-up merging in existing algorithms makes the run-time much longer. This paper presents a novel cut <b>enumeration.</b> The proposed algorithm is efficient because it enumerates cuts without bottom-up merging. Our algorithm has two modes; exhaustive <b>enumeration</b> and partial <b>enumeration.</b> Exhaustive <b>enumeration</b> enumerates all cuts. Partial <b>enumeration</b> enumerates partial cuts with a guarantee that a depth-minimum network can be constructed. The experimental results show that exhaustive <b>enumeration</b> runs about 3 times and 8 times faster than existing bottom-up algorithm [1] [2] for K= 8, 9, respectively. The quality of network are the same. Furthermore, partial <b>enumeration</b> runs about 6 times and 18 times faster than bottom-up algorithm for K= 8, 9, respectively. Area of network derived by the set of cuts enumerated by partial <b>enumeration</b> is only 4 % larger than that derived by exhaustive <b>enumeration</b> on average, and the depth is the same...|$|R
6000|$|In {{spite of}} {{geographical}} advantages, however, {{the persistence of}} Chinese civilization, fundamentally unchanged since the introduction of Buddhism, is a remarkable phenomenon. Egypt and Babylonia persisted as long, but since they fell there has been nothing comparable in the world. Perhaps the main cause is the immense population of China, with an almost complete identity of culture throughout. In {{the middle of the}} eighth century, the population of China is estimated at over 50 millions, though ten years later, as a result of devastating wars, it is said to have sunk to about 17 millions.[13] A census has been taken at various times in Chinese history, but usually a census of houses, not of individuals. From the number of houses the population is computed by a more or less doubtful calculation. It is probable, also, that different methods were adopted on different occasions, and that comparisons between different <b>enumerations</b> are therefore rather unsafe. Putnam Weale[14] says:-- ...|$|E
6000|$|The {{reader will}} not be {{surprised}} to find, that he who could thus confound monotony with music, and commence his greatest poem with it, is too often discordant {{in the rest of}} his versification. It has been thought, that Milton might have taken from the Italians the grand musical account to which he turns a list of proper names, as in his <b>enumerations</b> of realms and deities; but I have been surprised to find how little the most musical of languages appears to have suggested to its poets anything of the sort. I am not aware of it, indeed, in any poets but our own. All others, from Homer, with his catalogue of leaders and ships, down to Metastasio himself, though he wrote for music, appear to have overlooked this opportunity of playing a voluntary of fine sounds, where they had no other theme on which to modulate. Its inventor, as far as I am aware, is that great poet, Marlowe.[39] ...|$|E
6000|$|I did wrong, just above, {{to speak}} of my attack on this {{establishment}} as the only recreation I took that first wet day; for I remember a terribly moist visit to the former palace of the Popes, which could have taken place only in the same tempestuous hours. It is true that I scarcely know why I should have gone out to see the Papal palace in the rain, for I had been over it twice before, and even then had not found {{the interest of the}} place so complete as it ought to be; the fact nevertheless remains that this last occasion is much associated with an umbrella, which was not superfluous even in some of the chambers and corridors of the gigantic pile. It had already seemed to me the dreariest of all historical buildings, and my final visit confirmed the impression. The place is as intricate as it is vast, and as desolate as it is dirty. The imagination has, for some reason or other, to make more than the effort usual in such cases to restore and repeople it. The fact indeed is simply that the palace has been so incalculably abused and altered. The alterations have been so numerous that, though I have duly conned the <b>enumerations,</b> supplied in guide-books, of the principal ...|$|E
50|$|The <b>enumeration</b> of the psalms differs in the Nova Vulgata {{from that}} {{used in the}} earlier {{versions}}. The earlier versions take their <b>enumeration</b> from the Greek Septuagint. The Versio Nova Vulgata takes its <b>enumeration</b> from the Hebrew Masoretic Text.|$|R
5000|$|... {{state space}} <b>enumeration,</b> {{symbolic}} state space <b>enumeration,</b> abstract interpretation, symbolic simulation, symbolic trajectory evaluation, symbolic execution ...|$|R
50|$|While {{the second}} {{recursion}} theorem is about fixed points of computable functions, the first recursion theorem {{is related to}} fixed points determined by <b>enumeration</b> operators, which are a computable analogue of inductive definitions. An <b>enumeration</b> operator {{is a set of}} pairs (A,n) where A is a (code for a) finite set of numbers and n is a single natural number. Often, n will be viewed as a code for an ordered pair of natural numbers, particularly when functions are defined via <b>enumeration</b> operators. <b>Enumeration</b> operators are of central importance in the study of <b>enumeration</b> reducibility.|$|R
