149|945|Public
50|$|Walk <b>Forward</b> <b>Analysis</b> does {{optimization}} on {{a training}} set; test on a period after {{the set and}} then rolls it all forward and repeats the process. We have multiple out-of-sample periods and look at these results combined. Walk <b>forward</b> <b>analysis</b> was originally discussed by Robert E. Pardo. Walking forward can keep a trading model a step ahead. Walk forward is so called, as we have multiple walk training and testing periods {{is less likely to}} suffer from overfitting.|$|E
50|$|Coverability can {{be decided}} for any well-structured system, {{and so can}} {{reachability}} of a given control state, by the backward algorithm of Abdulla et al. or for specific subclasses of well-structured systems (subject to strict monotonicity, e.g. {{in the case of}} unbounded Petri nets) by a <b>forward</b> <b>analysis</b> based on a Karp-Miller coverability graph.|$|E
50|$|Widening {{techniques}} and the closely related acceleration techniques {{are used in}} the <b>forward</b> <b>analysis</b> of systems in the discipline of symbolic model checking. The techniques detect cycles, i.e. sequences of abstract state transitions that could be repeated. When such a sequence can be repeated over and over, yielding new states (e.g. a variable might be incremented at every repetition), the symbolic analysis of the program will not explore all of these states in finite time. For several important families of systems such as pushdown systems, channel systems or counter systems, subclasses amenable to so-called flat acceleration have been identified for which a complete analysis procedure exists that computes the whole set of reachable states. This type of <b>forward</b> <b>analysis</b> is also related to well structured transition systems, but well-structuredness alone is not sufficient for such procedures to be complete (for example, the coverability graph of a Petri net is always finite but in general, it overapproximates the true state space).|$|E
50|$|In {{numerical}} analysis, error <b>analysis</b> comprises both <b>forward</b> error <b>analysis</b> {{and backward}} error analysis.|$|R
40|$|Abstract. The main {{research}} of planar two-DOF hybrid-driven robot {{is on the}} planar five-bar and the seven-bar mechanism, the planar two-DOF seven-bar mechanism is taken as the research object in this paper, the Assur Groups transformation method {{is used for the}} <b>forward</b> kinematics <b>analysis</b> of this seven-bar mechanism. The mathematical model of this mechanism is established for the <b>forward</b> kinematics <b>analysis,</b> and the COSMOSMotion is used for the kinematics and dynamics simulation of this hybrid-driven seven-bar mechanism...|$|R
40|$|This paper {{deals with}} the <b>forward</b> {{position}} <b>analysis</b> of a 3 -DOF parallel mechanism module, which forms {{the main body of}} a 5 -DOF reconfigurable hybrid robot named TriVariant. The TriVariant is {{a modified version of the}} Tricept robot, achieved by integrating one of the three active limbs into the passive one. The analytical method is employed to obtain the forward position solutions. It shows that the <b>forward</b> position <b>analysis</b> of the TriVariant is much simpler than that of the Tricept...|$|R
40|$|Symbolic <b>forward</b> <b>analysis</b> is a semi-algorithm that in {{many cases}} solves the model {{checking}} problem for infinite state systems in practice. This semi-algorithm is implemented in many practical model checking tools like UPPAAL [BLL + 96], KRONOS [DT 98] and HYTECH [HHWT 97]. In most practical experiments, termination of symbolic <b>forward</b> <b>analysis</b> is achieved by employing abstractions resulting in an abstract symbolic <b>forward</b> <b>analysis.</b> This paper presents a unified algebraic framework for deriving abstract symbolic <b>forward</b> <b>analysis</b> procedures for a large class of infinite state systems with variables ranging over a numeric domain. Our framework provides sufficient conditions under which the derived abstract symbolic <b>forward</b> <b>analysis</b> procedure is always terminating or accurate or b [...] ...|$|E
40|$|Symbolic <b>forward</b> <b>analysis</b> is a semi-algorithm that in {{many cases}} solves the model {{checking}} problem for infinite state systems in practice. This semi-algorithm is implemented in many practical model checking tools like UPPAAL [1], KPONOS [2] and HYTECH [3]. In most practical experiments, termination of symbolic <b>forward</b> <b>analysis</b> is achieved by employing abstractions resulting in an abstract symbolic <b>forward</b> <b>analysis.</b> This paper presents a unified algebraic framework for deriving and reasoning about abstract symbolic <b>forward</b> <b>analysis</b> procedures for a large class of infinite state systems with variables ranging over a numeric domain. The framework is obtained by lifting notions from classical algebraic theory of automata to constraints representing sets of states. Our framework provides sufficient conditions under which the derived abstract symbolic <b>forward</b> <b>analysis</b> procedure is always terminating or accurate or both. The class of infinite state systems that we consider here are (possibly non-linear) hybrid systems and (possibly non-linear) integer-valued systems. The central notions involved are those of constraint transformer mortolds and coverings between constraint transformer monoids. We show concrete applications of our framework in deriving abstract symbolic <b>forward</b> <b>analysis</b> algorithms for timed automata and the two process bakery algorithm that are both terminating and accurate...|$|E
40|$|Existing model {{checking}} {{tools for}} infinite state systems, such as UPPAAL, HYTECH and KRONOS, use symbolic <b>forward</b> <b>analysis,</b> a possibly nonterminating procedure. We give termination criteria {{that allow us}} to reason compositionally about systems defined with asynchronous parallel composition; we can prove the termination of symbolic <b>forward</b> <b>analysis</b> for a composed system from the syntactic conditions satisfied by the component systems. Our results apply to nonlinear hybrid systems; in particular to rectangular hybrid systems, timed automata and o-minimal systems. In the case of integer-valued systems we give negative results: <b>forward</b> <b>analysis</b> is not well-suited for this class of infinite-state systems...|$|E
50|$|This {{behaviour}} {{can produce}} bizarre results: for instance, a gas containing {{a mixture of}} positive and negative matter particles will have the positive matter portion increase in temperature without bound. However, the negative matter portion gains negative temperature at the same rate, again balancing out. Geoffrey A. Landis pointed out other implications of <b>Forward's</b> <b>analysis,</b> including noting that although negative mass particles would repel each other gravitationally, the electrostatic force would be attractive for like charges and repulsive for opposite charges.|$|R
40|$|A new three-degrees-of-freedom (3 -DOF) {{translational}} parallel manipulator (TPM) with linear actuators, i. e., 3 -CRR TPM, {{is first}} proposed. The rotation singularity analysis, the inverse kinematics, the forward kinematics, and the kinematic singularity {{analysis of the}} 3 -CRR TPM are then performed. The analysis shows that the proposed TPM has the following kinematic merits over previous TPMs. (1) The <b>forward</b> displacement <b>analysis</b> can be performed by solving a set of linear equations. (2) The Jacobian matrix of the TPM is constant. The inverse of the Jacobian matrix can be pre-calculated, {{and there is no}} need to calculate repeatedly the inverse of the Jacobian matrix in performing the <b>forward</b> displacement <b>analysis</b> and <b>forward</b> velocity <b>analysis.</b> (3) There is no rotation singularity. (4) There is no uncertainty singularity. (5) The TPM has a fewer number of links or joints. The geometric condition for a 3 -CRR TPM to be isotropic i...|$|R
50|$|García Martínez has put <b>forward</b> an <b>analysis</b> of the {{material}} regarding the Wicked Priest found columns 8 to 12 of the Habakkuk Commentary known as the Groningen hypothesis.|$|R
40|$|<b>Forward</b> <b>analysis</b> {{procedures}} for infinite-state {{systems such as}} timed systems were limited to safety properties. We give the first constraint-based <b>forward</b> <b>analysis</b> for infinite-state systems that goes beyond safety properties. Namely, we take the restriction of the μ-calculus to least-fixpoint formulas where negation is applied to closed subformulas only. We characterize these properties as perfect models of constraint logic programs, and we present a tabulation procedure for the top-down evaluation of stratified constraint logic programs...|$|E
40|$|We have {{finished}} the <b>forward</b> <b>analysis</b> of πN scattering and are proceeding with non-zero angles {{to achieve a}} full fixed-t constrained partial wave analy-sis. The outcome of the <b>forward</b> <b>analysis</b> {{is a set of}} coefficients of Pietarinen’s expansion together with a full covariance matrix, which can be used for cal-culating some forward observables with proper error bars. As an illustration, we calculated some of the subthreshold expansion coefficients c±n 0 and their errors. ...|$|E
40|$|AbstractAn optimal {{method is}} {{proposed}} for designing the structure parameters of microaccelerometer. Four types of microaccelerometers are investigated including piezoresistive cantilever-type, piezoresistive bridge-type, capacitive cantilever- type and capacitive bridge-type. The {{objective is to}} enlarge sensitivity as well as bandwidth. The effect of structure parameters such as length, width and depth on sensitivity are studied by <b>forward</b> <b>analysis.</b> According {{to the results of}} <b>forward</b> <b>analysis</b> the nonlinear optimization to maximize sensitivity and meet the requirement of bandwidth is efficiently performed. A numerical example to demonstrate the optimal design of microaccelerometers using the proposed method is presented...|$|E
40|$|Abstract. We {{design and}} {{implement}} a modular, constant-propagationlike <b>forwards</b> flow <b>analysis</b> for a Python subset containing strings and dictionaries (hash tables). The analysis infers types of dictionaries and the functions and modules that use them. Unlike records and class-based objects, dictionaries are wholly dynamic, and we employ a domain of dictionary types that delineate which fields a dictionary must have. We have deliberately omitted unification-based inference and row variables to obtain {{the benefits of a}} <b>forwards</b> <b>analysis</b> that matches a programmer’s intuitions. Nonetheless, to accommodate a modular analysis, the values of parameters and free (global) variables are represented by tokens to which are attached constraints. At link- and function-call-time, the constraints are matched against the actual values of arguments and global variables. Finally, programmers are encouraged to use a BNF-like syntax to define the forms of data types employed in their scripts. The analysis uses the programmer-written BNF rules to “abstractly parse ” program phrases and associate them with derivations possible from the programmer-defined grammars. A prototype of the system is under construction. ...|$|R
5000|$|Supports Walk <b>Forward</b> Optimization and <b>analysis</b> {{which can}} {{generate}} trading signals for tomorrow.|$|R
30|$|Before going <b>forward</b> in the <b>analysis,</b> {{we first}} need {{to present the}} {{following}} lemma.|$|R
40|$|Abstract. Timed automata (TA) are {{a widely}} used model for {{real-time}} systems. Several tools {{are dedicated to}} this model, and they mostly implement a <b>forward</b> <b>analysis</b> for checking reachability properties. Though diagonal constraints do not add expressive power to classical TA, the standard <b>forward</b> <b>analysis</b> algorithm is not correct for this model. In this paper we survey several approaches to handle diagonal constraints and propose a refinement-based method for patching the usual algorithm: erroneous traces found by the classical algorithm are analyzed, and used for refining the model. ...|$|E
40|$|Dynamic {{networks}} of Pushdown Systems (PDN in short) {{have been introduced}} to perform static analysis of concurrent programs that may spawn threads dynamically. In this model the set of successors of a regular set of configurations can be non-regular, making <b>forward</b> <b>analysis</b> of these models difficult. We refine the model by adding the associativecommutative properties of parallel composition, and we define Presburger weighted tree automata, an extension of weighted automata and tree automata, that accept the set of successors of a regular set of configurations. This allows <b>forward</b> <b>analysis</b> of PDN since these automata have a decidable emptiness problem and are closed under intersection...|$|E
40|$|Abstract. Timed automata are {{a widely}} studied model. Its decidability {{has been proved}} using the {{so-called}} region automaton construction. This construction provides a correct abstraction for the behaviours of timed automata, but it suffers from a state explosion and is thus not used in practice. Instead, algorithms based {{on the notion of}} zones are implemented using adapted data structures like DBMs. When we focus on <b>forward</b> <b>analysis</b> algorithms, the exact computation of all the successors of the initial configurations does not always terminate. Thus, some abstractions are often used to ensure termination, among which, a widening operator on zones. In this paper, we study in detail this widening operator and the corresponding <b>forward</b> <b>analysis</b> algorithm. This algorithm is most used and implemented in tools like Kronos and Uppaal. One of our main results is that it is hopeless to find a <b>forward</b> <b>analysis</b> algorithm for general timed automata, that uses such a widening operator, and which is correct. This goes really against what one could think. We then study in detail this algorithm in the more general framework of updatable timed automata, a model which has been introduced as a natural syntactic extension of classical timed automata. We describe subclasses of this model for which a correct widening operator can be found...|$|E
5000|$|<b>Forward</b> error <b>analysis</b> {{involves}} {{the analysis of}} a function [...] which is an approximation (usually a finite polynomial) to a function [...] to determine the bounds on the error in the approximation; i.e., to find [...] such that [...]|$|R
40|$|This {{article focuses}} on the <b>forward</b> {{kinematic}} <b>analysis</b> of a class of asymmetrical parallel manipulators by the proposed elimination approach. To solve the key forward kinematic constraint equations with transcendental parameters of the manipulator, an improved elimination algorithm is presented. First, by analyzing the geometry structure of the manipulator, we find the inherent triangular-topology relations of the manipulator. Further, by utilizing the parameter transformation of angular, the key transcendental equations of <b>forward</b> kinematic <b>analysis</b> are formulated into compact polynomial ones. In this context, comparing with the screw approach by Gallardo-Alvarado suggested that the computation efficiency of our proposed approach is superior. Finally, {{an example of the}} asymmetrical variable geometry truss manipulator illustrates the effectiveness of the proposed approach...|$|R
40|$|We use {{downward}} closed languages for representing sets {{of states}} when performing <b>forward</b> reachability <b>analysis</b> on infinite-state systems. Downward closed languages {{are often more}} succinct than exact representations of the set of reachable states. We introduce a formalism for representing downward closed languages, called downward closed language generators (dlgs) ...|$|R
40|$|We {{propose a}} method for {{performing}} backward analysis on higher [...] order functional programming languages based on computing inverse images of functions over abstract domains. This method {{can be viewed as}} abstract interpretation done backward. Given an abstract semantics which supports <b>forward</b> <b>analysis,</b> we can transform it into an abstract semantics which performs backward analysis. We show that if the original abstract semantics is correct and computable, then the transformed version of the abstract semantics is also correct and computable. More specifically, given a forward abstract semantics of a higher [...] order functional language which is expressed in terms of Scott [...] closed powerdomains, we derive an backward abstraction semantics which is expressed in terms of Scott [...] open powerdomains. The derivation is shown to be correct and the relationships between <b>forward</b> <b>analysis</b> and backward analysis is established. We apply this method to the classic strictness analysis in functional languages [...] ...|$|E
40|$|We {{present a}} {{high-level}} approach to array bound check optimization that is neither hampered by recursive functions, nor disabled {{by the presence}} of partially redundant checks. Our approach combines a <b>forward</b> <b>analysis</b> to infer precise contextual constraint at designated program points, and a backward method for deriving a safety pre-condition for each bound check. Both analyses are formulated {{with the help of a}} practical constraint solver based on Presburger formula...|$|E
40|$|Abstract. Timed automata are {{a widely}} studied model for {{real-time}} systems. Since 8 years, several tools implement this model and are successfully used to verify real-life examples. In {{spite of this}} well-established framework, we prove that the <b>forward</b> <b>analysis</b> algorithm implemented in these tools is not correct! However, we also prove that it is correct for a restricted class of timed automata, which has been sufficient for modeling numerous real-life systems. ...|$|E
40|$|Forward and inverse {{kinematic}} {{modeling of}} robotic manipulators is discussed. Details are {{given for the}} <b>forward</b> kinematic <b>analysis</b> of the KAU articulated robot (RPR version) {{as well as the}} inverse kinematic analysis of the same. Solutions for prismatic and revolute joints are affected by the use of MapleV...|$|R
40|$|In this work, a new {{translational}} robot {{formed with}} two different parallel manipulators {{with a common}} control point is introduced. An asymmetric parallel manipulator provides three translational degrees of freedom to the proposed robot while {{the orientation of the}} end-effector platform is kept constant by means of a Delta-like manipulator. An exact solution is easily derived to solve the <b>forward</b> displacement <b>analysis</b> while a semi-closed form solution is available for solving the inverse displacement analysis. The infinitesimal kinematics of the robot is approached by applying the theory of screws. Finally, a numerical example that consists of solving the inverse/forward displacement analysis as well as the <b>forward</b> acceleration <b>analysis</b> of the end-effector platform is presented. The example also includes the computation of the workspace and the direct/inverse singularities of the example...|$|R
40|$|This paper puts <b>forward</b> an <b>analysis</b> of {{security}} incidents at JPL Computer Systems {{for the year}} 1997. The analysis includes computer systems affected, date and origin of incident, vulnerability type and previous incident dates. The paper also gives the cost of search, correction and lost time due to these incidents...|$|R
40|$|Pure {{names are}} {{identifiers}} with no relation between them, except equality and inequality. In previous works we have extended P/T nets with {{the capability of}} creating and managing pure names, obtaining ν-APNs and proved that they are strictly well structured (WSTS), so that coverability and boundedness are decidable. Here we use the framework recently developed by Finkel and Goubault-Larrecq for <b>forward</b> <b>analysis</b> for WSTS, {{in the case of}} ν-APNs, to compute the cover, that gives a good over approximation of the set of reachable markings. We prove that the least complete domain containing the set of markings is effectively representable. Moreover, we prove that in the completion we can compute least upper bounds of simple loops. Therefore, a forward Karp-Miller procedure that computes the cover is applicable. However, we prove that in general the cover is not computable, so that the procedure is non-terminating in general. As a corollary, we obtain the analogous result for Transfer Data nets and Data Nets. Finally, we show that a slight modification of the <b>forward</b> <b>analysis</b> yields decidability of a weak form of boundedness called width-boundedness...|$|E
40|$|The {{subject of}} this diploma thesis is a design and {{implementation}} of an automated trading system for the forex market. It includes {{an analysis of the}} main concepts and methods of technical analysis and money management, which constitute an essential theoretical basis for the subsequent practical design of an automatic system. The objective of this work is a development of an automated trading system whose robustness and stability is tested by a walk <b>forward</b> <b>analysis...</b>|$|E
40|$|Monitoring and {{performance}} analysis tools based on dynamic program instrumentation frameworks {{are widely used}} to help improve program's reliability {{and performance}}. However, almost all these tools suffer from substantial runtime overhead. This paper employs three methods, including multithread monitoring code instrumentation, buffer-based offline data analysis and a novel approach to construct dominant tree according to data flow <b>forward</b> <b>analysis</b> theory, to reduce the overhead. A prototype tool named DBIMAT is developed and comparative experiments show that the new tool can efficiently improve the instrumentation speed and notably reduce the overhead. © 2013 IEEE. Monitoring and performance analysis tools based on dynamic program instrumentation frameworks are widely used to help improve program's reliability and performance. However, almost all these tools suffer from substantial runtime overhead. This paper employs three methods, including multithread monitoring code instrumentation, buffer-based offline data analysis and a novel approach to construct dominant tree according to data flow <b>forward</b> <b>analysis</b> theory, to reduce the overhead. A prototype tool named DBIMAT is developed and comparative experiments show that the new tool can efficiently improve the instrumentation speed and notably reduce the overhead. © 2013 IEEE...|$|E
40|$|This study aims {{to examine}} and analyze the effect of {{leadership}} style, motivation and discipline of employees working {{on the performance of}} PT DHL Global Forwarding. Data collected through questionnaires and conducted on 54 employees of PT DHL Global <b>Forwarding.</b> <b>Analysis</b> of the data in this study using SPSS version 17. This study does not use sampling techniques because the samples study entirely of the population which called the census data and testing techniques used in this study include the validity of the test, the Cronbach alpha reliability test, the classical assumption test and multiple linear regression analysis, to test and prove the research hypothesis. The analysis showed significant positive effect of leadership styles on employee performance. This research also found that motivation have significant positive effect on employee performance and discipline of work also have significant positive effect on employee performanc...|$|R
40|$|We {{consider}} {{verification of}} safety properties for concurrent real-timed systems modelled as timed Petri nets, by performing symbolic <b>forward</b> reachability <b>analysis.</b> We introduce a formalism, called region generators for representing sets of markings of timed Petri nets. Region generators characterize downward closed sets of regions, and provide exact abstractions of sets of reachable states {{with respect to}} safety properties. We show that the standard operations needed for performing symbolic reachability analysis are computable for region generators. Since <b>forward</b> reachability <b>analysis</b> is necessarily incomplete, we introduce an acceleration technique to make the procedure terminate more often on practical examples. We have implemented a prototype for analyzing timed Petri nets {{and used it to}} verify a parameterized version of Fischer’s protocol, Lynch and Shavit’s mutual exclusion protocol and a producer-consumer protocol. We also used the tool to extract finite-state abstractions of these protocols...|$|R
50|$|From June to September 2006, Wickstrom {{served at}} Camp Victory, Iraq as Team Leader, Joint Center for Operational <b>Analysis</b> (<b>Forward),</b> United States Joint Forces Command.|$|R
