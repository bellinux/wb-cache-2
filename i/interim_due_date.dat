0|3521|Public
40|$|This {{research}} {{examines the}} performance of <b>due</b> <b>date,</b> resource allocation, project release, and activity scheduling rules in a multiproject environment. The results show that workload sensitive <b>due</b> <b>date</b> rules always provide better <b>due</b> <b>date</b> estimates than workload insensitive <b>due</b> <b>date</b> rules. In contrast, {{the performance of}} <b>due</b> <b>date</b> sensitive resource allocation rules is severely affected by <b>due</b> <b>date</b> nervousness. When <b>due</b> <b>date</b> nervousness is not mitigated, the <b>due</b> <b>date</b> insensitive First In System First Served (FISFS) resource allocation rule performs better than the <b>due</b> <b>date</b> sensitive resource allocation rules. Project release rules can, however, mitigate the effect of <b>due</b> <b>date</b> nervousness. Using a simple project release rule, {{the results show that}} the <b>due</b> <b>date</b> sensitive Minimum Project <b>Due</b> <b>Date</b> resource allocation rule performs better than FISFS and two other <b>due</b> <b>date</b> sensitive resource allocation rules in many project environments...|$|R
40|$|In this paper, we {{consider}} <b>due</b> <b>date</b> assignment and single-machine scheduling problems with learning effect and controllable processing times. The actual processing {{time of a}} job depends on its position in a sequence and related resource consumption which contains linear resource consumption or convex resource consumption. The <b>due</b> <b>date</b> assignment methods studied include the common <b>due</b> <b>date,</b> the slack <b>due</b> <b>date</b> and the unrestricted <b>due</b> <b>date.</b> For each {{combination of the two}} resource consumption function and three <b>due</b> <b>date</b> assignment methods, we provide a polynomial-time algorithm to find optimal the job sequence, <b>due</b> <b>date</b> values and resource allocation that minimize an objective function which includes earliness tardiness, <b>due</b> <b>date</b> assignment, the total completion times and total resource consumption...|$|R
40|$|A {{review of}} the results on the <b>due</b> <b>date</b> {{assignment}} and scheduling problems in the static deterministic case is presented. In the problems under consideration, {{the objective is to}} nd optimal values of <b>due</b> <b>dates</b> and the related optimal schedule so that to minimize a given criterion based on the <b>due</b> <b>dates</b> and the completion times of jobs. The <b>due</b> <b>date</b> assignment models where <b>due</b> <b>dates</b> depend on the jobs' processing times or on the positions of the jobs in the schedule are considered. The results on algorithms and complexity of the <b>due</b> <b>date</b> assignment and scheduling problems are summarized in this paper...|$|R
40|$|With the {{increased}} emphasis on the effective management of operational issues in supply chains, the timely delivery of products has become even more important. Companies have to quote attainable delivery dates and then meet these, or face large tardiness penalties. We study systems that can be modeled by single-machine scheduling problems with <b>due</b> <b>date</b> assignment and controllable job-processing times, which are either linear or convex functions {{of the amount of}} a continuously divisible and nonrenewable resource that is allocated to the task. The <b>due</b> <b>date</b> assignment methods studied include the common <b>due</b> <b>date,</b> the slack <b>due</b> <b>date,</b> which reflects equal waiting time allowance for the jobs, and the most general method of unrestricted <b>due</b> <b>dates,</b> when each job may be assigned a different <b>due</b> <b>date.</b> For each combination of <b>due</b> <b>date</b> assignment method and processing-time function, we provide a polynomial-time algorithm to find the optimal job sequence, <b>due</b> <b>date</b> values, and resource allocations that minimize an integrated objective function, which includes the weighted number of tardy jobs, and <b>due</b> <b>date</b> assignment, makespan, and total resource consumption costs. delivery time quotation, order sequencing, single-machine scheduling, <b>due</b> <b>date</b> assignment methods, controllable processing times, resource allocation...|$|R
40|$|VirtualClock service {{scheduling}} scheme [1] is an Earliest <b>Due</b> <b>Date</b> (EDD) scheme {{where the}} <b>due</b> <b>date</b> {{of a cell}} is its departure time from a single server queue with constant service rate equal to the allocated bandwidth of the cell's Virtual Connection (VC). The initial implementation of the VirtualClock scheme [1] computed the <b>due</b> <b>date</b> of an arriving cell and stamped the cell with the <b>due</b> <b>date.</b> The stamped cells were placed in a sorted buffer and served in increasing order of <b>due</b> <b>dates.</b> Since <b>due</b> <b>dates</b> are monotonically increasing parameters, a large buffer is needed to store stamped cells. In this paper, a new implementation is proposed which does not use cell stamping nor any monotonically increasing parameters such as virtual and real clocks. Instead of storing the <b>due</b> <b>dates</b> of each cell, the proposed implementation only keeps track of the time to <b>due</b> <b>date</b> of the Head-of-the-Line (HOL) cell of each VC. Moreover, the proposed implementation also sheds light on the relationship betwee [...] ...|$|R
40|$|The just-??in-??time {{concept in}} {{manufacturing}} has aroused interest in machine schedul??ing problems with earliness-??tardiness penalties. ?? In particular,?? common <b>due</b> <b>date</b> problems??, which are structurally less complicated than problems with general <b>due</b> <b>dates,??</b> {{have emerged as}} an interesting and prolific field of research??. We prove that so-??called almost common <b>due</b> <b>date</b> problems??, in which the <b>due</b> <b>date</b> d_j and processing time p_j of each job J_j ??(j= 1, [...] ., n) are such that d_j âˆˆ [D,D+p_j] for some constant D??, are structurally less complicated also. ?? Our main contribution is an O??(n^ 2) time dynamic programming algorithm for the almost common <b>due</b> <b>date</b> problem with large D. ?? The dynamic programming algorithm is interesting in its own right??, since the optimality principle behind it applies to other common <b>due</b> <b>date</b> and almost common <b>due</b> <b>date</b> problems as well??. ?????? Key Words and Phrases : scheduling with earliness and tardiness penalties,?? almost equal <b>due</b> <b>dates,??</b> dynamic programming??, positional costs??...|$|R
40|$|In this paper, we {{consider}} a single-machine earliness-tardiness scheduling problem with due-date assignment, {{in which the}} processing time of a job {{is a function of}} its position in a sequence and its resource allocation. The <b>due</b> <b>date</b> assignment methods studied include the common <b>due</b> <b>date,</b> and the slack <b>due</b> <b>date,</b> which reflects equal waiting time allowance for the jobs. For each combination of <b>due</b> <b>date</b> assignment method and processing time function, we provide a polynomial-time algorithm to find the optimal job sequence, <b>due</b> <b>date</b> values, and resource allocations that minimize an integrated objective function, which includes earliness, tardiness, <b>due</b> <b>date</b> assignment, and total resource consumption costs. Department of Industrial and Systems Engineerin...|$|R
40|$|We {{consider}} single machine {{scheduling and}} <b>due</b> <b>date</b> assignment problems {{in which the}} processing time of a job depends on its position in a processing sequence. The objective functions include the cost of changing the <b>due</b> <b>dates,</b> {{the total cost of}} discarded jobs that cannot be completed by their <b>due</b> <b>dates</b> and, possibly, the total earliness of the scheduled jobs. We present polynomial-time dynamic programming algorithms in the case of two popular <b>due</b> <b>date</b> assignment methods: CON and SLK. The considered problems are related to mathematical models of cooperation between the manufacturer and the customer in supply chain scheduling. Single machine scheduling Common <b>due</b> <b>date</b> assignment SLK <b>due</b> <b>date</b> assignment Positionally dependent processing times...|$|R
40|$|This {{paper is}} {{concerned}} with the problem of maintaining open order <b>due</b> <b>dates</b> in job shops that plan and schedule their operations using Material Requirements Planning (MRP) methodology. Two different techniques for dealing with open order <b>due</b> <b>date</b> changes are analyzed using customer service level and total inventory level performance measures. With the first technique, called the fixed <b>due</b> <b>date</b> approach, <b>due</b> <b>dates</b> are never changed from those originally assigned to orders when released to the shop. With the second technique, called the dynamic <b>due</b> <b>date</b> approach, all <b>due</b> <b>dates</b> are updated to reflect actual need dates. Beyond evaluating them in an MRP context, this study extends current understanding of these two techniques by observing them in a variety of different operating environments. The results of the study indicate that: (1) the dynamic <b>due</b> <b>date</b> approach performs as good as, or better than, the fixed <b>due</b> <b>date</b> approach across a wide range of operating conditions; and (2) operating conditions have an important effect on the magnitude of the performance differential between the two approaches. production scheduling, material requirements planning, shop floor control, <b>due</b> <b>date</b> maintenance, rescheduling...|$|R
40|$|This paper {{addresses}} a scheduling {{problem of a}} mold die production system in which parts can be assembled after all parts composing a die are fabricated. First, we analyze effects of dispatching rules, which relate to <b>due</b> <b>date,</b> slack time, operation time and modified process <b>due</b> <b>date,</b> on a part makespan and a ratio (the makespan/the maximum total operation time of part in a die), and present the optimum rule which minimizes the makespan. Next, we consider a method for estimating <b>due</b> <b>dates</b> based on the mean and the standard deviation of the ratio. Finally, using the above method we make a schedule, and analyze effects of rules and estimated <b>due</b> <b>dates</b> on the tardiness of die. The results show that rules are classified into three groups. The rules modifying process <b>due</b> <b>dates</b> perform well in the makespan, while the rule ignoring <b>due</b> <b>dates</b> performs worst. Furthermore, the coefficient of <b>due</b> <b>date,</b> which reduces a percentage of tardy dies to a desired value, can be approximately estimated by the proposed method. The rules modifying process <b>due</b> <b>dates</b> yield a smaller tardiness, and the rules using process <b>due</b> <b>dates</b> yield a smaller maximum tardiness...|$|R
40|$|Managers of {{construction}} projects, maintenance activities, auditing contracts, software shops, etc. are frequently {{faced with the}} task of establishing a new project's <b>due</b> <b>date,</b> which must compete with other projects already in progress or expected (forecasted) to start in the future. The study reported here addresses the problem of establishing <b>due</b> <b>dates</b> for projects which require limited resources, in an environment where new projects arrive continuously and randomly over time. A set of procedures is developed which set each project's <b>due</b> <b>date</b> when it arrives using information about the new project, current projects, and available resources. The <b>due</b> <b>date</b> setting procedures are tested via simulation with four activity scheduling heuristics that control the assignment of resources to specific activities of available projects. A second test demonstrates the performance of the <b>due</b> <b>date</b> procedures, where a portion of arriving projects have their <b>due</b> <b>dates</b> established by external forces beyond management's control. Performance measures of project mean completion time, project mean lateness, project standard deviation of lateness, and total tardiness (sum of all projects' tardy time) were collected for evaluation. This study presents a number of important results for managers interested in scheduling projects and setting <b>due</b> <b>dates.</b> First, using more information concerning the current work in progress, available resources, and activity precedent relationships provides a better <b>due</b> <b>date</b> estimate for a new project. Second, a finite scheduling procedure (called SFT) consistently gives better <b>due</b> <b>date</b> estimates than simpler aggregate procedures. Third, when some project <b>due</b> <b>dates</b> are set externally, <b>due</b> <b>date</b> performance deteriorates. However, when SFT is combined with a <b>due</b> <b>date</b> oriented activity scheduling rule, due dale performance deterioration is less. Fourth, the effort, measured by CPU time, for SFT to estimate a good <b>due</b> <b>date</b> depends upon the ratio of activity resources required to total resources available, rather than the number of activities across all projects. And fifth, similarities and differences between the results observed in this study and past <b>due</b> <b>date</b> job shop scheduling research are reviewed. project management: resource constraints, production scheduling, simulation: applications...|$|R
40|$|In {{this paper}} we {{introduce}} {{the concept of}} <b>due</b> <b>date</b> assignment in the project scheduling literature. Despite the fact that <b>due</b> <b>date</b> assignment problems belongs {{to the core of}} the machine scheduling literature, no {{attempts have been made to}} tackle this problem in a project scheduling environment. However, of obvious practical importance, an optimal assignment of <b>due</b> <b>dates</b> is of primary interest to the project manager. In a recent research paper on project scheduling with <b>due</b> <b>dates,</b> the problem has been restricted to considering projects with pre-assigned <b>due</b> <b>dates.</b> In reality, <b>due</b> <b>dates</b> are the results of negotiations, rather than simply dictated by the client of the project. In this paper we consider this negotiation process and take a contractorâ€™s point of view who faces the problem of assigning <b>due</b> <b>dates</b> to a particular project, based on the negotiation arguments of the client. We show that the problem under study can be solved by means of the combination of different ideas from the operations research community. Project Management; <b>Due</b> <b>date</b> assignment; Weighted earliness-tardiness costs,Due dates...|$|R
50|$|EDD-order is {{an order}} based on <b>due</b> <b>date.</b> The {{sequence}} of remaining jobs in sorted based on non-decreasing <b>due</b> <b>date.</b>|$|R
3000|$|... is {{the maximum}} {{completion}} time of all jobs. Tight or loose <b>due</b> <b>dates</b> {{can be obtained}} by large or small value of Ï„ respectively. Moreover, the <b>due</b> <b>date</b> range factor (R) decides the variability of <b>due</b> <b>dates.</b> The range factor (R) is equal to (d [...]...|$|R
3000|$|Defining proper <b>due</b> <b>dates</b> can {{positively}} {{affect the}} performance of the algorithms on the basis of previous work (Bozorgirad and Logendran 2012; Zandieh and Karimi 2011;). Two different factors are introduced to define due dates: tardiness factor (Ï„), and <b>due</b> <b>date</b> range factor (R). The tardiness factor (Ï„) is used to create loose or tight <b>due</b> <b>dates,</b> and Ï„ is defined as 1 - dÌ…/C_max, where dÌ… is the average <b>due</b> <b>date</b> and C [...]...|$|R
40|$|We {{study the}} earliness-tardiness {{scheduling}} problem {{on a single}} machine with <b>due</b> <b>date</b> assignment and controllable processing times. We analyze the problem with three different <b>due</b> <b>date</b> assignment methods and two different processing time functions. For each combination of these, we provide a polynomial-time algorithm to find the optimal job sequence, <b>due</b> <b>date</b> values and resource allocation minimizing an objective function which includes earliness, tardiness, <b>due</b> <b>date</b> assignment, makespan and total resource consumption costs...|$|R
40|$|This {{paper is}} {{a review of}} the results on the <b>due</b> <b>date</b> {{assignment}} and scheduling problems in the static deterministic case. In the problems under consideration, the objective is to find optimal values of the <b>due</b> <b>dates</b> and the related optimal schedule so that to minimize a given criterion based on the <b>due</b> <b>dates</b> and the completion times of jobs. The problems with <b>due</b> <b>date</b> determination have received considerable attention {{in the last ten years}} due to the introduction of new methods of inventory management such as Just-In-Time systems. According to the Just-In-Time concept jobs are to be completed neither too early nor too late which leads to the problems with non-regular measure of performance that includes earliness and tardiness costs. The <b>due</b> <b>date</b> assignment models where <b>due</b> <b>dates</b> depend on the jobs' processing times or on the positions of the jobs in the schedule are considered. The results on algorithms and complexity of the <b>due</b> <b>date</b> assignment and scheduling problems are summarized...|$|R
40|$|The {{just-in-time}} {{concept in}} manufacturing has aroused interest in machine scheduling problems with earliness-tardiness penalties. In particular, common <b>due</b> <b>date</b> problems, which are structurally less complicated than problems with general <b>due</b> <b>dates,</b> {{have emerged as}} an interesting and prolific field of research. We prove that so-called almost common <b>due</b> <b>date</b> problems, in which the <b>due</b> <b>date</b> d j and processing time p j of each job J j (j = 1; : : :; n) are such that d j 2 [D; D+p j] for some constant D, are structurally less complicated also. Our main contribution is an O(n 2) time dynamic programming algorithm for the almost common <b>due</b> <b>date</b> problem with large D. The dynamic programming algorithm is interesting in its own right, since the optimality principle behind it applies to other common <b>due</b> <b>date</b> and almost common <b>due</b> <b>date</b> problems as well. 1980 Mathematics Subject Classification (1991) : 90 B 35. Key Words and Phrases: scheduling with earliness and tardiness penalties, almost eq [...] ...|$|R
40|$|Abstract <b>Due</b> <b>date</b> {{assignment}} {{is an important}} task in shop floor control, affecting both timely delivery and customer sat-isfaction. <b>Due</b> <b>date</b> related performances are impacted {{by the quality of}} the <b>due</b> <b>date</b> assignment methods. Among the sim-ple and easy to implement <b>due</b> <b>date</b> assignment methods, the total work content (TWK) method achieves the best perform-ance for tardiness related performance criteria and is most widely used in practice and in study. The performance of the TWK method can be improved if the <b>due</b> <b>date</b> allowance factor k could render a more precise and accurate flowtime estimation of each individual job. In this study, in order to improve the performance of the TWK method, we have presented a model that incorporated a data mining tool â€“ Decision Tree â€“ for min-ing the knowledge of job scheduling about <b>due</b> <b>date</b> assign-ment in a dynamic job shop environment, which is represented by IF-THEN rules and is able to adjust an appropriate factor k according to the condition of the shop at the instant of job arrival, thereby reducing the <b>due</b> <b>date</b> prediction errors of the TWK method. Simulation results show that our proposed rule-based TWK <b>due</b> <b>date</b> assignment (RTWK) model is significantly better than its static and dynamic counterparts (i. e., TWK and Dynamic TWK methods). In addition, the RTWK model also extracted comprehensive scheduling knowledge about <b>due</b> <b>date</b> assignment, expressed in the form of IF-THEN rules, allowing production managers to easily understand the principles of <b>due</b> <b>date</b> assignment...|$|R
40|$|This paper {{deals with}} <b>due</b> <b>date</b> {{assignment}} and just-in-time scheduling for single machine and parallel machine problems with equal-size jobs where {{the objective is}} to minimize the total weighted earliness-tardiness and <b>due</b> <b>date</b> cost. These two problems, but with a common <b>due</b> <b>date</b> to be calculated, were shown to be polynomially solvable in O(n 4) time. We first show that this complexity can be reduced to O(n 3) by modeling the single machine scheduling problem as an assignment problem without necessary <b>due</b> <b>date</b> enumeration. We next prove that the general case with identical parallel machines and a given set of assignable <b>due</b> <b>dates</b> where the cardinality of this set is bounded by a constant number is still polynomially solvable. Multi-processor scheduling <b>Due</b> <b>dates</b> assignment Earliness-tardiness penalty Polynomial-time algorithms...|$|R
40|$|This chapter {{deals with}} common <b>due</b> <b>date</b> {{scheduling}} problem on single and parallel machines in which job processing times are identical. The {{objective is to}} minimize the total weighted earliness-tardiness. According to the common <b>due</b> <b>date,</b> two cases are considered. In the first case, the <b>due</b> <b>date</b> is given which involves that the common <b>due</b> <b>date</b> is enough early (restrictive version) or not (non-restrictive version) to constraint the optimal solution. In this case, there is no cost related to its value. The second case deals with unknown <b>due</b> <b>date</b> which is a decision variables. It means that the decision maker not only takes sequencing and scheduling decisions to minimize the total weighted earliness-tardiness but also determines the optimal value of <b>due</b> <b>date</b> which is specified as controllable parameter...|$|R
40|$|Given a {{sequencing}} of jobs {{on a single}} machine, each one with a weight, processing time, and a <b>due</b> <b>date,</b> the tardiness of a job is the time needed for its completion beyond its <b>due</b> <b>date.</b> We present an FPTAS for the basic scheduling problem of minimizing the total weighted tardiness {{when the number of}} distinct <b>due</b> <b>dates</b> is fixed. Previously, an FPTAS was known only for the case where all jobs have a common <b>due</b> <b>date.</b> ...|$|R
40|$|We {{consider}} a single-machine scheduling problem involving both the <b>due</b> <b>date</b> assignment and job scheduling under a group technology environment. The jobs (orders) of customers are classified into groups {{according to their}} production similarities in advance. To achieve production efficiency and save time/money resource, all jobs of the same group are required to be processed contiguously on the machine. A sequence-independent setup time precedes the processing of each group. The <b>due</b> <b>dates</b> are assignable {{according to one of}} the following three <b>due</b> <b>date</b> assignment methods: FML-CON, FML-SLK and DIF, where FML-CON means that all jobs within the same group are assigned a common <b>due</b> <b>date,</b> FML-SLK means that all jobs within the same group are assigned an equal flow allowance, and DIF means that each job can be assigned a different <b>due</b> <b>date</b> with no restrictions. The goal is to determine an optimal combination of the <b>due</b> <b>date</b> assignment strategy and job schedule so as to minimize an objective function that includes earliness, tardiness, <b>due</b> <b>date</b> assignment and flow time costs. An O(nlogn) time unified optimization algorithm is provided for all of the above three <b>due</b> <b>date</b> assignment methods. Department of Logistics and Maritime Studie...|$|R
40|$|Abstract. This paper studies {{a single}} machine {{scheduling}} with job rejection and multiple common <b>due</b> <b>dates</b> assignment. A job is either rejected, {{in which a}} rejection penalty has to be paid, or accepted and processed on the machine. There is a cost if the job is completed prior or after the <b>due</b> <b>date.</b> The objective {{is to determine the}} optimal <b>due</b> <b>dates,</b> the set of jobs assigned to each <b>due</b> <b>date</b> and the optimal sequence of jobs to minimize a total costs based on earliness, tardiness, multiple common <b>due</b> <b>dates</b> and rejection cost. We provide dynamic programming algorithms and show that the problem is solvable in polynomial time...|$|R
50|$|By {{virtue of}} the Interpretation Act the <b>due</b> <b>date</b> of all {{individual}} returns is moved to the next business day when the normal <b>due</b> <b>date</b> falls on a Sunday or Holiday. Although ministerial orders are also used to apply this to Saturday <b>due</b> <b>dates,</b> {{it is not a}} legal requirement.|$|R
40|$|We {{consider}} the interrelated problems of (1) quoting a <b>due</b> <b>date</b> to each customer arriving to a production system modeled as a single-server queue and (2) sequencing customer orders {{once they are}} in the system. We allow several different classes of customers, each with different preferences for lead time and price. We first formulate the problem of quoting <b>due</b> <b>dates</b> under the assumption that customer orders are processed on a FCFS basis. Next, we {{consider the}} case where the firm has the option to schedule orders in other than FCFS order. For this case, we develop a heuristic for quoting <b>due</b> <b>dates</b> and sequencing orders. Simulation results suggest that policies that take into account customer price and <b>due</b> <b>date</b> preferences in scheduling and quoting <b>due</b> <b>dates</b> significantly outperform <b>due</b> <b>date</b> setting policies that do not. delivery-time competition, time-sensitive customers, pricing, sequencing...|$|R
30|$|The <b>due</b> <b>date</b> of {{the project}} is {{constant}} and known value. We want the project completion time be smaller than or equal with the <b>due</b> <b>date.</b>|$|R
40|$|AbstractIn this paper, we {{consider}} the problem of simultaneous determination of optimal <b>due</b> <b>dates</b> and optimal schedule for the single machine problem with multiple common <b>due</b> <b>dates.</b> The penalty for a job {{is assumed to be}} a linear function of the <b>due</b> <b>date</b> and the earliness/tardiness for the job. The objective function is to minimize the total penalty for all jobs. We show that with the introduction of learning to job processing times the problem remains polynomially solvable for a given number of multiple common <b>due</b> <b>dates...</b>|$|R
40|$|AbstractWe study bicriteria {{problems}} of minimizing maximum tardiness and total <b>due</b> <b>date</b> assignment cost in various scheduling environments. We assume that each job {{can be assigned}} a different <b>due</b> <b>date</b> without any restriction, and that each <b>due</b> <b>date</b> assignment cost is a non-decreasing function of the quoted <b>due</b> <b>date.</b> We settle the complexity {{of most of the}} problems studied by either proving that they are NP-hard or finding a polynomial time solution for them. We also include approximation and non-approximability results for several parallel-machine problems...|$|R
40|$|This paper {{considers}} {{the problem of}} scheduling deteriorating jobs and <b>due</b> <b>date</b> assignment on a single machine. The actual processing time of a job is a linear increasing function of its starting time. The problem {{is to determine the}} optimal <b>due</b> <b>dates</b> and the processing sequence simultaneously to minimize costs for earliness, <b>due</b> <b>date</b> assignment and weighted number of tardy jobs. We present polynomial-time algorithms to solve the problem in the case of two popular <b>due</b> <b>date</b> assignment methods: CON and SLK. Department of Logistics and Maritime Studie...|$|R
40|$|International audienceThis paper {{deals with}} <b>due</b> <b>date</b> {{assignment}} and just-in-time scheduling for single machine and parallel machine problems with equal-size jobs where {{the objective is}} to minimize the total weighted earliness-tardiness and <b>due</b> <b>date</b> cost. These two problems, but with a common <b>due</b> <b>date</b> to be calculated, were shown to be polynomially solvable in O(n^ 4) time. We first show that this complexity can be reduced to O(n^ 3) by modeling the single machine scheduling problem as an assignment problem without necessary <b>due</b> <b>date</b> enumeration. We next prove that the general case with identical parallel machines and a given set of assignable <b>due</b> <b>dates</b> where the cardinality of this set is bounded by a constant number is still polynomially solvable...|$|R
40|$|AbstractThis paper {{introduces}} a new subclass of machine scheduling problems in which <b>due</b> <b>dates</b> {{are treated as}} variables and must be assigned to the individual jobs. A solution then is a sequence of jobs along with <b>due</b> <b>date</b> assignments. In contrast to existing <b>due</b> <b>date</b> assignment models, solutions to the proposed problems do not depend on predetermined rules or the requirement that <b>due</b> <b>dates</b> be assigned {{in the same order}} as the sequence. The single machine case is investigated in detail. Complexity results are presented for all common objective functions and processing restrictions. The analysis shows that in a number of instances polynomial time algorithms are available though most problems that are intractable under traditional <b>due</b> <b>date</b> definitions remain so...|$|R
40|$|AbstractWe {{discuss the}} problem of {{scheduling}} a set of n independent jobs on m parallel machines to minimize costs for earliness, <b>due</b> <b>date</b> assignment and weighted number of tardy jobs. We restrict the <b>due</b> <b>dates</b> to the common <b>due</b> <b>date</b> case, but discuss some special cases for arbitrary <b>due</b> <b>dates,</b> especially we show the connection to the classical scheduling problem of minimizing the weighted number of tardy jobs on a single machine or parallel machines, respectively. For the common <b>due</b> <b>date,</b> we distinguish between two different models, namely an externally given common <b>due</b> <b>date</b> or an adjustable common <b>due</b> <b>date.</b> We give nearly a full classification for the single and multiple machine models. The only exception is a special single machine case, where we can only provide a pseudopolynomial algorithm and the complexity status of this special case remains open. For all other problems, we either develop polynomial algorithmsâ€”of order n, n log n and n 4, respectively, or give NP-hardness proofsâ€”reductions of the Knapsack problem, the even-odd-partition problem and of the NP-hard scheduling problems n, 1 r(j) â‰¥ 0 C and nP 2 âˆ¥Cmax...|$|R
30|$|<b>Due</b> <b>date</b> is {{determined}} for each part. As a result, tardiness penalty is incurred for each part type per time unit {{if it is}} not completed before its <b>due</b> <b>date.</b>|$|R
40|$|The {{problem of}} {{scheduling}} n jobs with a variable common <b>due</b> <b>date</b> {{on a single}} machine is studied. It is assumed that the job processing times are non-increasing linear functions of {{an equal amount of}} a resource allocated to the jobs. The <b>due</b> <b>date</b> and resource values can be continuous or discrete. The objective is to minimize a linear combination of scheduling, <b>due</b> <b>date</b> assignment and resource consumption costs. The resource consumption cost function may be non-monotonous. Algorithms with O(n 2 log n) running times are presented for scheduling costs involving earliness/tardiness and number of tardy jobs. Computational experiments show that the algorithms can solve problems with n = 5, 000 {{in less than a minute}} on a standard PC. We study a problem that combines scheduling, common <b>due</b> <b>date</b> assignment and resource allocation decisions. <b>Due</b> <b>date</b> scheduling is an important area of scheduling research because it focuses on customer satisfaction. Variable common <b>due</b> <b>date</b> applies to situations where several items constitute a single customer's order and the <b>due</b> <b>date</b> for the order can be negotiated. Resource-dependent processing times appear whenever resources can be employed to adjust processing requirements. Polynomial time algorithms are presented for minimizing a linear combination of scheduling, <b>due</b> <b>date</b> assignment and resource consumption costs. Computational experiments demonstrate their efficiency in solving large-scale problem instances. Department of Logistics and Maritime Studie...|$|R
3000|$|<b>Due</b> <b>date</b> {{assignment}} rule is used {{to determine}} the <b>due</b> <b>dates</b> for arriving jobs by estimating the job flowtimes (the time taken from the arrival until the completion of a job).|$|R
