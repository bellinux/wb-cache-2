78|34|Public
25|$|The 68000 {{grew out}} of the MACSS (Motorola Advanced Computer System on Silicon) project, begun in 1976 to develop an entirely new {{architecture}} without backward compatibility. It would be a higher-power sibling complementing the existing 8-bit 6800 line rather than a compatible successor. In the end, the 68000 did retain a bus protocol compatibility mode for existing 6800 peripheral devices, and a version with an 8-bit data bus was produced. However, the designers mainly focused on the future, or <b>forward</b> <b>compatibility,</b> which gave the 68000 design a head start against later 32-bit instruction set architectures. For instance, the CPU registers are 32bits wide, though few self-contained structures in the processor itself operate on 32bits at a time. The MACSS team drew heavily on the influence of minicomputer processor design, such as the PDP-11 and VAX systems, which were similarly microcode-based.|$|E
2500|$|After {{the header}} comes {{a series of}} chunks, each of which conveys certain {{information}} about the image. Chunks declare themselves as critical or ancillary, and a program encountering an ancillary chunk {{that it does not}} understand can safely ignore it. [...] This chunk-based storage layer structure, similar in concept to a container format or to Amiga's IFF, is designed to allow the PNG format to be extended while maintaining compatibility with older versions—it provides <b>forward</b> <b>compatibility,</b> and this same file structure (with different signature and chunks) is used in the associated MNG, JNG, and APNG formats.|$|E
2500|$|The 68000 has a 24-bit {{external}} {{address bus}} and two byte-select signals [...] "replaced" [...] A0. These 24 lines can therefore address 16 MB of physical memory with byte resolution. Address storage and computation uses 32 bits internally; however, the 8 high-order address bits are ignored due to the physical lack of device pins. This allows it to run software written for a logically flat 32-bit address space, while accessing only a 24-bit physical address space. [...] Motorola's intent with the internal 32-bit address space was <b>forward</b> <b>compatibility,</b> making it feasible to write 68000 software that would {{take full advantage of}} later 32-bit implementations of the 68000 instruction set.|$|E
5000|$|Compatibility {{flagging}} for {{backwards and}} <b>forwards</b> <b>compatibility</b> with other SQL standards.|$|R
50|$|If a {{new table}} {{is to be}} added, it is created at the moment its first row is inserted. The first row appears only when the first {{attribute}} value is added to it. <b>Forwards</b> <b>compatibility</b> with future databases is possible because future databases may have new tables or any other structure that can be discovered and used, can be simply ignored or can be handled opaquely by older code.|$|R
40|$|The {{research}} {{described in}} this paper is performed {{as part of the}} Globus Project. It introduces a new Grid service called InfoGram that combines the ability of serving as information service and as a job execution service. Previously, both services were architected and implemented within the Globus Toolkit as two different services with different wire protocols. Our service demonstrates a significant simplification of the architecture while treating job submissions and information queries alike. The advantage of our service is that it provides backwards compatibility to existing Grid services, {{while at the same time}} providing <b>forwards</b> <b>compatibility</b> to the emerging Web services world. Part of the work conducted within this effort is already reused by the current Open Grid Services Architecture prototype implementation...|$|R
5000|$|Weak {{backward}} and <b>forward</b> <b>compatibility</b> requires a wrapper script.|$|E
50|$|Version {{targeting}} {{has been}} criticised for not giving incentives to developers to plan ahead for <b>forward</b> <b>compatibility.</b>|$|E
50|$|GDL {{maintains}} <b>forward</b> <b>compatibility,</b> {{which means}} that an ArchiCAD library part will be readable with every subsequent ArchiCAD program, but not necessarily with any earlier versions.|$|E
50|$|The Sony Ericsson Java Platform {{is a set}} of {{profiles}} describing particular Sony Ericsson Java implementation. It {{was designed}} to help developers to focus on a platform rather than on a variety of different product names. Two platform branches exist, supporting Symbian (SJP) and non-Symbian (JP) based phones respectively. The platforms are implemented through an evolutionary approach in order to ensure <b>forwards</b> <b>compatibility</b> between platform versions, which means that all JSRs (except the optional) implemented on one platform are also implemented on all higher platforms. Normally each platform version is used in several phone models. Some platform features are optional, that is, configurable. For example, the Java Bluetooth APIs (JSR 82) are only enabled for phones which actually support Bluetooth wireless technology. These interfaces are mostly invisible to the end user, who only has to download a JAR file containing the application to the phone.|$|R
40|$|The ext 2 and ext 3 filesystems on Linux R ○ {{are used}} by {{a very large number}} of users. This is due to its {{reputation}} of dependability, robustness, backwards and <b>forwards</b> <b>compatibility,</b> rather than that of being the state of the art in filesystem technology. Over the last few years, however, there has been a significant amount of development effort towards making ext 3 an outstanding filesystem, while retaining these crucial advantages. In this paper, we discuss those features that have been accepted in the mainline Linux 2. 6 kernel, including directory indexing, block reservation, and online resizing. We also discuss those features that have been implemented but are yet to be incorporated into the mainline kernel: extent maps, delayed allocation, and multiple block allocation. We will then examine the performance improvements from Linux 2. 4 ext 3 filesystem to Linux 2. 6 ext 3 filesystem using industrystandard benchmarks features. Finally, we will touch upon some potential future work which is still under discussion by the ext 2 / 3 developers. 1...|$|R
50|$|The Kaleidoscope, {{announced}} by SAMCo shortly before bankruptcy, extended the machine's total colour palette to 32,768 colours {{in such a}} way as to allow <b>forwards</b> and backwards <b>compatibility</b> by applications. Although complete, very few were produced and the design ceased with SAMCo.|$|R
5000|$|<b>Forward</b> <b>compatibility</b> is {{a design}} {{characteristic}} {{that allows a}} system to accept input intended for a later version of itself. The concept {{can be applied to}} entire systems, electrical interfaces, telecommunication signals, data communication protocols, file formats, and computer programming languages. A standard supports <b>forward</b> <b>compatibility</b> if a product that complies with earlier versions can [...] "gracefully" [...] process input designed for later versions of the standard; the ability of a system to select known input and ignore unknown input also depends on whether the new standard is backward compatible.|$|E
50|$|In {{addition}} to pure container formats, which specify only the wrapper {{but not the}} coding, a number of file formats specify both a storage layer and the coding, as part of modular design and <b>forward</b> <b>compatibility.</b>|$|E
50|$|SVC enables <b>forward</b> <b>compatibility</b> {{for older}} hardware: the same {{bitstream}} can be consumed by basic hardware {{which can only}} decode a low-resolution subset (i.e. 720p or 1080i), while more advanced hardware will be able decode high quality video stream (1080p).|$|E
25|$|VLC {{media player}} is cross-platform, with {{versions}} for Android, BeOS, iOS, macOS, OS/2, Unix-like, Syllable, and MS Windows. However, <b>forward</b> and backward <b>compatibility</b> between versions of VLC media player and {{different versions of}} OSs are not maintained over {{more than a couple}} or so generations. 64-bit builds are available for 64-bit Windows.|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (1998). All Rights Reserved. This document describes a protocol, named OAKLEY, by which two authenticated parties can agree on secure and secret keying material. The basic mechanism is the Diffie-Hellman key exchange algorithm. The OAKLEY protocol supports Perfect <b>Forward</b> Secrecy, <b>compatibility</b> with the ISAKMP protocol for managing security associations, userdefined abstract group structures for use with the Diffie-Hellman algorithm, key updates, and incorporation of keys distributed via out-of-band mechanisms. 1...|$|R
5|$|System {{calls are}} being split into userland and kernel {{versions}} and being encapsulated into messages. This will {{help reduce the}} size {{and complexity of the}} kernel by moving variants of standard system calls into a userland compatibility layer, and help maintain <b>forwards</b> and backwards <b>compatibility</b> between DragonFly versions. Linux and other Unix-like OS compatibility code is being migrated out similarly.|$|R
5000|$|According to ITU-T Q.761 section 2.4.1 ISUP {{interworking}} ISUP'92 is {{backwards compatible}} with ISUP Blue Book and Q.767 for basic call procedures and supplementary services {{except for some}} procedures (e.g. number portability). [...] Additionally the compatibility features introduced in this version ensure <b>forward</b> <b>compatibility</b> with newer versions.|$|E
50|$|For these reasons, {{in general}} older CD-RW drives lacking {{appropriate}} firmware and hardware cannot handle newer, high speed CD-RW discs (poor <b>forward</b> <b>compatibility),</b> while newer drives can generally record to older CD-RW discs, provided their firmware {{can set the}} correct speed, delay and power settings for the task.|$|E
50|$|The {{timeline}} {{shows that}} the span of a single release generation of FreeBSD lasts around 5 years. Since the FreeBSD project makes effort for binary backward (and limited <b>forward)</b> <b>compatibility</b> within the same release generation, this allows users 5+ years of support, with trivial-to-easy upgrading within the release generation.|$|E
50|$|VLC {{media player}} is a {{cross-platform}} media player, with versions for Android, BeOS, BSD, iOS, Linux, macOS, OS/2, QNX, Solaris, Syllable, and Windows. However, <b>forward</b> and backward <b>compatibility</b> between versions of VLC media player and {{different versions of}} OS are not maintained over {{more than a couple}} or so generations. 64-bit builds are available, and an experimental version is available for 64-bit Windows.|$|R
50|$|System {{calls are}} being split into userland and kernel {{versions}} and being encapsulated into messages. This will {{help reduce the}} size {{and complexity of the}} kernel by moving variants of standard system calls into a userland compatibility layer, and help maintain <b>forwards</b> and backwards <b>compatibility</b> between DragonFly versions. Linux and other Unix-like OS compatibility code is being migrated out similarly.|$|R
50|$|<b>Forward</b> and {{backward}} <b>compatibility</b> was maintained {{in most cases}} so that the newer lenses could be used on older cameras, and old standard lenses could be used on the newer cameras, but of course without the advanced automation. However, Olympus FTL lenses and Fujica screw mount lenses had a projecting cam {{which means that they}} cannot be fully screwed down on a regular screw mount body.|$|R
50|$|The {{introduction}} of FM stereo transmission, or color television, allowed <b>forward</b> <b>compatibility,</b> since monophonic FM radio receivers and black-and-white TV sets still could receive {{a signal from}} a new transmitter. It also allowed backward compatibility since new receivers could receive monophonic or black-and-white signals generated by old transmitters.|$|E
50|$|CardBay is {{a variant}} {{added to the}} PCMCIA {{specification}} introduced in 2001. It was intended to add some <b>forward</b> <b>compatibility</b> with USB and IEEE 1394, but was not universally adopted and only some notebooks have PC Card controllers with CardBay features. This is an implementation of Microsoft and Intel's joint Drive Bay initiative.|$|E
50|$|Despite {{identifiability}} by the PTP/MTP USB device class, libmtp documentation {{indicates that}} the vendor and product ID combination plays a functional role in identifying an MTP device, also by Windows drivers. Libmtp includes vast listings of vendor and product ID numbers of devices that it supports, along with workarounds for bugs. This non-generic methodology hinders MTP drivers' <b>forward</b> <b>compatibility</b> with new devices.|$|E
40|$|The present paper {{studies the}} market of a durable good and its upgrade in the {{presence}} of network effects. We investigate the firm’s strategic decision upon compatibility between the durable and the upgrade faced to a potential entrant. We consider backward, <b>forward</b> and two-way <b>compatibility</b> and characterize mar-ket equilibria under each regime. By making comparison between the equilibria, we elucidate the features of the regimes in terms of entry prevention and puts in light the incumbent’s optimal compatibility decision...|$|R
40|$|The {{increasing}} use of dual energy X-ray absorptiometry (DXA) {{in children}} {{has led to the}} need for robust reference data for interpretation of scans in daily clinical practice. Such data need to be representative of the population being studied and be ‘future-proofed’ to software and hardware upgrades. The aim was to combine all available paediatric DXA reference data from seven UK centres to create reference curves adjusted for age, sex, ethnicity and body size to enable clinical application, using in-vivo cross calibration and making data back- and forward- compatible. Seven UK sites collected data on GE-Lunar or Hologic Scanners between 1996 and 2012. Males and females aged 4 to 20 years were recruited (n[*]=[*] 3598). The split by ethnic group was: White Caucasian 2887; South Asian 385; Black Afro-Caribbean 286; mixed heritage 40. Scans of the total body and lumbar spine (L 1 -L 4) were obtained. The European Spine Phantom was used to cross-calibrate the 7 centres and 11 scanners. Reference curves were produced for L 1 -L 4 bone mineral apparent density (BMAD) and total body less head (TBLH) and L 1 -L 4 areal bone mineral density (aBMD) for GE Lunar Prodigy and iDXA (sex-and ethnic-specific) and for Hologic (sex-specific). Regression equations for TBLH BMC were produced using stepwise linear regression. Scans of 100 children were randomly selected to test backwards and <b>forwards</b> <b>compatibility</b> of software versions, up to version 15. 0 for GE Lunar, and Apex 4. 0 for Hologic. For the first time, sex and ethnic- specific reference curves for lumbar spine BMAD, aBMD and TBLH aBMD are provided for both GE-Lunar and Hologic scanners. These curves will facilitate interpretation of DXA data in children using methods recommended in ISCD guidelines. The databases have been created to allow future updates and analysis when more definitive evidence for the best method of fracture prediction in children is agreed...|$|R
40|$|Today {{numerous}} software {{systems are}} being developed on top of frameworks. In this study, we analyzed the survival of 467 Eclipse third-party plug-ins altogether having 1, 447 versions. We classify these plug-ins into two categories: those that depend on only stable and supported Eclipse APIs and those that depend {{on at least one}} of the potentially unstable, discouraged and unsupported Eclipse non-APIs. Comparing the two categories of plug-ins, we observed that the plug-ins depending solely on APIs have a very high source compatibility success rate compared to those that depend on {{at least one of the}} non-APIs. However, we have also observed that recently released plug-ins that depend on non-APIs also have a very high <b>forward</b> source <b>compatibility</b> success rate. This high source compatibility success rate is due to the dependency structure of these plug-ins: recently released plug-ins that depend on non-APIs predominantly depend on old Eclipse non- APIs rather than on newly introduced ones. Finally, we showed that the majority of plug-ins hosted on SourceForge do not evolve beyond the first year of release...|$|R
5000|$|The {{situation}} may arise {{if there are}} limitations on backward compatibility and <b>forward</b> <b>compatibility</b> among system components, which then requires that updates be performed almost simultaneously (during a [...] "flag day cutover") for the system to function after the upgrade. This contrasts with the method of gradually phased-in upgrades, which avoids the disruption of service caused by en masse upgrades.|$|E
50|$|A simple {{example of}} both {{backward}} and <b>forward</b> <b>compatibility</b> {{is the introduction}} FM radio in stereo. FM radio was initially mono, with only one audio channel represented by one signal. With the introduction of two-channel stereo FM radio, {{a large number of}} listeners had only mono FM receivers. <b>Forward</b> <b>compatibility</b> for mono receivers with stereo signals was achieved through sending the sum of both left and right audio channels in one signal and the difference in another signal. That allows mono FM receivers to receive and decode the sum signal while ignoring the difference signal, which is necessary only for separating the audio channels. Stereo FM receivers can receive a mono signal and decode it without the need for a second signal, and they can separate a sum signal to left and right channels if both sum and difference signals are received. Without the requirement for backward compatibility, a simpler method could have been chosen.|$|E
50|$|One of {{the user}} {{experience}} goals for the designers of Windows 95 was {{the ability to use}} long filenames (LFNs—up to 255 UCS-2 code units long), in addition to classic 8.3 filenames (SFNs). For backward and <b>forward</b> <b>compatibility</b> LFN were implemented as an optional extension on top of the existing FAT file system structures using a workaround in the way directory entries are laid out.|$|E
40|$|Abstract—Today {{numerous}} software {{systems are}} being de-veloped {{on top of}} frameworks. In this study, we analyzed the survival of 467 Eclipse third-party plug-ins altogether having 1, 447 versions. We classify these plug-ins into two categories: those that depend on only stable and supported Eclipse APIs and those that depend {{on at least one}} of the potentially unstable, discouraged and unsupported Eclipse non-APIs. Comparing the two categories of plug-ins, we observed that the plug-ins depending solely on APIs have a very high source compatibility success rate compared to those that depend on {{at least one of the}} non-APIs. However, we have also observed that recently released plug-ins that depend on non-APIs also have a very high <b>forward</b> source <b>compatibility</b> success rate. This high source compatibility success rate is due to the dependency structure of these plug-ins: recently released plug-ins that depend on non-APIs predominantly depend on old Eclipse non-APIs rather than on newly introduced ones. Finally, we showed that the majority of plug-ins hosted on SourceForge do not evolve beyond the first year of release. Keywords-Eclipse; Third-party plug-ins; APIs; non-APIs; I...|$|R
50|$|An {{advantage}} of tags {{is that they}} ease the work with default arguments since the programmer doesn't have to specify them or their substitutes. From this follows another advantage, ease of achieving of both <b>forward</b> and backward <b>compatibility</b> with external libraries: a program written for an older version of the library will work with a newer one, since the newer library will simply set all the parameters not provided by the program to their default values; and a program written for a newer version of the library will still work with the older version, since the older library will simply {{pay no attention to}} the newly introduced tags.|$|R
50|$|While the {{different}} NTFS versions {{have a certain}} degree of both <b>forward</b> and backward <b>compatibility,</b> there are certain issues when mounting newer NTFS volumes containing persistent shadow copies in older versions of Windows. This affects dual-booting, and external portable hard drives. Specifically, the persistent shadow copies created by Windows Vista on an NTFS volume are deleted when Windows XP or Windows Server 2003 mount that NTFS volume. This happens because the older operating system does not understand the newer format of persistent shadow copies. Likewise, System Restore snapshots created by Windows 8 are deleted if they are exposed to a previous version of Windows.|$|R
