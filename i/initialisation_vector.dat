13|6|Public
5000|$|Payload data (variable) : The {{protected}} {{contents of}} the original IP packet, including any data used to protect the contents (e.g. an <b>Initialisation</b> <b>Vector</b> for the cryptographic algorithm). The type of content that was protected is indicated by the Next Header field.|$|E
5000|$|To {{carry out}} the attack, a special {{plaintext}} file is created for encryption in the system under attack, such that the first ciphertext block in two or more sectors is identical. This requires that the input to the cipher (plaintext, , XOR <b>initialisation</b> <b>vector,</b> [...] ) for each block must be the same; i.e., [...] Thus, we must choose plaintexts, [...] such that [...]|$|E
50|$|Most {{of the key}} {{was kept}} {{constant}} for a set time period, typically a day. A different initial rotor position was used for each message, a concept similar to an <b>initialisation</b> <b>vector</b> in modern cryptography. The reason is that encrypting many messages with identical or near-identical settings (termed in cryptanalysis as being in depth), would enable an attack using a statistical procedure such as Friedman's Index of coincidence. The starting position for the rotors was transmitted just before the ciphertext, usually after having been enciphered. The exact method used was termed the indicator procedure. Design weakness and operator sloppiness in these indicator procedures {{were two of the}} main weaknesses that made cracking Enigma possible.|$|E
40|$|Abstract. We generalise {{the cube}} attack of Dinur and Shamir (and the similar AIDA attack of Vielhaber) {{to a more}} general higher order differ-entiation attack, by summing over an {{arbitrary}} subspace of the space of <b>initialisation</b> <b>vectors.</b> The Moebius transform {{can be used for}} efficiently examining all the subspaces of a big space, similar to the method used by Fouque and Vannet for the usual cube attack. Secondly we propose replacing the Generalised Linearity Test proposed by Dinur and Shamir with a test based on higher order differentiation/ Moebius transform. We show that the proposed test provides all the information provided by the Generalised Linearity Test, at the same computational cost. In addition, for functions that do not pass the lin-earity test it also provides, at no extra cost, an estimate of the degree of the function. This is useful for guiding the heuristics for the cube/AIDA attacks. Finally we implement our ideas and test them on the stream cipher Trivium...|$|R
40|$|The final {{publication}} {{is available}} at [URL] generalise the cube attack of Dinur and Shamir (and the similar AIDA attack of Vielhaber) to a more general higher order differentiation attack, by summing over an arbitrary subspace of the space of <b>initialisation</b> <b>vectors.</b> The Moebius transform {{can be used for}} efficiently examining all the subspaces of a big space, similar to the method used by Fouque and Vannet for the usual cube attack. Secondly we propose replacing the Generalised Linearity Test proposed by Dinur and Shamir with a test based on higher order differentiation/Moebius transform. We show that the proposed test provides all the information provided by the Generalised Linearity Test, at the same computational cost. In addition, for functions that do not pass the linearity test it also provides, at no extra cost, an estimate of the degree of the function. This is useful for guiding the heuristics for the cube/AIDA attacks...|$|R
40|$|A novel <b>vector</b> {{quantisation}} codebook <b>initialisation</b> method called <b>vector</b> component {{difference is}} proposed for image coding using the discrete multiwavelet transform. Simulation {{results show that}} it is superior to the currently available methods when using with the Linde-Buzo-Gray codebook generation algorithm. Department of Electronic and Information Engineerin...|$|R
5000|$|WEP was the {{encryption}} standard firstly available for wireless networks. It can be deployed in 64 and 128 bit strength. 64 bit WEP has a secret key of 40 bits and an <b>initialisation</b> <b>vector</b> of 24 bits, {{and is often}} called 40 bit WEP. 128 bit WEP has a secret key of 104 bits and an <b>initialisation</b> <b>vector</b> of 24 bits, and is called 104 bit WEP. Association is possible using a password, an ASCII key, or a hexadecimal key.There are two methods for cracking WEP: the FMS attack and the chopping attack.The FMS attack - named after Fluhrer, Mantin, and Shamir - {{is based on a}} weakness of the RC4 encryption algorithm [...] The researchers found that 9000 of the possible 16 million initialisation vectors can be considered weak, and collecting enough of them allows the determination of the encryption key. To crack the WEP key in most cases, 5 million encrypted packets must be captured to collect about 3000 weak initialisation vectors. (In some cases 1500 vectors will do, in some other cases more than 5000 are needed for success.) The weak initialisation vectors are supplied to the Key Scheduling Algorithm (KSA) and the Pseudo Random Generator (PRNG) to determine the first byte of the WEP key. This procedure is then repeated for the remaining bytes of the key.The chopping attack chops the last byte off from the captured encrypted packets. This breaks the Cyclic Redundancy Check/Integrity Check Value (CRC/ICV). When all 8 bits of the removed byte were zero, the CRC of the shortened packet is made valid again by manipulation of the last four bytes. This manipulation is: result = original XOR certain value. The manipulated packet can then be retransmitted. This method enables the determination of the key by collecting unique initialisation vectors.The main problem with both the FMS attack and the chopping attack is that capturing enough packets can take weeks or sometimes months. Fortunately, the speed of capturing packets can be increased by injecting packets into the network. One or more Address Resolution Protocol (ARP) packets are usually collected to this end, and then transmitted to the access point repeatedly until enough response packets have been captured. ARP packets are a good choice because they have a recognizable size of 28 bytes.Waiting for a legitimate ARP packet can take awhile. ARP packets are most commonly transmitted during an authentication process. Rather than waiting for that, sending a deauthentication frame that pushes a client off the network will require that client to reauthenticate. This often creates an ARP packet.|$|E
40|$|Abstract. Stream cipher {{initialisation}} should {{ensure that}} the initial state or keystream is not detectably related to the key and <b>initialisation</b> <b>vector.</b> In this paper we analyse the key/IV setup of the eSTREAM Phase 2 candidates Salsa 20 and TSC- 4. In the case of Salsa 20 we demonstrate a key recovery attack on six rounds and observe non-randomness after seven. For TSC- 4, non-randomness over the full eight-round initialisation phase is detected, but would also persist for more rounds...|$|E
40|$|Abstract. This paper {{presents}} Dragon, a new {{stream cipher}} constructed using {{a single word}} based non-linear feedback shift register and a non-linear filter function with memory. Dragon uses a variable length key and <b>initialisation</b> <b>vector</b> of 128 or 256 bits, and produces 64 bits of keystream per iteration. At the heart of Dragon are two highly optimised 8 Ã— 32 s-boxes. Dragon uses simple operations on 32 -bit words to provide {{a high degree of}} efficiency {{in a wide variety of}} environments, making it highly competitive when compared with other word based stream ciphers. The components of Dragon are designed to resist all known attacks. ...|$|E
40|$|Encryption is {{commonly}} used to provide confidentiality of sensitive or personal information when held on smartphones. While many Android devices feature inbuilt full-disk encryption as a precaution against theft of a device, this is not available on all devices, and doesn't provide security against a device which is turned on and in use. For this reason, {{a wide variety of}} applications are available within the Google Play Store, offering to encrypt user data. Modern, strong encryption offers strong assurances of confidentiality when used correctly, although the fundamental cryptographic primitives are complex, with many opportunities for mistakes to be made. The security of a number of implementations of Android-based encryption applications is investigated. Highly popular applications, including those by Google-endorsed "Top Developers", are considered. A number of major weaknesses in the implementation of encryption within these applications is presented. This highlights the importance of both well-audited open-source cryptographic implementations, as well as the underlying cryptographic algorithms themselves, given the vulnerabilities identified in these applications. In many cases, there was no encryption in use by the application, and file headers were undergoing trivial static obfuscation, such that files would appear corrupted. In other cases, encryption algorithms were used, but with significant implementational errors. In these cases, plaintext recovery was still possible, due to the use of static keys for every installation of the app, and the re-use of cipher <b>initialisation</b> <b>vectors...</b>|$|R
40|$|Wireless Sensor Networks (WSNs) are {{computer}} networks consisting of miniaturised electronic devices that aim {{to gather and}} report information about their environment. The devices are limited in computational, data storage and communication ability. Furthermore, the devices communicate via a wireless, unregulated medium and usually operate on finite power sources. Security in Wireless Sensor Networks is the research area that seeks to provide adequate and energy-efficient security mechanisms for WSNs. Such provision is {{required in order to}} increase their range of possible applications and allow them to be deployed in critical and valuable environments. Existing security mechanisms for larger {{computer networks}} are inappropriate since they were not designed for the resourceconstrained environment of WSNs. There are some purpose-built solutions but this research has found potential security or efficiency problems with each of them. This thesis contributes SecRose, a security mechanism for the data-transportation layer of Wireless Sensor Networks. The solution attempts to provide higher level of security than currently provided, without introduction of significant energy overheads and by retaining backwards compatibility. SecRose achieves its security objectives by introducing a number of innovations and improvements. SecRose innovates in the provision of freshness and semantic security by altering the secret cryptographic keys. The process is managed at the transportation level by the basic key management mechanism. The integrity and safety of the key-changing operation is achieved by authenticating all packets and their acknowledgements. This behaviour contrasts with other proposals, which are based on openly transmitted <b>Initialisation</b> <b>Vectors,</b> and allows SecRose to provide better security than most of them, including TinySec, the accepted standard. In addition, measurements show that SecRose provides better energy-efficiency than other proposals. In particular, the solution requires less energy than TinySec in all cases and it can even be more efficient than the base Operating System, the TinyOS, which does not provide any security at all. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Since their {{introduction}} {{more than}} a decade ago, support vector machines (SVMs) have shown good performance in a number of application areas, including text classification, pattern recognition and bioinformatics. However, the success of SVMs comes at a cost - {{there is no way to}} utilise prior knowledge. SVMs are purely inductive learning machines. In this paper, a novel approach for rule <b>initialisation</b> for support <b>vector</b> machines is presented. The application domain is medical diagnosis. The approach presented here uses domain knowledge in the form of propositional rules to create a virtual data set to bias an SVM. The virtual data set is combined with real data for SVM learning. Knowledge initialisation results in better classification accuracy and enhanced rule quality compared with purely inductive learning...|$|R
40|$|Based on the Cube Attack by Itai Dinur and Adi Shamir and another, in {{the essence}} simi- lar, method we devised a new {{polynomial}} linearisation technique, which {{proved to be}} more powerful, than the Cube Attack alone. Moreover, we present detailed description with formal proof not only of our findings, but also of the Cube Attack. Finally, we demonstrate the results of our efforts on a Trivium variant that is reduced in key and <b>initialisation</b> <b>vector</b> bit count. We managed to linearise polynomials representing a keystream bit output after up to 621 initialisation rounds using purely techniques described in this thesis, compared to 581 initialisation rounds with original attack...|$|E
40|$|This paper {{presents}} Dragon, a new {{stream cipher}} constructed using {{a single word}} based non-linear feedback shift register and a non-linear filter function with memory. Dragon uses a variable length key and <b>initialisation</b> <b>vector</b> of 128 or 256 bits, and produces 64 bits of keystream per iteration. At the heart of Dragon are two highly optimised 8 Ã— 32 s-boxes. Dragon uses simple operations on 32 -bit words to provide {{a high degree of}} efficiency {{in a wide variety of}} environments, making it highly competitive when compared with other word based stream ciphers. The components of Dragon are designed to resist all known attacks...|$|E
40|$|Abstract. In [8], Paterson and Yau {{presented}} padding oracle {{attacks against}} a committee draft {{version of a}} revision of the ISO CBC-mode encryption standard [3]. Some of the attacks in [8] require knowledge and manipulation of the <b>initialisation</b> <b>vector</b> (IV). The latest draft of the revision of the standard [4] recommends the use of IVs that are secret and random. This obviates most of the attacks of [8]. In this paper we consider the security of CBC-mode encryption against padding oracle attacks in this secret, random IV setting. We present new attacks showing that several ISO padding methods are still weak in this situation. Keywords: padding oracle; CBC-mode; ISO standards; side channel...|$|E
40|$|Abstract. We {{describe}} a systematic framework {{for using a}} stream cipher supporting an <b>initialisation</b> <b>vector</b> (IV) to perform various tasks of authentication and authenticated encryption. These include message authentication code (MAC), authenticated encryption (AE), authenticated encryption with associated data (AEAD) and deterministic authenticated encryption (DAE) with associated data. Several schemes are presented and rigourously analysed. A major component of the constructions is a keyed hash function having provably low collision and differential probabilities. Methods are described to efficiently extend such hash functions to take double inputs and more generally multiple inputs. In particular, double-input hash functions are required {{for the construction of}} AEAD schemes. An important practical aspect of our work is that a designer can combine off-the-shelf stream ciphers with off-the-shelf hash functions to obtain secure primitives for MAC, AE, AEAD and DAE(AD) ...|$|E
40|$|This is {{an interim}} {{report on the}} {{investigations}} into securing Asynchronous Transfer Mode (ATM) networks. We look at the challenge in providing such a secure ATM network and identify the important issues in achieving such goal. In this paper, we discuss the issues and problems involved and outline some techniques to solving these problems. The network environment is first examined and we also consider the correct placement of security mechanism in such an environment. Following {{the analysis of the}} security requirement, we introduce and describe a key agile cryptographic device for ATM. The protection of the ATM data plane is extremely important to provide data confidentiality and data integrity. Techniques in providing synchronisation, dynamic key change, dynamic <b>initialisation</b> <b>vector</b> change and Message Authentication Code on ATM data, are also being considered. Next, we discuss the corresponding control functions. A few key exchange protocols are given as possible candidates [...] ...|$|E
30|$|Several schemes, {{for example}} [5 â€“ 9], have been {{proposed}} in the literature for broadcast authentication, but {{to the best of}} our knowledge there exists only one other proposal [10] that can provide secrecy of broadcast data in wireless sensor networks. We emphasise that our work was undertaken independently and concurrently to the work in MiniSec [10], and our approaches have fundamental differences. While MiniSec uses a fixed key (known to all parties) with a time-varying <b>initialisation</b> <b>vector</b> (IV), our approach uses a time-varying key (derived from a key-chain). As explained later, our method, though restricted in this work to single-hop networks (we have subsequently extended our scheme to multihop networks), provides authentication which is robust to key compromise unlike MiniSec. Lastly, we note that though several of the existing authentication schemes can be leveraged to incorporate secrecy, they either entail high storage requirements (e.g., [5]) or are cost-effective only for bulk data transfers (e.g. [6 â€“ 9]) but not for sporadic transmission of broadcast data.|$|E
40|$|In this chapter, we {{show how}} {{security}} protocols can be attacked by exploiting the underlying block cipher modes of operation. We first present a comprehensive {{treatment of the}} properties and weaknesses of standard modes of operation. We then show why all modes of operation {{should not be used}} with public-key ciphers in public-key security protocols. This includes the cipher block chaining (CBC) mode when there is no integrity protection of the <b>initialisation</b> <b>vector</b> (IV). In particular, we show that it is possible in such instances to replace a block at the beginning, middle, or end of a CBC-encrypted message. We further demonstrate that the security of the electronic codebook (ECB) mode, and show that in the absence of integrity, one could exploit this to aid in known- and chosen- IV attacks. Finally, we present chosen-IV slide attacks on counter (CTR) and output feedback (OFB) modes of operation. Our results show that protocol implementers should carefully select modes of operation. Our results show that protocol implementers should carefully select modes of operation, be aware of the pitfalls in each of these modes, and incorporate countermeasures in their protocols to overcome them. It is also important to realize that modes of operation only provide confidentiality, and that when used in the context of security protocols, these modes should be combined with authentication and integrity protection techniques...|$|E

