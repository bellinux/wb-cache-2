0|10000|Public
50|$|The basic VELA {{carries a}} single 4KB EPROM (ISL1 or ISL1*) which {{contains}} the basic <b>input</b> and <b>output</b> <b>routines</b> that handle the keyboard input and 8-digit LED display output together with seventeen user selectable programs {{which range from}} a 4-channel digital volt meter to a random event monitor {{which could be used}} with a Geiger Counter Probe to measure and log radiation levels from a source material.|$|R
40|$|The Symmetrical List Processor SLIP; {{developed}} by Professor Joseph Weizenbaum of MIT, was implemented with considerable modifications and additions on the University of Cape Town computer. A package to perform automated analytical differentiation (DERIV) was developed using SLIP. Basic simplification techniques {{as well as}} convenient <b>input</b> and <b>output</b> <b>routines</b> were included. The package was tested extensively and a rough comparison drawn with the abilities of various computer languages and programs which include the same facility as TIERIV...|$|R
40|$|This report {{describes}} a database routine called DB 90 which {{is intended for}} use with scientific and engineering computer programs. The software is written in the Fortran 90 / 95 programming language standard with file <b>input</b> and <b>output</b> <b>routines</b> written in the C programming language. These routines should be completely portable to any computing platform and operating system that has Fortran 90 / 95 and C compilers. DB 90 allows a program to supply relation names and up to 5 integer key values to uniquely identify each record of each relation. This permits the user to select records or retrieve data in any desired order...|$|R
50|$|The {{language}} incorporated {{ideas from}} PL/I, ALGOL and XPL, {{and had an}} integrated macro processor. Unlike other contemporary languages such as Pascal, C or BASIC, PL/M had no standard <b>input</b> or <b>output</b> <b>routines.</b> It included features targeted at the low-level hardware specific to the target microprocessors, and as such, it could support direct access to any location in memory, I/O ports and the processor interrupt flags in a very efficient manner. PL/M was the first higher level programming language for microprocessor-based computers and was the original implementation language for the CP/M operating system. Many Intel and Zilog Z80 based embedded systems were programmed in PL/M during the 1970s and 1980s. For instance, the firmware of the Service Processor component of CISC AS/400 was written in PL/M.|$|R
40|$|The CMC fluid {{mechanics}} program system {{was developed to}} transmit the theoretical evolution of finite element numerical solution methodology, applied to nonlinear field problems into a versatile computer code for comprehensive flow field analysis. A detailed view of the code {{from the standpoint of}} a computer programmer's use is presented. A system macroflow chart and detailed flow charts of several routines necessary to interact with a theoretican/user to modify the operation of this program are presented. All subroutines and details of usage, primarily for <b>input</b> and <b>output</b> <b>routines</b> are described. Integer and real scalars and a cross reference list denoting subroutine usage for these scalars are outlined. Entry points in dynamic storage vector IZ; the lengths of each vector accompanying the scalar definitions are described. A listing of the routines peculiar to the standard test case and a listing of the input deck and printout for this case are included...|$|R
40|$|Real-valued {{variables}} in TRAC-M have SI (metric) units. <b>Input</b> to and <b>output</b> from TRAC-M {{can be in}} SI or English units as a user option. namelist variables iogrf, ioinp, iolab, and ioout define graphic fies XTVGR. B and XTVGR. T, input data file TRACIN, labeled input data file INLAB, and output-data fies TRCMSG and TRCOUT, respectively, to have real-valued variables with SI or English units when their values are 0 (default) for SI units or 1 for English units. The SI- or English-units symbols of real valued variables are output with their values to the TRCMSG and TRCOUT files when namelist variable iunout is 1 (default). No units symbols are output when iunout is 0. When programming the <b>input</b> and <b>output</b> <b>routines</b> of TRAC-M, code developers must consider the units of real-valued variables that are <b>input</b> and <b>output</b> and ensure that they have SI units for internal use by TRAC-M. The units of all real-valued {{variables in}}volved in the input/output (I/O) of TRAC-M are defined by the arrays VarLabels (i) %Labels, VarLabels (i) %Itls=j, and Units (j) %Labun that are declared in the module EngUnits. The element Labels of the VarLabels derived-type array is the left-justified CHARACTER* 8 name of the ith rea...|$|R
40|$|Abstract. DataScript is a {{language}} {{to describe and}} manipulate binary data formats as types. DataScript consists of two components: a constraint-based specification language that uses DataScript types to describe the physical layout of data and {{a language}} binding that provides a simple programming interface to script binary data. A DataScript compiler generates Java libraries that are linked with DataScript scripts. DataScript specifications {{can be used to}} describe formats in a programmatic way, eliminating the vagaries and ambiguities often associated with prosaic format descriptions. The libraries generated by the DataScript compiler free the programmer from the tedious task of coding <b>input</b> and <b>output</b> <b>routines.</b> More importantly, they assure correctness and safety by validating both the input read and the output generated. We show examples that demonstrate that DataScript is simple, yet powerful enough to describe many commonly used formats. Similar to how scripting languages such as Perl allow the manipulation of text files, the libraries generated by the DataScript compiler can be used to quickly write scripts that safely manipulate binary files. ...|$|R
5000|$|... "Applications of <b>Input</b> <b>Output</b> Analysis for Less Developed Countries", in Sohn, I. (ed.), Readings in <b>Input</b> <b>Output</b> Analysis, Oxford University Press, 1986 ...|$|R
2500|$|A {{parallel}} feedback connection at the <b>input</b> (<b>output)</b> {{decreases the}} <b>input</b> (<b>output)</b> resistance {{by a factor}} ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
30|$|Our {{primary source}} of data is the <b>Input</b> <b>Output</b> Transaction Table of 2007 – 08 {{published}} by Central Statistical Organization (CSO 2012), Government of India. This is a 130 X 130 commodity matrix used for <b>Input</b> <b>Output</b> Analysis.|$|R
40|$|The use of {{measures}} originally suggested by Bennet, Bowley, and Hicks {{in the context}} of cost of living, welfare, and consumer surplus measurement to measure <b>inputs,</b> <b>outputs,</b> and productivity is examined. Suitably normalized versions of the Bennet-Bowley measures are shown to be exact and superlative measures of <b>input,</b> <b>output,</b> and productivity indicators. <b>Input</b> and <b>output</b> measurement, Productivity measurement, Directional distance functions. ...|$|R
5000|$|The general {{conclusion}} from this example {{and a similar}} example for the output resistance case is:A parallel feedback connection at the <b>input</b> (<b>output)</b> decreases the <b>input</b> (<b>output)</b> resistance by a factor ( [...] 1 + β AOL [...] ), where AOL = open loop gain.|$|R
40|$|A network {{management}} system has SNMP agents distributed at {{one or more}} sites, an <b>input</b> <b>output</b> module at each site, and a server module located at a selected site for communicating with <b>input</b> <b>output</b> modules, {{each of which is}} configured for both SNMP and HNMP communications. The server module is configured exclusively for HNMP communications, and it communicates with each <b>input</b> <b>output</b> module according to the HNMP. Non-iconified, informationally complete views are provided of network elements to aid in {{network management}}...|$|R
40|$|Games for system {{analysis}} • Verification: check if a given system is correct → reduces to graph searching System <b>input</b> <b>output</b> Spec: φ(input,output) Environment Games for {{system analysis}} <b>input</b> <b>output</b> Spec: φ(input,output) Environment • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy Games for system analysis Spec: φ(input,output) • Verification: check if a given system is correct → reduces to graph searching • Synthesis: construct a correct system → reduces to game solving – finding a winning strategy This talk: environment is abstracted as a stochastic process <b>input</b> <b>output</b> Environment <b>input</b> <b>output</b> = Markov decision process (MDP) ? Markov decision proces...|$|R
40|$|Acquaye, Alston and Pardey {{report and}} discuss {{agricultural}} <b>input</b> and <b>output</b> price and quantity estimates for various spatial aggregates within the United States {{and a range}} of multi-factor productivity measures for the period 1949 - 1991. Laspeyres, Paasche, Fisher Ideal, and Törnqvist-Theil index number procedures (base year 1949 = 100) were used to develop their estimates, the formulas for which are presented below and elaborated further in Alston, Norton, and Pardey (1995). An Excel spreadsheet file named accompanies these notes. It contains the price and quantity <b>input</b> and <b>output</b> aggregates for each of the 48 contiguous states, 11 USDA production regions (with the Northeast region split into two sub-regions), and a 48 -state (national) total for the period 1949 - 91. The data file also includes various <b>input</b> and <b>output</b> subaggregates (see table 1 from Acquaye, Alston, and Pardey, appended below, for details) and the value shares using prices from the current and past period that are required to reconstruct all these indexes for all the spatial units reported in the paper. Documentation of the primary data files constructed by Craig, Pardey, and Acquaye is also available in the file named Index Number Construction The Laspeyres and Paasche indexes are not chain-linked indexes—they use base-period and current prices and quantities, respectively in the calculation. The Laspeyres <b>input</b> (<b>output)</b> quantity index uses base period <b>input</b> (<b>output)</b> prices to weight both current and base-period <b>input</b> (<b>output)</b> quantities, and was calculated as where Pi 0 is the price of <b>input</b> (<b>output)</b> i in the base-period, and Qi 0 is the quantity of <b>input</b> (<b>output)</b> i in the base-period. N is the number of individual observations of <b>input</b> (<b>output)</b> ...|$|R
5000|$|... #Article: Hybrid <b>input</b> <b>output</b> (HIO) {{algorithm}} for phase retrieval ...|$|R
5000|$|Imported {{function}} {{can have}} <b>input,</b> <b>output,</b> and inout arguments.|$|R
50|$|<b>Input,</b> <b>Output,</b> and I/O {{fields are}} similar to text boxes.|$|R
5000|$|... #Subtitle level 2: Bootstrapping {{using the}} Basic <b>input</b> <b>output</b> system ...|$|R
5000|$|Directorate General of <b>Input</b> <b>Output</b> Coefficient Organization - Pakistan Customs ...|$|R
40|$|The A. A. E. C. 360 CRAM program, {{written in}} FORTRAN IV and ASSEMBLER, is {{designed}} to run under the 360 operating system on a 256 K model 50. The program can readily be changed {{to take advantage of}} additional storage that may be available on other 360 configurations. The code includes standard <b>output</b> <b>routines</b> as well as providing the user with the facility of including his own FORTRAN coded <b>output</b> <b>routines.</b> The code package includes sets of test problems for both one and two dimensional geometries...|$|R
40|$|A pretty printer is {{presented}} {{which makes it}} easy for a user to control the format of the output produced. The printer {{can be used as a}} general mechanism for printing data structures as well as programs. It is divided into two parts: a set of formatting functions, and an <b>output</b> <b>routine.</b> Each formatting function creates a sequence of directions which specify how an object is to be formatted if it can fit on one line and how it is to be formatted if it must be broken up across mtdtiple lines. Based on the line length available, the <b>output</b> <b>routine</b> decides what structures have to be broken up across multiple lines and produces the actual output following the directions created by the formatting functions. The directions passed from the formatting functions to the <b>output</b> <b>routine</b> form a well defined interface: a language for specif) 'ing formatting options...|$|R
5000|$|... 20+4 {{including}} 8 GPIOs {{which can}} be <b>input,</b> <b>output,</b> interrupt sources; ...|$|R
5000|$|... {{automatic}} redirection {{of standard}} <b>input,</b> <b>output</b> and error from/to regular files; ...|$|R
30|$|As a conclusion, our {{proposed}} approach {{suggests an}} efficient alternative procedure to estimate predicted intervals for FR model with fuzzy <b>input</b> and <b>output.</b> As {{a limitation of}} our study, we only focused on fuzzy regression model in the case that <b>input</b> and <b>output</b> {{are assumed to be}} symmetric or nonsymmetric triangular fuzzy numbers. Therefore, we only considered FRBF Network when <b>input,</b> <b>output</b> and weights are triangular fuzzy numbers and we did not consider another types of fuzzy numbers in this study. Although the discussion of this study is confined to simple regression with one <b>input</b> and one <b>output,</b> it can be generalized to cope with cases of multiple <b>inputs</b> and <b>outputs.</b> For future studies, more general fuzzy <b>inputs,</b> <b>outputs</b> and weights such as trapezoidal fuzzy numbers could be handled with our FRBF Network approach and it could be applied to different FR models.|$|R
5000|$|... #Caption: Figure 2:Transfer {{function}} relating <b>input</b> <b>output</b> powers for the Mamyshev 2R regenerator.|$|R
5000|$|The PFile format {{based on}} the Protocol Buffers engine for {{multiplatform}} <b>input</b> <b>output</b> ...|$|R
5000|$|Process ontology: <b>inputs,</b> <b>outputs,</b> constraints, {{sequencing}} information, {{involved in}} business or engineering processes ...|$|R
5000|$|... 2010 - Experiments on the Notation of Shapes, <b>Input</b> <b>Output</b> Gallery, Hong Kong ...|$|R
50|$|A datacard is an {{electronic}} card for data operations (storage, transfer, transformation, <b>input,</b> <b>output).</b>|$|R
5000|$|The ALU (or {{arithmetic}} logic unit) has {{the following}} <b>input,</b> <b>output</b> and control lines: ...|$|R
50|$|To provide {{communications}} between the Emotion Engine and the <b>Input</b> <b>Output</b> Processor (IOP), the <b>input</b> <b>output</b> interface interfaces a 32-bit wide, 37.5 MHz <b>input</b> <b>output</b> bus {{with a maximum}} theoretical bandwidth of 150 MB/s to the internal data bus. The interface provides enough bandwidth for the PCMCIA extension connector which {{was used for the}} network adapter with built-in P-ATA interface for faster data access and online functionality. An advantage of the high bandwidth was that it could be easily used to introduce hardware extensions like the Network Adapter with built-in IDE HDD support or other extensions to extend functionality and product lifecycle which {{can be seen as a}} competitive advantage. In newer variants (like the slim edition), the interface would however offer vastly more bandwidth than what is required by the PlayStation's <b>input</b> <b>output</b> devices as the HDD support was removed and the PCMCIA connector design was abandoned in favor of a slimmer design.|$|R
50|$|The Glk API {{specification}} describes {{facilities for}} <b>input,</b> <b>output,</b> text formatting, graphics, sound, and file I/O.|$|R
40|$|A fully {{interactive}} two group {{model is}} {{used to examine the}} issue of resource allocation under alternative tenancy systems in Nepal. The results support the Marshallian hypothesis that both mixed and pure share tenants apply variable inputs less intensively in their rented-in plots than in owner operated plots. Keywords: Share tenancy, efficiency, <b>input</b> <b>output</b> intensitiesShare tenancy, efficiency, <b>input</b> <b>output</b> intensities, Land Economics/Use, Productivity Analysis,...|$|R
40|$|For {{the year}} there is <b>Input</b> <b>Output</b> Table, the {{consumption}} of households, the government expenditure, the fixed investment, the inventory change, the value added and the output which come from the System of <b>Input</b> <b>Output</b> (SIO) are normally {{not the same as}} the numbers reported by the System of National Accounting (SNA). The differences are called discrepancy between the two systems. For example, the discrepancy situation o...|$|R
25|$|The Basic <b>Input</b> <b>Output</b> System, or BIOS, {{provided}} {{the lowest level}} functions required by the operating system.|$|R
