11|54|Public
5000|$|Robert {{describes}} {{himself in the}} title of his work as [...] "Keeper of the Registry of the Court of Canterbury". Beyond this fact nothing is known of him. He compiled a history of the [...] "mirabilia gesta" [...] of Edward III down to 1356; his chief interest is in military history, and especially in the French war. To ecclesiastical and civil affairs he pays little attention. His work opens with a short sketch of the reign of Edward II, and the wars with Scotland are told with comparative brevity. The continental wars from 1339 to 1356 occupy nine-tenths of his narrative. Robert {{is no more than a}} painstaking chronicler, but his history has special importance because he incorporated in his text original documents and letters, including those of Michael de Northburgh There are three manuscripts: Harleian MS. 200 in the British Museum, Douce MS. 128 in the Bodleian Library, and Trinity College MS. R v. 32; the first is the archetype, the two latter are derived from it through an <b>intermediate</b> <b>copy.</b> Robert of Avesbury's chronicle ("Historia de Mirabilibus Gestis Edwardi III") was published by Thomas Hearne, Oxford, 1720. It has been re-edited by Sir E. Maunde Thompson, with the chronicle of Adam Murimuth, in the Rolls Series, 1889. Robert of Avesbury's original manuscript is also one of the few credible eyewitness accounts of the black death and the flagellants ...|$|E
40|$|Background: RFLP-IS 6110 {{standard}} {{technique to}} genotyping M. tuberculosis. The aims {{of this study}} were to identify the genetic diversity of M. tuberculosis population in Markazi province and to recognize the mode of disease transmission in this region. Material and Methods: The RFLP results of 42 isolates of M. tuberculosis deposited in the Mycobacterial Centre from Markazi province were analyzed. DNAs isolated from these isolates were enzyme digested with Pvu II, and hybridized with a PCR amplified DIG-labeled IS 6110 probe. Results: The isolates were classified into four groups, based on the copy numbers, as follows: (1) lacking IS 6110 element (2) low copy numbers (1 - 2) (3) <b>intermediate</b> <b>copy</b> numbers (3 - 5) and (4) high copy number (6 - 17). Copy numbers higher than 17 however were not observed in any of the isolates studied, 72 percent of the isolates showed high copy numbers of IS 6110, 13 percent <b>intermediate</b> <b>copy</b> numbers, 10 percent low copy numbers, whereas 5 percent isolates lacked IS 6110 element. Conclusion: IS 6110 DNA fingerprinting assisted us to find epidemiological links between some TB cases, and this technique estimates from reactivation of latent infection transmission of the disease in Markazi province. The low rate of clustering indicates that tuberculosis among studied population is resulted mainly from reactivation of latent infection in this region...|$|E
40|$|We {{study the}} problem of {{parallel}} stream computations on a multiprocessor architecture. Modelling the problem, we exhibit that any parallelisation introduces an arithmetic overhead related to <b>intermediate</b> <b>copy</b> operations. We pro-vide lower bounds for the parallel stream computation on p processors of different speeds with two models, a strict model and a buffered model; to our knowledge, these are new results. We introduce a new parallel algorithm called processor-oblivious: {{it is based on}} the coupling of a fast sequential algorithm with a fine-grain parallel one that is scheduled by work-stealing. This algorithm is proved asymptotically optimal. We show that our algorithm has a good experimental behaviour. 1...|$|E
5000|$|Sony {{had argued}} that Connectix infringed Sony's {{copyright}} by making numerous <b>intermediate</b> <b>copies</b> (that is, copies of copyrighted computer code created to aid {{the development of a}} non-infringing product) of the PlayStation BIOS during the reverse engineering process. The court rejected this notion, ruling that such a copy-grounded basis for what qualified as fair use would result in software engineers choosing inefficient engineering methods that minimized the number of <b>intermediate</b> <b>copies.</b> Preventing such [...] "wasted effort", they argued, was the very purpose of fair use.|$|R
5000|$|King's {{modifications}} to Adobe's fonts were mechanical {{and did not}} eliminate copyright infringement. Since the font editing programs extracted control points from Adobe's fonts, use of those programs constituted copying of literal expression. Thus, King also infringed on Adobe's copyright through <b>intermediate</b> <b>copying</b> into RAM.|$|R
5000|$|In Fox vs. Dish, the OTW (in {{coalition}} with the Electronic Frontier Foundation and Public Knowledge) submitted an amicus brief which argued {{in defense of}} digital recording methods used by Dish Network, claiming that [...] "The popular fanwork genre of noncommercial videos ("vids") uses clips from television shows or film, reworking {{them in a way}} that comments on or critiques the original. The Copyright Office has held that substantial numbers of vids constitute fair uses. But the creation of fan vids requires <b>intermediate</b> digital <b>copying</b> and processing in order to produce the transformative final product. OTW thus believes that <b>intermediate</b> <b>copying</b> performed to facilitate fair use constitutes fair use." ...|$|R
40|$|International audienceRunning {{parallel}} applications on clusters with high-speed local networks requires fast {{communication between}} computing nodes but also low latency and high bandwidth file access. However, the application programming interfaces of high-speed local networks {{were designed for}} MPI communication and do not always {{meet the requirements of}} other applications like distributed file systems. In this paper, we explore several solutions to improve the use of high-speed network for in-kernel applications. Distributed file systems implemented on top of the GM interface of Myrinet are first examined to demonstrate {{how hard it is to}} get an efficient interaction between such applications and the network. Then, we propose solutions to simplify and improve this interaction and integrate them into the kernel interface of the new Myrinet. Performance comparisons between MX and GM, and their usage in both a distributed file system and a zero-copy protocol show nice improvements. Moreover, we are able to improve the performance of the flexible kernel API we designed in MX that allows to remove some <b>intermediate</b> <b>copy...</b>|$|E
40|$|We {{set out to}} {{determine}} whether expansions in the C 9 ORF 72 repeat found in amyotrophic lateral sclerosis (ALS) and frontotemporal dementia (FTD) families are associated with Parkinson disease (PD). We determined the repeat size {{in a total of}} 889 clinically ascertained patients (including PD and essential tremor plus Parkinsonism (ETP)) and 1144 controls using a repeat-primed PCR assay. We found that large C 9 ORF 72 repeat expansions (> 30 repeats) were not contributing to PD risk. However, PD and ETP cases had a significant increase in intermediate (> 20 to 30 +) repeat copies compared to controls. Overall, 14 cases (13 PD, 1 ETP) and three controls had> 20 repeat copies (Fisher’s exact test p = 0. 002). Further, seven cases and no controls had> 23 repeat copies (p = 0. 003). Our results suggest that <b>intermediate</b> <b>copy</b> numbers of the C 9 ORF 72 repeat contribute to risk for PD and ETP. This also suggests that PD, ALS and FTD share some pathophysiological mechanisms of disease. Further studies are needed to elucidate the contribution of theC 9 ORF 72 repeat in the overall PD population and {{to determine}} whether other common genetic risk factors exist between these neurodegenerative disorders...|$|E
40|$|AIMS [...] To {{investigate}} {{the feasibility of}} using fixed cells with the polymerase chain reaction (PCR) in situ hybridisation and to investigate possible reasons for reaction failure. METHODS [...] Fixed SiHa and CaSki cells were used in an experimental model of PCR in situ hybridisation {{for the detection of}} low and <b>intermediate</b> <b>copy</b> number viral infection in fixed cells. RESULTS [...] PCR in situ hybridisation was able to detect one to two copies of human papillomavirus (HPV) 16 in SiHa cells, using small fragment amplicons (120 base pairs), confirming the high detection sensitivity and flexibility of the technique. Problems were encountered with localisation of PCR amplified product in CaSki cells (200 - 300 copies of HPV 16 per cell) owing to diffusion of product post amplification. Overall, 40 % of reactions were successful, which confirms the current unreliability of the technique. Within cell preparations, about 50 % of cells contained amplified product. CONCLUSION [...] PCR in situ hybridisation represents the marriage of two revolutionary molecular pathological techniques. However, it is currently unreliable, with reaction failure common. Standardised, dedicated equipment is urgently required if the technique is to achieve universal acceptance. In the future, the technique may be used to detect chromosomal translocations in human tumours and to study cellular gene expression...|$|E
5000|$|The basic problem, as {{described}} by Paul Maas, is as follows: We have no autograph by the original author manuscripts of the Greek and Roman classical writers and no copies which have been collated with the originals; the manuscripts we possess derive from the originals through {{an unknown number of}} <b>intermediate</b> <b>copies,</b> and are consequently of questionable trustworthiness. The business of textual criticism is to produce a text {{as close as possible to}} the original (constitutio textus).|$|R
50|$|The Federal Circuit {{declared}} that Nintendo {{was likely to}} prove that Atari made unauthorized verbatim copies of the 10NES program and affirmed {{the imposition of a}} preliminary injunction by the United States District Court for the Northern District of California, preventing Atari from exploiting Nintendo's copyrighted code. The Federal Circuit, however, disagreed with the district court on the matter of reverse engineering and held that the <b>intermediate</b> <b>copying</b> of the 10NES object code incurred during the examination of the microchip itself was fair use. Atari's copyright misuse defense was precluded by the doctrine of unclean hands, as Atari had lied to the Copyright Office to obtain an unauthorized copy of the 10NES.|$|R
5000|$|Tolkien later revised this {{internal}} history. The Elves {{were said}} by Tolkien {{to have been}} able of inventing (constructing) their own language (see Primitive Quendian). Tolkien never wrote an 'updated' version of the Lhammas that would be coherent with this later internal history of the Elvish languages. The essay as it stands in The Lost Road can be thus seen as an interpolated manuscript, badly translated by Men in the Fourth Age or even later: [...] "For many thousands of years have passed since the fall of Gondolin." [...] (The Lhammas, p. 180). No autograph manuscripts of the Lhammas of Pengolodh were left; the three manuscripts we possess come from the original manuscript through an unknown number of <b>intermediate</b> <b>copies.</b>|$|R
40|$|Abstract: Running {{parallel}} applications on clusters with high-speed local networks requires fast {{communication between}} computing nodes but also low latency and high bandwidth file access. However, the application programming interfaces of high-speed local networks {{were designed for}} MPI communication and do not always {{meet the requirements of}} other applications like distributed file systems. In this paper, we explore several solutions to improve the use of high-speed network for in-kernel applications. Distributed file systems implemented on top of the GM interface of MYRINET are first examined to demonstrate {{how hard it is to}} get an efficient interaction between such applications and the network. Then, we propose solutions to simplify and improve this interaction and integrate them into the kernel interface of the new MYRINET driver, MX. Performance comparisons between MX and GM, and their usage in both a distributed file system and a zero-copy protocol show nice improvements. Moreover, we are able to improve the performance of the flexible kernel API we designed in MX that allows to remove some <b>intermediate</b> <b>copy.</b> Key-words: High-speed local networks, in-kernel network API, distributed file systems, zero-copy socket protocols. This text is also available as a research report of the Laboratoire de l’Informatique du Parallélism...|$|E
40|$|Rider is a {{novel and}} {{recently}} active Ty 1 -copia-like retrotransposon isolated from the T 3238 fer mutant of tomato. Structurally, it is delimited by a duplication of target sites and contains two long terminal direct repeats and an internal open reading frame, which encodes a Ty 1 -copia-type polyprotein with characteristic protein domains required for retrotransposition. The family of Rider elements has an <b>intermediate</b> <b>copy</b> number and is scattered in the chromosomes of tomato. Rider family members in the tomato genome share high sequence similarity, but different structural groups were identified (full-size elements, deletion derivatives, and solo LTRs). Southern blot analysis in Solanaceae species showed that Rider was a Lycopersicon-specific element. Sequence analysis revealed that among other plants, two Arabidopsis elements (named as Rider-like 1 and Rider-like 2) are most similar to Rider in both the coding and noncoding regions. RT-PCR analysis indicates that Rider is constitutively expressed in tomato plants. The phylogeny-based parsimony analysis and the sequence substitution analyses of {{these data suggest that}} these Rider-like elements originated from a recent introgression of Rider into the tomato genome by horizontal transfer 1 - 6 million years ago. Considering its transcriptional activity and the recent insertion of the element into at least two genes, Rider is a recently active retrotransposon in the tomato genome...|$|E
40|$|Mini-F is a {{fragment}} of the F plasmid, consisting of 9, 000 base pairs, which carries all of the genes and sites required for replicon maintenance and control. Its copy number is one to two per chromosome. This plasmid is joined to ColE 1, whose copy number is 16 to 20. Under normal circumstances the composite plasmid replication exhibited ColE 1 characteristics, maintaining a high copy number. However, when ColE 1 replication was inhibited by deoxyribonucleic acid polymerase I inactivation, its replication exhibited mini-F characteristics, maintaining a low copy number. These observations are {{in complete agreement with}} those of Timmis et al. (Proc. Natl. Acad. Sci. U. S. A. 71 : 4556 - 4560, 1974), who examined the behavior of a recombinant plasmid formed between pSC 101 and ColE 1. The transition from high to low copy number allowed us to examine the control system acting in cells carrying plasmids exhibiting <b>intermediate</b> <b>copy</b> numbers. The initiation of the mini-F replication system as represented by deoxyribonucleic acid synthesis of the composite plasmid was completely blocked when there were multiple copies of mini-F in a cell. It was not restored until the copy number was lowered to one to two, after which replication was first detected. ppF, a mini-F replicon packaged in a phage λ head behaved similarly: its replication was completely shut off when the resident mini-F genome copy number was high and was inhibited partially when the resident mini-F genome copy number was low. These experiments clearly demonstrate that there is a switch-off mechanism acting on deoxyribonucleic acid synthesis (initiation) in a cell carrying mini-F, and its intensity is related to the plasmid copy number. This result supports the “inhibitor dilution model” proposed by Pritchard et al. (Symp. Soc. Gen. Microbiol. 19 : 263 - 297, 1969). The nature of the hypothetical inhibitor is discussed...|$|E
40|$|A major {{trend in}} recent cluster {{communication}} systems is {{to circumvent the}} operating system during the actual data transfers. That, on the one hand, reduces latency {{since there is no}} user [...] kernel transition needed and, on the other hand, increases bandwidth by avoiding additional <b>intermediate</b> <b>copies.</b> The data transfer is handled completely by the networking hardware and its DMA engine. For example, the Virtual Interface processes can access networking hardware directly in a protected manner. One of its characteristics is that it requires that all memory used for communication be locked down into physical memory. The same requirement holds true for the Infiniband ensures reliable locking of regular, i. e. private, virtual memory without altering the kernel. In this paper we present an extended solution that can handle System V shared memory as well...|$|R
5000|$|The courts {{found that}} reverse {{engineering}} the 10NES using {{a copy of}} its source code obtained from the Copyright Office infringed Nintendo's copyright by creating unauthorized <b>intermediate</b> <b>copies</b> of the code not protected under fair use, which requires the original copy to be authorized. However, the appeals court disagreed with the district court, which had declared reverse engineering itself to be copyright infringement, by clearly stating that, [...] "untainted by a purloined copy", [...] "Atari did not violate Nintendo's copyright by deprocessing computer chips in Atari's rightful possession." [...] In particular, the Federal Circuit reasoned that since {{it was necessary to}} understand the chip, Atari's initial attempts to decipher the 10NES by chemically stripping the device, microscopically examining it and hand copying the binary object code to learn how it operates were all fair use.|$|R
40|$|Abstract. Passing {{messages}} between processes, {{as it is}} {{done when}} creating parallel applications based on MPI, does always involve copying data from the address space of the sending process to the address space in the receiving process. The fastest, and commonly most efficient way for this is a direct copy operation between these two locations without any <b>intermediate</b> <b>copies.</b> In this paper, we present different techniques, implemented in SCI-MPICH, to achieve such a behavior for MPI on SCI-connected clusters. These techniques use both, CPU and DMA driven data transfers, and require support through MPI API functions or are transparent for the MPI application by making use of new advanced techniques in the SCI driver software. We describe the implementation details in SCI-MPICH and the underlying SMI (Shared Memory Interface) library and evaluate the performance achieved in different communication setups...|$|R
40|$|In the 1990 's copy {{rules have}} been studied as an easy and {{convenient}} way to construct lattice rules with {{a huge amount of}} points. Starting with the analysis of higher-rank lattice rules it was demonstrated numerically by Sloan and Walsh (1990) that copying scaled down rules by 12 or 13 th to fill up the unit cube [...] -conveniently only in the f irst few dimensions to avoid a curse of dimensionality by construction [...] -could deliver rules which have a better worst -case error for the standard Korobov space than basic rank- 1 rules. Further results were obtained by Disney and Sloan (1992), Joe and Sloan (1992) and Joe and Disney (1993). More recently, these results were extended to the product weighted Korobov space by Kuo and Joe (2003) in which condit ions on the weights were found to obtain a smaller worst-case error for an (<b>intermediate)</b> <b>copy</b> rule than for a rank- 1 rule. (Another recent track, called augmentation sequences, is investigated by Robinson, Li and Hill, but these are not directly relevant to this talk.) Here we present results on polynomial copy rules in a weighted Walsh space. We show some similarities with normal copy rules, as can be expected by the similarities between polynomial lattice rules and normal lattice rules, and some differences which show up in the theory. We derive an expression for the mean of the worst-case error and an existence theorem for polynomial copy rules which will do better than the mean follows from this. Comparing this mean to the mean of normal polynomial lattice rules, we can analyse when copying is expected to be favorable. We remark that, as is the case for normal copy rules, polynomial copy rules can also be constructed by the fast component-by-component construction algorithm. status: publishe...|$|E
40|$|Eukaryotic genome expansion/retraction {{caused by}} LTR-retrotransposon {{activity}} {{is dependent on}} the expression of full length copies to trigger efficient transposition and recombination-driven events. The Tnt 1 family of retrotransposons has served as a model to evaluate the diversity among closely related elements within Solanaceae species and found that members of the family vary mainly in their U 3 region of the long terminal repeats (LTRs). Recovery of a full length genomic copy of Retrosol was performed through a PCR-based approach from wild potato, Solanum oplocense. Further characterization focusing on both LTR sequences of the amplified copy allowed estimating an approximate insertion time at 2 million years ago thus supporting the occurrence of transposition cycles after genus divergence. Copy number of Tnt 1 -like elements in Solanum species were determined through genomic quantitative PCR whereby results sustain that Retrosol in Solanum species is a low copy number retrotransposon (1 - 4 copies) while Retrolyc 1 has an <b>intermediate</b> <b>copy</b> number (38 copies) in S. peruvianum. Comparative analysis of retrotransposon content revealed no correlation between genome size or ploidy level and Retrosol copy number. The tetraploid cultivated potato with a cellular genome size of 1, 715 Mbp harbours similar copy number per monoploid genome than other diploid Solanum species (613 - 884 Mbp). Conversely, S. peruvianum genome (1, 125 Mbp) has a higher copy number. These results point towards a lineage specific dynamic flux regarding the history of amplification/activity of Tnt 1 -like elements in the genome of Solanum species. Coordenação de Aperfeiçoamento de Pessoal de Nível Superior (CAPES) CAPES (Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior) FAPESP (Fundacao de Amparo a Pesquisa do Estado de Sao Paulo, Brazil) Fundação de Amparo à Pesquisa do Estado de São Paulo (FAPESP) Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) CNPq (Conselho Nacional de Desenvolvimento Cientifico e Tecnologico, Brazil) USP (Universidade de Sao Paulo, Brazil). Universidade de São Paulo (USP...|$|E
40|$|The Message Passing Interface (MPI) {{standard}} {{provides a}} powerful mechanism for describing non-contiguous memory locations: derived datatypes. In addition, MPI derived datatypes {{have a key}} role in the MPI- 2 I/O operations. In principle, MPI derived datatypes allow a user to more efficiently communicate noncontiguous data (for example, strided data) because the MPI implementation can move the data without any <b>intermediate</b> <b>copies</b> to or from a contiguous buffer. In practice, however, few MPI implementations provide support for datatypes that performs better than what the user can achieve by manually packing and unpacking the data into contiguous buffers before calling MPI routines with contiguous memory regions. We develop a taxonomy of MPI datatypes according to their memory reference patterns and show how to efficiently implement these patterns. The effectiveness of this approach is illustrated on a variety of platforms. ...|$|R
40|$|Abstract. Data {{is often}} communicated from {{different}} locations in application memory and is commonly serialized (copied) to send buffers or from receive buffers. MPI datatypes {{are a way}} to avoid such <b>intermediate</b> <b>copies</b> and optimize communications, however, it is often unclear which implementation and optimization choices are most useful in practice. We extracted the send/recv-buffer access pattern of a representative set of scientific applications into micro-applications that isolate their data access patterns. We also observed that the buffer-access patterns in applications can be categorized into three different groups. Our microapplications show that up to 90 % of the total communication time can be spent with local serialization and we found significant performance discrepancies between state-of-the-art MPI implementations. Our microapplications aim to provide a standard benchmark for MPI datatype implementations to guide optimizations similarly to SPEC CPU and the Livermore loops do for compiler optimizations. ...|$|R
40|$|Users of PC-NOW {{platforms}} often {{expect the}} availability of message-passing libraries such as PVM or the emerging MPI standard. Such libraries provide a set of facilities to build parallel applications. In this paper we identify problems and propose solutions related to message-passing library implementation {{on top of a}} remote-write facility. Remote-write primitives allow the direct mapping of data to the memory of a remote node. The goal is to reduce communication overhead by avoiding costly <b>intermediate</b> <b>copies</b> and processor context switches. The reduced overhead allows a cluster of workstations to achieve better performance since the latency is reduced and the large interconnection network bandwidth is better exploited. Performance measurements conducted on the MPC platform developed at Pierre and Marie Curie University in Paris show that remote-write implementations of message-passing libraries are a promising way for increasing scalability and performance of parallel applications bu [...] ...|$|R
40|$|Remote Direct Memory Access (RDMA) is a {{mechanism}} whereby data is moved directly between the application {{memory of the}} local and remote computer. In bypassing the operating system, RDMA significantly reduces the CPU cost of large data transfers and eliminates <b>intermediate</b> <b>copying</b> across buffers, thereby making it very attractive for implementing distributed applications. With the advent of hardware implementations of RDMA over Ethernet (iWARP), its advantages have become even more obvious. In this paper we analyze the applicability of RDMA and identify hidden costs in the setup of its interactions that, if not handled carefully, remove any performance advantage, especially in hardware implementations. From an application point of view, the major difference to TCP/IP based communication is that the buffer management {{has to be done}} explicitly by the application. Without the proper optimizations, RDMA loses all its advantages. We discuss the problem in detail, analyze what applications can profit from RDMA, present a number of optimization strategies, and show through extensive performance experiments that these optimizations make a substantial difference in the overall performance of RDMA based applications. 1...|$|R
40|$|The term iWarp {{indicates}} {{a set of}} published protocol specifications that provide remote read and write access to user applications, without operating system intervention or <b>intermediate</b> data <b>copies.</b> The iWarp protocol provides for higher bandwidth and lower latency transfers over existing, widely deployed TCP/IP networks. While hardware implementations of iWarp are starting to emerge, {{there is a need}} for software implementations to enable offload on servers as a transition mechanism, for protocol testing, and for future protocol research...|$|R
50|$|Networks {{supporting}} remote direct {{memory access}} (RDMA) can use the iSCSI Extensions for RDMA (iSER) fabric module to transport iSCSI traffic.iSER permits data to be transferred directly {{into and out of}} remote SCSI computer memory buffers without <b>intermediate</b> data <b>copies</b> (direct data placement or DDP) by using RDMA. RDMA is supported on InfiniBand networks, on Ethernet with data center bridging (DCB) networks via RDMA over Converged Ethernet (RoCE), and on standard Ethernet networks with iWARP enhanced TCP offload engine controllers.|$|R
40|$|Modern GPUs are {{powerful}} high-core-count processors, which {{are no longer}} used solely for graphics applications, but are also employed to accelerate computationally intensive general-purpose tasks. For utmost performance, GPUs are distributed throughout the cluster to process parallel programs. In fact, many recent high-performance systems in the TOP 500 list are heterogeneous architectures. Despite being highly effective processing units, GPUs on different hosts are incapable of communicating without assistance from a CPU. As a result, communication between distributed GPUs suffers from unnecessary overhead, introduced by switching control flow from GPUs to CPUs and vice versa. Most communication libraries even require <b>intermediate</b> <b>copies</b> from GPU memory to host memory. This overhead in particular penalizes small data movements and synchronization operations, reduces efficiency and limits scalability. In this work we introduce global address spaces to facilitate direct communication between distributed GPUs without CPU involvement. Avoiding context switches and unnecessary copying dramatically reduces communication overhead. We evaluate our approach {{using a variety of}} workloads including low-level latency and bandwidth benchmarks, basic synchronization primitives like barriers, and a stencil computation as an example application. We see performance benefits of up to 2 × for basic benchmarks and up to 1. 67 × for stencil computations...|$|R
50|$|The iSCSI Extensions for RDMA (iSER) is a {{computer}} network protocol that extends the Internet Small Computer System Interface (iSCSI) protocol to use Remote Direct Memory Access (RDMA). RDMA is provided by either the Transmission Control Protocol (TCP) with RDMA services (iWARP), RoCE (RDMA over Converged Ethernet) that does not need the TCP layer and therefore provides lower latency, or InfiniBand. It permits data to be transferred directly {{into and out of}} SCSI computer memory buffers (which connects computers to storage devices) without <b>intermediate</b> data <b>copies</b> and without much of the CPU intervention.|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. This document defines a Remote Direct Memory Access Protocol (RDMAP) that operates over the Direct Data Placement Protocol (DDP protocol). RDMAP provides read and write services directly to applications and enables data to be transferred directly into Upper Layer Protocol (ULP) Buffers without <b>intermediate</b> data <b>copies.</b> It also enables...|$|R
40|$|C 9 orf 72 is {{the most}} common genetic cause of {{amyotrophic}} lateral sclerosis (ALS) and frontotemporal dementia (FTD) in Caucasian populations. However, the relationship between C 9 orf 72 repeats and Alzheimer’s disease (AD) was not clear. Additionally, there were few articles assessing C 9 orf 72 in other ethnicities with ALS. In this meta-analysis, we aimed to investigate the relationship between C 9 orf 72 repeat expansions (≥ 30 repeats) and <b>intermediate</b> repeat <b>copies</b> (20 – 29 repeats) and AD or ALS. The results suggested positive correlations between C 9 orf 72 repeat expansions and the risk of Alzheimer’s disease (OR = 6. 36, 95 % CI = 3. 13 – 12. 92, and p< 0. 00001), while <b>intermediate</b> repeat <b>copies</b> of C 9 orf 72 gene were not associated with the risk of the disease. C 9 orf 72 repeat expansions were positively correlated with the risk of familial and sporadic ALS (OR = 293. 25, 95 % CI = 148. 17 – 580. 38, and p< 0. 00001; OR = 35. 57, 95 % CI = 19. 61 – 64. 51, and p< 0. 00001). There was a positive correlation between the gene variations and ALS risk among Caucasians and Asians (OR = 57. 56, 95 % CI = 36. 73 – 90. 22, and p< 0. 00001; OR = 6. 35, 95 % CI = 1. 39 – 29. 02, and p= 0. 02) ...|$|R
40|$|This {{document}} specifies extensions to the IETF Remote Direct Memory Access Protocol (RDMAP) as {{specified in}} RFC 5040. RDMAP provides {{read and write}} services directly to applications and enables data to be transferred directly into Upper-Layer Protocol (ULP) Buffers without <b>intermediate</b> data <b>copies.</b> The extensions specified in this document provide the following capabilities and/or improvements: Atomic Operations and Immediate Data. Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|This project {{developed}} an RDMA-like VirtIO network device for the Palacios {{virtual machine monitor}} that enables virtual machines running on the same host system to {{communicate with one another}} directly, without any <b>intermediate</b> memory <b>copies.</b> The project required gaining a deep understanding of the VirtIO interface, creating a “Portals 4 -light ” VirtIO device in Palacios, adding VirtIO support to the Kitten operating system (which was used as the guest), and performing a simple benchmark analysis. The foundation created by this project will be used in future work to create a complete and high-performance virtual “Portals 4 ” network device for Palacios, as part of a funded DOE/ASCR X-stack project. ...|$|R
40|$|This paper investigates some {{mechanisms}} {{determining the}} pronunciation sites involved in Internal Merge. Under the copy theory of movement, (contra trace theory) {{not only the}} final landing site but also the original and <b>intermediate</b> sites contain <b>copies</b> of moving elements presumably along with phonological features, [...] That is, the phonetic component/sensory motor system needs to pick out one of those copies t...|$|R
40|$|Parameter passing {{is one of}} {{the main}} {{problems}} in distributed object-oriented applications. The two simplest solutions - passing objects by global reference and passing complete copies of the object graphs - both have significant drawbacks. Instead, an <b>intermediate</b> amount of <b>copying</b> is often best. The problem is twofold: (i) compilers and operating systems can't automatically make the best decision on how much to copy; (ii) there hasn't been a good mechanism for the programmer to express the <b>intermediate</b> amount of <b>copying</b> that should be done. The contribution of this paper is to present a new mechanism that allows programmers to express in a natural and succinct way how much of the object graph should be copied to the remote context. The specifications are done using a very simple declarative meta-language [...] GOOP [...] that has graphs of classes as domain. Keywords: distribution, remote invocation, pass-by-copy, open implementation, adaptiveness. Supported by the Portuguese Fo [...] ...|$|R
40|$|Control over {{parameter}} passing is a {{key issue}} in distributed object-oriented applications. The two simplest solutions - passing objects by global reference and passing objects by deep copy - both have significant drawbacks. Instead, an <b>intermediate</b> amount of <b>copying</b> is often best. However, achieving {{the right amount of}} copying is difficult for two reasons: (i) compilers and operating systems cannot automatically make the best decision on how much to copy; (ii) there hasn't been a good mechanism for the programmer to express the <b>intermediate</b> amount of <b>copying</b> that should be done. This paper presents a new mechanism that allows programmers to express in a natural and succinct way how much of the object graph should be copied to the remote context. The specifications are done using a very simple declarative meta-language [...] GOOP [...] that has graphs of classes as its domain. GOOP allows the specification of: (i) whether the parameter object should be passed by copy or by reference; and (i [...] ...|$|R
30|$|While map tasks {{have only}} one stage, reduce tasks consist of three: copy, sort and reduce stages. In the copy stage, reduce tasks <b>copy</b> the <b>intermediate</b> data {{produced}} by map tasks. Each reduce task is usually responsible for processing the intermediate data associated with many intermediate keys. Therefore, in the sort stage, reduce tasks need to sort all the <b>intermediate</b> data <b>copied</b> by the <b>intermediate</b> keys. In the reduce stage, reduce tasks apply the user defined reduce function to the intermediate data associated with each intermediate key, and store the output in final output files. The output files are kept in the HDFS, and each reduce task generates exactly one output file.|$|R
