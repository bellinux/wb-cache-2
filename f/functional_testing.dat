1112|4331|Public
5|$|After initial aliveness {{testing that}} showed no issues, STIS {{was taken into}} <b>functional</b> <b>testing,</b> and issues were seen when the {{telescope}} put itself into safe mode due to a low thermal limit sensor. Ground controllers at Goddard would restart the testing once the thermal limit sensor was back in normal sensor range, but it is believed the component is in good shape.|$|E
25|$|The skills include selection, <b>functional</b> <b>testing,</b> {{preparation}} and transport of scuba equipment, dive planning, {{preparation for a}} dive, kitting up for the dive, water entry, descent, breathing underwater, monitoring the dive profile (depth, time and decompression status), personal breathing gas management, situational awareness, communicating with the dive team, buoyancy and trim control, mobility in the water, ascent, emergency and rescue procedures, exit from the water, un-kitting after the dive, cleaning and preparation of equipment for storage and recording the dive, {{within the scope of}} the diver's certification.|$|E
25|$|Electrodes {{can either}} be placed {{directly}} on brain areas of interest or can {{be placed in the}} subdural space of the brain. Subdural electrodes can shift slightly and can be affected by cerebrospinal fluid in the subdural space, which could interfere with the current used to stimulate the brain from the electrodes and possibly cause shunting and dissipate the current, making the stimulation's effect less accurate. However, an advantage of subdural electrode grids is that they can be left in the brain for multiple days, and allow <b>functional</b> <b>testing</b> during stimulation outside the operating room.|$|E
30|$|Tests such as jumps, accelerations, and sprints are {{classified}} as <b>functional</b> <b>tests.</b> Improvements in muscle hypertrophy maximal strength and ability to develop power do not always carry over to athletic performance. In contrast, improvements in <b>functional</b> <b>tests</b> usually carry over to a higher extent. Based on the effect sizes, all the investigated components of the <b>functional</b> <b>tests</b> improved; horizontal displacement with a large effect size of 1.01 and vertical displacement also with a large effect size of 0.85. It {{should be noted that}} a large effect on <b>functional</b> <b>tests</b> with greater athletic specificity is probably more relevant to athletic performance than a higher effect size in a less <b>functional</b> <b>test</b> (i.e., with less athletic specificity).|$|R
5|$|Perl is {{distributed}} with over 250,000 <b>functional</b> <b>tests</b> for core Perl language and over 250,000 <b>functional</b> <b>tests</b> for core modules. These run {{as part of}} the normal build process and extensively exercise the interpreter and its core modules. Perl developers rely on the <b>functional</b> <b>tests</b> to ensure that changes to the interpreter do not introduce software bugs; additionally, Perl users who see that the interpreter passes its <b>functional</b> <b>tests</b> on their system can have a high degree of confidence that it is working properly.|$|R
40|$|Creating <b>functional</b> <b>tests</b> {{that work}} on an ATE {{has always been a}} {{significant}} challenge [1]. This paper identifies the fundamental mechanisms for <b>functional</b> <b>test</b> failures of an SOC on an ATE. Taking these mechanisms into account during the design process of a chip can substantially reduce the efforts needed to make <b>functional</b> <b>tests</b> work. We call this process design for functional testability (DFFT). <b>Functional</b> <b>tests</b> {{are an important part of}} the overall testing methodology of a modern SOC (System-On-Chip), which usually consists of one or more CPUs, large and several memory structures, and many logic interfaces...|$|R
500|$|After {{the initial}} aliveness testing, the ACS was put through its {{functional}} tests. Managers and engineers had {{noted that the}} repairs were designed for {{only one of the}} three photo channels, the wide-field channel, and that the issues with the high-resolution channel may not be resolved by the designed fix. During the <b>functional</b> <b>testing,</b> the wide-field channel passed, but issues were seen with the high-resolution channel, indicating that the power issue may be farther upstream in the electronic circuits than the spacewalk repair addressed. Additional testing would be performed, but Hubble Program Manager Preston Burch noted that the fix was designed to [...] "back power" [...] the high-resolution channel through the paths connected to the wide-field channel, and while feasible, it was a possibility that the short circuit damage was in an area not corrected with the planned repair. Even if the high-resolution channel is unable to be restored, it was considered to be less important, since the bulk of the ACS science output is undertaken by the wide-field channel. The third channel, the solar-blind channel, passed overnight <b>functional</b> <b>testing</b> without issues.|$|E
500|$|Completing {{the fifth}} of the five planned spacewalks, Grunsfeld and Feustel {{successfully}} installed the second battery, removed and replaced the Fine Guidance Sensor number three, and worked so efficiently that they were over an hour ahead of the timeline, giving them time to remove degraded insulation panels from three bays of the telescope, and install three New Outer Blanket Layers (NOBLs). Beginning the spacewalk at 12:20 UTC, the pair first worked on removing an aging battery module, {{and replaced it with}} a new pack, which combined with the battery replacement performed during the second spacewalk, gave the telescope all new nickel-hydrogen batteries. They then moved on to the removal and replacement of the Fine Guidance Sensor unit number three, improving Hubble's focus and stability when imaging. NASA engineers liken the new FGS to being able to keep a laser beam focused on a U.S. dime coin that is [...] away. Both the new batteries, and the FGS passed both aliveness and <b>functional</b> <b>testing.</b> The mission's final EVA concluded at 19:22 UTC, after seven hours and two minutes. The total time spent during the mission in extra-vehicular activity was thirty-six hours, fifty-six minutes. The twenty-third and final spacewalk to service Hubble brought the total time spent in EVA working on the telescope to one hundred and sixty-six hours, six minutes. Lead Flight Director Tony Ceccacci noted that the final EVA was also the last planned spacewalk from a shuttle airlock. In what was likely his last EVA, Grunsfeld's has accumulated fifty-eight hours and thirty minutes spacewalking, just two minutes less than Jerry L. Ross, who is third on the list of spacewalking time.|$|E
2500|$|<b>Functional</b> <b>testing</b> of {{movement}} during cortical stimulation includes looking for active movement and inhibition {{of movement}}. [...] When the precentral gyrus of the frontal lobe is stimulated, specific {{muscles in the}} body will contract based on {{the location of the}} brain that receives the electric signal. Stimulation {{on one side of the}} brain will cause a contraction on the contralateral, or opposite, side of the body.|$|E
50|$|In most {{manufacturing}} practices, {{an additional}} <b>functional</b> <b>test</b> is performed after manufacturing test. The {{objective of the}} <b>functional</b> <b>test</b> is to ensure the board functions as it was designed and to provide additional defect coverage for those that were not covered by manufacturing <b>test.</b> The PCBA <b>functional</b> <b>test</b> defect universe {{is different from that}} of PCBA manufacturing test as is its test technologies. The PCBA <b>functional</b> <b>test</b> will determine whether the designed function performs as it was intended to. It may or may not isolate a failure to a particular component or connection. PCOLA/SOQ defect isolation is usually not indicative of proper PCBA function.|$|R
40|$|To measure {{quadriceps}} and hamstring {{muscle strength}} with Isokinetic dynamometer {{in patients with}} patellofemoral pain syndrome (PFPS) and also {{to examine the relationship}} between muscle strength and <b>functional</b> <b>test</b> scores and subjective assessment. In this case-control study a total of 30 subjects (15 healthy and 15 patients with diagnosed PFPS) completed Kujala questionnaire concerning subjective functional knee assessment. Then muscle strength was measured with Isokinetic dynamometer in sitting position during 10 to 90 degree of knee flexion in 60 and 120 degree per sec speeds. Finally two kinds of <b>functional</b> <b>tests</b> (step down and semi-squat) were performed by each subject. There was no relationship between <b>functional</b> <b>test</b> scores and Isokinetic strength assessment. There was a poor relationship between <b>functional</b> <b>test</b> scores and Kujala questionnaire score (r = 0. 47 for semi squat test and 0. 37 for step down test). The overall mean scores of quadriceps Isokinetic parameter in 60 degree per sec speed, <b>functional</b> <b>test</b> scores and Kujala subjective knee assessment scores was less in patients with PFPS. This study showed that both Isokinetic dynamometry and <b>functional</b> <b>tests</b> must be done individually in patients with PFPS...|$|R
50|$|Smoke {{tests can}} be broadly {{categorized}} as <b>functional</b> <b>tests</b> or as unit <b>tests.</b> <b>Functional</b> <b>tests</b> exercise the complete program with various inputs. Unit tests exercise individual functions, subroutines, or object methods. <b>Functional</b> <b>tests</b> may comprise a scripted series of program inputs, possibly even with an automated mechanism for controlling mouse movements. Unit tests {{can be implemented}} either as separate functions within the code itself, or else as a driver layer that links to the code without altering the code being tested.|$|R
50|$|HPE Unified <b>Functional</b> <b>Testing</b> manages {{exception}} handling using recovery scenarios; {{the goal is}} to continue running tests if an unexpected failure occurs. Because HPE Unified <b>Functional</b> <b>Testing</b> hooks into the memory space of the applications being tested, some exceptions may cause HPE Unified <b>Functional</b> <b>Testing</b> to terminate and be unrecoverable.|$|E
5000|$|HPE Unified <b>Functional</b> <b>Testing</b> can be {{extended}} with separate add-ins {{for a number of}} development environments that are not supported out-of-the-box. HPE Unified <b>Functional</b> <b>Testing</b> add-ins include support for Web, [...]NET, Java, and Delphi. HP QuickTest Professional and the HP QuickTest Professional add-ins are packaged together in HP <b>Functional</b> <b>Testing</b> software.|$|E
50|$|HPE Unified <b>Functional</b> <b>Testing</b> {{provides}} two views—and ways to modify—a test script: Keyword View and Expert View. These views enable HPE Unified <b>Functional</b> <b>Testing</b> {{to act as}} an Integrated Development Environment (IDE) for the test, and HPE Unified <b>Functional</b> <b>Testing</b> {{includes many}} standard IDE features, such as breakpoints to pause a test at predetermined places.|$|E
30|$|Four {{categories}} were formed using the PFT of FunFitness. These <b>functional</b> <b>tests</b> have been measured {{in other studies}} of people with ID, and we have confirmed that data obtained in the <b>functional</b> <b>test</b> in our study are similar to other similar studies (Cuesta-Vargas et al. 2011).|$|R
40|$|Abstract—Functional test {{sequences}} {{are often}} used in manufacturing testing to target defects that are not detected by structural test. Therefore, {{it is necessary to}} evaluate the quality of <b>functional</b> <b>test</b> sequences. However, it is very time-consuming to evaluate the quality of <b>functional</b> <b>test</b> sequences by gate-level fault simulation. Therefore, we propose output deviations as a metric to grade <b>functional</b> <b>test</b> sequences at the register transfer (RT) level without explicit fault simulation. Experimental results for the open-source Parwan processor and the Scheduler module of the Illinois Verilog Model (IVM) show that the deviations metric is computationally efficient and it correlates well with gate-level coverage for stuck-at, transition-delay, and bridging faults. Results also show that <b>functional</b> <b>test</b> sequences that are reordered based on output deviations provide steeper gate-level fault coverage ramp-up compared to other ordering methods. I...|$|R
40|$|SoC designs with full-scan {{architectures}} rely on test vectors {{generated from}} an ATPG tool like Synopsys Tetramax for fault coverage and diagnosis. But the partial and non-scan devices {{rely heavily on}} <b>functional</b> <b>test</b> patterns for the <b>test</b> coverage. The <b>functional</b> <b>test</b> vectors use internal BIST techniques like signature analysis using LFSR {{for the detection of}} faults in the logic. TetraMax offers a flow for the fault simulation of these functional vectors and derive the test coverage of a non-scan or partial scan design using externally generated vectors. It also gives an estimate of the effectiveness of a <b>functional</b> <b>test</b> vector in catching Stuck-at faults. This paper discusses the flow in implementing the ATPG and Fault Simulation flow for a partial scan ST 7 based device using TetraMax. Fault simulation flow involves the modeling of RAM and ROM blocks leading to better coverage of the shadow logic. It also details the problems faced and conclusions obtained from the activity. The TetraMax ATPG tool comes with an integrated fault simulator for fault grading externally generated <b>functional</b> <b>test</b> vectors. These <b>functional</b> <b>test</b> vectors are usuall...|$|R
50|$|<b>Functional</b> <b>testing</b> {{does not}} imply that you are testing a {{function}} (method) of your module or class. <b>Functional</b> <b>testing</b> tests a slice of functionality of the whole system.|$|E
50|$|HPE Unified <b>Functional</b> <b>Testing</b> (UFT) software, {{formerly}} known as HP QuickTest Professional (QTP), provides functional and regression test automation for software applications and environments. HPE Unified <b>Functional</b> <b>Testing</b> {{can be used for}} enterprise quality assurance.|$|E
50|$|HPE Unified <b>Functional</b> <b>Testing</b> and HP Quality Center work {{together}} for additional testing capabilities. Users can use HP Quality Center with HPE Unified <b>Functional</b> <b>Testing</b> assets, such as tests, shared object repositories, libraries, recovery scenarios and external data tables.|$|E
5000|$|TestPartner {{provides}} {{two primary}} methods for <b>functional</b> <b>test</b> development: ...|$|R
50|$|A <b>functional</b> <b>test</b> {{consists}} {{of a set of}} Functional Test Cases (FTC). FTC are system tests used to verify that FR are satisfied by the system. Black-box testing is the software analog to FTC. At the end of the system development, a <b>functional</b> <b>test</b> verifies that the requirements of the system are met.|$|R
40|$|International audienceFunctional test {{guarantees}} that the circuit is tested under normal conditions, thus avoiding any over-as well as under-test. This work {{is based on}} the use of Software-Based-Self-Test that allows a special application of <b>functional</b> <b>test</b> to the processor-based systems. This strategy applies the so-called <b>functional</b> <b>test</b> programs that are executed by the processor to guarantee a given fault coverage. The main goal {{of this paper is to}} investigate the static test compaction of a given set of <b>functional</b> <b>test</b> programs. The investigation aims at understanding and determining how to select the best <b>functional</b> <b>test</b> program candidates to obtain the smallest set having the best fault coverage. Results carried out on two different microprocessors show that a 49 % reduction in test length and a 28. 7 % reduction in test application time can be achieved...|$|R
50|$|HPE Unified <b>Functional</b> <b>Testing</b> may not {{recognize}} customized user interface objects and other complex objects. Users can define {{these types of}} objects as virtual objects. HPE Unified <b>Functional</b> <b>Testing</b> does not support virtual objects for analog recording or recording in low-level mode.|$|E
50|$|HPE Unified <b>Functional</b> <b>Testing</b> {{supports}} data-driven testing. For example, {{data can}} be output to a data table for reuse elsewhere. Data-driven testing is implemented as a Microsoft Excel workbook that can be accessed from HPE Unified <b>Functional</b> <b>Testing.</b> HPE Unified <b>Functional</b> <b>Testing</b> has two types of data tables: the Global data sheet and Action (local) data sheets. The test steps can read data from these data tables in order to drive variable data into the application under test, and verify the expected result.|$|E
50|$|HPE Unified <b>Functional</b> <b>Testing</b> was {{originally}} written by Mercury Interactive and called QuickTest Professional. Mercury Interactive was subsequently acquired by Hewlett Packard(HP) in 2006. HP Unified <b>Functional</b> <b>Testing</b> 11.5 combined HP QuickTest Professional and HP Service Test {{into a single}} software package, which is currently available from the HP Software Division. The integrated HPE Unified <b>Functional</b> <b>Testing</b> software allows developers to test from a single console all three layers of a program's operations: the interface, the service layer and the database layer.|$|E
40|$|Functional {{debugging}} {{of application}} specific integrated circuits (ASICs) {{has been recognized}} as a very labor-intensive and expensive process. It often dominates the time and cost of the ASIC system development. The difficulty of functional debugging is mainly due to the limited controllability and observability of the storage elements in designs, and therefore the intermediate variables in functional specifications. Debugging process can be logically divided into five phases: <b>functional</b> <b>test</b> generation, <b>functional</b> <b>test</b> execution, error detection, error diagnosis, and error correction. We propose a new approach for the <b>functional</b> <b>test</b> pattern execution phase. The goal is to maximize the simultaneous controllability of an arbitrary set of the user selected variables in the design at the debugging time for facilitating the <b>functional</b> <b>test</b> pattern execution while minimizing the hardware overhead. The new approach {{is based on the}} divide and conquer optimization paradigm. Functional specific [...] ...|$|R
40|$|With ever {{shrinking}} geometries, growing metal {{density and}} increasing clock rate on chips, delay testing {{is becoming a}} necessity in industry to maintain test quality for speed-related failures. The purpose of delay testing is to verify that the circuit operates correctly at the rated speed. However, <b>functional</b> <b>tests</b> for delay defects are usually unacceptable for large scale designs due to the prohibitive cost of <b>functional</b> <b>test</b> patterns and the difficulty in achieving very high fault coverage. Scanbased delay testing, which could ensure a high delay fault coverage at reasonable development cost, provides a good alternative to the at-speed <b>functional</b> <b>test...</b>|$|R
40|$|Boundary Scan is a {{structural}} test method, whereas CPU emulation is a <b>functional</b> <b>test</b> method. <b>Functional</b> <b>tests,</b> although difficult to generate, will cover some (usually unknown) structural defects whereas structural tests {{are unlikely to}} cover any functional misbehaviours. Discussions between vendors of boundary-scan and emulation products and a system user showed a potential synergy between the boundary scan and CPU emulations approaches. That is, use boundary scan to structurally test a board, and then use CPU emulation to structurally test those parts not covered by boundary scan, and to implement a basic <b>functional</b> <b>test</b> of the board. 1...|$|R
50|$|The Test Execution {{engine is}} {{combined}} with the GUI Test Code development IDE, {{so there is no}} way to run the tests independent of HPE Unified <b>Functional</b> <b>Testing,</b> even though remote execution is still possible with HPE Unified <b>Functional</b> <b>Testing</b> running on a different machine.|$|E
5000|$|<b>Functional</b> <b>testing</b> {{differs from}} system testing in that <b>functional</b> <b>testing</b> [...] "verifies a program by {{checking}} it against ... design document(s) or specification(s)", while system testing [...] "validates a program by checking {{it against the}} published user or system requirements" [...] (Kaner, Falk, Nguyen 1999, p. 52).|$|E
5000|$|... #Subtitle level 2: HPE Unified <b>Functional</b> <b>Testing</b> Integration ...|$|E
40|$|In the past, {{test data}} volume {{reduction}} techniques have concentrated heavily on scan test data content. However, functional vectors {{continue to be}} utilized because they target unique defects and failure modes. Hence, functional vector compression can help alleviate the cost of <b>functional</b> <b>test.</b> Scan vector compression techniques are generally unsuitable in the functional domain and techniques specially tailored for <b>functional</b> <b>test</b> compression are required. Additionally, {{it may be possible}} to perform compression and decompression using software techniques without incurring the overhead of dedicated hardware. This paper proposes a set of software techniques targeted towards <b>functional</b> <b>test</b> compression. 1...|$|R
40|$|This study {{aimed to}} {{investigate}} the automation of <b>functional</b> <b>tests</b> in the sending of documents via integration with web service, in a platform of fiscal solutions, {{with the purpose of}} reducing the execution time of the tests and consequently improving the quality of the product. As a result, the ninety percent (90 %) reduction in the time spent in performing <b>functional</b> <b>tests</b> performed by the quality team was obtained. The main scientific contribution of this work was the generation of data and information {{on the use of the}} JMeter tool to perform <b>functional</b> <b>tests</b> by sending XML via web service communication...|$|R
40|$|The aim of {{this paper}} is to explore some {{features}} of the <b>functional</b> <b>test</b> generation problem, and on the basis of the gained experience, to propose a practical method for <b>functional</b> <b>test</b> In the paper presented analysis of random search methods and adjacent stimuli generation allowed formulating a practical method for generating <b>functional</b> <b>tests.</b> This method incorporates the analyzed termination conditions of generation, exploits the advantages of random and deterministic search, as well as the feature that the sets of the selected input stimuli can be merged easily in order to obtain a better set of test patterns...|$|R
