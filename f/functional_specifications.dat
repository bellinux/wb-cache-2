489|884|Public
25|$|Pathak, J., Basu, S., Lutz, R., and Honavar, V. (2006). Selecting and Composiing Web Services through Iterative Reformulation of <b>Functional</b> <b>Specifications.</b> Proceedings of the IEEE International Conference on Tools With Artificial Intelligence (ICTAI 2006), Washington, DC, IEEE Press. Best Paper Award. pp.445–454.|$|E
2500|$|A {{separate}} subcategory of behavior-driven {{development is}} formed by tools that use specifications as an input language rather than user stories. An {{example of this}} style is the RSpec tool that was also developed by Dan North. Specification tools don't use user stories as an input format for test scenarios but rather use <b>functional</b> <b>specifications</b> for units that are being tested. These specifications often have a more technical nature than user stories and are usually less convenient for communication with business personnel than are user stories. An example of a specification for a stack might look like this: ...|$|E
50|$|The National Archives of Australia (NAA) {{published}} the <b>Functional</b> <b>Specifications</b> for Electronic Records Management Systems Software (ERMS), {{and the associated}} Guidelines for Implementing the <b>Functional</b> <b>Specifications</b> for Electronic Records Management Systems Software, as exposure drafts in February 2006.|$|E
5000|$|When {{the team}} agrees that <b>functional</b> <b>specification</b> {{consensus}} is reached, the functional spec is typically declared [...] "complete" [...] or [...] "signed off". After this, typically the software development and testing team write source code and test cases using the <b>functional</b> <b>specification</b> as the reference. While testing is performed, {{the behavior of}} the program is compared against the expected behavior as defined in the <b>functional</b> <b>specification.</b>|$|R
40|$|In {{this work}} we present the {{contribution}} to the <b>functional</b> <b>specification</b> of the systems MRP/MRPII, identifying the characteristics that such systems should present, starting from the existent literature on the theme. Once the <b>functional</b> <b>specification</b> of the system MRP/MRPII was established, we verified these characteristics in ERP- Enterprise Resource Planning. The representative ERP, SAP R/ 3, was selected through the uses of models established in the literature and also based in additional information and the MRP/MRPII, present in SAP R/ 3, the selected ERP, was analized {{in comparison with the}} <b>functional</b> <b>specification.</b> The obtained results showed that SAP R/ 3 assists to the requirements of the <b>functional</b> <b>specification...</b>|$|R
5000|$|A {{functional}} requirement in a <b>functional</b> <b>specification</b> might state as follows: ...|$|R
50|$|<b>Functional</b> <b>specifications</b> for an {{electronic}} health record.|$|E
5000|$|Input {{involves}} {{different types}} of requirements, <b>functional</b> <b>specifications,</b> detailed designing of documents, proper source code, security specifications. This is the preparation stage of white-box testing to layout all of the basic information.|$|E
50|$|The {{verification}} {{and validation}} of simulation model starts after <b>functional</b> <b>specifications</b> {{have been documented}} and initial model development has been completed. Verification and validation is an iterative process that takes place throughout {{the development of a}} model.|$|E
5000|$|ISO/IEC 18023-1:2006(E) Information {{technology}} - SEDRIS - Part 1: <b>Functional</b> <b>specification</b> ...|$|R
5000|$|Verification and Validation (V&V): Embedded {{throughout}} the software development process (e.g. user requirements <b>specification,</b> <b>functional</b> <b>specification,</b> design specification, code review, unit tests, integration tests, system tests).|$|R
50|$|A <b>functional</b> <b>specification</b> {{is closely}} related to the {{requirement}} specification and may show functional block diagrams.|$|R
50|$|A {{functional}} specification (also, functional spec, specs, <b>functional</b> <b>specifications</b> document (FSD), functional requirements specification) in systems engineering and software {{development is a}} document that specifies the functions that a system or component must perform (often part of a requirements specification) (ISO/IEC/IEEE 24765-2010).|$|E
50|$|Another {{complementary}} {{approach is}} program derivation, in which efficient code is produced from <b>functional</b> <b>specifications</b> {{by a series}} of correctness-preserving steps. An example of this approach is the Bird-Meertens Formalism, and this approach can be seen as another form of correctness by construction.|$|E
5000|$|Pathak, J., Basu, S., Lutz, R., and Honavar, V. (2006). Selecting and Composiing Web Services through Iterative Reformulation of <b>Functional</b> <b>Specifications.</b> Proceedings of the IEEE International Conference on Tools With Artificial Intelligence (ICTAI 2006), Washington, DC, IEEE Press. Best Paper Award. pp. 445-454.|$|E
50|$|Equipment {{can then}} be {{described}} by an Equipment <b>Functional</b> <b>Specification</b> (EFS) which lists the atomic functions and their interconnection.|$|R
50|$|Specification-Based Test Design Techniques {{base on the}} (<b>functional)</b> <b>specification</b> of {{the system}} under test.They are also called black-box testing.|$|R
2500|$|The {{identification}} of test relevant aspects usually follows the (<b>functional)</b> <b>specification</b> (e.g. requirements, use cases …) {{of the system}} under test.|$|R
50|$|Cafazzo {{advocates for}} the use of {{ethnography}} to inform the design of health technologies. Ethnography enables the translation of qualitative findings into design principles for the purpose of obtaining <b>functional</b> <b>specifications,</b> bridging the disciplines of qualitative research with that of engineering and software development.|$|E
50|$|Service Centre Agency(SCA) - This {{would be}} the main {{implementing}} agency providing the required investment budget and the <b>functional</b> <b>specifications</b> of the CSC. This would be equivalent to a franchisor of the CSCs, typically for one or more districts, as identified by the SDA.|$|E
50|$|The {{second year}} offers plethora of {{opportunities}} wherein students can choose 2 specialization papers (1 from technical specification & other from <b>functional</b> <b>specifications)</b> from 6 avenues that are offered with 4 subjects per specializations along with corporate evolution, corporate governance, project management, international business environment & one foreign language.|$|E
50|$|Non Intrusive: It {{is based}} on <b>functional</b> <b>specification,</b> {{architectural}} view whereas not on source code or binaries which makes it invasive too.|$|R
40|$|Abstract. This paper extends Object-Z with Real-Time and {{describes}} {{the characters of}} real-time system: delay, timeout and multithread. Real-Time Object-Z consists two parts: <b>functional</b> <b>specification</b> and filter specification. The both for any time critical system can be developed with two parts. <b>Functional</b> <b>specification</b> developed with Object-Z formerly can be reused. The main benefit {{is that it is}} convenient to deal with the timing variables defined in the specification developed with our approach. Using our approach, we can develop real-time specification and reason about the real-time properties conveniently...|$|R
5000|$|The {{development}} {{team was}} headed by David Liddle, and would eventually grow {{to more than}} 200 developers. A {{good part of the}} first year was taken up by meetings and planning, the result of which was an extensive and detailed <b>functional</b> <b>specification,</b> internally termed the [...] "Red Book". This became the bible for all development tasks. It defined the interface and enforced consistency in all modules and tasks. All changes to the <b>functional</b> <b>specification</b> had to be approved by a review team which maintained standards rigorously.|$|R
5000|$|The UVC method {{replaces the}} need for a {{multitude}} of standards (one for each format) by a single standard on the UVC method. That standard should cover: the UVC <b>functional</b> <b>specifications,</b> the interface to call the methods, the model for the schema and for the schema to read schemas ...|$|E
50|$|Note {{that this}} is very {{different}} from functional testing, which attempts to validate that the circuit under test functions according to its functional specification. This is closely related to functional verification problem of determining if the circuit specified by the netlist meets the <b>functional</b> <b>specifications,</b> assuming it is built correctly.|$|E
50|$|In the ordered {{industrial}} {{software engineering}} life-cycle (waterfall model), functional specification describes {{what has to}} be implemented. The next, Systems architecture document describes how the functions will be realized using a chosen software environment. In non industrial, prototypical systems development, <b>functional</b> <b>specifications</b> are typically written after or as part of requirements analysis.|$|E
40|$|A {{feasibility}} study {{to develop a}} requirements analysis and <b>functional</b> <b>specification</b> for a data management system for large-scale DNA sequencing laboratories resulted in a <b>functional</b> <b>specification</b> for a Sequencing Information Management System (SIMS). This document reports {{the results of this}} {{feasibility study}}, and includes a <b>functional</b> <b>specification</b> for a SIMS relational schema. The SIMS is an integrated information management system that supports data acquisition, management, analysis, and distribution for DNA sequencing laboratories. The SIMS provides ad hoc query access to information on the sequencing process and its results, and partially automates the transfer of data between laboratory instruments, analysis programs, technical personnel, and managers. The SIMS user interfaces are designed for use by laboratory technicians, laboratory managers, and scientists. The SIMS is designed to run in a heterogeneous, multiplatform environment in a client/server mode. The SIMS communicates with external computational and data resources via the internet...|$|R
3000|$|Review {{of models}} for {{predicting}} {{the concentration of}} chemicals in air, water and soil to human exposure, including mathematical and <b>functional</b> <b>specification</b> of the multimedia software [...]...|$|R
5000|$|... 2009: UK Libraries' {{programmer}} Dr. Michael Slone {{works with}} Boyd and Weig to further develop OHMS and prepare initial <b>functional</b> <b>specification.</b> Team: Doug Boyd, Eric Weig, Michael Slone.|$|R
50|$|In {{software}} development, {{a functional}} specification (also, functional spec or specs or <b>functional</b> <b>specifications</b> document (FSD)) is {{the set of}} documentation that describes {{the behavior of a}} computer program or larger software system. The documentation typically describes various inputs that can be provided to the software system and how the system responds to those inputs.|$|E
50|$|The {{first line}} item “Panel Type” {{in the first}} section “Display” {{correctly}} identifies the panel type used in the Modbook Pro X revC as “Apple Retina Display (rev2013)”. This is because the <b>functional</b> <b>specifications</b> (contrast ratio, color space, etc.) of the Apple Retina Display have been essentially the same in every MacBook Pro model since 2013 up to, but not including the new 2016 models.|$|E
50|$|HSSP {{specification}} work {{is divided}} into two foundational components: <b>functional</b> <b>specifications</b> (manifested as Service Functional Models) and technical specifications (resulting in technology adoptions). The functional specification work is being originated within health industry standards communities, such as HL7 and CEN. The functional models enumerate what capabilities are to be supported but not how they are supported. The technical specification work details exactly how those functions are manifested and ultimately realized in a technology platform.|$|E
5000|$|<b>Functional</b> <b>Specification</b> of Electronic Health Record (EHR) / Personal Health Record (PHR) systems - a {{standardized}} description {{of health and}} medical functions sought for or available in such software applications ...|$|R
50|$|In the end, many {{features}} {{from the}} Star <b>Functional</b> <b>Specification</b> were not implemented. The product {{had to get}} to market, and the last several months before release focused on reliability and performance.|$|R
40|$|This paper {{describes}} the <b>functional</b> <b>specification</b> and verification portions of El Greco, {{a system for}} high-level, heterogeneous <b>functional</b> <b>specification,</b> efficient compiled simulation, and software and hardware implementation. Specifications {{in the form of}} dataflow graphs, hierarchical finite state machines, or a mixture, are supported. These specifications can be arbitrarily nested, as in Ptolemy [1]. When dataflow graphs are placed in a control context, the graph execution is fully controllable; its execution can be restarted or suspended and parameters can be changed. We describe system modeling and simulation generation in El Greco and compare to other approaches. 1...|$|R
