1|317|Public
40|$|Automatic {{programming}} of {{arc welding}} robots requires the geometric {{description of a}} part from a solid modeling system, expert weld process knowledge and the kinematic arrangement of the robot and positioner automatically. Current commercial solid modelers are incapable of storing explicitly product and process definitions of weld features. This work presents a paradigm to develop a computer-aided engineering environment that supports complete weld feature information in a solid model and create an automatic programming system for robotic arc welding;In the first part, welding features are treated as properties or attributes of an object, features which are portions of the object surface [...] the topological boundary. The structure for representing the features and attributes is a graph called the Welding Attribute Graph (WAGRAPH). The method associates appropriate weld features to geometric primitives, adds welding attributes, and checks the validity of welding specifications. A systematic structure is provided to incorporate welding attributes and coordinate system information in a CSG tree. The specific implementation of this structure using an <b>hybrid</b> <b>solid</b> <b>modeler</b> (IDEAS) and an object-oriented programming paradigm is described;The second part provides a comprehensive methodology to acquire and represent weld process knowledge required for the proper selection of welding schedules. A methodology of knowledge acquisition using statistical methods is proposed. It is shown that these procedures did little to capture the private knowledge of experts (heuristics), but helped in determining general dependencies, and trends. A need was established for building the knowledge-based system using handbook knowledge and to allow the experts further to build the system. A methodology to check the consistency and validity for such knowledge addition is proposed. A mapping shell designed to transform the design features to application specific weld process schedules is described;A new approach using fixed path modified continuation methods is proposed in the final section to plan continuously the trajectory of weld seams in an integrated welding robot and positioner environment. The joint displacement, velocity, and acceleration histories all along the path {{as a function of}} the path parameter for the best possible welding condition are provided for the robot and the positioner to track various paths normally encountered in arc welding...|$|E
40|$|Applying sweep {{operations}} on 2 -D closed contours {{is a well}} known method for modelling 3 -D solid objects. This paper deals {{with the implementation of}} a <b>solid</b> <b>modeler</b> with sweep as the basic representational scheme. In the <b>modeler,</b> a <b>solid</b> is defined by sweeping a planar polygon along a linear or curved trajectory. A sculptured solid may also be defined by using a beta-spline curve for the sweep polygon and a cubic B-spline curve for the sweep trajectory. By incorporating Boolean operations, a <b>hybrid</b> sweep-CSG <b>solid</b> <b>modeler</b> is implemented. The current implementation allows translational, rotational, and twisted sweep {{operations on}} a planar polygon composited of lines and arcs. In addition, a solid primitive can also be created by sweeping a planar closed beta-spline curve along a cubic B-spline curve. Â© 1992 Springer-Verlag New York Inc. link_to_subscribed_fulltex...|$|R
40|$|Abstract. Solid {{modeling}} {{theory and}} technology are maturing rapidly. We have seen explosive {{growth in the}} field based on scientific literature reviews, and {{by the number of}} <b>solid</b> <b>modelers</b> that are commercially available. Constructive Solid Geometry (CSG) is a method used to represent solid objects in many contemporary solid modeling systems. A CSG representation is a binary tree whose nonterminal nodes represent Boolean operations and whose terminal nodes represent primitive solids. In this paper, the comparison between four <b>solid</b> <b>modelers</b> in term of their difficulties and friendliness in designing and representing a solid object are presented. The <b>solid</b> <b>modelers</b> are AutoCAD 2004, Solid Edge V 12, SolidWorks 2001 plus, and 3 D Studio Max 7. The research methodology is based on <b>Solid</b> <b>Modeler</b> Evaluation and Comparison Cycle (SMECC) methodology. This paper documents seven performance parameters in the design process namely, extrusion, setup time, ease of use, speed, flexibility, feature based design, and CSG tree. The outcomes presented by this paper is expected to assist companies and design educators in making <b>solid</b> <b>modeler</b> selection decisions...|$|R
40|$|Feature-oriented {{databases}} {{are ideal}} to support Web enabled collaborative engineering services. To implement a feature-oriented database, a <b>solid</b> <b>modeler</b> is incorporated to provide lower-level modeling services. In this paper, {{based on a}} generic feature definition for different applications and with a four-layer information integration infrastructure, the EXPRESS-schemas for the generic feature representation and constraint definition are given. The integration of <b>solid</b> <b>modeler</b> with feature-oriented database can be achieved by: Mapping from EXPRESS-defined feature model to the runtime <b>solid</b> <b>modeler</b> data structure and to the targeted database schema; Proposing modeler-based generic algorithms for feature validation and data manipulation in the database; and providing modeler-supported label-based approach for feature model re-evaluation...|$|R
5000|$|FloTHERM XT is a {{electronics}} cooling CFD tool {{incorporating a}} <b>solid</b> <b>modeler</b> for manipulating MCAD parts.|$|R
50|$|SolidWorks is a <b>solid</b> <b>modeler,</b> and {{utilizes}} a parametric feature-based {{approach to}} create models and assemblies. The software is written on Parasolid-kernel.|$|R
40|$|Originally, {{technical}} drawings {{were made by}} hand using technical drawing board. The rise of advanced computer graphics leads to the replacement of drawing board by <b>solid</b> <b>modeler</b> software. The development of three-dimensional (3 D) <b>solid</b> <b>modeler</b> involves visualization technology for the viewing and manipulation of 3 D models, sources of images, techniques for 3 D representations and reconstruction, point set and operations. This paper focuses on the discussion of representation and 3 D reconstruction. Few techniques for representations and D reconstruction have been introduced by some researchers which are related to mathematical modeling and artificial intelligence (AI) approach. They are constructive solid geometry, boundary representation, spatial decomposition, simple affine transformation and others which are used for representation. Meanwhile line labeling, gradient space, linear system, interactive method, analytical heuristic, back propagation algorithm for function approximation, genetic algorithm approach and others are used for 3 D reconstruction. Discussion on these issues leads {{to the conclusion that}} {{there are only a few}} researches done on the representation and D reconstruction that deployed AI techniques in the <b>solid</b> <b>modeler</b> engine. Therefore, this paper proposed a review on the development of <b>solid</b> <b>modeler</b> based on the representation and 3 D reconstruction...|$|R
40|$|Geometric/Solid modelers and CAD/CAM {{components}} {{are moving to}} distributed, heterogeneous environments. Communication between such systems requires standards for data exchange. This paper describes (i) modeler independent standardized interfaces called adaptors, and (ii) feature recognition in a distributed environment. A <b>solid</b> <b>modeler</b> is augmented with an adaptor so as to provide a standard procedural interface to applications and function as a geometric server. Adaptors give the applications portability and free the application programmers from the details of specific modelers. Adaptors are routinely used at USC. The issues raised in adaptor development and their solutions are discussed. USC's feature recognition system works in a distributed environment where a <b>solid</b> <b>modeler</b> augmented with an adaptor, a feature recognizer and a graphics renderer run as separate processes and {{communicate with one another}} through local area networks. The <b>solid</b> <b>modeler</b> augmented with an adaptor is worki [...] ...|$|R
50|$|Early {{revenue for}} Shape Data came from {{business-to-business}} consultancies. In 1975, {{the company was}} contracted by the General Electric Company to develop a <b>solid</b> <b>modeler</b> based on the computational geometric work of Ian Braid's Ph.D thesis. In 1978, {{after three years of}} development, Shape Data released Romulus, the world's first commercialized <b>solid</b> geometric <b>modeler</b> software program.|$|R
40|$|The work {{presented}} in this thesis is aimed at developing a three dimensional <b>solid</b> <b>modeler</b> employing computer graphics techniques using C-Language. Primitives have been generated, by combination of plane surfaces, for various basic geometrical shapes including cylinder, cube and cone. Back face removal technique for hidden surface removal has also been incorporated. Various transformation techniques such as scaling, translation, and rotation have been included for the object animation. Three dimensional <b>solid</b> <b>modeler</b> has been created by the union of two primitives to demonstrate {{the capabilities of the}} developed program...|$|R
40|$|Abstract 5 -axis {{sculptured}} surface milling {{is a difficult}} machining process to model due to the complex geometrical engagement between the workpiece and the cutter. Due {{to the complexity of}} the process, the engagement cannot be found analytically with conventional methods. Therefore, <b>solid</b> <b>modeler</b> based simulations are utilized to compute the engagement map. This paper presents a comprehensive and efficient strategy for engagement modeling of ball end milling using a <b>solid</b> <b>modeler</b> kernel, namely Parasolid. Accuracy of the model is validated by simulating the cutting forces based on the calculated engagements and compare it with experimentally measured cutting forces...|$|R
40|$|<b>Solid</b> <b>modelers</b> store a more {{complete}} representation than wireframe or surface modelers. This completeness permits the automation of such tasks as interference analysis, mass property calculation, and finite element mesh generation. But the denser information content and complex algorithms needed to perform these tasks complicate the support of free-form geometry, especially Boolean operations. Consequently, {{the high degree of}} geometric coverage traditionally found in surface modelling systems has not, for the most part, been equaled in modern <b>solid</b> <b>modelers.</b> This article explores some of the difficulties encountered in Boolean combinations of free-form solids and presents a geometric representation designed to circumvent the...|$|R
50|$|The Romulus b-rep <b>solid</b> <b>modeler</b> (or simply Romulus) was {{released}} in 1978 by Ian Braid, Charles Lang, Alan Grayer, and the Shape Data team in Cambridge, England. It was the first commercial solid modeling kernel designed for straightforward integration into CAD software. Romulus incorporated the CAM-I AIS (Computer Aided Manufacturers International's Application Interface Specification) and was the only <b>solid</b> <b>modeler</b> (other than its successors Parasolid and ACIS) ever to offer a third-party standard API to facilitate high-level integration into a host CAD software program. Romulus was quickly licensed by Siemens, HP and several other CAD software vendors.|$|R
40|$|Traditionally, product {{databases}} {{are either}} purely geometric or meta-linked to CAD files. The first type lacks feature semantics and hence is too rigid for collaborative engineering. The second type {{is dependent on}} CAD files which are system sensitive and has too large information grain size that makes information sharing and engineering collaboration difficult. This chapter introduces a fine-grain and feature-oriented product database design. It is ideal to support Web-enabled collaborative engineering services. For this purpose, a four-layer information integration infrastructure is proposed. A <b>solid</b> <b>modeler</b> is incorporated to provide low-level geometrical modeling services. The novelty of this research includes three aspects: (1) a generic feature definition for different applications {{in the form of}} EXPRESS-schemas; (2) the integration of a <b>solid</b> <b>modeler</b> with feature-oriented database by mapping from EXPRESS-defined feature model to the runtime <b>solid</b> <b>modeler</b> data structure {{as well as to the}} targeted database schema; and (3) Modeler-based generic algorithms for feature validation and manipulation via the database. A modeler-supported history-independent approach is developed for feature model re-evaluation...|$|R
40|$|Before the {{introduction}} of Computer Aided Design and solid modelling systems, designers had developed a set of techniques for designing solid objects by sketching their ideas on pencil and paper and refining them into workable designs. Unfortunately, these techniques {{are different from those}} for designing objects using a <b>solid</b> <b>modeler.</b> Not only does this waste avast reserve of talent and experience (people typically start drawing from the moment they can hold a crayon), but it also has a more fundamental problem: designers can use their intuition more effectively when sketching than they can when using a <b>solid</b> <b>modeler.</b> Viking is a solid modelling system whose user-interface is based on interactive sketch interpretation. Interactive sketch interpretation lets the designer create a line-drawing of a de- sired object while Viking generates a three-dimensional ob- ject description. This description is consistent with both the designer's line-drawing, and a set of geometric constraints either derived from the line-drawing or placed by the de- signer. Viking's object descriptions are fully compatible with the object descriptions used by traditional <b>solid</b> <b>modelers.</b> As a result, interactive sketch interpretation can be used with traditional solid modelling techniques, combining the advantages of both sketching and solid modelling...|$|R
40|$|Abstract. The work {{presented}} here {{is part of}} a project, which involves the development of a multi-representational <b>solid</b> <b>modeler</b> {{to be used in the}} definitions of 3 D computer geometric models. To generate a desired model, many geometric operations are applied and these operations need to produce correct results. This article discusses techniques to assure precision and robustness to geometric calculations. These techniques are compared among themselves and the viability of the coupling of these to a <b>Solid</b> <b>Modeler</b> is evaluated. The main objective of the modeler is the generation of superficial meshes over 3 D solids that will be used as input data for volumetric mesh generators. The volumetric mesh is the start point to solve electromagnetic problems by the finite element method...|$|R
40|$|A {{polyhedral}} <b>solid</b> <b>modeler</b> {{that operates}} on boundary representa-tions of objects must infer topological information from numerical data. Unavoidable rrors (due to limited precision) affect these calculations {{so that their}} use may produce ambiguous or contra-dictory results. These effects cause existing polyhedral modelers to fail when presented with objects that nearly align or barely intersect [101171. An object description associating a tolerance with each of its topological features (vertices, edges, and faces) is introduced. The use of tolerances leads to a definition of topological consistency that is readily applied to boundary representations. The implications of using tolerances toaid in making consistent topological determina-tions from imprecise geometric data are explored and applied to the calculations of a polyhedral <b>solid</b> <b>modeler.</b> The resulting modeler produces a consistent polyhedral boundary when given consistent boundaries as input...|$|R
40|$|AbstractâThis paper {{proposes a}} new {{solution}} for an {{important feature of}} <b>solid</b> <b>modelers</b> coupled to finite element mesh generators for electromagnetic problems: the handling of inner boundaries be-tween components assuring the design of manufacturable models. Implementation details are described. Index TermsâGeometric modeling, finite element methods, mesh generation, b-rep data structures, electromagnetic analysis. I...|$|R
40|$|ProtoSolid is a <b>solid</b> <b>modeler</b> that {{represents}} <b>solids</b> with planar surfaces and manipulates the solids with regularized set operationa This paper {{looks at the}} internal structures and operations of ProtoSolid and is intended as a progranun. user guide. A boundary of a solid is represented by a fedge-based data structure. It is developed in CommonLisp...|$|R
5000|$|C-CSG is {{a similar}} {{composite}} <b>solid</b> geometry <b>modeler</b> that uses script/source files ...|$|R
50|$|Also, {{included}} in the ADINA suite of programs is a graphical user interface (known as the ADINA User Interface, or AUI) with a <b>solid</b> <b>modeler,</b> ADINA-M, for the pre- and post-processing tasks. The AUI {{can be used to}} import solid models, and finite element models in Nastran format, providing an interface to many CAD and CAE packages.|$|R
40|$|This paper {{describes}} modeler independent application programming interfaces called adaptors. A <b>solid</b> <b>modeler</b> is augmented with an adaptor so as {{to provide}} a standard procedural interface to applications and function as a geometric server. Adaptors give the applications portability and free the application programmers from the details of specific modelers. Adaptors have been developed at USC for two different modelers, PADL- 2 (a Constructive Solid Geometry system) and Parasolid (a boundary modeler). The issues raised in adaptor development and their solutionsare discussed. Adaptors are routinely used at USC in a distributed environment where a <b>solid</b> <b>modeler</b> augmented with an adaptor, an application, and a renderer run as separate processes and {{communicate with one another}} through local area networks. 1 Introduction Solid modeling is used today in many applications: computer graphics, CAD/CAM, robotics, virtual reality, etc. Most solid modeling systems provide Application Programming Int [...] ...|$|R
40|$|GEODERM, a microcomputer-based <b>solid</b> <b>modeler</b> which {{incorporates}} the parametric object model, is discussed. The entity-relationship model, {{which is used}} to describe the conceptual schema of the geometric database, is also presented. Three of the four modules of GEODERM, which have been implemented are described in some detail. They are the Solid Definition Language (SDL), the Solid Manipulation Language (SML) and the User-System Interfac...|$|R
40|$|Boolean {{operations}} provide convenient {{methods for}} defining solid objects, and {{are supported by}} most of the <b>solid</b> <b>modelers</b> available today. Graphic User Interfaces (GUIs) for <b>solid</b> <b>modelers</b> typically are based on picking edges and vertices on a display, and correlating them with entities in the boundary representation (Brep) of a solid. The graphic operations involvend are fast, but they require that a Brep be computed, and this is computationally expensive. This paper discusses an alternative approach, which does not require the existence of a Brep, and is based on correlating pick operations directly with the surfaces of Constructive Solid Geometry (CSG) primitives. The new approach, in conjunction with recently-developed, special-purpose, modeling hardware, should lead to higher performance user interfaces than those currently available. The initial implementation of a GUI based on these concepts is presented. The interface uses the X/Motif tool kit, and interacts with the PADL- 2 CSG modeler through Unix interprocess communication techniques...|$|R
50|$|The {{historical}} development of <b>solid</b> <b>modelers</b> {{has to be}} seen in context of the whole history of CAD, the key milestones being the development of the research system BUILD followed by its commercial spin-off Romulus which went on to influence the development of Parasolid, ACIS and Solid Modeling Solutions. One of the first CAD developers in the Commonwealth of Independent States (CIS), ASCON began internal development of its own <b>solid</b> <b>modeler</b> in the 1990s. In November 2012, the mathematical division of ASCON became a separate company, and was named C3D Labs. It was assigned the task of developing the C3D geometric modeling kernel as a standalone product â the only commercial 3D modeling kernel from Russia. Other contributions came from MÃ¤ntylÃ¤, with his GWB and from the GPM project which contributed, among other things, hybrid modeling techniques {{at the beginning of the}} 1980s. This is also when the Programming Language of Solid Modeling PLaSM was conceived at the University of Rome.|$|R
5000|$|OpenSCAD, a {{constructive}} <b>solid</b> geometry <b>modeler</b> and domain-specific language can both generate and import STL files ...|$|R
40|$|Herein, we {{developed}} a high-performance lithium ion conducting <b>hybrid</b> <b>solid</b> electrolyte, consisted of LiTFSI salt, Py 14 TFSI ionic liquid, and TiO 2 nanoparticles. The <b>hybrid</b> <b>solid</b> electrolyte prepared by a facile method had high room temperature ionic conductivity, excellent thermal stability and low interface resistance with good contact. In addition, the lithium transference number was highly increased by the scavenger effect of TiO 2 nanoparticles. With the <b>hybrid</b> <b>solid</b> electrolyte, the pouch-type solid-state battery exhibited high initial discharge capacity of 150 mA h g 1 at room temperature, and even at 1 C, the reversible capacity was as high as 106 mA h g 1. close...|$|R
40|$|Integrated product {{development}} {{is the future of}} {{product development}}. Integrated product development is a process where both upstream (e. g., functional requirements, styling and cosmetic features, and packaging) and downstream (e. g., manufacturing considerations, testing, dunnage, and disposal) requirements of a product are handled concurrently with its geometry construction. In this research, the so-called ECHO (Engineering Constraint Handling and Optimization) system for integrated product development has been developed. A unique feature of this system is that it can explicitly represent and process both the upstream and downstream requirements. These requirements are represented in the form of constraint networks, rule networks, and assessment matrices. By solving for all of the feasible solutions, the ECHO system instructs the geometry construction, and thus ensures that both upstream and downstream requirements are reflected in the design. In its simplest form, the ECHO system consists of four tightly integrated components: a CSP (Constraint Satisfaction Problem) solver, an optimization solver, an expert system shell, and a <b>solid</b> <b>modeler.</b> The expert system shell and <b>solid</b> <b>modeler</b> are two well known commercial software, namely, Smart Element and Pro/ENGINEER. They are seamlessly integrated into the ECHO system with the developed 2 Ì 2 Integration Interface. 2 Ì 2 Through this 2 Ì 72 Ì 7 Integration Interface, 2 Ì 2 the ECHO system instructs and manipulates the geometry construction in the <b>solid</b> <b>modeler.</b> By inheriting the geometry data through the 2 Ì 2 Integration Interface, 2 Ì 2 the ECHO system also provides a user-friendly, on-line interactive rule network development and modification environment. A case study for automotive piston development has been implemented to illustrate the capability and use of the ECHO system...|$|R
40|$|Parametric {{modeling}} {{is becoming}} the representation of choice for most modern <b>solid</b> <b>modelers.</b> However, when generating the finite-element mesh of the model for simulation and analysis, most meshing tools ignore the parametric information and use only the boundary representation of the model for meshing. This results in remeshing the model basically from scratch each time a parametric change is instantiated, which happens numerous times throughout the design process...|$|R
40|$|AbstractAn {{enhanced}} Force model based Feedrate Scheduling (FFS) {{technique for}} rough cutting of parts with complex free form surfaces in 5 -axis machining is presented. In order {{to estimate the}} cutting forces in complex 5 -axis machining an enhanced <b>solid</b> <b>modeler</b> kernel based model is developed to find the complicated engagement between cutter and workpiece for each cutter location. In this paper, cutter-workpiece engagement model is presented using the commercial Parasolid <b>solid</b> <b>modeler</b> kernel, and then cutting forces are estimated based on the developed model. In this approach, the resultant cutting forces are kept constant on a user defined threshold. The feedrate will be adjusted to keep the resultant cutting forces constant all along the tool path. Therefore, it is shown that this approach allows decreasing the cycling time drastically. The scheduled feedrate in each cutter location is carried out in NC blocks using an off-line postprocessor {{that can be used}} in commercial CAM software. Eventually, the proposed FFS technique is experimentally tested on rough machining of an impeller with free form surfaces and force validations are presented in this article...|$|R
40|$|Copyright Â© 2015 by ASME. This paper {{presents}} a design system for planar and spherical six-bar linkages, which is integrated with a <b>solid</b> <b>modeler.</b> The user specifies a backbone 3 R chain in five task configurations in the sketch mode of the <b>solid</b> <b>modeler</b> and executes the design system. Two RR constraints are computed, which constrain the 3 R chain {{to a single}} degree-of-freedom six-bar linkage. There are six ways that these constraints {{can be added to}} the 3 R serial chain to yield as many as 63 different linkages in case of planar six-bar linkages and 165 in case of spherical six-bar linkages. The performance of each candidate is analyzed, and those that meet the required task are presented to the designer for selection. The design algorithm is run iteratively with random variations applied to the task configurations within user-specified tolerance zones, {{to increase the number of}} candidate designs. The output is a solid model of the six-bar linkage. Examples are presented, which demonstrate the effectiveness of this strategy for both planar and spherical linkages...|$|R
40|$|The solvent-free <b>hybrid</b> <b>solid</b> {{electrolytes}} {{composed of}} lithium aluminum germanium phosphate (LAGP) and poly(ethylene oxide) (PEO) were prepared {{in the form}} of flexible film, and their electrochemical characteristics were investigated. The addition of ion-conductive LAGP powder into PEO-based solid polymer electrolyte improved the electrical and mechanical properties of solid electrolytes. For the <b>hybrid</b> <b>solid</b> electrolytes examined in this study, the optimum composition of LAGP was found to be about 60 â¼ 80 wt % in consideration of ionic conductivity, mechanical stability and formability for flexible thin film. The all solid-state Li/LiFePO 4 cell assembled with <b>hybrid</b> <b>solid</b> electrolyte delivered an initial discharge capacity of 137. 6 mAh gâ 1 and exhibited good cycling stability at 55 â¦C...|$|R
40|$|Abstract This paper {{describes}} an automatic mesh generation system for {{finite element analysis}} of three-dimensional cracks. It is consisting of fuzzy knowledge processing, bubble meshing and <b>solid</b> geometry <b>modeler.</b> This novel mesh generation process consists of three sub-processes: (a) definition of geometric model, i. e. analysis model, (b) generation of bubbles, and (c) generation of elements. One of commercial <b>solid</b> <b>modelers</b> is employed for three-dimensional crack structures. Bubble is generated if its distance from existing bubble points {{is similar to the}} bubble spacing function at the point. The bubble spacing function is well controlled by the fuzzy knowledge processing. The Delaunay method is introduced as a basic tool for element generation. Practical performances of the present system are demonstrated through several mesh generations for 3 D cracks...|$|R
40|$|Abstract-This paper {{presents}} the necessary requirements for a multi-representational <b>solid</b> <b>modeler</b> combining Constructive <b>Solid</b> Geometry (CSG) and Boundary Representation (B-rep) to be coupled to a 3 D automatic finite-element mesh generator in electromagnetic problems. A modeler architecture and the functional specifications of the modules are defined. Implemen-tation details, including object oriented data structures and classes definitions are described. Index term-Geometric modeling, design automation soft-ware, finite element methods, software requirements, software design, data structures, object oriented programming...|$|R
40|$|Computing impacts the {{preliminary}} architectural design {{process as a}} tool for observation and analysis, as a formal prototyping tool, and as a vehicle to generate variations of objects and assemblies. Through the use of both traditional and computing tools, the Form Processing Workshop examines the relationship between design decisions and design tools. The Workshop utilizes several software applications, with emphasis on the use of a <b>solid</b> <b>modeler.</b> This curriculum was developed with the support of MIT's Project Athena...|$|R
40|$|The paper {{describes}} {{the investigation of}} Pump as Turbine using numerical approach. The case study describes various problems faced during modeling and the approaches used to resolve the problems. The unstructured mesh concept in CFX 5. 6 resolved the complex blocking approach used in structured mesh. The geometries were modeled using Pro-E <b>solid</b> <b>modeler</b> and transferred to CFX. The results from the analysis were encouraging. The predicted performance showed a good trend with the experimental test result...|$|R
