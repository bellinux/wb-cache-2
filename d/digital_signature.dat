2730|1484|Public
25|$|Public-key {{cryptography}} {{can also}} be used for implementing <b>digital</b> <b>signature</b> schemes. A <b>digital</b> <b>signature</b> is reminiscent of an ordinary signature; they both have the characteristic of being easy for a user to produce, but difficult for anyone else to forge. Digital signatures {{can also be}} permanently tied to the content of the message being signed; they cannot then be 'moved' from one document to another, for any attempt will be detectable. In <b>digital</b> <b>signature</b> schemes, there are two algorithms: one for signing, in which a secret key is used to process the message (or a hash of the message, or both), and one for verification, in which the matching public key is used with the message to check the validity of the signature. RSA and DSA are two of the most popular <b>digital</b> <b>signature</b> schemes. Digital signatures are central to the operation of public key infrastructures and many network security schemes (e.g., SSL/TLS, many VPNs, etc.).|$|E
25|$|PGP {{supports}} {{message authentication}} and integrity checking. The latter {{is used to}} detect whether a message has been altered since it was completed (the message integrity property) and the former {{to determine whether it}} was actually sent by the person or entity claimed to be the sender (a <b>digital</b> <b>signature).</b> Because the content is encrypted, any changes in the message will result in failure of the decryption with the appropriate key. The sender uses PGP to create a <b>digital</b> <b>signature</b> for the message with either the RSA or DSA algorithms. To do so, PGP computes a hash (also called a message digest) from the plaintext and then creates the <b>digital</b> <b>signature</b> from that hash using the sender's private key.|$|E
25|$|Data corroboration, {{including}} the use of check sum, double-keying, message authentication, and <b>digital</b> <b>signature</b> may be used to ensure data integrity.|$|E
40|$|RSA-???????? ?????? ? ????????? ????????? ?? ?????????? ?????? ? c????????? ?????. ???????????? ??????? ????????? ???????? ???????? ??????????? ?? ?????? ?????????? ?????? (ECDSA ? ECSS). ??????? ???????????? ? ???????????? ???????? ????????. Produce {{comparative}} analysis RSA ? similar systems with <b>digital</b> <b>signatures</b> on elliptic curves in finite fields. Analyzed main algorithms of <b>digital</b> <b>signatures</b> on elliptic curves (ECDSA and ECSS). Given recommendations on using the <b>digital</b> <b>signatures...</b>|$|R
40|$|Public key cryptography, {{and with}} it,the ability to compute <b>digital</b> <b>signatures,</b> {{have made it}} {{possible}} for electronic commerce to flourish. It is thus unsurprising that the proposed Australian NECS will also utilise <b>digital</b> <b>signatures</b> in its system so as to provide a fully automated process from the creation of electronic land title instrument to the digital signing, and electronic lodgment of these instruments. This necessitates an analysis of the fraud risks raised by the usage of <b>digital</b> <b>signatures</b> because a compromise of the integrity of <b>digital</b> <b>signatures</b> will lead to a compromise of the Torrens system itself. This article will show that <b>digital</b> <b>signatures</b> may in fact offer greater security against fraud than handwritten signatures; but to achieve this, <b>digital</b> <b>signatures</b> require an infrastructure whereby each component is properly implemented and managed...|$|R
40|$|<b>Digital</b> <b>signatures</b> allow a {{principal}} to cryptographically bind (a representation of) its identity {{to a piece}} of information. Aims ◮ <b>Digital</b> <b>signatures</b> allow {{a principal}} to cryptographically bind (a representation of) its identity {{to a piece of}} information. ◮ Signatures can help establish security properties such as: Aims ◮ <b>Digital</b> <b>signatures</b> allow a principal to cryptographically bind (a representation of) its identity to a piece of information. ◮ Signatures can help establish security properties such as: ◮ authenticationAims ◮ <b>Digital</b> <b>signatures</b> allow a principal t...|$|R
25|$|In cryptography, a blind signature, as {{invented by}} David Chaum in 1983, {{is a form}} of <b>digital</b> <b>signature</b> in which the content of a message is {{disguised}} before it is signed. The resulting blind signature can be publicly verified against the original, unblinded message {{in the manner of a}} regular <b>digital</b> <b>signature.</b> Blind signatures are typically employed in privacy-related protocols where the signer and message author are different parties. Examples include cryptographic election systems and digital cash schemes.|$|E
25|$|Computer vended postage — {{advanced}} secure postage {{that uses}} information-based indicia (IBI) technology. IBI uses a two-dimensional bar code (Datamatrix or PDF417) to encode the originating address, date of mailing, postage and a <b>digital</b> <b>signature</b> {{to verify the}} stamp.|$|E
25|$|A tag {{object is}} a {{container}} {{that contains a}} reference to another object and can hold added meta-data related to another object. Most commonly, {{it is used to}} store a <b>digital</b> <b>signature</b> of a commit object corresponding to a particular release of the data being tracked by Git.|$|E
40|$|<b>Digital</b> <b>signatures</b> are {{widespread}} in IT nowadays. In some cases there is emphasized {{the security of}} signer identity when signing an electronic message. For this type of <b>signature</b> group <b>digital</b> <b>signatures</b> are suitable. In this thesis basic cryptographic functions are presented which are used for group <b>digital</b> <b>signatures.</b> The principle of group signatures is explained, its advantages and nowadays use. Further are explained electronic election and it dis- and advantages. The practical part is a design and implementation of system suitable for electronic election allowing anonymity of voters using group <b>digital</b> <b>signatures...</b>|$|R
50|$|TLS 1.2 (2008) is {{the latest}} {{published}} version of the base protocol, introducing a means to identify the hash used for <b>digital</b> <b>signatures.</b> While permitting the use of stronger hash functions for <b>digital</b> <b>signatures</b> in the future (rsa,sha256/sha384/sha512) over the SSL 3.0 conservative choice (rsa,sha1+md5), the TLS 1.2 protocol change inadvertently and substantially weakened the default <b>digital</b> <b>signatures</b> and provides (rsa,sha1) and even (rsa,md5).|$|R
40|$|The {{concept of}} batch verifying {{multiple}} RSA <b>digital</b> <b>signatures</b> {{is to find}} a method that multiple <b>digital</b> <b>signatures</b> can be verified simultaneously in only one exponential operation time. In this article, we pm posed a new batch verifying multiple RSA <b>digital</b> <b>signatures</b> scheme. The main contribution of the proposed scheme is that it can easily discover where the signature-verification fault is located without re-verifying all individual signatures separately...|$|R
25|$|Kernel-mode drivers on 64-bit {{versions}} of Windows Vista must be digitally signed; even administrators {{will not be}} able to install unsigned kernel-mode drivers. A boot-time option is available to disable this check for a single session of Windows. Installing user-mode drivers will still work without a <b>digital</b> <b>signature.</b>|$|E
25|$|Atari 2600 emulators such as Stella and Z26 {{are often}} used by homebrewers to test their games as they are being developed. Unlike later consoles, the Atari 2600 {{does not require a}} modchip to run homebrew cartridges; it will run any {{properly}} written program without checking for a <b>digital</b> <b>signature</b> or performing any other type of authentication.|$|E
25|$|Other discussions {{question}} whether OLPC laptops {{should be designed}} to promote anonymity or to facilitate government tracking of stolen laptops. A June 2008 New Scientist article critiqued Bitfrost's P_THEFT security option, which allows each laptop to be configured to transmit an individualized, non-repudiable <b>digital</b> <b>signature</b> to a central server at most once each day to remain functioning.|$|E
40|$|In this paper, we {{surveyed}} several well-known batch verification multiple <b>digital</b> <b>signatures.</b> These schemes can batch verify multiple <b>digital</b> <b>signatures</b> which need only one verification instead of $t$ verifications. However, {{a number of}} weaknesses of these schemes are pointed out. According to our proposed issues and challenges, we compared and analyzed them. To sum up these schemes, a secure and efficient multiple <b>digital</b> <b>signatures</b> scheme which needs only one verification remains an open problem...|$|R
40|$|Part 3 : Examples and Case StudiesInternational audienceDigital {{signatures}} {{are important}} {{in order to ensure}} the integrity and authenticity of information communicated over the Internet involving different stakeholders within and beyond the borders of different nations. The topic has gained increased interest in the European context and there is legislation and project initiatives aiming to facilitate use and standardisation of <b>digital</b> <b>signatures.</b> Open standards and open source implementations of open standards are important means for the interoperability and long-term maintenance of software systems implementing <b>digital</b> <b>signatures.</b> In this paper we report from a study aiming to establish the availability and effectiveness of software provided under an open source license for digital signing and validation of PDF documents. Specifically, we characterise the use of <b>digital</b> <b>signatures</b> in Swedish Governmental agencies, report on the interoperability of open source and proprietary licensed software for <b>digital</b> <b>signatures</b> in PDF documents, and establish the effectiveness of software provided under an open source license for validation of <b>digital</b> <b>signatures</b> in PDF documents...|$|R
50|$|As {{organizations}} {{move away}} from paper documents with ink signatures or authenticity stamps, <b>digital</b> <b>signatures</b> can provide added assurances of the evidence to provenance, identity, and status of an electronic document as well as acknowledging informed consent and approval by a signatory. The United States Government Printing Office (GPO) publishes electronic versions of the budget, public and private laws, and congressional bills with <b>digital</b> <b>signatures.</b> Universities including Penn State, University of Chicago, and Stanford are publishing electronic student transcripts with <b>digital</b> <b>signatures.</b>|$|R
25|$|It is {{important}} to note that while technology such as cryptographic systems can assist in non-repudiation efforts, the concept is at its core a legal concept transcending the realm of technology. It is not, for instance, sufficient to show that the message matches a <b>digital</b> <b>signature</b> signed with the sender's private key, and thus only the sender could have sent the message and nobody else could have altered it in transit (data integrity). The alleged sender could in return demonstrate that the <b>digital</b> <b>signature</b> algorithm is vulnerable or flawed, or allege or prove that his signing key has been compromised. The fault for these violations may or may not lie with the sender himself, and such assertions may or may not relieve the sender of liability, but the assertion would invalidate the claim that the signature necessarily proves authenticity and integrity; and, therefore, the sender may repudiate the message (because authenticity and integrity are pre-requisites for non-repudiation).|$|E
25|$|Infrasound {{wavelengths}} can {{be generated}} artificially through detonations and other human activity, or naturally from earthquakes, severe weather, lightning, and other sources. Like forensic seismology, algorithms and other filter techniques are required to analyze gathered data and characterize events {{to determine if a}} nuclear detonation has actually occurred. Data is transmitted from each station via secure communication links for further analysis. A <b>digital</b> <b>signature</b> is also embedded in the data sent from each station to verify if the data is authentic.|$|E
500|$|Another major {{ransomware}} Trojan targeting Windows, CryptoWall, {{first appeared}} in 2014. One strain of CryptoWall was distributed {{as part of a}} malvertising campaign on the Zedo ad network in late-September 2014 that targeted several major websites; the ads redirected to rogue websites that used browser plugin exploits to download the payload. A Barracuda Networks researcher also noted that the payload was signed with a <b>digital</b> <b>signature</b> in an effort to appear trustworthy to security software.|$|E
50|$|Adaptive chosen-message {{attack for}} <b>digital</b> <b>signatures.</b>|$|R
40|$|Credit-card payment {{protocols}} such as iKP and SET use <b>digital</b> <b>signatures</b> {{to authenticate}} messages and authorize transactions. It {{is assumed that}} these <b>digital</b> <b>signatures</b> make the parties' authorizations non-repudiable, i. e., provable to a third-party verifier. In this paper, we define a set of statements which participants in a payment may want to prove. We then investigate which of these statements can be proved with the <b>digital</b> <b>signatures</b> within iKP and SET, and make some general comments about requirements for provability in payment protocols...|$|R
5000|$|While {{the papers}} {{describing}} HSLS do {{not focus on}} security, techniques such as <b>digital</b> <b>signatures</b> on routing updates {{can be used with}} HSLS (similar to OSPF with <b>Digital</b> <b>Signatures),</b> and BBN has implemented HSLS with <b>digital</b> <b>signatures</b> on neighbor discovery messages and link state updates. Such schemes are challenging in practice because in the ad hoc environment reachability of public key infrastructure servers cannot be assured. Like almost all routing protocols, HSLS does not include mechanisms to protect data traffic. (See IPsec and TLS.) ...|$|R
2500|$|Apply a <b>digital</b> <b>signature</b> to {{existing}} <b>digital</b> <b>signature</b> form field ...|$|E
2500|$|Addition of the Ed25519 and Ed448 <b>digital</b> <b>signature</b> {{algorithms}} ...|$|E
2500|$|Under its new structure, TSE has online trading, an {{arbitration}} board, <b>digital</b> <b>signature,</b> investor protection, surveillance mechanisms {{as well as}} post-trade systems. The TSE is {{open for}} trading {{five days a week}} from Saturday to Wednesday, excluding [...] Trading takes place through the Automated Trade Execution System from 9am to 12 noon, which is integrated with a clearing, settlement, [...] Settlement is T+3. The TSE is solely an order-driven market and all transactions are executed in the manner and under the principles of open auction.|$|E
40|$|Blind <b>digital</b> <b>signatures</b> were {{introduced}} by Chaum. In this paper, we show how security and blindness properties for blind <b>digital</b> <b>signatures,</b> can be simultaneously defined and satisfied, assuming an arbitrary one-way trapdoor permutation family. Thus, {{this paper presents}} the first complexity-based proof of security for blind signatures...|$|R
40|$|<b>Digital</b> <b>signatures</b> are a {{powerful}} tool for demonstrating data integrity and performing source authentication. Timestamps are {{a powerful}} tool for confirming data existence by a particular point in time. Today, the value of <b>digital</b> <b>signatures</b> (and timestamps containing <b>digital</b> <b>signatures)</b> is limited {{due to a lack of}} tools and techniques that address the problems associated with <b>digital</b> <b>signatures</b> that accrue over time, including: expiration, revocation, cryptanalytic advances and computational advances. In this paper, we describe a system concept and protocol to achieve secure storage of data for long periods with preservation of integrity. The approach uses periodically refreshed time stamps to address these problems. The techniques can be used for a wide variety of applications, including those requiring long-term non-repudiation of <b>digital</b> <b>signatures.</b> The concept and protocol are based on minimizing trust in individual system components in order to reduce the security requirements for those components and to enhance the trust in the overall system. A proof-of-concept implementation based on the ideas and protocol described in this paper has been developed and successfully tested. 1...|$|R
40|$|Abstract. Blind <b>digital</b> <b>signatures</b> were {{introduced}} by Chaum. In this paper, we show how security and blindness properties for blind <b>digital</b> <b>signatures,</b> can be simultaneously de ned and satis ed, assuming an arbitrary one-way trapdoor permutation family. Thus, {{this paper presents}} the rst complexity-based proof of security for blind signatures. ...|$|R
2500|$|Since RFID tags can be {{attached}} to cash, clothing, and possessions, or implanted in animals and people, the possibility of reading personally-linked information without consent has raised serious privacy concerns. These concerns resulted in standard specifications development [...] addressing privacy and security issues. [...] ISO/IEC 18000 and ISO/IEC 29167 use on-chip cryptography methods for untraceability, tag and reader authentication, and over-the-air privacy. ISO/IEC 20248 specifies a <b>digital</b> <b>signature</b> data structure for RFID and barcodes providing data, source and read method authenticity. [...] This work is done within ISO/IEC JTC 1/SC 31 Automatic identification and data capture techniques. Tags {{can also be used}} in shops to expedite checkout, and to prevent theft by customers and employees.|$|E
2500|$|A second {{solution}} requires unforgeable message signatures. [...] For security-critical systems, digital signatures (in modern computer systems, {{this may}} be achieved in practice using public-key cryptography) can provide Byzantine fault tolerance {{in the presence of}} an arbitrary number of traitorous generals. [...] However, for safety-critical systems, simple error detecting codes, such as CRCs, provide weaker but often sufficient coverage at a much lower cost. [...] This is true for both Byzantine and non-Byzantine faults. [...] Thus, cryptographic <b>digital</b> <b>signature</b> methods are not a good choice for safety-critical systems, unless there is also a specific security threat as well. While error detecting codes, such as CRCs, are better than cryptographic techniques, neither provide adequate coverage for active electronics in safety-critical systems. [...] This is illustrated by the Schrödinger CRC scenario where a CRC-protected message with a single Byzantine faulty bit presents different data to different observers and each observer sees a valid CRC.|$|E
2500|$|Cryptographic hash {{functions}} are a third type of cryptographic algorithm. They take {{a message of}} any length as input, and output a short, fixed length hash, {{which can be used}} in (for example) a <b>digital</b> <b>signature.</b> For good hash functions, an attacker cannot find two messages that produce the same hash. MD4 is a long-used hash function that is now broken; MD5, a strengthened variant of MD4, is also widely used but broken in practice. The US National Security Agency developed the Secure Hash Algorithm series of MD5-like hash functions: SHA-0 was a flawed algorithm that the agency withdrew; SHA-1 is widely deployed and more secure than MD5, but cryptanalysts have identified attacks against it; the SHA-2 family improves on SHA-1, but it isn't yet widely deployed; and the US standards authority thought it [...] "prudent" [...] from a security perspective to develop a new standard to [...] "significantly improve the robustness of NIST's overall hash algorithm toolkit." [...] Thus, a hash function design competition was meant to select a new U.S. national standard, to be called SHA-3, by 2012. The competition ended on October 2, 2012 when the NIST announced that Keccak would be the new SHA-3 hash algorithm. Unlike block and stream ciphers that are invertible, cryptographic hash functions produce a hashed output that cannot be used to retrieve the original input data. Cryptographic hash {{functions are}} used to verify the authenticity of data retrieved from an untrusted source or to add a layer of security.|$|E
2500|$|Requiring <b>digital</b> <b>signatures</b> {{even when}} a {{previous}} configuration is used ...|$|R
5000|$|<b>Digital</b> <b>signatures</b> and law#European Union and the European Economic Area ...|$|R
5000|$|Requiring <b>digital</b> <b>signatures</b> {{even when}} a {{previous}} configuration is used ...|$|R
