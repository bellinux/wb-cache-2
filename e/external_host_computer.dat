6|2122|Public
40|$|This is a {{real-time}} robotic controller and simulator {{which is}} a MIMD-SIMD parallel architecture for interfacing with an <b>external</b> <b>host</b> <b>computer</b> and providing {{a high degree of}} parallelism in computations for robotic control and simulation. It includes a host processor for receiving instructions from the <b>external</b> <b>host</b> <b>computer</b> and for transmitting answers to the <b>external</b> <b>host</b> <b>computer.</b> There are a plurality of SIMD microprocessors, each SIMD processor being a SIMD parallel processor capable of exploiting fine grain parallelism and further being able to operate asynchronously to form a MIMD architecture. Each SIMD processor comprises a SIMD architecture capable of performing two matrix-vector operations in parallel while fully exploiting parallelism in each operation. There is a system bus connecting the host processor to the plurality of SIMD microprocessors and a common clock providing a continuous sequence of clock pulses. There is also a ring structure interconnecting the plurality of SIMD microprocessors and connected to the clock for providing the clock pulses to the SIMD microprocessors and for providing a path for the flow of data and instructions between the SIMD microprocessors. The host processor includes logic for controlling the RRCS by interpreting instructions sent by the <b>external</b> <b>host</b> <b>computer,</b> decomposing the instructions into a series of computations to be performed by the SIMD microprocessors, using the system bus to distribute associated data among the SIMD microprocessors, and initiating activity of the SIMD microprocessors to perform the computations on the data by procedure call...|$|E
40|$|Abstract. By {{analyzing}} the bearing raceway ultra-lapping process and equipment, we {{can set up}} an automatic device replacing oilstone and automatic detection mechanism of machining precision. By adapting the modular method to define respectively various functions of the automatic cycle processing module, automatic device replacing oilstone module, detection module, machining precision of automatic machine automatic feeding module, machine automatic feeding module, network monitoring module, and analyzing those functions to find logical relationship between the modules, we aim at establishing communication between these modules. Through the use of embedded microprocessor and its application software, connected by the CNC system and the <b>external</b> <b>host</b> <b>computer</b> network, we can realize long-distance control and unmanned operation, long-distance processing program transmission, long-distance diagnosis and repair services, technical services, and coordinating and efficient operation of each functional module of ultra-lapping process, eventually establishing the bearing raceway lapping unmanned manufacturing system, improving the efficiency and stability of the equipment, saving human resources, creating conditions for constructing unmanned automatic production system for bearing...|$|E
40|$|ABSTRACT chassis. CMOS {{circuits}} {{were used}} wherever possible to reduce power consumption, and therefore, the dissipated heat. We have developed anew power supply controller which would combine 20 -bit precision, simple interfacing, and versatile software control. It performs many tasks internal {{to the power}} supply and also communicates with an <b>external</b> <b>host</b> <b>computer.</b> Parameters can be entered and/or read over a serial link {{using one of the}} 82 command words [l]. In addition, an optional remote control panel can be located up to thousands of feet away. This new controller will reduce the software dcvclopment time normally spent by the user, while increasing the reliability of the system. The cost is less than buying the equivalent separate CAMAC system. Nonvolatile memory remembers all configuration data; one generic controller can thus be programmed to use anywhere from the smallest power supply to the largest. We are presently building 22 power supplies using these controllers. They will be used at the Clinton P. Anderso...|$|E
40|$|In {{this paper}} a {{reconfigurable}} ultra-wideband (UWB) impulse radio (IR) transmitter is presented. The IR signal is synthesized at an intermediate frequency (IF) by employing a multi-Nyquist digital-to-analog converter (DAC) with 12 bit resolution and an update rate of 2. 3 GHz. Digital generation of signals {{in a field}} programmable gate array (FPGA) guarantees very high flexibility of the reconfigurable design. For upconversion to the radio frequency (RF) band, a first order bandpass (BP) sampling concept and an alternative conventional concept with mixer stages, have been realized. The system enables to generate signals with arbitrary modulation schemes and techniques at an <b>external</b> <b>host</b> personal <b>computer</b> (PC) employing MATLAB. Different measurements using a digitizing oscilloscope have been conducted to demonstrate the performance of the transmitter...|$|R
40|$|International Telemetering Conference Proceedings / November 04 - 07, 1991 / Riviera Hotel and Convention Center, Las Vegas, NevadaThe Multi-Stream Data-Driven Telemetry System (MSDDTS) {{is a new}} {{generation}} system in China developed by Beijing Research Institute of Telemetry (BRIT) for high bit rate, multi-stream data acquisition, processing and display. Features of the MSDDTS include:. Up to 4 data streams;. Data driven architecture;. Multi-processor for parallel processing;. Modular, Configurable, expandable and programmable;. Stand-along capability;. And, <b>external</b> control by <b>host</b> <b>computer.</b> This paper addresses three very {{important aspects of the}} MSDDTS. First, the system architecture is discussed. Second, three basic models of the system configuration are described. The third shows the future development of the system...|$|R
40|$|KNET {{computer}} program facilitates distribution of computing between UNIX-compatible local <b>host</b> <b>computer</b> and remote <b>host</b> <b>computer,</b> {{which may or}} may not be UNIX-compatible. Capable of automatic remote log-in. User communicates interactively with remote <b>host</b> <b>computer.</b> Data output from remote <b>host</b> <b>computer</b> directed to local screen, to local file, and/or to local process. Conversely, data input from keyboard, local file, or local process directed to remote <b>host</b> <b>computer.</b> Written in ANSI standard C language...|$|R
40|$|The MultiNoC system {{implements}} a programmable on-chip multiprocessing platform {{built on}} top of an efficient, low area overhead intra-chip interconnection scheme. The employed interconnection structure is a Network on Chip, or NoC. NoCs are emerging as a viable alternative to increasing demands on interconnection architectures, due to the following characteristics: (i) energy efficiency and reliability; (ii) scalability of bandwidth, when compared to traditional bus architectures; (iii) reusability; (iv) distributed routing decisions. An <b>external</b> <b>host</b> <b>computer</b> feeds MultiNoC with application instructions and data. After this initialization procedure, MultiNoC executes some algorithm. After finishing execution of the algorithm, output data can be read back by the host. Sequential or parallel algorithms conveniently adapted to the MultiNoC structure can be executed. The main motivation to propose this design is to enable the investigation of current trends {{to increase the number of}} embedded processors in SoCs, leading to the concept of "sea of processors" systems. Comment: Submitted on behalf of EDAA ([URL]...|$|E
40|$|A charge-coupled-device (CCD) based {{high-speed}} imaging system, {{called a}} realtime, event-driven (RARE) camera, is undergoing development. This camera {{is capable of}} readout from multiple subwindows [also known as regions of interest (ROIs) ] within the CCD field of view. Both the sizes and {{the locations of the}} ROIs can be controlled in real time and can be changed at the camera frame rate. The predecessor of this camera was described in High-Frame-Rate CCD Camera Having Subwindow Capability (NPO- 30564) NASA Tech Briefs, Vol. 26, No. 12 (December 2002), page 26. The architecture of the prior camera requires tight coupling between camera control logic and an <b>external</b> <b>host</b> <b>computer</b> that provides commands for camera operation and processes pixels from the camera. This tight coupling limits the attainable frame rate and functionality of the camera. The design of the present camera loosens this coupling to increase the achievable frame rate and functionality. From a host computer perspective, the readout operation in the prior camera was defined on a per-line basis; in this camera, it is defined on a per-ROI basis. In addition, the camera includes internal timing circuitry. This combination of features enables real-time, event-driven operation for adaptive control of the camera. Hence, this camera is well suited for applications requiring autonomous control of multiple ROIs to track multiple targets moving throughout the CCD field of view. Additionally, by eliminating the need for control intervention by the host computer during the pixel readout, the present design reduces ROI-readout times to attain higher frame rates. This camera (see figure) includes an imager card consisting of a commercial CCD imager and two signal-processor chips. The imager card converts transistor/ transistor-logic (TTL) -level signals from a field programmable gate array (FPGA) controller card. These signals are transmitted to the imager card via a low-voltage differential signaling (LVDS) cable assembly. The FPGA controller card is connected to the host computer via a standard peripheral component interface (PCI) ...|$|E
30|$|The <b>host</b> <b>computer</b> often {{communicates}} {{with the}} FPGA {{to complete the}} performance measurement. Through Peripheral Component Interconnect (PCI) bus interface, not only the <b>host</b> <b>computer</b> can send data frames to FPGA through the direct memory access (DMA)-engine, but also the <b>host</b> <b>computer</b> can access the internal registers of the FPGA any time. A CPU RxQ receives the data frames configured by the user from the <b>host</b> <b>computer</b> via PCI bus, which {{is the source of}} the probe data frame.|$|R
3000|$|... [...]) {{and a black}} wooden {{rectangular}} playground. A <b>host</b> <b>computer</b> {{controls the}} robot by commanding the robot velocities like a radio-controlled car. There are three different programs included in the YSR-A robot; a program receives commands of the <b>host</b> <b>computer,</b> the other program counts the numbers of Encoder, and another program controls the motor’s movement by speed commands from the <b>host</b> <b>computer.</b>|$|R
5000|$|On Windows, Skype can be run {{directly}} from a USB flash drive without being installed on the <b>host</b> <b>computer.</b> [...] On Mac OS X, installation on the <b>host</b> <b>computer</b> is not required.|$|R
40|$|A network {{connection}} blocker for monitoring connections between <b>host</b> <b>computers</b> {{in a network}} and blocking the unwanted connections. The <b>host</b> <b>computers</b> transmit connection packets between each other in accordance with a network protocol suite when seeking to establish, providing network services with, and close the connections. The network protocol suite includes a connection oriented transport layer protocol. The {{network connection}} blocker comprises a network interface that receives the connection packets transmitted between the <b>host</b> <b>computers.</b> It also comprises a blocking module that processes the received connection packets to detect the unwanted connections. The blocking module then generates connection packets {{in accordance with the}} network protocol suite to cause the detected unwanted connections to be closed by the corresponding <b>host</b> <b>computers</b> between which are the unwanted connections. The network interface then transmits the generated connection packets to these <b>host</b> <b>computers...</b>|$|R
50|$|NCP {{provided}} {{connections and}} flow control between processes running on different ARPANET <b>host</b> <b>computers.</b> Application services, such as email and file transfer, were built {{on top of}} NCP, using it to handle connections to other <b>host</b> <b>computers.</b>|$|R
40|$|A more {{efficient}} and cost effective method for developing microcomputer software is to utilize a <b>host</b> <b>computer</b> with high-speed peripheral support. Application programs such as cross assemblers, loaders, and simulators are implemented in the <b>host</b> <b>computer</b> {{for each of the}} microcomputers for which software development is a requirement. The <b>host</b> <b>computer</b> is configured to operate in a time share mode for multiusers. The remote terminals, printers, and down loading capabilities provided are based on user requirements. With this configuration a user, either local or remote, can use the <b>host</b> <b>computer</b> for microcomputer software development. Once the software is developed (through the code and modular debug stage) it can be downloaded to the development system or emulator in a test area where hardware/software integration functions can proceed. The microcomputer software program sources reside in the <b>host</b> <b>computer</b> and can be edited, assembled, loaded, and then downloaded as required until the software development project has been completed...|$|R
50|$|NAT {{operation}} is typically transparent {{to both the}} internal and <b>external</b> <b>hosts.</b>|$|R
25|$|Flash drives {{are used}} to carry {{applications}} that run on the <b>host</b> <b>computer</b> without requiring installation. While any standalone application can in principle be used this way, many programs store data, configuration information, etc. on the hard drive and registry of the <b>host</b> <b>computer.</b>|$|R
50|$|This can be {{accomplished}} via a web browser, if the <b>host</b> <b>computer</b> is running and the device and <b>host</b> <b>computer</b> share the same network; in this case, pushing harvested content from content sources is supported on a regular interval ("subscription"). Additionally, if the Calibre library on the <b>host</b> <b>computer</b> is stored in a cloud service, such as Box.net, Google Drive, or Dropbox, then either the cloud service or a third-party app, such as Calibre Cloud or CalibreBox, {{can be used to}} remotely access the library.|$|R
5000|$|... #Caption: Historical document: First ARPANET IMP log: {{the first}} message ever sent via the ARPANET, 10:30 pm, 29 October 1969. This IMP Log excerpt, kept at UCLA, {{describes}} {{setting up a}} message transmission from the UCLA SDS Sigma 7 <b>Host</b> <b>computer</b> to the SRI SDS 940 <b>Host</b> <b>computer.</b>|$|R
40|$|The Interactive Software Invocation (ISIS), an {{interactive}} data management system, {{was developed to}} act as a buffer between the user and <b>host</b> <b>computer</b> system. The user is provided by ISIS with a powerful system for developing software or systems in the interactive environment. The user is protected from the idiosyncracies of the <b>host</b> <b>computer</b> system by providing such a complete range of capabilities that the user should have no need for direct access to the <b>host</b> <b>computer.</b> These capabilities are divided into four areas: desk top calculator, data editor, file manager, and tool invoker...|$|R
40|$|Multiplexable input/output (I/O) system {{developed}} as interface between <b>host</b> <b>computer</b> and real-time, fixed-base simulator cockpit. Unit {{designed to be}} general-purpose interface and operated through virtually any 8 - or 16 -bit, transistor/transistor-logic-level, parallel-I/O port with or without handshaking. Accepts byte-coded data in form of data blocks from <b>host</b> <b>computer</b> and routes data to various system I/O modules like discrete outputs, lamp drivers, and seven-segment-display drivers. Formats and routes data from input modules back to <b>host</b> <b>computer.</b> Other modules designed to drive alphanumeric displays and communications interfaces and to serve as analog-to-digital and digital-to-analog converter modules...|$|R
50|$|One form of desktop virtualization, {{virtual desktop}} {{infrastructure}} (VDI), {{can be thought}} of as a more advanced form of hardware virtualization. Rather than interacting with a <b>host</b> <b>computer</b> directly via a keyboard, mouse, and monitor, the user interacts with the <b>host</b> <b>computer</b> using another desktop computer or a mobile device by means of a network connection, such as a LAN, Wireless LAN or even the Internet. In addition, the <b>host</b> <b>computer</b> in this scenario becomes a server <b>computer</b> capable of <b>hosting</b> multiple virtual machines at the same time for multiple users.|$|R
5000|$|If the <b>host</b> <b>computer</b> is {{situated}} in Antigua and the terminal computer is in the United Kingdom, it is pertinent to ask who uses the claimed gaming system. The answer must be the punter. Where does he use it? There {{can be no doubt}} that he uses his terminal in the United Kingdom and it is not a misuse of language to say that he uses the <b>host</b> <b>computer</b> in the United Kingdom. It is the input to and output of the <b>host</b> <b>computer</b> that is important to the punter and in a real sense the punter uses the <b>host</b> <b>computer</b> in the United Kingdom even though it {{is situated}} in Antigua and operates in Antigua. In those circumstances it is not straining the word [...] "use" [...] to conclude that the United Kingdom punter will use the claimed gaming system in the United Kingdom, even if the <b>host</b> <b>computer</b> {{is situated in}}, say, Antigua. Thus the supply of the CD in the United Kingdom to the United Kingdom punter will be intended to put the invention into effect in the United Kingdom.|$|R
5000|$|<b>Computer</b> Laboratory <b>hosts</b> <b>computers</b> {{for access}} to the Internet.|$|R
5000|$|<b>Host</b> <b>computer</b> special {{hardware}} supported: SIMD (SSE2 and AVX) ...|$|R
5000|$|<b>Host</b> <b>computer</b> special {{hardware}} supported: SIMD (SSE2, SSSE3), CUDA ...|$|R
50|$|Typically the {{internal}} host {{is aware of}} the true IP address and TCP or UDP port of the <b>external</b> <b>host.</b> Typically the NAT device may function as the default gateway for {{the internal}} <b>host.</b> However the <b>external</b> <b>host</b> is only aware of the public IP address for the NAT device and the particular port being used to communicate on behalf of a specific internal host.|$|R
50|$|GoToTraining {{allows the}} desktop {{view of a}} <b>host</b> <b>computer</b> to be {{broadcast}} {{to a group of}} computers connected to the host through the Internet. Transmissions are protected with high-security encryption. By combining a web-hosted subscription service with software installed on the <b>host</b> <b>computer,</b> transmissions can be passed through highly restrictive firewalls.|$|R
50|$|Most USRPs {{connect to}} a <b>host</b> <b>computer</b> through a {{high-speed}} link, which the host-based software uses {{to control the}} USRP hardware and transmit/receive data. Some USRP models also integrate the general functionality of a <b>host</b> <b>computer</b> with an embedded processor that allows the USRP device to operate in a stand-alone fashion.|$|R
30|$|For non-isolated particles, F_hard,i are {{calculated}} on the <b>host</b> <b>computer.</b>|$|R
40|$|The CAE A 330 /A 340 {{full flight}} {{simulator}} operated by the Zentrum für Flugsimulation Berlin (ZFB) is approved for training and research. While the certified JAA STD 1 A (D-A- 017) training software has its own dedicated <b>host</b> <b>computer,</b> research is activated by switching the <b>host</b> <b>computer</b> to an additional research computer...|$|R
5000|$|A phidget (physical widget) is {{attached}} to a <b>host</b> <b>computer</b> via USB. There are various phidgets available, each having a counterpart class in the phidget API. As each phidget {{is attached}} to the <b>host</b> <b>computer,</b> it is made available to control in the API, where its state can be accessed and set.|$|R
30|$|As {{shown in}} Fig.  3, the lower {{computer}} terminal {{relates to the}} <b>host</b> <b>computer</b> management software through the bus to realize data communication. The enterprise user system {{is connected to the}} <b>host</b> <b>computer</b> management software through the internal LAN to realize data sharing and data management. The consumer user system is connected to the <b>host</b> <b>computer</b> management software through Ethernet to achieve traceability data sharing. Due to the harsh processing environment and complex processing procedures, the Internet of Things is utilized to realize the accurate perception and seamless acquisition of different processing information based on the existing automation equipment in the enterprise.|$|R
30|$|From Fig.  5, the <b>host</b> <b>computer</b> {{management}} {{software in}} accordance with the different function can be divided into information analysis module, processing information management module, process monitoring module, traceability information management module, and information transceiver module. The <b>host</b> <b>computer</b> management software realizes the analysis and processing of all kinds of raw data, the real-time monitoring of product processing process, and the management of traceability information by controlling the work of each module. By integrating the information of all the lower computer terminals in the industrial chain, the <b>host</b> <b>computer</b> management software has formed an information flow covering the whole industrial chain.|$|R
40|$|Abstract − This paper {{describes}} a low cost system {{to measure the}} consistency profile of pulp based on electrical impedance tomography (EIT). A 16 -electrode sensor is applied to acquire the cross-sectional data. Data acquisition is controlled by a single-chip computer, which receives commands from <b>host</b> <b>computer,</b> initializes hardware, acquires data and sends them to <b>host</b> <b>computer</b> via a serial port. All the measurement parameters such as the amplitude and frequency of the injected current can be set by software in <b>host</b> <b>computer.</b> The consistency profile image is reconstructed by modified Newton-Raphson algorithm. Comparing to conventional method, it is non-invasive and low cost...|$|R
40|$|International audienceUsing CAN (controller area network) {{field bus}} and iCAN protocol, an {{integrated}} measuring and controlling system for combine harvester is constructed in this paper. ARM {{is used as}} the processor of <b>host</b> <b>computer.</b> Lower computers are several measuring and controlling modules of combine harvester. <b>Host</b> <b>computer</b> communicates with lower computers through CAN bus. Information between measurement and control modules can be shared so that combine harvester’s whole performance can be improved. LCD on <b>host</b> <b>computer</b> shows working state and values of relative parameters of each module in real-time. Experiment shows that the system can work correctly and reliably...|$|R
40|$|We {{design an}} {{inexpensive}} interface unit {{and develop a}} communication control program to connect a personal computer APPLE II with the <b>host</b> <b>computer</b> ACOS 800. The system has the useful functions as follows; (1) to make programs e. g. FORTRAN programs at the terminal and transfer them to the <b>host</b> <b>computer,</b> (2) to transfer data {{in the memory of}} the APPLE II to the <b>host</b> <b>computer,</b> (3) to print out data or lists by almost real time, (4) {{to be able to use}} the DOS commands and the screen editor of the APPLE II in the communication control routine...|$|R
