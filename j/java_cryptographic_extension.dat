7|30|Public
40|$|This {{aim of this}} {{research}} is to provide a library of cryptographic tools which can be used for teaching and further research. The library consists of cryptographic algorithms that include symmetric and asymmetric encryptions, key exchange, hashing algorithms and digital signature algorithms. The library is implemented by using Java cryptographic service provider framework that conforms to Java Cryptographic Architecture (JCA) and <b>Java</b> <b>Cryptographic</b> <b>Extension</b> (JCE). The library is developed using Software Development Life Cycle (SDLC), supported by Unified Modeling Language (UML) for the design. The programming language used is Java JDK 1. 4. 1...|$|E
40|$|Abstract—- In {{this paper}} we {{describe}} {{our efforts to}} design and implement an agent development framework {{that has the potential}} to scale to the size of any underlying network suitable for various E-Commerce activities. The main novelty in our framework is it’s capability to allow the development of sophisticated, secured agents which are simple enough to be practical. We have adopted FIPA agent platform reference Model as backbone for implementation along with XML for agent Communication and <b>Java</b> <b>Cryptographic</b> <b>Extension</b> and architecture to realize the security of communication information between agents. The advantage of our architecture is its support of agents development in different languages and Communicating with each other using a more open standard i. e. XM...|$|E
40|$|Today {{and without}} a doubt, {{we live in a}} net-centric world in which new {{information}} technologies arrive at lightning speed, allowing us to share information locally to globally faster than ever before. The bad guys are equally out there to eavesdrop on our data transactions over the insecure communication channels. Cryptography can be used to help us secure our data communication. In this study we describe a Java implementation of secure RSA cryptosystems using your cryptographic provider, <b>Java</b> <b>Cryptographic</b> <b>Extension</b> (JCE). We then illustrate the use of this implementation in a working prototype. We then explain the naïve procedure for implementation of RSA cryptosystems and signature algorithm followed by the real time Java implementation using Open Source Bouncy Castle JCE provider...|$|E
40|$|When a {{vulnerability}} {{is discovered}} in a cryptographic algorithm, or in a specific implementation of that algorithm, {{it is important that}} software using that algorithm or implementation is upgraded quickly. Hence, modern cryptographic libraries such as the <b>Java</b> <b>Cryptographic</b> Architecture and <b>Extensions</b> (JCA/JCE) and the. NET crypto libraries are designed to be extensible with new algorithms. In addition, they also support algorithm and implementation independent use. Software written against these libraries can be implemented such that switching to a new crypto algorithm or implementation requires very little effort. This paper reports on our experiences with the implementation of a number of extensions to the. NET <b>cryptographic</b> framework. The <b>extensions</b> we consider are smart card based implementations of existing algorithms. We evaluate the extensibility of the libraries, and the support for implementation independence. We identify several problems with the libraries that {{have a negative impact on}} these properties, and we propose solutions. The main conclusion of the paper is that extensibility and implementation independence can be substantially improved with only minor changes. These changes maintain backwards compatibility for client code. nrpages: 16 status: publishe...|$|R
40|$|Java code is {{generated}} to implement cryptographic network protocols specified abstractly in CAPSL. The translation source is the CAPSL intermediate language CIL, and the output includes code for each party {{and for a}} demonstration environment server that permits user examination and control of communication. Standard <b>Java</b> <b>cryptographic</b> providers are used...|$|R
40|$|Java Cryptography {{teaches you}} how to write secure {{programs}} using <b>Java's</b> <b>cryptographic</b> tools. It includes thorough discussions of the java. security package and the Java Cryptography Extensions (JCE), showing {{you how to}} use security providers and even implement your own provider. It discusses authentication, key management, public and private key encryption, and includes a secure talk application that encrypts all data sent over the network...|$|R
40|$|<b>Java</b> <b>Cryptographic</b> <b>Extension</b> (JCE) offers {{support for}} {{developing}} cryptographic package providers, {{allowing us to}} extend the JCE by implementing faster or more secure cryptographic algorithms. By the same means we shall provide our independent implementation of a DNA Encryption (DNAE) system, based on the Central Dogma of Molecular Biology (CDMB). In this work we present a technical process for protecting data assets such as personal medical information using a DNA cryptography technique in which a person's own blood mineral levels serve as a seed for selecting, transmitting, and recovering his sensitive personal data. As {{we know that the}} management of security keys remains a challenge, we also propose a mechanism to generate encrypt-decrypt keys by taking into consideration specifics of the cryptography method and the individual's blood analysis. Our work is based on the complexity of developing, as a subset of JCE, an unconditionally secure DNAE System as part of our security provider, named DNAProvider. We intend to use DNA Provider with the DNAE System in medical applications to ensure security of medical informatio...|$|E
40|$|The {{escalation}} in {{the number}} of people with access to the Internet has fuelled the growth of e-commerce transactions. In order to stimulate this growth in e-commerce, the adoption of new business models will be required. In this thesis, we propose the idea of bringing the multi-level marketing business model into the e-commerce world. For e-commerce applications to take advantage of the business potential in this business model, some challenging security problems need to be resolved. Our proposed protocol provides a method for fair exchange of valuable items between multiple-parties in accordance with the multi-level marketing business model. It also provides the required security services needed to increase the overall customers' trust in e-commerce, and hence increase the rate of committed online transactions. These security services include content assurance, confidentiality, fair exchange and non-repudiation. The above security services are usually attained through the use of cryptography. For example, digital rights management systems deliver e-goods in an encrypted format. As these e-goods are decrypted before being presented to the end user, cryptographic keys may appear in the memory which leaves it vulnerable to memory disclosure attacks. In the second part of this thesis, we investigate a set of memory disclosure attacks which may compromise the confidentiality of cryptographic keys. We demonstrate that the threat of these attacks is real by exposing the secret private keys of several cryptographic algorithms used by different cryptographic implementations of the <b>Java</b> <b>Cryptographic</b> <b>Extension</b> (JCE...|$|E
40|$|Abstract. The Merkle {{signature}} scheme (MSS) is {{an interesting}} alternative for well established signature schemes such as RSA, DSA, and ECDSA. The security of MSS only relies {{on the existence of}} cryptographically secure hash functions. MSS has a good chance of being quantum computer resistant. In this paper, we propose CMSS, a variant of MSS, with reduced private key size, key pair generation time, and signature generation time. We demonstrate that CMSS is competitive in practice by presenting a highly efficient implementation within the <b>Java</b> <b>Cryptographic</b> Service Provider FlexiProvider. We present extensive experimental results and show that our implementation can for example be used to sign messages in Microsoft Outlook...|$|R
40|$|A <b>cryptographic</b> <b>extension</b> of the Russian {{programming}} language LYaPAS called LYaPAS-T is presented. The extension concerns {{the size of}} operands and the set of elementary operations over them. It is motivated by the need of trustworthy and effective soft and hard implementations of contemporary cryptographic algorithms and secure computer systems of logical control. A LYaPAS-T compiler generating a load module for operating system Linux, and the project of a processor implementing LYaPAS-T in hardware are presented too...|$|R
50|$|The {{specification}} for Power ISA v.2.07 {{was released}} in May 2013. It is based on Power ISA v.2.06 and includes major enhancements to logical partition functionality, transactional memory, expanded performance monitoring, new storage control features, additions to the VMX and VSX vector facilities (VSX-2), along with AES and Galois Counter Mode (GCM), SHA-224, SHA-256, SHA-384 and SHA-512 (SHA-2) <b>cryptographic</b> <b>extensions</b> and cyclic redundancy check (CRC) algorithms. The spec was revised in April 2015 to the Power ISA v.2.07 B spec.|$|R
40|$|While {{machine-assisted}} {{verification of}} classical security goals such as confidentiality and authentication is well-established, {{it is less}} mature for recent ones. Electronic voting protocols claim properties such as voter privacy. The most common modelling involves indistinguishability, and is specified via trace equivalence in <b>cryptographic</b> <b>extensions</b> of process calculi. However, it has shown restrictions. We describe a novel model, based on unlinkability between two pieces of information. Specifying it as an extension to the Inductive Method allows us to establish voter privacy {{without the need for}} approximation or session bounding. The two models and their latest specifications are contrasted...|$|R
40|$|A {{number of}} {{features}} which make Java an attractive language for application development include object-orientation, support for networking, multi-threading and in-built support for security. Here we explore the <b>Java</b> <b>cryptographic</b> classes which make It possible to generate keys and both, create and verify digests and signatures. In addition, shared key and {{public key encryption}} are supported, This enables one to implement pure-Java solutions for payment protocols such as SET[1] (Secure Electronic Transaction), Millicent([2]), e-checks([3]) and NetBill([4]). Alternatively, E-commerce Implementations based on SSL (Secure Socket Layer) are facilitated by the SSL API's. We present snippets of code for tasks such as key generation, digest/signature creation and encryption, Since these tasks are also the building blocks for a secure E-commerce payment system, we also include performance numbers that could help Implementors project the load on potential bottlenecks such as payment gateways...|$|R
50|$|LPS {{comes with}} Encryption Wizard (EW), a simple, strong file and folder {{encryptor}} for protection of sensitive but unclassified information (FOUO, Privacy Act, CUI, etc.). Written in Java, EW encrypts all file types for {{data at rest}} and data in transit protection. Without installation or elevated privileges, EW runs on Windows, Mac, Linux, Solaris, and other computers that support the Java software platform. With a simple drag and drop interface, EW offers 128-bit AES encryption, SHA-256 hashing, RSA signatures, searchable metadata, archives, compression, secure deleting, and PKI/CAC/PIV support. Encryption can be keyed from a passphrase or a PKI certificate. EW is GOTS—U.S. Government invented, owned, and supported software—and comes in two versions, a public version that uses the standard <b>Java</b> <b>cryptographic</b> library and a government-only version that uses a FIPS-140-2 certified crypto stack licensed from RSA Security. The two versions interoperate.|$|R
40|$|The {{implementation}} of security protocols is challenging and error-prone, as experience has proved that even widely used and heavily tested protocols like TLS and SSH {{need to be}} patched every year due to low-level implementation bugs. A model-driven development approach allows automatic generation of an application, from a simpler and abstract model that can be formally verified. In this work we present the AnBx compiler, a tool for automatic generation of Java code of security protocols specified in the popular Alice & Bob notation, suitable for agile prototyping. In contrast with the existing tools, the AnBx compiler uses a simpler specification language and computes the consistency checks that agents has to perform on reception of messages. This is an important feature for robust implementations. Moreover, the tool applies various optimization strategies to achieve efficiency both at compile time and at run time. A support library interfaces the <b>Java</b> <b>Cryptographic</b> Architecture allowing for easy customization of the application...|$|R
40|$|Abstract—The {{lack of data}} {{authentication}} and integrity guarantees in the Domain Name System (DNS) facilitates {{a wide variety of}} malicious activity on the Internet today. DNSSec, a set of <b>cryptographic</b> <b>extensions</b> to DNS, has been proposed to address these threats. While DNSSec does provide certain security guarantees, here we argue that it does not provide what users really need, namely end-to-end authentication and integrity. Even worse, DNSSec makes DNS much less efficient and harder to administer, thus significantly compromising DNS’s availability— arguably its most important characteristic. In this paper we explain the structure of DNS, examine the threats against it, present the details of DNSSec, and analyze the benefits of DNSSec relative to its costs. This cost-benefit analysis clearly shows that DNSSec deployment is a futile effort, one that provides little longterm benefit yet has distinct, perhaps very significant costs. T I...|$|R
40|$|International audienceThe {{increasing}} official use {{of security}} protocols for electronic voting deepens {{the need for}} their trustworthiness, hence for their formal verification. The impossibility of linking a voter to her vote, often called voter privacy or ballot secrecy, is the core property of many such protocols. Most existing work relies on equivalence statements in <b>cryptographic</b> <b>extensions</b> of process calculi. This paper provides the first theorem-proving based verification of voter privacy and overcomes some of the limitations inherent to process calculi-based analysis. Unlinkability between two pieces of information is specified as an extension to the Inductive Method for security protocol verification in Isabelle/HOL. New message operators for association extraction and synthesis are defined. Proving voter privacy demanded substantial effort and provided novel insights into both electronic voting protocols themselves and the analysed security goals. The central proof elements are described and shown to be reusable for different protocols with minimal interaction...|$|R
40|$|Modern {{security}} devices are facing many constraints. Besides being efficient {{in terms of}} speed and area, they have to achieve high security level and resist against attacks aimed at recovering the secret key. Many common {{security devices}} {{are based on a}} general-purpose processor (e. g. ARM, PowerPC, NIOS II) realizing communication protocols and a hardware coprocessor dedicated for acceleration of cryptographic algorithms. In this commonly adopted solution, the general-purpose processor operates with secret keys in clear. This way, an intentional or unintentional modification of firmware can lead to secret keys disclosure. In this work, processor <b>cryptographic</b> <b>extension</b> is presented. The platform is based on a NIOS II processor with additional hardware blocks and extended custom instruction set. The aim of this NIOSII extension is to enable highly secure key management. High security level reaches beyond customer electronics, therefore the proposed principle can be employed in automotive or military class devices...|$|R
40|$|Abstract. The {{increasing}} official use {{of security}} protocols for electronic voting deepens {{the need for}} their trustworthiness, hence for their formal verification. The impossibility of linking a voter to her vote, often called voter privacy or ballot secrecy, is the core property of many such protocols. Most existing work relies on equivalence statements in <b>cryptographic</b> <b>extensions</b> of process calculi. This paper provides the first theorem-proving based verification of voter privacy and overcomes some of the limitations inherent to process calculi-based analysis. Unlinkability between two pieces of information is specified as an extension to the Inductive Method for security protocol verification in Isabelle/HOL. New message operators for association extraction and synthesis are defined. Proving voter privacy demanded substantial effort and provided novel insights into both electronic voting protocols themselves and the analysed security goals. The central proof elements are described and shown to be reusable for different protocols with minimal interaction...|$|R
50|$|The XMSS, GMSS and SPHINCS schemes are {{available}} in the <b>Java</b> Bouncy Castle <b>cryptographic</b> APIs. SPHINCS is implemented in the SUPERCOP benchmarking toolkit. Optimised and unoptimised reference implementations of the XMSS Internet-Draft exist. The LMS scheme has been implemented in Python and in C following its Internet-Draft.|$|R
40|$|Abstract. The current draft {{standard}} of 802. 11 s has defined routing for Wireless Mesh Networks (WMNs) in layer- 2 and {{to differentiate from}} layer- 3 routing, it termed layer- 2 routing as path selection. The layer- 2 path selection (LPS) mechanism is fully specified in the draft of IEEE 802. 11 s for WMNs. However, routing with security provision is not specified in the standard. Our study identifies that the current path selection mechanism is vulnerable to various types of routing attacks like flooding, route re-direction, spoofing etc. In this paper, we develop a novel Secure Layer- 2 Path Selection (SLPS) mechanism that uses <b>cryptographic</b> <b>extensions</b> to provide authenticity and integrity of routing messages. Particularly, the proposed SLPS prevents unauthorized manipulation of mutable fields in the routing messages. Results from analysis and simulation demonstrate that SLPS protocol is robust against identified attacks and provides higher packet delivery ratio, requires no extra communication cost and incurs little path acquisition delay, computational and storage overhead to accomplish secure path selection...|$|R
40|$|Abstract. In recent years, mesh {{networking}} {{has emerged as}} a key technology for the last mile Internet access and found to be an important area of research and deployment. The current draft standard of IEEE 802. 11 s has defined rout-ing for Wireless Mesh Networks (WMNs) in layer- 2 and is termed as Hybrid Wireless Mesh Protocol (HWMP). However, security in routing or forwarding functionality is not specified in the standard. As a consequence, HWMP in its current from is vulnerable to various types of routing attacks such as flooding, route disruption and diversion, spoofing etc. In this paper, we propose SHWMP, a secure HWMP protocol for WMN. The proposed protocol uses <b>cryptographic</b> <b>extensions</b> to provide authenticity and integrity of HWMP rout-ing messages and prevents unauthorized manipulation of mutable fields in the routing information elements. We show via analysis that the proposed SHWMP successfully thwarts all the identified attacks. Through extensive ns- 2 simula-tions, we show that SHWMP provides higher packet delivery ratio with little increase in end-to-end delay, path acquisition delay and control byte overhead...|$|R
30|$|PA-SHWMP is an {{improvement}} of SHWMP introduced by Islam et al. [4]. SHWMP uses <b>cryptographic</b> <b>extensions</b> to provide authenticity and integrity to HWMP routing messages and prevents unauthorized manipulation of mutable {{fields in the}} routing information elements. However, SHWMP is vulnerable to the attacks launched by the internal legitimate mesh routers. First, it assumes that all internal mesh routers cooperate with each other without interrupting the operation of protocol. Second, SHWMP uses a hop-by-hop authentication mechanism to provide security of the routing messages. Each mesh router decrypts received packets and re-encrypts them using its own key. In this scheme, the user privacy information is partly protected from eavesdroppers but known by mesh routers because of routing in the mesh backbone. Thus, an active attacker can compromise and control mesh routers to get the user privacy information. Different from SHWMP, PA-SHWMP relies on a hybrid usage of reputation mechanism built by subject logic and user privacy information classification mechanism according to MLS. By providing scalable security services to assure the authenticity, integrity, and secrecy of routing messages, PA-SHWMP can defend against the internal attacks caused by compromised mesh routers and achieve stronger {{security and privacy protection}} while maintaining reasonable balance between security and performance.|$|R
50|$|CuBox is a {{low-power}} ARM architecture CPU based computer, {{using the}} Marvell Armada 510 (88AP510) SoC with an ARM v6/v7-compliant superscalar processor core, Vivante GC600 OpenGL 3.0 and OpenGL ES 2.0 capable 2D/3D graphics processing unit, Marvell vMeta HD Video Decoder hardware engine, and TrustZone security <b>extensions,</b> <b>Cryptographic</b> Engines and Security Accelerator (CESA) co-processor.|$|R
40|$|When used in {{cryptographic}} applications, generalpurpose processors {{are often}} completed by a cryptographic accelerator - crypto-coprocessor. Secret keys are usually {{stored in the}} internal registers of the processor, and are vulnerable to attacks on protocols, software/firmware or cache memory. The paper presents three ways of extending soft general purpose processors for cryptographic applications. The proposed extension is aimed at symmetric key cryptography and it guarantees secure key management. Three security zones are created and physically separated in each of three configurations: processor, cipher and key storage zones. In the three zones, the secret keys are manipulated in a different manner - in clear or enciphered, as common data or keys. The security zones are separated on the protocol, system, architectural and physical levels. The proposed principle is validated on Altera NIOS II, Xilinx MicroBlaze and Actel Cortex M 1 soft core processor extensions. The NIOS II processor needs fewer clock cycles per data block encryption, because the security module {{is included in the}} processor's data path. The data path of the MicroBlaze is unchanged and thus shorter, but additional clock cycles are necessary for data transfers between the processor and the security module. The Cortex M 1 processor is connected via AHB bus and the <b>cryptographic</b> <b>extension</b> is accessed as an ordinary peripheral - a coprocessor. Although the interfacing is different, the three processors with their extensions attain the required high security level...|$|R
40|$|Abstract A timing attack {{exploits}} {{the variance}} in the running time of a crypto-algorithm’s implementation in order to infer confidential in-formation. Such a dependence between confidential information and the running time, called a timing channel, is often caused by branching of the control flow in the implementation’s source code with branching con-ditions depending on the attacked secrets. We present the Side Channel Finder, a static analysis tool for detection of such timing channels in <b>Java</b> implementations of <b>cryptographic</b> algorithms. ...|$|R
40|$|This paper {{presents}} an open protocol for interoperability across multi-vendor programmable smart cards. It allows exposition of on-card storage and cryptographic services to host applications in a unified, card-independent way. Its design, {{inspired by the}} standardization of on-card <b>Java</b> language and <b>cryptographic</b> API, has been kept as generic and modular as possible. The protocol security model has been designed {{with the aim of}} allowing multiple applications to use the services exposed by a same card, with either a cooperative or a no-interference approach, depending on application requirements...|$|R
40|$|International audienceWhen used in {{cryptographic}} applications, general-purpose proces- sors {{are often}} extended by a cryptographic accelerator - a crypto- coprocessor. Secret keys are usually {{stored in the}} internal registers of the processor, and the cryptographic system is therefore vulnerable to attacks on protocols, or software attacks. We present three ways of extending soft core general purpose proces- sors for cryptographic applications. The proposed extension is aimed at symmetric key cryptography and it guarantees secure key manage- ment. We propose to create three physically isolated security zones: processor, cipher and key storage zone. In the three zones, the secret keys are manipulated in a di erent manner - in clear or enciphered, as common data or keys. The security zones are separated on the protocol, system, architectural and physical levels. The proposed principle is validated on Altera NIOS II, Xilinx MicroB- laze and Actel Cortex M 1 soft core processor extensions. We show that the NIOS II processor needs fewer clock cycles per data block encryption, because the security module {{is included in the}} processor's data path. The MicroBlaze processor communicates with the copro- cessor via standard data registers using dedicated instructions and the high-performance Fast Simplex Link. The data path of the MicroB- laze is unchanged, however additional clock cycles are necessary for data transfers between the processor data registers and the security module. The Cortex M 1 processor is connected via the AHB bus and the <b>cryptographic</b> <b>extension</b> is accessed as an ordinary peripheral - a coprocessor. Although the interfacing and the speed is di erent, the three processors with their extensions attain the required high security level by the physical isolation...|$|R
40|$|We {{introduce}} a static analysis framework for detecting instances of security breaches in infinite mobile and cryptographic systems specified using {{the languages of}} the 7 r-calculus and its <b>cryptographic</b> <b>extension,</b> the spi calculus. The framework is composed from three components: First, standard denotational semantics of the 7 r-calculus and the spi calculus are constructed based on domain theory. The resulting model is sound and adequate with respect to transitions in the operational semantics. The standard semantics is then extended correctly to non-uniformly capture the property of term substitution, which {{occurs as a result}} of communications and successful cryptographic operations. Finally, the non-standard semantics is abstracted to operate over finite domains so as to ensure the termination of the static analysis. The safety of the abstract semantics is proven with respect to the nonstandard semantics. The results of the abstract interpretation are then used to capture breaches of the secrecy and authenticity properties in the analysed systems. Two initial prototype implementations of the security analysis for the 7 r-calculus and the spi calculus are also included in the thesis. The main contributions of this thesis are summarised by the following. In the area of denotational semantics, the thesis introduces a domain-theoretic model for the spi calculus that is sound and adequate with respect to transitions in the structural operational semantics. In the area of static program analysis, the thesis utilises the denotational approach {{as the basis for the}} construction of abstract interpretations for infinite systems modelled by the 7 r-calculus and the spi calculus. This facilitates the use of computationally significant mathematical concepts like least fixed points and results in an analysis that is fully compositional. Also, the thesis demonstrates that the choice of the term-substitution property in mobile and cryptographic programs is rich enough to capture breaches of security properties, like process secrecy and authenticity. These properties are used to analyse a number of mobile and cryptographic protocols, like the file transfer protocol and the Needham-Schroeder, SPLICE/AS, Otway-Rees, Kerberos, Yahalom and Woo Lam authentication protocols...|$|R
50|$|Cotton Candy is a {{low-power}} ARM architecture CPU based computer {{which uses}} dual-core processors {{such as the}} dual-core 1.2 GHz Exynos 4210 (45 nm ARM Cortex-A9 with 1MB L2 cache) SoC (System on a chip) by Samsung, featuring a quad-core 200 MHz ARM Mali-400 MP GPU OpenGL ES 2.0 capable 2D/3D graphics processing unit, an Audio and Video Decoder hardware engine, and TrustZone (Security <b>Extensions)</b> <b>Cryptographic</b> Engine and Security Accelerator (CESA) co-processor. The platform {{is said to be}} able to stream and decode H.264 1080p content, and be able to use desktop class interfaces such as KDE or GNOME under Linux.|$|R
40|$|Abstract. Small degree {{extensions}} of finite fields {{are commonly used}} for <b>cryptographic</b> purposes. For <b>extension</b> fields of degree 2 and 3, the Karatsuba and Toom Cook formulæ perform a multiplication in the ex-tension field using 3 and 5 multiplications in the base field, respectively. For degree 5 extensions, Montgomery has given a method to multiply two elements in the extension field with 13 base field multiplications. We propose a faster algorithm, which requires only 9 base field multi-plications. Our method, based on Newton's interpolation, uses {{a larger number of}} additions than Montgomery's one but our implementation of the two methods shows that for cryptographic sizes, our algorithm is much faster...|$|R
40|$|Confidentiality of data {{is a very}} {{important}} thing maintained properly. From the data obtained can be useful information. Not all parties are entitled to know the information confidential. To overcome the problem of data security in safeguarding the security technique is developed with a technique known as <b>cryptographic</b> XTEA (TEA <b>Extension)</b> which is an improvement over the TEA algorithm. Cryptographic algorithm XTEA one of the fastest and efficient that ever existed. Easy and simple, it is still safe to consume and are very quick process. Results from this study is a program that is able to encrypt and decrypt files and strings to display the per-step process of TEA and XTEA algorithm and displays the execution time encryption and decryption of a file to determine the speed of the algorithm...|$|R
40|$|Resistance against side-channel {{analysis}} (SCA) attacks is {{an important}} requirement for many secure embedded systems. Microprocessors and microcontrollers which include suitable countermeasures can be a vital building block for such systems. In this paper, we present a detailed concept for building embedded processors with SCA countermeasures. Our concept is based on ideas for the secure implementation of <b>cryptographic</b> instruction set <b>extensions.</b> On the one hand, it draws from known SCA countermeasures like DPA-resistant logic styles. On the other hand, our protection scheme is geared towards use in modern embedded applications like PDAs and smart phones. It supports multitasking and a separation of secure system software and (potentially insecure) user applications. Furthermore, our concept affords support {{for a wide range}} of cryptographic algorithms. Based on this concept, embedded processor cores with support for a selected set of cryptographic algorithms can be built using a fully automated design flow. Categories and Subject Descriptor...|$|R
40|$|AbstractUsing contextual {{equivalence}} (a. k. a. observational equivalence) {{to specify}} security properties {{is an important}} idea {{in the field of}} formal verification of cryptographic protocols. While contextual equivalence is difficult to prove directly, one is usually able to deduce it using the so-called logical relations in typed λ-calculi. We apply this technique to the <b>cryptographic</b> metalanguage—an <b>extension</b> of Moggi’s computational λ-calculus, where we use Stark’s model for name creation to explore the difficult aspect of dynamic key generation. The categorical construction of logical relations for monadic types (by Goubault-Larrecq et al.) then allows us to derive logical relations over the category SetI. Although SetI is a perfectly adequate model of dynamic key generation, it lacks in some aspects when we study relations between programs in the metalanguage. This leads us to an interesting exploration of what should be the proper category to consider. We show that, to define logical relations in the cryptographic metalanguage, a better choice of category is SetI→ that we proposed in [Y. Zhang, D. Nowak, Logical relations for dynamic name creation, in: Proceedings of the 17 th International Workshop of Computer Science Logic and the 8 th Kurt Gödel Colloqium, CSL & KGL, in: Lecture Notes in Computer Science, vol. 2803, Springer-Verlag, 2003, pp. 575 – 588]. However, this category is still lacking in some subtler aspects and we propose a refined category SetPI→ to fix the flaws, but our final choice is SetI×I, which is equivalent to SetPI→. We define the contextual equivalence based on SetI×I and show that the cryptographic logical relation derived over SetI×I is sound and can be used to verify protocols in practice...|$|R

