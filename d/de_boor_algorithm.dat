29|153|Public
25|$|Faster {{variants}} of the <b>de</b> <b>Boor</b> <b>algorithm</b> {{have been proposed}} but they suffer from comparatively lower stability.|$|E
50|$|For a {{representation}} that defines a spline as a linear combination of basis splines, however, something more sophisticated is needed. The <b>de</b> <b>Boor</b> <b>algorithm</b> is an efficient method for evaluating B-splines.|$|E
50|$|In the {{mathematical}} subfield of numerical analysis de Boor's algorithm is a fast and numerically stable algorithm for evaluating spline curves in B-spline form. It is a generalization of de Casteljau's algorithm for Bézier curves. The algorithm was devised by Carl R. de Boor. Simplified, potentially faster variants of the <b>de</b> <b>Boor</b> <b>algorithm</b> {{have been created}} but they suffer from comparatively lower stability.|$|E
5000|$|With these definitions, {{we can now}} {{describe}} <b>de</b> <b>Boor's</b> <b>algorithm.</b> The algorithm {{does not}} compute the B-spline functions [...] directly. Instead it evaluates [...] through an equivalent recursion formula.|$|R
5000|$|<b>De</b> <b>Boor's</b> <b>algorithm</b> is more {{efficient}} than an explicit calculation of B-splines [...] with the Cox-de Boor recursion formula, {{because it does not}} compute terms which are guaranteed to be multiplied by zero.|$|R
5000|$|A general {{introduction}} to B-splines {{is given in}} the main article. Here we discuss <b>de</b> <b>Boor's</b> <b>algorithm,</b> an efficient and numerically stable scheme to evaluate a spline curve [...] at position [...] The curve is built from a sum of B-spline functions [...] multiplied with potentially vector-valued constants , called control points, ...|$|R
40|$|Abstract—This {{contribution}} {{introduces a}} new digital predistorter to compensate serious distortions caused by memory high power amplifiers (HPAs) which exhibit output saturation characteristics. The proposed design {{is based on}} direct learning using a data-driven B-spline Wiener system modeling approach. The nonlinear HPA with memory is first identifiedbasedonthe B-spline neural network model using the Gauss-Newton algorithm, which incorporates the efficient <b>De</b> <b>Boor</b> <b>algorithm</b> with both B-spline curve and first derivative recursions. The estimated Wiener HPA model is then used to design the Hammerstein predistorter. In particular, the inverse of the amplitude distortion of the HPA’s static nonlinearity can be calculated effectively using the Newton-Raphson formula based on the inverse of <b>De</b> <b>Boor</b> <b>algorithm.</b> A major advantage {{of this approach is}} that both the Wiener HPA identification and the Hammerstein predistorter inverse can be achieved very efficiently and accurately. Simulation results obtained are presented to demonstrate the effectiveness of this novel digital predistorter design. Index Terms—B-spline neural network, <b>De</b> <b>Boor</b> <b>algorithm,</b> Hammerstein model, memory high power amplifier, output saturation...|$|E
40|$|This paper {{presents}} an algorithm for extending B-spline curves and surfaces. Based on the unclamping algorithm for B-spline curves, we propose a new algorithm for extending B-spline curves that extrapolates using the recurrence {{property of the}} <b>de</b> <b>Boor</b> <b>algorithm.</b> This algorithm provides a nice extension, with maximum continuity, to the original curve segment. Moreover, it {{can be applied to}} the extension o...|$|E
40|$|This {{contribution}} {{introduces a}} new digital predistorter to compensate serious distortions caused by memory high power amplifiers (HPAs) which exhibit output saturation characteristics. The proposed design {{is based on}} direct learning using a data-driven B-spline Wiener system modeling approach. The nonlinear HPA with memory is first identified based on the B-spline neural network model using the Gauss-Newton algorithm, which incorporates the efficient <b>De</b> <b>Boor</b> <b>algorithm</b> with both B-spline curve and first derivative recursions. The estimated Wiener HPA model is then used to design the Hammerstein predistorter. In particular, the inverse of the amplitude distortion of the HPA’s static nonlinearity can be calculated effectively using the Newton-Raphson formula based on the inverse of <b>De</b> <b>Boor</b> <b>algorithm.</b> A major advantage {{of this approach is}} that both the Wiener HPA identification and the Hammerstein predistorter inverse can be achieved very efficiently and accurately. Simulation results obtained are presented to demonstrate the effectiveness of this novel digital predistorter design...|$|E
40|$|We {{extend the}} {{concepts}} of de Casteljau and <b>de</b> <b>Boor</b> <b>algorithms</b> as well as splines to geodesic spaces and present some applications in geometric modeling. The concept of weighted geometric mean provides another approach to splines. We compare the corresponding Bezier curves and show that for Riemannian manifolds, their endpoint tangents coincide...|$|R
5000|$|B-splines {{of order}} [...] are {{connected}} piece-wise polynomial functions of degree [...] defined over {{a grid of}} knots [...] (we always use zero-based indices in the following). <b>De</b> <b>Boor's</b> <b>algorithm</b> uses O(p2) + O(p) operations to evaluate the spline curve. Note: the main article about B-splines and the classic publications use a different notation. The B-spline is indexed as [...] with [...]|$|R
2500|$|... ramps {{from one}} to zero as x goes from [...] to [...] The {{corresponding}} Bs are zero outside those respective ranges. For example, [...] is a triangular function that is zero below , ramps to one at [...] and back to zero at and beyond [...] However, because B-spline basis functions have local support, B-splines are typically computed by algorithms that {{do not need to}} evaluate basis functions where they are zero, such as <b>de</b> <b>Boor's</b> <b>algorithm.</b>|$|R
40|$|Abstract. Space {{fractional}} advection dispersion equation includes non-local differential operators, {{which leads}} to calculating numerical integrals with weakly singular kernel on every subintervals. Oscillations are visible in computed solutions when fractional order tends to 1. Studies show that the stiffness matrix of time semi-discretization can be calculated directly by formulas established from a special variational formulation. Oscillations are eliminated by using adaptive moving mesh and <b>De</b> <b>Boor</b> <b>algorithm,</b> {{while the number of}} nodes remains unchanged...|$|E
40|$|Many {{communication}} {{signal processing}} applications manifest {{as the problem}} of modeling and inverse of complex-valued (CV) Wiener systems. This contribution develops a CV B-spline neural network approach for efficient identification of the CV Wiener system as well as effective inverse of the estimated CV Wiener model. Specifically, the CV nonlinear static function in the Wiener system is represented using the tensor product from two univariate B-spline neural networks. Following {{the use of a}} simple least squares parameter initialization, the Gauss-Newton algorithm is applied for estimating the model parameters that include the CV linear dynamic model coefficients and B-spline neural network weights. The identification algorithm naturally incorporates the efficient <b>De</b> <b>Boor</b> <b>algorithm</b> with both the B-spline curve and first-order derivative recursions. Moreover, an accurate inverse of the CV Wiener system can readily be obtained using the estimated model. In particular, the inverse of the CV nonlinear static function in the Wiener system can be calculated effectively using the Gauss-Newton algorithm based on the estimated B-spline neural network model with the aid of the inverse of <b>De</b> <b>Boor</b> <b>algorithm.</b> The effectiveness of our approach is demonstrated using the application of digital predistorter design for high-power amplifiers with memory...|$|E
40|$|A {{simple and}} {{effective}} algorithm is introduced {{for the system}} identiﬁcation of Wiener system based on the observational input/output data. The B-spline neural network is used to approximate the nonlinear static function in the Wiener system. We incorporate the Gauss-Newton algorithm with <b>De</b> <b>Boor</b> <b>algorithm</b> (both curve and the ﬁrst order derivatives) for the parameter estimation of the Wiener model, together {{with the use of}} a parameter initialization scheme. The efﬁcacy of the proposed approach is demonstrated using an illustrative example...|$|E
40|$|This report {{presents}} a generalization of tensor-product B-spline surfaces. The new scheme permits knots whose endpoints {{lie in the}} interior of the domain rectangle of a surface. This allows local refinement of the knot structure for approximation purposes as well as modeling surfaces with local tangent or curvature discontinuities. The surfaces are represented in terms of B-spline basis functions, ensuring affine invariance, local control, the convex hull property, and evaluation by <b>de</b> <b>Boor's</b> <b>algorithm.</b> A dimension formula for a class of generalized tensor-product spline spaces is developed...|$|R
40|$|We {{consider}} {{a space of}} Chebyshev splines whose left and right derivatives satisfy linear constraints that are given by arbitrary non-singular connection matrices. We show that for almost all knot sequences such spline spaces have basis functions whose support {{is equal to the}} support of the ordinary B-splines with the same knots. Consequently, there are knot insertion and evaluation <b>algorithms</b> analogous to <b>de</b> <b>Boor's</b> <b>algorithm</b> for ordinary splines. Keywords Geometric continuity, connection matrices, knot insertion, Chebyshev splines, B-splines, rational splines. AMS classification primary 65 D 07, secondary 65 D 17...|$|R
5000|$|... ramps {{from zero}} to one as x goes from [...] to [...] andramps from one to zero as x goes from [...] to [...] The {{corresponding}} Bs are zero outside those respective ranges. For example, [...] is a triangular function that is zero below , ramps to one at [...] and back to zero at and beyond [...] However, because B-spline basis functions have local support, B-splines are typically computed by algorithms that {{do not need to}} evaluate basis functions where they are zero, such as <b>de</b> <b>Boor's</b> <b>algorithm.</b>|$|R
40|$|In {{this article}} {{a simple and}} {{effective}} algorithm is introduced for the system identification of the Wiener system using observational input/output data. The nonlinear static function in the Wiener system is modelled using a B-spline neural network. The Gauss–Newton algorithm is combined with <b>De</b> <b>Boor</b> <b>algorithm</b> (both curve and the first order derivatives) for the parameter estimation of the Wiener model, together {{with the use of}} a parameter initialisation scheme. Numerical examples are utilised to demonstrate the efficacy of the proposed approach...|$|E
40|$|An initial {{approximation}} circular helix with quadratic NURBS {{curve is}} represented by combining the algorithm for the planar NURBS circular arc and the height function defined by using the knot insertion and the degree elevation fur linear NURBS. For given tolerance, a subdivision scheme based on <b>de</b> <b>Boor</b> <b>algorithm</b> for approximating NURBS helix curve is proposed. The modification subdivision scheme is easy and stabilized for keeping on improvement the approximation value and eliminates the blending algorithm for Bezier segments. Numerical examples are given to illustrate {{the efficiency of the}} method. IEE...|$|E
40|$|In {{this article}} {{a simple and}} {{effective}} controller design is introduced for the Hammerstein systems that are identified based on observational input/output data. The nonlinear static function in the Hammerstein system is modelled using a B-spline neural network. The controller is composed by computing the inverse of the B-spline approximated nonlinear static function, and a linear pole assignment controller. The contribution {{of this article is}} the inverse of <b>De</b> <b>Boor</b> <b>algorithm</b> that computes the inverse efficiently. Mathematical analysis is provided to prove the convergence of the proposed algorithm. Numerical examples are utilised to demonstrate the efficacy of the proposed approach...|$|E
40|$|A new PID tuning and {{controller}} {{approach is}} introduced for Hammerstein systems based on input/output data. A B-spline neural network {{is used to}} model the nonlinear static function in the Hammerstein system. The control signal is composed of a PID controller together with a correction term. In order to update the control signal, the multistep ahead predictions of the Hammerstein system based on the B-spline neural networks and the associated Jacobians matrix are calculated using the <b>De</b> <b>Boor</b> <b>algorithms</b> including both the functional and derivative recursions. A numerical example is utilized to demonstrate {{the efficacy of the}} proposed approaches...|$|R
40|$|In this paper, a new model-based proportional–integral {{derivative}} (PID) tuning and controller {{approach is}} introduced for Hammerstein {{systems that are}} identified {{on the basis of}} the observational input/output data. The nonlinear static function in the Hammerstein system is modelled using a B-spline neural network. The control signal is composed of a PID controller, together with a correction term. Both the parameters in the PID controller and the correction term are optimized on the basis of minimizing the multistep ahead prediction errors. In order to update the control signal, the multistep ahead predictions of the Hammerstein system based on B-spline neural networks and the associated Jacobian matrix are calculated using the <b>de</b> <b>Boor</b> <b>algorithms,</b> including both the functional and derivative recursions. Numerical examples are utilized to demonstrate the efficacy of the proposed approache...|$|R
40|$|We suggest in {{this paper}} to {{associate}} topological structures with simplicial algorithms, as de Casteljau or <b>de</b> <b>Boor</b> <b>algorithms.</b> We can thus handle in a uniform way all topological and embedding informations about free-form spaces. Tensor products of curves (e. g. surface patches), and more generally product of simplicial algorithms are also taken into account. 1 Introduction We study natural links between some combinatorial (topological) structures and free-form spaces (curves, surfaces, etc) dened using control points and recursive evaluation algorithms. During the last years, combinatorial structures have been proposed for explicitly handling the topology of subdivided geometric objects [8]. Here we study relations between semi-simplicial sets [9] and triangular spaces, cubic sets [10] and spaces which are dened as tensor products of curves. We dene the notion of simploidal set, which generalizes these structures for handling spaces dened as cartesian products of triangular space [...] ...|$|R
40|$|In {{this paper}} we {{introduce}} a new Wiener system modeling approach for memory high power amplifiers in communication systems using observational input/output data. By assuming that the nonlinearity in the Wiener model is mainly dependent on the input signal amplitude, the complex valued nonlinear static function is represented by two real valued B-spline curves, one for the amplitude distortion and another for the phase shift, respectively. The Gauss-Newton algorithm is applied for the parameter estimation, which incorporates the <b>De</b> <b>Boor</b> <b>algorithm,</b> including both the B-spline curve and the first order derivatives recursion. An illustrative example is utilized to demonstrate {{the efficacy of the}} proposed approach...|$|E
40|$|In this brief, a new {{complex-valued}} B-spline {{neural network}} is introduced {{in order to}} model the complex-valued Wiener system using observational input/output data. The complex-valued nonlinear static function in the Wiener system is represented using the tensor product from two univariate Bspline neural networks, using the real and imaginary parts of the system input. Following {{the use of a}} simple least squares parameter initialization scheme, the Gauss–Newton algorithm is applied for the parameter estimation, which incorporates the <b>De</b> <b>Boor</b> <b>algorithm,</b> including both the B-spline curve and the first-order derivatives recursion. Numerical examples, including a nonlinear high-power amplifier model in communication systems, are used to demonstrate the efficacy of the proposed approaches...|$|E
40|$|From {{the issue}} {{entitled}} "Computational Mathematics. Special Issue Dedicated to Mariano Gasca's 60 th Birthday"International audienceIn {{order to ensure}} existence of a <b>de</b> <b>Boor</b> <b>algorithm</b> (hence of a B-spline basis) in a given spline space with (n+ 1) -dimensional sections, {{it is important to}} be able to generate each spline by restriction to the diagonal of a symmetric function of n variables supposed to be pseudoaffine w. r. to each variable. We proved that a way to obtain these three properties (symmetry, n-pseudoaffinity, diagonal property) is to suppose the existence of blossoms on the set of admissible n-tuples, given that blossoms are defined in a geometric way by means of intersections of osculating flats. In the present paper, we examine the converse: do symmetry, n-pseudoaffinity, and diagonal property imply existence of blossoms...|$|E
40|$|This report {{presents}} a generalization of tensor-product B-spline surfaces. The new scheme permits knots whose endpoints {{lie in the}} interior of the domain rectangle of a surface. This allows local refinement of the knot structure for approximation purposes as well as modeling surfaces with local tangent or curvature discontinuities. The surfaces are represented in terms of B-spline basis functions, ensuring affine invariance, local control, the convex hull property, and evaluation by <b>de</b> <b>Boor's</b> <b>algorithm.</b> A dimension formula for a class of generalized tensor-product spline spaces is developed. Contents 1. Introduction 2 2. Spline Spaces 3 3. Collections of Tensor-Product B-Splines 8 4. A Dimension Formula 17 5. Conclusion 31 Acknowledgments 31 References 32 1. Introduction Tensor-product B-spline surfaces are a powerful tool in design and approximation of free-form surfaces. Their flexibility arises from non-uniform knot spacing, which allows an adaptation of the knot lines to a pa [...] ...|$|R
40|$|We {{demonstrate}} that non-separable box splines deployed on {{body centered cubic}} lattices (BCC) are suitable for fast evaluation on present graphics hardware. Therefore, we develop the linear and quintic box splines using a piecewise polynomial (pp) -form as opposed to their currently known basis (B) -form. The pp-form lends itself to efficient evaluation methods such as <b>de</b> <b>Boor's</b> <b>algorithm</b> for splines in box splines basis. Further on, we offer a comparison of quintic box splines with the only other interactive rendering available on BCC lattices {{that is based on}} separable kernels for interleaved Cartesian cubic (CC) lattices. While quintic box splines result in superior quality, interleaved CC lattices are still faster, since they {{can take advantage of the}} highly optimized circuitry for CC lattices, as it is the case in graphics hardware nowadays. This result is valid with and without prefiltering. Experimental results are shown for both a synthetic phantom and data from optical projection tomography. We provide shader code to ease the adaptation of box splines for the practitioner...|$|R
40|$|The {{geometrical}} modelling of the planar energy diffusion {{behaviors of}} the deformations on a para-aramid fabric has been performed. In the application process of the study, in the experimental period, drop test with bullets of different weights has been applied. The B-spline curve-generating technique {{has been used in}} the study. This is an efficient method for geometrical modelling of the deformation diffusion areas formed after the drop test. Proper control points have been chosen to be able to draw the borders of the diffusion areas on the fabric which is deformed, and then the De Casteljau and <b>De</b> <b>Boor</b> <b>algorithms</b> have been used. The Holditch area calculation according to the beams taken at certain fixed lengths has been performed for the B-spline border curve obtained as a closed form. After the calculations, it has been determined that the diffusion area where the bullet with pointed end was dropped on a para-aramid fabric is bigger and the diffusion area where the bullet with rounded end was dropped is smaller when compared with the areas where other bullets with different ends were dropped...|$|R
40|$|In this master’s thesis {{we focus}} on the basic {{properties}} of computer curves and their practical applicability. We explain how the curve can be understood in general, what are polynomial curves and their composing possibilities. Then {{we focus on}} the description of Bezier curves, especially the Bezier cubic. We discuss in more detail some of fundamental algorithms that are used for modelling these curves on computers and then we will show their practical interpretation. Then we explain non uniform rational B-spline curves and <b>De</b> <b>Boor</b> <b>algorithm.</b> In the end we discuss topic rasterization of segment, thick line, circle and ellipse. The aim of master’s thesis is the creation of the set of interactive applets, simulating some of the methods and algorithm we discussed in theoretical part. This applets will help facilitate understanding and will make the teaching more effective...|$|E
40|$|AbstractThis paper {{outlines}} emerging methods, presently under investigation, {{for constructing}} ruled surfaces and solid-body trajectories in a Computer Aided Geometric Design (CAGD) context. The underlying principle {{is that of}} the standard <b>De</b> <b>Boor</b> <b>Algorithm</b> [4, 2, 15] for constructing B-spline curves on the plane, or in 3 -dimensional space. But the coordinates of all 3 -vector points including the control points to be interpolated are now taken to be dual, not real, numbers. When the six resulting number components are interpreted as Pl ű cker coordinates [12], each dual point finds interpretation as a line, and each curve as a ruled surface, in 3 -dimensional space. The construction of a duplicated surface is discussed along with some new methods based on a rigid body character. The problem of drawing infinitely long lines, on a screen, as represented by Pl űcker coordinates, is touched upon...|$|E
40|$|The {{non-uniform}} rational B-splines (NURBS) {{has been}} widely accepted as a standard tool for geometry representation and design. Its rich geometric properties allow it to represent both analytic shapes and free-form curves and surfaces precisely. Moreover, a set of tools is available for shape modification or more implicitly, object deformation. Existing NURBS rendering methods include <b>de</b> <b>Boor</b> <b>algorithm,</b> Oslo algorithm, Shantz's adaptive forward differencing algorithm and Silbermann's high speed implementation of NURBS. However, these methods consider only speeding up the rendering process of individual frames. Recently, Kumar et al. proposed an incremental method for rendering NURBS surfaces, {{but it is still}} limited to static surfaces. In realtime applications such as virtual reality, interactive display is needed. If a virtual environment contains a lot of deforming objects, these methods cannot provide a good solution. In this paper, we propose an efficient method for intera [...] ...|$|E
40|$|The {{computational}} {{complexity of}} general change of basis algorithms from one bivariate polynomial basis of degree n to another bivariate polynomial basis of degree n using matrix multiplication is O(n 4). Applying blossoming and duality, we derive change of basis algorithms with computational complexity O(n 3) between two important classes of polynomial bases used for representing surfaces in CAGD: Bbases and L-bases. Change of basis algorithms for B-bases follow from their blossoming property; change of basis algorithms for L-bases follow from the duality between L-bases and B-bases. The B'ezier and multinomial bases are special cases of both B-bases and L-bases, so these algorithms {{can be used}} to convert between the B'ezier and multinomial forms. We also show that the bivariate Horner evaluation algorithm for the multinomial basis is dual to the bivariate <b>de</b> <b>Boor</b> evaluation <b>algorithm</b> for B-patches. Keywords: algorithms, blossoming, CAGD, change of basis, <b>de</b> <b>Boor</b> evaluation, <b>de</b> [...] ...|$|R
40|$|Some recent {{methods of}} Computer Aided Geometric Design {{are related to}} the apolar {{bilinear}} form, an inner product on the space of homogeneous multivariate polynomials of a fixed degree, already known in 19 th century invariant theory. Using a generalized version of this inner product, we derive in a straightforward way some of the recent results in CAGD, like Marsden's identity, the expression for the De Boor-Fix functionals, and recursion schemes for the computation of B-patches and their derivatives. Keywords: Apolar bilinear form, polarization, homogeneous polynomials, lineal polynomials, dual basis, Euler's identity, Marsden's identity, Bernstein-B'ezier patches, B-patches, <b>De</b> Casteljau, <b>De</b> <b>Boor,</b> recurrence relations, <b>algorithm,</b> basis conversion. 1991 Mathematics Subject Classification. Primary 41 A 15, 65 D 17; Secondary 65 D 07, 41 A 63. 1 Introduction A common problem in Computer Aided Geometric Design (CAGD) and Approximation Theory is the construction of suitable bases for the space o [...] ...|$|R
40|$|International audienceThis works {{complements}} {{a recent}} article (Mazure, J. Comp. Appl. Math. 219 (2) : 457 - 470, 2008) in which we showed that T. Lyche's recurrence relations for Chebyshevian B-splines (Lyche, Constr. Approx. 1 : 155 - 178, 1985) naturally emerged from blossoms and their properties via <b>de</b> <b>Boor</b> type <b>algorithms.</b> Based on Chebyshevian divided differences, T. Lyche's approach concerned splines with all sections in the same Chebyshev space and with ordinary connections at the knots. Here, we consider geometrically continuous piecewise Chebyshevian splines, namely, splines with sections in different Chebyshev spaces, and with geometric connections at the knots. In this general framework, we proved in (Mazure, Constr. Approx. 20 : 603 - 624, 2004) that existence of B-spline bases could {{not be separated from}} existence of blossoms. Actually, the present paper enhances the powerfulness of blossoms in which not only B-splines are inherent, but also their recurrence relations. We compare this fact with the work by G. Mühlbach and Y. Tang (Mühlbach and Tang, Num. Alg. 41 : 35 - 78, 2006) who obtained the same recurrence relations via generalised Chebyshevian divided differences, but only under some total positivity assumption on the connexion matrices. We illustrate this comparison with splines with four-dimensional sections. The general situation addressed here also enhances the differences of behaviour between B-splines and the functions of smaller and smaller supports involved in the recurrence relations...|$|R
