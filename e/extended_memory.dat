206|310|Public
5|$|A revised edition, the Nord Stage 2 {{appeared}} in September 2011, containing an improved synthesizer model and sampler functionality, {{as seen in}} the Nord Wave. The three models of the Stage 2 are the HA-88, containing 88 fully weighted keys, the HA-76, containing 76 weighted keys, and the SW-73, containing 73 semi-weighted keys. An updated model, the Stage 2 EX, with <b>extended</b> <b>memory</b> capacity, was announced in 2015.|$|E
25|$|Also {{included}} in Pervasive PSQL v10 was Xtreme I/O (XIO), a 32-bit Windows database accelerator that enabled access of <b>extended</b> <b>memory</b> {{to expand the}} database cached past the normal 2GB limit on 32-bit Windows systems. XIO also included update compression algorithms and streamlined writing techniques to improve database I/O performance.|$|E
25|$|Calculators {{also have}} the ability to store numbers into {{computer}} memory. Basic calculators usually store only one number at a time; more specific types are able to store many numbers represented in variables. The variables can also be used for constructing formulas. Some models {{have the ability to}} extend memory capacity to store more numbers; the <b>extended</b> <b>memory</b> address is termed an array index.|$|E
50|$|ExtraK add-on, <b>extending</b> <b>memory</b> {{capabilities}} for spreadsheet {{larger than}} 4MB.|$|R
50|$|Using {{the color}} video buffer space, some {{third-party}} utilities could add memory {{at the top}} of the 640k conventional <b>memory</b> area, to <b>extend</b> <b>memory</b> up to the base address used by hardware adapters. This could ultimately backfill RAM up to the MDA base address.|$|R
50|$|<b>Extend</b> <b>memory</b> with an {{additional}} bit, writable only in supervisor mode, that indicates that a particular location is a capability. This is a generalization {{of the use of}} tag bits to protect segment descriptors in the Burroughs large systems, and it was used to protect capabilities in the IBM System/38.|$|R
25|$|The barrier {{was only}} {{overcome}} {{with the arrival}} of DOS extenders, which allowed DOS applications to run in <b>extended</b> <b>memory,</b> but these were not very widely used outside the computer game area. As games began to use digital sound and digital image textures, they performed better if these large data components could be preloaded into megabytes of memory before playing the game rather than constantly loading the data from external storage.|$|E
25|$|The first PC {{operating}} systems to integrate such technology were Compaq DOS 3.31 (via CEMM) and Windows/386 2.1, both released in 1988. Since the 80286 version of Windows 2.0 (Windows/286), Windows applications {{did not suffer}} from the 640 KB barrier. Prior to DOS extenders, if a user installed additional memory and wished to use it under DOS, they would first have to install and configure drivers to support either expanded memory specification (EMS) or <b>extended</b> <b>memory</b> specification (XMS).|$|E
25|$|The Intel 80286 had a 24-bit {{address bus}} {{and was able}} to address up to 16MB of RAM, {{compared}} to the 1MB addressability of its predecessor. However, memory cost and the initial rarity of software using the memory above 1MB meant that 80286 computers were rarely shipped with more than one megabyte of RAM. Additionally, there was a performance penalty involved in accessing <b>extended</b> <b>memory</b> from real mode (in which DOS, the dominant PC operating system until the mid-1990s, ran), as noted below.|$|E
5000|$|... q = <b>Extend</b> program <b>memory</b> address with RAMPZ (0=0:Z, 1=RAMPZ:Z) ...|$|R
40|$|The Web-based {{information}} systems, as {{the network}} traffic and slow remote servers {{can lead to}} long delays in the answer delivery. Client memory is largely used to cache data and minimize future interaction with the servers. In this paper, we propose an <b>extended</b> cache <b>memory</b> to store the frequently used data. We observe that the frequently used data contain the images in a Web site. In this paper we propose that all the data which is frequently used must be stored at user end in an <b>extended</b> cache <b>memory.</b> The <b>extended</b> cache <b>memory</b> {{may be in the}} form of pen drive, CD, DVD or it could be saved at user’s machine. The only difference to access the Web between traditional and in our way is that the user have to provide the path of the data which resides at the <b>extended</b> cache <b>memory...</b>|$|R
5000|$|Optional <b>Extended</b> Graphics <b>Memory</b> (EGM) On {{board for}} 128-bit Memory Accessing.|$|R
25|$|The {{protected}} mode of the 80286 was not utilized until {{many years after}} its release, {{in part because of}} the high cost of adding <b>extended</b> <b>memory</b> to a PC, but also because of the need for software to support the large user base of 8086 PCs. For example, in 1986 the only program that made use of it was VDISK, a RAM disk driver included with PC DOS 3.0 and 3.1. A DOS could utilize the additional RAM available in {{protected mode}} (<b>extended</b> <b>memory)</b> either via a BIOS call (INT 15h, AH=87h), as a RAM disk, or as emulation of expanded memory. The difficulty lay in the incompatibility of older real-mode DOS programs with protected mode. They simply could not natively run in this new mode without significant modification. In protected mode, memory management and interrupt handling were done differently than in real mode. In addition, DOS programs typically would directly access data and code segments that did not belong to them, as real mode allowed them to do without restriction; in contrast, the design intent of protected mode was to prevent programs from accessing any segments other than their own unless special access was explicitly allowed. While it was possible to set up a protected-mode environment that allowed all programs access to all segments (by putting all segment descriptors into the GDT and assigning them all the same privilege level), this undermined nearly all of the advantages of protected mode except the extended (24-bit) address space. The choice that OS developers faced was either to start from scratch and create an OS that would not run the vast majority of the old programs, or to come up with a version of DOS that was slow and ugly (i.e., ugly from an internal technical viewpoint) but would still run a majority of the old programs. Protected mode also did not provide a significant enough performance advantage over the 8086-compatible real mode to justify supporting its capabilities; actually, except for task switches when multitasking, it actually yielded only a performance disadvantage, by slowing down many instructions through a litany of added privilege checks. In protected mode, registers were still 16-bit, and the programmer was still forced to use a memory map composed of 64kB segments, just like in real mode.|$|E
2500|$|The client-based {{version of}} Btrieve for Windows could access {{server-based}} versions of Btrieve via a DOS-based [...] "requester". The requestor required {{the use of}} DOS Protected Mode Interface (DPMI) which allowed program access to DOS <b>extended</b> <b>memory</b> accessible only via the CPU's Protected Mode.|$|E
2500|$|Windows 2.1 was {{released}} in two different versions: Windows/286 and Windows/386. Windows/386 uses the virtual 8086 mode of the Intel 80386 to multitask several DOS programs and the paged memory model to emulate expanded memory using available <b>extended</b> <b>memory.</b> Windows/286, {{in spite of its}} name, runs on both Intel 8086 and Intel 80286 processors. It runs in real mode but can make use of the high memory area.|$|E
50|$|The Intel <b>Extended</b> Server <b>Memory</b> Architecture {{is defined}} to include two 36-bit {{addressing}} modes {{in the core}} processor: PAE-36 and PSE-36.|$|R
40|$|Any {{residual}} coupling of {{a quantum}} computer {{to the environment}} results in computational errors. Encoding quantum information in a so-called decoherence-free subspace provides means to avoid these errors. Despite tremendous progress in employing this technique to <b>extend</b> <b>memory</b> storage times by orders of magnitude, computation within such subspaces has been scarce. Here, we demonstrate the realization of a universal set of quantum gates acting on decoherence-free ion qubits. We combine these gates to realize the first controlled-NOT gate within a decoherence-free, scalable quantum computer. Comment: 4 pages, 3 figure...|$|R
50|$|An <b>extended</b> {{range of}} <b>memory</b> / package {{combinations}} have been introduced.|$|R
5000|$|HIMEM.SYS - DOS {{device driver}} which allows DOS {{programs}} to store data in <b>extended</b> <b>memory</b> via the <b>Extended</b> <b>Memory</b> Specification (XMS) ...|$|E
50|$|The <b>eXtended</b> <b>Memory</b> Specification or XMS is the {{specification}} {{describing the}} use of IBM PC <b>extended</b> <b>memory</b> in real mode for storing data (but not for running executable code in it). Memory is made available by <b>extended</b> <b>memory</b> manager (XMM) software such as HIMEM.SYS. The XMM functions are accessible through interrupt 2Fh.|$|E
50|$|<b>Extended</b> <b>memory</b> modules {{added more}} <b>extended</b> <b>memory</b> to the HP-41C. They {{required}} an extended functions module to be present, or theHP-41CX {{version of the}} calculator.|$|E
25|$|Memory: 64MB (64 × 220 bytes) of DDR RAM, and 128MB of {{internal}} flash memory, of which about 64MB {{should be available}} to the user. Option for <b>extended</b> virtual <b>memory</b> (RS-MMC up to 1GB (2GB after flash upgrade)).|$|R
50|$|<b>Memory</b> curtaining <b>extends</b> common <b>memory</b> {{protection}} {{techniques to}} provide full isolation of sensitive areas of memory—for example, locations containing cryptographic keys. Even {{the operating system}} does not have full access to curtained memory. The exact implementation details are vendor specific.|$|R
5000|$|Memory: 64 MB (64 × 220 bytes) of DDR RAM, and 128 MB of {{internal}} flash memory, of which about 64 MB {{should be available}} to the user. Option for <b>extended</b> virtual <b>memory</b> (RS-MMC up to 1 GB (2 GB after flash upgrade)).|$|R
5000|$|The Extended Functions module {{contained}} 124 registers of <b>Extended</b> <b>memory.</b> More {{could be}} added by ... <b>Extended</b> <b>Memory</b> modules.The HP-41CX contained the Extended Functions module as standard.|$|E
50|$|Upper memory blocks can {{be created}} by mapping <b>extended</b> <b>memory</b> into the upper memory area when running in virtual x86 mode. This is similar to how {{expanded}} memory can be emulated using <b>extended</b> <b>memory</b> so this method of providing upper memory blocks is usually provided by the expanded memory manager (for example EMM386). Ironically the application programming interface for managing the upper memory blocks is specified in the <b>eXtended</b> <b>Memory</b> Specification.|$|E
50|$|Using the 24-bit memory {{addressing}} {{capabilities of the}} 286 CPU architecture, a total address space of 16 MB was accessible. Memory above the 1 MB limit was called <b>extended</b> <b>memory.</b> However the area between 640 kB and 1 MB was reserved for hardware addressing in IBM PC compatibles. DOS and other real mode programs, limited to 20-bit addresses, could only access this space through EMS emulation on the <b>extended</b> <b>memory,</b> or an EMS analog for <b>extended</b> <b>memory.</b> Microsoft developed a standard known as the <b>Extended</b> <b>Memory</b> Specification (XMS). Accessing the memory above the HMA required usage of the protected mode of the 286 CPU.|$|E
50|$|As the rulebase is {{compiled}} into hardware, the FWSM has clear {{restrictions on}} {{the maximum number of}} Access Control Entries (ACE). The limitation is only reached with large and inefficient rulebases. The limit cannot be <b>extended</b> by <b>memory</b> upgrade as on PIX and ASA platforms.|$|R
5000|$|PSE-36 an {{alternative}} to PAE on x86 processors to <b>extend</b> the physical <b>memory</b> addressing capabilities from 32 bits to 36 bits ...|$|R
40|$|The This paper {{presents}} {{our work}} to define an <b>Extended</b> Enterprise <b>Memory</b> {{which is an}} explicit representation of knowledge for cooperative activity. This work is relevant from cooperative engineering which is Knowledge Engineering process {{in the context of}} cooperative activities meaning collective activities which are not yet entirely formalized...|$|R
5000|$|Interdata 8/16, 8/16e (double {{precision}} floating point, <b>extended</b> <b>memory)</b> ...|$|E
5000|$|In DOS memory management, <b>extended</b> <b>memory</b> {{refers to}} memory above the first {{megabyte}} (220 bytes) of address space in an IBM PC or compatible with an 80286 or later processor. The term is mainly used under the DOS and Windows operating systems. DOS programs, running in real mode or virtual x86 mode, cannot directly access this memory, but {{are able to}} do so through an application programming interface called the <b>eXtended</b> <b>Memory</b> Specification (XMS). This API is implemented by a driver (such as HIMEM.SYS) or the operating system, which takes care of memory management and copying memory between conventional and <b>extended</b> <b>memory,</b> by temporarily switching the processor into protected mode. In this context the term [...] "extended memory" [...] may refer to either the whole of the <b>extended</b> <b>memory</b> or only the portion available through this API.|$|E
50|$|<b>Extended</b> <b>memory</b> {{should not}} be {{confused}} with expanded memory, an earlier method for expanding the IBM PC's memory capacity beyond 640 kB (655,360 bytes) using an expansion card with bank switched memory modules. Because of the available support for expanded memory in popular applications, device drivers were developed that emulated expanded memory using <b>extended</b> <b>memory.</b> Later two additional methods were developed allowing direct access to a small portion of <b>extended</b> <b>memory</b> from real mode. These memory areas are referred to as the high memory area (HMA) and the upper memory area (UMA; also referred to as upper memory blocks or UMBs).|$|E
5000|$|PSE-36 — an {{alternative}} to PAE on x86 processors to <b>extend</b> the physical <b>memory</b> addressing capabilities from 32 bits to 36 bits ...|$|R
30|$|FlashVM (Saxena and Swift 2010) and SSDAlloc (Badam and Pai 2011) {{propose the}} methods to <b>extend</b> usable <b>memory</b> spaces {{virtually}} larger by utilizing SSDs and making page swapping {{faster than the}} existing mechanism. While these improve the virtual memory system of the OS kernel, main memory and storage remain separated.|$|R
40|$|Original article can {{be found}} at: [URL] Copyright Berghahn Journals [Full text {{of this article is}} not {{available}} in the UHRA]This 'Introduction' argues a case for <b>extending</b> <b>memory</b> studies with the study of commemoration, or of 'historical remembrance' (Jay Winter). Memory and commemoration play a vital role not only in the work of Shakespeare, but also in the process that has made him a world author. There is no single approach to the phenomenon of commemoration, as it occurs on many levels, has a long history, and is highly unpredictable in its manifestations. A serious study of commemorative practices involving Shakespeare - preferably with an international focus, and comparative in scope to include the afterlives of other artists - is likely to enhance our appreciation of the dynamics of authorship, literary fame, and afterlives in its broader socio-historical contexts...|$|R
