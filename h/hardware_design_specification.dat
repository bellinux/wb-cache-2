3|10000|Public
5000|$|P1800 SystemVerilog: Unified <b>Hardware</b> <b>Design,</b> <b>Specification</b> and Verification Language (SV-IEEE1800) with IEEE-SA CAG ...|$|E
40|$|The {{control of}} {{structures}} {{to improve their}} performance during earthquakes was first proposed {{more than a century}} ago. But it has only been in the last 25 years that structures have been successfully designed and built using earthquake protective systems. Today these systems range from simple passive devices to fully active systems. This paper focuses on passive control and reviews recent developments in the state-of-the-art. Passive systems include tuned mass dampers, seismic (base) isolation systems, mechanical energy dissipators, and the like. Major developments in the theory, <b>hardware,</b> <b>design,</b> <b>specification,</b> and installation of these systems have permitted significant applications to buildings, bridges, and industrial plant. Applications are now found in almost all of the seismically active countries of th...|$|E
40|$|Hardware {{designers}} are facing new {{challenges in the}} design of complex ASIC's and processors as their sizes approach up to 100 million logic gates. We believe no adequate solution exists that allows designers to specify hardware which takes full advantage of the available resources in these devices. The <b>hardware</b> <b>design</b> <b>specification</b> languages are either too low level to support efficient large scale design (for example, Verilog), or the language and synthesis methodology is so high-level that the designer's micro-architectural ingenuity is lost in the design process. This results in circuits that oftentimes do not match the designer's expectations (for example, C-based behavioral synthesis). 'This thesis presents a design methodology and related synthesis algorithms that address several of the key issues of <b>hardware</b> <b>design</b> <b>specification</b> and high-level synthesis while avoiding the pitfalls of past approaches. The areas we focus on are modular compilation and performance specification. The modular flow allows for the separate compilation of modules and ensures the correct usage of module interfaces by attaching annotations with well defined semantics to them. We also introduce performance specifications as a core part of a design description. (cont.) This allows a designer to more easily achieve the expected design performance and it allows for rapid micro-architectural exploration. We chose guarded atomic actions as the foundation of this research because of their clean execution semantics. These semantics allow for easy design transformation (either manual or compiler driven) while ensuring that the correctness of the design is maintained. We demonstrate the practicality and power of this methodology using several examples, such as a processor which from a single design description can automatically be transformed into an unpipelined processor or a superscalar processor simply by changing a single-line performance specification. by Daniel L. Rosenband. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2005. Includes bibliographical references (p. 137 - 140) ...|$|E
50|$|Intelligent Verification, which {{includes}} intelligent testbench automation, {{is a form}} of functional verification used to verify that an electronic <b>hardware</b> <b>design</b> conforms to <b>specification</b> before device fabrication. Intelligent verification uses information derived from the <b>design</b> and <b>specification(s)</b> to expose bugs in and between hardware IP's. Intelligent verification tools require considerably less engineering effort and user guidance to achieve verification results that meet or exceed the standard approach of writing a testbench program.|$|R
40|$|A {{proposed}} {{methodology for}} the in-flight calibration of a Synthetic Thinned Aperture Radiometer (STAR) airborne sensor {{with the potential}} application to a space flight version. The application of the spaceflight version of this instrument will address several pressing {{issues related to the}} Global Precipitation Measurement Mission (GPM). The X-Band Lightweight Rainfall Radiometer using STAR technology (LRR-X) is an aircraft sensor that is jointly developed by the NASA Goddard Space Flight Center and the University of Michigan. This paper will describe the theory of calibration as well as the <b>hardware</b> <b>design</b> <b>specifications</b> used by the method. The on-board hardware uses individual uncorrelated warm loads on each receiver as well as to a single noise diode providing a correlated noise source to each receiver. A procedure for maintaining onboard calibration with an optimum running average using correlated bursts of thermal noise interleaved with scene data will be exercised during the maiden flight of the LRR-X instrument during the spring of 2003. The final component of calibration of a synthetic aperture radiometer is the image reconstruction algorithm that uses the measured correlations to produce the temperature brightness (TB) images. An overview of system-level testing, both on the ground and in-flight, will be presented to validate the absolute accuracy of the image reconstruction algorithm...|$|R
40|$|Abstract. The paper {{presents}} {{our approach}} {{of using a}} formal verification method, the model checking, to verify whether a particular component of <b>hardware</b> <b>design</b> matches its <b>specification.</b> We have applied this approach in the Liberouter project, which is aimed to develop an FPGA based high-speed network monitoring and routing hardware. In the paper, we focus on a FIFO component – the process of its verification, detected errors, and the way of their correction. ...|$|R
40|$|This paper {{presents}} Knife, a reconfigurable Multi-FPGA based {{system designed}} and implemented {{as a final}} project to get a degree on electronic engineering. The whole circuit design flow is {{addressed in order to}} obtain an automated process. It starts from a <b>hardware</b> description language <b>design</b> <b>specification</b> in VHDL or XNF and targets at a reconfigurable–expandable board, made up of eight Xilinx FPGAs. We have designed and implemented both, the Multi-FPGA board and the software tool. The software tool employs some Xilinx Foundation tools hile other steps, such as partitioning and placement of the circuit, uses some ideas proposed in previous papers...|$|R
40|$|The {{specification}} of digital logic in SDL (Specification and Description Language) is investigated. A specification approach is proposed for multi-level descriptions of hardware behaviour and structure. The modelling method exploits features introduced in SDL- 92. The approach also {{deals with the}} specification, analysis and simulation of timing aspects at any level in the {{specification of}} digital logic. Keywords: Digital Logic, <b>Hardware</b> <b>Design,</b> SDL (<b>Specification</b> and Description Language), Timing Analysis. FORTE/PSTV Codes: I. 1, I. 3, I. 4, I. 7, I. 8, I. 9, II. 3, IV. 1. 1. Introduction 1. 1 Application of SDL This paper addresses the specification and validation of digital logic components and digital systems using SDL- 92 (Specification and Description Language [1, 2, 3]). SDL was developed by CCITT/ITU-T {{in the context of}} telecommunications. ETSI (European Telecommunications Standards Institute) has defined a methodology for preparing standards and reports that describe certain kinds of s [...] ...|$|R
40|$|In this paper, {{we present}} a rapid {{prototyping}} environment for mixed signal systems. The environment consists of programmable mixed signal hardware together {{with a set of}} integrated CAD tools to enable fast prototyping of mixed signal <b>designs</b> from high-level <b>specifications.</b> The prototyping hardware comprises of field-programmable analog arrays and field-programmable gate arrays on which the analog and digital sections of the design are respectively implemented. Field-programmable interconnect routes signals between multiple devices. A bank of data converters constitutes the interface between the analog and digital parts. Design tools are required to map the given design onto the prototyping <b>hardware.</b> The high-level <b>design</b> <b>specification</b> is first compiled into an intermediate format suitable for synthesis. Following this, the design is partitioned into analog and digital sections. The analog and digital subsystems are synthesized for the target FPAA and FPGA devices respectively. Configur [...] ...|$|R
40|$|The ANISEED method (Analysis In SDL Enhancing Electronic Design) is {{presented}} for specifying and analysing timing characteristics of <b>hardware</b> <b>designs</b> using SDL (<b>Specification</b> and Description Language). A signal carries a binary value and an optional time-stamp. Components and circuit designs are instances of block types in library packages. The library contains specifications of typical components in single/multi-bit and untimed/timed forms. Timing may be specified at an abstract, behavioural or structural level. Timing properties are investigated using an SDL validator. Consistency of temporal and functional aspects may be assessed between designs {{at different levels}} of detail. Timing characteristics of a design may also be inferred from validator traces. As a small case study, a D (Delay) flip-flop is used to show the method at work. Keywords: Hardware Description, SDL (Specification and Description Language), Timing Specification 1 Introduction 1. 1 Background HDLs (Har [...] ...|$|R
40|$|Digital {{hardware}} {{is treated}} {{as a collection of}} interacting parallel components. This permits the use of a standard formal technique for specification and analysis of circuit designs. The ANISEED method (Analysis In SDL Enhancing Electronic Design) is presented for specifying and analysing timing characteristics of <b>hardware</b> <b>designs</b> using SDL (<b>Specification</b> and Description Language). A signal carries a binary value and an optional time-stamp. Components and circuit designs are instances of block types in library packages. The library contains specifications of typical components in single/multi-bit and untimed/timed forms. Timing may be specified at an abstract, behavioural or structural level. Timing properties are investigated using an SDL simulator or validator. Consistency of temporal and functional aspects may be assessed between designs at different levels of detail. Timing characteristics of a design may also be inferred from validator traces. A variety of examples is u [...] ...|$|R
40|$|In this paper, {{we provide}} a {{practical}} transformational {{approach to the}} synthesis of correct synchronous digital <b>hardware</b> <b>designs</b> from high-level <b>specifications.</b> We do this while {{taking into account the}} complete life cycle of a design from early prototype to full custom implementation. Besides time-to-market, both flexibility with respect to target architecture and efficiency issues are addressed by the methodology. The utilization of user-selected behaviorpreserving transformation steps ensures first-time-right designs while exploiting the experience, flexibility, and creativity of the designer. To ensure that design transformations are indeed behavior -preserving a novel mechanized approach to the specification and verification of design transformations on control data flow graphs which is independent of a specific behavioral model or graph size has been developed. As a demonstration of an industrial application we use a video processing algorithm needed for the conversion from a l [...] ...|$|R
40|$|Abstract — In this paper, we {{consider}} the problem of adjusting cross development toolkits (assembler, linker, simulator, profiler, debugger, and IDE) to support processor extensions {{in the form of}} accelerators (synchronous coprocessors). Considered approach is based on describing accelerator models in a special specification language and using such descriptions to dynamically reconfigure cross toolkit to support assembling, cycle accurate simulation and debugging of applications containing new instructions implemented by the accelerators. We describe a generalized mathematical model of the supported class of accelerators and interfaces with the main processor. The specification language for defining concrete accelerators is given and our technology for dynamic cross-tools reconfiguration is overviewed. Index Terms — Cross development tools, embedded system <b>design,</b> <b>hardware</b> <b>specification</b> languages, programming environments. I...|$|R
40|$|University of Minnesota M. S. thesis. May 2013. Major: Electrical/Computer Engineering. Advisor: Peter J. Seiler. 1 {{computer}} file (PDF); vii, 53 pages, appendices A-B. The {{focus of this}} thesis is the design and implementation of a control law for a Vestas V 27 turbine. There are two motivations for this work. First, there is a rapidly growing industry to refurbish turbines and the proposed control design {{can be used to}} update V 27 turbines to extend their operational life. Second, the proposed control design will be open-source thus enabling the V 27 turbine to be used for research purposes. The thesis will first provide a review of traditional wind turbine control systems. Next the V 27 turbine <b>hardware,</b> software, and <b>design</b> <b>specification</b> are described. A control system is then described that includes supervisory control and a SISO classical control for the rotor speed tracking controller. Experimental test results are presented using a V 27 turbine installed at the Mesabi Range Community and Technical College...|$|R
5000|$|The Retro VGS {{team was}} the subject of {{criticism}} for its reversal on several of its early promises, including its change in crowdfunding venue from Kickstarter to Indiegogo. The entry level price was raised from US$150 as initially suggested to US$350 and up, not inclusive of shipping charges. The FPGA features to allow playing games from classic that were originally promised were revealed as a [...] "stretch goal" [...] pending crowdfunding at the US$3,100,000 level. The Retro VGS team failed to show <b>hardware</b> prototype or <b>design</b> <b>specifications,</b> a requirement for most Kickstarter promotions. The [...] "prototype controller" [...] that was shown has been revealed to be a third party Wii U Pro Controller with poor user reviews. The proposed software for the machine was criticized for not being unique enough from digital releases on other platforms to justify a cartridge release at higher prices. The cartridge-only distribution model does not allow for updates (including debugging) or additional content, which led some critics to question the value offered.|$|R
40|$|High-Level Synthesis (HLS) is {{emerging}} as a mainstream design methodology, allowing software designers to enjoy {{the benefits of a}} hardware implementation. Significant work has led to effective compilers that produce high-quality <b>hardware</b> <b>designs</b> from software <b>specifications.</b> However, in order to fully benefit from the promise of HLS, a complete ecosystem that provides the ability to analyze, debug, and optimize designs is essential. This ecosystem has to be accessible to software designers. This is challenging, since software developers view their designs very differently than how they are physically implemented on-chip. Rather than individual sequential lines of code, the implementation consists of gates operating in parallel across multiple clock cycles. In this paper, we report on our efforts to create an ecosystem that allows software designers to debug HLS-generated circuits in a familiar manner. We have implemented our ideas in a debug framework that will be included in the next release of the popular LegUp high-level synthesis tool. Comment: Presented at Second International Workshop on FPGAs for Software Programmers (FSP 2015) (arXiv: 1508. 06320...|$|R
40|$|We {{have argued}} {{previously}} [1] {{that the best}} way utilize formal methodologies for <b>hardware</b> <b>design</b> and verification is to focus on high-level debugging tools that let the designer think of the verification problem {{in the same way that}} he considers the design problem. One key problem with this idea is that while almost all <b>design</b> <b>specifications</b> are nondeterministic to allow designers more freedom in generating highperformance and efficient design, design languages in which designers think of the problem almost all represent the design as a deterministic state machine. Our work focuses on <b>hardware</b> <b>designed</b> using Bluespec, a language of guarded atomic actions (or rules) where the rules can fire nondeterministically. Any rule whose predicate guard is true can be executed. The Bluespec compiler generates efficient synchronous hardware by automaticall...|$|R
40|$|Implementing <b>hardware</b> <b>design</b> in Field Programmable Gate Arrays (FPGAs) is a {{formidable}} task. There {{is more than one}} way to implement the dsp design for digital FIR filter. Based on the <b>design</b> <b>specification,</b> careful choice of implementation method and tools can save a lot of time and work. There are toolboxes available to generate VHDL (Verilog) descriptions of the filters which reduce dramatically the time required to generate a solution. Time can be spent valuating different implementation alternatives. Proper choice of the computation algorithms can help the FPGA architecture to make it efficient in terms of speed and/or area...|$|R
40|$|Abstract. The IEEE {{standardized}} Property Specification Language, PSL for short, {{extends the}} well-known linear-time temporal logic LTL with so-called semi-extended regular expressions. PSL and the closely related SystemVerilog Assertions, SVA for short, are increasingly {{used in many}} phases of the <b>hardware</b> <b>design</b> cycle, from <b>specification</b> to verification. In this paper, we extend the common core of these specification languages with past operators. We name this extension RTL. Although all ω-regular properties are expressible in PSL, SVA, and RTL, past operators often allow one to specify properties more naturally and concisely. In fact, we show that RTL is exponentially more succinct than the cores of PSL and SVA. Furthermore, we present a translation of RTL into language-equivalent nondeterministic Büchi automata, {{which is based on}} novel constructions for 2 -way alternating automata. Our translation has al-most the same worst-case complexity in terms {{of the size of the}} resulting nondeterministic Büchi automata as the existing translations for PSL and SVA. Consequently, the satisfiability and the model-checking prob-lem for RTL fall into the same complexity classes as the corresponding problems for PSL and SVA. From the translation it also follows that the blowup of translating RTL formulas into initially equivalent PSL/SVA formulas is at most triply exponential. ...|$|R
5000|$|Product <b>design</b> <b>specification,</b> a {{document}} that describes <b>design</b> <b>specifications</b> ...|$|R
40|$|In this paper, {{we present}} a {{framework}} for teaching DSP <b>hardware</b> <b>design</b> and provide the necessary technical infrastructure for enabling this convergence of theory and implementation. Even though many curricula include separate classes in both DSP theory and VHDL modeling, there are few opportunities given to students to combine these two skills into a working knowledge of DSP <b>hardware</b> <b>design.</b> We have developed a pedagogical framework whereby students can leverage their previous knowledge of DSP theory and VHDL <b>hardware</b> <b>design</b> techniques to design, simulate, synthesize, and test digital signal processing systems. The synthesized hardware is implemented on FPGAs, which provides a fast and cost-effective way of prototyping hardware systems in a laboratory environment. This framework allows students to expand their previous knowledge into a more complete understanding of the entire <b>design</b> process from <b>specification</b> and simulation through synthesis and verification. ...|$|R
40|$|Abstract. FPGA is {{one kind}} of {{important}} devices that can realize many functions. As the development of communication technology and computer science, more and more technologies are invented {{and more and more}} <b>hardware</b> <b>design</b> technologies are sifted out. Therefore, the <b>hardware</b> <b>design</b> based on ASIC can be not fit on the new theories realization. As a new device, FPGA has many advantages including strength function, shorter design circle, less money, more flexible and more intelligent design tools. More and More <b>hardware</b> <b>designs</b> of FPGA are pay more attentions. Therefore, it is significant to make analysis on <b>hardware</b> <b>design</b> of FPGA. The <b>hardware</b> <b>design</b> for FPGA will be related to the FPGA device. In the market Altera and Xilinx FPGAs are used frequently by engineers. Therefore, in this dissertation will be make analysis and realization the critical points in <b>hardware</b> <b>design</b> based on Xilinx FPGA. In this dissertation, the critical point of <b>Hardware</b> <b>Design</b> of FPGA will be described. It will include power source, impedance matching and clock circuit design. There are many <b>hardware</b> <b>design</b> tools used for <b>hardware</b> <b>design</b> including Altium Designer, Protel, Cadence and others. Compared with other design tools, Cadence will have more advantages. Therefore, in this dissertation, Cadence will be used as the <b>design</b> tool for <b>hardware</b> <b>design</b> analysis and realization. With the help of Cadence, one <b>hardware</b> <b>design</b> and signal transmission simulation will be made analysis. With the development of the micro-electronics technology and computer science, the <b>hardware</b> <b>design</b> about FPGA will be taken more and more attentions...|$|R
40|$|This paper {{presents}} a full-digital vector control integrated circuit(IC) for permanent magnet synchronous motor (PMSM) with considering hardware structure. We adopted top-down and modular partitioning logic optimization <b>design.</b> <b>Design</b> <b>specification</b> of space vector {{pulse width modulation}} (SVPWM) unit, vector coordinate transformation are illustrated. All of the modules were implemented with pure <b>hardware</b> and <b>designed</b> with Verilog <b>hardware</b> description language (HDL). Moreover, the proposed design was verified by Simulink-Matlab and {{field programmable gate array}} (FPGA). © 2014 IEEE...|$|R
40|$|We {{present a}} new {{approach}} to automating the verification of <b>hardware</b> <b>designs</b> based on planning techniques. A database of methods is developed that combines tactics, which construct proofs, using specifications of their behaviour. Given a verification problem, a planner uses the method database to build automatically a specialised tactic to solve the given problem. User interaction is limited to specifying circuits and their properties and, in some cases, suggesting lemmas. We have implemented our work in an extension of the Clam proof planning system. We report on this and its application to verifying a variety of combinational and synchronous sequential circuits including a parameterised multiplier design and a simple computer microprocessor. 1 Introduction Confidence in the correctness of <b>hardware</b> <b>designs</b> may be increased by formal verification of the <b>designs</b> against <b>specifications</b> of their desired behaviour. Although this is common knowledge, formal verification is almost complet [...] ...|$|R
50|$|In {{designing}} the initial {{architecture of the}} CADES environment, Pearson in particular looked to parallels with the leading <b>hardware</b> computer-aided <b>design</b> systems of the time, even attempting the use of graphics in the design process. The CADES design approach, called Structural Modelling, was rigidly data-driven and hierarchical, and expressed in a formal design language, SDL. <b>Design</b> <b>specifications</b> written in SDL were processed by the Design Analyser, before being input to the CADES Product Database, a design and implementation database supporting its own query language and forming the kernel of the Product Information System.|$|R
40|$|Third {{generation}} (3 G) cellular standards {{has seen}} many {{changes in the}} <b>design</b> <b>specifications</b> during its evolution. There also exist multiple standards, CDMA 2000 and WCDMA, which have different specifications for implementing the digital baseband (DBB) system. Changes in a standard during the development of systemon-a-chip (SoC) {{can be difficult to}} accommodate or can make the system less efficient when incorporated {{at the end of the}} SoC design cycle. The concept of software radios has gained widespread acceptance in basestations using reconfigurable hardware. However reconfigurable <b>hardware</b> <b>designs</b> for mobile handsets still remain a challenge. In this paper we present a design methodology to develop reconfigurable modem (RM) architecture for CDMA based 3 G handsets. Performance comparison between ASIC, RM and DSP implementation of rake receiver processing is presented to demonstrate the relative advantages and disadvantages. 1...|$|R
30|$|We {{evaluated}} the decision model by discussing its <b>design</b> <b>specification</b> against theory-backed <b>design</b> objectives and by prototypically implementing the <b>design</b> <b>specification.</b> Furthermore, we validated the decision model’s applicability and usefulness via a real-world case at an insurance broker pool company {{as well as}} by discussing the decision model’s <b>design</b> <b>specification</b> and the prototype against established evaluation criteria from the DSR literature.|$|R
5000|$|Metop HRPT/LRPT User Station Elements <b>Design</b> <b>Specification,</b> {{document}} EPS.ASPI.DS.0675, which {{documents the}} <b>design</b> <b>specification</b> of an HRPT User Station and an LRPT User Station. To download this, google: EPS.ASPI.DS.0675 site:eumetsat.int ...|$|R
40|$|Abstract: This is {{design of}} the plating train {{operation}} control system based on PLC. The design includes two aspects: the <b>hardware</b> <b>design</b> and software <b>design.</b> In the <b>hardware</b> <b>design,</b> the electrical control circuit was designed first, and then determine the quantity, type, and distribution of components, thus complete the <b>hardware</b> <b>design.</b> When to design software, design an overall ladder diagram first, then to design each program one by one...|$|R
40|$|Abstract—In {{this paper}} we explore a SystemC-based <b>hardware</b> <b>design</b> method which uses aspect-oriented {{programming}} concepts. We have designed a synthesizable resource scheduler at register transfer level by using only features available in the SystemC synthesizable subset. The results show that aspectoriented programming applied to digital <b>hardware</b> <b>design</b> provides a better separation of concerns {{at the cost of}} a negligible overhead. Keywords-Aspect-oriented programing, digital <b>hardware</b> <b>design,</b> reconfigurable <b>hardware</b> I...|$|R
40|$|The Critical Design Review (CDR) is {{intended}} to be performed at the phase of the design request immediately before proceeding to implementation of the design request. The design request is initiated with a <b>Design</b> <b>Specification</b> document which includes a problem statement, design details, a design checklist and supporting documentation and/or projected sample output. The document then records the process through the Preliminary Design Review (PDR) and on to the finalized <b>design</b> <b>specification.</b> In addition to this, the <b>design</b> <b>specification</b> has a chapter devoted to the completion of the CDR. This document describes the process of documentation of the CDR in the <b>Design</b> <b>Specification...</b>|$|R
50|$|Kansei Method: This is {{a method}} that {{transforms}} consumer's responses to new products into <b>design</b> <b>specifications.</b> As applied to macroergonomics, this method can translate employee's responses to changes to a work system into <b>design</b> <b>specifications.</b>|$|R
40|$|ISBN : 0 - 7695 - 1453 - 7 website : [URL] audienceThe {{validation}} of HDL descriptions before their synthesis {{is one of}} the principal problems related to the top-down design process of complex circuits. This task can be accomplished according two approaches: formal verification or simulation based validation. Because formal verification, in spite of recent progress, is only feasible for small descriptions, simulation is still the best way to test <b>hardware</b> <b>design.</b> One of the main problem of such approach is to generate test vectors in order to verify <b>design</b> <b>specifications.</b> We think that high level HDL description represents a new source of information about the circuit which may be useful in test data generation field. The approach presented in this paper borrows techniques used successfully in software testing area for test vectors generation. This paper focus on a path-oriented test data generator...|$|R
40|$|In this paper, we {{describe}} the computer tool Design/CPN supporting editing, simulation, and state space analysis of Coloured Petri Nets. So far, approximately 40 man-years have been invested {{in the development of}} Design/CPN. It is used world-wide by more than 200 companies and research institutions. For the presentation, we draw from the experiences gained in a recent industrial application using Coloured Petri Nets in the design, validation, and verification of communication protocols for audio/video systems. 1 Introduction Coloured Petri Nets (CP-nets or CPN) [11, 12] is a powerful graphical language for <b>design,</b> <b>specification,</b> validation, and verification of systems. CP-nets have a wide range of application areas and many projects have been carried out in the industry and documented in the literature, e. g., in the areas of communication protocols [6], operating systems [3], <b>hardware</b> <b>designs</b> [7], embedded systems [17], software system designs [18], and business process re-engineerin [...] ...|$|R
40|$|This paper {{focuses on}} how <b>design</b> <b>specification</b> data is managed in the system. The issues covered {{includes}} the basic requirements on the <b>design</b> <b>specification,</b> data models for specification items, and {{the relationships between}} the <b>design</b> <b>specification</b> items and other product models such as the function, organ and component structures and behavioural and life-phase system models. A case study of an expansion tank is used to illustrate to use of the system. 2 Modelling the contents of the design specificatio...|$|R
40|$|The Preliminary Design Review (PDR) is {{intended}} to be performed at the conceptual phase of a design request. The design request is initiated with a <b>Design</b> <b>Specification</b> document which includes a problem statement, design details, a design checklist and supporting documentation and/or projected sample output. In addition to this, the <b>design</b> <b>specification</b> has a chapter devoted to the completion of the Preliminary Design Review. This document describes the process of documentation of the PDR in the <b>Design</b> <b>Specification...</b>|$|R
