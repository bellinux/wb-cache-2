54|26|Public
25|$|A {{synchronization}} packet (commonly {{known as}} the timing reference signal or TRS) occurs immediately before the first active sample on every line, and immediately after the last active sample (and {{before the start of}} the <b>horizontal</b> <b>blanking</b> region). The synchronization packet consists of four 10-bit words, the first three words are always the same—0x3FF, 0, 0; the fourth consists of 3 flag bits, along with an error correcting code. As a result, there are 8 different synchronization packets possible.|$|E
25|$|The 68000 {{and video}} {{controller}} took turns accessing DRAM every four CPU cycles during {{display of the}} frame buffer, while the 68000 had unrestricted access to DRAM during vertical and <b>horizontal</b> <b>blanking</b> intervals. Such an arrangement reduced the overall performance of the CPU as much as 35% for most code as the display logic often blocked the CPU's access to RAM. This made the machine run more slowly than several of its competitors, despite the nominally high clock rate.|$|E
25|$|The flags bits {{found in}} the fourth word (commonly known as the XYZ word) are known as H, F, and V. The H bit {{indicates}} the start of horizontal blank; and synchronization bits immediately preceding the <b>horizontal</b> <b>blanking</b> region must have H set to one. Such packets are {{commonly referred to as}} End of Active Video, or EAV packets. Likewise, the packet appearing immediately {{before the start of the}} active video has H set to 0; this is the Start of Active Video or SAV packet.|$|E
50|$|Player/Missile pixels {{are only}} {{rendered}} within the visible {{portions of the}} GTIA's pixel engine. Player/Missile objects are not rendered during the <b>horizontal</b> <b>blank</b> or the vertical blank. However, an object can be partially within the <b>horizontal</b> <b>blank.</b> The objects' pixels that fall outside of the <b>horizontal</b> <b>blank</b> are then within the visible portion of the display and can still register collisions. The horizontal position range of visible color clocks is $22hex/34dec to $DDhex/221dec.|$|R
50|$|Player/Missile {{collisions}} {{can only}} occur when Player/Missile object pixels occur within the visible {{portions of the}} display. Player/Missile objects are not rendered during the <b>horizontal</b> <b>blank</b> or the vertical blank. The range of visible color clocks is 34 to 221, and the visible scan lines range from line 8 through line 247. Player/Missile data outside of these coordinates are not rendered and will not register collisions. An object can be partially within the <b>horizontal</b> <b>blank.</b> The objects' pixels that fall outside of the <b>horizontal</b> <b>blank</b> are within the visible portion of the display and can still register collisions.|$|R
5000|$|Blank line - 8 {{instructions}} to display from 1 through 8 <b>horizontal</b> <b>blank</b> lines ...|$|R
25|$|Note that {{lines are}} deemed {{to start at}} EAV, whereas sample zero is the sample {{following}} SAV. This produces the somewhat confusing result that the first sample in a given line of 1080i video is sample number 1920 (the first EAV sample in that format), and the line ends at the following sample 1919 (the last active sample in that format). Note that this behavior differs somewhat from analog video interfaces, where the line transition is deemed to occur at the sync pulse, which occurs roughly halfway through the <b>horizontal</b> <b>blanking</b> region.|$|E
25|$|Both the HD and SD serial {{interfaces}} provide for 16 channels of embedded audio. The two interfaces use different audio encapsulation methods— SD uses the SMPTE 272M standard, whereas HD uses the SMPTE 299M standard. In either case, an SDI signal may contain up to sixteen audio channels (8 pairs) embedded 48kHz, 24-bit audio channels {{along with the}} video. Typically, 48kHz, 24-bit (20-bit in SD, but extendable to 24 bit) PCM audio is stored, in a manner directly compatible with the AES3 digital audio interface. These are placed in the (<b>horizontal)</b> <b>blanking</b> periods, when the SDI signal carries nothing useful, since the receiver generates its own blanking signals from the TRS.|$|E
25|$|For {{portions}} of the vertical and <b>horizontal</b> <b>blanking</b> regions which are not used for ancillary data, {{it is recommended that}} the luma samples be assigned the code word 64 (40 hex), and the chroma samples be assigned 512 (200 hex); both of which correspond to 0mV. It is permissible to encode analog vertical interval information (such as vertical interval timecode or vertical interval test signals) without breaking the interface, but such usage is nonstandard (and ancillary data is the preferred means for transmitting metadata). Conversion of analog sync and burst signals into digital, however, is not recommended—and neither is necessary in the digital interface.|$|E
50|$|A raster {{interrupt}} (also {{called a}} <b>horizontal</b> <b>blank</b> interrupt) {{is a computer}} interrupt signal that is used for display timing purposes. It is usually, though not always, generated by the system's graphics chip.|$|R
50|$|Some {{graphics}} {{systems can}} count <b>horizontal</b> <b>blanks</b> and change how the display is generated during this blank {{time in the}} signal; {{this is called a}} raster effect, of which an example are raster bars.|$|R
50|$|APAC used a Display List Interrupt, or DLI, {{after each}} {{line of the}} screen was drawn to {{alternate}} between GTIA Graphics Mode 11 (15 hues) and 9 (15 shades of grey) of the GTIA chip. The hues and luminances would blend together on the screen (usually a television) to create {{the effect of a}} palette of 256 visible colors, with the artifact of a thinner, <b>horizontal</b> <b>blank</b> line in between each visible line.|$|R
50|$|In a {{composite}} video signal (CVS) {{there are two types}} of blanking: horizontal and vertical. <b>Horizontal</b> <b>blanking</b> is between lines and vertical blanking is between fields (half frames). In a poorly tuned TV receiver the <b>horizontal</b> <b>blanking</b> can be seen at the right or left of the image and the vertical blanking can be seen at the top or bottom of the image. VIT signals are inserted in the vertical blanking.|$|E
5000|$|In the NTSC {{television}} standard, <b>horizontal</b> <b>blanking</b> occupies [...] (17.2%) out {{of every}} [...] scan line. In PAL, it occupies [...] (18.8%) {{out of every}} [...] scan line.|$|E
50|$|The {{parameters}} {{defined by}} standard include <b>horizontal</b> <b>blanking</b> and vertical blanking intervals, horizontal frequency and vertical frequency (collectively, pixel clock rate or video signal bandwidth), and horizontal/vertical sync polarity.|$|E
50|$|The Atari 8-bit family allows {{different}} graphics modes {{and color}} palettes {{to be used}} in different horizontal bands on the screen, by using a simple display list and a type of <b>horizontal</b> <b>blank</b> interrupt. While other games make more extensive use of these techniques, Star Raiders uses them in a relatively simple fashion to combine text displays and graphics; the cockpit display uses a custom character set to display futuristic-looking characters and symbols reminiscent of MICR.|$|R
5000|$|The Original Amiga Chipset {{included}} a support chip {{known as the}} [...] "Copper" [...] that handled interrupts and other timing and housekeeping duties independently of the CPU and the video system. Using the Copper, {{it was possible to}} call back into the CPU to run short tasks while the video display was handling the vertical or <b>horizontal</b> <b>blank</b> interrupt (HBI). This allowed programmers to tie machine code to the display without causing visual artifacts, which makes many video effects much simpler to implement.|$|R
5000|$|The Astrocade used color registers, {{or color}} indirection, so the four colors could be picked from {{a palette of}} 256 colors. Color {{animation}} was possible by changing {{the values of the}} registers, and using a <b>horizontal</b> <b>blank</b> interrupt you could change them from line to line. An additional set of four color registers could be [...] "swapped in" [...] at any point along the line, allowing you to create two [...] "halves" [...] of the screen, split vertically. Originally intended to allow you to easily create a score area {{on the side of the}} screen, programmers also used this feature to emulate 8 color modes.|$|R
50|$|In fact, spikes do occur, both {{horizontally}} and vertically, and {{the corresponding}} <b>horizontal</b> <b>blanking</b> interval and vertical blanking interval give the deflection currents settle time to retrace and settle to their new value. This happens during the blanking interval.|$|E
50|$|Many {{graphics}} chips {{can trigger}} an interrupt, specifically called a raster interrupt, when the <b>horizontal</b> <b>blanking</b> interval or the vertical sync begins; thus, an interrupt handler can precisely time and perform {{the task of}} updating CLUT entries for raster bars and other colour-changing effects.|$|E
50|$|SMPTE 344M {{defines a}} 480p59.94 {{standard}} with twice the data rate of BT.601, using 704 × 480 active pixels with 16 x 480 <b>horizontal</b> <b>blanking</b> pixels. ITU-R Rec. 601 is the specification for component digital interlaced video (480i) {{commonly used in}} standard definition television production.|$|E
50|$|Some {{platforms}} (such as the Commodore 64, Amiga, Sega Master System, PC Engine/TurboGrafx-16, Sega Mega Drive/Genesis, Super NES, Game Boy, Game Boy Advance and Nintendo DS) {{provide a}} <b>horizontal</b> <b>blank</b> interrupt for automatically setting the registers {{independently of the}} rest of the program. Others, such as the NES, require the use of cycle-timed code, which is specially written to take exactly as long to execute as the video chip takes to draw one scanline, or timers inside game cartridges that generate interrupts after a given number of scanlines have been drawn. Many NES games use this technique to draw their status bars, and Teenage Mutant Ninja Turtles II: The Arcade Game and Vice: Project Doom for NES use it to scroll background layers at different rates.|$|R
5000|$|Some display {{systems have}} only one layer. These include most of the classic 8-bit systems (such as the Commodore 64, Nintendo Entertainment System, Sega Master System, PC Engine/TurboGrafx-16 and {{original}} Game Boy). The more sophisticated games on such systems generally divide the layer into horizontal strips, each with a different position and rate of scrolling. Typically, strips higher on the screen will represent things {{farther away from the}} virtual camera or one strip will be held stationary to display status information. The program will then wait for <b>horizontal</b> <b>blank</b> and change the layer's scroll position just before the display system begins to draw each scanline. This is called a [...] "raster effect" [...] and is also useful for changing the system palette to provide a gradient background.|$|R
40|$|Describes {{the basic}} {{principles}} of a digital television system which has been designed and implemented at the Telecommunication and Microwaves Laboratory of the Universite Catholique de Louvain. The aim of this system was to reach bit rates of the order of 34 Mbit/s. To achieve this, the system uses component coding, expands the signal by removing <b>horizontal</b> <b>blanks,</b> and carries out a combined interframe interpolation and Hadamard transform which roughly equals the vertical and horizontal resolutions. After bit allocation, the signal is converted into a serial stream of data and transmitted. The inverse operations are made at the receiver, where a 625 lines picture is restored. Those principles were implemented and experimented on a transmission via OTS Satellite. Prospects discussed include several sound channels and teletext capabilities and improvements with use of a reduced frame memory. Anglai...|$|R
50|$|There {{was also}} a version that {{encrypted}} the audio using a digital audio stream in the <b>horizontal</b> <b>blanking</b> interval like the VCII system. One US network used that for its affiliate feeds and would turn off the analog sub carriers on the satellite feed.|$|E
50|$|In video games, the <b>horizontal</b> <b>blanking</b> {{interval}} {{was used}} to create some notable effects. Some methods of parallax scrolling use a raster effect to simulate depth in consoles that do not natively support multiple background layers or do not support enough background layers to achieve the desired effect. One {{example of this is}} in the game Castlevania: Rondo of Blood, which was written for the PC Engine CD-ROM which does not support multiple background layers. The Super NES's Mode 7 used the <b>horizontal</b> <b>blanking</b> interval to vary the scaling and rotation of one background layer on a scanline by scanline basis to create many different effects. The most famous and hyped effect of Mode 7 was to turn the background layer into a planar texture map.|$|E
5000|$|Ancillary packets {{located in}} the <b>horizontal</b> <b>blanking</b> region (after EAV but before SAV), {{regardless}} of line, are known as horizontal ancillary data, or HANC. HANC is commonly used for higher-bandwidth data, and/or for {{things that need to}} be synchronized to a particular line; the most common type of HANC is embedded audio.|$|E
5000|$|Graphics modes: 160×256 (4 or 16 colours), 320×256 (2 or 4 colours), 640×256 (2 colours), 320×200 (2 colours — spaced display {{with two}} <b>blank</b> <b>horizontal</b> lines {{following}} every 8 pixel lines), 640×200 (2 colours — spaced display) ...|$|R
50|$|Generalized Timing Formula (GTF) is a VESA {{standard}} {{which can}} easily be calculated with the Linux gtf utility. Coordinated Video Timings-Reduced Blanking (CVT-RB) is a VESA standard which offers reduced <b>horizontal</b> and vertical <b>blanking</b> for non-CRT based displays.|$|R
40|$|With {{the large}} number of {{existing}} documents and the increasing speed in the production of new documents, finding efficient methods to process these documents for their content retrieval and storage becomes critical. Tables are a popular and efficient document element type. Therefore, table structure understanding is an important problem in the document layout analysis field. This paper presents a table structure understanding algorithm using optimization methods. It includes steps of column style labeling, large <b>horizontal</b> <b>blank</b> block equivalence subsets location, statistical refinement, iterative updating optimization and table decomposition. The column style labeling, statistical refinement and iterative updating optimization steps are probability based, where the probabilities are estimated from geometric measurements made on the various entities with which the algorithm works in a large training set. Each step of our table structure understanding algorithm has some tuning parameters. We initially set the parameters with some conjectural values. Then with a global parameter optimization scheme, we update these values using a line search optimization algorithm. We use a performance evaluation protocol employing an area overlapping measure. With this scheme, we can obtain statistically satisfactory tuning parameter values on the fly. Large data sets with ground truth are essential in assessing the performance of a computer vision algorithm. Manually generating document ground truth proved to be very costly and prone to involve subjective errors. We address this problem by using an automatic table ground truth generation system which can efficiently generate a large amount of accurate groun...|$|R
5000|$|VITC is 90 bits long: 32 bits of time code, 32 bits of user data, 18 {{synchronization}} bits, and 8 bits of checksum. It {{is transmitted}} using non-return-to-zero encoding at a bit rate of 115 times the line rate. (The unused 25 bit times are to {{leave room for}} the <b>horizontal</b> <b>blanking</b> interval.) ...|$|E
50|$|A gated and {{filtered}} signal {{derived from the}} color subcarrier, called the burst or colorburst, {{is added to the}} <b>horizontal</b> <b>blanking</b> interval of each line, excluding the vertical sync interval, as a synchronizing signal and amplitude reference for the chrominance signals. The burst signal is inverted in phase (180° out of phase) from the reference subcarrier.|$|E
50|$|The {{sampled sound}} engine piggybacked {{on the video}} circuit. As the raster scan {{returned}} from {{the right side of}} the screen to the left, one byte of data was placed into a PWM generator instead of the screen. This provided 8-bit sampled monaural sound sampled at the 22.25 kHz <b>horizontal</b> <b>blanking</b> rate. A general-purpose 6522 output could mute the sampled sound.|$|E
5000|$|... (Total <b>horizontal</b> sync and <b>blanking</b> time = 6.356 µs; {{equivalent}} to pixel widths of A = 16, B = 96, C = 48, D = 640 and each complete line = 800)NB. The figures {{shown in this}} image may be slightly inaccurate and not match the above table exactly. The same general layout applies, merely at a lower frequency, for the vertical timings.|$|R
5000|$|... #Caption: PAL videosignal frames. Left to right: {{frame with}} scan lines (overlapping together, {{horizontal}} sync pulses show as the doubled straight <b>horizontal</b> lines), vertical <b>blanking</b> interval with vertical sync (shows as brightness {{increase of the}} bottom part of the signal in almost the leftmost part of the vertical blanking interval), entire frame, another VBI with VSYNC, beginning of third frame ...|$|R
5|$|Transition-minimized {{differential}} signaling (TMDS) on HDMI interleaves video, {{audio and}} auxiliary data using three different packet types, called the Video Data Period, the Data Island Period and the Control Period. During the Video Data Period, the pixels {{of an active}} video line are transmitted. During the Data Island period (which occurs during the <b>horizontal</b> and vertical <b>blanking</b> intervals), audio and auxiliary data are transmitted within a series of packets. The Control Period occurs between Video and Data Island periods.|$|R
