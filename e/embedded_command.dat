10|52|Public
50|$|Near Field Communication (NFC) tags are {{embedded}} in the NFC Smart Poster, Smart Product or Smart Book. The tag has a RFID chip with an <b>embedded</b> <b>command.</b> The command can be to open the mobile browser on a given page or offer. Any NFC-enabled phone can activate this tag by placing the device in close proximity. The information can be anything from product details, special accommodation deals, and information on local restaurants.|$|E
50|$|Resident monitor {{functionality}} {{is present}} in many embedded systems, boot loaders, and various <b>embedded</b> <b>command</b> lines. The original functions present in all resident monitors are augmented with present day functions dealing with boot time hardware, disks, ethernet, wireless controllers, etc. Typically these functions are accessed using a serial terminal and or a physical keyboard and display, if attached. Such a resident monitor is frequently called debugger, boot loader cli, etc. The original meaning of serial or terminal accessed resident monitor is not frequently used, although the functionality remained the same, and was augmented.|$|E
50|$|Vacit and Ms Alexander (his aide) {{travel to}} Venus {{investigating}} {{the reports of}} a ship found on the surface. Leaving their ship and venturing alone into the atmosphere of Venus, the pair encounter a Vorlon who tells them about {{the coming of the}} Shadows and why telepaths were created among the younger races. The Vorlon leaves a telepathic command in the mind of Ms Alexander for her or her descendant to come to the Vorlon homeworld when the time is right. Lyta Alexander, her granddaughter, carries this <b>embedded</b> <b>command.</b>|$|E
40|$|We {{have created}} a virtual human {{presenter}} who accepts speech texts with <b>embedded</b> <b>commands</b> as inputs. The presenter acts in real-time 3 D animation synchronized with speech. The system was developed on the Jack animated-agent system. Jack provides a 3 D graphical environment for controlling articulated figures, including detailed human model...|$|R
40|$|A virtual human {{presenter}} {{is created}} based on extensions to the Jack TM animated agent system. Inputs to the presenter system {{are in the}} form of speech texts with <b>embedded</b> <b>commands,</b> most of which relate to the virtual presenter's body language. The system then makes him act as a presenter with presentation skills in realtime 3 D animation synchronized with speech outputs. ...|$|R
5000|$|One common complication, however, is that {{environments that}} support {{programmable}} snippets {{often have to}} make distinctions between what counts as [...] "plain text" [...] and what counts as [...] "programming instructions". Further complicating this distinction {{is the fact that}} applications that support programmable snippets almost always include support for recognition of multiple programming languages, either through basic syntax highlighting or execution of <b>embedded</b> <b>commands.</b>|$|R
40|$|Historically, {{typesetting}} languages {{have been}} designed for the entry of text. An <b>embedded</b> <b>command</b> language has since become important, indeed essential, but has remained a second-class citizen, sometimes masquerading as text, invariably clumsy and inadequate. We have designed a language that is a full-function programming language with embedded text. This shift in emphasis results in a level of consistency, flexibility, and power not otherwise possible...|$|E
40|$|Abstract- An {{effective}} resolution multiprocessor can be {{built from}} distributed processing, logic programming, and interface elements. Widely used, portable, components can be modularly composed into a portable parallel system that displays good resistance to premature obsolescence by software evolution. A virtual multiprocessor offering common message passing and configuration services integrates a dis-tributed mesh of sequential resolution engines. Users configure and control the resolution engines and virtual multiprocessor through a GUI using an <b>embedded</b> <b>command</b> language to drive its facilities. Prolog programs either explicitly control parallel execution through message passing or would {{have to rely on}} program transformation techniques to extract parallelism implicitly. Prolog PVM X Window TCL/TK Expect...|$|E
40|$|The {{issue of}} Command and Control (C²) is {{generally}} {{associated with the}} management infrastructure of large scale systems for warfare, public utilities and public transportation, and is concerned with ensuring that the distributed human elements of command and control can be fully integrated into a coherent, total system. Intelligent Autonomous Systems (IASs) are a class of complex systems that perform tasks autonomously in uncertain, dynamic environments, the management {{of which can be}} viewed from the perspective of <b>embedded</b> <b>command</b> and control systems. This thesis establishes a vision for the modular construction of intelligent autonomous embedded C² systems, which defines a complex integration problem characterised by distributed intelligence, world knowledge and control, conc [...] ...|$|E
40|$|We {{created a}} virtual human {{presenter}} based on extensions to the JackTM animated agent system. Inputs to the presenter system {{are in the}} form of speech texts with <b>embedded</b> <b>commands,</b> most of which relate to the virtual presenter 2 ̆ 7 s body language. The system then makes him act as a presenter with presentation skills in real-time 3 D animation synchronized with speech outputs. He can make presentations with virtual visual aids, with virtual 3 D environments, or even on the WWW...|$|R
5000|$|A typical Command-level call {{might look}} like the following: EXEC CICS SEND MAPSET('LOSMATT') MAP('LOSATT') END-EXECThe values given in the SEND MAPSET command {{correspond}} to the names used on the first DFHMSD macro in the map definition given below for the MAPSET argument, and the DFHMSI macro for the MAP argument. This is pre-processed by a pre-compile batch translation stage, which converts the <b>embedded</b> <b>commands</b> (EXECs) into call statements to a stub subroutine. So, preparing application programs for later execution still required two stages. It was possible to write [...] "Mixed mode" [...] applications using both Macro-level and Command-level statements.|$|R
30|$|The {{operation}} of the grouping process is implemented by the built-in transformation command “groupBy”. Alternatively, Scala permits the SQL <b>embedded</b> <b>commands,</b> so the grouping can be implemented in either way of groupBy or Select query. However, groupBy {{was found to be}} more efficient in performance wise. Each data tuple or record contains many attributes. As described before, MDSBA creates small Q-ID groups, which includes two to four attributes only. Also, each data record may consist of several G(QID), classes, and non-Quasi attributes. For this reason, we need to groupBy each G(QID) independently, {{while the rest of the}} attributes must be aggregated and concatenated with the anonymized G(QID).|$|R
40|$|The paper {{describes}} {{design and}} process of collection, annotation {{and evaluation of}} a new Slovak mobile-telephone speech database MobilDat-SK, which is a mobile-telephone extension to the SpeechDat-E SK. The MobilDat-SK database contains recordings of 1100 speakers and it is balanced according to the age, accent, and sex of the speakers. Every speaker pronounced 50 files (either prompted or spontaneous) containing numbers, names, dates, money amounts, <b>embedded</b> <b>command</b> words, geographical names, phonetically balanced words, phonetically balanced sentences, Yes/No answers and one longer non-mandatory spontaneous utterance. In the paper {{the structure of the}} database, the hardware and software solution of the automatic recording, the speaker recruitment strategy, the annotation process and evaluation process are described. The MobilDat-SK database has been developed for the “Intelligent Speech Communication Interface ” project in the frame of the State Research and Development Task “Buildin...|$|E
40|$|Historically, {{typesetting}} languages {{have been}} designed for the entry of text. An <b>embedded</b> <b>command</b> language has since become important, indeed essential, but has remained a second-class citizen, sometimes masquerading as text, invariably clumsy and inadequate. We have designed a language that is a full-function programming language with embedded text. This shift in emphasis results in a level of consistency, flexibility, and power not otherwise possible. Introduction A batch-style computer typesetting system accepts text files as input, to produce formatted documents as output. Most such systems are extensible. They allow definitions of new document styles and commands. Some, like T E X, also allow the input syntax to be changed. To do all this, {{the format of the}} input must be a complex language. The design of this language affects the robustness, ease of use, and overall quality of the whole system. A document, therefore, is a mix of text and commands, some of which define new comman [...] ...|$|E
40|$|Tcl {{is a type}} [...] free {{interpreted}} language {{intended for}} use as an <b>embedded</b> <b>command</b> language for applications. Motif is the standard GUI for the XWindow System, but this has a complex C [...] based API. This paper discusses a binding of tcl to Motif which allows for a simpler API. 1. Introduction The XWindow System is now accepted as the standard windowing systems for Unix graphics workstations and terminals [1]. It provides a low [...] level set of tools to build applications. Most applications now are built using a higher [...] level toolkit which typically supplies objects usually known as widgets. There {{are a number of}} such toolkits, but the one that has achieved the major success is the Motif toolkit [] based on the Xt Intrinsics [8]. Motif has defined a look [...] and [...] feel that is copied {{to a greater or lesser}} extent by other toolkits, and forms a component of specifications such as COSE. The specification for Motif [7] basically assumes a C [...] like language, and the only implementation of that specif [...] ...|$|E
50|$|Maximus has a genius-level {{intellect and}} great inventiveness. His mental powers {{granted by the}} {{mutagenic}} effects from exposure to Terrigen Mist give him the ability to numb, override, and even efface a person's mind. He {{has the ability to}} induce short-term amnesia in others, and the ability to exchange his consciousness with another's. Maximus's mental powers have a limited range as well as variability - he can only affect minds in a certain radius and only create one effect at a time. His influence generally functions while Maximus concentrates, but he has left long-buried influence in his subjects as well, which he can trigger by voice command, causing a subject to carry out <b>embedded</b> <b>commands,</b> forget, or remember.|$|R
50|$|Adobe PageMill 3.0, {{released}} in early 1999, supported <b>embedded</b> font <b>commands</b> and a site-management feature. It was discontinued in February 2000, {{due to the}} acquisition and promotion of Adobe GoLive. A later patch, still available from Adobe, fixed a problem with FTP upload.|$|R
50|$|The first {{interactive}} shells {{were developed}} in the 1960s to enable remote operation of the first time-sharing systems, and these used shell scripts, which controlled running computer programs within a computer program, the shell. Calvin Mooers in his TRAC language is generally credited with inventing command substitution, the ability to <b>embed</b> <b>commands</b> in scripts that when interpreted insert a character string into the script. Multics calls these active functions.Louis Pouzin wrote an early processor for command scripts called RUNCOM for CTSS around 1964. Stuart Madnick at MIT wrote a scripting language for IBM's CP/CMS in 1966. He originally called this processor COMMAND, later named EXEC. Multics included an offshoot of CTSS RUNCOM, also called RUNCOM. EXEC was eventually replaced by EXEC 2 and REXX.|$|R
40|$|The {{issue of}} Command and Control (C 2) is {{generally}} {{associated with the}} management infrastructure of large scale systems for warfare, public utilities and public transportation, and is concerned with ensuring that the distributed human elements of command and control can be fully integrated into a coherent, total system. Intelligent Autonomous Systems (IASs) are a class of complex systems that perform tasks autonomously in uncertain, dynamic environments, the management {{of which can be}} viewed from the perspective of <b>embedded</b> <b>command</b> and control systems. This thesis establishes a vision for the modular construction of intelligent autonomous embedded C 2 systems, which defines a complex integration problem characterised by distributed intelligence, world knowledge and control, concurrent processing on heterogeneous platforms, and real-time performance requirements. It concludes that by adopting an appropriate systems infrastructure model, based on Object Technology, it is possible to view the construction of embedded C 2 systems as the integration of a temporally assembled collection of reusable components. To support this metaphor it is necessary to construct a common reference model, or standards framework, for the representation and specification of modular C 2 systems. This framework must support the coherent long term development and evolution in system capability, ensuring that systems are extensible, robust and perform correctly. In this research, which draws together the themes of other published research in object oriented systems and robotics, classical AI models for intelligent systems architectures are used to specify the overall system structure, with open systems technologies supporting the interoperation of elements within the architecture. All elements of this system are modelled in terms of objects, with well defined, implementation independent interfaces. This approach enables the system to be specified in terms of an object model, and the development process to be framed in terms of object technology, defining a new approach to IAS development. The implementation of an On-board Command and Control System for an Autonomous Underwater Vehicle is used to validate these concepts. The further application of emergent industrial standards in distributed object oriented systems means that this kind of component-based integration is scaleable, providing a near-term solution to generic command and control problems, including Computer Integrated Manufacturing and large scale autonomous systems, where individual autonomous systems, such as robots, form elements of a complete, total intelligent system, for application to areas such as fully automated factories and cooperating intelligent autonomous vehicles for construction sites...|$|E
2500|$|In the C Shell, {{arguments}} can be <b>embedded</b> {{inside the}} <b>command</b> using the string \!*. For example, with this alias: ...|$|R
30|$|The TSS server is a daemon {{that allows}} {{external}} Web applications {{to access the}} platform's TPM functionalities. The TSS server provides TPM functionality to Web-based applications by <b>embedding</b> the <b>commands</b> in HTTP, while device local applications are able to directly access the TSS library as designed by the current TCG specification.|$|R
50|$|WIN-T Increment 3 {{provides}} {{full network}} mobility and introduces the air tier creating a three-tiered architecture: traditional line-of-sight (terrestrial), airborne {{through the use}} of Unmanned Aerial Systems and other airborne platforms; and beyond-line-of-sight (satellite). Additionally WIN-T Increment 3 introduces <b>embedded</b> Joint <b>Command,</b> Control, Communications, Computers, Intelligence, Surveillance (JC4ISR) radios into the platforms.|$|R
5000|$|Awareness quality {{measures}} {{the degree of}} using the information and knowledge <b>embedded</b> within the <b>command</b> and control system. Awareness is explicitly placed in the cognitive domain.|$|R
5000|$|Israel has on {{numerous}} occasions condemned Hamas' use of human shields during its Operation Cast Lead offensive in the Gaza Strip Some organizations, including Human Rights Watch have said that Hamas has violated international laws against placing military targets in or near densely populated areas. [...] Hillary Clinton has said that [...] "Hamas <b>embed</b> rockets, <b>command</b> and control facilities and tunnels in civilian areas." ...|$|R
40|$|Commands {{to blink}} were {{embedded}} within pictures of faces and simple geometric shapes or forms. The faces and shapes were conditioned stimuli (CSs), and the required responses were conditioned responses, or more properly, Cartesian reflexes (CRs). As in classical conditioning protocols, response times (RTs) were measured from CS onset. RTs provided {{a measure of}} the processing cost (PC) of attending to a CS. A PC is the extra time required to respond relative to RTs to unconditioned stimulus (US) commands presented alone. They reflect the interplay between attentional processing of the informational content of a CS and its signaling function with respect to the US command. This resulted in longer RTs to <b>embedded</b> <b>commands.</b> Differences between PCs of faces and geometric shapes represent a starting place for a new mental chronometry based on the traditional idea that differences in RT reflect differences in information processing. Key Words: eye blink, Cartesian reflex, faces Familiar things happen, and mankind does not bother about them. It requires a very unusual mind to undertake the analysis of the obvious...|$|R
5000|$|Interoperability is a {{critical}} issue for the disparate entities which use radiocommunications to fulfill the needs of organizations. Largely due to the ubiquity of 2G ALE, it became the primary method for providing interoperability on HF between governmental and non-governmental disaster relief and emergency communications entities, and amateur radio volunteers. With digital techniques increasingly employed in communications equipment, a universal digital calling standard was needed, and ALE filled the gap. Nearly every major HF radio manufacturer in the world builds ALE radios to the 2G standard to meet the high demand that new installations of HF radio systems conform to this standard protocol. Disparate entities that historically used incompatible radio methods were then able to call and converse with each other using the common 2G ALE platform. Some manufacturers and organizations [...] have utilized the AMD feature of ALE to expand the performance and connectivity. In some cases, this has been successful, and in other cases, the use of proprietary preamble or <b>embedded</b> <b>commands</b> has led to interoperability problems.|$|R
5000|$|Knowledge quality {{deals with}} {{procedural}} knowledge and information <b>embedded</b> in the <b>command</b> and control system such as templates for adversary forces, assumptions about entities such as ranges and weapons, and doctrinal assumptions, often coded as rules.|$|R
50|$|Speech Synthesis Markup Language (SSML) is an XML-based markup {{language}} for speech synthesis applications. It is a {{recommendation of the}} W3C's voice browser working group. SSML is often embedded in VoiceXML scripts to drive interactive telephony systems. However, it also may be used alone, such as for creating audio books. For desktop applications, other {{markup language}}s are popular, including Apple's <b>embedded</b> speech <b>commands,</b> and Microsoft's SAPI Text to speech (TTS) markup, also an XML language.|$|R
40|$|Wearable {{computers}} allow {{users to}} record and access information at any time. The adoption {{and use of}} such devices is largely dependent on the users’ acceptance of the technology. Previous studies investigated technology acceptance of wearables without having end-users directly trying the technology. The present paper aims at assessing the user acceptance of a wearable device to support cooking related activities, together with aspects of usability and experience of use. To this end, we developed a kitchen apron with <b>embedded</b> <b>commands</b> for navigating through {{the contents of a}} digital cookbook and asked a group of younger (N = 15, mean age 23. 9 SD = 2. 5) and older users (N = 15, mean age 30. 3 SD = 7. 6) to deploy it while preparing a recipe. Respondents’ opinions were collected using questionnaires after they had accomplished the cooking task required. Overall, the kitchen apron was well received by both younger and older adults. Findings suggest that the perceived usefulness of the device and the compatibility of it with users’ common activities accounted for the intention to adopt and use a wearable device in the kitchen...|$|R
40|$|This paper {{describes}} {{a set of}} programs for processing and printing the index for a book or a manual. The input consists of lines containing index terms and page numbers. The programs collect multiple occurrences of the same terms, compress runs of page numbers, create permutations (e. g., `index, book' from `book index'), and sort them into proper alphabetic order. The programs can cope with <b>embedded</b> formatting <b>commands</b> (size and font changes, etc.), with roman numeral page numbers, and with see terms. The programs do not help with the original creation of index terms...|$|R
5000|$|BASIC interpreters {{written in}} the Seventies tended to [...] "do odd things odd ways". For example, on the Apple II, a {{programmer}} could <b>embed</b> a <b>command</b> into a program via PRINT, when prefaced by the character string CHR$(4). PEEK and POKE {{could be used in}} various BASICs to examine memory content or change it, or even to create an ad hoc machine language program and then run it. System/36 BASIC tends to stay away from these odd conventions; however, the programmer could call for the Alarm (a buzzing sound made by the terminal) via PRINT CHR$(7).|$|R
5000|$|WordStar {{identified}} files {{as either}} [...] "document" [...] or [...] "nondocument," [...] {{which led to}} some confusion among users. [...] "Document" [...] referred to WordStar word processing files containing embedded word processing and formatting commands. [...] "Nondocument" [...] files were pure ASCII text files containing no <b>embedded</b> formatting <b>commands.</b> Using WordStar in [...] "Nondocument Mode" [...] was {{essentially the same as}} using a traditional text editor. WordStar 5 introduced a document-mode [...] "print preview" [...] feature, allowing the user to inspect a WYSIWYG version of text, complete with inserted graphics, as it would appear on the printed page.|$|R
50|$|An {{important}} part when <b>embedding</b> SQL database <b>commands</b> in application's code is the data exchange between application and database. For this purpose, host variables can be used. Host variables {{can be directly}} used from the embedded SQL code, {{so there is no}} need to generate SQL statements with values from the C code manually as string at the runtime.|$|R
40|$|Extending {{the method}} {{successful}} for one-loop integrals, the computation of two-loop diagrams with general internal masses is discussed. For the two-loop vertex of non-planar type, as an example, we show a calculation related to Z^ 0 → t t̅ vertex. Comment: 8 pages, latex with epsf. sty. 2 figures <b>embedded</b> with latex <b>command</b> and one postscript figure, revised version includes new reference...|$|R
5000|$|Since ECPG {{supports}} embedding SQL in the C programming language, it also indirectly supports embedding in the C++ programming language. The SQL {{parts are}} translated into C library calls. These are generated inside of an extern [...] "C" [...] clause, which provides linkage between modules written in different programming languages. Using ECPG with the C++ code has some limitations, since the ECPG preprocessor {{does not understand}} the specific syntax and reserved words in the C++ programming language. Usage of such syntax and words can lead to unexpected behaviour of the application. It is recommended to separate the <b>embedded</b> SQL <b>commands</b> in a linked C module, which will be linked and called from the C++ application.|$|R
5000|$|In the C Shell, {{arguments}} can be <b>embedded</b> {{inside the}} <b>command</b> using the string \!*. For example, with this alias: alias ls-more 'ls \!* | more'ls-more /etc /usr expands to ls /etc /usr | more {{to list the}} contents of the directories /etc and /usr, pausing after every screenful. Without \!*, [...] alias ls-more 'ls | more'would instead expand to ls | more /etc /usr which incorrectly attempts to open the directories in more.|$|R
