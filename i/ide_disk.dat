14|35|Public
5000|$|According to Andrew Balsa, {{around the}} time of the {{discovery}} of the F00F bug on Intel Pentium, Serguei Shtyliov from Moscow found a flaw in a Cyrix processor while developing an <b>IDE</b> <b>disk</b> driver in assembly language. Alexandr Konosevich, from Omsk, further researched the bug and coauthored an article with Uwe Post in the German technology magazine c't, calling it the [...] "hidden CLI bug" [...] (CLI is the instruction that disables interrupts in the x86 architecture). Balsa, as a member on the Linux-kernel mailing list, confirmed that the following C program could be compiled and run by an unprivileged user: ...|$|E
50|$|The company {{continues}} {{to develop and}} release new software. The hardware department now focusses more on Audio Acquisition and Format Converters (such as their iBox range). As of 2010, the Soundscape 32 system and iBox range was still available. One problem is that <b>IDE</b> <b>disk</b> drives have largely been replaced by SATA and the Soundscape 32 units cannot support them. The current focus is to utilise hard disks connected to the PC together with a Mixpander card, providing {{a way that the}} software can operate without relying on the external units. The latest range has focussed on MADI connections, but this is a relatively niche area.|$|E
40|$|A typical Beowulf system, such as {{the machine}} at the Jet Propulsion Laboratory (JPL), may {{comprise}} 16 nodes interconnected by 100 base T Fast Ethernet. Each node may include a single Inter Pentium Pro 200 MHz microprocessor, 128 MBytes of DRAM, 2. 5 GBytes of <b>IDE</b> <b>disk,</b> and PCI bus backplane, {{and an assortment of}} other devices...|$|E
5000|$|There {{were two}} {{processor}} options: Intel 486SL @ 25 MHz or 33 MHz. The 25-MHz model was available {{with either a}} 120-MB or 240-MB <b>IDE</b> hard <b>disk</b> drive, and the 33-MHz model had a 240-MB <b>IDE</b> hard <b>disk</b> drive. Both models had a built in 3.5" [...] 1.44-MB floppy disk drive.|$|R
50|$|These systems used {{standard}} ISA-bus architecture, SVGA {{graphics and}} <b>IDE</b> hard <b>disks.</b> Later models introduced VESA Local Bus and PCI.|$|R
50|$|The Network Adaptor also {{provides}} a Parallel ATA interface and a Molex disk drive power connector to allow installation of a 3.5 in <b>IDE</b> hard <b>disk</b> drive in the expansion bay.|$|R
40|$|High energy physics {{experiments}} are currently recording {{large amounts of}} data {{and in a few}} years will be recording prodigious quantities of data. New methods must be developed to handle this data and make analysis at universities possible. We examine some techniques that exploit recent developments in commodity hardware. We report on tests of redundant arrays of integrated drive electronics (<b>IDE)</b> <b>disk</b> drives for use in offline high energy physics data analysis. IDE redundant array of inexpensive disks (RAID) prices now are less than the cost per terabyte of million-dollar tape robots! The arrays can be scaled to sizes affordable to institutions without robots and used when fast random access at low cost is important. 1...|$|E
40|$|It {{is widely}} {{believed}} that the IDE disks found in PCs are inexpensive but slow, whereas the SCSI disks used in servers and workstations are faster, more reliable, and more manageable. The belief that current IDE disks have performance and reliability disadvantages has been called into question by several recent reports. Thus we consider the possibility of achieving tremendous cost advantages by using IDE disks {{as the foundation of}} a storage system. In this paper, we give an extensive performance comparison of IDE and SCSI disks. We measure their performance on a variety of micro benchmarks and macro benchmarks, and we explain these results with the help of kernel instrumentation and device activity traces collected by a SCSI analyzer. We consider the impact of several factors, including sequential vs. random workloads, file system enhancements such as journaling and Soft Updates, I/O scheduling in the kernel vs. in the disk drive (as enabled by tagged queuing), and the use of RAID technology to obtain I/O parallelism. In our testbed we find that the <b>IDE</b> <b>disk</b> is faster than the SCSI disk for sequential I/O, but the SCSI disk is faster for random I/O. We also observe that the random I/O performance deficit of the <b>IDE</b> <b>disk</b> is partly overcome by kernel I/O scheduling, and is further mitigated by scheduling in the drive (as enabled by tagged queuing), and by the use of journaling and Soft Updates. Taken as a whole, our results lead us to conclude that RAID systems based on IDE drives can be both faster and significantly less expensive than SCSI RAID systems. ...|$|E
40|$|Abstract â€” The next {{generation}} of high-energy physics experiments is expected to gather prodigious amounts of data. New methods must be developed to handle this data and make analysis at universities possible. We examine some techniques that use recent developments in commodity hardware. We test redundant arrays of integrated drive electronics (<b>IDE)</b> <b>disk</b> drives for use in offline high-energy physics data analysis. IDE redundant array of inexpensive disks (RAID) prices now equal the cost per terabyte of million-dollar tape robots! The arrays can be scaled to sizes affordable to institutions without robots and used when fast random access at low cost is important. We also explore three methods of moving data between sites; internet transfers, hot pluggable IDE disks in FireWire cases, and writable digital video disks (DVD-R) ...|$|E
50|$|NASLite runs well on {{obsolete}} hardware, but requires {{at least}} a computer with PCI interface. Other minimum requirements are a 486DX or Pentium CPU, 16 MB RAM, a PCI Ethernet card, <b>IDE</b> hard <b>disk</b> drive, and a floppy disk drive.|$|R
5000|$|... 2.06 (ST/STE TOS) Last TOS {{version for}} ST/STE computers. Bug fixes, 1.44 MB disk support, memory test. Adds GTP program support (GEM-Takes-Parameters). Greatly {{enhanced}} GEM GUI. <b>IDE</b> hard <b>disk</b> booting. Atari logo display at boot-up. Automatic cold boot memory test. Supports higher resolutions.|$|R
50|$|The ISP {{was based}} upon the Red Hat Linux 5 {{operating}} system which was the fastest {{at that time and}} Microsoft Windows NT 3.51. Later on it was upgraded to Windows NT 4 and Red Hat Linux 6 and, a radius server was implemented by Clint Sim, their administrator at that time. Unfortunately, Clint and his wife who were fatally injured in a car accident in 2004, survived by their two sons. The computer servers' hardware was basd upon Dual Intel pentium processor boards with 64 MB of RAM linked to RAID ARRAYS of SCSI disks. This type of hard drive was chosen for its independent processor usage which presented performance enhancements over the use of <b>IDE</b> <b>disks</b> which used the computer's CPU to function.|$|R
40|$|Project (M. S., Computer Engineering) [...] California State University, Sacramento, 2013. Operating Systems {{are one of}} the {{critical}} architectural components every Computer Engineering Student should be aware of. Most Operating System course-work is strong on theory and weak on practical. Operating System Pragmatics CSC 159 course at CSUS explains the fundamental principles in great detail, including process management, inter-process communication, semaphores, message passing, input/output, character device drivers, memory management, interrupts, paging and virtual memory. The main aspect of this project is to add an Interface for File Systems and Disk Drivers to the existing course-work model. This project is an extension of existing kernel module designed from the course work CSC 159. The File System Design for this project will be based on collective knowledge gathered during research with many open source File Systems. The Project comprises three stages in development. Each stage includes completion and loading of a module in to the kernel. In stage one, Device Driver for <b>IDE</b> <b>Disk</b> is designed. Both the Interrupt and Busy Polling Mechanisms are used for obtaining status of IDE drive, reading data and writing data. Timer Synchronization and Buffer Management plays an important role to be considered for the design. In stage two, FAT 16 File System is designed with basic design taken from an embedded system file system. The Boot Block, FAT Area, Data Area are all manually set by the File System Initialization Routine. The Total Capacity of the File System is also set manually. The above two stages are involved in modules that are considered as part of the existing Operating System, but in the final stage, specific tools are created for loading files to disks apart from operating on the designed existing kernel modules. This feature helps the instructors to load files to the <b>IDE</b> <b>Disk</b> without the operating system being run. This feature is planned to be used in case of emergencies like accidental meta-data over write or kernel crashes. Computer Engineerin...|$|E
40|$|The next {{generation}} of high-energy physics experiments is expected to gather prodigious amounts of data. New methods must be developed to handle this data and make analysis at universities possible. We examine some techniques that use recent developments in commodity hardware. We test redundant arrays of integrated drive electronics (<b>IDE)</b> <b>disk</b> drives for use in offline high-energy physics data analysis. IDE redundant array of inexpensive disks (RAID) prices now equal the cost per terabyte of million-dollar tape robots! The arrays can be scaled to sizes affordable to institutions without robots and used when fast random access at low cost is important. We also explore three methods of moving data between sites; internet transfers, hot pluggable IDE disks in FireWire cases, and writable digital video disks (DVD-R). Comment: Submitted to IEEE Transactions On Nuclear Science, for the 2001 IEEE Nuclear Science Symposium and Medical Imaging Conference, 8 pages, 1 figure, uses IEEEtran. cls. Revised March 19, 2002 and published August 200...|$|E
40|$|We report {{tests of}} {{redundant}} arrays of <b>IDE</b> <b>disk</b> drives {{for use in}} offline high energy physics data analysis. Parts costs of total systems using commodity EIDE disks are now at the $ 4000 per Terabyte level. Disk storage prices have now decreased {{to the point where}} they equal the cost per Terabyte of Storage Technology tape silos. The disks, however, offer far better granularity; even small institutions can afford to deploy systems. Our tests include reports on software RAID- 5 systems running under Linux 2. 4 using Promise Ultra 100 TM disk controllers. RAID- 5 protects data in case of a single disk failure by providing parity bits. Tape backup is not required. Journaling file systems are used to allow rapid recovery from crashes. Our data analysis strategy is to encapsulate data and CPU processing power. Analysis for a particular part of a data set takes place on the PC where the data resides. The network is only used to put results together. We explore three methods of moving data between sites; internet transfers, hot pluggable IDE disks in FireWire cases, and DVD-R disks...|$|E
50|$|The SAM used Citizen 3.5 inch {{slimline}} drives which slotted in {{below the}} keyboard to provide front-facing slots. Like <b>IDE</b> hard <b>disks,</b> these enclosures contained {{not just the}} drives but also the drive controllers, a WD1772-02, with {{the effect that the}} SAM could use both drives simultaneously.|$|R
5000|$|Linux {{and similar}} {{operating}} systems designate <b>IDE</b> hard <b>disks</b> as [...] {{for the first}} hard disk, [...] for the second hard disk, and so on. Likewise SCSI and in later kernels also IDE and SATA hard disks are identified as [...] for the first disk, etc.|$|R
50|$|In 1997 the Soundscape R.Ed {{system was}} {{released}} which offered 32 tracks per units {{at up to}} 24bit 96 kHz and had two removable and two fixed drive bays. <b>IDE</b> <b>disks,</b> which at first had been ridiculed by many as non-professional, nevertheless had dominated the PC market and were approximately half the price of SCSI. The system could now contain a massive amount of inexpensive storage and was as reliable as ever. The limitation of the system compared to the market leader Pro Tools, {{had always been the}} amount of DSP power available for mixing and effects, but in 2000, this was removed with the launch of the Mixpander card, which added 9 of the latest super powerful Motorola 563xx DSPs to the system, connected via a fast bus, and so finally a vast amount of real-time DSP processing power was available.|$|R
40|$|This paper {{introduces}} a research about parallelization {{of an entire}} application of Document-Categorization. The objective of this parallel computing research is to obtain a parallelization that can be successfully used on low cost and largely diffused multiprocessor PCs (not only on powerful and expensive supercomputers), and without {{any change in the}} input, output and user interface of the application (under Windows OS). This is a first step toward a parallelization on a cluster of multiprocessor PC, a more generic and still low cost parallel architecture. In this article, we describe parallel algorithms and programming technics we have designed to reach good performances on low cost but limited PC architecture. This leads us to introduce different parallelization strategies, for the different parts of the application, dealing with numerous disk accesses and the variety of configurations chosen by the users. Each parallelization is described and evaluated, and global performances of the final mix are introduced on 4 -processor PC with SCSI disk technology and on a more recent 2 -processor PC with <b>IDE</b> <b>disk</b> technology, leading to different but significant decreases of execution time. Then we can upgrade regularly our parallel machines to remain competitive compared to new sequential machines, because their low cost allows frequent upgrade and we always reach interesting speed up. The chosen application has been first designed to easily evaluate some classification algorithms (useful to Text-Mining researchers), and second to detect errors in previous manually categorizations and to advise some changes (useful to end-users) ...|$|E
40|$|International audienceTo keep up {{with the}} frantic pace at which devices come out, drivers need to be quickly developed, {{debugged}} and tested. Although a driver is a critical system component, the driver development process has made little (if any) progress. The situation is particularly disastrous when considering the hardware operating code (i. e.,) the layer interacting with the device). Writing this code often relies on an inaccurate or incomplete device documentation and involves assembly-level operations. As a result, hardware operating code is tedious to write, prone to errors, and hard to debug and maintain. This paper presents a new approach to developing hardware operating code based on an Interface Definition Language (IDL) for hardware functionalities, named Devil. This IDL allows a high-level definition of the communication with a device. A compiler automatically checks the consistency of a Devil definition and generates efficient low-level code. Our contributions are as follows. We introduce an expressive language to specify hardware operating layers. This expressiveness is demonstrated by the wide variety of devices that we have already specified in Devil: mouse, sound, DMA, interrupt, Ethernet, video, and <b>IDE</b> <b>disk</b> controllers. The long-awaited notion of robustness for hardware operating code is made possible by the Devil compiler which checks safety critical properties. An experimental study comparing hardware operating code in C to that generated from Devil demonstrates that writing a Devil specification is up to 5. 9 times less prone to errors than writing C code, with minor (if any) loss in performance...|$|E
5000|$|The uIEC {{firmware}} provides emulation of the Commodore 1541 {{disk drive}} on the uIEC adapter, providing access to either an <b>IDE</b> hard <b>disk,</b> a CF memory card or a SD memory card, depending on the version, {{but it has been}} superseded by a port of the sd2iec firmware to the uIEC hardware in 2008.|$|R
40|$|This {{paper is}} an {{empirical}} {{study of the}} random and sequential I/O performance of Windows 2000 using the NT File System. It continues the work done by Riedel, et. al. in their 1997 paper exploring sequential IO performance under Windows NT 4. 0. This paper explores the performance and overhead of today's Intel Pentium III based memory and IO subsystems, including the processor bus, the PCI bus, the disk controllers, the SCSI and IDE buses, and the disk media. It also examines the performance available from IDE RAID, a relatively new technology built from inexpensive <b>IDE</b> <b>disks.</b> Network IO performance is briefly covered. We describe how to achieve good throughput, and discuss the major bottlenecks. While Riedel's model of software performance remains largely unchanged, increases in hardware performance have made the 32 bit, 33 MHz PCI bus the dominant bottleneck reaching saturation with three disks...|$|R
50|$|Intel Hub Architecture (IHA) was Intel's {{architecture}} for the 8xx {{family of}} chipsets, starting c. 1999 with the Intel 810. It uses a memory controller hub (MCH) that {{is connected to}} an I/O Controller Hub (ICH) via a 266 MB/s bus. The MCH chip supports memory and AGP, while the ICH chip provides connectivity for PCI, USB, sound, <b>IDE</b> hard <b>disks</b> and LAN.|$|R
40|$|High-density NAND {{flash storage}} has become {{relatively}} inexpensive {{due to the}} popularity of various consumer electronics. Recently, several manufacturers have released IDE-compatible NAND flash-based drives in sizes up to 64 GB at reasonable (sub-$ 1000) prices. Because flash is significantly more durable than mechanical hard drives and requires considerably less energy, there is some speculation that large data centers will adopt these devices. As database workloads make up a substantial fraction of the processing done by data centers, {{it is interesting to}} ask how switching to flash-based storage will affect the performance of database systems. We evaluate this question using IDE-based flash drives from two major manufacturers. We measure their read and write performance and find that flash has excellent random read performance, acceptable sequential read performance, and quite poor write performance compared to conventional <b>IDE</b> <b>disks.</b> We then consider how standard database algorithms are affected by these performance characteristics and find that the fast random read capability dramatically improves the performance o...|$|R
50|$|The system {{consisted}} of an external 2U rack unit which housed the audio processing hardware, based on Motorola 56000 family DSPs, 2 inputs and 4 outputs in both unbalanced analogue and S/PDIF digital and two <b>IDE</b> hard <b>disk</b> drives. Synchronisation was via MIDI in/out/thru via MIDI Timecode and an optional I/O board provided balanced analogue and AES/EBU connections. Each unit could record and play 4 tracks of 16bit 48kHz audio but later software upgrades increase this to 8 tracks.|$|R
50|$|The device (like the Amiga A590 {{hard disk}} drive that was sold by Commodore for the A500) had no through connector, {{so it was not}} {{possible}} to connect both an A590 and an A570 to the computer at the same time. The A590, despite having an XT <b>IDE</b> hard <b>disk,</b> also carried a SCSI interface that allowed third-party hard disks and CD-ROM drives to be fitted. While these drives did not carry CDTV emulation, the lack of success of this format did not restrict this option.|$|R
50|$|The I/O systems {{underwent}} huge {{changes during}} the PDP-8 era. Early PDP-8 models used a front panel interface, a paper-tape reader and a teletype printer with an optional paper-tape punch. Over time I/O {{systems such as}} magnetic tape, RS-232 and current loop dumb terminals, punched card readers, and fixed-head disks were added. Toward {{the end of the}} PDP-8 era, floppy disks and moving-head cartridge disk drives were popular I/O devices. Modern enthusiasts have created standard PC style <b>IDE</b> hard <b>disk</b> adapters for real and simulated PDP-8 computers.|$|R
50|$|One feature, called Power-up in standby (PUIS) (also called PM2) {{is used on}} some Serial ATA (SATA) and Parallel ATA (sometimes called PATA or <b>IDE)</b> hard <b>disk</b> drives. PUIS {{requires}} BIOS and/or driver {{support to}} use. When power {{is applied to the}} hard disk drive, the drive will not spin-up until a PUIS Spin-Up command is issued. The computer system BIOS or RAID controller must issue the command to tell the drive(s) to spin-up before they can be accessed. PUIS can be enabled by tools such as hdparm for drives which support this feature.|$|R
40|$|High-energy physics {{experiments}} are currently recording {{large amounts of}} data {{and in a few}} years will be recording prodigious quantities of data. New methods must be developed to handle this data and make analysis at universities possible. Grid Computing is one method; however, the data must be cached at the various Grid nodes. We examine some storage techniques that exploit recent developments in commodity hardware. Disk arrays using RAID level 5 (RAID- 5) include both parity and striping. The striping improves access speed. The parity protects data {{in the event of a}} single disk failure, but not in the case of multiple disk failures. We report on tests of dual-processor Linux Software RAID- 5 arrays and Hardware RAID- 5 arrays using a 12 -disk 3 ware controller, in conjunction with 250 and 300 GB disks, for use in offline high-energy physics data analysis. The price of <b>IDE</b> <b>disks</b> is now less than $ 1 /GB. These RAID- 5 disk arrays can be scaled to sizes affordable to small institutions and used when fast random access at low cost is important. Comment: Talk from the 2004 Computing in High Energy and Nuclear Physics (CHEP 04), Interlaken, Switzerland, 27 th September - 1 st October 2004, 4 pages, LaTeX, uses CHEP 2004. cls. ID 47, Poster Session 2, Track...|$|R
5000|$|The system {{consisted}} of an external 2U rack unit which housed the audio processing hardware, based on Motorola 563xx family DSPs, 24 inputs and 24 outputs via TDIF digital ports and four <b>IDE</b> hard <b>disk</b> drives (two internal and two with removable trays). Synchronization {{for the basic}} unit was via MIDI in/out/thru via MIDI Timecode and an optional Timecode Sync board provided video sync, and LTC in/out. An I/O board provided additional balanced analogue and AES3 connections (2 in, 4 out). Each unit could record and play 32 tracks of 24bit 48 kHz audio or 16 tracks of 24/96.|$|R
40|$|One of {{the common}} anecdotal {{complaints}} used when defending the insecure erasure of hard disks is {{the length of time}} taken to affect a secure erasure. This paper discusses results of experiments conducted with Unix/Linux based hard disk wiping software when run on various machines and hard disk mechanisms in terms of size, speed and interface. The initial research has uncovered a range of issues and factors that affect the speed of erasure of hard disk mechanisms. Some of these factors included memory configuration and CPU but not in ways that were expected. This paper includes results from contemporary ATA and the newer SATA <b>IDE</b> hard <b>disk</b> drives in use today...|$|R
5000|$|The system's {{case was}} {{extremely}} compact. The CD-ROM or DVD-ROM drive was a laptop-type unit with a custom bezel, but its internal <b>IDE</b> hard <b>disk</b> drive was a standard 3.5" [...] drive.The system also {{made use of}} Mini PCI, another standard typically found on laptop computers, for its communications card. It did however use standard SDRAM modules for memory. The case measured only 6 inches wide, 10.7 inches high, 10.1 inches deep and weighed a maximum of about 12 pounds. It also featured a unique [...] "e-support" [...] button that caused the computer to run diagnostic tests and also allowed quick access to online technical support.|$|R
40|$|The AT 91 SAM 9263 32 -bit microcontroller, {{based on}} the ARM 926 EJ-S processor, is architectured on a 9 -layer matrix, {{allowing}} a maximum internal bandwidth of nine 32 -bit buses. It also features two independent external memory buses, EBI 0 and EBI 1, capable of interfacing {{with a wide range}} of memory devices and an <b>IDE</b> hard <b>disk.</b> Two external buses prevent bottlenecks, thus guaranteeing maximum performance. The AT 91 SAM 9263 embeds an LCD Controller supported by a Two D Graphics Con-troller and a 2 -channel DMA Controller, and one Image Sensor Interface. It also integrates several standard peripherals, such as USART, SPI, TWI, Timer Counters, PWM Generators, Multimedia Card interface and one CAN Controller...|$|R
50|$|The ThinkPad 800 Series (800/820/821/822/823/850/851/860) were unique as {{they were}} based on the PowerPC {{architecture}} rather than the Intel x86 architecture. Most of the 800 Series laptops used the PowerPC 603e CPU, at speeds of 100 MHz, or 166 MHz in the 860 model, although the earliest 800 (Type 6020), the direct ancestor of the 850, used a 603 and was apparently only offered to developers. All units used SCSI-2 instead of <b>IDE</b> hard <b>disks,</b> and the ID of every SCSI device on the system could be configured in the cursor driven GUI-based BIOS. Another unusual aspect of the series is their unique startup chime, reminiscent of Apple Macintosh computers of the time.|$|R
5000|$|The IT8212, or more {{correctly}} the IT8212F, is a low-end Parallel ATA controller {{designed by}} ITE Tech. Depending on the implemented BIOS and configuration the IT8212F functions {{in either a}} RAID or an ATAPI mode, supporting up to four devices using dual channels. The raid mode only supports <b>IDE</b> Hard <b>Disk</b> Drives and includes RAID 0, RAID 1, Raid 0+1 and JBOD, along with a [...] "normal" [...] mode that essentially acts as a standard Hard Disk controller. Optical disk drives such as CD-ROM and DVD drives are supported by the ATAPI mode, which also supports Hard Disk Drives {{at the loss of}} all RAID functions. RAID functions are implemented by an embedded microprocessor, thus is not a so-called [...] "Soft raid" [...] controller.|$|R
40|$|High-density NAND {{flash storage}} has become {{relatively}} inexpensive {{due to the}} popularity of various consumer electronics. Recently, several manufacturers have released IDE-compatible NAND flash-based drives in sizes up to 64 GB at reasonable (sub-$ 1000) prices. Because flash is significantly more durable than mechanical hard drives and requires considerably less energy, there is some speculation that large data centers will adopt these devices. As database workloads make up a substantial fraction of the processing done by data centers, {{it is interesting to}} ask how switching to flash-based storage will affect the performance of database systems. We evaluate this question using IDE-based flash drives from two major manufacturers. We measure their read and write performance and find that flash has excellent random read performance, acceptable sequential read performance, and quite poor write performance compared to conventional <b>IDE</b> <b>disks.</b> We then consider how standard database algorithms are affected by these performance characteristics and find that the fast random read capability dramatically improves the performance of secondary indexes and index-based join algorithms. We next investigate using logstructured filesystems to mitigate the poor write performance of flash and find an 8. 2 x improvement in random write performance, but at the cost of a 3. 7 x decrease in random read performance. Finally, we study techniques for exploiting the inherent parallelism of multiple-chip flash devices, and we find that adaptive coding strategies can yield a 2 x performance improvement over static ones. We conclude that in many cases flash disk performance is still worse than on traditional drives and that current flash technology may not yet be mature enough for widespread database adoption if performance is a dominant factor. Finally, we briefly speculate how this landscape may change based on expected performance of next-generation flash memories. by Daniel Myers. Thesis (S. M.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2008. Includes bibliographical references (p. 47 - 49) ...|$|R
