5136|7452|Public
5|$|An {{oriented}} coloring of a <b>directed</b> <b>graph</b> is a homomorphism {{into any}} oriented graph.|$|E
5|$|A path in a <b>directed</b> <b>graph</b> can be {{described}} by a sequence of edges having the property that the ending vertex of each edge in the sequence {{is the same as}} the starting vertex of the next edge in the sequence; a path forms a cycle if the starting vertex of its first edge equals the ending vertex of its last edge. A directed acyclic graph is a <b>directed</b> <b>graph</b> that has no cycles.|$|E
5|$|An {{orientation}} of an undirected graph G is any <b>directed</b> <b>graph</b> obtained by choosing {{one of the}} two possible orientations for each edge.|$|E
40|$|In this paper, we {{consider}} terminal reflexive polytopes arising from finite <b>directed</b> <b>graphs</b> {{and study the}} problem of deciding which <b>directed</b> <b>graphs</b> yield smooth Fano polytopes. We show that any centrally symmetric or pseudo-symmetric smooth Fano polytopes {{can be obtained from}} <b>directed</b> <b>graphs.</b> Moreover, by using <b>directed</b> <b>graphs,</b> we provide new examples of smooth Fano polytopes whose corresponding varieties admit Kähler [...] Einstein metrics. Comment: 13 pages, 4 figure...|$|R
40|$|AbstractWe {{consider}} the normalized Laplace operator for <b>directed</b> <b>graphs</b> with {{positive and negative}} edge weights. This generalization of the normalized Laplace operator for undirected graphs is used to characterize <b>directed</b> acyclic <b>graphs.</b> Moreover, we identify certain structural properties of the underlying graph with extremal eigenvalues of the normalized Laplace operator. We prove comparison theorems that establish {{a relationship between the}} eigenvalues of <b>directed</b> <b>graphs</b> and certain undirected graphs. This relationship is used to derive eigenvalue estimates for <b>directed</b> <b>graphs.</b> Finally we introduce the concept of neighborhood <b>graphs</b> for <b>directed</b> <b>graphs</b> and use it to obtain further eigenvalue estimates...|$|R
40|$|We {{consider}} the normalized Laplace operator for <b>directed</b> <b>graphs</b> with {{positive and negative}} edge weights. This generalization of the normalized Laplace operator for undirected graphs is used to characterize <b>directed</b> acyclic <b>graphs.</b> Moreover, we identify certain structural properties of the underlying graph with extremal eigenvalues of the normalized Laplace operator. We prove comparison theorems that establish {{a relationship between the}} eigenvalues of <b>directed</b> <b>graphs</b> and certain undirected graphs. This relationship is used to derive eigenvalue estimates for <b>directed</b> <b>graphs.</b> Finally we introduce the concept of neighborhood <b>graphs</b> for <b>directed</b> <b>graphs</b> and use it to obtain further eigenvalue estimates. Comment: 40 pages, 3 figure...|$|R
5|$|Any <b>directed</b> <b>graph</b> may be {{made into}} a DAG by {{removing}} a feedback vertex set or a feedback arc set, a set of vertices or edges (respectively) that touches all cycles. However, the smallest such set is NP-hard to find. An arbitrary <b>directed</b> <b>graph</b> may also be transformed into a DAG, called its condensation, by contracting each of its strongly connected components into a single supervertex. When the graph is already acyclic, its smallest feedback vertex sets and feedback arc sets are empty, and its condensation is the graph itself.|$|E
5|$|Every graph {{and every}} <b>directed</b> <b>graph</b> {{contains}} its core as a retract {{and as an}} induced subgraph.|$|E
5|$|However, {{the same}} {{definitions}} apply to directed graphs and a <b>directed</b> <b>graph</b> is also {{equivalent to a}} unique core.|$|E
5000|$|<b>Directed</b> acyclic <b>graphs</b> (DAGs) are <b>directed</b> <b>graphs</b> with no <b>directed</b> cycles.|$|R
5000|$|If bn counts <b>directed</b> <b>graphs</b> whose edges (rather than vertices) are a given n point set, then an counts {{connected}} <b>directed</b> <b>graphs</b> {{with this}} edge s ...|$|R
40|$|Global COE Program Education-and-Research Hub for Mathematics-for-IndustryグローバルCOEプログラム「マス･フォア･インダストリ教育研究拠点」Energy {{has been}} studied in {{mathematical}} perspective {{as well as physical}} perspective for several years ago. In spectral graph theory, the eigenvalues of several kinds of matrices have been studied, of which Laplacian matrix attracted the greatest attention [5]. Recently, in 2009, Adiga considered Laplacian energy of <b>directed</b> <b>graphs</b> using skew Laplacian matrix, in which degree of vertex is considered as total of the out-degree and the in-degree. Since <b>directed</b> <b>graphs</b> {{play an important role in}} identifying the structure of web-graphs as well as communication graphs, we consider Laplacian energy of simple <b>directed</b> <b>graphs</b> and find some relations by using the general definition of Laplacian matrix. Unlike in [1], we derived two types of equations for simple <b>directed</b> <b>graphs</b> and symmetric <b>directed</b> <b>graphs</b> with $n ≥ 2 $ vertices by considering out-degree of vertex. Further we consider the class $P(alpha) $ which consists of non isomorphic graphs with energy less than some $alpha$ and find 47 non isomorphic <b>directed</b> <b>graphs</b> for class $P(10) $. Our objective extended to enumerate the structure of <b>directed</b> <b>graphs</b> using the Laplacian energy concept. Minimization maximum outdegree(MMO) algorithm defined in [3] can be used to find the <b>directed</b> <b>graphs</b> with minimum Laplacian energy...|$|R
5|$|Theorem (Feder, Vardi 1998): For every {{constraint}} language Γ, {{the problem}} CSP(Γ) is equivalent under polynomial-time reductions to some H-coloring problem, for some <b>directed</b> <b>graph</b> H.|$|E
5|$|A {{folklore}} theorem {{states that}} for all k, a <b>directed</b> <b>graph</b> G has a homomorphism to k {{if and only if}} it admits no homomorphism from the directed path k + 1.|$|E
5|$|A graph {{is formed}} by a {{collection}} of vertices and edges, where the vertices are structureless objects that are connected in pairs by edges. In {{the case of a}} <b>directed</b> <b>graph,</b> each edge has an orientation, from one vertex to another vertex.|$|E
40|$|We {{introduce}} a new concept of chromatic number for <b>directed</b> <b>graphs,</b> called the colour number {{and use it to}} upper bound the transitive clique number and the Sperner capacity of arbitrary <b>directed</b> <b>graphs.</b> Our results represent a common generalization of previous bounds of Alon and the second author and lead to a concept of perfectness for <b>directed</b> <b>graphs...</b>|$|R
5000|$|The graph [...] {{that remains}} after {{removing}} [...] from [...] is an induced forest (resp. an induced <b>directed</b> acyclic <b>graph</b> {{in the case}} of <b>directed</b> <b>graphs).</b> Thus, finding a minimum feedback vertex set in a graph is equivalent to finding a maximum induced forest (resp. maximum induced <b>directed</b> acyclic <b>graph</b> {{in the case of}} <b>directed</b> <b>graphs).</b>|$|R
40|$|Abstract—In Part I of {{this work}} we defined a {{generalization}} {{of the concept of}} effective resistance to <b>directed</b> <b>graphs,</b> and we explored some of the properties of this new definition. Here, we use the theory developed in Part I to compute effective resistances in some prototypical <b>directed</b> <b>graphs.</b> This exploration highlights cases where our notion of effective resistance for <b>directed</b> <b>graphs</b> behaves analogously to our experience from undirected graphs, as well as cases where it behaves in unexpected ways. Index Terms—Graph theory, networks, networked control systems, <b>directed</b> <b>graphs,</b> effective resistance I...|$|R
5|$|A polytree is a <b>directed</b> <b>graph</b> {{formed by}} {{orienting}} {{the edges of}} a free tree. Every polytree is a DAG. In particular, {{this is true of}} the arborescences formed by directing all edges outwards from the roots of a tree.|$|E
5|$|A topological {{ordering}} of a <b>directed</b> <b>graph</b> is an {{ordering of}} its vertices into a sequence, such {{that for every}} edge the start vertex of the edge occurs earlier in the sequence than the ending vertex of the edge.|$|E
5|$|Here n is the <b>directed</b> <b>graph</b> with {{vertices}} 1, 2, …, n and edges from i to i + 1, for i = 1, 2, …, n − 1.|$|E
5000|$|Symmetric <b>directed</b> <b>graphs</b> are <b>directed</b> <b>graphs</b> {{where all}} edges are bidirected (that is, for every arrow {{that belongs to}} the digraph, the {{corresponding}} inversed arrow also belongs to it).|$|R
40|$|AbstractMotion {{planning}} {{is a fundamental}} problem of robotics with applications {{in many areas of}} computer science and beyond. Its restriction to graphs has been investigated in the literature, for it allows one to concentrate on the combinatorial problem abstracting from geometric considerations. In this paper, we consider motion planning over <b>directed</b> <b>graphs,</b> which are of interest for asymmetric communication networks. <b>Directed</b> <b>graphs</b> generalize undirected graphs, while introducing a new source of complexity to the motion planning problem: moves are not reversible. We first consider the class of acyclic <b>directed</b> <b>graphs</b> and show that the feasibility can be solved in time linear in the product of the number of vertices and the number of arcs. We then turn to strongly connected <b>directed</b> <b>graphs.</b> We first prove a structural theorem for decomposing strongly connected <b>directed</b> <b>graphs</b> into strongly biconnected components. Based on the structural decomposition, we show that the feasibility of motion planning on strongly connected <b>directed</b> <b>graphs</b> can be decided in linear time...|$|R
5000|$|Weighted <b>{{directed}}</b> <b>graphs</b> (also {{known as}} directed networks) are (simple) <b>directed</b> <b>graphs</b> with weights assigned to their arrows, similarly to weighted graphs (which are {{also known as}} undirected networks or weighted networks).|$|R
5|$|Like the {{transitive}} closure, the transitive {{reduction is}} uniquely defined for DAGs. In contrast, for a <b>directed</b> <b>graph</b> {{that is not}} acyclic, there can {{be more than one}} minimal subgraph with the same reachability relation.|$|E
5|$|Important {{polynomial}} time computational problems on DAGs include topological sorting (finding a topological ordering), {{construction of the}} transitive closure and transitive reduction (the largest and smallest DAGs with the same reachability relation, respectively), and the closure problem, in which {{the goal is to}} find a minimum-weight subset of vertices with no edges connecting them {{to the rest of the}} graph. Transforming a <b>directed</b> <b>graph</b> with cycles into a DAG by deleting as few vertices or edges as possible (the feedback vertex set and feedback edge set problem, respectively) is NP-hard, but any <b>directed</b> <b>graph</b> can be made into a DAG (its condensation) by contracting each strongly connected component into a single supervertex. The problems of finding shortest paths and longest paths can be solved on DAGs in linear time, in contrast to arbitrary graphs for which shortest path algorithms are slower and longest path problems are NP-hard.|$|E
5|$|It is also {{possible}} to check whether a given <b>directed</b> <b>graph</b> is a DAG in linear time, either by attempting to find a topological ordering and then testing for each edge whether the resulting ordering is valid or alternatively, for some topological sorting algorithms, by verifying that the algorithm successfully orders all the vertices without meeting an error condition.|$|E
40|$|AbstractFor a {{homomorphism}} between <b>directed</b> <b>graphs</b> G 1 and G 2, its extension is {{the mapping}} {{of the set}} of all paths in G 1 into the set of all paths in G 2 obtained by naturally extending it. We investigate the properties of uniformly finite-to-one and onto extensions of homomorphisms of <b>directed</b> <b>graphs,</b> essentially the properties of uniformly finite-to-one and onto extensions of homomorphisms between strongly connected <b>directed</b> <b>graphs.</b> We also describe applications of our results on homomorphisms of <b>directed</b> <b>graphs</b> {{to the theory of}} a class of symbolic flows called subshifts of finite type...|$|R
40|$|Motion {{planning}} {{is a fundamental}} problem of robotics with applications {{in many areas of}} computer science and beyond. Its restriction to graphs has been investigated in the literature for it allows to concentrate on the combinatorial problem abstracting from geometric considerations. In this paper, we consider motion planning over <b>directed</b> <b>graphs,</b> which are of interest for asymmetric communication networks. <b>Directed</b> <b>graphs</b> generalize undirected graphs, while introducing a new source of complexity to the motion planning problem: moves are not reversible. We first consider the class of acyclic <b>directed</b> <b>graphs</b> and show that the feasibility can be solved in time linear in the product of the number of vertices and the number of arcs. We then turn to strongly connected <b>directed</b> <b>graphs.</b> We first prove a structural theorem for decomposing strongly connected <b>directed</b> <b>graphs</b> into strongly biconnected components. Based on the structural decomposition, we give an algorithm for the feasibility of motion planning on strongly connected <b>directed</b> <b>graphs,</b> and show that it can also be decided in time linear in the product of the number of vertices and the number of arcs. ...|$|R
500|$|... used book {{embedding}} {{to study}} the computational complexity theory of the reachability problem in <b>directed</b> <b>graphs.</b> As they have observed, reachability for two-page <b>directed</b> <b>graphs</b> may be solved in unambiguous logarithmic space (the analogue, for logarithmic space complexity, of the class UP of unambiguous polynomial-time problems). However, reachability for three-page <b>directed</b> <b>graphs</b> requires the full power of nondeterministic logarithmic space. Thus, book embeddings seem intimately connected with the distinction between these two complexity classes.|$|R
5|$|A third, more {{graphical}} way {{of describing}} a 2-satisfiability instance is as an implication graph. An implication graph is a <b>directed</b> <b>graph</b> {{in which there}} is one vertex per variable or negated variable, and an edge connecting one vertex to another whenever the corresponding variables are related by an implication in the implicative normal form of the instance. An implication graph must be a skew-symmetric graph, meaning that it has a symmetry that takes each variable to its negation and reverses the orientations of all of the edges.|$|E
5|$|Instances of the 2-satisfiability problem are {{typically}} expressed as Boolean formulas {{of a special}} type, called conjunctive normal form (2-CNF) or Krom formulas. Alternatively, they may be expressed as a special type of <b>directed</b> <b>graph,</b> the implication graph, which expresses the variables of an instance and their negations as vertices in a graph, and constraints on pairs of variables as directed edges. Both {{of these kinds of}} inputs may be solved in linear time, either by a method based on backtracking or by using the strongly connected components of the implication graph.|$|E
5|$|The pseudoarboricity of a graph G {{is defined}} by analogy to the arboricity as the minimum number of pseudoforests into which its edges can be partitioned; equivalently, it is the minimum k such that G is (k,0)-sparse, or the minimum k such that the edges of G can be {{oriented}} to form a <b>directed</b> <b>graph</b> with outdegree at most k. Due to the matroid structure of pseudoforests, the pseudoarboricity may be computed in polynomial time.|$|E
40|$|For {{synchronous}} point-to-point n-node {{networks of}} undirected links, {{it has been}} previously shown that, to achieve consensus in presence of up to f Byzantine faults, the following two conditions on the underlying communication graph are together necessary and sufficient: (i) n ≥ 3 f+ 1 and (ii) network connectivity greater than 2 f. The first condition, that is, n ≥ 3 f+ 1, {{is known to be}} necessary for <b>directed</b> <b>graphs</b> as well. So far, tight necessary and sufficient condition for Byzantine consensus in <b>directed</b> <b>graphs</b> has not been developed. This paper presents tight necessary and sufficient condition for achieving Byzantine consensus in synchronous networks that can be represented as <b>directed</b> <b>graphs.</b> We provide a constructive proof of sufficiency by presenting a new Byzantine consensus algorithm for <b>directed</b> <b>graphs.</b> Further work is needed to improve the message overhead of Byzantine consensus in <b>directed</b> <b>graphs...</b>|$|R
40|$|In {{this paper}} we study the Station Placement problem on <b>directed</b> <b>graphs,</b> {{a problem that}} has {{applications}} to efficient multicasting in circuit-switched networks. We first argue that the problem on general <b>directed</b> <b>graphs</b> can be efficiently reduced to computing bounded depth Steiner tree on complete weighted <b>directed</b> <b>graphs.</b> Then, we concentrate on the {{case in which the}} <b>graph</b> is a <b>directed</b> tree and we give polynomial time algorithms to solve the problem and a natural variant of the problem...|$|R
40|$|In Part I of {{this work}} we defined a {{generalization}} {{of the concept of}} effective resistance to <b>directed</b> <b>graphs,</b> and we explored some of the properties of this new definition. Here, we use the theory developed in Part I to compute effective resistances in some prototypical <b>directed</b> <b>graphs.</b> This exploration highlights cases where our notion of effective resistance for <b>directed</b> <b>graphs</b> behaves analogously to our experience from undirected graphs, as well as cases where it behaves in unexpected ways...|$|R
