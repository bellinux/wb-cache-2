50|4556|Public
5000|$|Digital Signature Standard (DSS), {{based on}} the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> ...|$|E
5000|$|RFC 6594: Use of the SHA-256 Algorithm with RSA, <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA),</b> and Elliptic Curve DSA (ECDSA) in SSHFP Resource Records ...|$|E
50|$|In cryptography, the Elliptic Curve Digital Signature Algorithm (ECDSA) {{offers a}} variant of the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> which uses {{elliptic}} curve cryptography.|$|E
40|$|In this paper, {{we study}} two <b>digital</b> <b>signature</b> <b>algorithms,</b> the <b>DSA</b> and ECDSA, {{which have become}} NIST {{standard}} and {{have been widely used}} in almost all commercial applications. We will show that the two algorithms are actually ‘the same’ algebraically and propose a generic algorithm such that both DSA and ECDSA are instances of it. By looking at this special angle through the generic algorithm, we gain a new insight into the two <b>algorithms</b> <b>DSA</b> and ECDSA. Our new proposed <b>digital</b> <b>signature</b> <b>algorithm</b> is described generically using a group G and a map toNumber : G → Z. As an illustration, we choose G to be a group of non-singular circulant matrices over finite field and describe a totally new concrete <b>digital</b> <b>signature</b> <b>algorithm...</b>|$|R
40|$|Public {{community}} Mobile Ad Hoc NETworks (MANETs), {{such as the}} ``Funkfeuer'' or ``Freifunk'' networks, {{scale up}} to several hundreds of routers, connecting users with each other, and with the Internet. As MANETs are typically operated over wireless channels (e. g. WiFi), access to these networks is granted to anyone in the radio range of another router in the MANET, and running the same MANET routing protocol. In {{order to protect the}} stability of the networks from malicious intruders, it is important to ensure that only trusted peers are admitted to participate in the control message exchange, and to provide means for logically ``disconnecting'' a non-trustworthy peer. This memorandum presents the concept of admittance control for the Optimized Link State Routing Protocol version 2 (OLSRv 2), and suggests a security extension based on <b>digital</b> <b>signatures.</b> Due to the flexible message format of OLSRv 2, this extension keeps compatibility with the core OLSRv 2 specification. Several standard <b>digital</b> <b>signature</b> <b>algorithms</b> (RSA, <b>DSA,</b> ECDSA), as well as HMAC, are compared in terms of message overhead and CPU time for generating and processing signatures...|$|R
40|$|Application of <b>digital</b> <b>signature</b> {{technology}} {{becomes more}} extensive, but many exposed <b>digital</b> <b>signature</b> <b>algorithms</b> have increasingly revealed some shortcomings and deficiencies. Aiming {{directly at the}} frequently used <b>digital</b> <b>signature</b> technologies, which are weak to Substitution Attack and Homeostasis Attack, the authors perform the hash transformation on messages before signature. Then, a hash round function is constructed, which simultaneously satisfies the characters of balance, high nonlinearity, strict avalanche criterion and realization of software. Moreover, making use of the hash round function, a new hash algorithm named HRFA (Hash Round Function Algorithm) is contrived. On this basis, aiming at the defect that the existing <b>digital</b> <b>signature</b> <b>algorithms</b> are weak to active attack and impersonation attack, using the hash algorithm named HRFA and the self-certified public key system, {{a new kind of}} <b>digital</b> <b>signature</b> <b>algorithm,</b> which is similar to ELGamal, named H-S DSA (Hash Round Function and Self-certified Public Key System <b>Digital</b> <b>Signature</b> <b>Algorithm)</b> is raised and realized. Finally, the authors analyze the H-S DSA from two aspects of security and time-complexity. And, the results show that the new designed <b>digital</b> <b>signature</b> <b>algorithm</b> named H-S <b>DSA</b> not only has better security strength, but also has lower timecomplexity. </span...|$|R
5000|$|The SR-2330 {{has been}} {{validated}} as conforming to the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> specified in both FIPS 186-2 with Change Notice 1 dated October 5, 2001 and FIPS 186-3 dated June 2009, both titled Digital Signature Standard (DSS).|$|E
50|$|The <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> is a Federal Information Processing Standard {{for digital}} signatures. In August 1991 the National Institute of Standards and Technology (NIST) {{proposed}} DSA {{for use in}} their Digital Signature Standard (DSS) and adopted it as FIPS 186 in 1993. Four revisions to the initial specification have been released: FIPS 186-1 in 1996, FIPS 186-2 in 2000, FIPS 186-3 in 2009, and FIPS 186-4 in 2013.|$|E
50|$|Digital {{signatures}} are cryptographic implementations {{of electronic}} signatures {{used as a}} proof of authenticity, data integrity and non-repudiation of communications conducted over the Internet. When implemented in compliance to digital signature standards, digital signing should offer end-to-end privacy with the signing process being user-friendly and secure. Digital signatures are generated and verified through standardized frameworks such as the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA).</b> by NIST or in compliance to the XAdES, PAdES or CAdES standards, specified by the ETSI.|$|E
40|$|Abstract—Application of <b>digital</b> <b>signature</b> {{technology}} {{becomes more}} extensive, but many exposed <b>digital</b> <b>signature</b> <b>algorithms</b> have increasingly revealed some shortcomings and deficiencies. Aiming {{directly at the}} frequently used <b>digital</b> <b>signature</b> technologies, which are weak to Substitution Attack and Homeostasis Attack, the authors perform the hash transformation on messages before signature. Then, a hash round function is constructed, which simultaneously satisfies the characters of balance, high nonlinearity, strict avalanche criterion and realization of software. Moreover, making use of the hash round function, a new hash algorithm named HRFA (Hash Round Function Algorithm) is contrived. On this basis, aiming at the defect that the existing <b>digital</b> <b>signature</b> <b>algorithms</b> are weak to active attack and impersonation attack, using the hash algorithm named HRFA and the self-certified public key system, {{a new kind of}} <b>digital</b> <b>signature</b> <b>algorithm,</b> which is similar to ELGamal, named H-S DSA (Hash Round Function and Self-certified Public Key System <b>Digital</b> <b>Signature</b> <b>Algorithm)</b> is raised and realized. Finally, the authors analyze the H-S DSA from two aspects of security and time-complexity. And, the results show that the new designed <b>digital</b> <b>signature</b> <b>algorithm</b> named H-S <b>DSA</b> not only has better security strength, but also has lower timecomplexity. Index Terms—digital signature, similar to ELGamal, HRFA, H-S <b>DSA,</b> <b>algorithm</b> analysis I...|$|R
40|$|The Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> ECDSA is the {{elliptic}} curve analogue of the Digi tal <b>Signature</b> <b>Algorithm</b> <b>DSA</b> It was accepted in as an ANSI standard and was accepted in as IEEE and NIST standards It was also accepted in 	 as an ISO standard and is under consideration {{for inclusion in}} some other ISO standards Unlike the ordinary discrete logarithm problem and the integer factorization problem no subexponentialtime algorithm is known for the {{elliptic curve}} discrete logarithm problem For this reason the strengthperkeybit is substantially greater in an algorithm that uses elliptic curves This paper describes the ANSI X ECDS...|$|R
5000|$|The Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (ECDSA) {{is based}} on the <b>Digital</b> <b>Signature</b> <b>Algorithm,</b> ...|$|R
50|$|Cryptographic {{smart cards}} {{are often used}} for single sign-on. Most {{advanced}} smart cards include specialized cryptographic hardware that uses algorithms such as RSA and <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA).</b> Today's cryptographic smart cards generate key pairs on board, to avoid the risk from having more than one copy of the key (since by design there usually isn't a way to extract private keys from a smart card). Such smart cards are mainly used for digital signatures and secure identification.|$|E
50|$|Two main {{properties}} are required. First, {{the authenticity of}} a signature generated from a fixed message and fixed private key can be verified by using the corresponding public key. Secondly, it should be computationally infeasible to generate a valid signature for a party without knowing that party's private key.A digital signature is an authentication mechanism that enables {{the creator of the}} message to attach a code that acts as a signature. The <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA),</b> developed by the National Institute of Standards and Technology, is one of many examples of a signing algorithm.|$|E
50|$|Taher Elgamal (Arabic: طاهر الجمل) (born 18 August 1955) is an Egyptian cryptographer. In 1985, Elgamal {{published}} a paper titled “A Public key Cryptosystem and A Signature Scheme based on discrete Logarithms” {{in which he}} proposed {{the design of the}} ElGamal discrete log cryptosystem and of the ElGamal signature scheme. The latter scheme became the basis for <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> adopted by National Institute of Standards and Technology (NIST) as the Digital Signature Standard (DSS). He also participated in the 'SET' credit card payment protocol, plus a number of Internet payment schemes.|$|E
50|$|KCDSA (Korean Certificate-based <b>Digital</b> <b>Signature</b> <b>Algorithm)</b> is a <b>digital</b> <b>signature</b> <b>algorithm</b> {{created by}} {{a team led by}} the Korea Internet & Security Agency (KISA). It is an ElGamal variant, similar to the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> and GOST R 34.10-94. The {{standard}} algorithm is implemented over , but an elliptic curve variant (EC-KCDSA) is also specified.|$|R
40|$|The {{paper is}} devoted to the review and {{analysis}} of algorithms for creation electronic <b>digital</b> <b>signature.</b> Known electronic <b>digital</b> <b>signature</b> <b>algorithms</b> are compared, examined the questions of implementation of the elliptic curve <b>digital</b> <b>signature</b> <b>algorithm,</b> proposed scheme of its software implementation...|$|R
5000|$|Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (ECDSA) <b>digital</b> <b>signatures</b> ...|$|R
50|$|Capstone is {{the name}} of a United States {{government}} long-term project to develop cryptography standards for public and government use. Capstone was authorized by the Computer Security Act of 1987 and was driven by the NIST and the NSA; the project began in 1993. The initiative involved four standard algorithms: a data encryption algorithm called Skipjack, along with the Clipper chip that included the Skipjack algorithm, a <b>digital</b> <b>signature</b> <b>algorithm,</b> <b>DSA,</b> a hash function, SHA-1, and a key exchange protocol. Capstone's first implementation was in the Fortezza PCMCIA card. All Capstone components were designed to provide 80-bit security.|$|E
40|$|Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> for DNSSEC This {{document}} {{describes how}} to specify Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> keys and signatures in DNS Security (DNSSEC). It lists curves {{of different sizes}} and uses the SHA- 2 family of hashes for signatures. Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|E
40|$|NIST) has {{published}} a series of security standards under Federal Information Processing Standard (FIPS). Standard for key agreement is still missing in the current standards. Arazi proposed integrating Diffie–Hellman (DH) key exchange into the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA).</b> However, the protocol was attacked by Nyberg et al. We propose three different protocols that securely integrate DH key exchange into DSA for authenticated key distribution...|$|E
5000|$|DSS (<b>Digital</b> <b>Signature</b> Standard), which {{incorporates}} the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> ...|$|R
40|$|Generally, <b>digital</b> <b>signature</b> <b>algorithms</b> {{are based}} on a single hard problem like prime {{factorization}} problem or discrete logarithmproblem or elliptic curve problem. If one finds solution of this single hard problem then these <b>digital</b> <b>signature</b> <b>algorithms</b> will no longer be secured and due to large computational power, this may be possible in future. The RSA <b>digital</b> <b>signature</b> <b>algorithm</b> (RSADSA) is an asymmetric cryptographic technique, whose security is related to the difficulty of factorization. But if one would solve the factorization problem then he would get the private key too. RSADSA is not only vulnerable to the prime factorization attacks but also to the small private exponent d and small public exponent e attacks. So to improve security, this paper presents a new variant of <b>digital</b> <b>signature</b> <b>algorithm</b> which is based on two hard problems, prime factorization and xth root problem. The proposed algorithm is a modification of the RSA <b>digital</b> <b>signature</b> <b>algorithm...</b>|$|R
50|$|Edwards-curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> and its Ed25519 variant.|$|R
40|$|This paper {{discusses}} {{the implementation of}} the Secure Hash Algorithm (SHA- 1) required in the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> and many other applications. A single computing module with 80 -rounds operation is ideal for a compact size hardware implementation. The round-word calculation module is also simple as a 16 × 32 bit register with few XOR gates. For the higher throughput those designs can be pipelined to any order, but at the cost of hardware size...|$|E
40|$|Harn et al. {{proposed}} {{a series of}} Diffie-Hellman key exchange protocols which are integrated into Digital Signature Algorithm in 2004. Recently, Phan pointed out that Harn et al. ’s protocols cannot provide forward secrecy and key freshness, which are two standard security attributes that key exchange protocols should have. Phan also gave his improvement. In this paper we present a better improvement, which is more secure than Phan’s scheme. Keywords: Diffie-Hellman, <b>digital</b> <b>signature</b> <b>algorithm</b> (<b>DSA),</b> key exchange protocols, network security...|$|E
40|$|This {{contribution}} proposes {{the format}} of the ``Algorithm-Specific Information`` and ``Signature`` fields within the ``Proposed Generic Authentication Information Element`` for authentication IEs based on the Digital Signature Standard (DSS). These fields are designed to allow various levels of authentication ``strength`` (or robustness), and many of these fields may be omitted in systems that optimize authentication performance by sharing common (public) <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> parameters. This allows users and site security officers to design their authenticated signaling according to site security and performance requirements...|$|E
2500|$|Addition of the Ed25519 and Ed448 <b>digital</b> <b>signature</b> <b>algorithms</b> ...|$|R
50|$|A related {{algorithm}} is the NTRUSign <b>digital</b> <b>signature</b> <b>algorithm.</b>|$|R
5000|$|Addition of the Ed25519 and Ed448 <b>digital</b> <b>signature</b> <b>algorithms</b> ...|$|R
40|$|Status of this Memo This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2000). All Rights Reserved. This document defines a telnet authentication mechanism using the <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (<b>DSA)</b> [FIPS 186]. It relies on the Telne...|$|E
40|$|Recently, {{three key}} {{exchange}} protocols were proposed that integrated the Diffie-Hellman key exchange into the <b>digital</b> <b>signature</b> <b>algorithm</b> (<b>DSA).</b> It was {{claimed that the}} protocols provide known-key security and unknown key-share resilience, while the most advanced variant also provides key-replay resilience. However, we show in this paper that the protocols do not provide forward secrecy and key freshness which {{are two of the}} standard security attributes that key exchange protocols should have. We also fix the protocols such that they provide these security attributes...|$|E
40|$|Diffie-Hellman (DH) key {{exchange}} {{is a well}} known method for secure exchange of cryptographic keys and has been widely used in popular Internet protocols, such as IPsec, TLS, and SSH. To enable authenticated key establishment, the DH protocol has been integrated with the <b>digital</b> <b>signature</b> <b>algorithm</b> (<b>DSA).</b> In this paper, we analyze three variants of the integrated DH-DSA protocol. We study the protocol variants with respect to known types of attacks and security features. In particular, {{the focus is on}} the properties of forward secrecy, known-key security, and replay attack resilience...|$|E
30|$|<b>Digital</b> <b>signature</b> [30]: a <b>digital</b> <b>signature</b> <b>algorithm</b> is a {{mathematical}} scheme and a cryptographic tool for demonstrating nonrepudiation, authenticating {{the integrity and}} origin of a signed message. A private key {{is used by the}} signer to generate the <b>digital</b> <b>signature</b> for the message, and the public key is used by anyone to verify the signature. Note that ECDSA and RSA are popular <b>digital</b> <b>signature</b> <b>algorithms.</b>|$|R
40|$|Generally <b>digital</b> <b>signature</b> <b>algorithms</b> {{are based}} on a single hard problem like prime {{factorization}} problem, discrete logarithmproblem, elliptic curve problem. If one finds solution of this single hard problem then these <b>digital</b> <b>signature</b> <b>algorithms</b> will no longerbe secured and due to large computational power, this may be possible in future. There are many other algorithms which {{are based on}}the hybrid combination of prime factorization and discrete logarithms problem but different weaknesses and attacks have been developedagainst those algorithms. This paper also presents a new variant of <b>digital</b> <b>signature</b> <b>algorithm</b> which is based on two hard problems,prime factorization and discrete logarithm...|$|R
5000|$|Enhanced {{support for}} Elliptic Curve <b>Digital</b> <b>Signature</b> <b>Algorithm</b> (ECDSA) X509 certificates.|$|R
