3274|684|Public
5|$|<b>Flash</b> <b>memory</b> can be {{programmed}} and erased {{only a limited}} number of times. This is often referred to as the maximum number of program/erasecycles (P/Ecycles) it can sustain over the life of the <b>flash</b> <b>memory.</b> Single-level cell (SLC) flash, designed for higher performance and longer endurance, can typically operate between 50,000 and 100,000 cycles. , multi-level cell (MLC) flash is designed for lower cost applications and has a greatly reduced cycle count of typically between 3,000 and 5,000. Since 2013, triple-level cell (TLC) flash has been available, with cycle counts dropping to 1,000 program-erase (P/E) cycles. A lower write amplification is more desirable, as it corresponds to a reduced number of P/Ecycles on the <b>flash</b> <b>memory</b> and thereby to an increased SSD life.|$|E
5|$|Over-provisioning (sometimes spelled as OP, over provisioning, or overprovisioning) is the {{difference}} between the physical capacity of the <b>flash</b> <b>memory</b> and the logical capacity presented through the operating system (OS) as available for the user. During the garbage collection, wear-leveling, and bad block mapping operations on the SSD, the additional space from over-provisioning helps lower the write amplification when the controller writes to the <b>flash</b> <b>memory.</b>|$|E
5|$|The overall {{performance}} of an SSD {{is dependent upon}} a number of factors, including write amplification. Writing to a <b>flash</b> <b>memory</b> device takes longer than reading from it. An SSD generally uses multiple <b>flash</b> <b>memory</b> components connected in parallel to increase performance. If the SSD has a high write amplification, the controller {{will be required to}} write that many more times to the <b>flash</b> <b>memory.</b> This requires even more time to write the data from the host. An SSD with a low write amplification will not need to write as much data and can therefore be finished writing sooner than a drive with a high write amplification.|$|E
40|$|Recent {{years have}} {{witnessed}} {{a proliferation of}} <b>flash</b> <b>memories</b> as an emerging storage technology with wide applications in many important areas. Like magnetic recording and optimal recording, <b>flash</b> <b>memories</b> have their own distinct properties and usage environment, which introduce very interesting new challenges for data storage. They include accurate programming without overshooting, error correction, reliable writing data to <b>flash</b> <b>memories</b> under low-voltages and file recovery for <b>flash</b> <b>memories.</b> Solutions to these problems can significantly improve the longevity and performance of the storage systems based on <b>flash</b> <b>memories.</b> In this work, we explore several new data representation techniques for efficient and reliable data storage in <b>flash</b> <b>memories.</b> First, we present a new data representation scheme?rank modulation with multiplicity ?to eliminate the overshooting and charge leakage problems for <b>flash</b> <b>memories.</b> Next, we study the Half-Wits ? stochastic behavior of writing data to embedded <b>flash</b> <b>memories</b> at voltages lower than recommended by a microcontroller?s specifications?and propose three software- only algorithms that enable reliable storage at low voltages without modifying hard- ware, which can reduce energy consumption by 30 %. Then, we address the file erasures recovery problem in <b>flash</b> <b>memories.</b> Instead of only using traditional error- correcting codes, we design a new content-assisted decoder (CAD) to recover text files. The new CAD can be combined with the existing error-correcting codes and the experiment results show CAD outperforms the traditional error-correcting codes...|$|R
3000|$|As the {{technology}} continues to scale down, <b>flash</b> <b>memories</b> suffer from more severe physical degradation mechanisms such as cell-to-cell interference (coupling) and charge leakage[5, 6]. In addition, M-bit/cell MLC <b>flash</b> <b>memories</b> have 2 [...]...|$|R
3000|$|Though {{errors in}} <b>flash</b> <b>memories</b> are {{generally}} not symmetric, the asymmetric component of errors could be minimized if the decision level are selected appropriately[22 – 24]. For example, for 2 -bit/cell <b>flash</b> <b>memories,</b> the errors of page 1 will be symmetric if we select the decision level [...]...|$|R
5|$|The {{process of}} garbage {{collection}} involves reading and rewriting {{data to the}} <b>flash</b> <b>memory.</b> This means that a new write from the host will first require a read of the whole block, a write of {{the parts of the}} block which still include valid data, and then a write of the new data. This can significantly reduce the performance of the system. Some SSD controllers implement background garbage collection (BGC), sometimes called idle garbage collection or idle-time garbage collection (ITGC), where the controller uses idle time to consolidate blocks of <b>flash</b> <b>memory</b> before the host needs to write new data. This enables the performance of the device to remain high.|$|E
5|$|Write {{amplification}} (WA) is an undesirable phenomenon {{associated with}} <b>flash</b> <b>memory</b> and solid-state drives (SSDs) where the actual {{amount of information}} physically written to the storage media is a multiple of the logical amount intended to be written.|$|E
5|$|Data {{is stored}} in a 160Gb (20GB) <b>flash</b> <b>memory</b> module {{consisting}} of over 700 memory chips, each with a 256Mbit capacity. This memory capacity is not actually that large considering the amount of data to be acquired; for example, a single image from the HiRISE camera can be as large as 28Gb.|$|E
40|$|<b>Flash</b> <b>memories</b> are {{the most}} widely used type of {{nonvolatile}} electronic memories. Compared to magnetic recording and optical recording, <b>flash</b> <b>memories</b> have the unique property that their cell levels, which represent data, are programmed using an iterative procedure that monotonically shifts each cell level upward toward its target value. In this paper, we study the capacity of <b>flash</b> <b>memories</b> to store data. We explore the relationship among their capacity, programming precision and programming time. The study is focused on the capacity of single cells, and an optimal programming algorithm is presented. 1...|$|R
5000|$|A {{networked}} version {{would eliminate}} the need for swapping <b>flash</b> <b>memories.</b>|$|R
40|$|In this paper, {{we study}} the error {{performance}} of programming architectures for <b>Flash</b> <b>memories.</b> Specifically, we propose an advanced programming architecture and evaluate its performance via computer simulations. We {{show that the}} proposed method can improve the error performance under severe interfering effects, which {{is the case for}} the next-generation <b>Flash</b> <b>memories</b> with very small cells employing multiple levels...|$|R
5|$|Reads do {{not require}} an erase of the <b>flash</b> <b>memory,</b> so they are not {{generally}} associated with write amplification. In the limited chance of a read disturb error, the data in that block is read and rewritten, but this would not have any material impact on the write amplification of the drive.|$|E
5|$|A Wii console {{running a}} GameCube disc is {{restricted}} to GameCube functionality, and GameCube controller is required to play GameCube titles. A Nintendo GameCube Memory Card is also necessary to save game progress and content, since the Wii internal <b>flash</b> <b>memory</b> will not save GameCube games. Also, backward compatibility is limited in some areas. For example, online and LAN-enabled features for Nintendo GameCube titles are unavailable on the Wii, since the console lacks serial ports for the Nintendo GameCube Broadband Adapter and Modem Adapter.|$|E
5|$|Intel and SiliconSystems (acquired by Western Digital in 2009) {{used the}} term write {{amplification}} in their papers and publications as early as 2008. Write amplification is typically measured by the ratio of writes committed to the <b>flash</b> <b>memory</b> to the writes coming from the host system. Without compression, write amplification cannot drop below one. Using compression, SandForce has claimed to achieve a typical write amplification of 0.5, with best-case values as low as 0.14 in the SF-2281 controller.|$|E
40|$|<b>Flash</b> <b>memories</b> {{are a very}} {{widely used}} type of {{nonvolatile}} memory. Like magnetic recording and optical recording, <b>flash</b> <b>memories</b> have their own distinct properties. These distinct properties introduce very interesting information-representation and coding problems, which address many aspects of a successful storage system. In this paper, we survey recent results in this area. A focus is placed on rewriting codes and rank modulation...|$|R
30|$|Memory: There are 128  MB DDR {{memories}} and 64  MB <b>FLASH</b> <b>memories</b> on the board.|$|R
40|$|Heavy ion single-event {{measurements}} and TID response for 8 Gb commercial NAND <b>flash</b> <b>memories</b> are reported. Radiation results of multi-level flash technology are compared with results from single-level flash technology. In general, these commercial high density memories {{appear to be}} much less susceptible to SEE and have better TID response compared to older generations of <b>flash</b> <b>memories.</b> The charge pump survived up to 600 krads...|$|R
5|$|Majin Tensei was {{released}} on January 28, 1994 for the Super Famicom, and later for Microsoft Windows. The Super Famicom version was re-released through the Nintendo Power <b>flash</b> <b>memory</b> service on December 1, 1997, and digitally through the Virtual Console service for Wii and Wii U on September 6, 2011 and July 15, 2015. It {{is set in a}} Japanese city that has been invaded by demons, and focuses on gameplay rather than plot; the player takes the role of the Hero, and joins forces with the Heroine.|$|E
5|$|The Super Famicom {{version of}} the game was {{originally}} released on December 1, 1995 by Chunsoft, and re-released through the Nintendo Power <b>flash</b> <b>memory</b> service on August 1, 2000. The Nintendo DS version was released by Sega on December 14, 2006 in Japan, on March 4, 2008 in North America and on March 31, 2008 in Europe; except for an earlier fan translation, {{this was the first}} time the game was made available in English. A music album featuring arranged songs from the Super Famicom version was published by Kitty Records on December 20, 1995.|$|E
5|$|In {{a perfect}} scenario, this would enable every block {{to be written}} to its maximum life so they all fail at the same time. Unfortunately, the process to evenly {{distribute}} writes requires data previously written and not changing (cold data) to be moved, so that data which are changing more frequently (hot data) can be written into those blocks. Each time data are relocated without being changed by the host system, this increases the write amplification and thus reduces {{the life of the}} <b>flash</b> <b>memory.</b> The key is to find an optimum algorithm which maximizes them both.|$|E
40|$|Flash {{is a type}} of Electronically Erasable Programmable Read-Only Memory (EEPROM). Different from {{traditional}} magnetic disks, <b>flash</b> <b>memories</b> have no moving parts and are purely electronic devices, giving them unique advantages, such as lower access latency, lower power consumption, higher density, shock resistance, and lack of noise. However, existing applications cannot run directly on <b>flash</b> <b>memories</b> due to their special characteristics. Flash Translation Layer (FTL) is a software layer built on raw <b>flash</b> <b>memories</b> that emulates a normal block device like magnetic disks. Primary functionalities of the FTL include address translation, garbage collection, and wear leveling. This survey focuses on address translation technologies and provides a broad overview of existing schemes described in patents, journals, and conference proceedings...|$|R
40|$|The {{increasing}} {{density of}} NAND <b>flash</b> <b>memories</b> makes data {{more prone to}} errors due to severe process variations and disturbance. The urgency to improve NAND flash reliability encourages searching for optimal channel coding methods. This paper reports our efforts towards a read channel for <b>flash</b> <b>memories</b> using polar coding. Our contributions include the solutions to several challenges raised when applying polar codes to NAND <b>flash</b> <b>memories</b> in practice. We propose efficient schemes for shortening both non-systematic and systematic polar codes, making polar codewords be easily adapted to flash page of any size. We demonstrate that the decoding performance of the shortened polar codes and LDPC codes are comparable using {{the data obtained by}} our NAND flash characterization platform. We show the feasibility of a practical adaptive decoding framework where {{it is not necessary to}} construct new polar codes for different channel parameters. Experimental results show that the decoding performance approaches the optimized performance where different codes are constructed for different channel conditions. To the best of our knowledge, this work is the first study of polar codes for error correction in <b>flash</b> <b>memories...</b>|$|R
30|$|In this article, we {{investigated}} the verify level control criteria of ISPP for MLC <b>flash</b> <b>memories.</b> These criteria are formulated and solved by convex optimization. Criterion 1 can minimize the overall BER, however it requires interleaving in multipage architecture which reduces the speed performance. Criterion 2 {{is suitable for}} multipage architecture especially for 2 -bit/cell <b>flash</b> <b>memories.</b> The problem of criterion 2 is that the error rate degradation will increase for more bits per cell.|$|R
5|$|The Virtual Console service allows Wii {{owners to}} play games {{originally}} released for the Nintendo Entertainment System, Super Nintendo Entertainment System, Nintendo 64, Sega's Genesis/Mega Drive and Sega Mark III/Sega Master System, NEC's TurboGrafx-16/PC Engine, SNK's Neo Geo console, Commodore 64 and arcade games. Virtual Console games are distributed over broadband Internet via the Wii Shop Channel, and are saved to the Wii internal <b>flash</b> <b>memory</b> or to a removable SD card. Once downloaded, Virtual Console games can be accessed from the Wii Menu (as individual channels) or from an SD card via the SD Card Menu. There is also a Wii homebrew community, dedicated to creating and playing content unendorsed by Nintendo.|$|E
5|$|The peak random write {{performance}} on an SSD {{is driven by}} plenty of free blocks after the SSD is completely garbage collected, secure erased, 100% TRIMed, or newly installed. The maximum speed will depend upon the number of parallel flash channels connected to the SSD controller, {{the efficiency of the}} firmware, and the speed of the <b>flash</b> <b>memory</b> in writing to a page. During this phase the write amplification will be the best it can ever be for random writes and will be approaching one. Once the blocks are all written once, garbage collection will begin and the performance will be gated by the speed and efficiency of that process. Write amplification in this phase will increase to the highest levels the drive will experience.|$|E
5|$|Data {{is written}} to the <b>flash</b> <b>memory</b> in units called pages (made up of {{multiple}} cells). However, the memory can be erased only in larger units called blocks (made up of multiple pages). If the data {{in some of the}} pages of the block are no longer needed (also called stale pages), only the pages with good data in that block are read and rewritten into another previously erased empty block. Then the free pages left by not moving the stale data are available for new data. This is a process called garbage collection (GC). All SSDs include some level of garbage collection, but they may differ in when and how fast they perform the process. Garbage collection {{is a big part of}} write amplification on the SSD.|$|E
40|$|We {{study the}} effects of {{exposure}} to accelerated neutron beams of Floating Gate (FG) <b>Flash</b> <b>memories</b> with NOR architecture. Error rates as well as threshold voltage shifts are examined and mechanisms are discussed. A comparison with NAND <b>Flash</b> <b>memories,</b> with both multi-level and single-level cell architecture, is performed. In addition to prompt effects, retention of irradiated cells is analyzed for several months after irradiation. Thanks to tail distributions, we can assess possible rare events...|$|R
40|$|We {{study the}} {{sensitivity}} to alpha particles of state-of-the-art Multi-Level Cell (MLC) and Single-Level Cell (SLC) NAND Floating Gate (FG) <b>flash</b> <b>memories</b> with NAND architecture. We show that starting from a feature size of 50 nm, MLC <b>flash</b> <b>memories</b> {{are sensitive to}} alpha particles, whereas SLC devices do not show any sensitivity down to a feature size of 34 nm. We calculate the alpha-induced soft error rates on the field, discuss technology trends in comparison to heavy-ions...|$|R
40|$|Most of {{the current}} {{applications}} of electronics require non-volatile memories, which can keep stored information when the power supply is switched off. <b>Flash</b> <b>memories</b> (in which a single cell can be electrically programmed {{and a large number}} of cells are usually electrically erased at the same time) are the most versatile non-volatile memories. They are widely used to store the basic input-output system (BIOS) of personal computers, the software and personal data of cellular phones, identification codes in smart cards and many other applications. <b>Flash</b> <b>memories</b> allow software updates, change of passwords and codes, and reconfiguration of the system in the field. They can be designed and optimized to create large-size memories which can successfully substitute hard disks for specific applications, having lower power consumption and weight, shorter access times, and far better robustness. This book is devoted entirely to <b>flash</b> <b>memories</b> and has been designed to provide comprehensive information on basic memory cell structures, device physics and technology, simulation circuit architecture, system issues, testing and reliability. It also provides data on advanced subjects related to multi-level storage cells, embedded memories and system applications of <b>flash</b> <b>memories...</b>|$|R
5|$|If the {{controller}} were to background garbage collect {{all of the}} spare blocks before it was absolutely necessary, new data written from the host could be written without having to move any data in advance, letting the performance operate at its peak speed. The trade-off {{is that some of}} those blocks of data are actually not needed by the host and will eventually be deleted, but the OS did not tell {{the controller}} this information. The result is that the soon-to-be-deleted data is rewritten to another location in the <b>flash</b> <b>memory,</b> increasing the write amplification. In some of the SSDs from OCZ the background garbage collection clears up {{only a small number of}} blocks then stops, thereby limiting the amount of excessive writes. Another solution is to have an efficient garbage collection system which can perform the necessary moves in parallel with the host writes. This solution is more effective in high write environments where the SSD is rarely idle. The SandForce SSD controllers and the systems from Violin Memory have this capability.|$|E
5|$|The {{smartphone}} considerably reduces its predecessor's sizes, measuring 4.3 by 2.4 by 6 inches (10.92, 6.09 and 15.24 centimeters, respectively). The Bold 9700 has a 624MHz {{processor and}} a 256MB <b>Flash</b> <b>memory.</b> The device uses a 2.44 inch HVGA (approximately 6.1cm) non-touch LCD display at {{a resolution of}} 480×360 pixels. The resolution of the display was {{compared to that of}} HTC Magic, as it has also HVGA quality. The model changes its predecessor's trackball to an optical trackpad, with simple functionalities such as swiping the thumb to move it and press it to make a selection. This change prevented problems including the accumulation of dust behind the trackball. Similarly to previous BlackBerry models, BlackBerry 9700 has a 35-key QWERTY-type physical keyboard, which is smaller than that of Bold 9000. On the top of the device, there are two buttons that respectively lock or mute it; {{on the right side of}} it, rubberized keys are found, which can either control the audio volume or the music player; further down, there is a camera shutter key. Cosmetic changes including the addition of a leatherette battery cover were carried out in order to appeal both sexes.|$|E
25|$|The {{floating}} gate may be conductive (typically polysilicon in most kinds of <b>flash</b> <b>memory)</b> or non-conductive (as in SONOS <b>flash</b> <b>memory).</b>|$|E
40|$|Abstract—The {{increasing}} {{density of}} NAND <b>flash</b> <b>memories</b> makes data {{more prone to}} errors due to severe process vari-ations and disturbance. The urgency to improve NAND flash reliability encourages searching for optimal channel coding methods. This paper reports our efforts towards a read channel for <b>flash</b> <b>memories</b> using polar coding. Our contributions in-clude the solutions to several challenges raised when applying polar codes to NAND <b>flash</b> <b>memories</b> in practice. We propose efficient schemes for shortening both non-systematic and sys-tematic polar codes, making polar codewords be easily adapted to flash page of any size. We demonstrate that the decoding performance of the shortened polar codes and LDPC codes are comparable using {{the data obtained by}} our NAND flash characterization platform. We show the feasibility of a prac-tical adaptive decoding framework where {{it is not necessary to}} construct new polar codes for different channel parameters. Experimental results show that the decoding performance ap-proaches the optimized performance where different codes are constructed for different channel conditions. To the best of our knowledge, this work is the first study of polar codes for error correction in <b>flash</b> <b>memories.</b> I...|$|R
50|$|Although {{the charge}} {{trapping}} concept {{has been known}} since 1967, it wasn't until 2002 that AMD and Fujitsu produced high-volume charge-trapping <b>flash</b> <b>memories.</b>|$|R
40|$|The space {{radiation}} environment poses {{a certain}} risk to all electronic components on Earth-orbiting and planetary mission spacecraft. In recent years, {{there has been}} increased interest {{in the use of}} high-density, commercial, nonvolatile <b>flash</b> <b>memories</b> in space because of ever-increasing data volumes and strict power requirements. They are used {{in a wide variety of}} spacecraft subsystems. At one end of the spectrum, <b>flash</b> <b>memories</b> are used to store small amounts of mission-critical data such as boot code or configuration files and, at the other end, they are used to construct multi-gigabyte data recorders that record mission science data. This report examines single-event effect (SEE) and total ionizing dose (TID) response in single-level cell (SLC) 32 -Gb, multi-level cell (MLC) 64 -Gb, and Triple-level (TLC) 64 -Gb NAND <b>flash</b> <b>memories</b> manufactured by Micron Technology with feature size of 25 nm...|$|R
