2|5096|Public
40|$|The {{advantages}} of a Multi-Chip Module (MCM) product are its low-power and small-size. But the design of an MCM system usually requires weeks of engineering effort, thus we need a generic MCM substrate with programmable interconnections to accelerate system prototyping. In this paper, we propose a Symmetric and Programmable MCM (SPMCM) substrate for this purpose. This SPMCM substrate consists of a symmetrical array of slots for bare-chip attachment and <b>Field</b> <b>Programmable</b> <b>Interconnect</b> Chips (FPICs) for substrate routing. Experimental results demonstrate that our FPIC polygonal routing module uses 12 % less switches than the conventional routing module for interconnecting bare-chip slots with 84 pads. Also, experiments are conducted to determinate proper parameters for the VLSI implementation of our FPIC...|$|E
40|$|Multi-chip module (MCM) {{packaging}} {{can reduce}} the cost and increase the utility of field programmable systems. We are currently developing a first generation Field Programmable Multi-chip Module (FPMCM) as a test vehicle for a particular MCM technology. We present the advantages of MCM for field programmable systems and develop analytical models for estimating the capacity of FPMCM architectures based on Rent's Rule. These models are used to generate the architecture of our first generation prototype which employs smaller FPGA die and a mixture of direct and switched interconnect. We conclude {{with a discussion of}} the challenges and opportunities that FPMCMs face. 1 MCM Benefits Field Programmable Systems Field programmable systems (FPS) combining large numbers of field programmable gate arrays (FPGAs) and <b>field</b> <b>programmable</b> <b>interconnect</b> (FPIC) have the potential to revolutionize computing [CSM 92] [BRV 92] [Arn 93] [dB 93]. Current implementations typically consist of large ICs in single [...] ...|$|E
50|$|The {{experience}} from {{this program was}} used to design the <b>Field</b> <b>Programmable</b> Nanowire <b>Interconnect</b> circuit.|$|R
50|$|<b>Field</b> <b>Programmable</b> Nanowire <b>Interconnect</b> (often {{abbreviated}} FPNI) is a {{new computer}} architecture developed by Hewlett-Packard. This is a defect-tolerant architecture, using {{the results of the}} Teramac experiment.|$|R
40|$|<b>Field</b> <b>programmable</b> dual-Vdd <b>interconnects</b> are {{effective}} in reducing FPGA power. We formulate the dual-Vdd-aware slack budgeting problem as a linear program (LP) and a min-cost network flow problem, respectively. Both algorithms reduce interconnect power by 50 % on average compared to single-Vdd interconnects, but the network-flow-based algorithm runs 11 x faster on MCNC benchmarks. Furthermore, we develop simultaneous retiming and slack budgeting (SRSB) with flip-flop layout constraints in dual-Vdd FPGAs based on mixed integer linear programming, and speed-up the algorithm by LP relaxation and local legalization. Compared to retiming followed by slack budgeting, SRSB reduces interconnect power by up to 28. 8 %...|$|R
40|$|<b>Field</b> <b>programmable</b> dual-Vdd <b>interconnects</b> are {{effective}} to reduce FPGA power. However, the deterministic Vdd assignment leverages timing slack exhaustively and significantly increases {{the number of}} near-critical paths, which results in a degraded timing yield with process variation. In this paper, we present two statistical Vdd assignment algorithms. The first greedy algorithm is based on sensitivity while the second one is based on timing slack budgeting. Both minimize chip-level interconnect power without degrading timing yield. Evaluated with MCNC circuits, the statistical algorithms reduce interconnect power by 40 % compared to the single-Vdd FPGA with power gating. In contrast, the deterministic algorithm reduces interconnect power by 51 % but degrades timing yield from 97. 7 % to 87. 5 %. 1...|$|R
40|$|Abstract: We present stuck-at and {{bridging}} fault simu-lation {{results for}} previously proposed Built-In Self-Test (BIST) approaches for the <b>programmable</b> <b>interconnect</b> resources in <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs). In addition, new BIST approaches are proposed and analyzed via fault simulation. The fault simulation re-sults {{are used to}} compare and evaluate the fault detec-tion capabilities and effectiveness of these BIST ap-proaches for testing routing resources in FPGAs. 1 1...|$|R
40|$|<b>Field</b> <b>programmable</b> dual-Vdd <b>interconnects</b> are {{effective}} to reduce FPGA power. Assuming uniform length interconnects, existing work has developed time slack budgeting to minimize power based on estimating the lower bound of power reduction using dual-Vdd for given time slack. In this paper, {{we show that}} such lower bound estimation cannot be extended to mixed length interconnects {{that are used in}} modern FPGAs. We develop a technique to estimate power reduction using dual-Vdd for mixed length interconnects, and apply linear programming (LP) to solve slack budgeting to minimize power for mixed length interconnects. Experiments show 53 % power reduction on average compared to single-Vdd interconnects. Furthermore, this paper presents a simultaneous retiming and slack budgeting algorithm to reduce power in dual-Vdd FPGAs considering placement and flip-flop binding constraints. The algorithm is based on mixed integer and linear programming (MILP) and achieves up to 20 % power reduction compared to retiming followed by slack budgeting. We propose a runtime efficient flow to apply simultaneous retiming and slack budgeting only when it is necessary. To the best of our knowledge, this paper is the first in-depth study of simultaneous retiming and slack budgeting for dual-Vdd programmable FPGA power reduction while considering layout constraints...|$|R
40|$|In this paper, {{we present}} {{the concept of}} <b>Field</b> <b>Programmable</b> Memory Cell Arrays (FPMCAs) as the memory {{counterpart}} to <b>Field</b> <b>Programmable</b> Gate Arrays which have proved their utility in design and rapid prototyping. Principles of dynamic reconfigurability using programmable logic and <b>programmable</b> <b>interconnect</b> are incorporated into random access memories to achieve this flexibility. We first present {{the design of a}} variable width RAM (VaWiRAM) which is a simple example of a <b>Field</b> <b>Programmable</b> Memory Cell Array. The configuration of VaWiRAMs can be adjusted by setting a few configuration pins on the memory chip. A VaWiRAM reconfigurable between widths 1 and Wmax⁡ can be constructed with the extra cost of Wmax⁡ – 1 pass gates, (Wmax⁡/ 2) 2 -to- 1 multiplexers, and ⌈log⁡ 2 [log⁡ 2 (k) [*]+[*] 1]⌉ mode pins. A novel scheme to overlap the address pins with mode control pins and achieve the mode control with only one extra pin is also presented. The paper discusses the architecture of the proposed VaWiRAMs in detail, analyzes the design tradeoffs and introduces the concept of FPMCAs...|$|R
40|$|International audienceThe CMOS {{technology}} scaling {{has greatly}} improved the overall performance and density of <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs). However, {{when looking at}} the performance metrics such as speed, area and power consumption, the gap is generally very wide for FPGAs compared to application specific integrated circuits (ASICs) mainly due to the <b>programmable</b> <b>interconnect</b> overhead. We propose a 3 -dimensional (3 D) design methodology using horizontal design partitioning to vertically stack heterogeneous FPGA designs based on a Tree-based multilevel FPGA architecture. We describe the 3 D design and optimization methodology to improve speed, interconnect area and power consumption using Tezzaron's 3 D stacking technology...|$|R
40|$|This paper {{presents}} a {{hardware and software}} architecture for vision-based human-robot interaction designed for <b>field</b> <b>programmable</b> gate array (FPGA) based embedded system. The configurable logic and memory blocks connected through <b>programmable</b> <b>interconnects</b> on the FPGA permit programmers to create complex systems running multiple processing cores in parallel, which motivated the authors to implement multiple vision algorithms and robot controllers on a single system-on-chip board, aiming at low cost, low power consumption and high performance in human-robot interaction for industrial and educational robots. The architecture is a product derived from a component based programming model together with a systematic methodology for concurrent system design proposed by the authors. status: accepte...|$|R
40|$|Abstract: We {{discuss the}} {{development}} of Built-In Self-Test (BIST) configurations that test all of the <b>programmable</b> logic and <b>interconnect</b> resources {{in the core of}} Xilinx 4000 E, 4000 XL/XLA and Spartan series <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs). While there has been prior work in BIST for these FPGAs, the fast-carry logic has not been addressed and {{only a small portion of}} the total interconnect resources has been targeted. The programmable logic is completely tested in two test sessions of 12 BIST configurations each, but the <b>programmable</b> <b>interconnect</b> resources requires as many as 206 BIST configurations. Therefore, we also discuss architectural features that affect the testability of the FPGA and, in turn, the number of BIST configurations needed by comparing the BIST configurations developed for these Xilinx FPGAs with those previously developed for other FPGAs. 1 1...|$|R
40|$|International audienceThe CMOS {{technology}} scaling {{has greatly}} improved the overall performance and {{density of the}} Mesh-based <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs), nonetheless the gap between FPGAs and ASICs in terms of logic density, speed and power consumption remains very wide mainly due the programming overhead. The logic density and area overhead is improved by using Tree-based FPGA architecture using Butterfly-Fat-Tree (BFT) based network topology. However the wire-length increases exponentially as the tree grows to higher levels. We have introduced a horizontally partitioned 3 -dimensional (3 D) design methodology to optimize the BFT based <b>programmable</b> <b>interconnect</b> delay of the Tree-based FPGA. In this paper we describe a 2 tier horizontally partitioned 3 D stacked Tree-based FPGA demonstrator, designed and implemented using Tezzaron's 130 nm, 3 D technology. We finally evaluate the speed and area overhead of the proposed 3 D Tree-based FPGA using the newly developed experimental design and evaluation methodology and show that the horizontally partitioned BFT <b>programmable</b> <b>interconnect</b> topology based 3 D Tree-based FPGA improves speed by 2. 06 times and reduce interconnect area by 2. 8 times compared to 3 D Mesh-based FPGA with identical logic resources...|$|R
40|$|Abstract—Two {{embedded}} processor based fault injection case studies are presented which are applicable to <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) and FPGA cores in configurable System-on-Chip (SoC) implementations. The case studies include embedded hard core and soft core processors which manipulate configuration memory bits to emulate physical and transient faults in the FPGA core in-cluding shorts and opens in <b>programmable</b> <b>interconnect</b> and many different faults in logic resources. The emulated faults {{are used to}} evaluate fault detection capabilities of Built-In Self-Test (BIST) approaches, including fault identi-fication capabilities of diagnostic procedures, and to evalu-ate the effect of Single Event Upsets (SEUs), including their detection and correction. Embedded processor based ap-proaches provide significant improvement over previous fault injection techniques and, in turn, enable a more thor-ough analysis of BIST, diagnosis, and SEU mitigation. 1 1...|$|R
40|$|A {{threshold}} logic gate (TLG) performs weighted sum of multiple inputs and compares the sum with a threshold. We propose Spin-Memeristor Threshold Logic (SMTL) gates, which employ memristive cross-bar array (MCA) to perform current-mode summation of binary inputs, whereas, the low-voltage fast-switching spintronic threshold devices (STD) {{carry out the}} threshold operation in an energy efficient manner. <b>Field</b> <b>programmable</b> SMTL gate arrays can operate at a small terminal voltage of ~ 50 mV, resulting in ultra-low power consumption in gates as well as <b>programmable</b> <b>interconnect</b> networks. We evaluate the performance of SMTL using {{threshold logic}} synthesis. Results for common benchmarks show that SMTL based programmable logic hardware can be more than 100 x energy efficient than {{state of the art}} CMOS FPGA. Comment: this paper is submitted to IEEE Transactions on Nanotechnology. It is currently under revie...|$|R
40|$|Over {{the last}} decade <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) have {{become one of the}} key in digital circuit implementation. A {{fundamental}} part of their construction lies in their architecture, which governs the nature of their programmable logic functionality and their <b>programmable</b> <b>interconnect.</b> A remarkable effect of the quality of final device‟s performance in FPGA devices are speed performance, area efficiency and power consumption. But due to the integration of devices increases day-by-day or reduced size leads to the problem of leakage. Optimized area and power consumption is only achieved by reducing leakage energy in the design of FPGA which are 90 nm and below. This survey reviews the fundamental programming technologies that the programmability built on for leakage reduction in FPGA, and then describes the basic understanding of all the factors that {{play a significant role in}} the occurrence of leakage and their reduction...|$|R
5000|$|Programmable Logic Devices (PLDs) are digital devices with {{configurable}} {{logic and}} flip-flops linked together with <b>programmable</b> <b>interconnect.</b> Logic devices provide specific functions, including: ...|$|R
50|$|A {{reconfigurable}} datapath array (rDPA) is a {{semiconductor device}} containing reconfigurable data path units and <b>programmable</b> <b>interconnects,</b> first proposed by Rainer Kress in 1993, at the University of Kaiserslautern.|$|R
50|$|The Ambric Am2045 massively {{parallel}} processor array is a KPN implemented in actual silicon. Its 336 32-bit processors are connected by a <b>programmable</b> <b>interconnect</b> of dedicated FIFOs. Thus its channels are strictly bounded with blocking writes.|$|R
40|$|Multichip module {{technology}} {{can be used to}} dramatically increase the capability and performance of <b>field</b> <b>programmable</b> gate arrays (FPGAs) and the <b>field</b> <b>programmable</b> systems (FPS) that they are a part of. After an analysis of the key advantages that MCM technology has for FPGAs, we present the design of our first-generation silicon-on-silicon <b>field</b> <b>programmable</b> multi-chip module (FPMCM), analyze its limitations, and present some lessons learned in the development process. We conclude with a comparison of MCM-C and MCM-D technology for this application and suggest that the case for MCM-D for FPMCMs is most compelling when MCM-D is considered as a doorway to active substrate and chip-on-chip technologies. 1 Introduction 1. 1 <b>Field</b> <b>Programmable</b> Logic Devices <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) and <b>Field</b> <b>Programmable</b> Logic Devices (FPLDs) were introduced in the mid- 1980 's as a quick-turnaround alternative to mask programmed gate arrays of up to a few-thousand gates[Xil 93]. The basic id [...] ...|$|R
40|$|Motorola’s <b>field</b> <b>programmable</b> analog arrays can be {{utilized}} to enrich educational laboratories {{by providing a}} platform for experiments in control systems engineering, analog signal filtering, switched capacitor circuit design, and simulation of dynamic systems. The <b>field</b> <b>programmable</b> analog array package includes an excellent PC based software support system for application design. Additional hardware requirements are minimal as <b>field</b> <b>programmable</b> analog array is almost a self contained, stand-alone system. Primary application of <b>field</b> <b>programmable</b> analog array is analog signal processing and filtering. However, universal features of the hardware make it very suitable for applications in many other engineering disciplines...|$|R
50|$|<b>Field</b> <b>programmable</b> RF (FPRF) is a {{class of}} radio {{frequency}} transceiver microchip that mimics {{the concept of an}} FPGA (<b>field</b> <b>programmable</b> gate array) in the RF domain to deliver a multi-standard, multi frequency device.|$|R
40|$|<b>Field</b> <b>programmable</b> logic has thrived by {{offering}} an alternative {{technology for the}} realisation of conventional digital systems. The combination of user programmability, and rapidly increasing levels of logic integraton and operating speeds, explains the continued success of <b>field</b> <b>programmable</b> devices. Reconfigurable logic, and especially dynamically reconfigurable logic, are categories of <b>field</b> <b>programmable</b> logic {{that can be used}} to extend the desig-n space to cream digital systems with distinctly new characteristics...|$|R
5000|$|<b>Field</b> <b>Programmable</b> - Some {{models have}} <b>field</b> <b>programmable</b> options such as Non- Priority Scan, Alert Duration, Priority Alert, On/Off Duty, Reset Options, and Push-To-Listen. Many Minitor pagers can be {{hooked up to}} a {{computer}} with a special cable and options changed.|$|R
40|$|The {{trend of}} today 2 ̆ 7 s RF and {{microwave}} market is towards low cost, multi-functional and high performance systems. This research presents solutions {{to reduce the}} cost and turn-around time of RF integrated circuits by focusing on novel design approaches for implementing programmable circuits. Two main approaches are discussed; mask programmable RF arrays and <b>field</b> <b>programmable</b> RF arrays. ^ In the mask programmable technology a complementary metal oxide semiconductor (CMOS) transistor array is used as the basic building block for various RF and microwave circuit implementations. A simple post-CMOS processing technology that utilizes room temperature deposited Parylene-N with low permittivity (K= 2. 4) and extremely low loss (Loss Tangent 3 ̆c 6 × 10 - 4) is introduced. Parylene-N serves as a dielectric material to achieve high performance <b>programmable</b> <b>interconnects,</b> inductors and coplanar waveguide (CPW) transmission lines on the CMOS substrate. The interconnect programmability feature enables implementing various types of passive devices on Parylene-N. Application specific narrowband and wideband RF and microwave circuits are achieved only by changing the top metallization and vias (mask programming). 90 nm and 0. 13 μm RF transistor arrays in standard CMOS technology are used to design state of the art RF amplifiers in the frequency range of 4 - 22 GHz. ^ To implement <b>field</b> <b>programmable</b> RF and microwave circuits that can be dynamically programmed through software, several approaches are proposed. Integrated programmable tuners using CMOS varactors as well as transistor/capacitor pairs are implemented in standard 0. 13 μm CMOS technology. By digitally controlling the state of varactors or transistor switches, impedance of a low-loss shielded CPW transmission line is varied to 222 or 220 different impedances. A 4 - 5. 3 GHz programmable RF receiver implemented in this thesis {{is an example of the}} application of such MEMS-less tuners in RF front-ends of software defined radios. Finally, a fully integrated <b>field</b> <b>programmable</b> dual-state circuit is implemented for the first time in 130 nm CMOS technology. A 3 -stage distributed topology using shielded CPW lines and transistor switches is designed to operate as either distributed amplifier or distributed mixer and is programmed using one input bit. ...|$|R
50|$|Computing with memory {{platforms}} {{are typically}} {{used to provide}} the benefit of hardware reconfigurability. Reconfigurable computing platforms offer advantages in terms of reduced design cost, early time-to-market, rapid prototyping and easily customizable hardware systems. FPGAs present a popular reconfigurable computing platform for implementing digital circuits. They follow a purely spatial computing model. Since their inception in 1985, {{the basic structure of}} the FPGAs has continued to consist of two-dimensional array of Configurable Logic blocks (CLBs) and a <b>programmable</b> <b>interconnect</b> matrix. FPGA performance and power dissipation is largely dominated by the elaborate <b>programmable</b> <b>interconnect</b> (PI) architecture. An effective way of reducing the impact of the PI architecture in FPGA is to place small LUTs in close proximity (referred as clusters) and to allow intra-cluster communication using local interconnects. Due to the benefits of a clustered FPGA architecture, major FPGA vendors have incorporated it in their commercial products. Investigations have also been made to reduce the overhead due to PI in fine-grained FPGAs by mapping larger multi-input multi-output LUTs to embedded memory blocks. Although it follows a similar spatial computing model, part of the logic functions are implemented using embedded memory blocks while the remaining part is realized using smaller LUTs. Such a heterogeneous mapping can improve the area and performance by reducing the contribution of <b>programmable</b> <b>interconnects.</b>|$|R
30|$|No {{of rules}} are <b>field</b> <b>programmable.</b>|$|R
40|$|This paper {{presents}} an implementation of Genetic Programming using a <b>Field</b> <b>Programmable</b> Gate Array. This novel implementation uses {{a high level}} language to hardware compilation system, called Handel-C, to produce a <b>Field</b> <b>Programmable</b> Logic Array capable of performing all the functions required of a Genetic Programming System. Two simple test problems demonstrate that GP running on a <b>Field</b> <b>Programmable</b> Gate Array can outperform a software {{version of the same}} algorithm by exploiting the intrinsic parallelism available using hardware, and the geometric parallelisation of Genetic Programming...|$|R
40|$|A {{system and}} method for {{cognitive}} processing of sensor data. A processor array receiving analog sensor data and having <b>programmable</b> <b>interconnects,</b> multiplication weights, and filters provides for adaptive learning in real-time. A static {{random access memory}} contains the programmable data for the processor array and the stored data is modified to provide for adaptive learning...|$|R
40|$|This paper {{summarizes}} {{our current}} {{effort in the}} BEE 2 project to design and construct a high-end reconfigurable computer (HERC) system based solely on <b>field</b> <b>programmable</b> gate arrays (FPGAs) as the processing elements. FPGAs offer many important advantages over conventional microprocessors, such as flexible arithmetic precision, higher computational density per unit silicon area, and lower power consumption. The <b>programmable</b> <b>interconnect</b> structure unique to FPGA technology {{has made it possible}} to tailor a HERC system, such as the BEE 2 system, on a per-problem basis to best take advantage of task specific dataflow, memory access patterns, and node-to-node communication patterns. The BEE 2 project is a coordinated attack on the elements needed to demonstrate a practical, costeffective, high-end reconfigurable computer: the design of a processing module to be used as the building block for a family of high-end reconfigurable computers; the development of several programming models; and the demonstration of the efficiency of the machine on a set of applications drawn from various research projects at Berkeley Wireless Research Center (BWRC), ranging from high-performance DSP and communication systems to traditional scientific computing. Preliminary analyses show that on selected DSP applications, when compared to a microprocessor-based system with similar power consumption and cost, BEE 2 can provide over 10 times more computational efficiency...|$|R
5000|$|... in <b>Field</b> <b>Programmable</b> Gate Array and Complex Programmable Logic Device ...|$|R
40|$|Employing a <b>field</b> <b>programmable</b> {{gate array}} to realize space-vector pulse width {{modulation}} is a solution to boost system performance. Although there is much literature {{in the application of}} three-phase space-vector {{pulse width modulation}} based on <b>field</b> <b>programmable</b> gate arrays, most is on conventional space-vector pulse width modulation with designs that are complicated. This article will present a simple approach to realize five-segment discontinuous space-vector pulse width modulation based on a <b>field</b> <b>programmable</b> gate array, in which the judging of sectors and the calculation of the firing time are simpler with fewer switching losses. The proposed space-vector pulse width modulation has been successfully designed and implemented to drive on a three-phase inverter system that is loaded by an induction machine of 1. 5 kW using the APEX 20 KE Altera <b>field</b> <b>programmable</b> gate array (Altera Corporation, San Jose, California, USA) ...|$|R
5000|$|Some FPGAs have analog {{features}} {{in addition to}} digital functions. The most common analog feature is programmable slew rate on each output pin,allowing the engineer to set low rates on lightly loaded pins that would otherwise ring or couple unacceptably, and to set higher rates on heavily loaded pins on high-speed channels that would otherwise run too slowly.Also common are quartz-crystal oscillators, on-chip resistance-capacitance oscillators, and phase-locked loops with embedded voltage-controlled oscillators used for clock generation and management and for high-speed serializer-deserializer (SERDES) transmit clocks and receiver clock recovery. Fairly common are differential comparators on input pins designed {{to be connected to}} differential signaling channels.A few [...] "mixed signal FPGAs" [...] have integrated peripheral analog-to-digital converters (ADCs) and digital-to-analog converters (DACs) with analog signal conditioning blocks allowing them to operate as a system-on-a-chip.Such devices blur the line between an FPGA, which carries digital ones and zeros on its internal <b>programmable</b> <b>interconnect</b> fabric,and field-programmable analog array (FPAA), which carries analog values on its internal <b>programmable</b> <b>interconnect</b> fabric.|$|R
50|$|Stellarton is a Tunnel Creek CPU with an Altera <b>Field</b> <b>Programmable</b> Gate Array (FPGA).|$|R
40|$|CMOS scaling is {{currently}} facing a technological barrier. Novel technologies are being proposed {{to keep up}} with the need for computation power and speed. One of the proposed ideas is the quantum-dot cellular automata (QCA) technology. QCA uses quantum mechanical effects in the device at the molecular scale. QCA systems have the potential for low power, high density, and regularity. This thesis studies QCA devices and uses those devices to build a simple <b>field</b> <b>programmable</b> gate array (FPGA). The FPGA is a combination of multiple configure logical blocks (CLBs) tiled together. Most previous work on this area has focused on fixed logic and <b>programmable</b> <b>interconnect.</b> In contrast, the work at the Rochester Institute of Technology (RIT) has designed and simulated a configurable logic block (CLB) based on look-up tables (LUTs). This thesis presents a simple FPGA that consists of multiple copies of the CLB created by the RIT group. The FPGA is configured to emulate a ripple-carry adder and a bit-serial multiplier. The latency and throughput of both functions are analyzed. We employ a multilevel approach to design specification and simulation. QCADesigner software is used for layout and simulation of an individual CLB. For the FPGA, the high-level HDLQ Verilog library is used. This hybrid approach provides a high degree of confidence in reasonable simulation time...|$|R
50|$|The new {{correlator}} is a 96 input continuum correlator using <b>Field</b> <b>Programmable</b> Gate Array (FPGA) chips.|$|R
