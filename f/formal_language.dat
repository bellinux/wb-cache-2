3416|3667|Public
5|$|Joehana {{appears to}} have been {{familiar}} with the traditional literatures of Maritime Southeast Asia, drawing on the Ramayana for Nangis Wibisana. Wayang characters such as the clown Cepot are referred to in his writings, and he draws on traditional Sundanese storytelling techniques, such as the pantun form of poetry common in wayang golek performances. However, there are significant shifts. His writings depart from the traditional forms of literature such as wawacan, instead embracing the novel, a European literary form. Unlike the <b>formal</b> <b>language</b> used in traditional literature, Joehana wrote in everyday Sundanese. The grammar and structure shows evidence of influence from other languages, and the vocabulary is likewise not purely Sundanese; some Dutch (the language of the colonial government) is mixed in.|$|E
5|$|Shakespeare {{also uses}} sub-plots {{to offer a}} clearer view {{of the actions of}} the main characters. For example, when the play begins, Romeo is in love with Rosaline, who has refused all of his advances. Romeo's infatuation with her stands in obvious {{contrast}} to his later love for Juliet. This provides a comparison through which the audience can see the seriousness of Romeo and Juliet's love and marriage. Paris' love for Juliet also sets up a contrast between Juliet's feelings for him and her feelings for Romeo. The <b>formal</b> <b>language</b> she uses around Paris, as well as the way she talks about him to her Nurse, show that her feelings clearly lie with Romeo. Beyond this, the sub-plot of the Montague–Capulet feud overarches the whole play, providing an atmosphere of hate that is the main contributor to the play's tragic end.|$|E
25|$|In <b>formal</b> <b>language</b> {{theory and}} in {{computer}} science, lambda denotes the empty string.|$|E
50|$|In metalogic, 'syntax' {{has to do}} with <b>formal</b> <b>languages</b> or <b>formal</b> systems {{without regard}} to any {{interpretation}} of them, whereas, 'semantics' {{has to do with}} interpretations of <b>formal</b> <b>languages.</b> The term 'syntactic' has a slightly wider scope than 'proof-theoretic', since it may be applied to properties of <b>formal</b> <b>languages</b> without any deductive systems, as well as to formal systems. 'Semantic' is synonymous with 'model-theoretic'.|$|R
40|$|Real-time systems demand {{functional}} as well astemporal correctness. Complex {{interactions with}} theenvironment and strict adherence to time bounds are maincharacteristics of these systems. The use of formal methods is anatural choice for real-time system development. Formalmodels are more rigorous {{in nature and}} ensure completeness. Ifa system is highly sensitive to time delays, time behaviour ofreal-time system must be specified through <b>formal</b> <b>languages.</b> Petri nets, state charts and UML {{can be used to}} represent timebehaviour, but these techniques are lesser effective than formallanguages. The strength of <b>formal</b> <b>languages</b> depends uponcompleteness and possibility of partial mathematicalverification. In order to study time behaviour, we have surveyedexisting <b>formal</b> <b>languages</b> used to model real-time systems. Wehave selected typical languages that are supposed to represententire set of real-time <b>formal</b> <b>languages.</b> Some parameters aredefined to critically evaluate these languages. We have analysedand compared <b>formal</b> <b>languages</b> for real-time systems using ourdefined evaluation criteria. As a result of our analysis, weconclude that all languages incorporate special constructs tocapture time behaviour. Effectiveness of these constructs can becompared {{on the basis of the}} capability of the languages tospecify time domain. We also conclude that there is an ardentneed to standardise <b>formal</b> <b>languages</b> used to specify real-timesystems...|$|R
50|$|Brzozowski {{worked on}} regular {{expressions}} and on syntactic semigroups of <b>formal</b> <b>languages.</b> The result was Characterizations of locally testable events written together with Imre Simon, {{which had a}} similar impact {{on the development of}} the algebraic theory of <b>formal</b> <b>languages</b> as Marcel-Paul Schützenberger's characterization of the star-free languages.|$|R
25|$|English: Concept Notation, the <b>Formal</b> <b>Language</b> of the Pure Thought {{like that}} of Arithmetics.|$|E
25|$|The {{definition}} of theorems as {{elements of a}} <b>formal</b> <b>language</b> allows for results in proof theory that study the structure of formal proofs {{and the structure of}} provable formulas. The most famous result is Gödel's incompleteness theorem; by representing theorems about basic number theory as expressions in a <b>formal</b> <b>language,</b> and then representing this language within number theory itself, Gödel constructed examples of statements that are neither provable nor disprovable from axiomatizations of number theory.|$|E
25|$|In the <b>formal</b> <b>language</b> {{formalization}} of an antimatroid we {{may also}} identify {{a subset of}} words that determine the whole language, the basic words.|$|E
50|$|Language {{theory is}} {{a branch of}} {{mathematics}} concerned with describing languages {{as a set of}} operations over an alphabet. It is closely linked with automata theory, as automata are used to generate and recognize <b>formal</b> <b>languages.</b> There are several classes of <b>formal</b> <b>languages,</b> each allowing more complex language specification than the one before it, i.e. Chomsky hierarchy, and each corresponding to a class of automata which recognizes it. Because automata are used as models for computation, <b>formal</b> <b>languages</b> are the preferred mode of specification for any problem that must be computed.|$|R
40|$|Design {{methods in}} {{information}} systems frequently create software descriptions using <b>formal</b> <b>languages.</b> Nonetheless, most software designers prefer to describe software using natural languages. This distinction {{is not simply}} a matter of convenience. Natural languages are not the same as formal languages; in particular, natural languages do not follow the notions of equivalence used by <b>formal</b> <b>languages.</b> In this paper, we show both the existence and coexistence of different notions of equivalence by extending the no-tion of oracles used in <b>formal</b> <b>languages.</b> This allows distinctions to be made between the trustworthy oracles assumed by <b>formal</b> <b>languages</b> and the untrust-worthy oracles used by natural languages. By examin-ing the notion of equivalence, we hope to encourage designers of software to rethink the place of ambiguity in software design. Comment: 8 page...|$|R
2500|$|... 1956– Noam Chomsky {{describes}} an hierarchy of <b>formal</b> <b>languages.</b>|$|R
25|$|Conversely, {{for each}} NFA, {{there is a}} DFA such that it recognizes the same <b>formal</b> <b>language.</b> The DFA can be {{constructed}} using the powerset construction.|$|E
25|$|Pronouns such as niyo (2nd person plural) and nila (3rd person plural) {{are used}} on a single 2nd person in polite or <b>formal</b> <b>language.</b> See Tagalog grammar.|$|E
25|$|The {{concept of}} a proof is formalized {{in the field of}} {{mathematical}} logic. A formal proof is written in a <b>formal</b> <b>language</b> instead of a natural language. A formal proof is defined as sequence of formulas in a <b>formal</b> <b>language,</b> in which each formula is a logical consequence of preceding formulas. Having a definition of formal proof makes the concept of proof amenable to study. Indeed, the field of proof theory studies formal proofs and their properties, for example, the property that a statement has a formal proof. An application of proof theory is to show that certain undecidable statements are not provable.|$|E
50|$|<b>Formal</b> <b>languages</b> allow formalizing {{the concept}} of well-formed expressions.|$|R
50|$|For these examples, <b>formal</b> <b>languages</b> are {{specified}} using set-builder notation.|$|R
5000|$|... word problem (computability) is a {{decision}} problem concerning <b>formal</b> <b>languages</b> ...|$|R
25|$|In German language-speaking countries, {{the word}} Doktor {{refers to a}} {{research}} doctorate awardee in <b>formal</b> <b>language</b> (similar to a PhD), and is distinct from Arzt, a medical practitioner, though colloquial {{use of the word}} Doktor for physician is common.|$|E
25|$|Decision {{problems}} {{are one of}} the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem {{can be viewed as a}} <b>formal</b> <b>language,</b> where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the <b>formal</b> <b>language</b> under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.|$|E
25|$|A Deterministic finite {{automaton}} (DFA) {{can be seen}} as a special kind of NFA, in which for each state and alphabet, the transition function has exactly one state. Thus, it is clear that every <b>formal</b> <b>language</b> that can be recognized by a DFA can be recognized by a NFA.|$|E
40|$|One of {{the most}} {{prominent}} benefits gained from the emergence of Semantic Web technology is the possibility to access data more efficiently, through the use of ontologies [18]. Querying such data requires using <b>formal</b> <b>languages</b> such as SeRQL [7] or SPARQL [39]. However, the syntax of these <b>formal</b> <b>languages</b> tends to be to...|$|R
40|$|AbstractFormal {{power series}} are an {{extension}} of <b>formal</b> <b>languages.</b> Recognizable <b>formal</b> power series can be captured by the so-called weighted finite automata, generalizing finite state machines. In this paper, motivated by codings of <b>formal</b> <b>languages,</b> we introduce and investigate two types of transformations for formal power series. We characterize when these transformations preserve recognizability, generalizing the recent results of Zhang [16] to the formal power series setting. We show, for example, that the “square-root” operation, while preserving regularity for <b>formal</b> <b>languages,</b> preserves recognizability for formal power series when the underlying semiring is commutative or locally finite, but not in general...|$|R
5000|$|... #Subtitle level 2: Alternative {{characterizations}} and {{relation to}} other <b>formal</b> <b>languages</b> ...|$|R
25|$|The use of {{language}} in the play has different denotations and connotations for most characters. Characters who are poorly educated, like Hester, Jabber, and Amiga Gringa use less complex words and syntax. The more educated characters like the Doctor and Reverend D. use a more <b>formal</b> <b>language.</b>|$|E
25|$|Tarski {{proved a}} {{stronger}} theorem {{than the one}} stated above, using an entirely syntactical method. The resulting theorem applies to any <b>formal</b> <b>language</b> with negation, and with sufficient capability for self-reference that the diagonal lemma holds. First-order arithmetic satisfies these preconditions, but the theorem applies to much more general formal systems.|$|E
25|$|The {{proportion}} of vocabulary of Chinese origin thus {{tends to be}} greater in technical, scientific, abstract or <b>formal</b> <b>language</b> or registers. For example, Sino-Japanese words account for about 35% of the words in entertainment magazines (where borrowings from English are common), over half the words in newspapers and 60% of the words in science magazines.|$|E
50|$|An {{operator}} precedence grammar {{is a kind}} of grammar for <b>formal</b> <b>languages.</b>|$|R
5000|$|The main modern {{approaches}} to semantics for <b>formal</b> <b>languages</b> are the following: ...|$|R
50|$|In logic, an {{interpretation}} is an assignment of {{meaning to the}} symbols of a <b>language.</b> The <b>formal</b> <b>languages</b> used in mathematics, logic, and theoretical computer science are defined in solely syntactic terms, and as such {{do not have any}} meaning until they are given some interpretation. The general study of interpretations of <b>formal</b> <b>languages</b> is called <b>formal</b> semantics.|$|R
25|$|New Delhi has a {{population}} of 257,803. Hindi is the most widely spoken language in New Delhi and the lingua franca of the city. English is primarily used as the <b>formal</b> <b>language</b> by business and government institutes. New Delhi has a literacy rate of 89.38% according to 2011 census, which is highest in Delhi.|$|E
25|$|Frege, Gottlob (1879), Begriffsschrift, eine der arithmetischen nachgebildete Formelsprache des reinen Denkens. Halle a. S.: Louis Nebert. Translation: Concept Script, a <b>formal</b> <b>language</b> of pure thought {{modelled}} {{upon that}} of arithmetic, by S. Bauer-Mengelberg in Jean Van Heijenoort, ed., 1967. From Frege to Gödel: A Source Book in Mathematical Logic, 1879–1931. Harvard University Press.|$|E
25|$|The name “Fibonacci word” {{has also}} been {{used to refer to}} the members of a <b>formal</b> <b>language</b> L {{consisting}} of strings of zeros and ones with no two repeated ones. Any prefix of the specific Fibonacci word belongs to L, but so do many other strings. L has a Fibonacci number of members of each possible length.|$|E
50|$|In the <b>formal</b> <b>languages</b> of {{computer}} science and linguistics, the Chomsky hierarchy (occasionally {{referred to as}} Chomsky-Schützenberger hierarchy) is a containment hierarchy of classes of formal grammars.This hierarchy of grammars was described by Noam Chomsky in 1956. It is also named after Marcel-Paul Schützenberger, who {{played a crucial role}} in the development of the theory of <b>formal</b> <b>languages.</b>|$|R
5000|$|Logic of graphs, one {{of several}} <b>formal</b> <b>languages</b> used to specify graph {{properties}} ...|$|R
5000|$|Are certain automata closed under union, intersection, or {{complementation}} of <b>formal</b> <b>languages?</b> (Closure properties) ...|$|R
