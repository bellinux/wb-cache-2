2|740|Public
50|$|Intel {{processors}} {{from the}} 386 onward allowed a virtual 8086 mode, which simplified the hardware required to implement expanded memory for DOS applications. Expanded memory managers such as Quarterdeck's QEMM product and Microsoft's EMM386 supported the <b>expanded</b> <b>memory</b> <b>standard</b> without requirement for special memory boards.|$|E
5000|$|Expanded {{memory is}} an {{umbrella}} term for several incompatible technology variants. The {{most widely used}} variant was the Expanded Memory Specification (EMS), which was developed jointly by Lotus Software, Intel, and Microsoft, so that this specification was {{sometimes referred to as}} [...] "LIM EMS." [...] LIM EMS had several versions. The first widely implemented version was EMS 3.2, which supported up to 8 MB of expanded memory and uses parts of the address space normally dedicated to communication with peripherals (upper memory) to map portions of the expanded memory. EEMS, an expanded memory management standard competing with LIM EMS 3.x, was developed by AST Research, Quadram and Ashton-Tate; it could map any area of the lower 1 MB. EEMS ultimately was incorporated in LIM EMS 4.0, which supported up to 32 MB of expanded memory and provided some support for DOS multitasking as well. IBM however created its own <b>expanded</b> <b>memory</b> <b>standard</b> called XMA.|$|E
50|$|IBM {{developed}} their own <b>memory</b> <b>standard</b> called <b>Expanded</b> <b>Memory</b> Adapter (XMA); the IBM DOS driver for it was XMAEM.SYS. Unlike EMS, the IBM expansion boards could be addressed both using an <b>expanded</b> <b>memory</b> model and as extended <b>memory.</b> The <b>expanded</b> <b>memory</b> hardware interface used by XMA boards is however incompatible with EMS. A XMA2EMS.SYS driver provided however EMS emulation for XMA boards. XMA boards were first introduced for the 1986 (revamped) models of the 3270 PC.|$|R
5000|$|The duelling <b>expanded</b> <b>memory</b> (EMS) and {{extended}} <b>memory</b> (XMS) <b>standards</b> {{of the late}} 1980s, both developed without input from IBM.|$|R
50|$|The JEIDA <b>memory</b> card <b>standard</b> was {{a popular}} <b>memory</b> card <b>standard</b> at the {{beginning}} of memory cards appearing on portable computers. JEIDA cards could be used to <b>expand</b> system <b>memory</b> or as a solid-state storage drive. Before the advent of the JEIDA standard, laptops had proprietary cards that were not interoperable with other manufacturers laptops, other laptop lines, or even other models in the same line.|$|R
50|$|The <b>Expanded</b> <b>Memory</b> Specification or EMS is the {{specification}} {{describing the}} use of <b>expanded</b> <b>memory.</b> EMS functions are accessible through software interrupt 67h. Programs using EMS must first establish {{the presence of an}} installed <b>expanded</b> <b>memory</b> manager by checking for a device driver with the device name EMMXXXX0.|$|R
5000|$|Allocation {{and use of}} <b>expanded</b> <b>memory</b> was not {{transparent}} to application programs. The application had to {{keep track}} of which bank of <b>expanded</b> <b>memory</b> contained a particular piece of data, and when access to that data was required, the application had to request (through a driver program) the <b>expanded</b> <b>memory</b> board to map that part of memory into the processor's address space. Although applications could use <b>expanded</b> <b>memory</b> with relative freedom, many other software components such as drivers and TSRs were still normally constrained to reside within the 640K [...] "conventional memory" [...] area, which soon became a critically scarce resource.|$|R
50|$|The name EMM386 {{was used}} for the <b>expanded</b> <b>memory</b> {{managers}} of both Microsoft's MS-DOS and Digital Research's DR-DOS, which created <b>expanded</b> <b>memory</b> using extended memory on Intel 80386 CPUs. There also is an EMM386.EXE available in FreeDOS.|$|R
50|$|Later, some {{motherboard}} chipsets of Intel 80286-based computers implemented an <b>expanded</b> <b>memory</b> {{scheme that}} did not require add-on boards, notably the NEAT chipset. Typically, software switches determined how much memory should be used as <b>expanded</b> <b>memory</b> and how much should be used as extended memory.|$|R
50|$|This {{insertion}} of a memory {{window into the}} peripheral address space could originally be accomplished only through specific expansion boards, plugged into the ISA expansion bus of the computer. Famous 1980s <b>expanded</b> <b>memory</b> boards were AST RAMpage, IBM PS/2 80286 Memory Expansion Option, AT&T <b>Expanded</b> <b>Memory</b> Adapter and the Intel Above Board. Given the price of RAM during the period, up to several hundred dollars per MiB, and the quality and reputation of the above brand names, an <b>expanded</b> <b>memory</b> board was very expensive.|$|R
5000|$|CEMM, for Compaq <b>Expanded</b> <b>Memory</b> Manager was {{the first}} {{so-called}} PC [...] "memory manager" [...] for Intel 80386 CPUs, able to transform [...] "XMS" [...] extended memory into [...] "EMS" [...] <b>expanded</b> <b>memory</b> by using the virtual memory features and the virtual 8086 mode of the CPU.|$|R
50|$|Hardware {{extensions}} allowed {{access to}} more memory than the 8086 CPU could address through paging memory. This memory was known as <b>expanded</b> <b>memory.</b> An industry de facto standard {{was developed by the}} LIM consortium, composed of Lotus, Intel and Microsoft. This <b>standard</b> was the <b>Expanded</b> <b>Memory</b> Specification (EMS). Pages of <b>memory</b> from <b>expanded</b> <b>memory</b> hardware were accessible through an addressing window placed into a free area in the UMA space, and by exchanging it for other pages when needed to access other memory. EMS supported 16 MB of space.|$|R
50|$|Extended memory {{should not}} be {{confused}} with <b>expanded</b> <b>memory,</b> an earlier method for expanding the IBM PC's memory capacity beyond 640 kB (655,360 bytes) using an expansion card with bank switched memory modules. Because of the available support for <b>expanded</b> <b>memory</b> in popular applications, device drivers were developed that emulated <b>expanded</b> <b>memory</b> using extended memory. Later two additional methods were developed allowing direct access to a small portion of extended memory from real mode. These memory areas are referred to as the high memory area (HMA) and the upper memory area (UMA; also referred to as upper memory blocks or UMBs).|$|R
50|$|The third line loads the EMM386 memory manager, which emulates <b>expanded</b> <b>memory.</b> The {{command line}} {{argument}} RAM allows {{the use of}} the upper memory area. Another argument that can be given to EMM386.EXE is NOEMS, which allows use of the upper memory area without emulating <b>expanded</b> <b>memory.</b> The NOEMS switch also frees up more upper memory blocks.|$|R
5000|$|<b>Expanded</b> <b>memory</b> {{piggyback}} board, adds {{additional memory}} to some EMS and EEMS boards ...|$|R
5000|$|... em (<b>expanded</b> <b>memory,</b> {{used for}} all kinds of memory beyond the 6502's 64K barrier, similar EMS) ...|$|R
50|$|Lotus Development, Intel, and Microsoft cooperated {{to develop}} the EMS {{standard}} (aka LIM EMS). The first publicly available version of EMS, version 3.0 allowed access of up to 4 MB of <b>expanded</b> <b>memory.</b> This was increased to 8 MB with version 3.2 of the specification. The final version of EMS, version 4.0 increased {{the maximum amount of}} <b>expanded</b> <b>memory</b> to 32 MB and supported additional functionality.|$|R
50|$|Helix {{introduced}} version 1.10 of NETROOM, in January 1991, with a single-user license. This version included {{support for}} Microsoft Windows 3.0, and added an integrated 286 and 386 <b>expanded</b> <b>memory</b> manager. The NETROOM 286/386 memory manager provided access to <b>expanded</b> <b>memory</b> and extended memory on Intel 80386 or newer systems {{as well as}} on Intel 80286 systems based on the Chips and Technologies NEAT chipset.|$|R
5000|$|... #Caption: Several <b>expanded</b> <b>memory</b> {{pages are}} bank {{switched}} in the page frame, {{part of the}} upper memory area.|$|R
5000|$|... #Caption: A {{section of}} the lower 1MB address space {{provides}} a 'window' into several megabytes of <b>Expanded</b> <b>Memory</b> ...|$|R
50|$|Upper memory blocks can {{be created}} by mapping {{extended}} memory into the upper memory area when running in virtual x86 mode. This is similar to how <b>expanded</b> <b>memory</b> can be emulated using extended memory so this method of providing upper memory blocks is usually provided by the <b>expanded</b> <b>memory</b> manager (for example EMM386). Ironically the application programming interface for managing the upper memory blocks is specified in the eXtended Memory Specification.|$|R
50|$|As memory prices declined, {{application}} {{programs such}} as spreadsheets and computer-aided drafting were changed {{to take advantage of}} more and more physical memory in the system. Virtual memory in the 8088 and 8086 was not supported by the processor hardware, and disk technology of the time would make it too slow and cumbersome to be practical. <b>Expanded</b> <b>memory</b> was a system that allowed application programs to access more RAM than directly visible to the processor's address space. The process was a form of bank switching. When extra RAM was needed, driver software would temporarily make a piece of <b>expanded</b> <b>memory</b> accessible to the processor; when the data in that piece of memory was updated, another part could be swapped into the processor's address space. For the IBM PC and IBM PC/XT, with only 20 address lines, special-purpose <b>expanded</b> <b>memory</b> cards were made containing perhaps a mebibyte, or more, of <b>expanded</b> <b>memory,</b> with logic on the board to make that memory accessible to the processor in defined parts of the 8088 address space.|$|R
50|$|At NAMM in 2016 Clavia {{launched}} the Nord Piano 3, which includes an improved 88-key keybed and an <b>expanded</b> <b>memory.</b>|$|R
50|$|An <b>expanded</b> <b>memory</b> board, being a {{hardware}} peripheral, needed a software device driver, which exported its services. Such a device driver was called <b>expanded</b> <b>memory</b> manager. Its name was variable; the previously mentioned boards used REMM.SYS (AST), PS2EMM.SYS (IBM), AEMM.SYS (AT&T) and EMM.SYS (Intel) respectively. Later, the expression became associated with software-only solutions requiring the Intel 80386 processor, for example Quarterdeck's QEMM, Qualitas' 386MAX or the default EMM386 in MS-DOS, PC DOS and DR-DOS.|$|R
50|$|Intel 8086 and 8088-based PCs require <b>expanded</b> <b>memory</b> (EMS) {{boards to}} work with more than 640 kB of memory. (Though the 8088 can address one {{megabyte}} of memory, the last 384 kB of that is used or reserved for the BIOS ROM, BASIC ROM, extension ROMs installed on adapter cards, and memory address space used by devices including display adapter RAM and even the 64 kB EMS page frame itself.) The original IBM PC AT used an Intel 80286 processor which can access up to 16 MB of <b>memory</b> (though <b>standard</b> DOS applications cannot use more than one megabyte without using additional APIs.) Intel 80286-based computers running under OS/2 can work with the maximum memory.|$|R
5000|$|Reepithelialized {{orthotopic}} tracheal allografts <b>expand</b> <b>memory</b> cytotoxic T lymphocytes but show {{no evidence}} of chronic rejection. Cleven HA, Genden EM, Moran TM. Transplantation, 2005 ...|$|R
5000|$|Hybrid Memory Cube stacked <b>memory</b> <b>standard</b> from Micron (2011) ...|$|R
50|$|In DOS <b>memory</b> management, <b>expanded</b> <b>memory</b> is {{a system}} of bank {{switching}} that provided additional memory to DOS programs beyond the limit of conventional memory (640 KB).|$|R
50|$|Socket G34 {{originally}} {{started out}} as Socket G3, which used the G3MX to <b>expand</b> <b>memory</b> capacity. Socket G3 and G3MX were canceled altogether, and replaced with Socket G34.|$|R
5000|$|GDDR5X — new <b>memory</b> <b>standard</b> {{supporting}} 10Gbit/s data rates, updated memory controller.|$|R
50|$|QEMM {{provides}} {{access to}} the Upper Memory Area (UMA) and <b>memory</b> through the <b>Expanded</b> <b>Memory</b> Specification (EMS), Extended Memory Specification (XMS), Virtual Control Program Interface (VCPI) and DOS Protected Mode Interface (DPMI).|$|R
50|$|Symphony was {{designed}} to work completely in the standard 640k of conventional memory, supplemented by any <b>expanded</b> <b>memory.</b> Similar and competitive packages included SmartWare, Microsoft Works, Context MBA, Framework, Enable and Ability Office.|$|R
5000|$|The JEDEC <b>memory</b> <b>standards</b> use IEEE 100 {{nomenclature}} which {{quote the}} gigabyte as [...] (230 bytes).|$|R
50|$|Beginning in 1986, the {{built-in}} memory management features of Intel 80386 processor freely modeled the address space when running legacy real mode software, making hardware solutions unnecessary. <b>Expanded</b> <b>memory</b> could be simulated in software.|$|R
50|$|Interaction between {{extended}} <b>memory,</b> <b>expanded</b> <b>memory</b> emulation and DOS extenders {{ended up}} being regulated by the XMS, Virtual Control Program Interface (VCPI), DOS Protected Mode Interface (DPMI) and DOS Protected Mode Services (DPMS) specifications.|$|R
50|$|Just as {{the other}} <b>expanded</b> <b>memory</b> managers, EMM386 uses the processor's virtual 8086 mode. It {{temporarily}} shuts down during a Windows session in 386 Enhanced mode, with Windows' protected mode kernel taking over its role.|$|R
