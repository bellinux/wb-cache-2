12|1309|Public
50|$|Yano {{is known}} for her work in Inventory Theory, Logistics Management, Supply Chain Management, and Service Management, and serves or {{has served on the}} {{editorial}} board of IIE Transactions, <b>Interfaces,</b> <b>Management</b> Science, Manufacturing & Service Operations Management, Naval Research Logistics, Operations Research, and Productions and Operations Management.|$|E
50|$|Sysload {{products}} {{are based on}} a 3-tiered (user <b>interfaces,</b> <b>management</b> modules and collection and analysis modules) architecture metric collection technology that provides detailed information on large and complex environments. Sysload software {{products are}} available for various virtualized and physical platforms including: VMware, Windows, AIX, HP-UX, Solaris, Linux, I-series, PowerVM, etc.|$|E
30|$|An E 2 E {{vision for}} 5 G, which {{should result in}} new service capabilities, <b>interfaces,</b> <b>management</b> and control schemes, access and non-access {{protocols}} with suitable procedures, functions, advanced algorithms, and new classes of virtual or physical resources.|$|E
40|$|The {{notion of}} {{interactive}} multi-media systems is introduced. A {{brief review of}} user <b>interface</b> <b>management</b> systems is given and the ISA Dialog Manager with its main features is presented. Possible architectures for the extension of user <b>interface</b> <b>management</b> systems towards multimedia user <b>interface</b> <b>management</b> systems are discussed. The current implementation status of the Multimedia Builder, {{an extension of the}} ISA Dialog Manager and its future directions are outlined. The Multex system — a multimedia user <b>interface</b> <b>management</b> system based on the DIAMANT user <b>interface</b> <b>management</b> system is discusses as example of a multi-modal user <b>interface</b> <b>management</b> system...|$|R
40|$|M. Com. (Informatics) In {{this study}} {{the issue on}} User <b>Interface</b> <b>Management</b> Systems (UIMSs) is addressed. Specific {{attention}} {{is given to the}} design principles regarding development of user <b>interface</b> <b>management</b> systems that allow the creation of graphical user interfaces for existing text-oriented command-line applications. As an introduction the concept of user <b>interface</b> <b>management</b> systems is discussed and a working and formal definition is derived. Thereafter a survey is discussed concerning user interface tools. A user <b>interface</b> <b>management</b> system architecture is proposed; planning, design and development aspects of user <b>interface</b> <b>management</b> systems are addressed, and the effect of human factors in the design of a user <b>interface</b> <b>management</b> system is discussed. Attention is also given to various interaction and dialogue models [...] ...|$|R
40|$|Human-{{computer}} <b>interface</b> <b>management,</b> from {{a computer}} science viewpoint, focuses {{on the process of}} developing quality human computer interfaces, including their representation, design, implementation, execution, evaluation, and maintenance. This survey presents important concepts of interface management: dialogue independence, structural modeling, specification, rapid prototyping, holistic software engineering, control structures, and support environments, including User <b>Interface</b> <b>Management</b> System Tools. Several systems for human-computer <b>interface</b> <b>management</b> are presented to illustrate these concepts...|$|R
40|$|For {{applications}} {{relying on}} the transfer of multimedia, and in particular continuous media, {{it is essential that}} quality of service (QoS) is guaranteed system-wide, including end-systems, communications systems and networks. Although researchers have addressed many isolated areas of QoS provision, little attention has so far been paid to the definition of an integrated and coherent framework that incorporates QoS <b>interfaces,</b> <b>management</b> and mechanisms across all architectural layers. To address this deficiency, we are developing a Quality of Service Architecture (QoS-A) which offers a framework to specify and implement the required performance properties of multimedia applications over high-performance ATM-based networks. The QoS-A incorporates the notions of flow, service contract and flow management. Flows characterise the production, transmission and eventual consumption of single media streams, service contracts are binding agreements between users and providers and flow manageme [...] ...|$|E
40|$|The {{widespread}} use of distributed multimedia applications is posing new challenges {{in the management of}} resources for guaranteeing Quality of Service (QoS). For applications relying on the transfer of multimedia information, and in particular continuous media, it is essential that QoS is guaranteed at any level of the distributed system, including the operating system, the transport protocol, and the underlying network. Enhanced protocol support for end-to-end QoS negotiation, renegotiation, and indication of QoS degradation is also required. Little attention, however, has so far been paid to the definition of a coherent framework that incorporates QoS <b>interfaces,</b> <b>management</b> and mechanisms across all the layers of a management architecture. This paper describes a preliminary study in the development of an integrated Quality of Service Management Architecture (QoSMA) which offers a framework to specify and manage the required performance properties of multimedia applications over hetero [...] ...|$|E
40|$|The {{integration}} of distributed multimedia systems support into a communications architecture encompassing the new multiservice networks poses significant challenges. A key observation {{about the new}} environment is that Quality of Service (QOS) provides a unifying theme around {{which most of the}} new communications requirements can be grouped. For applications relying on the transfer of multimedia information, and in particular continuous media, it is essential that QOS is guaranteed system-wide, including the distributed system platform, the transport protocol and the multiservice network. Enhanced protocol support such as end-to-end QOS negotiation, renegotiation, indication of QOS degradations and co-ordination over multiple related connections are also required. Little attention, however, has so far been paid to the definition of a coherent framework that incorporates QOS <b>interfaces,</b> <b>management</b> and mechanisms across all the layers. This paper describes the first stage in the developmen [...] ...|$|E
40|$|The {{purpose of}} this paper is to present the <b>interface</b> <b>management</b> process that is to be used for Mined Geologic Disposal System (MGDS) development. As part of the systems {{engineering}} and integration performed on the Yucca Mountain Project (YMP), <b>interface</b> <b>management</b> is critical in the development of the potential MGDS. The application of <b>interface</b> <b>management</b> on the YMP directly addresses integration between physical elements of the MGDS and the organizations responsible for their development...|$|R
40|$|<b>Interface</b> <b>management</b> is {{a process}} of {{managing}} communication, responsibilities and coordination of project parties, phases or physical entities. Effective in the project lifecycle coordination among project participants and work process is very important to ensure smooth project implementation. This study aim to review the current practices of <b>interface</b> <b>management</b> process and elements in local construction industry. The methodology adopted for this study are combination of literature reviews, interview with expert panels and questionnaire survey distributed in Klang Valley and Johor Bahru. The findings of this study has identified that the main process in <b>interface</b> <b>management</b> during construction phase are: interface identification; interface communication; interface recording and tracking data; and interface closing. However it is found that there is a slight different between the <b>interface</b> <b>management</b> process determined in this study as compared to the processes found in the literature review. Finally, this study also developed a concept and framework as a guide for the practitioner to improve the <b>interface</b> <b>management</b> process for the construction phase. It is hope that Malaysian construction industry will give more emphasis to improve the <b>interface</b> <b>management</b> process to ensure that project delivery will be more effective and able to fulfil customer and end user requiremen...|$|R
40|$|In 2010 Pharmaceutical Health Information System {{indicated}} {{that in many}} European countries {{there was a need}} of improvement in <b>interface</b> <b>management.</b> This literature review focuses on the cost-effectiveness of sufficient <b>interface</b> <b>management</b> and the substitution of generics at the point of transition from the in-patient to the out-patient sector. There are three main ways in which insufficient <b>interface</b> <b>management</b> could cause a burden on national health care funds, patients or insurance companies. These are the prescription of unjustified medication, the occurrence of Adverse drug events and the unnecessary take-over of expensive medication instead of switching to generics. In all of these area’s research showed that improved <b>interface</b> <b>management</b> can be cost-effective, however the studies found were limited and often small scaled. There has not been a great focus on the economical part of <b>interface</b> <b>management,</b> this is therefore one the main recommendations of further research; a comparative cost-effectiveness study of <b>interface</b> <b>management</b> interventions. Another field where insight is lacking is the way health care providers in one sector are influenced in the prescription of medication by what was previously described in another sector. It is therefore important to look into what influences prescribers and what is {{the most effective way to}} give incent on prescribing generics...|$|R
40|$|International audienceMultimedia {{applications}} require heterogeneous multiprocessor architectures {{with specific}} I/O components {{in order to}} achieve computation and communication performances. The different processors run different software stacks, which are composed by the application's tasks and a hardware dependent software (HDS). The HDS contains an operating system, a specific communication library and a hardware abstraction layer (HAL), granting accesses to hardware resources. Building these software stacks may be the trouble maker of the MP-SoC design process when trying to reduce its time-to-market. In this paper, we present our application software generation flow and tools starting from a high level application model. They are able to handle heterogeneous MP-SoC, running multiple software stacks while using different operating systems and communication models. The application software generation tool builds the application's software stacks by producing optimized and multi-tasked C code and using a flexible operating system and communication programming <b>interfaces</b> <b>management.</b> In order to validate the effectiveness of our approach, we generated the software stacks of a Motion JPEG decoder, partitioned and mapped on an off-the-shelf multimedia platform...|$|E
40|$|ABSTRACT The {{integration}} of distributed multimedia systems support into a communications architecture encompassing the new multiservice networks poses significant challenges. A key observation {{about the new}} environment is that Quality of Service (QOS) provides a unifying theme around {{which most of the}} new communications requirements can be grouped. For applications relying on the transfer of multimedia information, and in particular continuous media, it is essential that QOS is guaranteed system-wide, including the distributed system platform, the transport protocol and the multiservice network. Enhanced protocol support such as end-to-end QOS negotiation, renegotiation, indication of QOS degradations and co-ordination over multiple related connections are also required. Little attention, however, has so far been paid to the definition of a coherent framework that incorporates QOS <b>interfaces,</b> <b>management</b> and mechanisms across all the layers. This paper describes the first stage in the development of an integrated Quality of Service Architecture (QOS-A) which offers a framework to specify and implement the required performance properties of new multimedia applications over multiservice ATM-based networks. 1...|$|E
40|$|Today {{more and}} more devices are {{connected}} to Internet. TVs, smartphones, tablets, printers, picture frames, cameras and other consumer devices are part of people’s day to day life. These devices run different execution environments, such as OS platforms and virtual machines. In such a heterogeneous and connected environment, some form of management {{is required for the}} devices to work together, enabling services for users and consumer satisfaction. It is required to do local or distant updates when new releases of software and firmware are available and should be updated to avoid recall or to enable a new application or service. Discovering device capabilities and applying a correct configuration is required for enabling connectivity and services. Doing such configuration remotely makes it easy for the users. It is also required to perform diagnosis to ensure enhanced experience for users. In addition to such common management functions, there can be device specific requirements. An open standard solution for management would provide a common set of <b>interfaces,</b> <b>management</b> action definitions and data models for devices in various environments. It can also extend remote management solutions. Solution descriptio...|$|E
5000|$|<b>Interface</b> <b>management</b> (identifying and resolving {{interface}} {{issues on}} {{oil and gas}} projects) ...|$|R
50|$|Web <b>interface</b> - <b>Management</b> <b>interface</b> {{to manage}} it all.|$|R
50|$|Photos has two <b>interfaces,</b> a <b>management</b> <b>interface</b> and a viewing interface.|$|R
40|$|Abstract—XML-based SOAP Web Services are {{a widely}} used technology, {{which allows the}} users to execute remote opera-tions and {{transport}} arbitrary data. It is currently adapted in Service Oriented Architectures, cloud <b>interfaces,</b> <b>management</b> of federated identities, eGovernment, or millitary services. The wide adoption of this technology has resulted in an emergence of numerous – mostly complex – extension specifications. Naturally, this has been followed by a rise in large number of Web Services attacks. They range from specific Denial of Service attacks to attacks breaking interfaces of cloud providers [1], [2] or confidentiality of encrypted messages [3]. By implementing common web applications, the developers evaluate the security of their systems by applying different penetration testing tools. However, {{in comparison to the}} well-known attacks as SQL injection or Cross Site Scripting, there exist no penetration testing tools for Web Services specific attacks. This was the motivation for developing the first automated penetration testing tool for Web Services called WS-Attacker. In this paper we give an overview of our design decisions and provide evaluation of four Web Services frameworks and their resistance against WS-Addressing spoofing and SOAPAction spoofing attacks...|$|E
40|$|Proceedings of the 1991 Georgia Water Resources Conference, March 19 - 20, 1991, Athens, Georgia. Reservoir {{operation}} certainly provides {{ample opportunity}} to use computer-aided management tools. Except for simple systems, namely, small, single objective reservoirs, where optimal decisions are obvious, the decision making process {{must take into account}} a plethora of complicating factors. Uncertain inflows, reservoir and river dynamics, hydroelectric plant characteristics, flood and drought concerns, water supply, energy generation commitments and economics, water quality standards, recreational activities, local and regional water use conflicts and legislation, and public opinion are {{but a few of the}} parameters influencing reservoir management decisions. Recent reservoir control research advances combined with fascinating developments in the computer industry provide new opportunities for model use in real time reservoir management. Modern reservoir control methods can now handle dimensionally large systems with both multiple objectives and operational constraints. And, of equal importance, control models can now be implemented on readily accessible microcomputers which encourages potential widespread use and numerous practical applications. Combined with interactive input-output graphics <b>interfaces,</b> <b>management</b> models can be designed to maximize user involvement and provide intuitive understanding of the computations in progress. This paper reports on a state-of-the-art reservoir control model for the regulation of the Savannah River System. Except for model features, emphasis is also placed on how model usage can be maximized within the current organizational decision framework. Sponsored by U. S. Geological Survey, Georgia Department of Natural Resources, the University of Georgia, Georgia State University, and Georgia Institute of Technology. This book was published by the Institute of Natural Resources, The University of Georgia, Athens, Georgia 30602 with partial funding provided by the U. S. Department of the Interior, Geological Survey, through the Georgia Water Research Institute as authorized by the Water Resources Research Act of 1984 (P. L. 98242). The views and statements advanced in this publication are solely those of the authors and do not represent official views or policies of The University of Georgia or the U. S. Geological Survey or the conference sponsors...|$|E
40|$|This is the English {{translation}} of a position paper {{published by the}} German DINI Working Group on Research Information Systems (DINI AG FIS) in 2015. Reporting has become {{a regular part of}} science at every level. Researchers are required to report to external funding organisations and sponsors. Management needs an overview of the multitude of research information available {{in order to be able}} to make sound decisions and compete successfully for equipment and funding. Public accountability, particularly in terms of financing, has also grown in importance over time. At the same time, universities and research institutions still face major problems when it comes to providing information on research performance. The causes of these problems are often very similar at each institution – distributed data storage without any <b>interfaces,</b> <b>management</b> systems that fail to map research contexts, and limited usability of existing systems when it comes to carrying out differentiated analyses: Specialist and funding databases are managed independently of one another, interfaces and exchange formats simply do not exist, and standardisation options are seldom used when developing such systems. The development of financeable and functional research information systems and, above all, the exchange of existing information are of equal importance as campus management or suitable HR and finance systems when it comes to IT development in scientific institutions. It is difficult to imagine institutions being able to manage processes requiring manual input and annual data requests in the long term. Reporting requirements are also likely to increase over time. This position paper describes specific strategic steps that need to be taken in order to develop long-term research reporting information management processes in German research insttutions. Common standards need to be agreed on as they are a prerequisite both for reducing the considerable amount of work required to run systems and for enabling mobile researchers to transfer their portfolio to various applications and different research institutions. The working group also devised specific practical tips on designing, choosing, introducing and running a system as well as advice with regard to project management. These tips and advice are aimed at institutions wishing to introduce or develop a research information system...|$|E
40|$|The Management and Operations (M and O) {{contractor}} for the Department of Energy`s (DOE) Office of Civilian Radioactive Waste Management (OCRWM) program {{exists to}} support DOE in the successful development {{and operation of}} an integrated system to manage the nation`s spent nuclear fuel and high-level wastes. As {{part of the system}} engineering and integration performed on the Yucca Mountain Project (YMP), <b>interface</b> <b>management</b> is critical {{in the development of the}} Mined Geologic Disposal System (MGDS). The application of <b>interface</b> <b>management</b> on the YMP directly addresses integration between physical elements of the MGDS and the organizations responsible for their development. An initiative to utilize <b>interface</b> <b>management</b> and the <b>interface</b> control document development process for organizational interfaces is also being pursued to help ensure consistent use of information by multiple organizations...|$|R
5000|$|The Dylan User <b>Interface</b> <b>Management</b> code (A {{high level}} {{language}} for GUI programming, {{which is a}} Dylan implementation and further development of CLIM).|$|R
50|$|Other {{research}} priorities include market-driven {{new product}} development, organizational innovation and <b>interface</b> <b>management,</b> technological competition analysis, and using patent data and surveys on consumer behavior.|$|R
50|$|W. Buxton, M.R. Lamb, D. Sherman, K.C. Smith, Towards a {{comprehensive}} user <b>interface</b> <b>management</b> system, Computer Graphics, vol. 17, no. 3, pp. 35-42, July 1983.|$|R
5000|$|<b>Interface</b> <b>Management</b> API, IPSec Service API, HA Service API, Diffserv Services API, IPv4 Unicast Forwarding Service API, IPv6 Unicast Forwarding Service API, MPLS Forwarding Service API, ...|$|R
5000|$|Lack of {{centralized}} authoritative {{support for}} DLL application binary <b>interface</b> <b>management</b> and safeguards, allowing incompatible DLLs {{with the same}} file name and internal version numbers to be released; ...|$|R
50|$|UIMS - The User <b>Interface</b> <b>Management</b> System. Later {{dubbed the}} CUI for the Common User Interface, this {{component}} {{was built on}} the X Window System and featured an OSF/Motif-like interface.|$|R
40|$|The purpose of-this {{planning}} {{guide is}} to present the process used to identify, document, and control PFP Stabilization and Deactivation Project interfaces. Revisions to this document will include, as attachments, the most recent version of the Project <b>Interface</b> <b>Management</b> List. A preliminary <b>Interface</b> <b>Management</b> List is included in Appendix A. This document is intended be a Project owned management tool. As such, this document will periodically require revisions resulting from improvements of the information, processes, and techniques as now described. For most revisions that suggest improved processes, PFP management approval is all that will be required...|$|R
40|$|Abstract. Design {{activities}} {{occupy the}} dominant {{position in the}} construction engineering, it have an important impact on investment, quality and schedule objectives of construction. But in the design stage, many problems exist in the interface between the owner and the design unit, that brings great latent danger for the smooth implementation of the project. Whether <b>interface</b> <b>management</b> is effective determines {{the success or failure}} of the project. Make the interface between owner and design unit as the object,this paper presents methods of coordination center based on the the theory of <b>interface</b> <b>management.</b> The method can be used to manage the interface between owner and design unit effectively...|$|R
50|$|A lot of {{organizational}} effort and <b>interface</b> <b>management</b> is saved, if the CNC bending machine {{is connected to}} the previous and subsequent process. For a connection to other machines and external workstations corporate interfaces have to be established.|$|R
5000|$|Management Data Input/Output (MDIO), {{also known}} as Serial <b>Management</b> <b>Interface</b> (SMI) or Media Independent <b>Interface</b> <b>Management</b> [...] (MIIM), is a serial bus defined for the Ethernet family of IEEE 802.3 {{standards}} for the Media Independent Interface, or MII. The MII connects Media Access Control (MAC) devices with Ethernet physical layer (PHY) circuits. The MAC device controlling the MDIO is called the Station Management Entity (SME).|$|R
5000|$|Symbolics {{was very}} active {{in the design and}} {{development}} of the Common Lisp Interface Manager (CLIM) presentation-based User <b>Interface</b> <b>Management</b> System. CLIM is a descendant of Dynamic Windows, Symbolics' own window system. CLIM {{was the result of the}} collaboration of several Lisp companies.|$|R
50|$|A more {{directly}} applicable theory of user <b>interface</b> <b>management</b> is the Model-view-controller design pattern, which {{is described in}} detail in its own article. A recent variant of MVC is the Model-view-presenter model {{which is similar to}} MVC, but has some interesting insights into the problem.|$|R
40|$|Programming {{languages}} provide various {{mechanisms to}} support information hiding. One problem with information hiding, however, is that providing a stable interface behind which to hide implementation details involves fixing in advance the services offered through the interface. We introduce a flexible approach {{to define and}} manage interfaces to achieve separation of concerns in evolving software. Our approach involves explicitly specifying interface and implementation classes for individual concerns, and automatically classifying implementation classes based on their relation to the interface. Our approach is supported by JMantlet, a tool that provides advanced <b>interface</b> <b>management</b> within an integrated development environment. We report on {{a case study of}} a large system that provides evidence that flexible <b>interface</b> <b>management</b> is desirable and adequately supported by our approach. 1...|$|R
50|$|O&M <b>Interface</b> - <b>Management</b> <b>interface</b> between HNB and Home NodeB Management System (HMS). It uses TR-069 as the {{management}} protocol and TR-196 data model. The main purpose {{is for the}} configuration of the HNB.|$|R
