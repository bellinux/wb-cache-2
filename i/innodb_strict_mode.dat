0|53|Public
5000|$|... example command on Cisco devices: ip verify unicast source reachable-via {rx} - <b>Strict</b> <b>mode,</b> {any}- loose mode ...|$|R
5000|$|A set of SQL Mode {{options to}} control runtime behavior, {{including}} a <b>strict</b> <b>mode</b> to better adhere to SQL standards.|$|R
5000|$|Note that JavaScript's <b>strict</b> <b>mode</b> forbids the {{assignment}} of an undeclared variable, which avoids global namespace pollution. Also [...] cannot be declared without initialization.|$|R
50|$|You {{can choose}} the level of {{tolerance}} of the text editor: <b>Strict</b> <b>mode</b> only allows XHTML or valid HTML5, Permissive mode allows us to enter any code.|$|R
50|$|In <b>strict</b> <b>mode</b> each {{incoming}} packet {{is tested}} against the FIB {{and if the}} incoming interface {{is not the best}} reverse path the packet check will fail. By default failed packets are discarded.|$|R
50|$|What {{happens when}} a column does not specify a default value is {{database}} dependent.For example, MySQL and SQLite will fills in with blank value (except when in <b>strict</b> <b>mode),</b> while many other databases will reject the statement.|$|R
5000|$|Because the {{availability}} of with statements hinders program performance and is believed to reduce code clarity (since any given variable could actually be a property from an enclosing [...] ), this statement is not allowed in <b>strict</b> <b>mode.</b>|$|R
40|$|Abstract [...] In {{this paper}} we {{consider}} the problem of reconfigur-ing processor arrays subject to computational loads that alternate between two <b>modes.</b> A <b>strict</b> <b>mode</b> {{is characterized by a}} heavy computational load and severe constraints on response time while a relaxed mode is characterized by a relatively light computational load and relaxed constraints on response time. In the <b>strict</b> <b>mode,</b> reconfiguration is performed by a distributed local algorithm in order to achieve fast recovery from faults. In the relaxed mode, a global reconfiguration algorithm is used to restore the system to a state that maximizes the probability that future faults occurring in subsequent <b>strict</b> <b>modes</b> will be repairable. Several new results are given for this problem. Efficient re-configuration algorithms are described for a number of general classes of architectures. These general algorithms obviate the need for architecture-specific algorithms for architectures in these classes. We show that it is unlikely that similar algorithms can be obtained for related classes of architectures since the reconflguration problem for these classes is NP-complete. Finally, a general approximation algorithm is described {{that can be used for}} any architecture. Experimental results are given, suggesting that our algorithms are very effective. I...|$|R
50|$|The {{first line}} is a shebang, which {{identifies}} the file as a Perl script that can be executed directly on the command line (on Unix/Linux systems.) The other two are pragmas turning on warnings and <b>strict</b> <b>mode,</b> which are mandated by fashionable Perl programming style.|$|R
5000|$|... "Immediately-invoked {{function}} expression" [...] {{as a term}} {{describes a}} design pattern that has also {{been referred to as}} a [...] "self-executing anonymous function". However, immediately-invoked functions {{do not need to be}} anonymous, and ECMAScript 5's <b>strict</b> <b>mode</b> forbids , making the latter term less accurate.|$|R
40|$|Abstract. We {{present a}} {{real-time}} fault-tolerant design for an l-level k-ary tree multiprocessor and examine its reconfigurability. The k-ary tree is augmented by spare nodes and spare links. By utilizing {{the capabilities of}} wave-switching communication modules of the spare nodes, faulty nodes and faulty links can be tolerated. We consider two modes of operations. In the <b>strict</b> <b>mode,</b> the multiprocessor is under heavy computation or hard deadline and therefore we use a fast and local reconfiguration scheme to tolerate the faulty nodes. In the relaxed mode, where light computation or soft deadline is encountered, a global reconfiguration scheme is used to maximize the utilization of spare nodes, both in this mode {{as well as in}} the next <b>strict</b> <b>mode.</b> Both theoretical and simulation results are examined. Our simulation results, in the relaxed mode of operation, reveal that our approach can tolerate significantly more faulty nodes than other approaches, with a low overhead and no performance degradation...|$|R
40|$|The {{goal with}} {{this project was}} to improve an {{existing}} face recognition system for video streams by using adaptive object tracking to track faces between frames. The knowledge of what faces occur and do not occur in subsequent frames was used to filter false faces and to better identify real ones. The recognition ability was tested by measuring how many faces were found {{and how many of}} them were correctly identified in two short video files. The tests also looked at the number of false face detections. The results were compared to a reference implementation that did not use object tracking. Two identification modes were tested: the default and <b>strict</b> <b>modes.</b> In the default mode, whichever person is most similar to a given image patch is accepted as the answer. In <b>strict</b> <b>mode,</b> the similarity also has to be above a certain threshold. The first video file had a fairly high image quality. It had only frontal faces, one at a time. The second video file had a slightly lower image quality. It had up to two faces at a time, in a larger variety of angles. The second video was therefore a more difficult case. The results show that the number of detected faces increased by 6 - 21 % in the two video files, for both identification modes, compared to the reference implementation. In the meantime, the number of false detections remained low. In the first video file, there were fewer than 0. 009 false detections per frame. In the second video file, there were fewer than 0. 08 false detections per frame. The number of faces that were correctly identified increased by 8 - 22 % in the two video files in default mode. In the first video file, there was also a large improvement in <b>strict</b> <b>mode,</b> as it went from recognising 13 % to 85 % of all faces. In the second video file, however,neither implementation managed to identify anyone in <b>strict</b> <b>mode.</b> The conclusion is that object tracking is a good tool for improving the accuracy of face recognition in video streams. Anyone implementing face recognition for video streams should consider using object tracking as a central component...|$|R
40|$|We {{present an}} EEG study of two music {{improvisation}} experiments. Professional musicians with {{high level of}} improvisation skills were asked to perform music either according to notes (composed music) or in improvisation. Each piece of music was performed in two different modes: <b>strict</b> <b>mode</b> and "let-go" mode. Synchronized EEG data was measured from both musicians and listeners. We used {{one of the most}} reliable causality measures: conditional Mutual Information from Mixed Embedding (MIME), to analyze directed correlations between different EEG channels, which was combined with network theory to construct both intra-brain and cross-brain networks. Differences were identified in intra-brain neural networks between composed music and improvisation and between <b>strict</b> <b>mode</b> and "let-go" mode. Particular brain regions such as frontal, parietal and temporal regions were found to {{play a key role in}} differentiating the brain activities between different playing conditions. By comparing the level of degree centralities in intra-brain neural networks, we found a difference between the response of musicians and the listeners when comparing the different playing conditions...|$|R
40|$|In this paper, {{we present}} an EEG study of two music {{improvisation}} experiments. Professional musicians with {{high level of}} improvisation skills were asked to perform music either according to notes (composed music) or in improvisation. Each piece of music was performed in two different modes: <b>strict</b> <b>mode</b> and "let-go" mode. Synchronized EEG data was measured from both musicians and listeners. We used {{one of the most}} reliable causality measures: conditional mutual information from mixed embedding (MIME), to analyze directed correlations between different EEG channels, which was combined with network theory to construct both intra-brain and cross-brain neural networks. Differences were identified in intra-brain neural networks between composed music and improvisation and between <b>strict</b> <b>mode</b> and "let-go" mode. Particular brain regions such as frontal, parietal and temporal regions were found to {{play a key role in}} differentiating the brain activities between different playing conditions. By comparing the level of degree centralities in intra-brain neural networks, we found musicians responding differently to listeners when playing music in different conditions. Comment: 22 pages, 9 figures. The version was a revised in accordance with referee's comments. The language was also improve...|$|R
50|$|The 6th edition, officially {{known as}} ECMAScript 2015, was {{finalized}} in June 2015. This update adds significant new syntax for writing complex applications, including classes and modules, but defines them semantically {{in the same}} terms as ECMAScript 5 <b>strict</b> <b>mode.</b> Other new features include iterators and for/of loops, Python-style generators and generator expressions, arrow functions, binary data, typed arrays, collections (maps, sets and weak maps), promises, number and math enhancements, reflection, and proxies (metaprogramming for virtual objects and wrappers). The complete list is extensive.|$|R
5000|$|When {{used in a}} {{function}} defined in the global space, what the keyword [...] refers to depends on how the function is called. When such {{a function}} is called directly (e.g. [...] ), [...] will refer back to the global space in which the function is defined, and in which other global functions and variables may exist as well (or in <b>strict</b> <b>mode,</b> it is [...] ). If a global function containing [...] is called {{as part of the}} event handler of an element in the document object, however, [...] will refer to the calling HTML element.|$|R
5000|$|Supports delayed {{variable}} expansion (Windows 2000 and later), fixing DOS idioms {{that made}} using control structures hard and complex. The extensions can be disabled, providing a <b>stricter</b> compatibility <b>mode.</b>|$|R
5000|$|To {{maintain}} {{compatibility with}} the greatest possible number of web pages, modern web browsers are generally developed with multiple rendering modes: in [...] "standards mode" [...] pages are rendered according to the HTML and CSS specifications, while in [...] "quirks mode" [...] attempts are made to emulate the behavior of older browsers. Some browsers (those based on Mozilla's Gecko rendering engine, or Internet Explorer 8 in <b>strict</b> <b>mode,</b> for example) also use an [...] "almost standards" [...] mode which attempts to compromise between the two, implementing one quirk for table cell sizing while otherwise conforming to the specifications.|$|R
40|$|The {{analysis}} of environmental, {{economic and social}} effects, that appear in area {{as a result of}} its declaration to be protected. This <b>strict</b> <b>mode</b> of protection of natural and landscape qualities, limiting possibilities to use, brings various results, that I analyse. The teoretical part is based on an {{analysis of}} Czech and international legislature of protected areas [...] especially Natura 2000 and program UNESCO Man and biosphere. An important output of this thesis is description of purposes of general declaration of protected areas. The analytic part ilustrates the real development in protected areas, including historical connections. The final, generalizing, part charakterizes discovered effects of declaration of protection...|$|R
5000|$|The {{result for}} IE 8 Beta 1 {{was that it}} could render three modes: [...] "Quirks," [...] "Strict," [...] and [...] "Standard." [...] When {{there is an old}} DOCTYPE or when there is no DOCTYPE, IE renders it like IE5 would (quirks mode). When a special meta element or its {{corresponding}} HTTP header is included in a web page, IE8 will render that page like IE7 would (<b>strict</b> <b>mode).</b> Otherwise, IE8 renders pages with its own engine (standard mode). Users can switch between the three modes with a few clicks. The release of Internet Explorer 8 Beta 1 revealed that many web sites do not work in this new standards mode.|$|R
40|$|This paper {{describes}} our participation on Task 7 of SemEval 2014, which fo-cused on {{the recognition}} and disambigua-tion of medical concepts. We used an adapted {{version of the}} Stanford NER sys-tem to train CRF models to recognize tex-tual spans denoting diseases and disor-ders, within clinical notes. We consid-ered an encoding that accounts with non-continuous entities, together with a rich set of features (i) based on domain spe-cific lexicons like SNOMED CT, or (ii) leveraging Brown clusters inferred from a large collection of clinical texts. Together with this recognition mechanism, we used a heuristic similarity search method, to assign an unambiguous identifier to each concept recognized in the text. Our best run on Task A (i. e., in the recog-nition of medical concepts in the text) achieved an F-measure of 0. 705 in the <b>strict</b> evaluation <b>mode,</b> and a promising F-measure of 0. 862 in the relaxed mode, with a precision of 0. 914. For Task B (i. e., the disambiguation of the recognized con-cepts), we achieved less promising results, with an accuracy of 0. 405 in the <b>strict</b> <b>mode,</b> and of 0. 615 in the relaxed mode. ...|$|R
40|$|AbstractGenotype list (GL) Strings use {{a set of}} {{hierarchical}} character delimiters {{to represent}} allele and genotype ambiguity in HLA and KIR genotypes in a complete and accurate fashion. A RESTful web service called genotype list service was created to allow users to register a GL string and receive a unique identifier for that string {{in the form of}} a URI. By exchanging URIs and dereferencing them through the GL service, users can easily transmit HLA genotypes in a variety of useful formats. The GL service was developed to be secure, scalable, and persistent. An instance of the GL service is configured with a nomenclature and can be run in <b>strict</b> or non-strict <b>modes.</b> <b>Strict</b> <b>mode</b> requires alleles used in the GL string to be present in the allele database using the fully qualified nomenclature. Non-strict mode allows any GL string to be registered as long as it is syntactically correct. The GL service source code is free and open source software, distributed under the GNU Lesser General Public License (LGPL) version 3 or later...|$|R
40|$|In the tangent {{space of}} some {{spatially}} extended dissipative systems one can observe "physical" modes which are highly {{involved in the}} dynamics and are decoupled from the remaining set of hyperbolically "isolated" degrees of freedom representing strongly decaying perturbations. This mode splitting is studied for the Ginzburg-Landau equation at different strength of the spatial coupling. We observe that isolated modes coincide with eigenmodes of the homogeneous steady state of the system; {{that there is a}} local basis where the number of non-zero components of the state vector coincides with the number of "physical" modes; that in a system with finite number of degrees of freedom the <b>strict</b> <b>mode</b> splitting disappears at finite value of coupling; that above this value a fussy mode splitting is observed. Comment: 6 pages, 5 figure...|$|R
6000|$|... 'If I am {{asked for}} proofs of the [...] "conversion" [...] of this people, I should say, [...] "Conversion from what to what?" [...] and then I should say, [...] "Ask any close {{observer}} in England about {{the commercial and}} social morality existing in not only the most ignorant ranks of society: how much is merely formal, and therefore, perhaps, actually detrimental to a true spirit of religion! Here you don't find much that you associate with religion in England, in the external observances of it; but there are not a few ignorant people (I am not speaking of our trained scholars) who are giving up their old habits, adopting new ways, accepting a <b>stricter</b> <b>mode</b> of life, foregoing advantages of one kind and another, {{because they believe that}} this [...] "Good news," [...] this Gospel, is true, and because the simple truths of Christianity are, thank God, finding some entrance into their hearts.|$|R
40|$|Today's JavaScript {{applications}} {{are composed of}} scripts from different origins that are loaded at run time. As {{not all of these}} origins are equally trusted, the execution of these scripts should be isolated from one another. However, some scripts must access the application state and some may be allowed to change it, while preserving the confidentiality and integrity constraints of the application. This paper presents design and implementation of DecentJS, a language-embedded sandbox for full JavaScript. It enables scripts to run in a configurable degree of isolation with fine-grained access control. It provides a transactional scope in which effects are logged for review by the access control policy. After inspection of the log, effects can be committed to the application state or rolled back. The implementation relies on JavaScript proxies to guarantee full interposition for the full language and for all code, including dynamically loaded scripts and code injected via eval. Its only restriction is that scripts must be compliant with JavaScript's <b>strict</b> <b>mode.</b> Comment: Technical Repor...|$|R
5000|$|Caja (pronounced [...] ) is a Google {{project and}} a JavaScript {{implementation}} for [...] "virtual iframes" [...] {{based on the}} principles of object-capabilities. Caja takes JavaScript (technically, ECMAScript 5 <b>strict</b> <b>mode</b> code), HTML, and CSS input and rewrites it into a safe subset of HTML and CSS, plus a single JavaScript function with no free variables. That means the only way such a function can modify an object is if it is given a reference to the object by the host page. Instead of giving direct references to DOM objects, the host page typically gives references to wrappers that sanitize HTML, proxy URLs, and prevent redirecting the page; this allows Caja to prevent certain phishing attacks, prevent cross-site scripting attacks, and prevent downloading malware. Also, since all rewritten programs run in the same frame, the host page can allow one program to export an object reference to another program; then inter-frame communication is simply method invocation.|$|R
40|$|Abstract. Our system (Team: HCMUS) {{combined}} rule-based {{and machine}} learning methods. The {{first step in}} which the test files were normalized and pre-processed. The pre-processing {{was related to the}} problems as: the special char-acters (dot in the case of abbreviation,?, etc.), replacing the names and the dates in the brackets ([]). The document was split into the sections and para-graphs. Then the NLP tools were used for sentence splitting, POS tagging and parsing. The set of rules based on the dependence graph which were used to recognize events. In order to recognize the concepts (the 8 th attribute), the UMLS and MetaMap were used. For the 9 th attribute, the machine learning method was based on the features such as: document types, section types, tem-poral expressions (ago, today, etc.), explicit dates in the sentences and verb POS tags. For task 2 a, this system achieved an overall accuracy of 0. 827, F 1 -score of 0. 389, precision of 0. 367 and recall of 0. 415. For task 2 b, the system performed with an F 1 -core, precision and recall of 0. 420, 0. 378 and 0. 472 re-spectively, in the <b>strict</b> <b>mode</b> and 0. 648, 0. 583 and 0. 729 respectively, in the re-laxed mode...|$|R
40|$|Examples from Archimedes, Galileo, Newton, Einstein {{and others}} suggest that {{fundamental}} {{laws of physics}} were—or, at least, could have been—discovered by experiments performed not {{in the physical world}} but only in the mind. Though problematic for a <b>strict</b> empiricist, this <b>mode</b> of discovery may have become possible, in part, through the evolutionary emergence in humans of deeply internalized implicit knowledge of abstract principles of transformation and symmetry...|$|R
5000|$|Western {{disciplines}} {{come from}} universals extracted {{from studies of}} individual phenomena and then condensed into systems of knowledge. Though the Chinese did not develop thought to this extent, {{it can be said}} that the subjects of these disciplines still existed in Chinese thought. [...] While the <b>strict,</b> regulated Western <b>mode</b> of thinking called logic was not to be found in China, there was still a form of thinking.|$|R
40|$|Abstract. The {{relative}} {{carrying capacity}} of resources {{was used to}} analyze the Dynamic Changes of in Dongting Lake idea. The relative carrying capacity of natura resources, economy resources and synthetic capacity and their dynamic changes of Dongting Lake idea from 2004 to 2011 were calculated. The results shown that the Dongting Lake Area is in population relatively overloaded state. The consultation was drawn as strengthen the flood management and water conservancy facilities, transform economic growth <b>mode,</b> <b>strict</b> control population should be taken to reduce population growth pressures on resources in the Dongting Lake area...|$|R
40|$|We {{illustrate}} {{the potential of}} techniques and results from the theory of network emulations to enhance {{the performance of a}} parallel architecture. The vehicle for this demonstration is a suite of algorithms that endow an N-processor bit-serial processor array A with a meta-instruction GAUGE k, which (logically) reconfigures A into an N/k-processor virtual machine B k that has: 1) a datapath and memory bus whose emulated width is k bits, as opposed to A's 1 -bit width and 2) an instruction set that operates on k-bit words, in contrast to A's instruction set, which operates on 1 -bit words. In order to stress the strength of the approach, we show (via pseudocode) how our emulation techniques can be implemented efficiently even if A operates in <b>strict</b> SIMD <b>mode,</b> with only single-bit masking capabilities and with no indexed memory accesses. We describe at an algorithmic level how to implement our techniqueincluding datapath conversion (corner-turning) and the creation of th [...] ...|$|R
40|$|Abstract. The {{relative}} {{carrying capacity}} of resources {{was used to}} analyze the dynamic changes of Dongting Lake’s flood detention basin. The relative carrying capacity of resources of flood detention basin compared with Hunan province from 2004 to 2011 was calculated. The results shown that the flood detention basin is in population relatively surplus state, but its severe overloading in economy resources. The consultation was drawn as the economic compensation should be offer by downstream areas. Flood detention basin should transform economic growth <b>mode,</b> <b>strict</b> control population in resources lack and environmental vulnerability areas should be taken to reduce population growth pressures on resources...|$|R
5000|$|The saxophonist {{used the}} [...] "sheets of sound" [...] lines to liquidise and loosen the <b>strict</b> chords, <b>modes,</b> and harmonies of Hard Bop, whilst still {{adhering}} to them (at {{this stage in}} his musical development). Playing with the Miles Davis groups, in particular, gave Coltrane the free musical space in which to apply harmonic ideas to stacked chords and substitutions. [...] Further, this open approach allowed Coltrane to arpeggiate three chords simultaneously, a style Monk initially taught Coltrane. The [...] "three-on-one chord approach" [...] gave the music a fluid, sweeping sound that was harmonically vertical. [...] Concepts of vertical (chordal) versus horizontal (melody) are key ideas {{in the work of}} George Russell, whom Coltrane had recorded with in September 1958. [...] This approach reflected Coltrane's fascination with third relations. Sometimes he used diminished chords, other times he used augmented chords. At times, Coltrane might use scales or licks in the passing keys instead of arpeggios. Coltrane employed these harmonic ideas during his [...] "sheets of sound" [...] stage in 1958. At other times, he would simply play rapid patterns of diminished-scales.|$|R
60|$|In {{the second}} place, they {{held that the}} written law had been {{altogether}} superseded by {{the coming of the}} great prophet, Christ, who had been put to death by the Jewish priests. John learned that there were already large numbers of Jews who had accepted the doctrines taught by this Christ, although they did not all embrace the <b>strict</b> rules and <b>modes</b> of life of the ascetics. John was greatly struck with their doctrines, although he did not hear enough to do more than to dimly understand their meaning. He determined however that, if he went safely through the war, he would inquire further into these mysteries.|$|R
40|$|The Uni ed Parallel C (UPC) {{language}} is a parallel extension to the standard ANSI C language with support for the distributed shared memory (DSM) abstraction. The memory consistency model speci es {{the behavior of a}} UPC program with regard to memory access and provides programmers a view of the ordering constraints among load and store operations. UPC provides a user-controllable memory consistency model. The programmer can either restrict possible behaviors, to decrease nondeterminism while hurting performance, or take a relaxed view of possible behaviors, which can boost performance but increase nondeterminism as well. To write correct and ecient parallel programs with UPC, programmers need a correct understanding of the memory consistency model. Thus, a precise and programmer-friendly de nition of the semantics of the UPC memory consistency model is necessary. This research provides a high-level, easily understandable abstraction for the UPC memory consistency model after a careful examination of its properties and behaviors. During the investigation phase, we discovered that a commonly held belief about UPC's <b>strict</b> memory <b>mode</b> | that it ensures sequential consistency | is false. We also present tests for both the compliance and the eciency of a given implementation...|$|R
40|$|AbstractÐWe {{illustrate}} {{the potential of}} techniques and results from the theory of network emulations to enhance {{the performance of a}} parallel architecture. The vehicle for this demonstration is a suite of algorithms that endow an N-processor bit-serial processor array A with a ªmeta-instructionº GAUGE k, which (logically) reconfigures A into an N=k-processor virtual machine Bk that has: 1) a datapath and memory bus whose emulated width is k bits, as opposed to A's 1 -bit width and 2) an instruction set that operates on k-bit words, in contrast to A's instruction set, which operates on 1 -bit words. In order to stress the strength of the approach, we show (via pseudocode) how our emulation techniques can be implemented efficiently even if A operates in <b>strict</b> SIMD <b>mode,</b> with only single-bit masking capabilities and with no indexed memory accesses. We describe at an algorithmic level how to implement our techniqueÐincluding datapath conversion (ªcorner-turningº) and the creation of the word-parallel instruction setsÐon arrays of any regular network topology. We instantiate our technique in detail for arrays based on topologies with quite disparate characteristics: the hypercube, the de Bruijn network, and a genre of mesh with reconfigurable buses. Importantly, the emulations that underlie our technique do not alter the native machine's instruction set, hence allowing an invariant programming model across gauges. Index TermsÐParallel architecture, multiprocessor interconnection, parallel algorithms. ...|$|R
