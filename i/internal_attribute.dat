8|247|Public
40|$|Several {{internal}} software attributes, like size, structural complexity, cohesion, coupling, {{have been}} introduced and used to reason about software engineering artifacts, and many measures have been proposed for them. Internal software attributes are important because they {{are believed to be}} related to quantities of industrial interest, like the number of defects or the development effort. However, the definition of internal software attributes still needs to be made more precise and formal, so measures can be defined that really quantify the attributes they purport to measure. In this paper, we extend, simplify, and refine an existing axiomatic approach that characterizes each <b>internal</b> <b>attribute</b> rigorously via a different set of axioms. This paper makes three specific contributions. First, the new proposal captures a larger set of aspects of software artifacts that may be relevant for internal software attributes than the original proposal did. Second, we identify the basic, foundational sets of axioms for each <b>internal</b> <b>attribute</b> studied, from which the other properties of the attribute can be derived, so the intrinsic properties of the attribute and their implications can be understood. Third, we investigate some relevant relationships among internal software attributes, so their similarities and differences, which are sometimes not well identified, are made more explicit...|$|E
40|$|Abstract: The paper {{proposes a}} {{different}} approach to data modeling. Analogous to the rejection method, where the misclassifications are removed and manually evaluated, we focus here on difficult to distinguish cases for binary classification. Such cases are further explored and information granulation is conducted based on the idea to stretch out the interesting intervals. This refinement model adopts the concept from database theory where the nxn relations are resolved through additional <b>internal</b> <b>attribute</b> connections. We introduce an integration of target functions for such cases. The achieved experimental results from a test dataset are described and future work for user assistance in knowledge modelling is presented...|$|E
40|$|As {{software}} attacks become widespread, {{the ability}} for a software system to resist malicious attacks has become a key concern in software quality engineering. Software attackability is a concept proposed recently in the research literature to measure {{the extent to which}} a software system or service could be the target of successful attacks. Like most external attributes, attackability is to some extent disconnected from the internal of software products. To mitigate software attackability, we need to identify and manipulate related internal software attributes. Our goal in this paper is to study software complexity as one such <b>internal</b> <b>attribute.</b> We apply the User System Interaction Effect (USIE) model, a security measurement abstraction paradigm proposed in previous research, to define and validate a sample metric for service complexity. We thereby establish the usefulness of our sample metric through empirical investigation using open source software system as target application...|$|E
5000|$|Autonomous agency theory (AAT) is {{a viable}} system theory (VST) which models {{autonomous}} social complex adaptive systems. It {{can be used to}} model the relationship between an agency and its environment(s), and these may include other interactive agencies. The nature of that interaction is determined by both the agency's external and <b>internal</b> <b>attributes</b> and constraints. <b>Internal</b> <b>attributes</b> may include immanent dynamic [...] "self" [...] processes that drive agency change.|$|R
40|$|Specifications play {{a crucial}} role in the {{development}} of many types of software systems. Formal specification techniques are often used to help ensure that the requirements are correctly captured and to prove or check properties of the developed software. This is especially true in systems such as concurrent software systems, due to the critical nature that such systems may have. Though the growing importance of the specification phase shows the emerging need for extending measurement to it, few measures have been defined for specifications. The main reason is that specifications have often been written in informal languages, which made it hard to define and collect measures for software specifications. Instead, formal specifications would have a great potential for being measured. This paper proposes a set of measures for capturing a number of <b>internal</b> <b>attributes</b> (i. e., size, length, complexity, and coupling) of software specifications written with Petri nets, a well-known formal technique for modeling concurrent systems. These measures are theoretically validated against a collection of axiom sets that have been proposed in the literature. This theoretical validation provides evidence that the measures really capture the <b>internal</b> <b>attributes</b> they purport to measure. This is a necessary precondition in the development of a set of measures for the <b>internal</b> <b>attributes</b> of concurrent software specifications...|$|R
40|$|Abstract. In {{this paper}} a {{new view of}} the life cycle of {{information}} is described. Information never dies. The constituentes for information are: the context in which information is born and flows, <b>internal</b> <b>attributes</b> which enrich and gives better understanding of information, and the tools used for managing distribution, dissemination, access and availability of information...|$|R
40|$|Software metrics {{have been}} {{investigated}} {{for the assessment of}} programs written in a functional programming language. The external attribute of programs considered in this thesis is their comprehensibility to novice programmers. This attribute has been operationalized in a number of experiments. The <b>internal</b> <b>attribute</b> of software which is examined is the structure. Two models for the structure of software have been employed: callgraphs and flowgraphs. The proposed control-flow model captures the operational semantics of function definitions. The objective measurement of the attributes has been supported by tools. The validation of structure metrics has been addressed in certain experiments for programming-in-the-small. The structure of type expressions in functional programs has been analysed in a case study. A simple framework for software metrication proved to be useful. The validation of metrics has been linked with axioms from the representational measurement theory. The control-flow model for functional programs showed its value in the set-up of an experiment regarding the influence of the structure on the comprehensibility. A programming style rule on the use of guards in function definitions has been validated by the findings in this experiment...|$|E
40|$|Background. Practical use of {{a measure}} X for an <b>internal</b> <b>attribute</b> (e. g., size, complexity, cohesion, coupling) of {{software}} modules often requires setting a threshold on X, to make decisions as to which modules may be estimated to be potentially faulty. To keep quality under control, practitioners may want to set a threshold on X to identify "early symptoms" of possible faultiness of those modules that should be closely monitored and possibly modified. Objective. We propose and evaluate a risk-averse approach to setting thresholds on X based on properties of the slope of statistically significant fault-proneness models, to identify "early symptoms" of module faultiness. Method. To this end, we introduce four ways for setting thresholds on X. First, we use the value of X where a fault-proneness model curve changes direction the most, i. e., it has maximum convexity. Then, we use the values of X where the slope has specific values: one-half of the maximum slope, and the median and mean slope in the interval between minimum and maximum slopes. Results. We provide the theoretical underpinnings for our approach and we apply our approach to data from the PROMISE repository by building Binary Logistic and Probit regression fault-proneness models. The empirical study shows that the proposed thresholds effectively detect "early symptoms" of module faultiness, while achieving a level of accuracy in classifying faulty modules close to other usual fault-proneness thresholds. Conclusions. Our method can be practically used for setting "early symptom" thresholds based on evidence captured by statistically significant models. Also, the thresholds depend on characteristics of the models alone, so project managers {{do not need to}} devise the thresholds themselves. The proposed thresholds correspond to increasing risk levels, so project managers can choose the threshold that best suits their needs in a risk-averse framework...|$|E
40|$|Objectives: The {{context of}} the {{increase}} in life expectancy and the demographic shift towards a more elderly population in the UK presents a number of challenges to society‟s perception of old age and to the likelihood of increasing demands upon health professionals and psychologists who work with the elderly. Existing studies have focused on the effectiveness of therapeutic endeavours with older people, yet have failed to discretely examine the constructs of old age among psychologists who work in the field. Given the prominence of the ageing population and the likelihood of an increase in demands for therapeutic interventions, the aim {{of the present study was}} to explore how psychologists discussed and constructed old age within the {{context of the}}ir therapeutic work with older people. The research questions focused on the way in which psychologist who have experienced working with older people talk about old age, the way they construct ideas of therapy with old people and how those constructs of age relate to wider cultural and social constructs of old age. Method: Individual in-depth interviews were conducted with eight psychologists, who were aged between mid thirties to late fifties, all of whom had a minimum of two years experience working therapeutically with older people. The interview transcripts were analysed using the discursive analysis methods of Discursive Psychology and Foucauldian Discourse Analysis. The analysis focused on the way the psychologists used discursive resources when discussing old age and the implications of their subject positions in their therapeutic work with older people. Results: The results identified a number of discourses of old age; old age as heterogeneous, old age as dichotomous, that the therapeutic intervention with older people can be seen as complex and challenging as well as a rewarding pursuit for the therapist, that the choice of the therapeutic model has implications itself and that old age can be seen as an <b>internal</b> <b>attribute.</b> Discussion: The study demonstrated how constructions of old age influenced psychologists in terms of their expectations, their therapeutic delivery, their willingness to integrate a number of therapeutic models, and in their ability to set goals with their elderly clients. The clinical implications of the present study are discussed and the study concludes with recommendations suggesting additional training aiming at furthering psychological knowledge of old age and current theories of ageing...|$|E
40|$|Servant Leadership is {{the model}} of {{leadership}} taught and exemplified by Christ. It calls upon leaders to be the servant of those they lead, and stresses the attributes of listening, trust, empathy, and the ethical use of power. However, in many college courses which use the servant leadership model, only the <b>internal</b> <b>attributes</b> of servant leadership ar...|$|R
40|$|In {{this paper}} a {{new view of}} the life cycle of {{information}} is described. Information never dies. The constituentes for information are: the context in which information is born and flows, <b>internal</b> <b>attributes</b> which enrich and gives better understanding of information, and the tools used for managing distribution, dissemination, access and availability of information. Godkänd; 2005; Bibliografisk uppgift: CD-ROM; 20070526 (ysko) </p...|$|R
50|$|The SQALE Quality Model is {{used for}} formulating and organising the {{non-functional}} requirements {{that relate to the}} code’s quality. It is organised in three hierarchical levels. The first level is composed of characteristics, the second of sub-characteristics. The third level is composed of requirements that relate to the source code’s <b>internal</b> <b>attributes.</b> These requirements usually depend on the software’s context and language.|$|R
40|$|Background. Practical use of {{a measure}} X for an <b>internal</b> <b>attribute</b> (e. g., size, {{structural}} complexity, cohesion, coupling) of a software module often requires setting a threshold on X, to make decisions as to which software modules may be estimated to be potentially faulty. To keep quality under control, practitioners may want to set a threshold on X to identify “early symptoms” of possible faultiness of a module, which should be closely monitored and possibly modified. Objective. We propose and evaluate an approach to setting a threshold on X to identify “early symptoms” of possible faultiness of software modules. Method. Our proposal {{is based on the}} existence of a statistically significant model that relates X to fault-proneness, defined as the probability that a module contains at least one fault. The curve representing a fault-proneness model is usually fairly “flat” for relatively small values of X and becomes steeper and steeper for larger values of X. We define two ways in which values of X can be used as “early symptoms” of possible faultiness. First, we use the value of X where the fault-proneness model curve changes direction the most, i. e., has maximum convexity. Second, we use the value in which the slope of the curve reaches a proportion (e. g., one half) of the maximum slope that is relevant for the developers. Results. First, we provide the theoretical underpinnings for our approach. Second, we show the empirical results obtained by applying our approach to data from the PROMISE repository by using fault-proneness models built via Binary Logistic and Probit regressions. Our results show that the proposed thresholds are actually effective in showing “early symptoms” of possible faultiness of a module, while achieving a level of accuracy in classifying faulty modules that is fairly close to other typical fault-proneness thresholds. Conclusions. Our method can be practically used for setting “early symptom” thresholds based on evidence captured by statistically significant models. In particular, the threshold based on the maximum convexity depends on characteristics of the models alone, so software project managers do not need to devise the thresholds themselves. If they choose to use the other kind of slope-based threshold, software project managers can choose a different proportion based on the level of risk-aversion they need when recognizing early symptoms of faultiness...|$|E
40|$|Background. When {{estimating}} {{whether a}} software module is faulty {{based on the}} value of a measure X for a software <b>internal</b> <b>attribute</b> (e. g., size, structural complexity, cohesion, coupling), it is sensible to set a threshold on fault-proneness first and then induce a threshold on X by using a fault-proneness model where X plays the role of independent variable. However, some modules cannot be estimated as either faulty or non-faulty with confidence: they belong to a “grey zone” and estimating them as either would be quite aleatory and may result in several erroneous decisions. Objective. We propose and evaluate an approach to setting thresholds on X to identify which modules can be confidently estimated faulty or non-faulty, and which ones cannot be estimated either way. Method. Suppose that we do not know if the modules belonging to a subset of a set of modules are faulty or not, as happens in practical cases with the modules whose faultiness needs to be estimated. We build two fault-proneness models by using the set of modules as the training set. The “pessimistic” model is built by assuming that all modules whose faultiness is unknown are actually faulty and the “optimistic” model by assuming that they are actually non-faulty. The optimistic and pessimistic models can be used to set two thresholds, an optimistic and a pessimistic one. A module is estimated faulty by the optimistic (resp., pessimistic) model with optimistic (resp., pessimistic) threshold if its fault-proneness is above the threshold, and non-faulty otherwise. A module that is estimated faulty (resp., non-faulty) by both the optimistic model with optimistic threshold and the pessimistic model with the pessimistic threshold is esti- mated faulty (resp., non-faulty). Modules for which the estimates of the two models with associated thresholds conflict, are in the “grey zone,” i. e., no reliable faultiness estimation can be made for them. Results. We applied our approach to datasets from the PROMISE repository, we carried out cross-validations, and we assessed accuracy via commonly used indicators. We also compared our results with those obtained with the conventional approach that uses one Binary Logistic Regression model. Our results show that our approach is effective in identifying the grey zone of values of X in which modules cannot be reliably estimated as either faulty or non-faulty and, conversely, the intervals in which modules can be estimated faulty or non-faulty. Our approach turns out to be more accurate, in terms of F-measure, than the conventional one in the majority of cases. In addition, it provides F-measure values that are very concentrated, i. e., it consistently identifies the intervals in which modules can be estimated faulty or non-faulty. Conclusions. Our method can be practically used for identifying “grey zones” in which it does not make much sense to estimate modules’ faultiness based on measure X and, therefore, the zones in which modules’ faultiness can be estimated with confidence...|$|E
30|$|The {{question}} of whether culture influences how a given everyday event is experienced has received some attention in cross-cultural psychology research {{where it has been}} found that culture influences appraisals (Mesquita and Walker 2003). One such influence on appraisals arises from cultural differences in self-construal (Markus and Kitayama 2010). In Western cultures, the self is conceived as a unique, independent, autonomous individual comprised of a particular arrangement of <b>internal</b> <b>attributes</b> (e.g., traits, abilities, motives). The goals of the independent self are to be unique, express the private self, realize <b>internal</b> <b>attributes</b> and promote personal goals. In Asian cultures, the self is perceived as an interdependent entity attending to and fitting in with others and the surrounding social context. The goals of the interdependent self are to occupy one’s proper place and engage in appropriate action (Markus and Kitayama 2010). It {{is important to note that}} while there are obviously within cultural differences, cultural differences in self-construal facilitate and foster certain appraisals of events, whilst making the incidence of other appraisals less valued and less likely (Mesquita and Walker 2003).|$|R
40|$|Context: Class {{maintainability}} is {{the likelihood}} that a class can be easily modified. Before releasing an object-oriented software system, {{it is impossible to know}} with certainty when, where, how, and how often a class will be modified. At that stage, this likelihood can be estimated using the <b>internal</b> quality <b>attributes</b> of a class, which include cohesion, coupling, and size. To reduce the future class maintenance efforts and cost, developers are encouraged to carefully test and well document low maintainability classes before releasing the object-oriented system. Objective: We empirically study the relationship between <b>internal</b> class quality <b>attributes</b> (size, cohesion, and coupling) and an external quality attribute (class maintainability). Using statistical techniques, we also construct models based on the selected <b>internal</b> <b>attributes</b> to predict class maintainability. Method: We consider classes of three open-source systems. For each class, we account for two actual maintainability indicators, the number of revised lines of code and the number of revisions in which the class was involved. Using 19 internal quality measures...|$|R
40|$|As {{component}} oriented programming {{becomes more}} popular, the need emerges for {{the definition of}} a suitable set of metrics to describe the <b>internal</b> <b>attributes</b> of components. This paper presents a set of component metrics based on the Chidamber and Kemerer metrics suite (1994). The metrics is validated with the properties based approach by (Briand et al., 1996). An example of usage of this metrics is presented, with reference to the Java 2 Swing package. ...|$|R
40|$|There are {{at least}} two {{critical}} tasks in our social life. First, since we only have a limited amount of resources, we need to make a choice and invest our resources to the chosen activities {{at the expense of other}} alternatives. Second, it is really important to properly understand others’ behaviors because our interaction with other individuals constitutes a significant portion of our life. Although seemingly different, I propose that both tasks are related to our general beliefs about action, more specifically beliefs about what motivates behaviors. Furthermore, these beliefs systematically vary across cultures. In independent cultures (e. g., the U. S.), the self is primarily defined by <b>internal</b> <b>attributes</b> such as personality traits and it is these <b>internal</b> <b>attributes</b> that are believed to motivate behaviors. In contrast, in interdependent cultures (e. g., Japan & Korea), the self is primarily defined by social relations with important others and one’s behaviors are believed to be constrained by these social relations. Therefore, I predict that there would be corresponding cultural differences in the way we make a choice and the way we interpret others’ behaviors. To test the prediction, four studies were conducted. Studies 1 & 2 examined whether psychological consequences of choice depend on the way the choice is made. I predict that a choice would be psychologically significant when it is made in a way that is compatible with cultural models of action either as internally motivated in independent cultures or as socially constrained in interdependent cultures. Studies 3 & 4 investigated cultural variations in the degree to which individuals make reference to <b>internal</b> <b>attributes</b> in explaining others’ behaviors. I predicted and found that trait inference is in line with the independent model of action that one’s behavior is internally motivated and, thus, it would become automatic and spontaneous in independent cultures but not in interdependent cultures...|$|R
40|$|This study {{evaluated}} {{the influence of}} hip hop music videos on the perception of ideal mates among African Americans. Comparison of African American young adults' desirable traits for long-term romantic partners and short-term sexual partners were also examined. African American college students completed questionnaires involving long-term and short-term mate selection and recorded {{the amount of time}} spent watching hip hop related television and the number of hip hop music videos viewed in a span of 5 days. Young African Americans were found to place similar emphasis on the <b>internal</b> and external <b>attributes</b> for both short-term sexual and long-term romantic relationships. The findings of this study also indicated no gender differences among young African Americans in reference to how important they perceived the physical attractiveness, social status, or sexual characteristics of a potential mate for both a short-term sexual relationship and a long-term romantic relationship. Exposure to hip hop music videos and viewing of hip hop related television programming was not significantly (p >. 05) related to the <b>internal</b> or external <b>attributes</b> desired for long-term romantic relationships. For short-term sexual relationships, no significant (p >. 05) relationship was found for either hip hop television viewing and <b>internal</b> <b>attributes</b> or hip hop television viewing and external attributes; also for short-term sexual relationships, there was no significant (p >. 05) relationship between hip hop video exposure and external attributes, but there was a significant (p <. 05) relationship between hip hop music video exposure and <b>internal</b> <b>attributes.</b> Chenoweth, Lillian Dr. Bold, Mary Dr. Jennings, Glen Dr...|$|R
40|$|Current, {{software}} architectures for interactive systems {{assumed that}} usability is only important when designing the user interface component including the presentation and dialogs. Therefore, {{most of the}} architectural models such as MVC and PAC de-coupled the application semantic and the user interface, which was essential for achieving usability. However, this fallacious dichotomy does not address all the usability concerns. For example, semantic feedback leads tight coupling between the application and the user interface, because {{it has to be}} analyzed at both the application and the presentation levels. There are two approaches to cope with semantic feedback. We can either place semantic feedback in the presentation or in the application. The two approaches result in much communication between the model and the views. This thesis proposes a new architectural model, called MVCforUsability, for incorporating usability concerns in software architecture. In particular, we discuss the cause/effect relationships that exist between the <b>internal</b> <b>attributes</b> that we generally use to assess the software quality and the usability factors that we use to quantify the usability of the software system. Our investigations propose the following methodological approach: (1) Identify the <b>internal</b> software <b>attributes</b> that affect software usability, such as modularity, functionality, etc. (2) Define the relationship between these <b>internal</b> <b>attributes</b> and external usability factors in terms of typical scenarios. (3) Describe design patterns or improve existing ones for each typical scenario. (4) Discuss how these patterns can be used to improve the MVC model...|$|R
40|$|The {{possibility}} of building all particles from spinless constituents is explored. Composite fermions are formed from bosonic carriers of electric and magnetic {{charge of a}} composite abelian gauge field. <b>Internal</b> <b>attributes</b> are accounted for by dimensional reduction from a higher-dimensional space-time in which the abelian gauge field {{is replaced by a}} composite higher-rank antisymmetric tensor field. The problem of building magnetically neutral fermions is considered. Comment: Contribution to "Fundamental Interactions - A Memorial Volume for Wolfgang Kummer", World Scientific, to be publishe...|$|R
40|$|In {{this paper}} {{we present a}} {{concrete}} method for validating software product measures for <b>internal</b> <b>attributes</b> and provide guidelines for its application. This method integrates much of the relevant previous work, such as measurement theory, properties of measures, and GQM. We identify two types of validation: theoretical and empirical. The former addresses the question "is the measure measuring the attribute it is purporting to measure?", and the latter addresses the question "is the measure useful {{in the sense that}} it is related to other variables in expected ways?"...|$|R
5000|$|Several {{researchers}} have created lists of essential <b>internal</b> <b>attributes</b> for startup ecosystems. Spigel suggests that ecosystems require cultural attributes (a {{culture of entrepreneurship}} and histories of successful entrepreneurship), social attributes that are accessed through social ties (worker talent, investment capital, social networks, and entrepreneurial mentors) and material attributes grounded in a specific places (government policies, universities, support services, physical infrastructure, and open local markets). Stam distinguishes between framework conditions of ecosystems (formal institutions, culture, physical infrastructure, and market demand) with systematic conditions of networks, leadership, finance, talent, knowledge, and support services.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis attempts {{to explain the}} origin of state behavior in international politics. It compares the arguments of state level theorists who emphasize the decisive role that <b>internal</b> <b>attributes,</b> including domestic politics, political elite and regime ideology, to that of structuralists, who focus on the decisive impact {{of the structure of}} the international system. The difference is crucial: do we examine domestic politics in order to predict state behavior in international affairs or do we assume that any state, given its place in the international system, will act similarly without regard to these internal factors? The case study examined is Iran, from the early 1960 s to 1989. During this period, the international system remained bi-polar, dominated by the U. S. -U. S. S. R. rivlary. The <b>internal</b> <b>attributes</b> of Iran changed radically, however, as a result of its 1979 revolution. With such a fundamental shift, state level theorists would expect a radical change in Iranian foreign policy. With the continuity of the international system, structuralists would expect essential continuity in Iran's external behavior. This thesis shows that despite rhetorical changes, Iranian foreign policy remained fundamentally the same under the Shah and the Ayatollah. The structural approach is a more useful guide to understanding state behavior[URL] Commander, United States Nav...|$|R
40|$|Within the {{framework}} of the IST project, IMS-NoE (Network of Excellence on Intelligent Manufacturing Systems), financed by the European Commission under the 5 th Framework Programme, a Delphi studywas undertaken with the intent of building a vision on the future of manufacturing with a special focus on the impact of Information and Communication Technologies (ICT) on the next generation of production systems. This paper summarises the results obtained from the Delphi study and proposes a critical analysis in terms of future competitive environment (external drivers), manufacturing enterprise attributes in response to the new market challenges (<b>internal</b> <b>attributes)</b> and key enabling ICT...|$|R
40|$|From his {{analysis}} of American journals, Danziger (1990) concluded that psychology is an enterprise which continually (re) constructs rather than reveals its objects of enquiry. He looked at studies of North American investigators from an ‘individualistic civilisation’ (p. 186) who reproduced a myth of individual behaviour being due to <b>internal</b> <b>attributes</b> of individuals. Our study looks at psychology journals in China - a civilisation based not on individuals in isolation but on deeply rooted social collectivities - {{to see whether the}} discipline has evolved {{in the same way as}} Western psychology upon which Chinese psychologists relied for their initial knowledge. link_to_subscribed_fulltex...|$|R
5000|$|The precise {{hierarchical}} relationship between national literary languages and microlanguages can be ascertained by examining <b>internal</b> <b>attributes,</b> {{such as the}} disparity between strictly enforced standardization {{in the case of}} the former and, {{in the case of the}} latter, a more relaxed standard. The national language often displays a standardized spoken form whereas such a regularity is absent from microlanguages (whose spoken form often consists of divergent dialects.) Likewise, the difference can be seen in external attributes such as extensive [...] and explored genres in the case of national languages, compared to the narrowness of genres and limited functional role of microlanguages.|$|R
40|$|Employee {{satisfaction}} {{has been}} found to have a strong relationship with perceived job security. This study explored job insecurity in an unstable global economy. Specifically, it examined <b>internal</b> <b>attributes</b> of employees, hypothesizing that such attributes would enable employees to better cope with work-related stressors such as job insecurity. Specific attributes of personality and employability were assessed as potential moderators of job satisfaction and security, utilizing the theory of work adjustment and person-environment correspondence as theoretical frameworks. The specific attributes included facets of conscientiousness and neuroticism as well as dispositions of employability including openness to change at work, work and career resilience, work and career proactivity, career motivation, and work identity. Multiple regression tests analyzed the relationship between these <b>internal</b> <b>attributes</b> and both job insecurity and satisfaction on a convenience sample of 100 participants from 2 companies. Participants completed online assessments of the Minnesota Satisfaction Questionnaire; the NEO Personality Inventory, 3 rd edition (NEO-PI- 3); and the Dispositional Measure of Employability. The findings of this study showed significant relationships between both work and career resiliency and vulnerability and both job satisfaction and perceived job security. Employees, employers, and future researchers may benefit from the findings. Results suggest options for improving the work environment by enabling employees to derive greater satisfaction and security and by providing employers areas for training opportunities. Additionally, future research could explore methodologies, such as mindfulness and cognitive appraisal, which may further increase resiliency and decreasing vulnerability...|$|R
50|$|In 1910, aged 55, Fickert {{suffered}} <b>internal</b> pain <b>attributed</b> to organ {{failure and}} died on 9 June at a sanatorium in Maria Ensedorf, Lower Austria. She {{is buried in}} the Neustift am Walde cemetery in Vienna.|$|R
40|$|Abstract — Software metrics {{is applied}} {{evaluating}} and assuring software code quality, {{it requires a}} model to convert <b>internal</b> quality <b>attributes</b> to code reliability. High degree of complexity in a component (function, subroutine, object, class etc.) is bad in comparison to a low degree of complexity in a component. Various <b>internal</b> codes <b>attribute</b> {{which can be used}} to indirectly assess code quality. In this paper, we analyze the software complexity measures for regression testing which enables the tester/developer to reduce software development cost and improve testing efficacy and software code quality. This analysis is based on a static analysis and different approaches presented in the software engineering literature...|$|R
40|$|Abstract Several non {{probabilistic}} approaches were {{proposed in}} the literature to analyze and predict change impact in Object-Oriented (OO) systems. Different aspects were considered in these studies and several experiments were conducted to check some hypotheses. However, causality relation between software <b>internal</b> <b>attributes</b> and change impact still misses convincing explanations. In this paper, we propose a probabilistic approach using Bayesian networks to answer to this problematic of change impact analysis and prediction in OO systems. The built probabilistic model is tested on data extracted from a real system. The running of different scenarios on the network, globally confirm results already found in previous studies. ...|$|R
40|$|Various {{object-oriented}} (OO) coupling metrics {{have been}} proposed for capturing the level of class coupling in object-oriented systems. Since product complexity {{plays a major role}} in determining the quality of software, metrics developed to characterize <b>internal</b> <b>attributes</b> such as coupling need to be validated to determine the usefulness of the measures. In this paper, we present an analysis of some OO coupling metrics. An interaction coupling metric, the modified coupling metric (MCC), is proposed as an extension of coupling between object (CBO) [1] and message passing coupling (MPC) [2]. We also perform a theoretical validation of the suite of OO inheritance coupling metrics proposed in [3] using well-known coupling properties...|$|R
40|$|Thirty-one {{articles}} on community forestry, encompassing 69 case studies worldwide, were reviewed for systematic data synthesis and hypothesis testing. The meta-study identifies 43 independent variables ranging from <b>internal</b> <b>attributes</b> {{of the community}} and resources to external factors. Variables with significant influence on the success of community forestry are tenure security, clear ownership, congruence between biophysical and socioeconomic boundaries of the resources, effective enforcement of rules and regulations, monitoring, sanctioning, strong leadership with capable local organization, expectation of benefits, common interests among community members, and local authority. These variables illustrate community-forest relationships, community ability to organize and continue collective activities, and protection of benefits, rights, and responsibilities in common resource management...|$|R
50|$|The White Horse Hotel is a two {{storeyed}} {{brick building}} on Toowoomba's main street, Ruthven Street. It was erected in several phases with major alterations , {{including a new}} facade and <b>internal</b> refurbishing, <b>attributed</b> to Toowoomba architects, James Marks and Sons.|$|R
40|$|People {{demand for}} {{software}} quality is growing increasingly, thus different scales for the software are growing fast {{to handle the}} quality of software. The software complexity metric {{is one of the}} measurements that use some of the <b>internal</b> <b>attributes</b> or characteristics of software to know how they effect on the software quality. In this paper, we cover some of more efficient software complexity metrics such as Cyclomatic complexity, line of code and Hallstead complexity metric. This paper presents their impacts on the software quality. It also discusses and analyzes the correlation between them. It finally reveals their relation with the number of errors using a real dataset as a case study. Comment: 6 page...|$|R
40|$|Over {{the past}} fifteen years a number of {{transnational}} certification and labeling schemes have emerged with the aim to foster sustainable fisheries and aquaculture practices worldwide. Despite notable successes in the uptake and implementation of these standards, few measurable environmental improvements have been achieved on a global scale to date. This paper explores the conditions for effective governance taking into account external and <b>internal</b> <b>attributes</b> of the relevant rule-setting organizations. The analysis provided in this paper is situated in a broader debate regarding the effectiveness of transnational forms of governance and thereby contributes to recent efforts to build clearer theoretical propositions on the basis of more nuanced theoretically and empirically informed analyses...|$|R
