0|118|Public
5000|$|... ircII was {{the first}} IRC client to {{implement}} <b>Client-to-client</b> <b>protocol</b> (CTCP) and the <b>Direct</b> <b>Client-to-Client</b> (DCC) <b>protocol,</b> and {{was the first}} client to implement file transfer capabilities over IRC. The CTCP protocol was implemented by Michael Sandrof in 1990 for version 2.1. The DCC protocol was implemented by Troy Rollo in 1991 for version 2.1.2, but was never intended to be portable to other IRC clients.|$|R
40|$|We {{introduce}} the Live Objects framework, which leverages our distributed object-oriented programming model and enables tactical edge mashups for battlefield command and control. Unlike most deployed web services, which are typically limited to client-server interactions, Live Objects can simultaneously support multiple patterns of communication, including <b>direct</b> <b>client-to-client</b> <b>protocols.</b> This {{means that when}} clients are forward deployed or accessible only through disadvantaged links, a Live Objects system can remain highly responsive, whereas more standard solutions might slow down precipitously, become unresponsive, or fail outright. Here, we summarize the approach and then suggest that, when using it, {{a new kind of}} Service-Oriented Collaboration (SOC) application can be created that will combine direct clientto-client sharing of imagery, videos, or other real-time data captured in the field, with service-hosted data, including geographic information systems, weather prediction systems, social networks, and other databases. The client-to-client solutions can include powerful new collaboration features implemented t...|$|R
50|$|Technically, IRC {{provides}} no file transfer mechanisms itself; file sharing is implemented by IRC clients, typically using the <b>Direct</b> <b>Client-to-Client</b> (DCC) <b>protocol,</b> in which file transfers are negotiated through {{the exchange of}} private messages between clients. The vast majority of IRC clients feature support for DCC file transfers, hence the view that file sharing is an integral feature of IRC. The commonplace usage of this protocol, however, sometimes also causes DCC spam. DCC commands have also been used to exploit vulnerable clients into performing an action such as disconnecting from the server or exiting the client.|$|R
50|$|XChat is a full-featured Internet Relay Chat client with a {{graphical}} {{user interface}} surrounding the basic chat window. It includes all basic functionality found in most other IRC clients, including nick completion, connecting to multiple servers, secure connections, <b>Client-to-client</b> <b>protocol,</b> <b>Direct</b> <b>Client-to-Client</b> file transfers and chats, and a plugin system for various programming languages (including at least C or C++, Perl, Python, Tcl, Ruby, Lua, CLISP, D, and DMDScript). Plugins allow extending the features and customization of the functionality of XChat.|$|R
50|$|See <b>Direct</b> <b>Client-to-Client.</b>|$|R
50|$|<b>Client-to-client</b> <b>protocol</b> (CTCP) is {{a special}} type of {{communication}} between Internet Relay Chat (IRC) clients.|$|R
50|$|In {{computer}} networking, the Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a message-oriented {{transport layer}} <b>protocol.</b> <b>DCCP</b> implements reliable connection setup, teardown, Explicit Congestion Notification (ECN), congestion control, and feature negotiation. The IETF published DCCP as RFC 4340, a proposed standard, in March 2006. RFC 4336 provides an introduction.|$|R
5000|$|RFC 5238 for {{use with}} Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> ...|$|R
40|$|RTP and the Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> The Real-time Transport Protocol (RTP) is {{a widely}} used {{transport}} for real-time multimedia on IP networks. The Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a transport protocol that provides desirable services for real-time applications. This memo specifies a mapping of RTP onto DCCP, along with associated signalling, such that realtime applications can {{make use of the}} services provided by DCCP...|$|R
5000|$|Stream sockets, {{also known}} as connection-oriented sockets, which use Transmission Control Protocol (TCP), Stream Control Transmission Protocol (SCTP) or Datagram Congestion Control <b>Protocol</b> (<b>DCCP).</b>|$|R
25|$|Floyd {{is also a}} {{co-author}} on {{the standard}} for TCP Selective acknowledgement (SACK), Explicit Congestion Notification (ECN), the Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> and TCP Friendly Rate Control (TFRC).|$|R
50|$|The CuteMX {{client had}} an {{integrated}} version of Windows Media Player. Additional client features included DCC (<b>direct</b> <b>client-to-client)</b> transfer for trusted users and private chat and instant messaging functionality.|$|R
50|$|<b>Direct</b> <b>Client-to-Client</b> (DCC) is an IRC-related sub-protocol {{enabling}} {{peers to}} interconnect using an IRC server for handshaking {{in order to}} exchange files or perform non-relayed chats. Once established, a typical DCC session runs independently from the IRC server. Originally designed {{to be used with}} ircII it is now supported by many IRC clients. Some peer-to-peer clients on napster-protocol servers also have DCC send/get capability, including TekNap, SunshineUN and Lopster. A variation of the DCC protocol called SDCC (Secure <b>Direct</b> <b>Client-to-Client),</b> also known as DCC SCHAT supports encrypted connections. An RFC specification on the use of DCC does not exist.|$|R
50|$|PCP {{supports}} {{transport layer}} protocols that use 16-bit port numbers (for example, TCP, UDP, Stream Control Transmission Protocol (SCTP) or Datagram Congestion Control <b>Protocol</b> (<b>DCCP).</b> <b>Protocols</b> {{that do not}} use port numbers (for example, Resource Reservation Protocol (RSVP), Encapsulating Security Payload (ESP), ICMP or ICMPv6) are supported for IPv4 firewall, IPv6 firewall and NPTv6 (IPv6 prefix translation) functions, but are not supported for any NAT functions.|$|R
40|$|This {{document}} specifies {{an alternative}} encapsulation of the Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> {{referred to as}} DCCP-UDP. This encapsulation allows DCCP to be carried through {{the current generation of}} Network Address Translation (NAT) middleboxes without modification of those middleboxes. This document also updates the Session Description Protocol (SDP) information for DCCP defined in RFC 5762...|$|R
50|$|DCOP (Desktop COmmunication <b>Protocol),</b> a <b>client-to-client</b> {{communications}} <b>protocol</b> intermediated by {{a server}} over the standard X11 ICE library.|$|R
25|$|Historically, TLS {{has been}} used {{primarily}} with reliable transport protocols such as the Transmission Control Protocol (TCP). However, {{it has also been}} implemented with datagram-oriented transport protocols, such as the User Datagram Protocol (UDP) and the Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> usage of which has been standardized independently using the term Datagram Transport Layer Security (DTLS).|$|R
40|$|The Real-time Transport Protocol (RTP) is {{a widely}} used {{transport}} for real-time multimedia on IP networks. The Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a transport protocol that provides desirable services for real-time applications. This memo specifies a mapping of RTP onto DCCP, along with associated signalling, such that real-time applications can {{make use of the}} services provided by DCC...|$|R
50|$|UDP hole {{punching}} is {{a commonly}} used technique employed in network address translator (NAT) applications for maintaining User Datagram Protocol (UDP) packet streams that traverse the NAT. NAT traversal techniques are typically required for client-to-client networking applications on the Internet involving hosts connected in private networks, especially in peer-to-peer, <b>Direct</b> <b>Client-to-Client</b> (DCC) and Voice over Internet Protocol (VoIP) deployments.|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes for the historical record the motivation behind the Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> an unreliable transport protocol incorporating end-to-end congestion control. DCCP implements a congestion-controlled, unreliable flow of datagrams fo...|$|R
40|$|We {{describe}} {{how the new}} Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> {{can be used as}} a bearer for the Real-time Transport Protocol (RTP) to provide a congestion controlled basis for networked multimedia applications. This is a step towards deployment of congestion control for such applications, necessary to ensure the future stability of the best-effort network if high-bandwidth streaming and IPTV services are to be deployed outside of closed QoS-managed networks. 1...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. Itdoes not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes for the historical record the motivation behind the Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> an unreliable transport protocol incorporating end-toend congestion control. DCCP implements a congestion-controlled, unreliable flow of datagrams for use by applications such as streaming media or on-line games...|$|R
40|$|The rapid {{development}} of network technology {{has created a}} multimedia application enters the world of internet. Skype, Yahoo Messenger, Facebook and Line are some examples of applications that provides multimedia features such as free call (VoIP) and video call (video conference) in it. Most of these applications typically use UDP instead of TCP as the transport protocol. The increased of UDP traffic has threaten TCP traffic that appears issues of fairness between the two protocols. In 2006 the IETF introduced a new protocol called Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> CCID 2 and CCID 3. In fact it's almost 8 years {{was introduced to the}} public, such applications are not using DCCP instead of UDP. So the question of performance, fairness and the Quality of Service level arises for multimedia data services between UDP and DCCP. Based on the results of testing the <b>Protocol</b> UDP and <b>DCCP,</b> the results obtained by a comparison of performance test for QoS parameters and based on fairness which found that the overall <b>Protocol</b> <b>DCCP</b> CCID 2 has better performance on bandwidth utilization and fairness for VoIP and video conference data and packet loss for VoIP data and DCCP CCID 3 has better performance on delay and jitter for VoIP and video conference data and packet loss data for video conference data...|$|R
40|$|The Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a {{proposal}} for a new transport <b>protocol.</b> In short, <b>DCCP</b> is an unreliable protocol like UDP, but provides congestion control like TCP. DCCP can be easily extended to support multiple congestion control mechanisms. Currently there are two congestion control mechanisms, TCP-like and TFRC, specified. The goal of this master thesis project was to implement a DCCP module for the Network Simulator (ns) that supports both TCP-like and TFRC congestion control and all features needed for them to function according to the specifications. The resulting module provides a good base for further development and evaluation of the <b>DCCP</b> <b>protocol.</b> Well-defined interfaces enable code reutilisations in future implementations, both for simulation and for real- world usage. This thesis includes, besides a description of the design, discussions and possible solutions to issues found in the specification. Also, simulation results from a comparison between the throughputs of SACK based TCP and TCP- like are presented. Validerat; 20101217 (root...|$|R
50|$|The best-known {{transport}} protocol of TCP/IP is the Transmission Control Protocol (TCP), and lent {{its name to}} the title of the entire suite. It is used for connection-oriented transmissions, whereas the connectionless User Datagram Protocol (UDP) is used for simpler messaging transmissions. TCP is the more complex protocol, due to its stateful design incorporating reliable transmission and data stream services. Other prominent protocols in this group are the Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> and the Stream Control Transmission Protocol (SCTP).|$|R
30|$|The {{unreliable}} tunnel {{also needs}} to incorporate a congestion control mechanism (in order not to fully occupy the link and push the reliable tunnel out). It thus {{needs to be a}} so called network-friendly protocol, which does not guarantee reliability, but throttles itself according to the current network situation. Simple UDP encapsulation, which offers no congestion control, would thus be insufficient for the unreliable tunnel. Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is such a protocol [67, 68], included in the mainline Linux kernel [69, 70] and IPv 6 compatible.|$|R
40|$|Abstract—The two {{transport}} <b>protocols</b> <b>DCCP</b> and UDP-Lite {{can make}} use of data that {{are known to be}} erroneous, provided that the link layer hands over such data. A similar functionality has been suggested for TCP. In order to investigate the potential of these mechanisms in WiFi networks, we carried out a measurement study where we examined how often information about corrupt data reaches the transport layer when the corruption control at the link layer is disabled. Our results suggest that this may be a rare occurrence in certain scenarios. I...|$|R
40|$|Abstract: In a {{traditional}} network stack, data is transmitted {{in the order}} that it is received. An algorithm is proposed where priority of packets and expiry times {{is used by the}} transport layer to reorder or discard packets to optimise the use of available bandwidth. This scheme is implemented and compared to unmodified Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> using traffic modelled on video conferencing software. The results show improvement can be made during periods of congestion –more audio packets arrive on time and inmany cases video packet arrival rates also increase...|$|R
40|$|The two {{transport}} <b>protocols</b> <b>DCCP</b> and UDP-Lite {{can make}} use of data that {{are known to be}} erroneous, provided that the link layer hands over such data. A similar functionality has been suggested for TCP. In order to investigate the potential of these mechanisms in WiFi networks, we carried out a measurement study where we examined how often information about corrupt data reaches the transport layer when the corruption control at the link layer is disabled. Our results suggest that this may be a rare occurrence in certain scenarios...|$|R
40|$|International audienceThe major {{purpose of}} this paper is to {{transmit}} an existing video above a complete simulated video streaming architecture based on Network Simulator (NS 2). Thanks to our architecture, the visual quality evaluation of the distributed streaming platform under various conditions is simplified. Indeed, the received video can be easily visualized using a classic video client or be compared using the Peak Signal-Noise Ratio (PSNR) value and the Structural SIMilarity (SSIM) value. In the case study, we compare adaptive video congestion strategies using a transcoder, Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> and TCP-Friendly Rate Control (TFRC) ...|$|R
40|$|This {{document}} specifies {{an alternative}} encapsulation of the Datagram Congestion Control <b>Protocol</b> (<b>DCCP),</b> {{referred to as}} DCCP-UDP. This encapsulation allows DCCP to be carried through {{the current generation of}} Network Address Translation (NAT) middleboxes without modification of those middleboxes. This document also updates the Session Description Protocol (SDP) information for DCCP defined in RFC 5762. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the &quot;Internet Official Protocol Standards &quot; (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document contains the profile for Congestion Control Identifier 3, TCP-Friendly Rate Control (TFRC), in the Datagram Congestion Control <b>Protocol</b> (<b>DCCP).</b> CCID 3 should be used by senders that want a TCP-friendly sending rate, possibly with Explicit Congestion Notification (ECN), while minimizing abrupt rate changes...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). The Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a transport protocol that provides bidirectional unicast connections of congestion-controlled unreliable datagrams. DCCP is suitable for applications that transfer fairly large amounts of data and that can benefit from control over the tradeoff between timeliness and reliability...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document contains the profile for Congestion Control Identifier 3, TCP-Friendly Rate Control (TFRC), in the Datagram Congestion Control <b>Protocol</b> (<b>DCCP).</b> CCID 3 should be used by senders that want a TCP-friendly sending rate, possibly with Explicit Congestion Notification (ECN), while minimizing abrupt rate changes...|$|R
40|$|The Datagram Congestion Control <b>Protocol</b> (<b>DCCP)</b> is a {{transport}} protocol {{that was developed}} by the IETF to provide an unreliable congestion controlled delivery of data packets. It removes the shortcomings of TCP and UDP for real-time applications, while combining the advantages of both these protocols. In this paper we will study the influence the <b>DCCP</b> <b>protocol</b> has on the end-user quality of video applications. We consider an application that aims to provide a video of constant quality to the user. Since a typical video contains scenes of different complexity, the bit rate produced during the encoding of the scenes will vary in order to achieve the constant quality. We will introduce a model for such a constant quality source and use the Network Simulator NS- 2 to evaluate the end-user quality of the video application in a variety of scenarios when DCCP is used as {{transport protocol}}. ...|$|R
40|$|This {{document}} {{defines a}} set of requirements for NATs handling the Datagram Congestion Control <b>Protocol</b> (<b>DCCP).</b> These requirements allow DCCP applications, such as streaming applications, to operate consistently, {{and they are very}} similar to the TCP requirements for NATs, which have already been published by the IETF. Ensuring that NATs meet this set of requirements will greatly increase the likelihood that applications using DCCP will function properly. Status of This Memo This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements. Distribution of this memo is unlimited. Copyright and License Notice Copyright (c) 2009 IETF Trust and the persons identified as th...|$|R
