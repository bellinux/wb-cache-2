9388|7556|Public
5|$|Instruments and checklists were {{developed}} to structure the processes and decisions of companies for successful corporate development. In this period the main contributors to design management were Michael Farr, Horst Rittel, HfG Ulm, Christopher Alexander, the London Business School, Peter Gorb, the Design Management Institute, and the Royal Society of Arts. Debates in design disciplines were focusing on design science, <b>design</b> <b>methodology,</b> wicked problems, Ulm methodology, new German design, and semiotic and scenario technique.|$|E
500|$|The Pusztai affair is a {{controversy}} {{that began in}} 1998. Protein scientist Árpád Pusztai went public with unpublished research he was conducting at the Rowett Institute with genetically modified potatoes. He claimed that the genetically modified potatoes had stunted growth and repressed the subjects' immune systems, while thickening their gut mucosa. He was severely criticized for making the announcement before the experiment was complete, [...] much less peer-reviewed, and for the experiment's <b>design,</b> <b>methodology</b> and analysis. The study was eventually published, triggering further controversy. Pusztai was suspended and misconduct procedures were used to seize his data and ban him from speaking publicly. The Institute did not renew his annual contract.|$|E
500|$|The term [...] "architectural management" [...] {{was coined}} by the architects Brunton, Baden Hellard and Boobyer in 1964 where they {{highlighted}} {{the tension and}} synergy between the management of individual projects (job management) and {{the management of the}} business (office management). Although they did not use the term [...] "design management", they stressed identical issues; while the design community discussed methodologies for design. Christopher Alexander's work {{played an important role in}} the development of the <b>design</b> <b>methodology,</b> where he devoted his attention to the problems of form and context; and focused on disassembling complex design challenges into constituent parts to approach a solution. His intention was to bring more rationalism and structure into the solving of design problems.|$|E
40|$|Heterogeneous {{integration}} of different technologies is increasingly required in microsystems integration. This entails {{the need of}} both technology development and new <b>design</b> <b>methodologies.</b> This work realized a high-performance Ku-band SiP Doppler radar demonstrator based on the combination of technologies and <b>design</b> <b>methodologies...</b>|$|R
5000|$|Although {{there are}} proven UI <b>design</b> <b>methodologies</b> (like {{the most popular}} [...] "user-centered design", which helps design highly Usable Interfaces), PCD differentiates itself by {{precisely}} catering to business process intensive software {{which has not been}} the case with other UI <b>design</b> <b>methodologies.</b>|$|R
5000|$|... 1982. Information systems <b>design</b> <b>methodologies</b> : a {{comparative}} review : {{proceedings of the}} IFIP WG 8.1 Working Conference on Cooperative Review of Information Systems <b>Design</b> <b>Methodologies,</b> Noordwijkerhout, The Netherlands, 10-14 May 1982. Ed. with T. William Olle and A.A. Verrijn Stuart. North-Holland.|$|R
2500|$|Another way of {{classifying}} algorithms is {{by their}} <b>design</b> <b>methodology</b> or paradigm. There {{is a certain}} number of paradigms, each different from the other. Furthermore, each of these categories include many different types of algorithms. Some common paradigms are: ...|$|E
5000|$|Project of {{sequential}} <b>design</b> <b>methodology</b> (including retrofit) ...|$|E
5000|$|... #Caption: IBM RealPhone—an {{example of}} the RealThings <b>design</b> <b>methodology</b> ...|$|E
5000|$|... 1989. Practical Database <b>Design</b> <b>Methodologies.</b> Kuwait University Press.|$|R
40|$|Software {{reusability}} {{has been}} {{regarded as one of}} the most important areas for improving software development productivity and quality in the 1990 's. The object-oriented approach to information systems development has promised to achieve large-scale software reuse. Objectoriented analysis and <b>design</b> <b>methodologies</b> have aimed at the realization of the promised benefits; however, the degree to which the methodologies support reuse and deliver on this promise is an interesting, open question. This paper investigates how object-oriented analysis and <b>design</b> <b>methodologies</b> support software reusability. It provides an objective comparison of seven object-oriented analysis and <b>design</b> <b>methodologies</b> with respect to the support of software reuse. Several important observations are made based on the comparison. This study provides valuable information to researchers, practitioners and organizations for studying, selection and adoption of object-oriented analysis and <b>design</b> <b>methodologies.</b> 1. INTRODUCT [...] ...|$|R
40|$|Over {{the past}} decades many design process {{models have been}} {{proposed}} in <b>design</b> <b>methodologies,</b> standards, and guidelines. The development of <b>design</b> <b>methodologies</b> is accompanied by an ongoing debate concerning {{the applicability of the}} proposed process models in practice. While many authors highlight the usefulness of <b>design</b> <b>methodologies</b> for training of novices, it is recurrently reported that <b>design</b> <b>methodologies</b> are only seldom applied in design practice. An argument usually produced concerns the abstract character of the <b>design</b> <b>methodologies.</b> While some authors put the whole idea of <b>design</b> <b>methodologies</b> into question, most authors agree that <b>design</b> <b>methodologies</b> are useful but need further development in order to enhance their applicability. Currently there are two main axes for further development of design methodologies: the rising interdisciplinarity in design practice which is not sufficiently addressed in the rather mono-disciplinary <b>design</b> <b>methodologies</b> and the adaptation of <b>design</b> <b>methodologies</b> to different contexts, which is recommended by many authors but lacks a systematic support. This paper addresses the adaptation of a generic design approach to different contexts. The main research question concerns the rationale behind the adaptation. The paper reports a case study in the space industry. The case study is based on a document study, a series of expert interviews and draws from the experience of one of the authors involved in the company. The study compares the design processes of four projects, which show some major differences requiring an adaptation of the particular design approach. The design processes in the company are based on the ECSS (European Cooperation for Space Standardization) standards. The compliance with the processes and practices prescribed in these standards is mandatory for many projects. However, some projects allowed an adaptation of the design approach. It was found that the adaption respectively the tailoring of the design process as prescribed in the ECSS-standards, was driven, when allowed, by risks, costs, and contracting-partners associated with the project. In order to provide some guidance for future projects the company introduced a project categorization scheme which recommends a suitable approach for each project category. The analysis of the categorization scheme and the particular consequences for adaptation in the company allow drawing conclusions about the rationale of design process adaptation in practice, thus contributes to the debate on the applicability of <b>design</b> <b>methodologies</b> and generic <b>design</b> process models and provides some ideas for the support of a context dependent adaptation thereof...|$|R
5000|$|Structured systems {{analysis}} and <b>design</b> <b>methodology</b> - à la Yourdon ...|$|E
5000|$|... #Subtitle level 2: Meta-design: a <b>design</b> <b>methodology</b> {{supporting}} participatory cultures ...|$|E
5000|$|Planning {{technology}} for schools: A <b>design</b> <b>methodology.</b> — Ed' Tech 98 ...|$|E
40|$|Development of web {{applications}} {{is closely}} associated with testing. This master's thesis deals with the domain of testing. The goal of this thesis is to <b>design</b> a <b>methodology</b> of testing of web applications for small software company. The <b>designed</b> <b>methodology</b> results from OpenUP methodology and author's work experience. First, the theoretical part of this thesis is devoted to testing, history of testing and introduces several approaches to testing. Next, the theoretical part focuses on web applications and its specifics in light of testing. In {{view of the fact}} that the <b>designed</b> <b>methodology</b> is inspired by OpenUP methodology, this methodology including its basic principles and components is introduced in next separate chapter. The largest chapter describes the <b>designed</b> <b>methodology</b> of testing of web applications and its basic components: roles, activities and artifacts. Also errors and their lifecycles are examined. The thesis is concluded by a short muse upon the aspects of the implementation of the <b>designed</b> <b>methodology</b> in the environment of small company...|$|R
40|$|Graduation date: 1985 The rapid {{development}} of semiconductor {{technology and the}} increasing complexity of VLSI chips have prompted both the industry and the academic community alike to take an indepth look at the VLSI design problem. Many <b>design</b> <b>methodologies</b> have been proposed and associated computer-aided tools developed. This thesis is a study of current <b>design</b> <b>methodologies</b> {{including some of the}} computer tools developed to support these methodologies. The concept of a VLSI design space was presented and some design concepts were discussed. The <b>design</b> <b>methodologies</b> looked at included Computer-Aided Design (CAD) systems, Expert Systems and Design Automation systems...|$|R
40|$|Recently, many web {{application}} frameworks {{have been developed}} to simplify the creation of new web sites. However, in the light of well-established web <b>design</b> <b>methodologies</b> such as RMM or OOHDM, these methodologies often fail to close the gap between design and implementation. In this paper, we analyze the elements of several <b>design</b> <b>methodologies</b> in order to classify and group them. We then introduce our Context-Based Navigation web design framework (COBANA) and show how its different parts reify the various concepts of the <b>design</b> <b>methodologies,</b> therefore allowing a 1 -to- 1 translation from design to implementation. Finally, we compare our framework with related work...|$|R
5000|$|Component-based <b>design</b> <b>methodology</b> {{enabling}} {{a design}} once, reuse many times development approach.|$|E
5000|$|Constructionist <b>design</b> <b>{{methodology}},</b> {{a methodology}} for creating modular, broad Artificial Intelligence systems ...|$|E
5000|$|SSADM - Structured Systems Analysis and <b>Design</b> <b>Methodology</b> (used in {{software}} engineering) ...|$|E
40|$|This paper {{describes}} {{research in}} progress whose {{goal is to}} synthesize <b>design</b> <b>methodologies</b> for rapid product development in multi-disciplinary design situations. The potential outcome is superior <b>design</b> <b>methodologies</b> that facilitate integration and collaboration between different disciplines, conduct design tasks concurrently, and apply {{to a wide range}} of design problems, thus reducing costs and time-to-market...|$|R
5000|$|... {{development}} of the <b>designing</b> <b>methodology,</b> construction {{and management of the}} UFOCL projects; ...|$|R
40|$|International audienceDesign {{techniques}} for three-dimensional (3 -D) ICs considerably lag the significant strides achieved in 3 -D manufacturing technologies. Advanced <b>design</b> <b>methodologies</b> for 2 -D circuits {{are not sufficient}} to manage the added complexity caused by the third dimension. Consequently, <b>design</b> <b>methodologies</b> that efficiently handle the added complexity and inherent heterogeneity of 3 -D circuits are necessary. These 3 -D <b>design</b> <b>methodologies</b> should support robust and reliable 3 -D circuits, while considering different forms of vertical integration, such as systems-in-package and 3 -D ICs with fine grain vertical interconnections. The techniques described in this chapter address important physical design issues and fundamental interconnect structures in the 3 -D design process...|$|R
50|$|Depending on the <b>design</b> <b>methodology</b> being followed, {{the actual}} {{definition}} of a floorplan may differ.|$|E
5000|$|In 2002, Everest Group opens {{an office}} in Toronto. Everest Group {{implements}} Joint <b>Design</b> <b>methodology.</b>|$|E
5000|$|Another {{approach}} is to restrict <b>design</b> <b>methodology</b> to certain classes of floorplans, such as sliceable floorplans.|$|E
40|$|We {{consider}} {{the problem of}} state-feedback stabilization for a class of sandwich systems, consisting of two linear systems connected in cascade via a saturation. In particular, we present <b>design</b> <b>methodologies</b> for constructing semiglobally and globally stabilizing controllers for such systems when the input is itself subject to saturation. The design is carried out under a set of assumptions that are proven to be both necessary and sufficient. The presented <b>design</b> <b>methodologies</b> are extensions of classical low-gain <b>design</b> <b>methodologies</b> developed for stabilizing linear systems subject to input saturation. The methodologies can be further extended to multilayer sandwich systems, consisting of an arbitrary number of cascaded linear systems with saturations sandwiched between them...|$|R
40|$|Software <b>design</b> <b>methodologies</b> were {{introduced}} to manage the scale of complex systems built in imperative languages under demanding work conditions. To some degree, declarative notations have been ignored for systems building because they lack similar <b>design</b> <b>methodologies.</b> Methodologies useful to object-orientation, namely, software architectures, design patterns, reusable libraries, and programming frameworks, are proposed as a model to be imitated by the declarative programming community. The resulting "declarative design methodology" would hasten the reapplication of declarative notations to mainstream software design and implementation. 1 An Evolution of Programming Certainly, {{there is no shortage}} of <b>design</b> <b>methodologies</b> for software, but at some point after the requirements descriptions, entity-relationship diagrams, and lifecycle models have been written, a programmer must convert descriptions into reality [...] -into actual programs. In recent years, this final stage [...] -t [...] ...|$|R
40|$|International audienceThis paper {{presents}} a VHDL specification methodology aimed to extend structured <b>design</b> <b>methodologies</b> to the behavioral level. The {{goal is to}} develop VHDL modeling strategies in order to master the design and analysis of large and complex systems. Structured <b>design</b> <b>methodologies</b> are combined with AMICAL, a VHDL based behavioral synthesis tool, {{in order to allow}} hierarchical design and component re-use...|$|R
50|$|URDAD, the Use Case Driven Analysis and <b>Design</b> <b>{{methodology}}</b> is {{a methodology}} for technology neutral design.|$|E
5000|$|To offer e-Training in Electronics, In HB {{information}} Technology and Industrial <b>Design</b> <b>methodology</b> {{and production}} technique ...|$|E
50|$|Joining LSI Logic, {{he became}} a CAD {{methodologist}} implementing the then novel register-transfer level (RTL) <b>design</b> <b>methodology.</b>|$|E
5000|$|Human-Computer Interaction User-Centered <b>Design</b> <b>Methodologies,</b> Interfaces and Information Visualization Systems, Mobile App Design, Digital Fabrication.|$|R
40|$|Signal {{integrity}} {{has become}} a first-order concern in System-on-a-Chip (SoC) design. As a result, SoC <b>design</b> <b>methodologies</b> need to be fundamentally transformed. A key step in this transformation {{is the development of}} techniques to enhance block reuse while accounting for signal integrity. In this paper we describe how the standards work pursued at the Virtual Socket Interface Alliance’s Signal Integrity initiative integrates with SoC <b>design</b> <b>methodologies</b> and enhances block reuse...|$|R
40|$|Challenges {{resulting}} from an environment characterised by complexity, competition on global markets, dynamics and ever-changing user {{wants and needs}} are increasing and affect all design processes, irrespective of whether the product or system designed is a machine, a building, software, service, etc [...] These challenges require collaboration between disciplines, but current design processes of large systems, such as aircraft, essentially show separate development strands for each discipline. Research into methods is ongoing, but the original <b>design</b> <b>methodologies</b> have not been adapted accordingly. Based on a literature study this paper consolidates findings from different comparisons of <b>design</b> <b>methodologies</b> and process models across disciplines. A consensus can be found that at least on an abstract level design process models have a generic core of common stages. On a detailed level the picture is different. The extent to which design approaches appear similar depends on {{the perspective of the}} analyses. The literature study provides an overview of shortcomings of existing <b>design</b> <b>methodologies</b> which may serve as starting points for further research and development of <b>design</b> <b>methodologies...</b>|$|R
