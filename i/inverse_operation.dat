251|190|Public
5|$|Given a {{set with}} an {{addition}} operation, one cannot always define a corresponding subtraction operation on that set; {{the set of}} natural numbers is a simple example. On the other hand, a subtraction operation uniquely determines an addition operation, an additive <b>inverse</b> <b>operation,</b> and an additive identity; for this reason, an additive group {{can be described as}} a set that is closed under subtraction.|$|E
25|$|The two's {{complement}} {{operation is}} the additive <b>inverse</b> <b>operation,</b> so negative numbers {{are represented by}} the two's complement of the absolute value.|$|E
25|$|The <b>inverse</b> <b>operation</b> of {{multiplication}} is division. For example, since 4 {{multiplied by}} 3 equals 12, then 12 divided by 3 equals 4. Multiplication by 3, followed by division by 3, yields the original number (since {{the division of}} a number other than 0 by itself equals 1).|$|E
30|$|The time of {{executing}} a modular <b>inverses</b> <b>operation.</b>|$|R
3000|$|... {{rounds of}} data {{extraction}} and <b>inverse</b> <b>operations</b> of histogram shifting, the hidden {{data can be}} extracted perfectly and the original ciphertext image E [I] can be restored.|$|R
3000|$|The dynamic {{relaxation}} {{method is}} applicable in form-finding process of form-fixed spatial network structure, which avoids the <b>inverse</b> <b>operations</b> on complicated stiffness matrices in each step; [...]...|$|R
25|$|The {{difference}} between {{left and right}} actions is in {{the order in which}} a product like gh acts on x. For a left action h acts first and is followed by g, while for a right action g acts first and is followed by h. Because of the formula , one can construct a left action from a right action by composing with the <b>inverse</b> <b>operation</b> of the group. Also, a right action of a group G on X is the same thing as a left action of its opposite group Gop on X. It is thus sufficient to only consider left actions without any loss of generality.|$|E
500|$|... in a (large) finite field [...] can be {{performed}} much more efficiently than the discrete logarithm, which is the <b>inverse</b> <b>operation,</b> i.e., determining the solution [...] to an equation ...|$|E
500|$|In mathematics, the {{logarithm}} is the <b>inverse</b> <b>operation</b> to exponentiation, just as {{division is}} the inverse of multiplication and vice versa. That means the logarithm {{of a number}} is the exponent to which another fixed number, the base, must be raised to produce that number. In simple cases the logarithm counts factors in [...] multiplication. For example, the base [...] logarithm of [...] is , as [...] to the power [...] is [...] (...) 10 {{is used as a}} factor three times. [...] More generally, exponentiation allows any positive real number to be raised to any real power, always producing a positive result, so the logarithm can be calculated for any two positive real numbers [...] and [...] where [...] is not equal to [...] The logarithm of [...] to base , denoted [...] (or [...] when no confusion is possible), is the unique real number [...] such that [...] For example, , as [...]|$|E
5000|$|Raising {{and then}} {{lowering}} the same index (or conversely) are <b>inverse</b> <b>operations,</b> which {{is reflected in}} the covariant and contravariant metric tensors being inverse to each other: ...|$|R
40|$|A set of {{recoverability}} {{theory is}} derived {{in this paper}} for an object-based database. Instead of considering serializability and recoverability as two orthogonal concepts, we simply keep serializability as the only correctness criterion and require serializability to be maintained even when failures of transactions may occur. Based on this fundamental notion of correctness, the definition of recoverability is derived. The recoverability theory derived {{in this way is}} a generalization of the traditional recoverability theory in the read/write model. In addition, we find that the set of strict histories depends on the strength of the <b>inverse</b> <b>operations</b> being used to cancel the effects of aborted operations. At one extreme, when the strongest <b>inverse</b> <b>operations</b> are used, the set of strict histories {{is the same as the}} set of avoid cascading aborts histories. At the other extreme, when the weakest <b>inverse</b> <b>operations</b> are used, the set of strict histories is the same as the set of rigorous his [...] ...|$|R
3000|$|... [...]. It {{is clear}} that {{uncertain}} integral and differential are mutually <b>inverse</b> <b>operations.</b> Please also note that an uncertain differential of an uncertain process has two parts, the “ dt” part and the “ dC [...]...|$|R
2500|$|IP3: Given two {{concurrent}} operations [...] and [...] defined on {{the same}} document state (or context), if [...] and [...] The transformation functions satisfy the property IP3 {{if and only if}} , which means that the transformed <b>inverse</b> <b>operation</b> [...] is equal to the inverse of the transformed operation [...] IP3 precondition: IP3 is required only if the OT system allows an <b>inverse</b> <b>operation</b> [...] to be transformed against an operation [...] that is concurrent and defined {{on the same}} document state as (or context-equivalent to) [...]|$|E
2500|$|... "That {{quantity}} whose {{variation is}} uniform [...] [...] [...] {{is called the}} independent variable. That quantity whose variation is referred to the variation of the former {{is said to be}} a function of it. The Differential calculus enables us in every case to pass from the function to the limit. This it does by a certain Operation. But in the very Idea of an Operation is [...] [...] [...] the idea of an <b>inverse</b> <b>operation.</b> To effect that <b>inverse</b> <b>operation</b> in the present instance is the business of the Int Calculus." ...|$|E
2500|$|Cardiac input (CI) is the <b>inverse</b> <b>operation</b> {{of cardiac}} output. [...] As cardiac output implies the {{volumetric}} expression of ejection fraction, cardiac input implies the volumetric injection fraction (IF).|$|E
30|$|In the {{proposed}} scheme, data extraction and image restoration {{can be completed}} together by <b>inverse</b> <b>operations</b> of histogram shifting. For a receiver, {{there are two ways}} to extract the hidden data and restore original ciphertext image or plaintext image.|$|R
3000|$|Since the AFD and the {{proposed}} algorithm use the same matrix <b>inverse</b> <b>operations,</b> which consist {{of the most significant}} part of the computation, to compute the gradient of the objective values, both algorithms have similar computational complexity O(m [...]...|$|R
50|$|New-diagram in-zooming elaborates a refineable {{present in}} an {{existing}} OPD, say SDn, {{by creating a}} new OPD, SDn+1, which elaborates the refineable by adding subprocesses associated objects, and relevant links. The new-diagram in-zooming and in new-diagram out-zooming processes are <b>inverse</b> <b>operations.</b>|$|R
2500|$|While [...] can be {{computed}} very quickly, {{for example}} using exponentiation by squaring, {{there is no}} known efficient algorithm for computing the <b>inverse</b> <b>operation,</b> the discrete logarithm. This {{has been used in}} various cryptographic protocols, see Discrete logarithm for details.|$|E
2500|$|The {{indefinite}} integral, {{also known}} as the antiderivative, is the <b>inverse</b> <b>operation</b> to the derivative. [...] is an indefinite integral of [...] when [...] is a derivative of [...] [...] (This use of lower- and upper-case letters for a function and its indefinite integral is common in calculus.) ...|$|E
2500|$|Shannon {{correctly}} wrote, [...] "The receiver ordinarily {{performs the}} <b>inverse</b> <b>operation</b> of that {{done by the}} transmitter, reconstructing the message from the signal." [...] But conduit metaphorisms continue {{to appear in the}} form of [...] "encode" [...] and [...] "decode," [...] defined as putting the repertoire members into code and taking them out, respectively. In addition, because the theory conceives of information as the ability to copy an organization via nonrandom selections, the term [...] "information content" [...] is itself a misnomer: signals do something but cannot contain anything. The conduit metaphor has thus influenced the thinking of information theorists in a counterproductive way.|$|E
3000|$|... where c_ 1 ^w(k)·Θ _g in Eq. (37) {{is equal}} to g^P_ 1 ^w(k)- 1 · r_ 1 (k)^N and c_ 2 ^w(k)·Θ _g in Eq. (39) {{is equal to}} g^P_ 2 ^w(k)- 1 · r_ 1 (k)^N.Therefore, <b>inverse</b> <b>operations</b> of {{histogram}} shifting can be implemented.|$|R
30|$|In the {{transformation}} stage, the test utterances of source speaker are pre-processed in the similar {{way as the}} training stage to get the separate feature vectors for magnitude and phase information of filtered coefficients. Then, the transformed coefficients are obtained by projecting coefficients through the separate trained models. Afterwards, <b>inverse</b> mathematical <b>operations</b> such as <b>Inverse</b> Discrete Cosine Transform (IDCT) and antilog are applied to the transformed coefficients analogous to operations performed in the training phase. The time domain speech frames are computed in the inverse filtering stage and combined using overlap-add technique. The use of post filtering followed by <b>inverse</b> <b>operations</b> ensures the good quality of the converted speech signal.|$|R
40|$|This article {{presents}} a theoretical framework, called PEI, {{which is a}} foundation for data parallel programming. This formalism lies on a small but powerful set of primitives : they are operations on data fields and <b>inverse</b> <b>operations.</b> They induce a clear refinement calculus to transform specifications in executable programs by ensuring a safe process of program design, program transformation or code optimization...|$|R
5000|$|... {{for every}} operation, {{there is an}} <b>inverse</b> <b>operation</b> with equal cost.|$|E
5000|$|Then {{subtraction}} is the <b>inverse</b> <b>operation</b> of addition, defined entrywise by: ...|$|E
50|$|An {{asterisk}} * superscript {{is effectively}} an <b>inverse</b> <b>operation,</b> creating radical subgroups removing connected of odd-ordered mirrors.|$|E
40|$|We {{present a}} new {{technique}} for verifying commutativity conditions, which are logical for-mulas that characterize when operations commute. Because our technique reasons with the abstract state of verified linked data structure implementations, it can verify commuting operations that produce semantically equivalent (but not necessarily identical) data struc-ture states in different execution orders. We have used this technique to verify sound and complete commutativity conditions for all pairs of operations on a collection of linked data structure implementations, including data structures that export a set interface (ListSet and HashSet) as well as data structures that export a map interface (AssociationList, HashTable, and ArrayList). This effort involved the specification and verification of 765 commutativity conditions. Many speculative parallel systems need to undo the effects of speculatively executed <b>operations.</b> <b>Inverse</b> <b>operations,</b> which undo these effects, are often more efficient than alternate approaches (such as saving and restoring data structure state). We present {{a new technique}} for verifying such <b>inverse</b> <b>operations.</b> We have specified and verified, for all o...|$|R
50|$|The speech encoder accepts 13 bit linear PCM at an 8 kHz sample rate.This can be {{direct from}} an analog-to-digital {{converter}} {{in a phone}} or computer, or converted from G.711 8-bit nonlinear A-law or μ-law PCM from the PSTN with a lookup table.In GSM, the encoded speech is passed to the channel encoder specified in GSM 05.03. In the receive direction, the <b>inverse</b> <b>operations</b> take place.|$|R
40|$|In {{this work}} we {{characterize}} shift spaces over infinite countable alphabets {{that can be}} endowed with an <b>inverse</b> semigroup <b>operation.</b> We give sufficient conditions under which zero-dimensional inverse semigroups can be recoded as shift spaces whose correspondent <b>inverse</b> semigroup <b>operation</b> is a 1 -block operation, that is, it arises from a group operation on the alphabet. Motivated by this, we go on to study block operations on shift spaces and, in the end, we prove our main theorem, which states that Markovian shift spaces, which can be endowed with a 1 -block <b>inverse</b> semigroup <b>operation,</b> are conjugate to {{the product of a}} full shift with a fractal shift. Comment: 38 pages, 1 figur...|$|R
50|$|In mathematics, {{blowing down}} {{is a type}} of {{geometric}} modification in algebraic geometry. It is the <b>inverse</b> <b>operation</b> of blowing up.|$|E
50|$|All four {{quantities}} are integers, {{and only}} p may be 0. This definition ensures that division is the <b>inverse</b> <b>operation</b> of multiplication.|$|E
50|$|The two's {{complement}} {{operation is}} the additive <b>inverse</b> <b>operation,</b> so negative numbers {{are represented by}} the two's complement of the absolute value.|$|E
3000|$|... [...]. Finally, the {{original}} image Y is completely recovered from E {{by using the}} <b>inverse</b> prediction <b>operations.</b>|$|R
50|$|As {{is common}} to all digital {{communication}} systems, the design of both the modulator and demodulator must be done simultaneously. Digital modulation schemes are possible because the transmitter-receiver pair has prior knowledge of how data is encoded and represented in the communications system. In all digital communication systems, both the modulator at the transmitter and the demodulator at the receiver are structured so that they perform <b>inverse</b> <b>operations.</b>|$|R
40|$|Reduction {{is one of}} {{the major}} issues in data {{parallel}} languages: it can be defined as a rule of program refinement. This article presents a theoretical framework, called Pei, the foundation of a formalism for parallel programming, where this rule can easily be expressed and applied. This formalism is founded on a small but powerful set of primitives: they are three operations on data fields and <b>inverse</b> <b>operations.</b> They induc...|$|R
